Search.setIndex({"alltitles": {"API Reference": [[483, null]], "Adding and removing elements": [[487, "adding-and-removing-elements"]], "Arithmetic": [[492, "arithmetic"]], "Arithmetic operations": [[488, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[490, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[484, null]], "Array Manipulation Routines": [[487, null]], "Array attributes": [[490, "array-attributes"]], "Array conversion": [[490, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[490, "array-methods"]], "Array type testing": [[486, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[498, "available-ufuncs"]], "Averages and variances": [[497, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[487, "basic-operations"]], "Basics": [[492, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[498, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[490, "calculation"]], "Changing array shape": [[487, "changing-array-shape"]], "Changing kind of array": [[487, "changing-kind-of-array"]], "Changing number of dimensions": [[487, "changing-number-of-dimensions"]], "Comparison": [[486, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[498, "comparison-functions"]], "Constructing arrays": [[490, "constructing-arrays"]], "Correlations": [[497, "correlations"]], "Counting": [[495, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[490, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[485, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[493, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[496, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[488, "exponents-and-logarithms"]], "Extrema finding": [[488, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[498, "floating-functions"]], "Floating point routines": [[488, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[484, "generating-index-arrays"]], "Handling complex numbers": [[488, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[497, "histograms"]], "Hyperbolic functions": [[488, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[490, "indexing-arrays"]], "Indexing-like operations": [[484, "indexing-like-operations"]], "Infinities and NaNs": [[486, "infinities-and-nans"]], "Inserting data into arrays": [[484, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[490, "item-selection-and-manipulation"]], "Iterating over arrays": [[484, "iterating-over-arrays"]], "Joining arrays": [[487, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [485, null]], "Logic Functions": [[486, null]], "Logic operations": [[486, "logic-operations"]], "Math operations": [[498, "math-operations"]], "Mathematical functions": [[488, null]], "Matrix and vector products": [[485, "matrix-and-vector-products"]], "Matrix eigenvalues": [[485, "matrix-eigenvalues"]], "Memory layout": [[490, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [488, "miscellaneous"]], "Miscellaneous routines": [[489, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[490, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[485, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[497, "order-statistics"]], "Other attributes": [[490, "other-attributes"]], "Other special functions": [[488, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[491, null]], "Permutations": [[493, "permutations"]], "Poly1d": [[492, "poly1d"]], "Polynomial Module": [[492, "polynomial-module"]], "Polynomial Package": [[492, "polynomial-package"]], "Polynomials": [[492, null]], "Polyutils": [[492, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[493, null]], "Random generator": [[493, "random-generator"]], "Rational routines": [[488, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[487, "rearranging-elements"]], "Rounding": [[488, "rounding"]], "Routines": [[494, null]], "Searching": [[495, "searching"]], "Shape manipulation": [[490, "shape-manipulation"]], "Simple random data": [[493, "simple-random-data"]], "Solving linear equations": [[485, "solving-linear-equations"]], "Sorting": [[495, "sorting"]], "Sorting, Searching, and Counting": [[495, null]], "Special Functions": [[496, null]], "Special methods": [[490, "special-methods"]], "Splitting arrays": [[487, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[497, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[488, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[487, "tiling-arrays"]], "Transpose-like operations": [[487, "transpose-like-operations"]], "Trigonometric functions": [[488, "trigonometric-functions"], [498, "trigonometric-functions"]], "Truth value testing": [[486, "truth-value-testing"]], "Universal Functions (ufunc)": [[498, null]], "Utility": [[489, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_not": [[59, null]], "dpnp.bitwise_or": [[60, null]], "dpnp.bitwise_xor": [[61, null]], "dpnp.broadcast_arrays": [[62, null]], "dpnp.broadcast_to": [[63, null]], "dpnp.can_cast": [[64, null]], "dpnp.cbrt": [[65, null]], "dpnp.ceil": [[66, null]], "dpnp.choose": [[67, null]], "dpnp.clip": [[68, null]], "dpnp.column_stack": [[69, null]], "dpnp.concatenate": [[70, null]], "dpnp.conj": [[71, null]], "dpnp.conjugate": [[72, null]], "dpnp.convolve": [[73, null]], "dpnp.copy": [[74, null]], "dpnp.copysign": [[75, null]], "dpnp.copyto": [[76, null]], "dpnp.correlate": [[77, null]], "dpnp.cos": [[78, null]], "dpnp.cosh": [[79, null]], "dpnp.count_nonzero": [[80, null]], "dpnp.cov": [[81, null]], "dpnp.cross": [[82, null]], "dpnp.cumlogsumexp": [[83, null]], "dpnp.cumprod": [[84, null]], "dpnp.cumsum": [[85, null]], "dpnp.deg2rad": [[86, null]], "dpnp.degrees": [[87, null]], "dpnp.diag": [[88, null]], "dpnp.diag_indices": [[89, null]], "dpnp.diag_indices_from": [[90, null]], "dpnp.diagflat": [[91, null]], "dpnp.diagonal": [[92, null]], "dpnp.diff": [[93, null]], "dpnp.digitize": [[94, null]], "dpnp.divide": [[95, null]], "dpnp.dot": [[96, null]], "dpnp.dpnp_array.dpnp_array": [[97, null]], "dpnp.dsplit": [[98, null]], "dpnp.dstack": [[99, null]], "dpnp.dtype": [[100, null]], "dpnp.ediff1d": [[101, null]], "dpnp.einsum": [[102, null]], "dpnp.einsum_path": [[103, null]], "dpnp.empty": [[104, null]], "dpnp.empty_like": [[105, null]], "dpnp.equal": [[106, null]], "dpnp.erf": [[107, null]], "dpnp.exp": [[108, null]], "dpnp.exp2": [[109, null]], "dpnp.expand_dims": [[110, null]], "dpnp.expm1": [[111, null]], "dpnp.extract": [[112, null]], "dpnp.eye": [[113, null]], "dpnp.fabs": [[114, null]], "dpnp.fft.fft": [[115, null]], "dpnp.fft.fft2": [[116, null]], "dpnp.fft.fftfreq": [[117, null]], "dpnp.fft.fftn": [[118, null]], "dpnp.fft.fftshift": [[119, null]], "dpnp.fft.hfft": [[120, null]], "dpnp.fft.ifft": [[121, null]], "dpnp.fft.ifft2": [[122, null]], "dpnp.fft.ifftn": [[123, null]], "dpnp.fft.ifftshift": [[124, null]], "dpnp.fft.ihfft": [[125, null]], "dpnp.fft.irfft": [[126, null]], "dpnp.fft.irfft2": [[127, null]], "dpnp.fft.irfftn": [[128, null]], "dpnp.fft.rfft": [[129, null]], "dpnp.fft.rfft2": [[130, null]], "dpnp.fft.rfftfreq": [[131, null]], "dpnp.fft.rfftn": [[132, null]], "dpnp.fill_diagonal": [[133, null]], "dpnp.finfo": [[134, null]], "dpnp.fix": [[135, null]], "dpnp.flatiter": [[136, null]], "dpnp.flatnonzero": [[137, null]], "dpnp.flip": [[138, null]], "dpnp.fliplr": [[139, null]], "dpnp.flipud": [[140, null]], "dpnp.float_power": [[141, null]], "dpnp.floor": [[142, null]], "dpnp.floor_divide": [[143, null]], "dpnp.fmax": [[144, null]], "dpnp.fmin": [[145, null]], "dpnp.fmod": [[146, null]], "dpnp.from_dlpack": [[147, null]], "dpnp.frombuffer": [[148, null]], "dpnp.fromfile": [[149, null]], "dpnp.fromfunction": [[150, null]], "dpnp.fromiter": [[151, null]], "dpnp.fromstring": [[152, null]], "dpnp.full": [[153, null]], "dpnp.full_like": [[154, null]], "dpnp.geomspace": [[155, null]], "dpnp.get_include": [[156, null]], "dpnp.gradient": [[157, null]], "dpnp.greater": [[158, null]], "dpnp.greater_equal": [[159, null]], "dpnp.heaviside": [[160, null]], "dpnp.histogram": [[161, null]], "dpnp.histogram_bin_edges": [[162, null]], "dpnp.hsplit": [[163, null]], "dpnp.hstack": [[164, null]], "dpnp.hypot": [[165, null]], "dpnp.identity": [[166, null]], "dpnp.iinfo": [[167, null]], "dpnp.imag": [[168, null]], "dpnp.indices": [[169, null]], "dpnp.inner": [[170, null]], "dpnp.invert": [[171, null]], "dpnp.isclose": [[172, null]], "dpnp.iscomplex": [[173, null]], "dpnp.iscomplexobj": [[174, null]], "dpnp.isfinite": [[175, null]], "dpnp.isinf": [[176, null]], "dpnp.isnan": [[177, null]], "dpnp.isneginf": [[178, null]], "dpnp.isposinf": [[179, null]], "dpnp.isreal": [[180, null]], "dpnp.isrealobj": [[181, null]], "dpnp.isscalar": [[182, null]], "dpnp.issubdtype": [[183, null]], "dpnp.ix_": [[184, null]], "dpnp.kron": [[185, null]], "dpnp.left_shift": [[186, null]], "dpnp.less": [[187, null]], "dpnp.less_equal": [[188, null]], "dpnp.linalg.cholesky": [[189, null]], "dpnp.linalg.cond": [[190, null]], "dpnp.linalg.det": [[191, null]], "dpnp.linalg.eig": [[192, null]], "dpnp.linalg.eigh": [[193, null]], "dpnp.linalg.eigvals": [[194, null]], "dpnp.linalg.eigvalsh": [[195, null]], "dpnp.linalg.inv": [[196, null]], "dpnp.linalg.lstsq": [[197, null]], "dpnp.linalg.matrix_power": [[198, null]], "dpnp.linalg.matrix_rank": [[199, null]], "dpnp.linalg.multi_dot": [[200, null]], "dpnp.linalg.norm": [[201, null]], "dpnp.linalg.pinv": [[202, null]], "dpnp.linalg.qr": [[203, null]], "dpnp.linalg.slogdet": [[204, null]], "dpnp.linalg.solve": [[205, null]], "dpnp.linalg.svd": [[206, null]], "dpnp.linalg.tensorinv": [[207, null]], "dpnp.linalg.tensorsolve": [[208, null]], "dpnp.linspace": [[209, null]], "dpnp.loadtxt": [[210, null]], "dpnp.log": [[211, null]], "dpnp.log10": [[212, null]], "dpnp.log1p": [[213, null]], "dpnp.log2": [[214, null]], "dpnp.logaddexp": [[215, null]], "dpnp.logaddexp2": [[216, null]], "dpnp.logical_and": [[217, null]], "dpnp.logical_not": [[218, null]], "dpnp.logical_or": [[219, null]], "dpnp.logical_xor": [[220, null]], "dpnp.logspace": [[221, null]], "dpnp.logsumexp": [[222, null]], "dpnp.mask_indices": [[223, null]], "dpnp.matmul": [[224, null]], "dpnp.max": [[225, null]], "dpnp.maximum": [[226, null]], "dpnp.mean": [[227, null]], "dpnp.median": [[228, null]], "dpnp.meshgrid": [[229, null]], "dpnp.mgrid": [[230, null]], "dpnp.min": [[231, null]], "dpnp.minimum": [[232, null]], "dpnp.mod": [[233, null]], "dpnp.modf": [[234, null]], "dpnp.moveaxis": [[235, null]], "dpnp.multiply": [[236, null]], "dpnp.nan_to_num": [[237, null]], "dpnp.nanargmax": [[238, null]], "dpnp.nanargmin": [[239, null]], "dpnp.nancumprod": [[240, null]], "dpnp.nancumsum": [[241, null]], "dpnp.nanmax": [[242, null]], "dpnp.nanmean": [[243, null]], "dpnp.nanmin": [[244, null]], "dpnp.nanprod": [[245, null]], "dpnp.nanstd": [[246, null]], "dpnp.nansum": [[247, null]], "dpnp.nanvar": [[248, null]], "dpnp.ndarray": [[249, null]], "dpnp.ndarray.T": [[250, null]], "dpnp.ndarray.__abs__": [[251, null]], "dpnp.ndarray.__add__": [[252, null]], "dpnp.ndarray.__and__": [[253, null]], "dpnp.ndarray.__bool__": [[254, null]], "dpnp.ndarray.__complex__": [[255, null]], "dpnp.ndarray.__copy__": [[256, null]], "dpnp.ndarray.__eq__": [[257, null]], "dpnp.ndarray.__float__": [[258, null]], "dpnp.ndarray.__floordiv__": [[259, null]], "dpnp.ndarray.__ge__": [[260, null]], "dpnp.ndarray.__getitem__": [[261, null]], "dpnp.ndarray.__gt__": [[262, null]], "dpnp.ndarray.__iadd__": [[263, null]], "dpnp.ndarray.__iand__": [[264, null]], "dpnp.ndarray.__ifloordiv__": [[265, null]], "dpnp.ndarray.__ilshift__": [[266, null]], "dpnp.ndarray.__imod__": [[267, null]], "dpnp.ndarray.__imul__": [[268, null]], "dpnp.ndarray.__int__": [[269, null]], "dpnp.ndarray.__invert__": [[270, null]], "dpnp.ndarray.__ior__": [[271, null]], "dpnp.ndarray.__ipow__": [[272, null]], "dpnp.ndarray.__irshift__": [[273, null]], "dpnp.ndarray.__isub__": [[274, null]], "dpnp.ndarray.__itruediv__": [[275, null]], "dpnp.ndarray.__ixor__": [[276, null]], "dpnp.ndarray.__le__": [[277, null]], "dpnp.ndarray.__len__": [[278, null]], "dpnp.ndarray.__lshift__": [[279, null]], "dpnp.ndarray.__lt__": [[280, null]], "dpnp.ndarray.__matmul__": [[281, null]], "dpnp.ndarray.__mod__": [[282, null]], "dpnp.ndarray.__mul__": [[283, null]], "dpnp.ndarray.__ne__": [[284, null]], "dpnp.ndarray.__neg__": [[285, null]], "dpnp.ndarray.__new__": [[286, null]], "dpnp.ndarray.__or__": [[287, null]], "dpnp.ndarray.__pos__": [[288, null]], "dpnp.ndarray.__pow__": [[289, null]], "dpnp.ndarray.__repr__": [[290, null]], "dpnp.ndarray.__rshift__": [[291, null]], "dpnp.ndarray.__setitem__": [[292, null]], "dpnp.ndarray.__str__": [[293, null]], "dpnp.ndarray.__sub__": [[294, null]], "dpnp.ndarray.__truediv__": [[295, null]], "dpnp.ndarray.__xor__": [[296, null]], "dpnp.ndarray.all": [[297, null]], "dpnp.ndarray.any": [[298, null]], "dpnp.ndarray.argmax": [[299, null]], "dpnp.ndarray.argmin": [[300, null]], "dpnp.ndarray.argsort": [[301, null]], "dpnp.ndarray.astype": [[302, null]], "dpnp.ndarray.choose": [[303, null]], "dpnp.ndarray.clip": [[304, null]], "dpnp.ndarray.conj": [[305, null]], "dpnp.ndarray.conjugate": [[306, null]], "dpnp.ndarray.copy": [[307, null]], "dpnp.ndarray.cumprod": [[308, null]], "dpnp.ndarray.cumsum": [[309, null]], "dpnp.ndarray.diagonal": [[310, null]], "dpnp.ndarray.dtype": [[311, null]], "dpnp.ndarray.fill": [[312, null]], "dpnp.ndarray.flags": [[313, null]], "dpnp.ndarray.flat": [[314, null]], "dpnp.ndarray.flatten": [[315, null]], "dpnp.ndarray.imag": [[316, null]], "dpnp.ndarray.item": [[317, null]], "dpnp.ndarray.itemsize": [[318, null]], "dpnp.ndarray.max": [[319, null]], "dpnp.ndarray.mean": [[320, null]], "dpnp.ndarray.min": [[321, null]], "dpnp.ndarray.nbytes": [[322, null]], "dpnp.ndarray.ndim": [[323, null]], "dpnp.ndarray.nonzero": [[324, null]], "dpnp.ndarray.partition": [[325, null]], "dpnp.ndarray.prod": [[326, null]], "dpnp.ndarray.put": [[327, null]], "dpnp.ndarray.ravel": [[328, null]], "dpnp.ndarray.real": [[329, null]], "dpnp.ndarray.repeat": [[330, null]], "dpnp.ndarray.reshape": [[331, null]], "dpnp.ndarray.round": [[332, null]], "dpnp.ndarray.searchsorted": [[333, null]], "dpnp.ndarray.shape": [[334, null]], "dpnp.ndarray.size": [[335, null]], "dpnp.ndarray.sort": [[336, null]], "dpnp.ndarray.squeeze": [[337, null]], "dpnp.ndarray.std": [[338, null]], "dpnp.ndarray.strides": [[339, null]], "dpnp.ndarray.sum": [[340, null]], "dpnp.ndarray.swapaxes": [[341, null]], "dpnp.ndarray.take": [[342, null]], "dpnp.ndarray.trace": [[343, null]], "dpnp.ndarray.transpose": [[344, null]], "dpnp.ndarray.var": [[345, null]], "dpnp.ndim": [[346, null]], "dpnp.negative": [[347, null]], "dpnp.nextafter": [[348, null]], "dpnp.nonzero": [[349, null]], "dpnp.not_equal": [[350, null]], "dpnp.ogrid": [[351, null]], "dpnp.ones": [[352, null]], "dpnp.ones_like": [[353, null]], "dpnp.outer": [[354, null]], "dpnp.partition": [[355, null]], "dpnp.place": [[356, null]], "dpnp.positive": [[357, null]], "dpnp.pow": [[358, null]], "dpnp.power": [[359, null]], "dpnp.prod": [[360, null]], "dpnp.proj": [[361, null]], "dpnp.ptp": [[362, null]], "dpnp.put": [[363, null]], "dpnp.put_along_axis": [[364, null]], "dpnp.putmask": [[365, null]], "dpnp.rad2deg": [[366, null]], "dpnp.radians": [[367, null]], "dpnp.random.RandomState": [[368, null]], "dpnp.random.beta": [[369, null]], "dpnp.random.binomial": [[370, null]], "dpnp.random.bytes": [[371, null]], "dpnp.random.chisquare": [[372, null]], "dpnp.random.choice": [[373, null]], "dpnp.random.dirichlet": [[374, null]], "dpnp.random.exponential": [[375, null]], "dpnp.random.f": [[376, null]], "dpnp.random.gamma": [[377, null]], "dpnp.random.geometric": [[378, null]], "dpnp.random.gumbel": [[379, null]], "dpnp.random.hypergeometric": [[380, null]], "dpnp.random.laplace": [[381, null]], "dpnp.random.logistic": [[382, null]], "dpnp.random.lognormal": [[383, null]], "dpnp.random.logseries": [[384, null]], "dpnp.random.multinomial": [[385, null]], "dpnp.random.multivariate_normal": [[386, null]], "dpnp.random.negative_binomial": [[387, null]], "dpnp.random.noncentral_chisquare": [[388, null]], "dpnp.random.noncentral_f": [[389, null]], "dpnp.random.normal": [[390, null]], "dpnp.random.pareto": [[391, null]], "dpnp.random.permutation": [[392, null]], "dpnp.random.poisson": [[393, null]], "dpnp.random.power": [[394, null]], "dpnp.random.rand": [[395, null]], "dpnp.random.randint": [[396, null]], "dpnp.random.randn": [[397, null]], "dpnp.random.random": [[398, null]], "dpnp.random.random_integers": [[399, null]], "dpnp.random.random_sample": [[400, null]], "dpnp.random.ranf": [[401, null]], "dpnp.random.rayleigh": [[402, null]], "dpnp.random.sample": [[403, null]], "dpnp.random.seed": [[404, null]], "dpnp.random.shuffle": [[405, null]], "dpnp.random.standard_cauchy": [[406, null]], "dpnp.random.standard_exponential": [[407, null]], "dpnp.random.standard_gamma": [[408, null]], "dpnp.random.standard_normal": [[409, null]], "dpnp.random.standard_t": [[410, null]], "dpnp.random.triangular": [[411, null]], "dpnp.random.uniform": [[412, null]], "dpnp.random.vonmises": [[413, null]], "dpnp.random.wald": [[414, null]], "dpnp.random.weibull": [[415, null]], "dpnp.random.zipf": [[416, null]], "dpnp.ravel": [[417, null]], "dpnp.ravel_multi_index": [[418, null]], "dpnp.real": [[419, null]], "dpnp.real_if_close": [[420, null]], "dpnp.reciprocal": [[421, null]], "dpnp.reduce_hypot": [[422, null]], "dpnp.remainder": [[423, null]], "dpnp.repeat": [[424, null]], "dpnp.reshape": [[425, null]], "dpnp.result_type": [[426, null]], "dpnp.right_shift": [[427, null]], "dpnp.rint": [[428, null]], "dpnp.roll": [[429, null]], "dpnp.rollaxis": [[430, null]], "dpnp.round": [[431, null]], "dpnp.row_stack": [[432, null]], "dpnp.rsqrt": [[433, null]], "dpnp.searchsorted": [[434, null]], "dpnp.select": [[435, null]], "dpnp.shape": [[436, null]], "dpnp.sign": [[437, null]], "dpnp.signbit": [[438, null]], "dpnp.sin": [[439, null]], "dpnp.sinh": [[440, null]], "dpnp.size": [[441, null]], "dpnp.sort": [[442, null]], "dpnp.sort_complex": [[443, null]], "dpnp.split": [[444, null]], "dpnp.sqrt": [[445, null]], "dpnp.square": [[446, null]], "dpnp.squeeze": [[447, null]], "dpnp.stack": [[448, null]], "dpnp.std": [[449, null]], "dpnp.subtract": [[450, null]], "dpnp.sum": [[451, null]], "dpnp.swapaxes": [[452, null]], "dpnp.take": [[453, null]], "dpnp.take_along_axis": [[454, null]], "dpnp.tan": [[455, null]], "dpnp.tanh": [[456, null]], "dpnp.tensordot": [[457, null]], "dpnp.tile": [[458, null]], "dpnp.trace": [[459, null]], "dpnp.transpose": [[460, null]], "dpnp.trapezoid": [[461, null]], "dpnp.tri": [[462, null]], "dpnp.tril": [[463, null]], "dpnp.tril_indices": [[464, null]], "dpnp.tril_indices_from": [[465, null]], "dpnp.trim_zeros": [[466, null]], "dpnp.triu": [[467, null]], "dpnp.triu_indices": [[468, null]], "dpnp.triu_indices_from": [[469, null]], "dpnp.true_divide": [[470, null]], "dpnp.trunc": [[471, null]], "dpnp.unique": [[472, null]], "dpnp.unravel_index": [[473, null]], "dpnp.unwrap": [[474, null]], "dpnp.vander": [[475, null]], "dpnp.var": [[476, null]], "dpnp.vdot": [[477, null]], "dpnp.vsplit": [[478, null]], "dpnp.vstack": [[479, null]], "dpnp.where": [[480, null]], "dpnp.zeros": [[481, null]], "dpnp.zeros_like": [[482, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[100, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[100, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[100, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[100, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[100, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[100, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[100, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[100, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[136, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[100, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[297, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[298, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[299, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[300, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[301, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[302, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[100, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[369, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[370, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[59, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[60, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[61, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[62, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[63, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[100, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[371, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[64, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[65, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[66, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[100, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[372, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[373, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[189, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[303, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[67, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[304, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[68, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[69, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[70, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[190, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[305, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[71, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[306, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[72, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[73, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[307, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[74, "dpnp.copy", false]], "copysign() (in module dpnp)": [[75, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[76, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[77, "dpnp.correlate", false]], "cos() (in module dpnp)": [[78, "dpnp.cos", false]], "cosh() (in module dpnp)": [[79, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[80, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[81, "dpnp.cov", false]], "cross() (in module dpnp)": [[82, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[83, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[308, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[84, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[309, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[85, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[86, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[87, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[100, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[191, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[88, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[89, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[90, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[91, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[310, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[92, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[93, "dpnp.diff", false]], "digitize() (in module dpnp)": [[94, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[374, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[95, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[96, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[10, "module-dpnp.fft", false]], "dpnp.random": [[493, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[97, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[98, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[99, "dpnp.dstack", false]], "dtype (class in dpnp)": [[100, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[311, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[101, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[192, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[193, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[194, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[195, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[102, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[103, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[104, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[105, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[106, "dpnp.equal", false]], "erf() (in module dpnp)": [[107, "dpnp.erf", false]], "exp() (in module dpnp)": [[108, "dpnp.exp", false]], "exp2() (in module dpnp)": [[109, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[110, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[111, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[375, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[112, "dpnp.extract", false]], "eye() (in module dpnp)": [[113, "dpnp.eye", false]], "f() (in module dpnp.random)": [[376, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[114, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[115, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[116, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[117, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[118, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[119, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[100, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[312, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[133, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[134, "dpnp.finfo", false]], "fix() (in module dpnp)": [[135, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[100, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[313, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[314, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[136, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[137, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[315, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[138, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[139, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[140, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[141, "dpnp.float_power", false]], "floor() (in module dpnp)": [[142, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[143, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[144, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[145, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[146, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[147, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[148, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[149, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[150, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[151, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[152, "dpnp.fromstring", false]], "full() (in module dpnp)": [[153, "dpnp.full", false]], "full_like() (in module dpnp)": [[154, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[377, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[378, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[155, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[156, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[157, "dpnp.gradient", false]], "greater() (in module dpnp)": [[158, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[159, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[379, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[100, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[160, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[120, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[161, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[162, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[163, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[164, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[380, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[165, "dpnp.hypot", false]], "identity() (in module dpnp)": [[166, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[121, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[122, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[123, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[124, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[125, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[167, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[316, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[168, "dpnp.imag", false]], "indices() (in module dpnp)": [[169, "dpnp.indices", false]], "inner() (in module dpnp)": [[170, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[196, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[171, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[126, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[127, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[128, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[100, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[100, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[172, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[173, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[174, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[175, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[176, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[177, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[100, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[178, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[179, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[180, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[181, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[182, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[183, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[317, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[100, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[318, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[184, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[100, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[185, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[381, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[186, "dpnp.left_shift", false]], "less() (in module dpnp)": [[187, "dpnp.less", false]], "less_equal() (in module dpnp)": [[188, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[209, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[210, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[211, "dpnp.log", false]], "log10() (in module dpnp)": [[212, "dpnp.log10", false]], "log1p() (in module dpnp)": [[213, "dpnp.log1p", false]], "log2() (in module dpnp)": [[214, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[215, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[216, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[217, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[218, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[219, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[220, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[382, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[383, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[384, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[221, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[222, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[197, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[223, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[224, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[198, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[199, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[319, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[225, "dpnp.max", false]], "maximum() (in module dpnp)": [[226, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[320, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[227, "dpnp.mean", false]], "median() (in module dpnp)": [[228, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[229, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[100, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[230, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[321, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[231, "dpnp.min", false]], "minimum() (in module dpnp)": [[232, "dpnp.minimum", false]], "mod() (in module dpnp)": [[233, "dpnp.mod", false]], "modf() (in module dpnp)": [[234, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [10, "module-dpnp.fft", false], [493, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[235, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[200, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[385, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[236, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[386, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[100, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[100, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[237, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[238, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[239, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[240, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[241, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[242, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[243, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[244, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[245, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[246, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[247, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[248, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[322, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[249, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[100, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[323, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[346, "dpnp.ndim", false]], "negative() (in module dpnp)": [[347, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[387, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[100, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[348, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[388, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[389, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[324, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[349, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[201, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[390, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[350, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[100, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[351, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[352, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[353, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[354, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[391, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[325, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[355, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[392, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[202, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[356, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[393, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[357, "dpnp.positive", false]], "pow() (in module dpnp)": [[358, "dpnp.pow", false]], "power() (in module dpnp)": [[359, "dpnp.power", false]], "power() (in module dpnp.random)": [[394, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[326, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[360, "dpnp.prod", false]], "proj() (in module dpnp)": [[361, "dpnp.proj", false]], "ptp() (in module dpnp)": [[362, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[327, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[363, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[364, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[365, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[203, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[366, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[367, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[395, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[396, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[397, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[398, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[399, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[400, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[368, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[401, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[328, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[417, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[418, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[402, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[329, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[419, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[420, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[421, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[422, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[423, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[330, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[424, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[331, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[425, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[426, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[129, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[130, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[131, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[132, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[427, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[428, "dpnp.rint", false]], "roll() (in module dpnp)": [[429, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[430, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[332, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[431, "dpnp.round", false]], "row_stack() (in module dpnp)": [[432, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[433, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[403, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[333, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[434, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[404, "dpnp.random.seed", false]], "select() (in module dpnp)": [[435, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[100, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[334, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[436, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[405, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[437, "dpnp.sign", false]], "signbit() (in module dpnp)": [[438, "dpnp.signbit", false]], "sin() (in module dpnp)": [[439, "dpnp.sin", false]], "sinh() (in module dpnp)": [[440, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[335, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[441, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[204, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[205, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[336, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[442, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[443, "dpnp.sort_complex", false]], "split() (in module dpnp)": [[444, "dpnp.split", false]], "sqrt() (in module dpnp)": [[445, "dpnp.sqrt", false]], "square() (in module dpnp)": [[446, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[337, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[447, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[448, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[406, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[407, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[408, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[409, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[410, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[338, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[449, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[100, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[339, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[100, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[450, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[340, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[451, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[206, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[341, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[452, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[250, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[342, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[453, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[454, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[455, "dpnp.tan", false]], "tanh() (in module dpnp)": [[456, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[457, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[207, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[208, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[458, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[343, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[459, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[344, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[460, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[461, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[462, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[411, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[463, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[464, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[465, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[466, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[467, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[468, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[469, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[470, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[471, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[100, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[368, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[412, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[472, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[473, "dpnp.unravel_index", false]], "unwrap() (in module dpnp)": [[474, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[97, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[475, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[97, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[345, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[476, "dpnp.var", false]], "vdot() (in module dpnp)": [[477, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[413, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[478, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[479, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[414, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[415, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[480, "dpnp.where", false]], "zeros() (in module dpnp)": [[481, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[482, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[416, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_not"], [60, 1, 1, "", "bitwise_or"], [61, 1, 1, "", "bitwise_xor"], [62, 1, 1, "", "broadcast_arrays"], [63, 1, 1, "", "broadcast_to"], [64, 1, 1, "", "can_cast"], [65, 1, 1, "", "cbrt"], [66, 1, 1, "", "ceil"], [67, 1, 1, "", "choose"], [68, 1, 1, "", "clip"], [69, 1, 1, "", "column_stack"], [70, 1, 1, "", "concatenate"], [71, 1, 1, "", "conj"], [72, 1, 1, "", "conjugate"], [73, 1, 1, "", "convolve"], [74, 1, 1, "", "copy"], [75, 1, 1, "", "copysign"], [76, 1, 1, "", "copyto"], [77, 1, 1, "", "correlate"], [78, 1, 1, "", "cos"], [79, 1, 1, "", "cosh"], [80, 1, 1, "", "count_nonzero"], [81, 1, 1, "", "cov"], [82, 1, 1, "", "cross"], [83, 1, 1, "", "cumlogsumexp"], [84, 1, 1, "", "cumprod"], [85, 1, 1, "", "cumsum"], [86, 1, 1, "", "deg2rad"], [87, 1, 1, "", "degrees"], [88, 1, 1, "", "diag"], [89, 1, 1, "", "diag_indices"], [90, 1, 1, "", "diag_indices_from"], [91, 1, 1, "", "diagflat"], [92, 1, 1, "", "diagonal"], [93, 1, 1, "", "diff"], [94, 1, 1, "", "digitize"], [95, 1, 1, "", "divide"], [96, 1, 1, "", "dot"], [98, 1, 1, "", "dsplit"], [99, 1, 1, "", "dstack"], [100, 2, 1, "", "dtype"], [101, 1, 1, "", "ediff1d"], [102, 1, 1, "", "einsum"], [103, 1, 1, "", "einsum_path"], [104, 1, 1, "", "empty"], [105, 1, 1, "", "empty_like"], [106, 1, 1, "", "equal"], [107, 1, 1, "", "erf"], [108, 1, 1, "", "exp"], [109, 1, 1, "", "exp2"], [110, 1, 1, "", "expand_dims"], [111, 1, 1, "", "expm1"], [112, 1, 1, "", "extract"], [113, 1, 1, "", "eye"], [114, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [133, 1, 1, "", "fill_diagonal"], [134, 1, 1, "", "finfo"], [135, 1, 1, "", "fix"], [136, 2, 1, "", "flatiter"], [137, 1, 1, "", "flatnonzero"], [138, 1, 1, "", "flip"], [139, 1, 1, "", "fliplr"], [140, 1, 1, "", "flipud"], [141, 1, 1, "", "float_power"], [142, 1, 1, "", "floor"], [143, 1, 1, "", "floor_divide"], [144, 1, 1, "", "fmax"], [145, 1, 1, "", "fmin"], [146, 1, 1, "", "fmod"], [147, 1, 1, "", "from_dlpack"], [148, 1, 1, "", "frombuffer"], [149, 1, 1, "", "fromfile"], [150, 1, 1, "", "fromfunction"], [151, 1, 1, "", "fromiter"], [152, 1, 1, "", "fromstring"], [153, 1, 1, "", "full"], [154, 1, 1, "", "full_like"], [155, 1, 1, "", "geomspace"], [156, 1, 1, "", "get_include"], [157, 1, 1, "", "gradient"], [158, 1, 1, "", "greater"], [159, 1, 1, "", "greater_equal"], [160, 1, 1, "", "heaviside"], [161, 1, 1, "", "histogram"], [162, 1, 1, "", "histogram_bin_edges"], [163, 1, 1, "", "hsplit"], [164, 1, 1, "", "hstack"], [165, 1, 1, "", "hypot"], [166, 1, 1, "", "identity"], [167, 1, 1, "", "iinfo"], [168, 1, 1, "", "imag"], [169, 1, 1, "", "indices"], [170, 1, 1, "", "inner"], [171, 1, 1, "", "invert"], [172, 1, 1, "", "isclose"], [173, 1, 1, "", "iscomplex"], [174, 1, 1, "", "iscomplexobj"], [175, 1, 1, "", "isfinite"], [176, 1, 1, "", "isinf"], [177, 1, 1, "", "isnan"], [178, 1, 1, "", "isneginf"], [179, 1, 1, "", "isposinf"], [180, 1, 1, "", "isreal"], [181, 1, 1, "", "isrealobj"], [182, 1, 1, "", "isscalar"], [183, 1, 1, "", "issubdtype"], [184, 1, 1, "", "ix_"], [185, 1, 1, "", "kron"], [186, 1, 1, "", "left_shift"], [187, 1, 1, "", "less"], [188, 1, 1, "", "less_equal"], [209, 1, 1, "", "linspace"], [210, 1, 1, "", "loadtxt"], [211, 1, 1, "", "log"], [212, 1, 1, "", "log10"], [213, 1, 1, "", "log1p"], [214, 1, 1, "", "log2"], [215, 1, 1, "", "logaddexp"], [216, 1, 1, "", "logaddexp2"], [217, 1, 1, "", "logical_and"], [218, 1, 1, "", "logical_not"], [219, 1, 1, "", "logical_or"], [220, 1, 1, "", "logical_xor"], [221, 1, 1, "", "logspace"], [222, 1, 1, "", "logsumexp"], [223, 1, 1, "", "mask_indices"], [224, 1, 1, "", "matmul"], [225, 1, 1, "", "max"], [226, 1, 1, "", "maximum"], [227, 1, 1, "", "mean"], [228, 1, 1, "", "median"], [229, 1, 1, "", "meshgrid"], [230, 5, 1, "", "mgrid"], [231, 1, 1, "", "min"], [232, 1, 1, "", "minimum"], [233, 1, 1, "", "mod"], [234, 1, 1, "", "modf"], [235, 1, 1, "", "moveaxis"], [236, 1, 1, "", "multiply"], [237, 1, 1, "", "nan_to_num"], [238, 1, 1, "", "nanargmax"], [239, 1, 1, "", "nanargmin"], [240, 1, 1, "", "nancumprod"], [241, 1, 1, "", "nancumsum"], [242, 1, 1, "", "nanmax"], [243, 1, 1, "", "nanmean"], [244, 1, 1, "", "nanmin"], [245, 1, 1, "", "nanprod"], [246, 1, 1, "", "nanstd"], [247, 1, 1, "", "nansum"], [248, 1, 1, "", "nanvar"], [249, 3, 1, "", "ndarray"], [346, 1, 1, "", "ndim"], [347, 1, 1, "", "negative"], [348, 1, 1, "", "nextafter"], [349, 1, 1, "", "nonzero"], [350, 1, 1, "", "not_equal"], [351, 5, 1, "", "ogrid"], [352, 1, 1, "", "ones"], [353, 1, 1, "", "ones_like"], [354, 1, 1, "", "outer"], [355, 1, 1, "", "partition"], [356, 1, 1, "", "place"], [357, 1, 1, "", "positive"], [358, 1, 1, "", "pow"], [359, 1, 1, "", "power"], [360, 1, 1, "", "prod"], [361, 1, 1, "", "proj"], [362, 1, 1, "", "ptp"], [363, 1, 1, "", "put"], [364, 1, 1, "", "put_along_axis"], [365, 1, 1, "", "putmask"], [366, 1, 1, "", "rad2deg"], [367, 1, 1, "", "radians"], [493, 0, 0, "-", "random"], [417, 1, 1, "", "ravel"], [418, 1, 1, "", "ravel_multi_index"], [419, 1, 1, "", "real"], [420, 1, 1, "", "real_if_close"], [421, 1, 1, "", "reciprocal"], [422, 1, 1, "", "reduce_hypot"], [423, 1, 1, "", "remainder"], [424, 1, 1, "", "repeat"], [425, 1, 1, "", "reshape"], [426, 1, 1, "", "result_type"], [427, 1, 1, "", "right_shift"], [428, 1, 1, "", "rint"], [429, 1, 1, "", "roll"], [430, 1, 1, "", "rollaxis"], [431, 1, 1, "", "round"], [432, 1, 1, "", "row_stack"], [433, 1, 1, "", "rsqrt"], [434, 1, 1, "", "searchsorted"], [435, 1, 1, "", "select"], [436, 1, 1, "", "shape"], [437, 1, 1, "", "sign"], [438, 1, 1, "", "signbit"], [439, 1, 1, "", "sin"], [440, 1, 1, "", "sinh"], [441, 1, 1, "", "size"], [442, 1, 1, "", "sort"], [443, 1, 1, "", "sort_complex"], [444, 1, 1, "", "split"], [445, 1, 1, "", "sqrt"], [446, 1, 1, "", "square"], [447, 1, 1, "", "squeeze"], [448, 1, 1, "", "stack"], [449, 1, 1, "", "std"], [450, 1, 1, "", "subtract"], [451, 1, 1, "", "sum"], [452, 1, 1, "", "swapaxes"], [453, 1, 1, "", "take"], [454, 1, 1, "", "take_along_axis"], [455, 1, 1, "", "tan"], [456, 1, 1, "", "tanh"], [457, 1, 1, "", "tensordot"], [458, 1, 1, "", "tile"], [459, 1, 1, "", "trace"], [460, 1, 1, "", "transpose"], [461, 1, 1, "", "trapezoid"], [462, 1, 1, "", "tri"], [463, 1, 1, "", "tril"], [464, 1, 1, "", "tril_indices"], [465, 1, 1, "", "tril_indices_from"], [466, 1, 1, "", "trim_zeros"], [467, 1, 1, "", "triu"], [468, 1, 1, "", "triu_indices"], [469, 1, 1, "", "triu_indices_from"], [470, 1, 1, "", "true_divide"], [471, 1, 1, "", "trunc"], [472, 1, 1, "", "unique"], [473, 1, 1, "", "unravel_index"], [474, 1, 1, "", "unwrap"], [475, 1, 1, "", "vander"], [476, 1, 1, "", "var"], [477, 1, 1, "", "vdot"], [478, 1, 1, "", "vsplit"], [479, 1, 1, "", "vstack"], [480, 1, 1, "", "where"], [481, 1, 1, "", "zeros"], [482, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[97, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[97, 3, 1, "", "T"], [97, 4, 1, "", "__eq__"], [97, 4, 1, "", "__ge__"], [97, 4, 1, "", "__getitem__"], [97, 4, 1, "", "__gt__"], [97, 4, 1, "", "__le__"], [97, 4, 1, "", "__len__"], [97, 4, 1, "", "__lt__"], [97, 4, 1, "", "__ne__"], [97, 4, 1, "", "__setitem__"], [97, 4, 1, "", "all"], [97, 4, 1, "", "any"], [97, 4, 1, "", "argmax"], [97, 4, 1, "", "argmin"], [97, 4, 1, "", "argsort"], [97, 4, 1, "", "asnumpy"], [97, 4, 1, "", "astype"], [97, 4, 1, "", "choose"], [97, 4, 1, "", "clip"], [97, 4, 1, "", "conj"], [97, 4, 1, "", "conjugate"], [97, 4, 1, "", "copy"], [97, 4, 1, "", "cumprod"], [97, 4, 1, "", "cumsum"], [97, 3, 1, "", "device"], [97, 4, 1, "", "diagonal"], [97, 4, 1, "", "dot"], [97, 3, 1, "", "dtype"], [97, 4, 1, "", "fill"], [97, 3, 1, "", "flags"], [97, 3, 1, "", "flat"], [97, 4, 1, "", "flatten"], [97, 4, 1, "", "get_array"], [97, 3, 1, "", "imag"], [97, 4, 1, "", "item"], [97, 3, 1, "", "itemsize"], [97, 4, 1, "", "max"], [97, 4, 1, "", "mean"], [97, 4, 1, "", "min"], [97, 3, 1, "", "nbytes"], [97, 3, 1, "", "ndim"], [97, 4, 1, "", "nonzero"], [97, 4, 1, "", "partition"], [97, 4, 1, "", "prod"], [97, 4, 1, "", "put"], [97, 4, 1, "", "ravel"], [97, 3, 1, "", "real"], [97, 4, 1, "", "repeat"], [97, 4, 1, "", "reshape"], [97, 4, 1, "", "round"], [97, 4, 1, "", "searchsorted"], [97, 3, 1, "", "shape"], [97, 3, 1, "", "size"], [97, 4, 1, "", "sort"], [97, 4, 1, "", "squeeze"], [97, 4, 1, "", "std"], [97, 3, 1, "", "strides"], [97, 4, 1, "", "sum"], [97, 4, 1, "", "swapaxes"], [97, 3, 1, "", "sycl_context"], [97, 3, 1, "", "sycl_device"], [97, 3, 1, "", "sycl_queue"], [97, 4, 1, "", "take"], [97, 4, 1, "", "to_device"], [97, 4, 1, "", "trace"], [97, 4, 1, "", "transpose"], [97, 3, 1, "", "usm_type"], [97, 4, 1, "", "var"]], "dpnp.dtype": [[100, 4, 1, "", "__eq__"], [100, 4, 1, "", "__ge__"], [100, 4, 1, "", "__getitem__"], [100, 4, 1, "", "__gt__"], [100, 4, 1, "", "__le__"], [100, 4, 1, "", "__len__"], [100, 4, 1, "", "__lt__"], [100, 4, 1, "", "__ne__"], [100, 3, 1, "", "alignment"], [100, 3, 1, "", "base"], [100, 3, 1, "", "byteorder"], [100, 3, 1, "", "char"], [100, 3, 1, "", "descr"], [100, 3, 1, "", "fields"], [100, 3, 1, "", "flags"], [100, 3, 1, "", "hasobject"], [100, 3, 1, "", "isalignedstruct"], [100, 3, 1, "", "isbuiltin"], [100, 3, 1, "", "isnative"], [100, 3, 1, "", "itemsize"], [100, 3, 1, "", "kind"], [100, 3, 1, "", "metadata"], [100, 3, 1, "", "name"], [100, 3, 1, "", "names"], [100, 3, 1, "", "ndim"], [100, 4, 1, "", "newbyteorder"], [100, 3, 1, "", "num"], [100, 3, 1, "", "shape"], [100, 3, 1, "", "str"], [100, 3, 1, "", "subdtype"], [100, 3, 1, "", "type"]], "dpnp.fft": [[115, 1, 1, "", "fft"], [116, 1, 1, "", "fft2"], [117, 1, 1, "", "fftfreq"], [118, 1, 1, "", "fftn"], [119, 1, 1, "", "fftshift"], [120, 1, 1, "", "hfft"], [121, 1, 1, "", "ifft"], [122, 1, 1, "", "ifft2"], [123, 1, 1, "", "ifftn"], [124, 1, 1, "", "ifftshift"], [125, 1, 1, "", "ihfft"], [126, 1, 1, "", "irfft"], [127, 1, 1, "", "irfft2"], [128, 1, 1, "", "irfftn"], [129, 1, 1, "", "rfft"], [130, 1, 1, "", "rfft2"], [131, 1, 1, "", "rfftfreq"], [132, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[136, 4, 1, "", "__eq__"], [136, 4, 1, "", "__ge__"], [136, 4, 1, "", "__getitem__"], [136, 4, 1, "", "__gt__"], [136, 4, 1, "", "__iter__"], [136, 4, 1, "", "__le__"], [136, 4, 1, "", "__lt__"], [136, 4, 1, "", "__ne__"], [136, 4, 1, "", "__next__"], [136, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[189, 1, 1, "", "cholesky"], [190, 1, 1, "", "cond"], [191, 1, 1, "", "det"], [192, 1, 1, "", "eig"], [193, 1, 1, "", "eigh"], [194, 1, 1, "", "eigvals"], [195, 1, 1, "", "eigvalsh"], [196, 1, 1, "", "inv"], [197, 1, 1, "", "lstsq"], [198, 1, 1, "", "matrix_power"], [199, 1, 1, "", "matrix_rank"], [200, 1, 1, "", "multi_dot"], [201, 1, 1, "", "norm"], [202, 1, 1, "", "pinv"], [203, 1, 1, "", "qr"], [204, 1, 1, "", "slogdet"], [205, 1, 1, "", "solve"], [206, 1, 1, "", "svd"], [207, 1, 1, "", "tensorinv"], [208, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[250, 6, 1, "", "T"], [251, 4, 1, "", "__abs__"], [252, 4, 1, "", "__add__"], [253, 4, 1, "", "__and__"], [254, 4, 1, "", "__bool__"], [255, 4, 1, "", "__complex__"], [256, 4, 1, "", "__copy__"], [257, 4, 1, "", "__eq__"], [258, 4, 1, "", "__float__"], [259, 4, 1, "", "__floordiv__"], [260, 4, 1, "", "__ge__"], [261, 4, 1, "", "__getitem__"], [262, 4, 1, "", "__gt__"], [263, 4, 1, "", "__iadd__"], [264, 4, 1, "", "__iand__"], [265, 4, 1, "", "__ifloordiv__"], [266, 4, 1, "", "__ilshift__"], [267, 4, 1, "", "__imod__"], [268, 4, 1, "", "__imul__"], [269, 4, 1, "", "__int__"], [270, 4, 1, "", "__invert__"], [271, 4, 1, "", "__ior__"], [272, 4, 1, "", "__ipow__"], [273, 4, 1, "", "__irshift__"], [274, 4, 1, "", "__isub__"], [275, 4, 1, "", "__itruediv__"], [276, 4, 1, "", "__ixor__"], [277, 4, 1, "", "__le__"], [278, 4, 1, "", "__len__"], [279, 4, 1, "", "__lshift__"], [280, 4, 1, "", "__lt__"], [281, 4, 1, "", "__matmul__"], [282, 4, 1, "", "__mod__"], [283, 4, 1, "", "__mul__"], [284, 4, 1, "", "__ne__"], [285, 4, 1, "", "__neg__"], [286, 4, 1, "", "__new__"], [287, 4, 1, "", "__or__"], [288, 4, 1, "", "__pos__"], [289, 4, 1, "", "__pow__"], [290, 4, 1, "", "__repr__"], [291, 4, 1, "", "__rshift__"], [292, 4, 1, "", "__setitem__"], [293, 4, 1, "", "__str__"], [294, 4, 1, "", "__sub__"], [295, 4, 1, "", "__truediv__"], [296, 4, 1, "", "__xor__"], [297, 4, 1, "", "all"], [298, 4, 1, "", "any"], [299, 4, 1, "", "argmax"], [300, 4, 1, "", "argmin"], [301, 4, 1, "", "argsort"], [302, 4, 1, "", "astype"], [303, 4, 1, "", "choose"], [304, 4, 1, "", "clip"], [305, 4, 1, "", "conj"], [306, 4, 1, "", "conjugate"], [307, 4, 1, "", "copy"], [308, 4, 1, "", "cumprod"], [309, 4, 1, "", "cumsum"], [310, 4, 1, "", "diagonal"], [311, 6, 1, "", "dtype"], [312, 4, 1, "", "fill"], [313, 6, 1, "", "flags"], [314, 6, 1, "", "flat"], [315, 4, 1, "", "flatten"], [316, 6, 1, "", "imag"], [317, 4, 1, "", "item"], [318, 6, 1, "", "itemsize"], [319, 4, 1, "", "max"], [320, 4, 1, "", "mean"], [321, 4, 1, "", "min"], [322, 6, 1, "", "nbytes"], [323, 6, 1, "", "ndim"], [324, 4, 1, "", "nonzero"], [325, 4, 1, "", "partition"], [326, 4, 1, "", "prod"], [327, 4, 1, "", "put"], [328, 4, 1, "", "ravel"], [329, 6, 1, "", "real"], [330, 4, 1, "", "repeat"], [331, 4, 1, "", "reshape"], [332, 4, 1, "", "round"], [333, 4, 1, "", "searchsorted"], [334, 6, 1, "", "shape"], [335, 6, 1, "", "size"], [336, 4, 1, "", "sort"], [337, 4, 1, "", "squeeze"], [338, 4, 1, "", "std"], [339, 6, 1, "", "strides"], [340, 4, 1, "", "sum"], [341, 4, 1, "", "swapaxes"], [342, 4, 1, "", "take"], [343, 4, 1, "", "trace"], [344, 4, 1, "", "transpose"], [345, 4, 1, "", "var"]], "dpnp.random": [[368, 2, 1, "", "RandomState"], [369, 1, 1, "", "beta"], [370, 1, 1, "", "binomial"], [371, 1, 1, "", "bytes"], [372, 1, 1, "", "chisquare"], [373, 1, 1, "", "choice"], [374, 1, 1, "", "dirichlet"], [375, 1, 1, "", "exponential"], [376, 1, 1, "", "f"], [377, 1, 1, "", "gamma"], [378, 1, 1, "", "geometric"], [379, 1, 1, "", "gumbel"], [380, 1, 1, "", "hypergeometric"], [381, 1, 1, "", "laplace"], [382, 1, 1, "", "logistic"], [383, 1, 1, "", "lognormal"], [384, 1, 1, "", "logseries"], [385, 1, 1, "", "multinomial"], [386, 1, 1, "", "multivariate_normal"], [387, 1, 1, "", "negative_binomial"], [388, 1, 1, "", "noncentral_chisquare"], [389, 1, 1, "", "noncentral_f"], [390, 1, 1, "", "normal"], [391, 1, 1, "", "pareto"], [392, 1, 1, "", "permutation"], [393, 1, 1, "", "poisson"], [394, 1, 1, "", "power"], [395, 1, 1, "", "rand"], [396, 1, 1, "", "randint"], [397, 1, 1, "", "randn"], [398, 1, 1, "", "random"], [399, 1, 1, "", "random_integers"], [400, 1, 1, "", "random_sample"], [401, 1, 1, "", "ranf"], [402, 1, 1, "", "rayleigh"], [403, 1, 1, "", "sample"], [404, 1, 1, "", "seed"], [405, 1, 1, "", "shuffle"], [406, 1, 1, "", "standard_cauchy"], [407, 1, 1, "", "standard_exponential"], [408, 1, 1, "", "standard_gamma"], [409, 1, 1, "", "standard_normal"], [410, 1, 1, "", "standard_t"], [411, 1, 1, "", "triangular"], [412, 1, 1, "", "uniform"], [413, 1, 1, "", "vonmises"], [414, 1, 1, "", "wald"], [415, 1, 1, "", "weibull"], [416, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[368, 4, 1, "", "__eq__"], [368, 4, 1, "", "__ge__"], [368, 4, 1, "", "__gt__"], [368, 4, 1, "", "__le__"], [368, 4, 1, "", "__lt__"], [368, 4, 1, "", "__ne__"], [368, 4, 1, "", "get_state"], [368, 4, 1, "", "get_sycl_device"], [368, 4, 1, "", "get_sycl_queue"], [368, 4, 1, "", "normal"], [368, 4, 1, "", "rand"], [368, 4, 1, "", "randint"], [368, 4, 1, "", "randn"], [368, 4, 1, "", "random_sample"], [368, 4, 1, "", "standard_normal"], [368, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 82, 85, 97, 100, 101, 116, 118, 120, 122, 123, 125, 127, 128, 130, 132, 133, 148, 149, 197, 199, 201, 206, 311, 344, 368, 369, 370, 375, 376, 377, 379, 380, 381, 382, 383, 385, 387, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 458, 490], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 64, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 166, 169, 170, 172, 175, 176, 177, 178, 179, 184, 185, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 209, 210, 211, 212, 213, 214, 218, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 307, 310, 312, 316, 317, 329, 332, 334, 336, 338, 343, 344, 345, 346, 349, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 375, 377, 378, 379, 381, 382, 383, 385, 386, 387, 390, 392, 393, 394, 395, 398, 400, 401, 402, 403, 406, 409, 411, 412, 413, 418, 421, 423, 424, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 480, 481, 482, 490], "00": [78, 103, 115, 439], "000": [237, 370], "00000000005e": 111, "00000000e": [115, 237], "000000082740371e": 111, "000000e": [78, 439], "00001e10": [17, 172], "0001e10": 172, "000e": 103, "000j": 237, "002": 237, "00867716": 372, "01": 103, "02": [103, 237], "03": 237, "03088525e": 104, "0396842": 221, "04": 103, "04719755": 367, "04921661": 368, "05": [17, 103, 172], "0614962j": [116, 130], "06310682": 368, "07": 237, "07944154": [83, 204], "08": [17, 78, 103, 141, 172, 386, 439], "08156915": 368, "0943951": 367, "09640474": 216, "09861229": [83, 204, 213], "0d": 34, "0dev0": 6, "0j": [20, 96, 97, 173, 174, 180, 181, 224, 316, 329, 437], "0th": 457, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 301, 302, 307, 310, 312, 315, 316, 317, 323, 325, 329, 334, 336, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 372, 373, 375, 377, 379, 381, 382, 383, 385, 386, 387, 390, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 407, 409, 412, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 490], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 68, 74, 83, 84, 85, 89, 90, 93, 94, 97, 98, 100, 102, 103, 111, 112, 119, 131, 153, 155, 161, 162, 163, 168, 172, 184, 185, 186, 211, 212, 213, 214, 221, 222, 228, 236, 331, 362, 364, 368, 370, 380, 392, 422, 426, 427, 429, 431, 434, 444, 448, 454, 463, 464, 465, 467, 468, 469, 478, 480], "100": [89, 131, 155, 172, 185, 200, 221, 380, 406, 420, 474], "1000": [64, 155, 200, 221, 369, 370, 375, 377, 379, 380, 381, 382, 383, 390, 391, 394, 396, 398, 401, 403, 409, 413, 414, 415, 416, 420, 461], "10000": [85, 200, 378, 393, 402, 412], "100000": 387, "1000000": [406, 408, 410, 411], "1024": 0, "105": 103, "11": [31, 32, 56, 79, 89, 90, 97, 98, 112, 157, 163, 201, 331, 387, 396, 431, 434, 440, 463, 464, 465, 467, 468, 469, 478, 480], "110": [102, 170], "111111": 237, "113": 215, "11570901": 368, "1179187": 368, "118033988749895": 449, "119": 102, "1196081": 368, "12": [10, 31, 32, 55, 82, 87, 89, 90, 94, 98, 100, 102, 112, 116, 130, 163, 168, 221, 360, 362, 367, 392, 418, 434, 463, 464, 465, 467, 468, 469, 478, 480], "120": [84, 87], "123": [97, 103, 317], "125": [141, 358, 359, 475], "127": 155, "128": [0, 155, 237], "12th": 102, "13": [10, 31, 32, 59, 89, 90, 96, 98, 100, 102, 163, 171, 224, 418, 434, 464, 465, 468, 469, 473, 478], "130": 102, "134": 170, "13436424": 368, "135": [29, 51], "13710533": 372, "139884456208480": 16, "13j": 420, "14": [31, 32, 58, 59, 89, 90, 96, 98, 135, 163, 170, 171, 434, 457, 464, 465, 468, 469, 478], "140": 474, "140053638309840": 21, "14157194": 461, "14159265": [13, 24, 29, 51, 86, 367], "14423775e": 115, "14j": 420, "15": [31, 32, 85, 89, 90, 94, 98, 102, 120, 125, 163, 202, 212, 392, 434, 464, 465, 468, 469, 478], "150": 87, "15888336": 221, "15j": 420, "16": [6, 58, 89, 90, 98, 100, 115, 141, 151, 155, 157, 163, 236, 358, 359, 420, 435, 455, 464, 465, 468, 469, 478], "1621": [418, 473], "16227766": [190, 422], "16394577": 368, "164": 216, "166": 216, "16j": 115, "17": [115, 116, 130], "17157288": [193, 195], "17281316e": 115, "177": [155, 221], "178": 6, "17j": 115, "18": [6, 84, 100, 101, 102, 118, 201, 221], "180": [29, 51, 86, 87, 102, 366, 474, 498], "1805": 10, "18236388": 368, "18557831": 368, "1887902": 367, "19": [10, 80, 100, 418, 474], "1923875335537315": 397, "19245009": 433, "1924881e": 141, "1965": 10, "19722458": 83, "1d": [101, 363, 364, 454, 461], "1e": [17, 111, 172, 192, 202, 212, 213, 215, 216, 386], "1e10": [17, 172], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 71, 72, 97, 126, 168, 173, 180, 192, 206, 316, 329, 419, 443, 446], "1th": 457, "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 173, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 302, 307, 310, 312, 315, 317, 323, 325, 334, 335, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 366, 367, 368, 372, 376, 380, 386, 392, 395, 397, 408, 410, 411, 414, 416, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482], "20": [6, 84, 94, 102, 131, 169, 172, 185, 186, 201, 364, 370, 385, 434, 454, 474], "20000": 370, "2007": 10, "200e": 103, "20477401j": [116, 130], "2048": 0, "21": [85, 100], "210": 87, "215": 221, "21941987": 368, "21968665": 368, "22": [363, 418, 473], "220": 474, "220446049250313e": 420, "222222": 237, "22460635e": 455, "22464680e": 115, "22497216": 201, "22776602": 221, "23": [6, 368, 418], "230": 102, "23598776": 367, "23606798": 201, "24": [31, 32, 82, 84, 97, 101, 102, 170, 185, 207, 334, 360, 457, 459], "240": 87, "24264069": 201, "24544512": 368, "247219128924647": 246, "25": [100, 102, 107, 117, 157, 161, 162, 196, 209, 236, 248, 397, 406, 435, 475, 476], "255": [58, 60], "25506903": 368, "256": [0, 155], "26": [61, 102], "260": 474, "264": 6, "26618007j": 214, "27": [65, 141, 221, 358, 359, 433, 475], "270": 87, "28": 102, "28000000e": 237, "2800000e": 237, "283185307179586": 474, "28318531": 474, "28352814": 368, "28904982": 216, "297": 10, "299": 6, "2d": [206, 224, 472], "2e": 85, "2f": 0, "2j": [71, 72, 96, 115, 168, 173, 180, 193, 195, 224, 419, 437, 443, 477], "2k": 474, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 61, 62, 63, 65, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 124, 125, 127, 128, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 155, 157, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 180, 181, 182, 184, 185, 186, 190, 191, 192, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 307, 310, 315, 317, 323, 325, 334, 335, 336, 344, 346, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 363, 367, 368, 372, 376, 383, 386, 392, 395, 396, 397, 407, 411, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "30": [82, 87, 97, 102, 131, 335, 364, 367, 454, 477], "300": [87, 474], "3003003": 421, "301": 10, "30102999566": 212, "3012989": 440, "30258509": [83, 222], "308": 237, "308j": 237, "31": [61, 155, 418, 473], "312": 104, "316": 221, "32": [100, 102, 155, 245, 247, 457], "33": 421, "330": 87, "333": 200, "33333333": 237, "3333333e": 237, "33340275": 461, "33486982e": 115, "33836967": 368, "340": 474, "34074171": 368, "34132519": 221, "34846923": 201, "34960421": 221, "35": [102, 378], "35106603e": 201, "35355338": 433, "36": 82, "360": 474, "37": [418, 431, 473], "371139e": 78, "38": [170, 370], "380": 474, "38268343": 193, "38268343j": 193, "38629436": 83, "38885": 370, "389": 6, "389056099": [108, 111], "39": 6, "39295758": 368, "397": 6, "3e": [0, 85, 420], "3j": [96, 224, 443], "3rd": [70, 98, 444], "3x3": 223, "3x8000": 407, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 60, 62, 68, 69, 70, 73, 76, 78, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 112, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 137, 138, 141, 143, 144, 145, 149, 150, 151, 153, 155, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 173, 180, 184, 185, 188, 191, 196, 198, 199, 201, 204, 207, 208, 209, 214, 217, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 238, 239, 241, 243, 246, 248, 307, 310, 315, 323, 325, 334, 336, 344, 346, 349, 351, 353, 358, 359, 360, 362, 363, 367, 368, 369, 372, 392, 397, 413, 417, 418, 419, 420, 423, 424, 425, 429, 430, 431, 432, 435, 437, 441, 442, 444, 445, 448, 449, 450, 452, 453, 457, 458, 460, 461, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482], "40": [102, 131, 186, 364, 454], "40882036": 368, "4096": 0, "41": [418, 473], "41421356": [190, 201], "42": 435, "420": 474, "429": 6, "44": [356, 363], "4400": [102, 457], "443469": 221, "44509285e": 115, "45": [20, 29, 51], "4532": [102, 457], "46": 102, "460": 474, "46394577": 368, "464": 221, "4664": [102, 457], "47": 6, "4730": [102, 457], "4796": [102, 457], "48": [6, 82], "48093112": 368, "4874": [102, 457], "48927254": 368, "49": 6, "4928": [102, 457], "49543509": 368, "49778714": 474, "499128": 96, "4d": 206, "4e": 420, "4j": [168, 419, 477], "4x4": [464, 468], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 61, 62, 66, 68, 70, 73, 76, 77, 80, 82, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 107, 112, 116, 117, 119, 127, 130, 131, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 155, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 173, 180, 184, 185, 186, 189, 193, 195, 196, 200, 201, 205, 209, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 246, 302, 307, 335, 346, 349, 351, 352, 353, 358, 359, 362, 363, 367, 368, 369, 370, 372, 375, 387, 391, 392, 393, 394, 397, 400, 415, 417, 418, 419, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 434, 435, 437, 441, 443, 444, 448, 449, 451, 452, 453, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482], "50": [116, 130, 131, 155, 185, 215, 216, 221, 364, 454, 457, 461, 480], "500": [185, 474], "5018": [102, 457], "5091786": 79, "51": 6, "512": 0, "5162": [102, 457], "52069395e": 115, "52359878": 367, "52928804": 368, "5306": [102, 457], "5399045e": 141, "54": 368, "540": 474, "542": 6, "54288406": 368, "54465213": 368, "548739": 440, "54930614": [30, 52], "55": [356, 363, 435], "5555555555555554": 248, "56": 6, "562": 221, "5620499351813308": [11, 12], "56920387": 368, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 367, 474], "58997253": 368, "591953": 79, "5e": [215, 216], "5j": [230, 351, 443], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 39, 53, 56, 60, 61, 68, 70, 76, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 106, 111, 112, 117, 120, 131, 138, 141, 154, 157, 163, 164, 168, 169, 170, 184, 185, 201, 202, 203, 206, 207, 209, 221, 223, 240, 241, 245, 307, 317, 334, 346, 349, 353, 356, 358, 359, 362, 368, 385, 387, 392, 397, 417, 418, 419, 425, 429, 430, 431, 432, 435, 441, 443, 444, 448, 450, 451, 452, 453, 457, 459, 461, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 477, 478, 479, 480, 482], "60": [82, 87, 102, 364, 454, 457, 474, 480], "600": 185, "60943791": 83, "61799388": 367, "62": 170, "6227766": 155, "62318272": 372, "62341325": 155, "624": 103, "63": 155, "63317787e": 455, "63522211": 368, "63836967": 368, "64": [0, 4, 102, 141, 155, 245, 247, 358, 359, 431], "64000": 102, "65745445": [14, 25], "66519143": 367, "6666666666666665": 243, "67": 102, "67305985": 148, "673174": 368, "67718303": 368, "69295758": 368, "69314718": [83, 204, 213], "6990877": 368, "6j": [168, 419, 477], "7": [15, 17, 22, 23, 39, 53, 66, 68, 76, 80, 82, 85, 88, 89, 90, 92, 93, 95, 97, 98, 101, 108, 112, 138, 142, 155, 157, 163, 170, 172, 184, 185, 201, 206, 223, 228, 233, 236, 317, 349, 361, 362, 368, 392, 418, 419, 423, 426, 428, 429, 444, 450, 451, 452, 453, 457, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 477, 478, 480], "70": [185, 477, 480], "700": 185, "700e": 103, "70710677": [97, 316, 329], "70710678": [190, 192], "70710678j": 192, "70882036": 368, "71238898": 367, "718281828": [108, 111], "72": 82, "720": [84, 474], "72075441": 221, "72538256": [27, 47], "74165739": 201, "742278e": 439, "74596669": 201, "74921661": 368, "75": [56, 107, 117, 157, 162, 196, 209], "754": 134, "75958653": 367, "76096244": 368, "76377462": 368, "77447665": 216, "78539816": [20, 28, 29, 50, 51, 474], "78927254": 368, "79175947": 83, "79769313e": 237, "7j": 361, "8": [4, 15, 17, 22, 39, 53, 65, 68, 76, 82, 88, 89, 90, 92, 93, 97, 98, 100, 102, 103, 112, 115, 117, 131, 132, 138, 141, 155, 157, 163, 168, 172, 184, 191, 201, 204, 206, 207, 209, 221, 223, 334, 349, 358, 359, 360, 362, 368, 392, 411, 418, 419, 429, 433, 439, 444, 453, 457, 459, 461, 463, 464, 465, 467, 468, 469, 473, 474, 475, 478, 480], "80": [100, 102, 480], "8000": 407, "80226506": 368, "81715362": 368, "827941": [155, 221], "82842712": [193, 195], "84288406": 368, "84401099": 368, "84743374": 368, "84803548": 201, "85": 102, "86": 170, "87649168": 215, "88": 101, "88178420e": 115, "88997253": 368, "89920014": 372, "8f": 100, "8j": 477, "9": [4, 15, 22, 39, 53, 68, 76, 82, 85, 88, 89, 90, 92, 95, 97, 98, 102, 104, 112, 115, 118, 119, 124, 135, 141, 143, 151, 155, 157, 163, 172, 184, 192, 197, 201, 202, 203, 206, 221, 223, 236, 237, 317, 349, 362, 368, 370, 372, 392, 418, 419, 429, 444, 445, 450, 457, 463, 464, 465, 467, 468, 469, 470, 473, 474, 475, 478, 480], "90": [20, 87, 366, 480], "917152": 456, "92387953": 193, "92387953j": 193, "94": 102, "94591015": 83, "95": 197, "95799250e": 115, "98": 224, "98024613": 221, "99": [101, 213, 364], "99322285": [14, 25], "99532227": 107, "996272": 456, "99822295": [27, 47], "99853728": 107, "999": 103, "9990000e": 237, "99959305": 107, "99989938": 107, "9999": 237, "99997791": 107, "999999e": 172, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 76, 78, 79, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 97, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 121, 122, 123, 127, 128, 129, 130, 131, 132, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 168, 169, 171, 175, 176, 177, 178, 179, 186, 187, 188, 189, 193, 194, 195, 197, 199, 200, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 230, 232, 233, 236, 240, 241, 245, 247, 302, 307, 315, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 361, 366, 367, 368, 370, 387, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 417, 418, 421, 423, 427, 428, 433, 437, 438, 439, 440, 444, 445, 446, 450, 452, 453, 455, 456, 457, 458, 460, 462, 464, 466, 468, 470, 471, 475, 478, 480, 481, 482, 498], "AND": [16, 58, 59, 60, 61, 171, 217, 218, 219, 220], "And": [4, 48, 49, 89, 97, 302, 464, 468], "As": 472, "Be": 192, "Being": 3, "But": [4, 100], "By": [31, 32, 42, 49, 82, 97, 116, 120, 122, 126, 128, 132, 155, 197, 209, 221, 224, 225, 227, 231, 238, 239, 242, 243, 244, 245, 246, 247, 248, 302, 417, 424, 429, 441, 449, 453, 462, 464, 466, 468, 476], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 315, 316, 317, 323, 329, 331, 334, 339, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 490, 498], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 68, 70, 80, 82, 83, 84, 85, 88, 92, 93, 96, 97, 98, 100, 101, 102, 103, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 144, 145, 147, 152, 155, 157, 161, 162, 163, 164, 168, 169, 170, 172, 178, 179, 180, 189, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 221, 222, 225, 226, 227, 229, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 336, 356, 360, 363, 364, 368, 390, 412, 419, 420, 422, 424, 425, 429, 431, 432, 434, 442, 444, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 472, 474, 475, 476, 477, 478, 479, 480, 490, 498], "In": [4, 10, 31, 32, 84, 85, 102, 103, 121, 122, 123, 126, 128, 157, 189, 194, 200, 203, 216, 221, 240, 241, 243, 245, 247, 360, 363, 368, 412, 418, 425, 451, 453, 471], "It": [4, 10, 16, 21, 22, 31, 32, 68, 84, 85, 94, 96, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 157, 193, 195, 216, 224, 227, 238, 239, 240, 241, 242, 243, 244, 246, 248, 360, 435, 449, 451, 453, 476, 498], "Its": [68, 207, 364, 459], "NOT": [59, 171, 217, 218, 219, 220], "No": [41, 42, 102, 189], "Not": [16, 21, 42, 175, 237, 240, 241, 242, 244, 245, 247, 360], "OR": [21, 58, 59, 60, 61, 171, 217, 218, 219, 220], "On": 4, "One": [53, 54, 55, 82, 99, 100, 126, 425], "Or": [157, 461], "That": 223, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 63, 65, 68, 69, 70, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 174, 175, 176, 177, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 302, 307, 316, 323, 325, 329, 334, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 371, 373, 374, 384, 389, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 479, 480, 481, 482, 490, 494, 498], "Then": [10, 43, 45, 223], "There": [10, 209, 472], "These": [4, 22, 100, 102, 103, 110, 223, 235, 364, 454, 464, 468, 490, 494], "To": [4, 120, 126, 128, 141, 349, 474], "With": [31, 32, 56, 80, 163, 201, 225, 231, 238, 239, 245, 247, 360, 451, 478], "_": [0, 162, 448, 461], "__array_interface__": 100, "__bool__": 490, "__dlpack__": 147, "__dlpack_device__": 147, "__eq__": [97, 100, 136, 368], "__ge__": [97, 100, 136, 368], "__getitem__": [97, 100, 136], "__gt__": [97, 100, 136, 368], "__iter__": 136, "__le__": [97, 100, 136, 368], "__len__": [97, 100], "__lt__": [97, 100, 136, 368], "__main__": 0, "__name__": 0, "__ne__": [97, 100, 136, 368], "__next__": 136, "__setitem__": [97, 136], "__sycl_usm_array_interface__": 44, "_dtypes_list": 0, "a1": [37, 38], "a2": [37, 38], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 68, "a_min": 68, "a_resamp": 126, "ab": [6, 10, 12, 17, 172], "abc": 102, "abcd": 103, "about": [43, 45, 97, 134, 192, 313, 490], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 83, 88, 91, 118, 123, 128, 132, 169, 203, 222, 237, 422, 462, 463, 467], "absolut": [6, 11, 17, 20, 114, 172, 204, 246, 248, 361, 420, 449, 474, 476, 498], "accept": [33, 102, 368, 442, 464, 468], "access": [10, 89, 90, 133, 223, 464, 468, 490], "accord": [16, 21, 56, 64, 100, 132, 134, 192, 193, 194, 195, 222, 227, 243, 246, 248, 422, 427, 449, 476], "accordingli": [242, 244], "account": 425, "accumul": [83, 84, 85, 102, 161, 240, 241, 245, 247, 360, 451, 459], "accur": [100, 111, 157, 213, 215], "accuraci": [121, 122, 123, 126, 128], "achiev": 102, "aco": 24, "acosh": 25, "across": [92, 162, 240, 241, 245, 247], "activ": 4, "actual": [100, 161, 162, 189, 200], "ad": [17, 100, 103, 110, 126, 172, 191, 204, 216, 474, 494], "add": [6, 100, 498], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [83, 189, 243, 472], "address": 100, "adjac": 474, "advanc": 102, "advers": 102, "advis": 4, "affect": [23, 92, 102, 133, 161, 162], "after": [99, 133, 348, 387, 429], "ag": 100, "against": [17, 31, 32, 62, 63, 68, 80, 156, 172, 201, 202, 225, 231, 238, 239, 245, 247, 360, 364, 451, 454], "ai": [3, 364, 454], "ai_max": 454, "ai_min": 454, "ainv": [196, 207], "al": 10, "algebra": [483, 494], "algorithm": [10, 102, 103, 115, 121, 129], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 70, 95, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 171, 186, 233, 249, 358, 359, 368, 398, 401, 403, 423, 427, 432, 460, 470, 474, 479], "alias": [9, 120, 121, 126, 128], "align": 100, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 69, 80, 87, 93, 97, 99, 100, 102, 103, 108, 109, 111, 113, 118, 119, 123, 124, 127, 128, 132, 133, 138, 139, 140, 148, 149, 151, 155, 157, 164, 166, 168, 184, 189, 199, 202, 209, 221, 225, 231, 238, 239, 242, 244, 302, 305, 312, 325, 360, 370, 419, 420, 429, 432, 435, 447, 451, 472, 479, 490, 498], "allclos": [6, 37, 172, 196, 202, 203, 205, 206, 208], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 74, 83, 88, 89, 91, 97, 104, 105, 113, 117, 131, 135, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 178, 179, 209, 210, 221, 222, 223, 227, 230, 243, 246, 248, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 422, 447, 449, 462, 464, 468, 475, 476, 481, 482], "allow": [39, 49, 97, 102, 161, 162, 216, 223, 302, 331, 453, 490], "alltru": 6, "almost": [34, 192, 464], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 69, 70, 80, 83, 84, 85, 88, 89, 91, 92, 93, 97, 98, 99, 101, 112, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 138, 139, 140, 144, 145, 150, 155, 157, 163, 164, 169, 201, 203, 207, 208, 209, 221, 222, 225, 226, 227, 228, 229, 231, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 299, 300, 301, 308, 309, 319, 321, 326, 327, 335, 338, 340, 342, 343, 345, 356, 360, 362, 363, 364, 422, 424, 429, 430, 432, 435, 441, 442, 444, 448, 449, 451, 453, 454, 457, 458, 459, 461, 464, 465, 468, 469, 472, 474, 476, 478, 479, 490], "alpha": [369, 374, 375, 391, 394], "alreadi": [4, 10, 41, 42, 53, 54, 55, 354, 472], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 61, 75, 95, 97, 100, 102, 106, 110, 118, 123, 127, 128, 129, 132, 141, 143, 144, 145, 146, 150, 152, 157, 158, 159, 160, 161, 165, 172, 186, 187, 188, 189, 215, 216, 223, 226, 232, 233, 235, 236, 334, 349, 350, 358, 359, 406, 423, 427, 450, 453, 470, 472, 490], "alter": 92, "altern": [3, 4, 16, 21, 84, 85, 96, 97, 224, 225, 227, 231, 240, 241, 243, 245, 246, 247, 248, 344, 360, 449, 451, 476], "although": [20, 100, 122, 123, 124, 458], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 92, 97, 98, 101, 114, 141, 147, 163, 193, 195, 246, 248, 302, 349, 425, 443, 449, 476, 478], "amax": [6, 225], "ambigu": 490, "amin": [6, 231], "among": 101, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 181, 184, 186, 187, 188, 191, 194, 197, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 301, 302, 303, 304, 307, 317, 319, 323, 325, 327, 330, 331, 334, 335, 336, 337, 341, 342, 344, 346, 347, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 375, 376, 378, 387, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 490, 498], "anaconda": 3, "analog": [116, 118, 120, 122, 123, 125], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 86, 87, 168, 366, 367, 419, 420, 474, 498], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 62, 63, 74, 88, 91, 93, 97, 100, 102, 103, 116, 118, 122, 123, 128, 132, 133, 153, 154, 155, 157, 162, 164, 174, 181, 182, 198, 208, 209, 221, 223, 242, 244, 302, 323, 368, 412, 442, 475, 490], "anoth": [4, 76, 97, 112, 122, 123, 147, 307, 327, 356, 363, 430], "answer": 370, "anti": [92, 133], "anyth": 100, "ap": 197, "apart": 461, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 100, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "appear": [110, 139, 140, 472], "append": [0, 6, 93, 101, 103, 110, 121, 122, 123, 186], "appli": [31, 32, 33, 56, 64, 102, 237, 418, 426, 457, 461], "applic": [10, 100], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [97, 100, 121, 122, 123, 334], "appropri": [4, 31, 32, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 156, 208, 238, 239, 242, 244, 368, 396, 399, 453, 490], "approxim": [134, 461], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 155, 157, 158, 159, 160, 161, 162, 165, 170, 171, 172, 175, 176, 177, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 324, 325, 334, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 393, 394, 396, 399, 400, 402, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 461, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 490, 498], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 68, 75, 87, 88, 89, 90, 92, 95, 96, 97, 98, 102, 106, 108, 109, 111, 112, 115, 137, 138, 141, 146, 154, 155, 157, 161, 163, 169, 170, 184, 185, 201, 209, 212, 213, 217, 218, 219, 220, 221, 223, 224, 225, 229, 231, 233, 236, 310, 350, 353, 356, 358, 359, 363, 367, 392, 423, 426, 429, 435, 444, 450, 457, 459, 461, 464, 465, 468, 469, 470, 478, 480, 482], "arbitrari": [48, 96, 100, 102, 170, 224, 426, 464, 468], "arbitrarili": 102, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 78], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 79], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 439], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 440], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 455], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 456], "area": 461, "arg": [62, 184, 368], "arg1": 183, "arg2": 183, "argmax": [0, 6, 32, 97, 238, 364, 454, 490], "argmin": [6, 31, 97, 239, 454, 490], "argpartit": [6, 33, 364, 454, 490], "argsort": [6, 97, 364, 434, 442, 454, 460, 490], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 64, 65, 66, 68, 70, 75, 78, 79, 86, 87, 95, 96, 97, 100, 103, 107, 108, 109, 111, 141, 142, 143, 144, 145, 146, 160, 165, 168, 171, 182, 183, 186, 200, 201, 212, 213, 214, 215, 216, 223, 224, 226, 232, 233, 234, 236, 331, 344, 347, 348, 357, 358, 359, 361, 363, 366, 367, 419, 420, 421, 423, 426, 427, 428, 433, 437, 438, 439, 440, 448, 450, 455, 456, 457, 461, 470, 471, 490, 498], "argwher": [6, 349], "ari": [39, 53, 54, 55, 98, 101, 163, 444, 478], "arithmet": [56, 155, 227, 228, 243, 246, 248, 357, 449, 451, 476, 483, 494], "around": [6, 97, 155, 363, 418, 431], "arr": [22, 42, 90, 100, 162, 365, 392, 418, 465, 469], "arr2": 100, "arr_t": [49, 97, 302], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 256, 299, 300, 301, 302, 303, 304, 307, 310, 311, 312, 313, 315, 316, 317, 318, 320, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 494, 498], "array2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 74, 76, 88, 91, 101, 112, 153, 154, 155, 174, 181, 209, 221, 346, 356, 363, 364, 368, 436, 441, 453, 457, 475], "array_of_diagon": 92, "array_repr": 6, "array_split": [6, 70, 444], "array_str": 6, "arrays_and_dtyp": 426, "art": 10, "asanyarrai": [6, 41, 42, 45], "asarrai": [4, 6, 40, 42, 43, 45, 48, 346, 441], "asarray_chkfinit": [6, 40, 41], "ascend": [193, 195, 434], "ascii": 100, "ascontiguousarrai": [6, 40, 41, 42, 45], "asfarrai": [6, 40, 41], "asfortranarrai": [6, 40, 41, 42, 43], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 97, "aspect": 100, "assembl": [70, 99, 164, 432, 448, 479], "assign": [97, 312, 334, 464, 468], "associ": [56, 161, 162, 490], "assum": [10, 56, 103, 120, 126, 128, 199, 202, 206, 223, 461], "astyp": [6, 97, 155, 349], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 54, 55, 110], "atleast_2d": [6, 53, 55, 110], "atleast_3d": [6, 53, 54, 110], "atol": [17, 172], "attain": 0, "attempt": [96, 200], "attribut": [97, 100, 105, 134, 154, 167, 203, 353, 482, 483], "automat": [161, 162], "avail": [2, 3, 4, 10, 77, 81, 100, 107, 228, 234, 238, 239, 242, 244, 245, 483, 490], "averag": [6, 97, 227, 243, 320, 451, 494], "avg": 56, "avoid": [36, 41, 54, 55, 120, 126, 128], "aweight": 81, "ax": [16, 21, 31, 32, 56, 80, 83, 93, 96, 97, 102, 110, 116, 118, 119, 122, 123, 124, 127, 128, 130, 132, 138, 157, 170, 201, 205, 207, 208, 222, 224, 225, 227, 231, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 341, 344, 354, 360, 422, 429, 430, 447, 449, 451, 452, 457, 458, 459, 460, 472, 476], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 69, 70, 80, 82, 83, 84, 85, 92, 93, 97, 98, 99, 101, 102, 110, 112, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 138, 139, 140, 144, 145, 150, 155, 157, 163, 164, 169, 197, 201, 209, 221, 222, 224, 225, 226, 227, 228, 231, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 297, 298, 299, 300, 301, 308, 309, 315, 319, 320, 321, 325, 326, 327, 330, 335, 336, 337, 338, 340, 342, 344, 345, 355, 356, 360, 362, 363, 364, 417, 422, 424, 425, 429, 430, 432, 435, 441, 442, 444, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 472, 474, 476, 478, 479, 490], "axis1": [92, 97, 310, 341, 343, 452, 459], "axis2": [92, 97, 310, 341, 343, 452, 459], "axisa": 82, "axisb": 82, "axisc": 82, "axiserror": [33, 442], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 61, 69, 70, 76, 82, 85, 96, 97, 99, 100, 102, 103, 106, 148, 149, 158, 159, 164, 170, 172, 185, 187, 188, 191, 197, 200, 201, 202, 204, 205, 206, 207, 208, 217, 219, 224, 225, 231, 348, 350, 354, 358, 359, 369, 426, 432, 448, 457, 458, 466, 477, 479, 498], "back": [97, 150, 315, 417, 425, 430, 466], "backend": [2, 156, 371, 373, 374, 384, 389, 405], "backward": [10, 49, 97, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 157, 302, 429, 430], "bad": 380, "bartlett": 6, "base": [0, 4, 100, 102, 109, 112, 141, 155, 161, 162, 206, 211, 212, 213, 214, 215, 216, 221, 222, 224, 356, 358, 359, 363, 365], "base_repr": 6, "basic": [64, 102, 490, 494], "bc": [191, 204], "bcde": 103, "becaus": [10, 16, 21, 120, 126, 128, 474, 490], "becom": [10, 97, 161, 344], "been": [99, 364, 430, 454], "befor": [4, 22, 33, 70, 83, 97, 101, 121, 122, 123, 139, 140, 208, 222, 225, 231, 246, 248, 325, 336, 360, 422, 429, 430, 442, 449, 451, 458, 476, 477], "begin": [101, 103, 155, 209, 221, 435], "behav": [210, 363], "behavior": [97, 130, 237, 307, 458], "behind": [97, 325], "being": [3, 100, 144, 145, 226, 232], "belong": [94, 161], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 88, 91, 100, 126, 199, 462, 463, 467, 474, 490], "best": 103, "beta": [6, 379], "between": [17, 23, 39, 64, 93, 101, 134, 149, 152, 157, 170, 172, 209, 221, 385, 399, 450, 461, 474], "beyond": [4, 429], "bia": 81, "big": 100, "bin": [94, 115, 117, 131, 161, 162, 406], "bin_edg": [161, 162], "binari": [58, 60, 61, 148, 149, 151, 152, 483, 494], "binary_repr": 6, "bincount": [6, 94, 161], "binomi": [6, 387], "bins_0": 162, "bins_1": 162, "bit": [58, 59, 60, 61, 100, 134, 167, 171, 186, 217, 219, 220, 245, 247, 427, 438, 494], "bitwis": [58, 60, 61], "bitwise_and": [6, 59, 60, 61, 171, 217], "bitwise_invert": [59, 171], "bitwise_left_shift": 186, "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 171, 219], "bitwise_right_shift": 427, "bitwise_xor": [6, 58, 59, 60, 171, 220], "biufcmmosuv": 100, "blackman": 6, "block": [6, 70, 99, 133, 164, 185, 432, 448, 479], "bmat": 6, "bool": [9, 16, 17, 21, 31, 32, 36, 37, 38, 41, 44, 49, 56, 64, 76, 80, 83, 94, 97, 100, 103, 106, 133, 147, 155, 158, 159, 161, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 199, 201, 202, 206, 209, 221, 222, 225, 227, 229, 231, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 302, 349, 350, 360, 422, 425, 435, 438, 449, 451, 453, 472, 475, 476, 490], "bool_": 9, "boolean": [58, 59, 60, 61, 76, 83, 100, 112, 141, 147, 169, 171, 172, 175, 176, 177, 178, 179, 180, 184, 217, 219, 222, 223, 227, 243, 245, 246, 248, 349, 356, 422, 425, 449, 453, 476], "boolean_sequ": 184, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 61, 68, 75, 82, 95, 96, 106, 122, 129, 141, 143, 144, 145, 146, 158, 159, 160, 165, 170, 172, 185, 186, 187, 188, 201, 215, 216, 217, 219, 220, 224, 226, 232, 233, 236, 247, 348, 350, 358, 359, 423, 427, 450, 457, 459, 464, 466, 468, 470, 477, 480], "bound": [363, 418, 434, 453, 454], "boundari": [157, 363, 418], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 490, "broadcast": [15, 16, 21, 31, 32, 38, 56, 62, 63, 68, 76, 80, 95, 102, 112, 141, 144, 145, 165, 178, 179, 201, 202, 220, 222, 224, 225, 226, 227, 231, 232, 236, 238, 239, 243, 245, 246, 247, 248, 358, 359, 360, 363, 364, 422, 424, 449, 450, 451, 454, 458, 470, 476, 480], "broadcast_arrai": [6, 63], "broadcast_shap": 6, "broadcast_to": [6, 62, 458], "brought": 10, "buffer": [44, 84, 85, 97, 147, 148, 149, 151, 152, 210, 225, 231, 240, 241, 425], "buffer_lik": 148, "buffererror": 147, "build": 494, "build_loc": 4, "built": 100, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 97, 100, 102, 148, 149, 210, 302, 318, 322], "byte_bound": 6, "byteord": 100, "byteswap": 6, "bz2": 210, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 82, 86, 87, 95, 96, 97, 100, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 135, 141, 142, 143, 144, 145, 146, 153, 154, 156, 158, 159, 160, 165, 168, 170, 171, 175, 176, 177, 185, 186, 187, 188, 191, 197, 200, 201, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 232, 233, 236, 302, 307, 315, 328, 347, 348, 349, 350, 352, 353, 357, 358, 359, 361, 366, 367, 417, 418, 421, 423, 425, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 457, 458, 470, 471, 472, 473, 480, 481, 482, 498], "c_contigu": [43, 45, 97, 307], "ca": 73, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 83, 85, 93, 95, 101, 102, 106, 108, 109, 111, 115, 124, 141, 142, 143, 146, 157, 162, 165, 192, 193, 194, 195, 197, 202, 213, 215, 216, 222, 224, 227, 233, 236, 243, 246, 248, 350, 358, 359, 360, 422, 423, 449, 450, 470, 476, 477, 483, 498], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 100, 121, 122, 123, 126, 129, 150, 192, 194, 200, 223, 256, 349, 447, 453, 458, 461, 498], "callabl": [150, 223], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 64, 74, 75, 82, 88, 89, 91, 92, 95, 96, 97, 100, 102, 103, 104, 105, 106, 113, 115, 116, 117, 118, 121, 122, 123, 126, 127, 128, 131, 133, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 164, 165, 166, 169, 170, 171, 172, 174, 181, 182, 184, 185, 186, 187, 188, 189, 196, 197, 198, 208, 209, 210, 215, 216, 217, 219, 220, 221, 223, 224, 226, 230, 232, 233, 236, 245, 247, 302, 307, 334, 336, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 364, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 418, 423, 425, 427, 442, 450, 453, 454, 457, 459, 461, 462, 464, 468, 469, 470, 472, 475, 477, 480, 481, 482, 490, 498], "can_cast": [6, 494], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 70, 238, 239, 444, 447, 448], "capabl": [23, 36, 40, 41, 43, 45, 56, 114, 155, 209, 221, 224], "care": [23, 192], "cartesian": 229, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 74, 84, 85, 88, 91, 93, 102, 103, 104, 105, 113, 117, 120, 125, 129, 131, 148, 149, 150, 151, 153, 154, 155, 157, 166, 192, 203, 206, 209, 210, 216, 221, 230, 240, 241, 245, 247, 351, 352, 353, 360, 425, 451, 457, 462, 474, 475, 481, 482, 490], "cast": [16, 21, 49, 64, 70, 76, 83, 84, 85, 97, 102, 141, 164, 192, 222, 224, 227, 237, 240, 241, 243, 245, 246, 247, 248, 302, 360, 422, 432, 448, 449, 451, 476, 479], "cat": [370, 387], "cauchi": 406, "cbrt": [6, 445], "cdef": 103, "cdot": 457, "cdoubl": 9, "ceil": [6, 35, 135, 142, 143, 428, 431, 471], "center": [116, 117, 118, 119, 123, 124, 131], "central": [157, 388, 389], "certain": [100, 223], "ch": 10, "chain": [96, 97, 102, 103], "chang": [49, 74, 82, 97, 100, 102, 112, 240, 241, 302, 315, 339, 344, 347, 356, 357, 363, 364, 365, 417, 425, 430, 474, 494], "char": 100, "charact": [100, 149], "check": [16, 21, 40, 41, 42, 64, 120, 174, 181, 189, 202, 205], "check_valid": 386, "chi": [372, 388], "chisquar": 6, "choic": [6, 67, 97, 115, 116, 118, 121, 122, 123, 127, 128, 130, 132, 193, 195, 303], "choicelist": 435, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 97, 103, 435, 480, 490], "chosen": [34, 161, 472, 480], "circ": 498, "circl": [204, 461], "clamp": [363, 453, 454], "clariti": 133, "class": [3, 4, 97, 100, 136, 148, 149, 150, 152, 169, 210, 368, 396, 462, 494], "classic": 102, "clear": [100, 490], "clip": [6, 97, 363, 418, 453, 454, 490], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 97, 102, 110, 168, 209, 302, 368, 396, 419, 420, 428, 431, 461], "closer": 471, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 79, 194, 439, 455, 461], "code": [44, 100, 183], "codeplai": 4, "coeffici": [197, 205, 208], "coerc": [44, 148, 149, 150, 151, 152, 210], "coin": 370, "col": 169, "collaps": [97, 315, 472], "column": [6, 40, 41, 42, 43, 45, 48, 49, 69, 70, 84, 85, 92, 97, 99, 113, 133, 139, 140, 157, 163, 164, 166, 192, 193, 197, 200, 203, 206, 302, 417, 418, 432, 444, 448, 462, 464, 468, 473, 475, 479], "column_stack": [6, 70, 99, 164, 432, 448, 479], "com": 4, "combin": [0, 100, 110, 118, 123, 128, 132, 157], "combinatori": 103, "come": 472, "comma": [100, 102], "command": 4, "common": [121, 122, 123, 349, 457], "common_typ": 6, "compani": [370, 387], "compar": [17, 37, 106, 144, 145, 162, 172, 226, 232], "compare_chararrai": 6, "comparison": [2, 106, 158, 159, 187, 188, 350, 483, 494], "compat": [3, 4, 10, 16, 21, 49, 56, 97, 222, 227, 242, 243, 244, 246, 248, 302, 422, 425, 449, 476, 494], "compil": [4, 100, 156], "complement": 474, "complementari": [143, 474], "complet": [3, 4, 103, 149, 150, 203, 430, 490], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 64, 83, 96, 97, 100, 103, 107, 114, 115, 116, 118, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 141, 144, 145, 168, 173, 174, 180, 181, 192, 193, 194, 195, 203, 204, 206, 222, 224, 226, 232, 237, 246, 248, 305, 306, 361, 419, 420, 422, 443, 449, 472, 476, 477, 490, 494], "complex128": [9, 56, 426], "complex64": [9, 56, 97, 141, 335], "compliant": 97, "complic": [102, 498], "compon": [10, 37, 119, 124, 131, 134, 168, 237, 419], "compos": 75, "composit": [85, 185, 451, 461], "compress": [6, 112, 435, 453, 490], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 65, 71, 72, 78, 79, 83, 84, 85, 93, 94, 102, 108, 109, 110, 111, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 142, 157, 158, 159, 160, 161, 162, 168, 169, 171, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 220, 222, 224, 227, 228, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 347, 357, 361, 419, 421, 422, 423, 428, 431, 433, 437, 438, 439, 440, 445, 449, 451, 455, 456, 457, 461, 464, 468, 476], "compute_uv": [190, 206], "concat": 70, "concaten": [6, 69, 99, 164, 432, 444, 448, 454, 479], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482, 490], "cond": [6, 196], "condit": [34, 49, 96, 97, 112, 190, 196, 200, 302, 349, 356, 363, 365, 435, 480], "condlist": 435, "confus": 146, "conj": [6, 72, 97, 120, 168, 189, 192, 361], "conjug": [6, 10, 71, 96, 97, 126, 129, 168, 189, 192, 193, 194, 195, 224, 305, 361, 477], "consecut": [93, 101, 157], "conserv": 229, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 103, 131, 155, 172, 175, 193, 195, 199, 209, 221, 224, 368, 396, 472], "consist": [37, 38, 101, 115, 116, 118, 121, 122, 123, 127, 128, 130, 132, 149, 162, 208, 209, 454, 457], "constant": [9, 100, 157], "constraint": 56, "construct": [40, 41, 42, 67, 88, 91, 92, 97, 100, 113, 148, 149, 150, 151, 152, 166, 184, 210, 230, 303, 351, 435, 458, 459, 480, 483], "constructor": 490, "consum": [97, 322], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 75, 76, 78, 79, 82, 83, 92, 95, 97, 100, 106, 108, 109, 111, 116, 117, 118, 121, 126, 129, 131, 137, 141, 142, 143, 144, 145, 146, 147, 152, 156, 157, 158, 159, 161, 162, 165, 168, 169, 171, 186, 187, 188, 193, 203, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 226, 227, 232, 233, 236, 238, 239, 242, 243, 244, 246, 248, 331, 347, 349, 350, 357, 358, 359, 361, 368, 419, 421, 422, 423, 427, 428, 431, 433, 437, 438, 439, 440, 445, 446, 449, 450, 455, 456, 460, 464, 465, 468, 469, 470, 471, 476, 490], "content": [43, 97, 405], "context": 10, "contigu": [40, 41, 42, 43, 45, 96, 97, 102, 200, 328, 417, 425], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 368, 400], "contourf": 229, "contract": [102, 103, 457], "contrast": [102, 363], "contribut": [10, 56, 161, 162], "control": [4, 49, 64, 70, 76, 97, 102, 164, 224, 302, 432, 448, 479], "conveni": [97, 344, 368], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 96, 102, 103, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 170, 208, 224, 354, 457], "convers": [49, 97, 102, 302, 483], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 74, 86, 87, 88, 91, 100, 102, 103, 110, 153, 154, 155, 174, 181, 209, 221, 366, 367, 418, 473, 474, 475], "convolut": [10, 73, 77], "convolv": [6, 77], "coolei": 10, "coordin": [80, 150, 157, 169, 184, 229, 418, 473], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 76, 88, 89, 91, 92, 97, 100, 104, 105, 112, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 229, 230, 237, 256, 302, 315, 317, 325, 331, 334, 351, 352, 353, 355, 356, 357, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 425, 434, 442, 447, 462, 463, 464, 467, 468, 475, 481, 482, 490], "copysign": [6, 347, 357], "copyto": [6, 97, 112, 307, 356], "core": [3, 100, 102, 490], "corner": [116, 118, 122, 123], "corrcoef": [6, 81], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 70, 71, 72, 75, 78, 79, 86, 87, 95, 106, 108, 109, 111, 114, 120, 126, 128, 135, 141, 142, 143, 144, 145, 146, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 232, 233, 236, 347, 348, 350, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 431, 433, 437, 438, 439, 440, 445, 446, 448, 450, 455, 456, 470, 471], "correctli": [20, 26, 28, 31, 32, 46, 50, 80, 201, 225, 231, 238, 239, 245, 247, 349, 360, 451], "correl": [6, 494], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 68, 70, 74, 86, 87, 88, 89, 91, 92, 97, 98, 104, 105, 113, 116, 117, 118, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 163, 166, 169, 184, 192, 193, 209, 210, 221, 223, 224, 230, 302, 307, 311, 351, 352, 353, 366, 367, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 429, 435, 436, 444, 449, 457, 460, 461, 462, 464, 468, 475, 476, 478, 481, 482, 490], "correspondingli": [10, 444], "cosh": [6, 14, 25, 78, 440, 456], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 439, 440, 455, 456], "cost": [102, 103], "costli": 103, "could": [97, 120, 126, 128, 336], "count": [16, 21, 57, 80, 94, 100, 103, 138, 148, 149, 151, 152, 157, 161, 162, 349, 360, 370, 441, 451, 472, 483, 494], "count_nonzero": [6, 349], "counterpart": [10, 120, 126, 128, 490], "cov": [6, 386], "covari": 81, "cover": [464, 468, 494], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 74, 77, 81, 88, 91, 104, 105, 107, 113, 117, 131, 148, 149, 150, 151, 153, 154, 155, 166, 209, 210, 221, 228, 230, 234, 245, 351, 352, 353, 462, 475, 481, 482], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 90, 91, 92, 97, 100, 103, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 237, 302, 307, 351, 352, 353, 364, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 459, 462, 464, 465, 468, 469, 475, 481, 482, 490, 494], "creation": [100, 103, 483, 490, 494, 498], "crop": [115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132], "cross": [6, 77, 184], "csingl": 9, "ct": 10, "cube": [65, 141, 445], "cubic": 103, "cuda": 4, "cumprod": [6, 97, 240, 490], "cumproduct": 6, "cumsum": [6, 93, 97, 241, 451, 461, 490], "cumul": [83, 84, 85, 93, 97, 240, 241, 308, 309, 451, 461], "cupi": [2, 483], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 75, 78, 79, 86, 87, 95, 97, 100, 103, 108, 109, 111, 141, 142, 143, 144, 145, 146, 149, 160, 162, 165, 166, 171, 186, 212, 213, 214, 215, 216, 226, 232, 233, 234, 236, 334, 347, 348, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 450, 455, 456, 470, 471], "curv": 461, "custom": 490, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 197], "cutoff": 202, "cycl": [117, 131, 184], "cyclic": 363, "cython": 4, "d": [0, 16, 21, 23, 56, 69, 70, 84, 85, 88, 89, 90, 91, 92, 96, 97, 99, 100, 113, 117, 119, 124, 131, 133, 137, 139, 140, 152, 163, 164, 166, 170, 184, 191, 193, 194, 200, 201, 204, 224, 229, 240, 241, 247, 315, 349, 358, 359, 360, 363, 373, 417, 425, 432, 434, 436, 448, 451, 453, 457, 458, 459, 466, 472, 475, 479, 490], "d0": [368, 395, 397], "d1": [368, 397], "d3": 89, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 91, 94, 95, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 120, 126, 128, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 181, 186, 187, 188, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 232, 233, 234, 236, 237, 238, 239, 242, 243, 244, 245, 246, 248, 302, 331, 344, 346, 347, 348, 350, 352, 353, 356, 357, 358, 359, 361, 363, 364, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 454, 455, 456, 459, 462, 470, 471, 476, 479, 480, 481, 482, 483, 494], "datatyp": [100, 199], "date": 4, "datetim": 100, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [81, 97, 246, 248, 338, 345, 449, 476], "decai": 381, "decim": [35, 97, 134, 135, 332, 428, 431], "decomposit": [189, 196, 199, 202, 206, 494], "decompress": 210, "decreas": [94, 461], "decreasingli": [10, 116, 118, 122, 123], "deem": 147, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 193, 195, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 315, 347, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 363, 366, 367, 368, 372, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 412, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 490], "default_rng": 6, "defg": 103, "defici": 199, "defin": [10, 29, 51, 82, 100, 105, 115, 144, 145, 154, 160, 161, 162, 226, 232, 237, 353, 357, 420, 482, 490], "definit": [82, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 142, 189, 461], "deg": [20, 367], "deg2rad": [6, 366, 367, 474], "degre": [6, 20, 86, 246, 248, 366, 367, 410, 449, 474, 476, 498], "del": 498, "delet": [6, 22], "delta": [10, 246, 248, 449, 474, 476], "demonstr": [0, 4, 100], "dens": [169, 184, 230], "densiti": 161, "depend": [4, 34, 92, 114, 120, 126, 128, 193, 197, 203, 205, 206, 209, 245, 247, 435, 480], "deprec": 6, "deprecate_with_doc": 6, "depth": [69, 70, 98, 99, 164, 432, 444, 448, 479], "deriv": 157, "descend": 206, "descr": 100, "describ": [83, 100, 222, 422, 494], "descript": [83, 100, 121, 123, 161, 222, 422, 490], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 63, 104, 105, 113, 121, 122, 123, 153, 154, 155, 166, 209, 221, 352, 353, 458, 462, 481, 482], "destin": [70, 164, 235, 363, 364, 432, 448, 454, 479], "destruct": 498, "det": [6, 204], "detail": [35, 116, 118, 122, 123, 127, 128, 130, 132, 147, 431, 464, 465, 468, 469, 472, 490], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 61, 65, 75, 78, 79, 86, 87, 95, 108, 109, 111, 143, 144, 145, 146, 149, 150, 152, 165, 186, 191, 197, 203, 204, 211, 212, 213, 214, 215, 216, 224, 226, 232, 233, 236, 348, 358, 359, 366, 367, 418, 421, 423, 427, 433, 435, 437, 439, 440, 445, 446, 450, 455, 456, 459, 470, 471, 473], "devel": 4, "develop": [3, 4], "deviat": [97, 227, 243, 246, 248, 338, 368, 383, 390, 449, 476], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 74, 83, 88, 89, 91, 97, 102, 104, 105, 113, 114, 117, 131, 135, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 222, 223, 224, 227, 230, 243, 246, 248, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 422, 447, 449, 462, 464, 468, 475, 476, 481, 482], "df": [372, 388, 410, 411], "dfden": [376, 389], "dfnum": [376, 389], "dft": [10, 115, 120, 121, 125, 126, 129], "di": [89, 90], "diag": [6, 91, 92, 102, 113, 139, 140, 166, 192, 194, 206, 435, 459], "diag_indic": [6, 90, 133], "diag_indices_from": [6, 89, 133], "diagflat": [6, 88, 92, 459], "diagon": [6, 88, 89, 90, 91, 97, 102, 113, 133, 166, 189, 193, 194, 195, 223, 343, 435, 459, 462, 463, 464, 465, 467, 468, 469, 490], "dice": 385, "dictionari": 100, "diff": [6, 85, 101, 157, 161], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 74, 83, 85, 88, 91, 93, 97, 100, 101, 104, 105, 113, 116, 117, 121, 122, 124, 127, 130, 131, 134, 139, 140, 141, 148, 149, 150, 151, 153, 154, 155, 157, 166, 172, 195, 209, 210, 221, 222, 224, 230, 307, 351, 352, 353, 356, 358, 359, 364, 422, 450, 454, 462, 464, 468, 474, 475, 481, 482, 494], "digit": [6, 10, 134, 161], "dim": [17, 418], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 69, 70, 76, 80, 81, 82, 89, 92, 93, 97, 98, 100, 110, 122, 123, 135, 139, 140, 157, 164, 169, 170, 184, 199, 201, 203, 222, 225, 227, 229, 230, 231, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 315, 323, 334, 346, 349, 351, 360, 364, 368, 398, 400, 401, 403, 418, 422, 425, 436, 444, 447, 448, 449, 451, 452, 453, 454, 458, 459, 464, 465, 468, 469, 472, 473, 476, 478, 490, 494], "dimension": [2, 4, 33, 73, 77, 80, 83, 89, 90, 91, 92, 93, 94, 97, 101, 102, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 148, 149, 151, 157, 163, 169, 184, 197, 203, 207, 208, 222, 225, 229, 230, 231, 238, 239, 242, 244, 246, 248, 337, 346, 351, 354, 360, 422, 442, 449, 451, 453, 458, 461, 472, 476, 477, 478, 483], "direct": [10, 82, 93, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 139, 140, 157, 348], "directli": [100, 150, 169, 221, 349, 454], "directori": 156, "dirichlet": 6, "discard": 471, "discont": 474, "discontinu": 474, "discret": [3, 10, 73, 77, 85, 93, 101, 115, 116, 117, 118, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 157, 368, 483], "disp": 6, "dispers": 413, "displac": [97, 339], "distanc": 157, "distinct": [144, 145, 226, 232], "distinguish": 100, "distribut": [3, 4, 221, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 494], "divid": [6, 39, 98, 99, 143, 146, 163, 233, 423, 444, 470, 478], "divis": [95, 143, 146, 233, 358, 359, 423, 444, 470, 471], "divisor": [246, 248, 449, 476], "divmod": [6, 490], "dlpack": 147, "dmlc": 147, "dn": [368, 395, 397], "do": [3, 4, 100, 223, 370, 430, 461], "docstr": 490, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 490], "doe": [22, 23, 39, 64, 102, 112, 114, 129, 144, 145, 147, 203, 237, 240, 241, 356, 444, 453], "domain": [10, 120, 125], "done": [3, 49, 97, 102, 208, 302, 472, 474], "dot": [6, 97, 102, 103, 170, 189, 194, 196, 200, 202, 203, 205, 206, 207, 208, 224, 457, 477], "doubl": [9, 381, 457], "down": 140, "dp": [95, 191, 193, 204, 205, 358, 359, 425, 426, 450, 470], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 238, 239, 242, 244, 245, 302, 307, 351, 352, 353, 362, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "dpnp": [0, 2, 3, 4, 10, 483, 490, 494, 495, 498], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 74, 88, 89, 91, 104, 105, 113, 117, 131, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 169, 209, 210, 221, 223, 230, 249, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482, 483], "dpnp_iface_arraycr": [230, 351], "draw": [368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "drawn": [368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 393, 394, 396, 399, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 435], "drill": [370, 387], "driver": 2, "drop": [3, 100], "dsplit": [6, 70, 99, 444], "dst": 76, "dstack": [6, 69, 70, 164, 432, 444, 448, 479], "dt": [100, 461], "dt2": 100, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 64, 65, 66, 70, 71, 72, 75, 78, 79, 81, 83, 84, 85, 86, 87, 89, 95, 97, 102, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 186, 187, 188, 200, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 308, 309, 320, 326, 335, 338, 340, 343, 345, 347, 348, 350, 352, 353, 357, 358, 359, 360, 361, 366, 367, 368, 390, 396, 412, 421, 422, 423, 426, 427, 428, 431, 432, 433, 437, 438, 439, 440, 443, 445, 446, 448, 449, 450, 451, 453, 455, 456, 459, 462, 463, 467, 470, 471, 476, 478, 479, 481, 482, 490], "due": [129, 498], "dump": 6, "dx": [157, 461], "dy": 157, "dz": 157, "e": [9, 10, 14, 25, 27, 47, 83, 84, 92, 100, 104, 105, 110, 113, 116, 120, 121, 122, 123, 126, 128, 129, 141, 149, 153, 154, 157, 166, 186, 192, 204, 207, 211, 352, 353, 368, 420, 424, 452, 462, 481, 482], "ea": 103, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 71, 72, 75, 78, 79, 84, 85, 89, 92, 94, 95, 97, 98, 100, 103, 106, 108, 109, 111, 116, 118, 120, 122, 123, 126, 127, 128, 130, 132, 139, 140, 141, 142, 143, 146, 150, 157, 158, 159, 161, 162, 163, 168, 171, 175, 176, 177, 184, 186, 187, 188, 192, 193, 194, 195, 197, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 233, 235, 236, 237, 332, 347, 349, 350, 357, 358, 359, 361, 364, 370, 387, 418, 419, 421, 423, 424, 427, 428, 429, 431, 433, 437, 438, 439, 440, 444, 445, 446, 448, 450, 454, 455, 456, 458, 461, 464, 465, 468, 469, 470, 471, 472, 473, 478, 490], "easier": 453, "easiest": 4, "easili": [0, 162], "edg": [68, 94, 161, 162], "edge_ord": 157, "ediff1d": [6, 93, 157], "effect": [103, 141, 144, 145, 226, 232, 358, 359, 474], "effici": [10, 115, 129, 149, 199, 202, 206], "efgh": 103, "eig": [6, 193, 194, 195], "eigenvalu": [192, 193, 194, 195, 494], "eigenvector": [192, 193, 194, 195], "eigh": [6, 192, 194, 195], "eigval": [6, 192, 193, 195], "eigvalsh": [6, 192, 193, 194], "einstein": [96, 102, 103, 170, 208, 224, 354, 457], "einsum": [6, 96, 103, 170, 208, 224, 354, 457], "einsum_path": [6, 102], "either": [37, 38, 45, 56, 83, 92, 100, 116, 118, 120, 122, 123, 126, 128, 130, 132, 133, 157, 170, 193, 195, 201, 203, 222, 238, 239, 242, 244, 245, 247, 418, 422, 434, 435, 454, 461], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 66, 68, 71, 72, 75, 76, 78, 79, 83, 84, 85, 90, 92, 93, 94, 95, 97, 100, 101, 103, 106, 108, 109, 111, 112, 113, 114, 116, 118, 122, 123, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 194, 198, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 240, 241, 242, 244, 245, 246, 247, 248, 297, 298, 305, 306, 308, 309, 311, 312, 315, 317, 318, 320, 322, 324, 325, 330, 331, 332, 333, 335, 338, 339, 342, 345, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 363, 365, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 463, 465, 467, 469, 470, 471, 472, 473, 474, 476, 480, 490, 494, 498], "element_count": [97, 335, 441], "ellipsi": 102, "els": [0, 204, 254], "elsewher": [113, 166, 462, 480], "empti": [4, 6, 36, 97, 105, 116, 118, 122, 123, 127, 128, 130, 132, 149, 153, 154, 197, 312, 352, 353, 356, 444, 481, 482], "empty_lik": [6, 36, 104, 154, 353, 482], "enabl": [133, 199, 202, 206], "encount": [240, 241, 242, 244, 435], "end": [22, 23, 92, 100, 101, 103, 121, 155, 209, 221], "end_tim": 0, "endian": 100, "endpoint": [23, 155, 209, 221, 461], "engin": 404, "enough": 161, "entir": [56, 83, 120, 161, 162, 222, 227, 242, 243, 244, 246, 248, 422, 449, 476], "entri": [39, 97, 98, 100, 104, 112, 120, 126, 128, 133, 138, 139, 140, 163, 337, 444, 447, 478], "enumer": 147, "env": 4, "environ": 4, "ep": [134, 199, 348, 420], "epsilon": [199, 420], "epsneg": 134, "equal": [6, 16, 17, 21, 37, 38, 39, 56, 70, 77, 81, 85, 97, 98, 113, 155, 157, 158, 159, 161, 162, 163, 164, 172, 174, 181, 183, 186, 187, 188, 198, 202, 203, 208, 209, 221, 233, 325, 350, 368, 378, 412, 423, 427, 428, 431, 432, 437, 444, 447, 448, 462, 464, 468, 478, 479], "equal_nan": [17, 37, 172, 472], "equat": [197, 205, 207, 208, 494], "equiv": [49, 64, 70, 76, 97, 102, 164, 198, 224, 302, 432, 448, 479], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 74, 82, 83, 86, 87, 95, 96, 97, 98, 99, 103, 110, 112, 137, 144, 145, 146, 163, 184, 207, 222, 233, 236, 256, 297, 298, 310, 323, 331, 334, 344, 346, 349, 354, 357, 366, 367, 368, 396, 422, 423, 425, 431, 436, 442, 450, 451, 453, 457, 460, 470, 472, 478, 490, 498], "error": [83, 98, 102, 107, 120, 125, 163, 192, 222, 418, 422, 444, 447, 478, 483, 490], "essenti": 4, "estim": [81, 162, 370, 387, 461], "et": 10, "etc": [10, 36, 41, 100, 116, 118, 122, 123, 127, 128, 130, 132, 387], "euclidean": 197, "euler_gamma": 9, "evalu": [16, 17, 21, 97, 102, 103, 106, 174, 181, 208, 229, 297, 298, 354, 435, 457, 490], "even": [10, 100, 117, 119, 120, 121, 124, 125, 126, 128, 129, 131, 174, 181, 428, 431], "evenli": [23, 155, 209, 221, 428, 461], "event": 216, "everi": [128, 364, 454], "everywher": 126, "exact": [112, 200, 356], "exactli": [10, 48, 152, 368, 396, 435], "examin": 197, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 310, 312, 315, 316, 317, 323, 325, 329, 331, 334, 335, 336, 339, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 498], "exce": [216, 444], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 74, 75, 78, 79, 86, 87, 93, 94, 95, 96, 97, 104, 105, 106, 108, 109, 111, 113, 127, 128, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 163, 164, 165, 166, 171, 175, 176, 177, 186, 187, 188, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 242, 243, 244, 245, 246, 247, 248, 302, 347, 348, 350, 352, 353, 357, 358, 359, 360, 361, 366, 367, 421, 423, 424, 425, 427, 428, 433, 437, 438, 439, 440, 442, 444, 445, 446, 449, 450, 451, 455, 456, 470, 471, 476, 481, 482], "exclud": [11, 12, 22, 209, 368, 412], "exclus": [368, 396], "execut": [3, 4, 40, 41, 42, 77, 81, 107, 150, 228, 234, 245, 371, 373, 374, 384, 389, 405, 498], "executor": 0, "exist": [10, 69, 70, 99, 100, 110, 147, 164, 425, 432, 444, 448, 479, 494], "exp": [6, 10, 109, 111, 115, 204, 213, 215, 222], "exp2": [6, 108, 111], "expand": [93, 110], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 71, 72, 75, 78, 79, 80, 83, 84, 85, 86, 87, 95, 96, 100, 106, 108, 109, 111, 114, 126, 135, 141, 142, 143, 144, 145, 146, 158, 159, 160, 165, 168, 171, 172, 175, 176, 177, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 231, 232, 233, 236, 240, 241, 243, 245, 246, 247, 248, 347, 348, 350, 357, 358, 359, 360, 361, 366, 367, 419, 421, 422, 423, 427, 428, 431, 433, 437, 438, 439, 440, 445, 446, 449, 450, 451, 455, 456, 470, 471, 476, 480], "explain": [118, 123, 128, 132, 490], "explan": 100, "explicit": 102, "explicitli": [92, 116, 118, 122, 123, 127, 128, 130, 132], "exploit": [10, 129], "explor": [103, 370, 387], "expm1": [6, 108, 109, 213], "expon": [10, 108, 109, 111, 141, 198, 215, 216, 222, 358, 359, 394, 494], "exponenti": [6, 10, 103, 215, 216, 222, 381, 407], "expos": [148, 490], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 102, 103, 210, 498], "extend": [10, 100, 185, 490], "extens": [0, 1, 3, 4, 9, 156, 210, 483], "extobj": 224, "extra": [100, 126, 152], "extract": [6, 88, 91, 92, 102, 113, 137, 166, 169, 223, 356, 435, 453, 459], "extrema": 494, "ey": [6, 71, 72, 80, 97, 122, 123, 144, 145, 166, 170, 185, 196, 198, 199, 207, 208, 220, 226, 232, 436, 459], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 95, 97, 100, 102, 104, 105, 106, 108, 109, 111, 113, 114, 117, 129, 131, 135, 141, 142, 143, 144, 145, 146, 153, 154, 157, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 198, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 232, 233, 236, 302, 307, 315, 347, 348, 350, 352, 353, 357, 358, 359, 361, 366, 367, 389, 417, 418, 421, 423, 425, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 466, 470, 471, 473, 480, 481, 482], "f0": 100, "f1": 100, "f2": 100, "f4": 64, "f8": [64, 100], "f_contigu": [43, 45], "f_k": 10, "fab": [6, 11, 12], "fact": 194, "factor": [10, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 189, 203], "fail": [97, 334, 370], "fallback": [192, 194, 371, 373, 374, 384, 389, 405], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 62, 63, 64, 74, 80, 81, 83, 85, 94, 97, 100, 102, 103, 105, 106, 112, 133, 147, 150, 154, 155, 158, 159, 161, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 199, 201, 202, 206, 209, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 231, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 254, 297, 298, 299, 300, 302, 319, 320, 321, 326, 338, 340, 345, 349, 350, 353, 360, 362, 422, 425, 435, 438, 449, 451, 472, 475, 476, 480, 482, 490], "famili": 10, "fanci": 453, "fashion": [216, 490], "fast": [10, 115, 116, 118, 122, 123, 128, 129, 132], "fastcopyandtranspos": 6, "faster": [10, 144, 145], "fastest": [97, 315, 417, 425], "fb": [103, 466], "featur": 100, "few": 133, "fft": [6, 483, 494], "fft2": [6, 115, 118, 122], "fftfreq": [6, 10, 115, 119, 124, 131], "fftn": [6, 115, 116, 123, 129, 132], "fftshift": [6, 10, 116, 118, 123, 124], "fh": 149, "field": [100, 229], "field1": 100, "file": [148, 149, 151, 152, 156, 210], "filenam": [149, 210], "fill": [6, 22, 36, 97, 104, 105, 133, 153, 154, 161, 162, 229, 237, 307, 352, 353, 462, 481, 482], "fill_diagon": 6, "fill_valu": [153, 154], "filt": 466, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "final": [4, 10, 128, 129, 130, 132, 155, 221], "find": [34, 57, 94, 97, 114, 161, 199, 202, 206, 333, 348, 349, 424, 434, 442, 472, 494], "find_common_typ": 6, "fine": 4, "finfo": [348, 420], "finfo_object": 134, "finit": [42, 175, 176, 177, 178, 179, 237], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 61, 69, 70, 75, 82, 83, 92, 95, 96, 97, 100, 103, 106, 109, 116, 118, 120, 122, 123, 138, 141, 143, 144, 145, 146, 157, 158, 159, 161, 162, 163, 165, 170, 172, 183, 185, 186, 187, 188, 200, 207, 210, 215, 216, 217, 219, 220, 223, 224, 225, 226, 229, 231, 232, 233, 236, 238, 239, 315, 350, 354, 356, 358, 359, 360, 417, 423, 425, 427, 429, 432, 434, 435, 442, 443, 446, 450, 451, 452, 454, 457, 459, 470, 472, 477, 478, 479], "fit": [197, 424], "fix": [6, 35, 66, 92, 100, 142, 363, 428, 431, 471], "flag": [43, 45, 97, 100, 307], "flanneri": 10, "flat": [31, 32, 97, 101, 136, 315, 418, 424, 473], "flatnonzero": [6, 349], "flatten": [6, 22, 31, 32, 33, 70, 80, 84, 85, 88, 91, 92, 97, 101, 133, 137, 161, 162, 225, 231, 238, 239, 240, 241, 245, 247, 314, 328, 336, 349, 354, 364, 417, 418, 424, 429, 442, 453, 454, 459, 472, 473, 477], "flexibl": [96, 100, 149, 200], "flip": [6, 59, 92, 133, 139, 140, 171, 370], "fliplr": [6, 92, 133, 138, 140], "flipud": [6, 92, 133, 138, 139], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 64, 75, 83, 85, 100, 104, 105, 109, 113, 114, 117, 131, 134, 135, 141, 148, 149, 150, 151, 152, 153, 154, 157, 161, 162, 166, 168, 197, 198, 199, 201, 202, 209, 210, 215, 216, 221, 222, 225, 227, 231, 237, 243, 246, 248, 348, 352, 353, 358, 359, 368, 372, 397, 398, 400, 401, 403, 406, 407, 409, 412, 419, 420, 421, 422, 433, 449, 462, 474, 476, 481, 482, 490, 494], "float16": [9, 141], "float32": [0, 9, 42, 44, 49, 64, 84, 97, 100, 102, 141, 302, 348, 368, 390, 395, 397, 398, 400, 401, 403, 409, 412, 426], "float64": [0, 9, 44, 49, 56, 64, 85, 97, 100, 102, 302, 368, 369, 375, 376, 377, 379, 381, 382, 383, 390, 391, 394, 395, 397, 398, 400, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 426, 478], "float_pow": [6, 358, 359], "floor": [6, 35, 66, 135, 143, 233, 423, 428, 431, 471], "floor_divid": [6, 233, 423], "flop": 103, "flush": 149, "fmax": [6, 145, 225, 226, 232, 242, 358, 359], "fmin": [6, 144, 226, 231, 232, 244, 358, 359], "fmod": [6, 233, 358, 359, 423], "fn": 150, "fname": 210, "follow": [4, 10, 56, 100, 110, 126, 134, 147, 167, 193, 195, 202, 457, 490, 494], "forc": [100, 102], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 69, 74, 88, 91, 97, 99, 102, 103, 122, 123, 126, 153, 154, 155, 174, 181, 184, 209, 221, 344, 432, 475, 479], "format": [100, 147, 149, 152, 494], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 364, 454], "forth": 457, "fortran": [45, 49, 97, 302, 315, 417, 418, 425, 473], "forward": [10, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 157], "found": [4, 434, 490], "four": [368, 397], "fourier": [10, 115, 116, 117, 118, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 483], "fourth": 116, "frac": [10, 461], "fraction": [234, 471], "free": [97, 331], "freedom": [246, 248, 410, 449, 476], "freq": [117, 119, 124, 131], "freq_spectrum": 120, "frequenc": [10, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131], "freshli": [178, 179], "frexp": 6, "fro": [190, 201], "frobeniu": 190, "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 62, 64, 67, 70, 74, 76, 83, 86, 87, 88, 89, 91, 92, 97, 99, 100, 102, 104, 105, 109, 112, 113, 117, 121, 130, 131, 132, 138, 141, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 164, 166, 169, 184, 192, 194, 195, 199, 200, 210, 222, 223, 229, 230, 303, 307, 337, 342, 351, 352, 353, 356, 360, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 422, 425, 426, 432, 434, 435, 446, 447, 448, 451, 453, 454, 459, 462, 464, 466, 468, 469, 472, 474, 475, 479, 480, 481, 482, 494], "from_": 64, "from_dlpack": 6, "frombuff": [6, 149, 151, 152, 210], "fromfil": [6, 148, 151, 152], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 148, 149, 152], "frompyfunc": 6, "fromregex": [6, 210], "fromstr": [6, 148, 149, 151, 210], "front": 466, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "full_lik": [6, 36, 105, 153, 353, 482], "full_matric": 206, "fulli": 100, "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 74, 77, 81, 83, 86, 87, 92, 95, 97, 102, 104, 105, 107, 111, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 133, 141, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 166, 184, 192, 194, 200, 210, 213, 215, 216, 222, 223, 228, 229, 233, 234, 245, 297, 298, 307, 310, 331, 334, 344, 352, 353, 358, 359, 364, 366, 367, 368, 371, 373, 374, 384, 389, 405, 422, 423, 431, 432, 437, 449, 453, 454, 458, 464, 465, 468, 469, 470, 476, 479, 480, 481, 482, 483, 490, 494], "fundament": [10, 100], "further": [464, 468], "futur": [100, 162], "fweight": 81, "g": [4, 10, 100, 104, 105, 113, 153, 154, 166, 352, 353, 368, 462, 481, 482, 498], "gamma": [6, 408], "gauss": 10, "gaussian": [368, 390, 414], "gc": 103, "gcd": 6, "ge9eeca7c90b": 6, "gen": 102, "gender": 100, "gener": [4, 10, 33, 56, 100, 121, 126, 129, 132, 155, 170, 192, 193, 194, 195, 202, 203, 210, 221, 368, 370, 373, 404, 461, 464, 468, 475, 490, 494], "genfromtxt": [6, 210], "geometr": [6, 155, 209], "geomspac": [6, 209, 221], "get": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 90, 91, 97, 104, 105, 113, 117, 120, 126, 128, 131, 141, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 334, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 454, 462, 464, 465, 468, 469, 475, 481, 482, 490], "get_arrai": 97, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 368], "get_sycl_devic": 368, "get_sycl_queu": 368, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 100], "getter": [97, 334], "gid": 162, "github": 147, "give": [10, 91, 97, 141, 162, 344, 425, 436, 441, 472], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 69, 74, 80, 81, 84, 85, 93, 96, 97, 99, 100, 101, 103, 104, 105, 112, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 144, 145, 153, 154, 155, 157, 161, 162, 172, 196, 209, 221, 223, 225, 226, 229, 231, 232, 240, 241, 242, 244, 245, 246, 247, 248, 299, 300, 302, 308, 309, 321, 326, 327, 332, 335, 338, 340, 345, 349, 352, 353, 356, 360, 362, 363, 368, 373, 395, 412, 422, 424, 428, 429, 430, 432, 434, 435, 441, 444, 449, 451, 453, 457, 458, 461, 462, 472, 476, 479, 481, 482, 490], "global": 0, "good": 380, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 74, 88, 91, 104, 105, 113, 117, 131, 148, 149, 150, 151, 153, 154, 155, 166, 209, 210, 221, 230, 351, 352, 353, 462, 475, 481, 482], "grade": 100, "gradient": [6, 93, 101, 197], "graphic": 4, "great": 10, "greater": [6, 97, 98, 106, 143, 159, 186, 187, 188, 199, 203, 325, 350, 427, 435, 437, 447, 474], "greater_equ": [6, 106, 158, 187, 188, 350], "greatest": 143, "greedi": [102, 103], "grid": [40, 41, 42, 150, 169, 229, 230, 351], "group": [34, 349], "guarante": [100, 425], "guid": [2, 3], "gumbel": 6, "gz": 210, "h": [156, 189, 203, 229], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 83, 84, 85, 94, 100, 106, 110, 120, 125, 126, 150, 157, 158, 159, 164, 168, 173, 174, 180, 181, 187, 188, 194, 204, 206, 222, 227, 233, 240, 241, 243, 245, 246, 247, 248, 350, 360, 419, 420, 421, 422, 423, 424, 430, 433, 435, 447, 448, 449, 451, 452, 453, 458, 459, 473, 476, 490], "had": [364, 454], "hadamard": 103, "half": [14, 25, 116, 118, 119, 120, 122, 123, 209, 368, 398, 400, 401, 403, 412, 452], "ham": 6, "han": 6, "hand": [82, 208], "handl": [23, 100, 114, 210, 349, 418, 453, 454, 494], "happen": [49, 56, 97, 302, 370, 461], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 100, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 69, 70, 71, 72, 75, 78, 79, 82, 83, 84, 85, 86, 87, 95, 96, 99, 100, 106, 108, 109, 111, 114, 122, 123, 132, 134, 135, 141, 142, 143, 144, 145, 146, 158, 159, 160, 164, 165, 168, 171, 172, 175, 176, 177, 178, 179, 186, 187, 188, 197, 200, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 226, 227, 232, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 347, 348, 350, 356, 357, 358, 359, 360, 361, 366, 367, 387, 419, 421, 422, 423, 424, 427, 428, 431, 432, 433, 437, 438, 439, 440, 445, 446, 448, 449, 450, 451, 455, 456, 458, 470, 471, 474, 476, 479, 490], "hd": 103, "header": 156, "heavisid": 6, "hello": 100, "help": 498, "helper": 494, "henc": [110, 157], "here": [6, 33, 100, 102, 120, 125, 126, 442, 464, 468], "hermit": [193, 195], "hermitian": [120, 125, 126, 128, 129, 189, 192, 193, 194, 195, 199, 202, 206, 494], "hfft": [6, 10, 125], "hierarchi": 183, "high": [126, 368, 396, 399, 412], "higher": [102, 163, 477, 478], "highest": 115, "highli": 149, "hist": [161, 406], "hist_0": 162, "hist_1": 162, "histogram": [6, 94, 162, 434, 494], "histogram2d": 6, "histogram_bin_edg": [6, 161], "histogramdd": [6, 161], "hold": [68, 84, 85, 161, 201, 240, 241, 245, 247, 459], "homogen": 100, "horizont": [69, 70, 92, 99, 133, 138, 163, 164, 432, 444, 448, 479], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 462, 464, 468, 475, 481, 482], "household": 203, "how": [0, 4, 100, 126, 129, 157, 363, 418, 453, 454, 464, 468], "howev": [97, 336, 453], "hsplit": [6, 70, 444], "hstack": [6, 69, 70, 99, 432, 444, 448, 479], "http": [4, 147], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 439, 440, 455, 456, 494], "hypergeometr": 6, "hypot": [6, 422], "hypotenus": [165, 422], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 302, 307, 325, 331, 334, 336, 339, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 490, 498], "i0": 6, "i1": [97, 100, 339], "i2": [97, 100, 339], "i3": [97, 339], "i4": [64, 100], "i7": 102, "i8": [64, 100], "icpx": 4, "icx": 4, "id": [16, 21, 97, 317], "ident": [3, 6, 16, 21, 42, 83, 100, 113, 124, 133, 205, 407], "identifi": 100, "ieee": 134, "ifft": [6, 115, 122, 123, 125, 126, 131], "ifft2": [6, 116, 121, 123], "ifftn": [6, 118, 121, 122], "ifftshift": [6, 10, 119, 123], "ignor": [31, 32, 82, 100, 144, 145, 152, 161, 162, 225, 226, 227, 231, 232, 238, 239, 242, 243, 244, 246, 248, 449, 476], "ihfft": [6, 120], "ii": [102, 391], "iinfo": 385, "iinfo_object": 167, "ij": [102, 103, 229], "ijk": 102, "il": 103, "il1": 464, "il2": 464, "illustr": 194, "ilm": 102, "imag": [6, 10, 20, 37, 97, 419, 420, 490], "imaginari": [20, 37, 97, 126, 144, 145, 168, 173, 174, 180, 181, 192, 193, 195, 198, 226, 232, 237, 316, 419, 420, 443, 472], "implement": [3, 4, 6, 44, 115, 147], "impli": 100, "implicit": 102, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 310, 315, 316, 323, 325, 329, 334, 335, 336, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 393, 402, 406, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "improv": 102, "in1d": 6, "in_array1": 107, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 74, 83, 88, 91, 94, 102, 103, 114, 153, 154, 155, 156, 161, 162, 174, 181, 202, 209, 221, 222, 227, 242, 243, 244, 246, 248, 368, 412, 422, 449, 475, 476], "include_initi": 83, "inclus": [368, 396, 399, 435], "increas": [94, 100, 110, 121, 126, 161, 475], "ind": [33, 94, 207, 363, 364, 464, 465, 468, 469], "index": [22, 31, 32, 33, 34, 67, 97, 100, 103, 113, 116, 122, 130, 137, 147, 169, 184, 229, 238, 239, 303, 315, 339, 349, 363, 364, 417, 418, 425, 434, 435, 444, 453, 454, 464, 468, 472, 473, 480, 483, 494], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 83, 89, 90, 94, 97, 98, 100, 102, 103, 112, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 137, 147, 150, 161, 163, 207, 208, 223, 224, 230, 238, 239, 299, 300, 301, 324, 327, 333, 342, 349, 363, 364, 418, 425, 434, 437, 438, 442, 444, 453, 454, 460, 464, 465, 468, 469, 472, 473, 478, 480], "indices_or_sect": [39, 98, 163, 444, 478], "indirect": [33, 442], "individu": 378, "inequ": 350, "inexact": [141, 237, 245, 247], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 75, 95, 172, 175, 176, 177, 178, 179, 190, 201, 211, 212, 214, 226, 232, 237, 238, 239, 242, 244, 247, 361, 445, 470], "infer": [42, 83, 222, 422, 425], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 143, 175, 176, 177, 178, 179, 233, 237, 242, 244, 247, 423, 471, 494], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 190], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 97, 100, 120, 126, 128, 134, 313, 490, 494], "initi": [18, 19, 83, 97, 104, 152, 225, 231, 242, 244, 245, 247, 319, 321, 326, 340, 360, 368, 451], "inner": [6, 82, 102, 103, 200, 224, 354], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 199, 201, 203, 204, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 315, 323, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 390, 396, 412, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 481, 482], "insert": [6, 22, 31, 32, 92, 94, 97, 102, 110, 155, 161, 209, 221, 238, 239, 242, 244, 333, 364, 434, 435, 494], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 120, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 166, 169, 209, 210, 221, 223, 224, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "instead": [34, 49, 92, 96, 97, 102, 110, 142, 155, 161, 162, 169, 200, 209, 216, 221, 225, 231, 302, 349, 360, 418, 451, 490], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 39, 44, 56, 63, 70, 80, 82, 83, 84, 85, 88, 89, 91, 92, 93, 97, 98, 100, 104, 105, 106, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 166, 167, 169, 197, 198, 201, 207, 208, 209, 221, 222, 223, 225, 227, 231, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 323, 335, 344, 346, 352, 353, 355, 360, 363, 364, 368, 396, 399, 418, 422, 424, 425, 429, 430, 431, 441, 442, 444, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 474, 475, 476, 478, 481, 482, 490], "int16": 100, "int32": [0, 9, 44, 64, 100, 104, 105, 113, 148, 151, 153, 154, 166, 210, 245, 247, 352, 353, 368, 370, 378, 380, 385, 387, 393, 396, 412, 426, 451, 462, 481, 482], "int64": [0, 9, 64, 100, 245, 247, 426], "int8": [100, 360], "int_": 9, "int_0": 461, "int_t": 461, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 63, 66, 83, 84, 85, 94, 97, 98, 100, 135, 138, 141, 142, 143, 147, 161, 163, 167, 171, 184, 186, 198, 201, 207, 222, 225, 227, 231, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 336, 344, 358, 359, 360, 363, 368, 396, 399, 404, 418, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 444, 446, 449, 451, 453, 457, 459, 471, 472, 473, 474, 476, 478, 490], "integer_lik": 457, "integr": [3, 4, 56, 83, 85, 141, 161, 222, 227, 234, 243, 246, 248, 358, 359, 422, 449, 451, 461, 476], "intel": [3, 102], "intend": [97, 344], "intent": 141, "interchang": [97, 235, 341, 452], "interfac": [0, 148], "interior": 157, "intermedi": [84, 102, 103], "intern": 368, "interp": 6, "interpol": 126, "interpret": [2, 40, 41, 42, 48, 63, 74, 100, 120, 126, 128, 148, 184, 223, 349, 363, 490], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 94, 110, 155, 209, 221, 368, 396, 398, 400, 401, 403, 411, 412, 452], "intp": [245, 247], "intrins": 490, "introduc": 429, "introduct": 10, "introselect": [97, 325, 355], "inv": [6, 190, 202], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 196, 202, 207, 208, 213, 414, 439, 440, 455, 456, 472], "invert": [6, 59, 196, 202, 207], "invok": 490, "involv": 207, "io": [147, 210], "irfft": [6, 117, 120, 125, 127, 128, 129, 131], "irfft2": [6, 126, 128, 130], "irfftn": [6, 126, 127, 132], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 100, "isbuiltin": 100, "isclos": [6, 17], "iscomplex": [6, 174, 180], "iscomplexobj": [6, 173, 181], "isfinit": [6, 176, 177, 178, 179, 237, 242, 244, 247], "isfortran": 6, "isin": 6, "isinf": [6, 175, 177, 178, 179, 237], "isn": 100, "isnan": [6, 175, 176, 178, 179, 237, 240, 241, 242, 244, 245, 247], "isnat": [6, 177], "isneginf": [6, 175, 176, 177, 179, 237], "isposinf": [6, 175, 176, 177, 178, 237], "isreal": [6, 173, 181], "isrealobj": [6, 174, 180], "isscalar": 6, "issctyp": 6, "issu": 122, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 97, 148, 149, 151, 472, 483], "item_dtyp": 100, "item_hasobject": 100, "item_is_point": 100, "items": [97, 100], "itemset": 6, "iter": [6, 40, 41, 42, 97, 103, 136, 148, 149, 151, 152, 314, 315, 364, 454, 494], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 88, 97, 120, 126, 128, 134, 161, 162, 166, 192, 193, 194, 195, 200, 202, 208, 227, 243, 246, 248, 344, 405, 417, 422, 425, 442, 449, 460, 461, 462, 476, 490], "itself": [49, 97, 100, 237, 302, 490], "iu": 223, "iu1": [223, 468], "iu2": 468, "ix_": 6, "ixgrid": 184, "j": [71, 72, 97, 102, 116, 118, 120, 121, 122, 123, 125, 126, 129, 130, 132, 141, 150, 168, 169, 185, 189, 192, 193, 214, 224, 237, 344, 354, 361, 364, 419, 443, 446, 454, 457], "j1": 185, "jame": 10, "ji": 102, "jil": 102, "jk": [102, 103], "jl": 103, "john": 10, "join": [69, 70, 99, 164, 432, 444, 448, 479, 494], "jump": [86, 366], "just": [69, 92, 100, 116, 122, 127, 129, 130], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 88, 91, 95, 97, 102, 106, 108, 109, 111, 113, 114, 135, 141, 142, 143, 144, 145, 146, 158, 159, 160, 165, 168, 171, 175, 176, 177, 185, 186, 187, 188, 197, 203, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 232, 233, 236, 256, 302, 307, 347, 348, 350, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 457, 462, 463, 464, 465, 467, 468, 469, 470, 471, 474, 480, 498], "kaiser": 6, "kappa": 413, "keep": [48, 49, 97, 302, 472], "keepdim": [16, 18, 19, 21, 31, 32, 56, 80, 97, 201, 222, 225, 227, 228, 231, 238, 239, 242, 243, 244, 245, 246, 247, 248, 297, 298, 299, 300, 319, 320, 321, 326, 338, 340, 345, 360, 362, 364, 422, 449, 451, 454, 476], "kei": [3, 33, 97, 100, 136, 261, 292, 442], "key2": 100, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 74, 75, 78, 79, 82, 86, 87, 88, 89, 91, 95, 97, 104, 105, 108, 109, 111, 113, 117, 131, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 165, 166, 169, 171, 186, 210, 212, 213, 214, 215, 216, 223, 224, 226, 230, 232, 233, 234, 236, 237, 307, 347, 348, 351, 352, 353, 357, 358, 359, 361, 366, 367, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 421, 423, 427, 428, 433, 437, 438, 439, 440, 450, 455, 456, 462, 464, 468, 470, 471, 475, 480, 481, 482, 490], "ki": 102, "kind": [33, 49, 64, 70, 76, 83, 97, 100, 102, 134, 164, 200, 222, 224, 301, 302, 325, 336, 355, 422, 432, 442, 448, 479, 494], "kl": [10, 102, 103], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 149, 406], "kron": 6, "kroneck": 185, "kth": [97, 325, 355], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 75, 78, 79, 86, 87, 95, 97, 106, 108, 109, 111, 114, 135, 141, 142, 143, 144, 145, 146, 150, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 232, 233, 234, 236, 286, 304, 331, 347, 348, 350, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 470, 471], "l": [10, 39, 100, 189, 193, 195], "la": [192, 194, 195], "label": 102, "laid": 45, "lam": 393, "lambda": 150, "lapack": [192, 194], "laplac": 6, "laptop": 4, "larg": [10, 86, 100, 161, 202, 237, 366, 474, 498], "larger": [102, 115, 116, 118, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 459, 474, 490], "largest": [10, 103, 129, 134, 142, 167, 197, 233, 237, 423], "largest_singular_valu": 202, "last": [16, 21, 22, 33, 82, 92, 93, 97, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 138, 155, 157, 170, 200, 209, 221, 224, 315, 360, 417, 425, 429, 434, 442, 447, 451, 457, 474], "later": 498, "latest": [4, 147], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 144, 145, 226, 232, 364, 454], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 95, 97, 102, 104, 105, 106, 108, 109, 111, 113, 114, 135, 141, 142, 143, 144, 145, 146, 153, 154, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 232, 233, 236, 307, 313, 347, 348, 350, 352, 353, 357, 358, 359, 361, 366, 367, 421, 423, 425, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 470, 471, 480, 481, 482, 483], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [121, 122, 123, 240, 241, 466], "learn": [3, 4, 216], "least": [53, 54, 55, 56, 90, 99, 100, 103, 110, 133, 139, 144, 145, 149, 174, 197, 203, 226, 232, 432, 479], "left": [10, 28, 31, 32, 35, 50, 80, 92, 94, 97, 139, 140, 186, 194, 201, 225, 231, 238, 239, 245, 247, 333, 360, 411, 427, 431, 434, 451, 461, 475], "left_shift": [6, 427], "leg": [165, 422], "legaci": 404, "len": [97, 100, 118, 119, 120, 123, 125, 126, 127, 128, 132, 169, 197, 225, 229, 230, 231, 278, 436, 475], "length": [23, 39, 56, 84, 85, 93, 106, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 152, 155, 157, 161, 164, 192, 206, 221, 225, 229, 231, 240, 241, 364, 371, 425, 426, 432, 434, 435, 436, 447, 454, 457, 458, 479], "less": [6, 84, 85, 106, 158, 159, 161, 162, 188, 197, 202, 240, 241, 245, 247, 350, 360, 435, 437, 451, 459], "less_equ": [6, 106, 158, 159, 187, 350], "let": 370, "level": [483, 490], "level_zero": [23, 36, 40, 41, 42, 43, 45, 74, 88, 91, 104, 105, 113, 117, 131, 148, 149, 150, 151, 153, 154, 155, 166, 209, 210, 221, 230, 351, 352, 353, 462, 475, 481, 482], "lexicograph": 472, "lexsort": [6, 33, 442], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 429, 430], "librari": [3, 4, 490], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 69, 97, 99, 102, 104, 113, 128, 148, 149, 150, 151, 152, 153, 155, 166, 209, 210, 221, 223, 302, 315, 323, 346, 352, 364, 368, 412, 425, 454, 481, 494], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 74, 75, 77, 78, 79, 81, 86, 87, 95, 97, 100, 104, 105, 106, 107, 108, 109, 111, 113, 134, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 165, 166, 167, 171, 175, 176, 177, 186, 187, 188, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 302, 304, 347, 348, 350, 352, 353, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 393, 394, 396, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421, 423, 425, 427, 428, 433, 437, 438, 439, 440, 442, 445, 446, 449, 450, 451, 455, 456, 470, 471, 476, 481, 482], "linalg": [6, 96, 102, 103, 446], "line": [197, 210], "linear": [10, 73, 77, 197, 205, 221, 483, 494], "linspac": [0, 6, 23, 107, 155, 221, 229, 461, 474], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 62, 70, 74, 88, 91, 97, 98, 99, 100, 102, 103, 119, 124, 133, 153, 154, 155, 157, 163, 164, 174, 181, 209, 210, 221, 224, 344, 418, 424, 426, 432, 435, 444, 448, 457, 460, 473, 475, 478, 479, 480], "list_pickl": 100, "littl": 100, "ln": 221, "load": [6, 149, 210], "loadtxt": [6, 149], "loc": [368, 379, 381, 382, 390, 414], "local": 4, "locat": [0, 4, 156, 178, 179, 223, 354, 379, 381, 434], "log": [6, 111, 155, 204, 209, 212, 213, 214, 215, 221, 222, 383], "log10": [6, 211, 213, 214], "log1p": [6, 109, 111, 211, 212, 214], "log2": [6, 211, 212, 213, 216], "log_bas": 221, "logabsdet": 204, "logaddexp": [6, 83, 216, 222], "logaddexp2": [6, 215, 222], "logarithm": [83, 191, 204, 209, 211, 212, 213, 214, 215, 216, 222, 384, 494], "logic": [16, 21, 217, 218, 219, 220, 483, 494], "logical_and": [6, 58, 218, 219, 220], "logical_not": [6, 59, 171, 217, 219, 220], "logical_or": [6, 60, 217, 218, 220], "logical_xor": [6, 61, 217, 218, 219], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 155, 209], "logsumexp": [83, 215, 216], "lomax": 391, "long": [100, 198], "longer": [120, 126, 498], "look": [348, 454], "lookfor": 6, "loop": 102, "loos": 101, "lorentz": 406, "lose": [120, 126, 128], "low": [116, 118, 122, 123, 368, 396, 399, 412, 490], "lower": [88, 113, 161, 162, 183, 189, 193, 195, 223, 462, 463, 464, 465, 468, 469], "lowest": [56, 102, 103, 368, 396], "lstsq": 6, "m": [4, 10, 81, 99, 100, 102, 113, 116, 118, 120, 122, 123, 126, 127, 128, 132, 138, 139, 140, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 223, 224, 364, 435, 453, 454, 462, 463, 464, 465, 467, 468, 469], "machin": [4, 10, 134, 167, 197, 216, 420], "machineri": 100, "made": [36, 41, 53, 100, 147, 185, 237, 444], "magnitud": [11, 12, 75, 114, 361], "mai": [16, 20, 21, 49, 64, 68, 70, 76, 85, 97, 100, 102, 103, 110, 116, 118, 120, 121, 122, 123, 125, 126, 129, 132, 157, 162, 164, 190, 192, 193, 197, 201, 203, 216, 221, 224, 237, 243, 246, 248, 302, 334, 364, 420, 432, 448, 458, 479, 490], "main": [88, 89, 90, 91, 92, 113, 133, 166, 195, 223, 459, 462, 463, 464, 467, 468], "mainstai": 10, "maintain": [94, 97, 100, 161, 333, 434, 454], "major": [4, 40, 41, 42, 43, 45, 48, 49, 97, 302, 349, 417, 418, 473], "make": [43, 45, 69, 100, 229, 472, 474], "manag": 0, "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 490], "manipul": [3, 89, 483, 494], "manual": [4, 100, 458], "mappingproxi": 100, "mask": [100, 184, 223, 349, 356, 365, 453, 464, 468], "mask_func": 223, "mask_indic": [6, 464, 468], "mass": 161, "mat": 6, "match": [11, 12, 41, 70, 76, 80, 83, 93, 100, 147, 149, 157, 170, 222, 224, 363, 364, 422, 448, 453, 454, 457, 480], "math": [10, 107], "mathemat": [483, 494], "matlab": 146, "matmul": [6, 96, 203, 206, 477], "matplotlib": [229, 406], "matric": [133, 150, 169, 184, 191, 192, 194, 196, 199, 201, 202, 203, 204, 206, 224, 229, 494], "matrix": [81, 96, 102, 170, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 224, 229, 446, 467, 475, 477, 483, 494], "matrix_pow": [6, 446], "matrix_rank": 6, "matter": 472, "max": [0, 6, 18, 31, 97, 134, 144, 145, 161, 162, 167, 197, 199, 226, 231, 232, 242, 304, 385, 454, 458, 474, 490], "max_arg": 0, "max_val": 0, "maxima": [144, 225, 226], "maximum": [0, 6, 18, 31, 32, 68, 97, 103, 144, 145, 225, 231, 232, 238, 239, 242, 244, 299, 319, 358, 359, 362, 364, 474], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 74, 80, 88, 89, 91, 97, 102, 104, 105, 113, 116, 117, 118, 122, 123, 127, 128, 129, 130, 131, 132, 148, 149, 150, 151, 152, 153, 154, 157, 166, 169, 190, 201, 210, 223, 228, 230, 243, 246, 248, 302, 307, 315, 344, 351, 352, 353, 368, 381, 383, 386, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 413, 414, 417, 425, 449, 451, 462, 464, 468, 475, 476, 481, 482, 490], "meaningfulli": 490, "meant": 490, "median": [0, 6], "meet": 435, "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 95, 97, 100, 102, 104, 105, 106, 108, 109, 111, 113, 114, 135, 141, 142, 143, 144, 145, 146, 147, 153, 154, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 229, 232, 233, 236, 307, 313, 339, 347, 348, 350, 352, 353, 357, 358, 359, 361, 366, 367, 421, 423, 425, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 470, 471, 480, 481, 482, 483, 498], "mersenn": 368, "mesh": 184, "meshgrid": [6, 150, 169, 184, 230, 351], "met": [96, 200], "meta": 100, "metadata": 100, "method": [10, 16, 18, 19, 21, 33, 49, 74, 96, 97, 100, 136, 147, 149, 199, 202, 206, 302, 307, 323, 331, 334, 346, 349, 368, 425, 436, 451, 453, 460, 483], "mgrid": [116, 118, 127, 130, 169, 184], "mgridclass": 230, "middl": [10, 92, 116, 118, 122, 123, 194], "might": [102, 121, 122, 123], "min": [6, 19, 32, 68, 97, 134, 144, 145, 161, 162, 167, 190, 197, 203, 206, 225, 226, 232, 244, 304, 454, 490], "min_scalar_typ": 6, "minima": [145, 231, 232], "minimum": [6, 19, 31, 32, 68, 97, 141, 144, 145, 225, 226, 231, 238, 239, 242, 244, 300, 321, 358, 359, 362], "minlength": 57, "mintypecod": 6, "minu": [111, 143, 233, 423, 471], "miscellan": [2, 483, 494], "mise": 413, "miss": 210, "mix": 224, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 112, 423, 474], "mode": [67, 73, 77, 97, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 203, 303, 327, 342, 363, 406, 411, 418, 434, 453, 454], "model": [4, 370], "modf": 6, "modifi": [74, 92, 133, 405], "modul": [115, 156, 483], "modulu": [146, 233, 423], "monoton": [94, 161], "moor": 202, "more": [0, 3, 4, 33, 36, 53, 54, 55, 99, 100, 102, 103, 111, 127, 130, 139, 140, 147, 149, 162, 164, 169, 197, 198, 199, 200, 202, 206, 213, 215, 448, 457, 461, 472, 474, 490, 498], "most": [3, 4, 22, 92, 93, 100, 103, 115, 121, 237, 368, 404, 447], "move": [97, 235, 325, 429, 430, 460, 472], "moveaxi": [6, 429, 430, 460], "msg": 0, "msort": 6, "mt19937": 404, "mu": [379, 383, 390, 413], "multi": [2, 97, 169, 184, 230, 339, 351, 418, 472, 483], "multi_dot": [6, 96, 102, 103], "multi_index": 418, "multiarrai": 100, "multidimension": [161, 170, 480], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 70, 82, 83, 98, 100, 102, 116, 118, 122, 123, 127, 128, 130, 132, 162, 163, 164, 184, 192, 193, 194, 195, 196, 200, 222, 225, 227, 231, 242, 243, 244, 246, 248, 422, 432, 435, 442, 444, 448, 449, 461, 472, 476, 478, 479, 483], "multipli": [6, 84, 102, 194, 245, 360], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 386, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 75, 78, 79, 80, 83, 84, 85, 86, 87, 93, 95, 96, 99, 108, 109, 110, 111, 114, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 139, 141, 142, 143, 144, 145, 146, 149, 152, 157, 158, 159, 160, 161, 162, 164, 165, 168, 171, 175, 176, 177, 178, 179, 186, 187, 188, 189, 200, 201, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 347, 348, 350, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 421, 422, 423, 424, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 470, 471, 476, 479, 480], "mx": 197, "n": [0, 4, 10, 34, 39, 85, 89, 90, 93, 94, 97, 98, 99, 100, 101, 110, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 150, 157, 163, 166, 184, 197, 198, 199, 202, 203, 206, 207, 208, 223, 224, 229, 246, 248, 344, 356, 363, 370, 385, 387, 397, 407, 434, 436, 444, 446, 449, 452, 453, 454, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 475, 476, 478, 490], "n1": 229, "n2": [210, 229], "n3": 229, "naiv": 103, "name": [0, 6, 100], "namedtupl": 203, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 95, 141, 144, 145, 172, 175, 176, 177, 178, 179, 212, 225, 226, 227, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 358, 359, 360, 445, 449, 470, 472, 476, 494], "nan_to_num": 6, "nanargmax": [6, 31, 239], "nanargmin": [6, 32, 238], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 144, 145, 225, 226, 232, 244], "nanmean": [6, 227, 246, 248, 449, 476], "nanmedian": 6, "nanmin": [6, 144, 145, 226, 231, 232, 242], "nanpercentil": 6, "nanprod": [6, 360], "nanquantil": 6, "nanstd": [6, 227, 243, 248, 449, 476], "nansum": 6, "nanvar": [6, 227, 243, 246, 449, 476], "nat": 177, "nativ": 100, "native_cod": 100, "native_dt": 100, "natur": [204, 211, 212, 213, 214, 215, 216, 222], "nbad": 380, "nbyte": 97, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 495], "ndim": [6, 34, 36, 45, 53, 54, 55, 81, 89, 92, 97, 100, 133, 185, 206, 225, 231, 352, 458, 460, 481], "ndmin": 36, "nearest": [35, 66, 135, 142, 143, 233, 423, 428, 431, 471], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 76, 84, 85, 101, 112, 120, 126, 128, 133, 147, 155, 209, 221, 224, 227, 240, 241, 243, 245, 246, 247, 248, 360, 425, 449, 451, 476, 498], "necessarili": [192, 194], "need": [4, 36, 41, 92, 102, 156, 453, 454, 480], "needs_init": 100, "needs_pyapi": 100, "neg": [6, 10, 16, 21, 35, 57, 75, 91, 92, 94, 97, 110, 113, 116, 118, 121, 122, 123, 126, 129, 138, 141, 152, 157, 161, 175, 176, 177, 178, 179, 198, 237, 242, 244, 246, 247, 248, 334, 357, 358, 359, 360, 363, 387, 418, 431, 449, 451, 453, 454, 459, 476], "negat": 435, "negative_binomi": 6, "neginf": 237, "neither": [96, 144, 145, 206, 224, 242, 244], "nest": [44, 99, 164, 432, 448, 479], "nested_it": 6, "net": [144, 145, 226, 232], "never": [425, 474], "new": [22, 36, 49, 62, 63, 69, 70, 80, 83, 84, 85, 92, 97, 99, 100, 101, 104, 105, 110, 144, 145, 147, 151, 152, 153, 154, 155, 164, 166, 209, 221, 222, 223, 226, 232, 235, 240, 241, 245, 247, 302, 331, 334, 344, 352, 353, 422, 425, 429, 430, 432, 444, 448, 458, 460, 479, 480, 481, 482, 490], "new_dtyp": 100, "new_ord": 100, "newaxi": 110, "newbyteord": [6, 100], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 95, 97, 104, 105, 106, 108, 109, 111, 113, 114, 135, 141, 142, 143, 144, 145, 146, 153, 154, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 232, 233, 236, 302, 307, 347, 348, 350, 352, 353, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 470, 471, 481, 482], "newshap": 425, "next": [4, 134, 348], "nextaft": 6, "ngood": 380, "ni": [229, 364, 453, 454], "nine": 370, "ninja": 4, "nj": [364, 453, 454], "njm": 102, "nk": [364, 453, 454], "nl": 10, "nlk": 102, "nn": 229, "noisi": 197, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 74, 80, 88, 89, 91, 94, 97, 104, 105, 112, 113, 117, 126, 129, 131, 137, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 166, 169, 173, 175, 184, 209, 210, 221, 223, 230, 237, 238, 239, 242, 244, 246, 248, 302, 307, 324, 334, 349, 351, 352, 353, 356, 358, 359, 368, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 449, 457, 462, 464, 468, 475, 476, 480, 481, 482], "nonc": [388, 389], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 80, 97, 137, 184, 480, 490], "nor": [144, 145, 194, 242, 244], "norm": [6, 10, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 190, 194, 197, 494], "normal": [6, 81, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 161, 192, 193, 203, 216, 368, 383, 386, 397, 409, 418], "not_equ": [6, 106, 158, 159, 187, 188], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 70, 74, 82, 86, 92, 94, 95, 97, 100, 102, 103, 110, 112, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 142, 144, 145, 148, 149, 150, 151, 152, 161, 169, 171, 175, 186, 192, 210, 221, 233, 236, 246, 247, 248, 307, 331, 349, 356, 358, 359, 363, 366, 371, 373, 374, 384, 389, 423, 425, 427, 442, 449, 450, 452, 457, 458, 460, 461, 470, 472, 474, 476, 477], "notic": [100, 126, 129], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 95, 97, 104, 105, 106, 108, 109, 111, 113, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 165, 166, 171, 175, 176, 177, 186, 187, 188, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 242, 243, 244, 246, 247, 248, 302, 347, 348, 350, 352, 353, 357, 358, 359, 360, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 442, 445, 446, 449, 450, 451, 455, 456, 470, 471, 476, 481, 482], "now": [16, 21, 43, 45, 89, 194, 197, 223], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 310, 312, 315, 316, 317, 323, 325, 329, 334, 335, 336, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367, 393, 402, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "nr": 10, "nsamp": 380, "nsampl": 380, "nth": 457, "nuc": 201, "num": [0, 100, 107, 155, 209, 221, 461, 474], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 42, 46, 47, 50, 52, 56, 57, 62, 63, 80, 89, 91, 93, 94, 97, 100, 101, 102, 103, 110, 113, 114, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 134, 135, 143, 148, 149, 151, 152, 155, 157, 161, 162, 166, 167, 172, 173, 174, 175, 181, 184, 190, 196, 199, 203, 204, 206, 207, 208, 209, 216, 221, 233, 237, 240, 241, 242, 244, 245, 246, 247, 248, 323, 332, 335, 346, 349, 356, 360, 361, 368, 370, 380, 404, 423, 424, 428, 429, 430, 431, 438, 441, 449, 452, 458, 460, 462, 471, 472, 475, 476, 490, 494], "number_of_dimens": [97, 323, 346], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 71, 72, 75, 78, 79, 95, 100, 106, 108, 111, 121, 122, 123, 126, 128, 143, 144, 145, 158, 159, 168, 172, 175, 176, 177, 187, 188, 211, 212, 213, 214, 226, 232, 236, 347, 350, 357, 358, 359, 361, 419, 428, 431, 437, 438, 439, 440, 450, 455, 456, 470, 494], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 311, 315, 316, 317, 323, 329, 334, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 490, 494], "nvidia": 4, "nx": 229, "ny": 229, "nyquist": [10, 116, 118, 119, 120, 121, 122, 123, 126, 128, 129, 131], "o": [4, 16, 21, 100], "obj": [31, 32, 33, 100, 147, 161], "obj2sctyp": 6, "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 74, 88, 89, 91, 97, 100, 104, 105, 110, 113, 117, 131, 134, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 169, 190, 193, 201, 209, 210, 221, 223, 230, 302, 307, 331, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 425, 462, 464, 468, 475, 481, 482, 490], "obtain": [10, 92, 189, 349], "obviou": 10, "occupi": [134, 167], "occur": [22, 49, 64, 70, 76, 97, 102, 164, 192, 224, 237, 302, 432, 448, 479], "occurr": [31, 32, 57, 94, 161, 238, 239, 472], "odd": [10, 117, 120, 124, 125, 126, 128, 129, 131], "off": [23, 120, 125, 192, 197], "offset": [92, 97, 100, 148, 149, 223, 310, 343, 459, 464, 465, 468, 469], "often": 160, "ogrid": [169, 184, 480], "ogridclass": 351, "oil": [370, 387], "omit": [368, 396], "onc": 196, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 68, 73, 76, 77, 80, 97, 100, 104, 106, 110, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 139, 140, 141, 144, 145, 149, 153, 157, 162, 164, 166, 169, 174, 184, 194, 198, 201, 211, 212, 214, 223, 225, 226, 229, 230, 231, 232, 238, 239, 245, 247, 307, 315, 318, 349, 351, 353, 356, 360, 387, 418, 430, 435, 442, 447, 448, 451, 453, 457, 461, 464, 465, 468, 469, 472, 481, 490], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "onedpl": 4, "onemkl": [4, 192, 194], "ones": [6, 36, 43, 45, 56, 83, 95, 97, 102, 104, 105, 106, 110, 113, 132, 153, 154, 165, 166, 185, 197, 199, 222, 223, 240, 245, 353, 360, 422, 426, 430, 460, 462, 470, 481, 482], "ones_lik": [6, 36, 105, 154, 352, 482], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 68, 74, 77, 81, 97, 100, 102, 103, 104, 105, 113, 119, 129, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 169, 189, 193, 195, 203, 206, 209, 210, 221, 223, 224, 225, 227, 228, 231, 237, 238, 239, 242, 243, 244, 245, 246, 248, 302, 334, 336, 352, 353, 355, 356, 357, 360, 368, 390, 396, 412, 425, 442, 449, 451, 454, 468, 472, 474, 476, 480, 481, 482, 490], "open": [149, 169, 184, 209, 351, 368, 398, 400, 401, 403, 412, 452], "opencl": [23, 36, 40, 41, 42, 43, 45, 74, 88, 91, 104, 105, 113, 117, 131, 148, 149, 150, 151, 153, 154, 155, 166, 209, 210, 221, 230, 351, 352, 353, 462, 475, 481, 482], "oper": [10, 15, 58, 59, 60, 61, 95, 100, 102, 103, 106, 110, 133, 143, 146, 158, 159, 171, 186, 187, 188, 189, 217, 219, 224, 225, 231, 233, 236, 237, 238, 239, 347, 350, 357, 358, 359, 363, 423, 427, 450, 458, 470, 472, 474, 483, 494], "operand": [102, 103, 208, 354, 457], "opposit": [10, 100, 112, 120, 125, 356], "optim": [4, 102, 103, 161, 162], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 193, 195, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 315, 344, 347, 348, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 366, 367, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 498], "ord": 201, "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 86, 87, 92, 94, 95, 97, 100, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 116, 118, 121, 122, 123, 126, 128, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 157, 158, 159, 160, 161, 165, 168, 171, 175, 176, 177, 186, 187, 188, 190, 192, 193, 194, 195, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 229, 232, 233, 235, 236, 256, 301, 302, 307, 315, 325, 328, 333, 336, 344, 347, 348, 349, 350, 352, 353, 355, 357, 358, 359, 361, 366, 367, 417, 418, 421, 423, 425, 427, 428, 433, 434, 437, 438, 439, 440, 442, 445, 446, 450, 455, 456, 457, 460, 470, 471, 472, 473, 475, 480, 481, 482, 494], "ordin": [197, 205], "ordinari": [126, 170, 189], "orient": [82, 364, 454], "origin": [62, 92, 97, 120, 126, 128, 201, 229, 235, 245, 247, 425, 429, 472], "ortho": [10, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132], "orthogon": [194, 203], "orthonorm": 203, "other": [33, 38, 49, 62, 63, 93, 97, 100, 121, 122, 123, 126, 128, 142, 150, 166, 192, 194, 200, 235, 252, 253, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 289, 291, 294, 295, 296, 302, 368, 412, 430, 442, 472, 483, 494], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 77, 78, 79, 80, 81, 86, 87, 88, 93, 95, 97, 100, 102, 104, 105, 106, 107, 108, 109, 111, 113, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 165, 166, 170, 171, 175, 176, 177, 186, 187, 188, 197, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 302, 331, 347, 348, 350, 352, 353, 357, 358, 359, 360, 361, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 421, 422, 423, 424, 425, 427, 428, 433, 434, 437, 438, 439, 440, 442, 445, 446, 447, 449, 450, 451, 455, 456, 459, 470, 471, 476, 480, 481, 482], "otim": 457, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 196, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 297, 298, 299, 300, 303, 304, 307, 308, 309, 315, 319, 320, 321, 326, 332, 338, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 470, 471, 474, 475, 476, 477, 479, 480, 481, 482], "outer": [6, 82, 92, 102, 103, 185], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 78, 79, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 100, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 165, 166, 168, 169, 171, 172, 173, 175, 176, 177, 184, 186, 187, 188, 200, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 248, 302, 307, 347, 348, 350, 351, 352, 353, 357, 358, 359, 360, 361, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 421, 423, 424, 427, 428, 431, 433, 435, 437, 438, 439, 440, 442, 445, 446, 447, 449, 450, 451, 453, 455, 456, 458, 459, 462, 464, 468, 470, 471, 472, 474, 475, 476, 480, 481, 482, 494, 498], "outsid": [161, 162], "over": [10, 16, 21, 56, 83, 84, 85, 96, 97, 102, 103, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 136, 138, 150, 155, 161, 162, 170, 201, 209, 221, 222, 224, 225, 227, 229, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 315, 360, 364, 368, 395, 400, 411, 412, 422, 449, 451, 453, 454, 457, 461, 474, 476, 494], "overal": [116, 118, 122, 123, 127, 128, 130, 132], "overflow": 141, "overrid": [82, 105, 154, 353, 482], "overview": 2, "overwrite_input": 228, "p": [10, 190, 197, 198, 370, 373, 378, 384, 387, 474], "pack": [92, 417, 494], "packag": [0, 3], "packbit": 6, "pad": [6, 100, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132], "page": [3, 494], "pair": [10, 103, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 192], "parallel": [1, 3, 4, 9, 483], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 312, 315, 331, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "parameter": [368, 390, 412], "parametr": 461, "pareto": 6, "pars": [149, 210], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 97, 126, 144, 145, 168, 173, 174, 180, 181, 192, 193, 195, 223, 226, 232, 234, 316, 329, 419, 420, 443, 464, 468, 471, 472, 490], "partial": [33, 442], "particular": [100, 200], "particularli": 102, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 442, 462, 464, 468, 475, 481, 482, 490], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 100, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 162, 166, 169, 184, 197, 210, 223, 230, 237, 307, 331, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 462, 464, 465, 468, 469, 475, 481, 482], "path": [4, 102, 103, 149, 210], "path_info": 103, "pathlib": 210, "pattern": 56, "penros": 202, "per": [102, 117, 131, 418], "percentil": [6, 228], "perf_count": 0, "perform": [16, 21, 41, 42, 68, 93, 102, 116, 118, 121, 122, 123, 127, 128, 130, 132, 138, 189, 360, 451], "period": [10, 474], "permit": 149, "permut": [6, 97, 102, 235, 344, 460, 494], "permute_dim": 460, "phase": [10, 20, 474], "phase_deg": 474, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 86, 87, 115, 366, 439, 440, 455, 456, 461, 474, 498], "pickl": [149, 210], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 68, 70, 84, 85, 96, 97, 110, 112, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 147, 169, 172, 224, 225, 227, 231, 237, 240, 241, 243, 245, 246, 247, 248, 315, 334, 336, 344, 351, 360, 363, 364, 405, 425, 429, 431, 442, 448, 449, 451, 453, 459, 476, 490], "platform": [84, 85, 100, 240, 241, 245, 247, 360, 451], "pleas": [0, 3, 39, 98, 102, 161, 163, 478, 490], "plot": 406, "plt": [229, 406], "plu": [211, 212, 214], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 75, 83, 100, 104, 105, 109, 113, 114, 115, 120, 121, 125, 126, 127, 128, 129, 134, 135, 141, 148, 149, 150, 152, 153, 154, 157, 166, 168, 197, 198, 209, 210, 215, 216, 222, 227, 237, 243, 246, 248, 348, 352, 353, 368, 397, 409, 419, 421, 422, 431, 433, 434, 449, 461, 462, 476, 481, 482, 494], "pointer": 100, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 71, 72, 75, 78, 79, 86, 87, 95, 97, 106, 108, 109, 111, 114, 135, 141, 142, 143, 144, 145, 146, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 232, 233, 236, 347, 348, 350, 357, 358, 359, 361, 366, 367, 368, 395, 421, 423, 427, 428, 431, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 470, 471], "portion": [161, 162], "posinf": 237, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 65, 75, 91, 92, 97, 110, 113, 114, 116, 118, 121, 122, 123, 126, 129, 131, 134, 141, 149, 172, 175, 176, 177, 178, 179, 189, 198, 207, 235, 237, 242, 244, 247, 325, 339, 347, 370, 394, 429, 430, 431, 433, 435, 445, 446, 459, 460], "possess": 192, "possibl": [10, 48, 49, 54, 55, 97, 98, 102, 103, 110, 144, 145, 157, 161, 163, 223, 302, 331, 425, 444, 447, 452, 453, 454, 460, 478], "possibli": 44, "pow": [359, 490], "power": [6, 10, 109, 115, 141, 198, 358, 446, 475], "pre": 162, "precis": [11, 12, 56, 84, 85, 100, 102, 134, 141, 168, 197, 223, 240, 241, 245, 247, 360, 419, 451, 459], "predecessor": 474, "prefer": [67, 74, 97, 307, 334, 349], "prepend": [93, 101, 458], "present": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 100, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 166, 169, 210, 223, 230, 242, 244, 247, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 462, 464, 468, 475, 481, 482], "preserv": [49, 53, 54, 55, 68, 97, 100, 102, 138, 139, 140, 141, 193, 194, 195, 302, 459, 472], "press": 10, "prevent": 102, "previou": 56, "print": [0, 4, 42, 56, 57, 73, 94, 100, 103, 368, 387, 392], "print_device_info": 0, "printabl": 103, "printopt": 6, "prior": 93, "prob1": [215, 216], "prob12": [215, 216], "prob2": [215, 216], "probabl": [161, 216, 370, 378, 387], "proce": 490, "process": 10, "processor": 102, "prod": [6, 84, 97, 207, 208, 245, 490], "produc": [10, 34, 100, 210, 364, 434, 454], "product": [6, 82, 84, 96, 97, 102, 103, 170, 184, 185, 200, 205, 207, 208, 224, 236, 240, 245, 308, 354, 360, 457, 477, 494], "program": [4, 142], "progress": [155, 209], "project": [4, 100, 361], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 61, 64, 65, 75, 78, 79, 86, 87, 95, 108, 109, 111, 141, 143, 144, 145, 146, 155, 165, 186, 209, 211, 212, 213, 214, 215, 216, 221, 224, 226, 232, 233, 236, 348, 358, 359, 366, 367, 421, 423, 426, 427, 433, 437, 439, 440, 445, 446, 450, 455, 456, 458, 470, 471], "promote_typ": 6, "propag": [100, 144, 145, 225, 226, 231, 232, 240, 241, 242, 244, 245, 247], "proper": [144, 145, 192, 194], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 193, 195, 203, 209, 210, 221, 223, 230, 250, 302, 307, 311, 313, 314, 316, 318, 322, 323, 329, 334, 335, 339, 344, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482, 490], "protocol": [44, 100, 147], "prototyp": 105, "provid": [0, 6, 10, 31, 32, 70, 76, 83, 97, 98, 102, 103, 110, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 151, 161, 162, 164, 178, 179, 222, 238, 239, 242, 244, 245, 247, 368, 396, 399, 422, 432, 448, 453, 461, 472, 479, 480, 498], "pseudo": [202, 368], "ptp": 6, "pure": [10, 120, 126, 128, 129], "purpos": [34, 197], "put": [6, 10, 97, 112, 120, 126, 128, 356, 364, 454, 490], "put_along_axi": [6, 363, 454], "putmask": [6, 363], "pval": 385, "py": 4, "pyplot": [229, 406], "pytest": 4, "python": [0, 2, 3, 44, 97, 100, 146, 147, 233, 317, 423, 424, 490], "q": [194, 198, 203, 208, 228], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 116], "quantil": 6, "quaternion": 198, "question": 88, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "quick": [2, 3], "quickli": [184, 498], "quotient": [29, 51], "r": [87, 203], "r2": 203, "rad": 87, "rad2deg": [6, 86, 87, 474], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 86, 87, 366, 474, 498], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 75, 76, 78, 79, 83, 86, 87, 94, 95, 96, 97, 98, 104, 105, 106, 108, 109, 111, 113, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 163, 165, 166, 171, 175, 176, 177, 186, 187, 188, 198, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 231, 232, 233, 236, 238, 239, 242, 243, 244, 246, 247, 248, 302, 303, 347, 348, 350, 352, 353, 357, 358, 359, 360, 361, 366, 367, 418, 421, 422, 423, 425, 427, 428, 433, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 450, 451, 455, 456, 470, 471, 476, 478, 481, 482, 490], "rand": [6, 103, 368, 398, 400, 401, 403], "randint": [6, 97, 317, 368, 399], "randn": [6, 138, 139, 140, 202, 203, 206, 208, 368, 448], "random": [97, 103, 138, 139, 140, 194, 200, 202, 203, 206, 208, 317, 448, 483, 494], "random_integ": [6, 368, 396], "random_sampl": [6, 368, 395, 398, 401, 403], "randomli": 392, "randomst": 396, "ranf": 6, "rang": [0, 94, 151, 161, 162, 216, 362, 363, 387, 392, 418, 424, 448, 457, 460, 474, 494], "rank": [110, 112, 150, 197, 199, 452], "rate": [117, 131], "rather": 349, "ratio": [0, 95, 143, 197, 470, 498], "ration": 494, "ravel": [6, 97, 112, 137, 201, 315, 354, 490], "ravel_multi_index": [6, 473], "raveled_indic": 418, "raw": 203, "rayleigh": 6, "rcond": [197, 202], "re": [31, 32, 57, 88, 126, 429], "read": [88, 92, 97, 100, 148, 149, 151, 152, 210, 315, 417, 425], "readonli": 100, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 65, 66, 75, 83, 97, 115, 118, 120, 125, 126, 127, 128, 129, 130, 132, 134, 142, 144, 145, 146, 165, 168, 173, 180, 181, 189, 192, 193, 194, 195, 199, 202, 203, 204, 206, 215, 216, 222, 226, 232, 233, 237, 246, 248, 370, 387, 420, 421, 422, 423, 433, 443, 449, 471, 472, 476, 490, 494], "real_if_clos": [6, 20, 168, 419], "rearrang": [97, 325, 494], "reason": 128, "rebuild": 99, "recal": 100, "recent": [22, 447], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 433, 445], "recommend": [102, 349, 458], "reconstruct": [100, 206, 472], "recov": 10, "reduc": [16, 21, 31, 32, 56, 203, 206, 222, 225, 227, 229, 231, 238, 239, 242, 243, 244, 245, 246, 247, 248, 360, 422, 449, 451, 476], "reduce_hypot": 165, "reduct": [16, 21], "redund": 129, "referreflect": 490, "reflector": 203, "regardless": [100, 193, 195, 478], "regular": 210, "rel": [17, 97, 172, 339, 429, 430], "relat": 100, "relev": [100, 155, 209, 221], "rem": 146, "remain": [16, 21, 56, 103, 130, 132, 161, 222, 227, 235, 243, 246, 248, 422, 425, 449, 476], "remaind": [6, 143, 146, 233, 358, 359], "remov": [31, 32, 86, 92, 97, 110, 126, 337, 360, 366, 447, 451, 494], "reorder": [102, 138, 208, 235], "rep": 458, "repeat": [6, 97, 116, 118, 122, 123, 127, 128, 130, 132, 133, 192, 193, 194, 195, 229, 356, 458, 461, 472, 490], "repeatedli": 102, "repetit": [0, 424, 458], "replac": [3, 10, 44, 68, 112, 237, 240, 241, 356, 364, 373, 435, 490], "replic": 458, "repo": 4, "repr": 290, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 100, 103, 121, 129, 147, 150, 155, 157, 169, 204, 209, 221, 229, 248, 368, 466, 472, 490], "represent": [58, 60, 61, 103, 134, 167, 169, 237, 348, 490], "request": 430, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 97, 100, 102, 114, 169, 237, 302, 334], "res_cpu": 88, "res_host": 88, "rese": 404, "reset": 490, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 88, 89, 90, 92, 95, 96, 97, 98, 99, 102, 110, 112, 119, 124, 138, 146, 163, 169, 170, 184, 185, 201, 223, 224, 225, 231, 236, 310, 315, 334, 344, 356, 392, 417, 429, 450, 457, 459, 461, 464, 465, 468, 469, 470, 472, 478, 490], "resid": [110, 114, 147], "residu": 197, "resiz": [6, 110, 490], "resolut": 134, "resolv": [83, 110, 222, 422], "resourc": 0, "respect": [15, 29, 51, 58, 60, 61, 95, 97, 106, 141, 143, 146, 157, 158, 159, 186, 187, 188, 215, 216, 217, 219, 220, 233, 236, 339, 350, 358, 359, 423, 427, 450, 470, 474], "rest": 39, "restor": 429, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 51, 56, 58, 59, 60, 61, 64, 68, 70, 75, 80, 83, 84, 85, 95, 96, 100, 103, 105, 106, 111, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 141, 143, 148, 149, 150, 151, 152, 154, 155, 158, 159, 161, 162, 169, 171, 175, 176, 177, 178, 179, 186, 187, 188, 189, 192, 201, 203, 209, 210, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 231, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 349, 350, 353, 354, 358, 359, 360, 363, 368, 370, 400, 422, 425, 426, 427, 428, 430, 431, 434, 437, 438, 444, 448, 449, 451, 453, 454, 457, 458, 461, 466, 470, 471, 472, 476, 480, 482, 490], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 64, 100, 494], "ret": 367, "retriev": [92, 100], "retstep": 209, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 319, 320, 321, 323, 324, 325, 326, 328, 331, 332, 335, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 371, 390, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 490], "return_count": 472, "return_index": 472, "return_invers": 472, "reus": [147, 162, 425], "revers": [92, 97, 133, 138, 139, 140, 344, 460, 461, 475], "rewrit": 197, "rfft": [6, 10, 117, 120, 125, 126, 127, 128, 130, 131, 132], "rfft2": [6, 127], "rfftfreq": [6, 117], "rfftn": [6, 115, 118, 128, 129, 130], "right": [10, 28, 50, 68, 82, 92, 94, 139, 140, 165, 186, 192, 193, 194, 195, 200, 208, 223, 411, 422, 427, 434, 459, 461, 464, 468, 475], "right_shift": [6, 186], "rightmost": [161, 162, 208], "rint": [6, 35, 66, 135, 142, 431, 471], "roll": [6, 430], "rollaxi": [6, 429], "root": [6, 65, 165, 190, 421, 422, 433, 445, 446], "rot90": 6, "roughli": [100, 197], "round": [6, 23, 35, 66, 97, 120, 125, 135, 142, 143, 192, 233, 423, 428, 471, 490, 494], "round_": 6, "routin": [2, 483, 490], "row": [45, 49, 69, 70, 84, 85, 92, 97, 99, 113, 139, 140, 157, 164, 166, 169, 200, 206, 302, 349, 417, 418, 432, 444, 448, 462, 464, 472, 473, 478, 479], "row_stack": [6, 479], "rowvar": 81, "rsqrt": [421, 445], "rtol": [17, 172], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 61, 64, 65, 75, 76, 78, 79, 82, 85, 86, 87, 95, 108, 109, 111, 143, 144, 145, 146, 155, 165, 186, 209, 211, 212, 213, 214, 215, 216, 221, 222, 224, 226, 227, 232, 233, 236, 243, 246, 248, 348, 358, 359, 366, 367, 421, 422, 423, 426, 427, 433, 437, 439, 440, 445, 446, 449, 450, 451, 455, 456, 461, 470, 471, 476], "run": [0, 4], "runtim": 4, "runtimewarn": [242, 244], "s1": [97, 100, 185, 339], "s10": 100, "s16": 100, "s2": [97, 100, 339], "s25": 100, "s3": [97, 339], "safe": [49, 64, 70, 76, 97, 102, 164, 224, 302, 432, 448, 479], "safe_ev": 6, "said": 208, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 63, 69, 70, 75, 83, 84, 85, 92, 93, 94, 95, 96, 97, 99, 105, 106, 110, 112, 121, 122, 123, 128, 133, 135, 141, 143, 144, 145, 146, 147, 154, 157, 158, 159, 160, 161, 162, 164, 165, 168, 170, 171, 172, 178, 179, 180, 185, 186, 187, 188, 194, 198, 203, 215, 216, 217, 219, 220, 222, 225, 226, 227, 231, 232, 233, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 331, 344, 348, 350, 353, 356, 358, 359, 360, 364, 368, 390, 396, 412, 417, 419, 422, 423, 424, 427, 429, 430, 432, 434, 435, 442, 447, 448, 449, 450, 451, 453, 454, 457, 459, 463, 465, 467, 469, 470, 473, 476, 477, 479, 482, 498], "same_kind": [49, 64, 70, 76, 97, 102, 164, 224, 302, 432, 448, 479], "sampl": [10, 117, 124, 126, 129, 131, 155, 157, 161, 209, 221, 364, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 454, 461, 464, 468, 483, 494], "sample_r": 131, "satisfi": [36, 41, 43, 45, 49, 97, 112, 196, 302, 356, 435], "save": [6, 149, 498], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 61, 64, 74, 75, 76, 82, 88, 91, 93, 95, 96, 97, 100, 102, 103, 106, 112, 117, 131, 133, 141, 143, 144, 145, 146, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 170, 172, 174, 181, 182, 185, 186, 187, 188, 205, 209, 215, 216, 217, 219, 220, 221, 223, 224, 226, 229, 232, 233, 236, 312, 317, 346, 348, 350, 356, 358, 359, 363, 364, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 390, 391, 393, 394, 396, 399, 402, 404, 408, 410, 411, 412, 413, 414, 415, 416, 420, 423, 427, 434, 435, 450, 453, 457, 461, 470, 471, 475, 477, 480, 490], "scale": [10, 103, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 155, 185, 203, 209, 221, 368, 375, 377, 379, 380, 381, 382, 390, 402, 407, 414], "scientif": 10, "scipi": 107, "scope": 4, "script": 4, "sctype2char": 6, "search": [103, 483, 494], "searchsort": [6, 94, 97, 161, 442, 490], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 61, 75, 82, 92, 95, 96, 100, 103, 106, 109, 116, 117, 118, 119, 122, 123, 126, 129, 131, 141, 143, 144, 145, 146, 157, 158, 159, 161, 162, 163, 164, 165, 170, 172, 185, 186, 187, 188, 215, 216, 217, 219, 220, 223, 224, 225, 226, 229, 231, 232, 233, 236, 350, 354, 358, 359, 423, 427, 446, 450, 452, 457, 459, 470, 477], "section": [4, 39, 100, 118, 123, 128, 132, 490], "see": [3, 35, 100, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 147, 161, 197, 385, 431, 464, 465, 468, 469, 472, 490], "seed": [6, 97, 103, 317, 368], "seek": 149, "seldom": 141, "select": [6, 76, 112, 225, 231, 447, 453, 461, 483], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "self": [97, 100, 136, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 314, 368], "semant": 161, "sens": 208, "sep": [149, 152], "separ": [10, 97, 100, 102, 149, 152, 162, 237, 331], "sequenc": [39, 44, 53, 54, 55, 69, 70, 73, 77, 98, 99, 102, 103, 104, 105, 116, 118, 122, 123, 126, 127, 128, 130, 132, 153, 154, 155, 161, 162, 163, 164, 169, 184, 200, 209, 221, 235, 352, 353, 356, 392, 405, 424, 426, 432, 444, 448, 457, 461, 478, 479, 481, 482], "sequenti": [77, 81, 107, 228, 234, 245], "seri": [10, 126, 384], "set": [10, 31, 32, 36, 49, 67, 80, 88, 89, 91, 94, 97, 100, 102, 104, 153, 161, 162, 166, 169, 199, 201, 202, 209, 225, 231, 238, 239, 247, 292, 302, 303, 314, 334, 352, 353, 360, 435, 437, 438, 451, 464, 468, 481, 482, 490], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 100], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 196, "sh": [97, 331], "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 99, 100, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 141, 142, 143, 144, 145, 146, 150, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 323, 331, 335, 337, 344, 346, 347, 348, 350, 351, 352, 353, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 377, 380, 385, 386, 391, 395, 396, 397, 398, 399, 400, 401, 403, 408, 409, 415, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 465, 467, 468, 469, 470, 471, 473, 476, 478, 479, 480, 481, 482, 483, 494], "share": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 462, 464, 468, 475, 481, 482], "shared_bin": 162, "shares_memori": 6, "shift": [10, 116, 118, 119, 123, 124, 186, 427, 429], "short": [471, 490], "shorter": [120, 126], "shorthand": [11, 12, 15, 58, 59, 60, 61, 95, 106, 143, 158, 159, 171, 186, 187, 188, 217, 219, 224, 233, 236, 347, 350, 357, 358, 359, 423, 427, 450, 470, 480], "should": [31, 32, 39, 49, 92, 94, 96, 97, 102, 103, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 146, 149, 156, 161, 184, 197, 198, 224, 235, 238, 239, 242, 244, 302, 333, 385, 418, 425, 434, 453, 457, 459, 473, 474, 490], "show": [9, 38, 100, 133, 165, 220, 229, 237, 240, 241, 242, 244, 247, 406], "show_config": 6, "shown": 4, "shuffl": 6, "side": [97, 157, 194, 333, 434], "sigma": [383, 390], "sign": [6, 10, 17, 75, 100, 172, 191, 204, 233, 347, 357, 360, 423, 438, 451, 471], "signal": [10, 117, 120, 125, 126, 128, 131, 474], "signatur": [223, 224], "signbit": [6, 437], "signific": 102, "signum": 437, "similar": [3, 40, 41, 97, 100, 155, 209, 221, 223, 307, 334, 356, 368, 396, 464, 465, 468, 469], "simpl": [4, 220, 494], "simpli": [90, 97, 149, 161, 162, 344], "sin": [0, 6, 26, 27, 46, 47, 78, 194, 229, 440, 455, 461], "sinc": [6, 97, 126, 192, 194, 336, 349], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 439, 440, 455, 456], "singl": [9, 10, 33, 63, 69, 97, 102, 103, 157, 200, 225, 231, 337, 360, 368, 387, 396, 397, 398, 399, 400, 401, 403, 409, 451, 461, 490], "singleton": [16, 21, 56, 110, 222, 227, 242, 243, 244, 246, 248, 422, 447, 449, 476], "singular": [196, 197, 199, 202, 206], "sinh": [6, 14, 25, 27, 47, 79, 439, 456], "size": [0, 6, 23, 31, 32, 36, 39, 56, 70, 77, 80, 81, 84, 85, 89, 94, 97, 98, 100, 103, 112, 115, 117, 121, 131, 149, 155, 157, 163, 164, 201, 203, 206, 209, 221, 223, 225, 227, 231, 238, 239, 240, 241, 243, 245, 247, 317, 318, 334, 352, 356, 360, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 429, 432, 444, 447, 448, 451, 457, 468, 474, 478, 479, 481], "skip": 92, "slice": [112, 238, 239, 242, 243, 244, 246, 248, 363, 364, 435, 454, 461, 468, 469, 490], "slogdet": [6, 191], "slower": 457, "slowest": [97, 315, 417, 425], "small": [17, 111, 172, 197, 202, 213, 215, 216, 237, 468], "smaller": [93, 97, 115, 116, 118, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 197, 233, 325, 356, 423, 474], "smallest": [134, 167, 472], "smallest_norm": 134, "smat": 206, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 100, 106, 120, 125, 141, 161, 181, 209, 216, 222, 227, 229, 243, 246, 248, 406, 422, 449, 457, 458, 476], "softwar": 4, "solut": [197, 205], "solv": [6, 197, 207, 208, 494], "some": [23, 100, 110, 112, 142, 170, 197, 356, 474, 480, 490], "sometim": [160, 490], "sometru": 6, "somewhat": 198, "sophist": 198, "sort": [6, 33, 39, 97, 98, 163, 206, 301, 325, 434, 443, 444, 454, 460, 461, 472, 478, 483, 490, 494], "sort_complex": 6, "sorter": [97, 333, 434], "sought": 190, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 62, 63, 64, 67, 68, 69, 70, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 221, 222, 223, 224, 225, 227, 228, 229, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 346, 349, 352, 353, 354, 355, 356, 360, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 425, 426, 429, 430, 434, 435, 436, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "space": [6, 23, 117, 119, 131, 149, 155, 157, 209, 221, 461, 498], "spars": [169, 229], "special": [2, 100, 107, 483, 494], "specif": [0, 4, 100, 150], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 63, 64, 70, 74, 83, 84, 85, 88, 91, 92, 97, 102, 103, 104, 105, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 138, 141, 148, 149, 150, 151, 153, 154, 155, 157, 166, 193, 195, 201, 207, 208, 209, 210, 221, 222, 227, 228, 230, 240, 241, 243, 245, 246, 247, 248, 301, 310, 351, 352, 353, 356, 360, 363, 364, 368, 381, 391, 409, 417, 418, 422, 429, 430, 431, 435, 441, 448, 449, 451, 453, 454, 457, 459, 460, 461, 462, 472, 475, 476, 481, 482], "spectrum": [10, 119, 120, 124, 125], "speed": 102, "speedup": 103, "spell": 349, "split": [6, 39, 70, 98, 99, 163, 164, 432, 448, 478, 479, 494], "spreadsheet": 142, "sqrt": [6, 10, 65, 97, 316, 329, 422, 433, 446], "squar": [6, 65, 165, 166, 189, 190, 192, 193, 194, 196, 197, 198, 204, 207, 208, 223, 246, 248, 372, 388, 421, 422, 433, 435, 445, 449, 465, 469, 475, 476], "squeez": [6, 97, 110, 490], "src": 76, "stabl": [33, 442], "stack": [6, 69, 70, 99, 164, 191, 199, 202, 203, 204, 224, 349, 432, 444, 454, 479], "stand": 157, "standard": [97, 134, 143, 146, 227, 233, 243, 246, 248, 317, 338, 368, 383, 390, 397, 406, 407, 408, 409, 410, 423, 449, 476, 490, 494], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 368, 397], "standard_t": 6, "start": [2, 3, 23, 43, 45, 103, 117, 121, 131, 148, 155, 209, 221, 223, 430, 464, 468], "start_tim": 0, "state": 368, "statist": [483, 494], "std": [6, 97, 227, 243, 246, 248, 476, 490], "stdev": [368, 409], "step": [4, 23, 103, 155, 160, 209, 221], "sticki": 100, "still": [56, 163, 478], "stop": [23, 155, 209, 221], "store": [135, 155, 178, 179, 209, 216, 221, 224, 354], "str": [42, 44, 70, 100, 102, 103, 149, 152, 164, 210, 293, 432, 448, 466, 479], "str_": 100, "straightforward": 169, "stride": [48, 49, 97, 302], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 100, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 466, 468, 475, 481, 482, 490], "string_repr": 103, "stringio": 210, "strongli": [4, 458], "struct": 100, "structur": [100, 210], "student": 410, "style": [49, 97, 302, 349, 417, 418, 473], "sub": [39, 70, 92, 98, 100, 102, 163, 164, 208, 432, 444, 448, 459, 462, 478, 479], "subarrai": [100, 169, 472], "subclass": 41, "subdivid": 100, "subdtyp": 100, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 71, 72, 74, 75, 78, 79, 86, 87, 95, 97, 105, 106, 108, 109, 111, 114, 135, 141, 142, 143, 144, 145, 146, 154, 158, 159, 160, 165, 168, 171, 175, 176, 177, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 232, 233, 236, 302, 347, 348, 350, 353, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 445, 446, 450, 455, 456, 470, 471, 482], "subscript": [102, 103], "subset": [3, 157, 447, 494], "subtract": 6, "subtyp": 417, "succeed": 101, "success": [42, 370, 378, 387], "sugar": [90, 465, 469], "suggest": 92, "suit": 4, "suitabl": [34, 97, 344, 364, 434, 454], "sum": [0, 3, 4, 6, 10, 15, 56, 83, 85, 88, 91, 92, 93, 96, 97, 102, 121, 161, 165, 170, 190, 197, 207, 215, 216, 222, 224, 240, 241, 247, 309, 343, 370, 385, 387, 422, 457, 459, 461, 490, 494], "sum_": 10, "sum_along_diagon": 459, "sum_of_weight": 56, "summari": 483, "summat": [96, 102, 103, 170, 208, 224, 354, 457], "suppli": [120, 125, 200, 368, 397], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 71, 72, 74, 75, 77, 78, 79, 81, 86, 87, 95, 97, 100, 102, 104, 105, 106, 107, 108, 109, 111, 113, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 165, 166, 171, 175, 176, 177, 186, 187, 188, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 302, 334, 347, 348, 350, 352, 353, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 421, 423, 425, 427, 433, 437, 438, 439, 442, 445, 446, 449, 450, 451, 455, 456, 470, 471, 476, 481, 482, 498], "surnam": 100, "surpris": [121, 122, 123], "svd": [6, 190, 196, 199, 202], "swap": [100, 116, 119, 452], "swapax": [6, 97, 235, 490], "swapped_cod": 100, "swapped_dt": 100, "sy": 100, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "sycl_context": 97, "sycl_devic": 97, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 302, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 462, 464, 468, 475, 481, 482], "symmetr": [120, 126, 128, 129, 189, 192, 193, 194, 195, 199, 202, 206], "symmetri": [10, 115, 120, 125, 126, 129], "syntact": [90, 465, 469], "syntax": 490, "sys_is_l": 100, "system": [3, 4, 205], "t": [10, 70, 81, 97, 100, 120, 189, 192, 194, 197, 344, 349, 410, 461], "t1": 498, "tabl": [2, 9, 483], "tack": 100, "take": [6, 69, 97, 112, 184, 223, 356, 364, 425, 434, 435, 454, 472, 474, 490, 498], "take_along_axi": [6, 31, 32, 33, 67, 364, 453], "taken": [56, 92, 93, 101, 103, 120, 126, 127, 128, 129, 130, 132, 160, 161, 224, 246, 248, 435, 449, 459, 462, 464, 468, 476, 477], "tall": 133, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 78, 439, 456], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 439, 440, 455, 456], "tanh": [6, 14, 25, 30, 52, 79, 440, 455], "target": [49, 64, 97, 302, 363], "target_devic": 97, "tau": 203, "tbb": 4, "tempfil": 149, "temporari": [149, 498], "temporaryfil": 149, "ten": 378, "tensor": [44, 97, 102, 103, 147, 207, 208, 238, 239, 242, 244, 245, 362, 457], "tensordot": [6, 96, 102, 170, 207, 208, 224, 354], "tensorinv": [6, 208], "tensorsolv": [6, 207], "term": [10, 15, 95, 103, 115, 116, 118, 121, 122, 123, 126, 129, 236, 450, 470], "test": [0, 2, 16, 17, 21, 106, 158, 159, 173, 175, 176, 177, 178, 179, 187, 188, 245, 349, 350, 370, 490, 494], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [148, 149, 151, 152, 210], "th": [85, 88, 91, 93, 97, 101, 113, 157, 169, 228, 344, 351, 435, 460, 463, 465, 467, 469], "than": [36, 84, 85, 97, 98, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 139, 140, 143, 150, 158, 159, 161, 162, 164, 186, 187, 188, 197, 199, 202, 203, 240, 241, 245, 247, 325, 349, 356, 360, 427, 435, 437, 447, 448, 451, 457, 459, 471, 474, 490, 498], "thei": [17, 38, 100, 172, 194, 197, 432, 434, 457, 461, 464, 468, 474, 475, 479, 490], "them": [69, 490], "theor": 192, "theoret": 103, "therefor": [115, 129, 150, 193, 195], "theta": 461, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 68, 70, 74, 80, 83, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 139, 140, 141, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 174, 181, 184, 193, 195, 197, 200, 201, 204, 209, 210, 213, 215, 216, 221, 222, 223, 224, 225, 231, 233, 235, 237, 238, 239, 242, 244, 245, 247, 302, 307, 312, 315, 325, 331, 344, 349, 356, 360, 363, 364, 401, 403, 417, 422, 423, 425, 430, 432, 448, 451, 453, 454, 458, 461, 465, 469, 472, 474, 475, 479, 480], "thing": 453, "third": [69, 70, 98, 99, 116, 164, 432, 444, 448, 479], "those": [10, 68, 198, 364], "though": 121, "thousand": 378, "three": [53, 54, 55, 110, 198, 223, 368, 404, 457, 472], "threshold": 199, "through": [41, 100, 162, 184, 192, 194, 197, 223, 490], "throw": 385, "thu": [10, 120, 126, 128, 458], "tile": [6, 424, 494], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 61, 75, 93, 95, 96, 106, 116, 118, 120, 122, 123, 125, 127, 128, 130, 132, 141, 143, 144, 145, 146, 158, 159, 160, 165, 170, 172, 177, 185, 186, 187, 188, 197, 215, 216, 217, 219, 220, 226, 232, 233, 236, 348, 350, 358, 359, 370, 385, 423, 427, 450, 454, 457, 458, 470, 472, 477], "time_dpnp": 0, "time_numpi": 0, "timedelta": 100, "timeit": 102, "timestep": 117, "tini": 134, "titl": 100, "tm": 146, "to_begin": 101, "to_devic": 97, "to_end": 101, "tobyt": 6, "todo": 388, "tofil": [6, 149], "togeth": [17, 70, 100, 121, 172, 184, 448, 480], "tol": [199, 386, 420], "toler": [17, 37, 172, 420], "tolist": 6, "too": [4, 116, 118, 122, 123, 127, 128, 130, 132, 480], "toolkit": 3, "tostr": 6, "total": [6, 80, 84, 97, 322, 441, 449, 476], "toward": [35, 66, 135, 142, 143, 161, 162, 233, 348, 423, 428, 431, 471], "trace": [6, 88, 91, 92, 97, 102, 490], "traceback": [22, 447], "trail": 466, "transfer": 97, "transform": [103, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 483], "transpos": [6, 34, 97, 102, 189, 194, 235, 250, 490, 494], "trapezoid": [85, 451], "trapz": 6, "treat": [17, 120, 126, 128, 149, 157, 172, 193, 195, 197, 200, 210, 240, 241, 245, 247, 360, 364, 434, 454, 458, 472, 474, 490], "tri": 6, "trial": 370, "triangl": [88, 165, 223, 422, 462, 463, 464, 465, 467, 468, 469], "triangular": [6, 189, 193, 195, 203, 223, 464, 465, 468, 469], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 78, 79, 439, 440, 455, 456, 494], "tril": [6, 88, 223, 462, 464, 465, 468], "tril_indic": [6, 223, 465, 468], "tril_indices_from": [6, 469], "trili": 465, "trili1": 465, "trim": [116, 118, 122, 123, 127, 128, 130, 132, 466], "trim_zero": 6, "triu": [6, 88, 223, 462, 464, 468, 469], "triu_indic": [6, 223, 464, 469], "triu_indices_from": [6, 465], "triui": 469, "triuim1": 469, "trivial": [192, 454], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 64, 65, 66, 71, 72, 74, 75, 76, 78, 79, 80, 81, 85, 86, 87, 94, 95, 97, 100, 102, 103, 106, 108, 109, 110, 111, 112, 114, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 155, 158, 159, 160, 161, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 199, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 254, 297, 298, 302, 307, 319, 320, 321, 326, 338, 340, 345, 347, 348, 349, 350, 356, 357, 358, 359, 360, 361, 364, 366, 367, 373, 421, 422, 423, 425, 427, 428, 433, 435, 437, 438, 439, 440, 445, 446, 449, 450, 451, 454, 455, 456, 457, 461, 470, 471, 472, 475, 476, 480], "true_divid": [6, 95], "trunc": [6, 35, 66, 135, 142, 428, 431], "truncat": [35, 66, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 142, 406, 428, 431, 471], "trust": [238, 239], "truth": [58, 59, 60, 61, 106, 158, 159, 171, 187, 188, 217, 218, 219, 220, 350, 490, 494], "try": [4, 42], "tukei": 10, "tup": [69, 99, 164, 432, 479], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 63, 74, 80, 83, 88, 89, 90, 91, 97, 100, 103, 110, 119, 124, 138, 147, 150, 153, 154, 155, 157, 161, 162, 169, 174, 181, 184, 185, 201, 203, 208, 209, 221, 222, 223, 224, 225, 227, 229, 230, 231, 242, 243, 244, 245, 246, 247, 248, 334, 344, 349, 351, 360, 418, 422, 424, 425, 429, 436, 447, 449, 451, 458, 460, 464, 465, 468, 469, 473, 475, 476, 490], "turn": 69, "twister": 368, "two": [10, 17, 37, 53, 54, 58, 59, 60, 61, 73, 77, 82, 91, 92, 93, 96, 97, 100, 102, 103, 110, 115, 116, 118, 121, 122, 123, 126, 127, 128, 130, 132, 144, 145, 157, 170, 171, 172, 185, 193, 197, 200, 205, 217, 219, 220, 224, 225, 226, 231, 232, 235, 242, 244, 325, 341, 354, 368, 397, 428, 431, 435, 452, 457, 459, 464, 465, 468, 469, 477], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 311, 315, 323, 331, 335, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 494], "type_nam": 0, "typeerror": [56, 76, 97, 147, 334], "typenam": 6, "typestr": 100, "typic": [17, 120, 172, 434, 490], "u": [100, 189, 193, 195, 206, 223, 245, 247, 472], "u1": [100, 148, 149], "u16": 100, "u4": 64, "u8": 100, "ufunc": [2, 483, 490], "uint64": 100, "uint8": [100, 148, 149], "uk": 10, "un": 100, "unari": 490, "unchang": 132, "undefin": [20, 97, 325], "underli": [58, 60, 61, 425], "undo": [10, 123], "undocu": 100, "unexpect": [245, 247], "unicod": 100, "uniform": [6, 100, 157, 161, 162, 221, 368, 395, 398, 400, 401, 403], "uniformli": [221, 368, 412], "uniniti": [36, 104, 105, 153, 352, 481], "union1d": 6, "uniqu": [6, 56, 57, 83, 94, 100, 222, 227, 235, 243, 246, 248, 422, 424, 449, 476], "unique_count": 472, "unique_indic": 472, "unique_invers": 472, "unit": [97, 117, 131, 184, 192, 198, 204, 339], "unitari": [10, 157, 203, 206], "uniti": 161, "univ": 10, "univers": [2, 483, 490], "unless": [16, 21, 49, 84, 85, 97, 102, 161, 192, 199, 201, 221, 240, 241, 245, 247, 302, 360, 451, 472], "unlik": [33, 97, 131, 331, 334, 442], "unmodifi": 162, "unpackbit": 6, "unravel": 473, "unravel_index": [6, 31, 32, 418], "unraveled_coord": 473, "unsaf": [49, 64, 70, 76, 97, 102, 164, 224, 302, 432, 448, 479], "unscal": 10, "unsign": [100, 360, 451], "unspecifi": 425, "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 75, 78, 79, 86, 87, 95, 108, 109, 111, 141, 142, 143, 144, 145, 146, 147, 160, 165, 171, 186, 212, 213, 214, 215, 216, 226, 232, 233, 234, 236, 347, 348, 357, 358, 359, 361, 366, 367, 421, 423, 427, 428, 433, 437, 438, 439, 440, 450, 455, 456, 470, 471], "until": [103, 429, 430], "unwrap": [6, 86, 366], "up": [4, 10, 100, 102, 140, 454, 465, 472], "updat": 4, "uplo": [193, 195], "upon": [97, 339], "upper": [88, 113, 161, 162, 189, 193, 195, 203, 223, 462, 464, 465, 467, 468, 469], "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 64, 68, 70, 74, 82, 84, 85, 88, 89, 91, 92, 95, 97, 100, 102, 103, 104, 105, 106, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 169, 170, 171, 184, 186, 187, 188, 189, 190, 193, 194, 195, 197, 199, 200, 201, 202, 209, 210, 216, 217, 219, 221, 223, 224, 225, 227, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 256, 302, 307, 315, 334, 347, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 364, 368, 371, 373, 374, 384, 389, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 409, 412, 417, 420, 423, 424, 425, 427, 429, 434, 435, 437, 443, 449, 450, 451, 453, 454, 457, 458, 459, 461, 462, 464, 465, 468, 469, 470, 472, 473, 475, 476, 480, 481, 482, 490, 498], "usabl": 141, "usag": [3, 4, 117, 131], "use_getitem": 100, "use_setitem": 100, "user": [100, 237], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 447, 462, 464, 468, 475, 481, 482], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 346, 347, 348, 349, 350, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 74, 88, 89, 91, 97, 104, 105, 113, 117, 131, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 209, 210, 221, 223, 230, 307, 351, 352, 353, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 462, 464, 468, 475, 481, 482], "usual": [89, 97, 100, 224, 334], "util": 483, "v": [73, 88, 91, 97, 100, 192, 193, 333, 363, 434], "v0": 6, "v1": 6, "v10": 100, "v9": 6, "val": [97, 133, 136, 292, 327, 356], "valid": [77, 110, 223, 452, 464, 465, 468, 469], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 93, 94, 95, 97, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 120, 121, 126, 128, 129, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 174, 175, 176, 177, 180, 181, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 252, 253, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 289, 291, 292, 294, 295, 296, 299, 300, 302, 304, 307, 312, 314, 325, 327, 334, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 378, 395, 396, 412, 419, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 437, 438, 439, 442, 445, 446, 449, 450, 451, 453, 454, 455, 456, 459, 461, 464, 468, 470, 471, 472, 474, 476, 480, 481, 482, 490, 494], "value2": 100, "valueerror": [22, 36, 41, 42, 147, 238, 239, 425, 444, 447], "vander": 6, "vandermond": 475, "var": [6, 97, 227, 243, 246, 248, 449, 490], "vararg": 157, "vari": [10, 16, 20, 21, 92, 103, 116, 118, 120, 121, 122, 123, 125, 126, 129, 132, 150, 169, 190, 192, 193, 197, 201, 237, 243, 246, 248, 420], "variabl": [81, 197, 205], "varianc": [97, 227, 243, 246, 248, 345, 449, 476, 494], "variou": 498, "vdot": [6, 96, 224], "vector": [82, 102, 150, 169, 170, 184, 190, 199, 200, 201, 206, 224, 229, 354, 477, 494], "vendor": 4, "veri": [3, 10, 17, 172, 229, 237], "verif": 0, "verifi": 189, "version": [4, 80, 97, 100, 137, 314, 349, 418, 473], "vertic": [69, 70, 92, 99, 133, 138, 139, 164, 432, 444, 448, 478, 479], "vetterlin": 10, "vh": 206, "via": 126, "view": [6, 39, 53, 54, 55, 62, 88, 92, 97, 98, 110, 116, 118, 122, 123, 127, 128, 130, 132, 138, 139, 140, 163, 229, 235, 250, 331, 344, 364, 418, 425, 444, 447, 452, 460, 473, 478], "violat": 76, "void": 100, "void640": 100, "von": 413, "vonmis": 6, "vsplit": [6, 70, 444], "vstack": [6, 69, 70, 99, 164, 197, 432, 444, 448], "w": [10, 56, 192, 193, 194, 195, 198], "wa": [10, 83, 100, 200, 222, 242, 244, 246, 248, 368, 409, 422, 449, 476], "wai": [3, 4, 10, 97, 103, 115, 121, 122, 123, 128, 149, 325, 457], "wald": 6, "walk": 100, "want": [4, 454], "warn": [100, 238, 239, 386], "we": [74, 89, 92, 103, 133, 197, 223, 364, 454, 461], "weibul": [6, 416], "weight": [56, 57, 81, 161, 162, 227, 243, 451], "well": [100, 102, 149, 161, 162, 360, 370, 387, 406], "were": [70, 150, 368, 397, 448, 474], "what": [10, 49, 64, 70, 76, 97, 100, 102, 106, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 164, 173, 224, 302, 370, 387, 432, 448, 479, 490], "when": [10, 22, 23, 36, 37, 40, 41, 43, 45, 48, 49, 56, 74, 76, 94, 97, 100, 102, 115, 126, 128, 129, 144, 145, 155, 160, 192, 201, 203, 209, 216, 221, 223, 224, 233, 240, 241, 242, 244, 245, 247, 302, 423, 428, 430, 431, 435, 453, 457, 461, 472, 480, 498], "whenev": [110, 452, 460], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 78, 79, 83, 86, 87, 88, 89, 91, 93, 94, 95, 97, 98, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 117, 120, 126, 127, 128, 131, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 186, 187, 188, 189, 197, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 236, 242, 243, 244, 245, 246, 247, 248, 297, 298, 302, 307, 319, 320, 321, 326, 333, 338, 340, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 366, 367, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 404, 409, 412, 421, 422, 423, 427, 428, 430, 433, 434, 435, 437, 438, 439, 440, 444, 445, 446, 449, 450, 451, 455, 456, 459, 460, 462, 464, 468, 470, 471, 474, 475, 476, 478, 481, 482], "wherev": 76, "whether": [16, 17, 21, 37, 83, 94, 100, 147, 172, 173, 189, 203, 209, 237, 245, 247, 418, 425, 438, 472, 473], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 62, 70, 74, 76, 80, 83, 84, 85, 88, 89, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 105, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 138, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 164, 166, 169, 175, 176, 177, 178, 179, 189, 192, 199, 201, 208, 210, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 302, 307, 349, 351, 352, 353, 360, 363, 368, 390, 395, 396, 397, 398, 399, 400, 401, 403, 409, 412, 418, 422, 424, 429, 435, 441, 442, 444, 447, 448, 449, 451, 453, 459, 460, 461, 462, 463, 464, 467, 468, 471, 474, 475, 476, 480, 481, 482, 490, 498], "whichev": 170, "while": [10, 130, 132, 161, 162, 227, 243, 246, 248, 349, 356, 360, 429, 449, 451, 462, 476], "whitespac": [149, 152], "who": 6, "whole": [116, 118, 122, 123, 127, 128, 130, 132, 464, 468], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 92, 100, 112, 113, 133, 190, 193, 194, 195, 207, 223, 235, 429, 465, 469, 473], "why": 126, "wide": 133, "width": [100, 161, 162], "wild": [370, 387], "window": [4, 117, 131], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 69, 70, 71, 72, 75, 78, 79, 83, 95, 97, 99, 106, 108, 109, 111, 114, 135, 141, 142, 143, 144, 145, 146, 158, 159, 160, 163, 164, 165, 168, 171, 172, 175, 176, 177, 178, 179, 186, 187, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 231, 232, 233, 234, 236, 242, 244, 245, 306, 347, 348, 350, 357, 358, 359, 361, 419, 421, 423, 427, 428, 431, 432, 433, 437, 438, 439, 440, 444, 445, 446, 448, 450, 455, 456, 470, 471, 478, 479, 490, 494, 498], "within": [17, 23, 37, 49, 97, 102, 120, 121, 122, 123, 125, 126, 128, 161, 162, 172, 302, 363, 368, 412], "without": [92, 97, 104, 133, 344, 417, 425, 490], "won": 100, "word": [121, 122, 123, 126, 128, 142, 194, 368, 412], "work": [4, 35, 48, 454, 490], "world": [100, 370, 387], "would": [33, 70, 97, 100, 150, 169, 200, 223, 224, 325, 368, 418, 442, 444, 448, 454, 460, 474], "wrap": [86, 97, 133, 327, 342, 363, 366, 418, 434, 453, 454, 474], "wrapper": 97, "write": [88, 92, 97, 133, 149, 315, 425], "written": [4, 80, 83, 133, 149, 222, 422, 480], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 62, 63, 65, 66, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 86, 87, 88, 91, 93, 94, 97, 98, 100, 101, 104, 105, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 122, 123, 124, 130, 131, 132, 135, 136, 137, 142, 148, 149, 150, 151, 153, 154, 155, 157, 163, 166, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 194, 197, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 229, 230, 234, 235, 237, 302, 307, 316, 317, 323, 329, 334, 335, 347, 349, 351, 352, 353, 357, 360, 361, 362, 366, 367, 386, 392, 417, 419, 421, 422, 424, 428, 429, 430, 431, 433, 435, 437, 438, 439, 440, 444, 445, 446, 447, 452, 453, 455, 456, 461, 462, 471, 475, 478, 480, 481, 482], "x0": [43, 45, 74, 91, 353, 475, 482], "x00": 149, "x01": [148, 149], "x02": [148, 149], "x03": [148, 149], "x04": [148, 149], "x05": 148, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 61, 67, 75, 77, 95, 97, 106, 141, 143, 144, 145, 146, 158, 159, 160, 165, 184, 186, 187, 188, 215, 216, 217, 218, 219, 220, 224, 226, 228, 229, 232, 233, 234, 236, 302, 347, 348, 350, 355, 357, 358, 359, 365, 405, 423, 427, 429, 450, 470], "x1_i": [15, 29, 51, 58, 60, 61, 75, 95, 106, 141, 143, 146, 158, 159, 165, 186, 187, 188, 215, 216, 217, 219, 220, 233, 236, 350, 358, 359, 423, 427, 450, 470], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 61, 75, 77, 95, 106, 141, 143, 144, 145, 146, 158, 159, 160, 165, 184, 186, 187, 188, 215, 216, 217, 218, 219, 220, 224, 226, 229, 232, 233, 236, 347, 348, 350, 357, 358, 359, 423, 427, 429, 445, 450, 470], "x2_i": [15, 29, 51, 58, 60, 61, 75, 95, 106, 141, 143, 146, 158, 159, 165, 186, 187, 188, 215, 216, 217, 219, 220, 233, 236, 350, 358, 359, 423, 427, 450, 470], "x3": [16, 21, 141], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 65, 66, 71, 72, 78, 79, 108, 109, 111, 142, 168, 171, 211, 212, 213, 214, 218, 347, 357, 361, 419, 421, 428, 431, 433, 437, 438, 439, 440, 445, 446, 455, 456, 471], "xi": [214, 229], "xn": [184, 229], "xor": [58, 59, 60, 61, 171, 217, 218, 219, 220], "xv": 229, "xx": 229, "xy": 229, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 62, 74, 81, 82, 91, 97, 100, 101, 104, 105, 110, 113, 117, 131, 148, 149, 150, 151, 153, 154, 155, 157, 166, 178, 179, 190, 197, 209, 210, 221, 229, 230, 234, 237, 307, 323, 331, 334, 351, 352, 353, 461, 462, 475, 480, 481, 482], "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 245, 247, 349, 368, 480, 490], "you": [4, 92, 120, 125, 126, 223, 453, 454, 490, 498], "your": [4, 92, 498], "yv": 229, "yy": 229, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 74, 91, 104, 105, 113, 117, 131, 148, 149, 150, 151, 153, 154, 155, 166, 209, 210, 221, 229, 230, 351, 352, 353, 378, 462, 475, 481, 482], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 66, 80, 83, 89, 93, 97, 104, 105, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 142, 149, 153, 154, 166, 168, 173, 174, 178, 179, 180, 181, 186, 192, 193, 195, 197, 198, 199, 202, 206, 222, 223, 225, 227, 231, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 323, 324, 334, 335, 339, 346, 349, 352, 353, 360, 368, 370, 398, 400, 401, 403, 419, 420, 422, 428, 431, 437, 442, 449, 451, 457, 462, 463, 466, 467, 471, 476, 480, 482], "zeros_lik": [6, 36, 87, 105, 154, 353, 367, 481], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 251, "__add__": 252, "__and__": 253, "__bool__": 254, "__complex__": 255, "__copy__": 256, "__eq__": 257, "__float__": 258, "__floordiv__": 259, "__ge__": 260, "__getitem__": 261, "__gt__": 262, "__iadd__": 263, "__iand__": 264, "__ifloordiv__": 265, "__ilshift__": 266, "__imod__": 267, "__imul__": 268, "__int__": 269, "__invert__": 270, "__ior__": 271, "__ipow__": 272, "__irshift__": 273, "__isub__": 274, "__itruediv__": 275, "__ixor__": 276, "__le__": 277, "__len__": 278, "__lshift__": 279, "__lt__": 280, "__matmul__": 281, "__mod__": 282, "__mul__": 283, "__ne__": 284, "__neg__": 285, "__new__": 286, "__or__": 287, "__pos__": 288, "__pow__": 289, "__repr__": 290, "__rshift__": 291, "__setitem__": 292, "__str__": 293, "__sub__": 294, "__truediv__": 295, "__xor__": 296, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 487, "add": 15, "algebra": [6, 485], "all": [16, 297], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 298], "api": [1, 483], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 299], "argmin": [32, 300], "argsort": [33, 301], "argwher": 34, "arithmet": [488, 490, 492], "around": 35, "arrai": [6, 7, 9, 36, 484, 486, 487, 490], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 302], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 490, "avail": [9, 498], "averag": [56, 497], "backend": 1, "background": 10, "basic": [487, 492], "beta": 369, "binari": 5, "bincount": 57, "binomi": 370, "bit": [5, 498], "bitwise_and": 58, "bitwise_not": 59, "bitwise_or": 60, "bitwise_xor": 61, "broadcast_arrai": 62, "broadcast_to": 63, "build": [4, 7], "byte": 371, "c": 1, "calcul": 490, "can_cast": 64, "cbrt": 65, "ceil": 66, "chang": 487, "channel": 4, "chisquar": 372, "choic": 373, "choleski": 189, "choos": [67, 303], "class": 7, "clip": [68, 304], "co": 78, "column_stack": 69, "comparison": [6, 486, 490, 498], "complex": 488, "concaten": 70, "cond": 190, "conda": 4, "conj": [71, 305], "conjug": [72, 306], "construct": 490, "control": 0, "convers": 490, "convolv": 73, "copi": [74, 307], "copysign": 75, "copyto": 76, "correl": [77, 497], "cosh": 79, "count": 495, "count_nonzero": 80, "cov": 81, "creat": 8, "creation": 7, "cross": 82, "cumlogsumexp": 83, "cumprod": [84, 308], "cumsum": [85, 309], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 484, 490, 493], "decomposit": 485, "deg2rad": 86, "degre": 87, "det": 191, "detail": 10, "develop": 2, "devic": 4, "diag": 88, "diag_indic": 89, "diag_indices_from": 90, "diagflat": 91, "diagon": [92, 310], "diff": 93, "differ": 488, "digit": 94, "dimens": [10, 487], "dimension": [6, 490], "dirichlet": 374, "discret": 6, "distribut": 493, "divid": 95, "dot": 96, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 493], "dpnp_arrai": 97, "driver": 4, "dsplit": 98, "dstack": 99, "dtype": [100, 311], "ediff1d": 101, "eig": 192, "eigenvalu": 485, "eigh": 193, "eigval": 194, "eigvalsh": 195, "einsum": 102, "einsum_path": 103, "element": [5, 487], "empti": 104, "empty_lik": 105, "equal": 106, "equat": 485, "erf": 107, "error": 496, "exampl": [0, 4], "exist": 7, "exp": 108, "exp2": 109, "expand_dim": 110, "expm1": 111, "expon": 488, "exponenti": 375, "extens": 2, "extract": 112, "extrema": 488, "ey": 113, "f": 376, "fab": 114, "fft": [10, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "fft2": 116, "fftfreq": 117, "fftn": 118, "fftshift": 119, "fill": 312, "fill_diagon": 133, "find": 488, "finfo": 134, "fix": 135, "flag": 313, "flat": 314, "flatit": 136, "flatnonzero": 137, "flatten": 315, "flip": 138, "fliplr": 139, "flipud": 140, "float": [488, 498], "float_pow": 141, "floor": 142, "floor_divid": 143, "fmax": 144, "fmin": 145, "fmod": 146, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 147, "frombuff": 148, "fromfil": 149, "fromfunct": 150, "fromit": 151, "fromstr": 152, "full": 153, "full_lik": 154, "function": [10, 486, 488, 496, 497, 498], "gamma": 377, "gener": [484, 493], "geometr": 378, "geomspac": 155, "get_includ": 156, "gradient": 157, "greater": 158, "greater_equ": 159, "guid": 4, "gumbel": 379, "handl": 488, "heavisid": 160, "helper": 10, "hermitian": 10, "hfft": 120, "higher": 10, "histogram": [161, 497], "histogram_bin_edg": 162, "hsplit": 163, "hstack": 164, "hyperbol": 488, "hypergeometr": 380, "hypot": 165, "ident": 166, "ifft": 121, "ifft2": 122, "ifftn": 123, "ifftshift": 124, "ihfft": 125, "iinfo": 167, "imag": [168, 316], "implement": 10, "index": [484, 490], "indic": 169, "infin": 486, "inform": [2, 8, 10], "inner": 170, "insert": 484, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 196, "invert": 171, "irfft": 126, "irfft2": 127, "irfftn": 128, "isclos": 172, "iscomplex": 173, "iscomplexobj": 174, "isfinit": 175, "isinf": 176, "isnan": 177, "isneginf": 178, "isposinf": 179, "isreal": 180, "isrealobj": 181, "isscalar": 182, "issubdtyp": 183, "item": [317, 490], "items": 318, "iter": 484, "ix_": 184, "join": 487, "kind": 487, "kron": 185, "laplac": 381, "layout": 490, "left_shift": 186, "less": 187, "less_equ": 188, "level": 6, "librari": 0, "like": [484, 487], "linalg": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "linear": [6, 485], "linspac": 209, "loadtxt": 210, "log": 211, "log10": 212, "log1p": 213, "log2": 214, "logaddexp": 215, "logaddexp2": 216, "logarithm": 488, "logic": 486, "logical_and": 217, "logical_not": 218, "logical_or": 219, "logical_xor": 220, "logist": 382, "lognorm": 383, "logseri": 384, "logspac": 221, "logsumexp": 222, "lstsq": 197, "manipul": [487, 490], "mask_indic": 223, "math": 498, "mathemat": 488, "matmul": 224, "matric": 7, "matrix": [7, 485, 490], "matrix_pow": 198, "matrix_rank": 199, "max": [225, 319], "maximum": 226, "mean": [227, 320], "median": 228, "memori": 490, "meshgrid": 229, "method": 490, "mgrid": 230, "min": [231, 321], "minimum": 232, "miscellan": [8, 488, 489], "mod": 233, "modf": 234, "modul": [6, 492], "moveaxi": 235, "multi": [6, 490], "multi_dot": 200, "multinomi": 385, "multipl": 490, "multipli": 236, "multivariate_norm": 386, "nan": 486, "nan_to_num": 237, "nanargmax": 238, "nanargmin": 239, "nancumprod": 240, "nancumsum": 241, "nanmax": 242, "nanmean": 243, "nanmin": 244, "nanprod": 245, "nanstd": 246, "nansum": 247, "nanvar": 248, "nbyte": 322, "ndarrai": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 490], "ndim": [323, 346], "neg": 347, "negative_binomi": 387, "nextaft": 348, "noncentral_chisquar": 388, "noncentral_f": 389, "nonzero": [324, 349], "norm": [201, 485], "normal": [10, 390], "not_equ": 350, "number": [485, 487, 488], "numer": 7, "numpi": [2, 6], "ogrid": 351, "ones": 352, "ones_lik": 353, "oper": [5, 484, 486, 487, 488, 490, 498], "order": 497, "other": [485, 488, 490], "outer": 354, "output": 5, "over": 484, "overview": 3, "pack": 5, "packag": [4, 492], "pad": 491, "parallel": [0, 2], "pareto": 391, "partit": [325, 355], "permut": [392, 493], "pinv": 202, "place": 356, "point": 488, "poisson": 393, "poly1d": 492, "polynomi": 492, "polyutil": 492, "posit": 357, "pow": 358, "power": [359, 394], "prod": [326, 360], "product": [485, 488], "proj": 361, "ptp": 362, "put": [327, 363], "put_along_axi": 364, "putmask": 365, "python": 4, "qr": 203, "quick": 4, "r": 4, "rad2deg": 366, "radian": 367, "rand": 395, "randint": 396, "randn": 397, "random": [6, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 493], "random_integ": 399, "random_sampl": 400, "randomst": 368, "ranf": 401, "rang": 7, "ration": 488, "ravel": [328, 417], "ravel_multi_index": 418, "rayleigh": 402, "real": [10, 329, 419], "real_if_clos": 420, "rearrang": 487, "reciproc": 421, "reduce_hypot": 422, "refer": [1, 483], "remaind": 423, "remov": 487, "repeat": [330, 424], "reshap": [331, 425], "result_typ": 426, "rfft": 129, "rfft2": 130, "rfftfreq": 131, "rfftn": 132, "right_shift": 427, "rint": 428, "roll": 429, "rollaxi": 430, "round": [332, 431, 488], "routin": [7, 8, 10, 484, 487, 488, 489, 494], "row_stack": 432, "rsqrt": 433, "sampl": [6, 403, 493], "scikit": 4, "search": 495, "searchsort": [333, 434], "seed": 404, "select": [435, 490], "shape": [7, 334, 436, 487, 490], "shuffl": 405, "sign": 437, "signbit": 438, "simpl": 493, "sin": 439, "sinh": 440, "size": [335, 441], "slogdet": 204, "solv": [205, 485], "sort": [336, 442, 495], "sort_complex": 443, "special": [488, 490, 496], "split": [444, 487], "sqrt": 445, "squar": 446, "squeez": [337, 447], "stack": 448, "standard": 10, "standard_cauchi": 406, "standard_exponenti": 407, "standard_gamma": 408, "standard_norm": 409, "standard_t": 410, "start": 4, "statist": 497, "std": [338, 449], "stride": 339, "subtract": 450, "sum": [340, 451, 488], "summari": 6, "svd": 206, "swapax": [341, 452], "sycl": 4, "t": 250, "tabl": 6, "take": [342, 453], "take_along_axi": 454, "tan": 455, "tanh": 456, "target": 4, "tensordot": 457, "tensorinv": 207, "tensorsolv": 208, "test": [4, 8, 486], "tile": [458, 487], "trace": [343, 459], "transform": [6, 10], "transpos": [344, 460, 487], "trapezoid": 461, "tri": 462, "triangular": 411, "trigonometr": [488, 498], "tril": 463, "tril_indic": 464, "tril_indices_from": 465, "trim_zero": 466, "triu": 467, "triu_indic": 468, "triu_indices_from": 469, "true_divid": 470, "trunc": 471, "truth": 486, "twiddl": 498, "type": [8, 9, 486, 490], "ufunc": 498, "uniform": 412, "uniqu": 472, "univers": 498, "unravel_index": 473, "unwrap": 474, "util": 489, "valu": [7, 486], "vander": 475, "var": [345, 476], "varianc": 497, "vdot": 477, "vector": 485, "vonmis": 413, "vsplit": 478, "vstack": 479, "wald": 414, "weibul": 415, "where": 480, "wise": 5, "zero": 481, "zeros_lik": 482, "zipf": 416}})