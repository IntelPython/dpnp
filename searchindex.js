Search.setIndex({"alltitles": {"API Reference": [[468, null]], "Adding and removing elements": [[472, "adding-and-removing-elements"]], "Arithmetic": [[477, "arithmetic"]], "Arithmetic operations": [[473, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[475, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[469, null]], "Array Manipulation Routines": [[472, null]], "Array attributes": [[475, "array-attributes"]], "Array conversion": [[475, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[475, "array-methods"]], "Array type testing": [[471, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[483, "available-ufuncs"]], "Averages and variances": [[482, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[472, "basic-operations"]], "Basics": [[477, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[483, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[475, "calculation"]], "Changing array shape": [[472, "changing-array-shape"]], "Changing kind of array": [[472, "changing-kind-of-array"]], "Changing number of dimensions": [[472, "changing-number-of-dimensions"]], "Comparison": [[471, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[483, "comparison-functions"]], "Constructing arrays": [[475, "constructing-arrays"]], "Correlations": [[482, "correlations"]], "Counting": [[480, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[475, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[470, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[478, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[481, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[473, "exponents-and-logarithms"]], "Extrema finding": [[473, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[483, "floating-functions"]], "Floating point routines": [[473, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[469, "generating-index-arrays"]], "Handling complex numbers": [[473, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[482, "histograms"]], "Hyperbolic functions": [[473, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[475, "indexing-arrays"]], "Indexing-like operations": [[469, "indexing-like-operations"]], "Infinities and NaNs": [[471, "infinities-and-nans"]], "Inserting data into arrays": [[469, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[475, "item-selection-and-manipulation"]], "Iterating over arrays": [[469, "iterating-over-arrays"]], "Joining arrays": [[472, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [470, null]], "Logic Functions": [[471, null]], "Logic operations": [[471, "logic-operations"]], "Math operations": [[483, "math-operations"]], "Mathematical functions": [[473, null]], "Matrix and vector products": [[470, "matrix-and-vector-products"]], "Matrix eigenvalues": [[470, "matrix-eigenvalues"]], "Memory layout": [[475, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [473, "miscellaneous"]], "Miscellaneous routines": [[474, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[475, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[470, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[482, "order-statistics"]], "Other attributes": [[475, "other-attributes"]], "Other special functions": [[473, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[476, null]], "Permutations": [[478, "permutations"]], "Poly1d": [[477, "poly1d"]], "Polynomial Module": [[477, "polynomial-module"]], "Polynomial Package": [[477, "polynomial-package"]], "Polynomials": [[477, null]], "Polyutils": [[477, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[478, null]], "Random generator": [[478, "random-generator"]], "Rational routines": [[473, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[472, "rearranging-elements"]], "Rounding": [[473, "rounding"]], "Routines": [[479, null]], "Searching": [[480, "searching"]], "Shape manipulation": [[475, "shape-manipulation"]], "Simple random data": [[478, "simple-random-data"]], "Solving linear equations": [[470, "solving-linear-equations"]], "Sorting": [[480, "sorting"]], "Sorting, Searching, and Counting": [[480, null]], "Special Functions": [[481, null]], "Special methods": [[475, "special-methods"]], "Splitting arrays": [[472, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[482, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[473, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[472, "tiling-arrays"]], "Transpose-like operations": [[472, "transpose-like-operations"]], "Trigonometric functions": [[473, "trigonometric-functions"], [483, "trigonometric-functions"]], "Truth value testing": [[471, "truth-value-testing"]], "Type Promotion": [[10, "type-promotion"]], "Universal Functions (ufunc)": [[483, null]], "Utility": [[474, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.add": [[13, null]], "dpnp.all": [[14, null]], "dpnp.allclose": [[15, null]], "dpnp.amax": [[16, null]], "dpnp.amin": [[17, null]], "dpnp.angle": [[18, null]], "dpnp.any": [[19, null]], "dpnp.append": [[20, null]], "dpnp.arange": [[21, null]], "dpnp.arccos": [[22, null]], "dpnp.arccosh": [[23, null]], "dpnp.arcsin": [[24, null]], "dpnp.arcsinh": [[25, null]], "dpnp.arctan": [[26, null]], "dpnp.arctan2": [[27, null]], "dpnp.arctanh": [[28, null]], "dpnp.argmax": [[29, null]], "dpnp.argmin": [[30, null]], "dpnp.argsort": [[31, null]], "dpnp.argwhere": [[32, null]], "dpnp.around": [[33, null]], "dpnp.array": [[34, null]], "dpnp.array_equal": [[35, null]], "dpnp.array_equiv": [[36, null]], "dpnp.asanyarray": [[37, null]], "dpnp.asarray": [[38, null]], "dpnp.asarray_chkfinite": [[39, null]], "dpnp.ascontiguousarray": [[40, null]], "dpnp.asfarray": [[41, null]], "dpnp.asfortranarray": [[42, null]], "dpnp.asnumpy": [[43, null]], "dpnp.astype": [[44, null]], "dpnp.atleast_1d": [[45, null]], "dpnp.atleast_2d": [[46, null]], "dpnp.atleast_3d": [[47, null]], "dpnp.average": [[48, null]], "dpnp.bincount": [[49, null]], "dpnp.bitwise_and": [[50, null]], "dpnp.bitwise_not": [[51, null]], "dpnp.bitwise_or": [[52, null]], "dpnp.bitwise_xor": [[53, null]], "dpnp.broadcast_arrays": [[54, null]], "dpnp.broadcast_to": [[55, null]], "dpnp.can_cast": [[56, null]], "dpnp.cbrt": [[57, null]], "dpnp.ceil": [[58, null]], "dpnp.choose": [[59, null]], "dpnp.clip": [[60, null]], "dpnp.column_stack": [[61, null]], "dpnp.concatenate": [[62, null]], "dpnp.conj": [[63, null]], "dpnp.conjugate": [[64, null]], "dpnp.convolve": [[65, null]], "dpnp.copy": [[66, null]], "dpnp.copysign": [[67, null]], "dpnp.copyto": [[68, null]], "dpnp.correlate": [[69, null]], "dpnp.cos": [[70, null]], "dpnp.cosh": [[71, null]], "dpnp.count_nonzero": [[72, null]], "dpnp.cov": [[73, null]], "dpnp.cross": [[74, null]], "dpnp.cumlogsumexp": [[75, null]], "dpnp.cumprod": [[76, null]], "dpnp.cumsum": [[77, null]], "dpnp.deg2rad": [[78, null]], "dpnp.degrees": [[79, null]], "dpnp.diag": [[80, null]], "dpnp.diag_indices": [[81, null]], "dpnp.diag_indices_from": [[82, null]], "dpnp.diagflat": [[83, null]], "dpnp.diagonal": [[84, null]], "dpnp.diff": [[85, null]], "dpnp.digitize": [[86, null]], "dpnp.divide": [[87, null]], "dpnp.dot": [[88, null]], "dpnp.dpnp_array.dpnp_array": [[89, null]], "dpnp.dstack": [[90, null]], "dpnp.dtype": [[91, null]], "dpnp.ediff1d": [[92, null]], "dpnp.einsum": [[93, null]], "dpnp.einsum_path": [[94, null]], "dpnp.empty": [[95, null]], "dpnp.empty_like": [[96, null]], "dpnp.equal": [[97, null]], "dpnp.erf": [[98, null]], "dpnp.exp": [[99, null]], "dpnp.exp2": [[100, null]], "dpnp.expand_dims": [[101, null]], "dpnp.expm1": [[102, null]], "dpnp.extract": [[103, null]], "dpnp.eye": [[104, null]], "dpnp.fabs": [[105, null]], "dpnp.fft.fft": [[106, null]], "dpnp.fft.fft2": [[107, null]], "dpnp.fft.fftfreq": [[108, null]], "dpnp.fft.fftn": [[109, null]], "dpnp.fft.fftshift": [[110, null]], "dpnp.fft.hfft": [[111, null]], "dpnp.fft.ifft": [[112, null]], "dpnp.fft.ifft2": [[113, null]], "dpnp.fft.ifftn": [[114, null]], "dpnp.fft.ifftshift": [[115, null]], "dpnp.fft.ihfft": [[116, null]], "dpnp.fft.irfft": [[117, null]], "dpnp.fft.irfft2": [[118, null]], "dpnp.fft.irfftn": [[119, null]], "dpnp.fft.rfft": [[120, null]], "dpnp.fft.rfft2": [[121, null]], "dpnp.fft.rfftfreq": [[122, null]], "dpnp.fft.rfftn": [[123, null]], "dpnp.fill_diagonal": [[124, null]], "dpnp.finfo": [[125, null]], "dpnp.fix": [[126, null]], "dpnp.flatiter": [[127, null]], "dpnp.flatnonzero": [[128, null]], "dpnp.flip": [[129, null]], "dpnp.fliplr": [[130, null]], "dpnp.flipud": [[131, null]], "dpnp.float_power": [[132, null]], "dpnp.floor": [[133, null]], "dpnp.floor_divide": [[134, null]], "dpnp.fmax": [[135, null]], "dpnp.fmin": [[136, null]], "dpnp.fmod": [[137, null]], "dpnp.from_dlpack": [[138, null]], "dpnp.frombuffer": [[139, null]], "dpnp.fromfile": [[140, null]], "dpnp.fromfunction": [[141, null]], "dpnp.fromiter": [[142, null]], "dpnp.fromstring": [[143, null]], "dpnp.full": [[144, null]], "dpnp.full_like": [[145, null]], "dpnp.geomspace": [[146, null]], "dpnp.get_include": [[147, null]], "dpnp.gradient": [[148, null]], "dpnp.greater": [[149, null]], "dpnp.greater_equal": [[150, null]], "dpnp.heaviside": [[151, null]], "dpnp.histogram": [[152, null]], "dpnp.histogram_bin_edges": [[153, null]], "dpnp.hstack": [[154, null]], "dpnp.hypot": [[155, null]], "dpnp.identity": [[156, null]], "dpnp.iinfo": [[157, null]], "dpnp.imag": [[158, null]], "dpnp.indices": [[159, null]], "dpnp.inner": [[160, null]], "dpnp.invert": [[161, null]], "dpnp.isclose": [[162, null]], "dpnp.iscomplex": [[163, null]], "dpnp.iscomplexobj": [[164, null]], "dpnp.isfinite": [[165, null]], "dpnp.isinf": [[166, null]], "dpnp.isnan": [[167, null]], "dpnp.isneginf": [[168, null]], "dpnp.isposinf": [[169, null]], "dpnp.isreal": [[170, null]], "dpnp.isrealobj": [[171, null]], "dpnp.isscalar": [[172, null]], "dpnp.issubdtype": [[173, null]], "dpnp.ix_": [[174, null]], "dpnp.kron": [[175, null]], "dpnp.left_shift": [[176, null]], "dpnp.less": [[177, null]], "dpnp.less_equal": [[178, null]], "dpnp.linalg.cholesky": [[179, null]], "dpnp.linalg.cond": [[180, null]], "dpnp.linalg.det": [[181, null]], "dpnp.linalg.eig": [[182, null]], "dpnp.linalg.eigh": [[183, null]], "dpnp.linalg.eigvals": [[184, null]], "dpnp.linalg.eigvalsh": [[185, null]], "dpnp.linalg.inv": [[186, null]], "dpnp.linalg.lstsq": [[187, null]], "dpnp.linalg.matrix_power": [[188, null]], "dpnp.linalg.matrix_rank": [[189, null]], "dpnp.linalg.multi_dot": [[190, null]], "dpnp.linalg.norm": [[191, null]], "dpnp.linalg.pinv": [[192, null]], "dpnp.linalg.qr": [[193, null]], "dpnp.linalg.slogdet": [[194, null]], "dpnp.linalg.solve": [[195, null]], "dpnp.linalg.svd": [[196, null]], "dpnp.linalg.tensorinv": [[197, null]], "dpnp.linalg.tensorsolve": [[198, null]], "dpnp.linspace": [[199, null]], "dpnp.loadtxt": [[200, null]], "dpnp.log": [[201, null]], "dpnp.log10": [[202, null]], "dpnp.log1p": [[203, null]], "dpnp.log2": [[204, null]], "dpnp.logaddexp": [[205, null]], "dpnp.logaddexp2": [[206, null]], "dpnp.logical_and": [[207, null]], "dpnp.logical_not": [[208, null]], "dpnp.logical_or": [[209, null]], "dpnp.logical_xor": [[210, null]], "dpnp.logspace": [[211, null]], "dpnp.logsumexp": [[212, null]], "dpnp.mask_indices": [[213, null]], "dpnp.matmul": [[214, null]], "dpnp.max": [[215, null]], "dpnp.maximum": [[216, null]], "dpnp.mean": [[217, null]], "dpnp.median": [[218, null]], "dpnp.meshgrid": [[219, null]], "dpnp.mgrid": [[220, null]], "dpnp.min": [[221, null]], "dpnp.minimum": [[222, null]], "dpnp.mod": [[223, null]], "dpnp.modf": [[224, null]], "dpnp.moveaxis": [[225, null]], "dpnp.multiply": [[226, null]], "dpnp.nan_to_num": [[227, null]], "dpnp.nanargmax": [[228, null]], "dpnp.nanargmin": [[229, null]], "dpnp.nancumprod": [[230, null]], "dpnp.nancumsum": [[231, null]], "dpnp.nanmax": [[232, null]], "dpnp.nanmean": [[233, null]], "dpnp.nanmin": [[234, null]], "dpnp.nanprod": [[235, null]], "dpnp.nanstd": [[236, null]], "dpnp.nansum": [[237, null]], "dpnp.nanvar": [[238, null]], "dpnp.ndarray": [[239, null]], "dpnp.ndarray.T": [[240, null]], "dpnp.ndarray.__abs__": [[241, null]], "dpnp.ndarray.__add__": [[242, null]], "dpnp.ndarray.__and__": [[243, null]], "dpnp.ndarray.__bool__": [[244, null]], "dpnp.ndarray.__complex__": [[245, null]], "dpnp.ndarray.__copy__": [[246, null]], "dpnp.ndarray.__eq__": [[247, null]], "dpnp.ndarray.__float__": [[248, null]], "dpnp.ndarray.__floordiv__": [[249, null]], "dpnp.ndarray.__ge__": [[250, null]], "dpnp.ndarray.__getitem__": [[251, null]], "dpnp.ndarray.__gt__": [[252, null]], "dpnp.ndarray.__iadd__": [[253, null]], "dpnp.ndarray.__iand__": [[254, null]], "dpnp.ndarray.__ifloordiv__": [[255, null]], "dpnp.ndarray.__ilshift__": [[256, null]], "dpnp.ndarray.__imod__": [[257, null]], "dpnp.ndarray.__imul__": [[258, null]], "dpnp.ndarray.__int__": [[259, null]], "dpnp.ndarray.__invert__": [[260, null]], "dpnp.ndarray.__ior__": [[261, null]], "dpnp.ndarray.__ipow__": [[262, null]], "dpnp.ndarray.__irshift__": [[263, null]], "dpnp.ndarray.__isub__": [[264, null]], "dpnp.ndarray.__itruediv__": [[265, null]], "dpnp.ndarray.__ixor__": [[266, null]], "dpnp.ndarray.__le__": [[267, null]], "dpnp.ndarray.__len__": [[268, null]], "dpnp.ndarray.__lshift__": [[269, null]], "dpnp.ndarray.__lt__": [[270, null]], "dpnp.ndarray.__matmul__": [[271, null]], "dpnp.ndarray.__mod__": [[272, null]], "dpnp.ndarray.__mul__": [[273, null]], "dpnp.ndarray.__ne__": [[274, null]], "dpnp.ndarray.__neg__": [[275, null]], "dpnp.ndarray.__new__": [[276, null]], "dpnp.ndarray.__or__": [[277, null]], "dpnp.ndarray.__pos__": [[278, null]], "dpnp.ndarray.__pow__": [[279, null]], "dpnp.ndarray.__repr__": [[280, null]], "dpnp.ndarray.__rshift__": [[281, null]], "dpnp.ndarray.__setitem__": [[282, null]], "dpnp.ndarray.__str__": [[283, null]], "dpnp.ndarray.__sub__": [[284, null]], "dpnp.ndarray.__truediv__": [[285, null]], "dpnp.ndarray.__xor__": [[286, null]], "dpnp.ndarray.all": [[287, null]], "dpnp.ndarray.any": [[288, null]], "dpnp.ndarray.argmax": [[289, null]], "dpnp.ndarray.argmin": [[290, null]], "dpnp.ndarray.argsort": [[291, null]], "dpnp.ndarray.astype": [[292, null]], "dpnp.ndarray.choose": [[293, null]], "dpnp.ndarray.clip": [[294, null]], "dpnp.ndarray.conj": [[295, null]], "dpnp.ndarray.conjugate": [[296, null]], "dpnp.ndarray.copy": [[297, null]], "dpnp.ndarray.cumprod": [[298, null]], "dpnp.ndarray.cumsum": [[299, null]], "dpnp.ndarray.diagonal": [[300, null]], "dpnp.ndarray.dtype": [[301, null]], "dpnp.ndarray.fill": [[302, null]], "dpnp.ndarray.flags": [[303, null]], "dpnp.ndarray.flat": [[304, null]], "dpnp.ndarray.flatten": [[305, null]], "dpnp.ndarray.imag": [[306, null]], "dpnp.ndarray.item": [[307, null]], "dpnp.ndarray.itemsize": [[308, null]], "dpnp.ndarray.max": [[309, null]], "dpnp.ndarray.mean": [[310, null]], "dpnp.ndarray.min": [[311, null]], "dpnp.ndarray.nbytes": [[312, null]], "dpnp.ndarray.ndim": [[313, null]], "dpnp.ndarray.nonzero": [[314, null]], "dpnp.ndarray.partition": [[315, null]], "dpnp.ndarray.prod": [[316, null]], "dpnp.ndarray.put": [[317, null]], "dpnp.ndarray.ravel": [[318, null]], "dpnp.ndarray.real": [[319, null]], "dpnp.ndarray.repeat": [[320, null]], "dpnp.ndarray.reshape": [[321, null]], "dpnp.ndarray.round": [[322, null]], "dpnp.ndarray.searchsorted": [[323, null]], "dpnp.ndarray.shape": [[324, null]], "dpnp.ndarray.size": [[325, null]], "dpnp.ndarray.sort": [[326, null]], "dpnp.ndarray.squeeze": [[327, null]], "dpnp.ndarray.std": [[328, null]], "dpnp.ndarray.strides": [[329, null]], "dpnp.ndarray.sum": [[330, null]], "dpnp.ndarray.swapaxes": [[331, null]], "dpnp.ndarray.take": [[332, null]], "dpnp.ndarray.trace": [[333, null]], "dpnp.ndarray.transpose": [[334, null]], "dpnp.ndarray.var": [[335, null]], "dpnp.ndim": [[336, null]], "dpnp.negative": [[337, null]], "dpnp.nextafter": [[338, null]], "dpnp.nonzero": [[339, null]], "dpnp.not_equal": [[340, null]], "dpnp.ogrid": [[341, null]], "dpnp.ones": [[342, null]], "dpnp.ones_like": [[343, null]], "dpnp.outer": [[344, null]], "dpnp.partition": [[345, null]], "dpnp.place": [[346, null]], "dpnp.positive": [[347, null]], "dpnp.power": [[348, null]], "dpnp.prod": [[349, null]], "dpnp.proj": [[350, null]], "dpnp.ptp": [[351, null]], "dpnp.put": [[352, null]], "dpnp.put_along_axis": [[353, null]], "dpnp.putmask": [[354, null]], "dpnp.rad2deg": [[355, null]], "dpnp.radians": [[356, null]], "dpnp.random.RandomState": [[357, null]], "dpnp.random.beta": [[358, null]], "dpnp.random.binomial": [[359, null]], "dpnp.random.bytes": [[360, null]], "dpnp.random.chisquare": [[361, null]], "dpnp.random.choice": [[362, null]], "dpnp.random.dirichlet": [[363, null]], "dpnp.random.exponential": [[364, null]], "dpnp.random.f": [[365, null]], "dpnp.random.gamma": [[366, null]], "dpnp.random.geometric": [[367, null]], "dpnp.random.gumbel": [[368, null]], "dpnp.random.hypergeometric": [[369, null]], "dpnp.random.laplace": [[370, null]], "dpnp.random.logistic": [[371, null]], "dpnp.random.lognormal": [[372, null]], "dpnp.random.logseries": [[373, null]], "dpnp.random.multinomial": [[374, null]], "dpnp.random.multivariate_normal": [[375, null]], "dpnp.random.negative_binomial": [[376, null]], "dpnp.random.noncentral_chisquare": [[377, null]], "dpnp.random.noncentral_f": [[378, null]], "dpnp.random.normal": [[379, null]], "dpnp.random.pareto": [[380, null]], "dpnp.random.permutation": [[381, null]], "dpnp.random.poisson": [[382, null]], "dpnp.random.power": [[383, null]], "dpnp.random.rand": [[384, null]], "dpnp.random.randint": [[385, null]], "dpnp.random.randn": [[386, null]], "dpnp.random.random": [[387, null]], "dpnp.random.random_integers": [[388, null]], "dpnp.random.random_sample": [[389, null]], "dpnp.random.ranf": [[390, null]], "dpnp.random.rayleigh": [[391, null]], "dpnp.random.sample": [[392, null]], "dpnp.random.seed": [[393, null]], "dpnp.random.shuffle": [[394, null]], "dpnp.random.standard_cauchy": [[395, null]], "dpnp.random.standard_exponential": [[396, null]], "dpnp.random.standard_gamma": [[397, null]], "dpnp.random.standard_normal": [[398, null]], "dpnp.random.standard_t": [[399, null]], "dpnp.random.triangular": [[400, null]], "dpnp.random.uniform": [[401, null]], "dpnp.random.vonmises": [[402, null]], "dpnp.random.wald": [[403, null]], "dpnp.random.weibull": [[404, null]], "dpnp.random.zipf": [[405, null]], "dpnp.ravel": [[406, null]], "dpnp.real": [[407, null]], "dpnp.real_if_close": [[408, null]], "dpnp.reciprocal": [[409, null]], "dpnp.reduce_hypot": [[410, null]], "dpnp.remainder": [[411, null]], "dpnp.repeat": [[412, null]], "dpnp.reshape": [[413, null]], "dpnp.result_type": [[414, null]], "dpnp.right_shift": [[415, null]], "dpnp.rint": [[416, null]], "dpnp.roll": [[417, null]], "dpnp.rollaxis": [[418, null]], "dpnp.round": [[419, null]], "dpnp.row_stack": [[420, null]], "dpnp.rsqrt": [[421, null]], "dpnp.searchsorted": [[422, null]], "dpnp.select": [[423, null]], "dpnp.shape": [[424, null]], "dpnp.sign": [[425, null]], "dpnp.signbit": [[426, null]], "dpnp.sin": [[427, null]], "dpnp.sinh": [[428, null]], "dpnp.size": [[429, null]], "dpnp.sort": [[430, null]], "dpnp.sort_complex": [[431, null]], "dpnp.sqrt": [[432, null]], "dpnp.square": [[433, null]], "dpnp.squeeze": [[434, null]], "dpnp.stack": [[435, null]], "dpnp.std": [[436, null]], "dpnp.subtract": [[437, null]], "dpnp.sum": [[438, null]], "dpnp.swapaxes": [[439, null]], "dpnp.take": [[440, null]], "dpnp.take_along_axis": [[441, null]], "dpnp.tan": [[442, null]], "dpnp.tanh": [[443, null]], "dpnp.tensordot": [[444, null]], "dpnp.tile": [[445, null]], "dpnp.trace": [[446, null]], "dpnp.transpose": [[447, null]], "dpnp.trapezoid": [[448, null]], "dpnp.tri": [[449, null]], "dpnp.tril": [[450, null]], "dpnp.tril_indices": [[451, null]], "dpnp.tril_indices_from": [[452, null]], "dpnp.trim_zeros": [[453, null]], "dpnp.triu": [[454, null]], "dpnp.triu_indices": [[455, null]], "dpnp.triu_indices_from": [[456, null]], "dpnp.true_divide": [[457, null]], "dpnp.trunc": [[458, null]], "dpnp.unique": [[459, null]], "dpnp.unwrap": [[460, null]], "dpnp.vander": [[461, null]], "dpnp.var": [[462, null]], "dpnp.vdot": [[463, null]], "dpnp.vstack": [[464, null]], "dpnp.where": [[465, null]], "dpnp.zeros": [[466, null]], "dpnp.zeros_like": [[467, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[91, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[91, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[91, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[91, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[91, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[91, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[91, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[91, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[91, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[287, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[288, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "append() (in module dpnp)": [[20, "dpnp.append", false]], "arange() (in module dpnp)": [[21, "dpnp.arange", false]], "arccos() (in module dpnp)": [[22, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[23, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[24, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[25, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[26, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[27, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[28, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[289, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[29, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[290, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[30, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[291, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[31, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[32, "dpnp.argwhere", false]], "around() (in module dpnp)": [[33, "dpnp.around", false]], "array() (in module dpnp)": [[34, "dpnp.array", false]], "array_equal() (in module dpnp)": [[35, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[36, "dpnp.array_equiv", false]], "asanyarray() (in module dpnp)": [[37, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[38, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[39, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[40, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[41, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[42, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[43, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[292, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[44, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[45, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[46, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[47, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[48, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[91, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[358, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[49, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[359, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[50, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[51, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[52, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[53, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[54, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[55, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[91, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[360, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[56, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[57, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[58, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[91, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[361, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[362, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[179, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[293, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[59, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[294, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[60, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[61, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[62, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[180, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[295, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[63, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[296, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[64, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[65, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[297, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[66, "dpnp.copy", false]], "copysign() (in module dpnp)": [[67, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[68, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[69, "dpnp.correlate", false]], "cos() (in module dpnp)": [[70, "dpnp.cos", false]], "cosh() (in module dpnp)": [[71, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[72, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[73, "dpnp.cov", false]], "cross() (in module dpnp)": [[74, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[75, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[298, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[76, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[299, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[77, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[78, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[79, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[91, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[181, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[80, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[81, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[82, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[83, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[300, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[84, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[85, "dpnp.diff", false]], "digitize() (in module dpnp)": [[86, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[363, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[87, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[88, "dpnp.dot", false]], "dpnp": [[2, "module-dpnp", false], [3, "module-dpnp", false]], "dpnp.fft": [[10, "module-0", false], [10, "module-dpnp.fft", false]], "dpnp.random": [[478, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[89, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[90, "dpnp.dstack", false]], "dtype (class in dpnp)": [[91, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[301, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[92, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[182, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[183, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[184, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[185, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[93, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[94, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[95, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[96, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[97, "dpnp.equal", false]], "erf() (in module dpnp)": [[98, "dpnp.erf", false]], "exp() (in module dpnp)": [[99, "dpnp.exp", false]], "exp2() (in module dpnp)": [[100, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[101, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[102, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[364, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[103, "dpnp.extract", false]], "eye() (in module dpnp)": [[104, "dpnp.eye", false]], "f() (in module dpnp.random)": [[365, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[105, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[106, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[107, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[108, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[109, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[110, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[91, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[302, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[124, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[125, "dpnp.finfo", false]], "fix() (in module dpnp)": [[126, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[91, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[303, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[304, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[127, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[128, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[305, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[129, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[130, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[131, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[132, "dpnp.float_power", false]], "floor() (in module dpnp)": [[133, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[134, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[135, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[136, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[137, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[138, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[139, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[140, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[141, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[142, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[143, "dpnp.fromstring", false]], "full() (in module dpnp)": [[144, "dpnp.full", false]], "full_like() (in module dpnp)": [[145, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[366, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[367, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[146, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[147, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[148, "dpnp.gradient", false]], "greater() (in module dpnp)": [[149, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[150, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[368, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[91, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[151, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[111, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[152, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[153, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[154, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[369, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[155, "dpnp.hypot", false]], "identity() (in module dpnp)": [[156, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[112, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[113, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[114, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[115, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[116, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[157, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[306, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[158, "dpnp.imag", false]], "indices() (in module dpnp)": [[159, "dpnp.indices", false]], "inner() (in module dpnp)": [[160, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[186, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[161, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[117, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[118, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[119, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[91, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[91, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[162, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[163, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[164, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[165, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[166, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[167, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[91, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[168, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[169, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[170, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[171, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[172, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[173, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[307, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[91, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[308, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[174, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[91, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[175, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[370, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[176, "dpnp.left_shift", false]], "less() (in module dpnp)": [[177, "dpnp.less", false]], "less_equal() (in module dpnp)": [[178, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[199, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[200, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[201, "dpnp.log", false]], "log10() (in module dpnp)": [[202, "dpnp.log10", false]], "log1p() (in module dpnp)": [[203, "dpnp.log1p", false]], "log2() (in module dpnp)": [[204, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[205, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[206, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[207, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[208, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[209, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[210, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[371, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[372, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[373, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[211, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[212, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[187, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[213, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[214, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[188, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[189, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[309, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[215, "dpnp.max", false]], "maximum() (in module dpnp)": [[216, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[310, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[217, "dpnp.mean", false]], "median() (in module dpnp)": [[218, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[219, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[91, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[220, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[311, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[221, "dpnp.min", false]], "minimum() (in module dpnp)": [[222, "dpnp.minimum", false]], "mod() (in module dpnp)": [[223, "dpnp.mod", false]], "modf() (in module dpnp)": [[224, "dpnp.modf", false]], "module": [[2, "module-dpnp", false], [3, "module-dpnp", false], [10, "module-0", false], [10, "module-dpnp.fft", false], [478, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[225, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[190, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[374, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[226, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[375, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[91, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[91, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[227, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[228, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[229, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[230, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[231, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[232, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[233, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[234, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[235, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[236, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[237, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[238, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[312, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[239, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[91, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[313, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[336, "dpnp.ndim", false]], "negative() (in module dpnp)": [[337, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[376, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[91, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[338, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[377, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[378, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[314, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[339, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[191, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[379, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[340, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[91, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[341, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[342, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[343, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[344, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[380, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[315, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[345, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[381, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[192, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[346, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[382, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[347, "dpnp.positive", false]], "power() (in module dpnp)": [[348, "dpnp.power", false]], "power() (in module dpnp.random)": [[383, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[316, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[349, "dpnp.prod", false]], "proj() (in module dpnp)": [[350, "dpnp.proj", false]], "ptp() (in module dpnp)": [[351, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[317, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[352, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[353, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[354, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[193, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[355, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[356, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[384, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[385, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[386, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[387, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[388, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[389, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[357, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[390, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[318, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[406, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[391, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[319, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[407, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[408, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[409, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[410, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[411, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[320, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[412, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[321, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[413, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[414, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[120, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[121, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[122, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[123, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[415, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[416, "dpnp.rint", false]], "roll() (in module dpnp)": [[417, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[418, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[322, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[419, "dpnp.round", false]], "row_stack() (in module dpnp)": [[420, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[421, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[392, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[323, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[422, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[393, "dpnp.random.seed", false]], "select() (in module dpnp)": [[423, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[91, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[324, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[424, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[394, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[425, "dpnp.sign", false]], "signbit() (in module dpnp)": [[426, "dpnp.signbit", false]], "sin() (in module dpnp)": [[427, "dpnp.sin", false]], "sinh() (in module dpnp)": [[428, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[325, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[429, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[194, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[195, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[326, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[430, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[431, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[432, "dpnp.sqrt", false]], "square() (in module dpnp)": [[433, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[327, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[434, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[435, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[395, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[396, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[397, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[398, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[399, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[328, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[436, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[91, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[329, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[91, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[437, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[330, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[438, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[196, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[331, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[439, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[240, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[332, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[440, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[441, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[442, "dpnp.tan", false]], "tanh() (in module dpnp)": [[443, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[444, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[197, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[198, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[445, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[333, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[446, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[334, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[447, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[448, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[449, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[400, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[450, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[451, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[452, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[453, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[454, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[455, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[456, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[457, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[458, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[91, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[357, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[401, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[459, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[460, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[461, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[335, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[462, "dpnp.var", false]], "vdot() (in module dpnp)": [[463, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[402, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[464, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[403, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[404, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[465, "dpnp.where", false]], "zeros() (in module dpnp)": [[466, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[467, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[405, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argsort"], [32, 1, 1, "", "argwhere"], [33, 1, 1, "", "around"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_equiv"], [37, 1, 1, "", "asanyarray"], [38, 1, 1, "", "asarray"], [39, 1, 1, "", "asarray_chkfinite"], [40, 1, 1, "", "ascontiguousarray"], [41, 1, 1, "", "asfarray"], [42, 1, 1, "", "asfortranarray"], [43, 1, 1, "", "asnumpy"], [44, 1, 1, "", "astype"], [45, 1, 1, "", "atleast_1d"], [46, 1, 1, "", "atleast_2d"], [47, 1, 1, "", "atleast_3d"], [48, 1, 1, "", "average"], [49, 1, 1, "", "bincount"], [50, 1, 1, "", "bitwise_and"], [51, 1, 1, "", "bitwise_not"], [52, 1, 1, "", "bitwise_or"], [53, 1, 1, "", "bitwise_xor"], [54, 1, 1, "", "broadcast_arrays"], [55, 1, 1, "", "broadcast_to"], [56, 1, 1, "", "can_cast"], [57, 1, 1, "", "cbrt"], [58, 1, 1, "", "ceil"], [59, 1, 1, "", "choose"], [60, 1, 1, "", "clip"], [61, 1, 1, "", "column_stack"], [62, 1, 1, "", "concatenate"], [63, 1, 1, "", "conj"], [64, 1, 1, "", "conjugate"], [65, 1, 1, "", "convolve"], [66, 1, 1, "", "copy"], [67, 1, 1, "", "copysign"], [68, 1, 1, "", "copyto"], [69, 1, 1, "", "correlate"], [70, 1, 1, "", "cos"], [71, 1, 1, "", "cosh"], [72, 1, 1, "", "count_nonzero"], [73, 1, 1, "", "cov"], [74, 1, 1, "", "cross"], [75, 1, 1, "", "cumlogsumexp"], [76, 1, 1, "", "cumprod"], [77, 1, 1, "", "cumsum"], [78, 1, 1, "", "deg2rad"], [79, 1, 1, "", "degrees"], [80, 1, 1, "", "diag"], [81, 1, 1, "", "diag_indices"], [82, 1, 1, "", "diag_indices_from"], [83, 1, 1, "", "diagflat"], [84, 1, 1, "", "diagonal"], [85, 1, 1, "", "diff"], [86, 1, 1, "", "digitize"], [87, 1, 1, "", "divide"], [88, 1, 1, "", "dot"], [90, 1, 1, "", "dstack"], [91, 2, 1, "", "dtype"], [92, 1, 1, "", "ediff1d"], [93, 1, 1, "", "einsum"], [94, 1, 1, "", "einsum_path"], [95, 1, 1, "", "empty"], [96, 1, 1, "", "empty_like"], [97, 1, 1, "", "equal"], [98, 1, 1, "", "erf"], [99, 1, 1, "", "exp"], [100, 1, 1, "", "exp2"], [101, 1, 1, "", "expand_dims"], [102, 1, 1, "", "expm1"], [103, 1, 1, "", "extract"], [104, 1, 1, "", "eye"], [105, 1, 1, "", "fabs"], [10, 0, 0, "module-0", "fft"], [124, 1, 1, "", "fill_diagonal"], [125, 1, 1, "", "finfo"], [126, 1, 1, "", "fix"], [127, 2, 1, "", "flatiter"], [128, 1, 1, "", "flatnonzero"], [129, 1, 1, "", "flip"], [130, 1, 1, "", "fliplr"], [131, 1, 1, "", "flipud"], [132, 1, 1, "", "float_power"], [133, 1, 1, "", "floor"], [134, 1, 1, "", "floor_divide"], [135, 1, 1, "", "fmax"], [136, 1, 1, "", "fmin"], [137, 1, 1, "", "fmod"], [138, 1, 1, "", "from_dlpack"], [139, 1, 1, "", "frombuffer"], [140, 1, 1, "", "fromfile"], [141, 1, 1, "", "fromfunction"], [142, 1, 1, "", "fromiter"], [143, 1, 1, "", "fromstring"], [144, 1, 1, "", "full"], [145, 1, 1, "", "full_like"], [146, 1, 1, "", "geomspace"], [147, 1, 1, "", "get_include"], [148, 1, 1, "", "gradient"], [149, 1, 1, "", "greater"], [150, 1, 1, "", "greater_equal"], [151, 1, 1, "", "heaviside"], [152, 1, 1, "", "histogram"], [153, 1, 1, "", "histogram_bin_edges"], [154, 1, 1, "", "hstack"], [155, 1, 1, "", "hypot"], [156, 1, 1, "", "identity"], [157, 1, 1, "", "iinfo"], [158, 1, 1, "", "imag"], [159, 1, 1, "", "indices"], [160, 1, 1, "", "inner"], [161, 1, 1, "", "invert"], [162, 1, 1, "", "isclose"], [163, 1, 1, "", "iscomplex"], [164, 1, 1, "", "iscomplexobj"], [165, 1, 1, "", "isfinite"], [166, 1, 1, "", "isinf"], [167, 1, 1, "", "isnan"], [168, 1, 1, "", "isneginf"], [169, 1, 1, "", "isposinf"], [170, 1, 1, "", "isreal"], [171, 1, 1, "", "isrealobj"], [172, 1, 1, "", "isscalar"], [173, 1, 1, "", "issubdtype"], [174, 1, 1, "", "ix_"], [175, 1, 1, "", "kron"], [176, 1, 1, "", "left_shift"], [177, 1, 1, "", "less"], [178, 1, 1, "", "less_equal"], [199, 1, 1, "", "linspace"], [200, 1, 1, "", "loadtxt"], [201, 1, 1, "", "log"], [202, 1, 1, "", "log10"], [203, 1, 1, "", "log1p"], [204, 1, 1, "", "log2"], [205, 1, 1, "", "logaddexp"], [206, 1, 1, "", "logaddexp2"], [207, 1, 1, "", "logical_and"], [208, 1, 1, "", "logical_not"], [209, 1, 1, "", "logical_or"], [210, 1, 1, "", "logical_xor"], [211, 1, 1, "", "logspace"], [212, 1, 1, "", "logsumexp"], [213, 1, 1, "", "mask_indices"], [214, 1, 1, "", "matmul"], [215, 1, 1, "", "max"], [216, 1, 1, "", "maximum"], [217, 1, 1, "", "mean"], [218, 1, 1, "", "median"], [219, 1, 1, "", "meshgrid"], [220, 5, 1, "", "mgrid"], [221, 1, 1, "", "min"], [222, 1, 1, "", "minimum"], [223, 1, 1, "", "mod"], [224, 1, 1, "", "modf"], [225, 1, 1, "", "moveaxis"], [226, 1, 1, "", "multiply"], [227, 1, 1, "", "nan_to_num"], [228, 1, 1, "", "nanargmax"], [229, 1, 1, "", "nanargmin"], [230, 1, 1, "", "nancumprod"], [231, 1, 1, "", "nancumsum"], [232, 1, 1, "", "nanmax"], [233, 1, 1, "", "nanmean"], [234, 1, 1, "", "nanmin"], [235, 1, 1, "", "nanprod"], [236, 1, 1, "", "nanstd"], [237, 1, 1, "", "nansum"], [238, 1, 1, "", "nanvar"], [239, 3, 1, "", "ndarray"], [336, 1, 1, "", "ndim"], [337, 1, 1, "", "negative"], [338, 1, 1, "", "nextafter"], [339, 1, 1, "", "nonzero"], [340, 1, 1, "", "not_equal"], [341, 5, 1, "", "ogrid"], [342, 1, 1, "", "ones"], [343, 1, 1, "", "ones_like"], [344, 1, 1, "", "outer"], [345, 1, 1, "", "partition"], [346, 1, 1, "", "place"], [347, 1, 1, "", "positive"], [348, 1, 1, "", "power"], [349, 1, 1, "", "prod"], [350, 1, 1, "", "proj"], [351, 1, 1, "", "ptp"], [352, 1, 1, "", "put"], [353, 1, 1, "", "put_along_axis"], [354, 1, 1, "", "putmask"], [355, 1, 1, "", "rad2deg"], [356, 1, 1, "", "radians"], [478, 0, 0, "-", "random"], [406, 1, 1, "", "ravel"], [407, 1, 1, "", "real"], [408, 1, 1, "", "real_if_close"], [409, 1, 1, "", "reciprocal"], [410, 1, 1, "", "reduce_hypot"], [411, 1, 1, "", "remainder"], [412, 1, 1, "", "repeat"], [413, 1, 1, "", "reshape"], [414, 1, 1, "", "result_type"], [415, 1, 1, "", "right_shift"], [416, 1, 1, "", "rint"], [417, 1, 1, "", "roll"], [418, 1, 1, "", "rollaxis"], [419, 1, 1, "", "round"], [420, 1, 1, "", "row_stack"], [421, 1, 1, "", "rsqrt"], [422, 1, 1, "", "searchsorted"], [423, 1, 1, "", "select"], [424, 1, 1, "", "shape"], [425, 1, 1, "", "sign"], [426, 1, 1, "", "signbit"], [427, 1, 1, "", "sin"], [428, 1, 1, "", "sinh"], [429, 1, 1, "", "size"], [430, 1, 1, "", "sort"], [431, 1, 1, "", "sort_complex"], [432, 1, 1, "", "sqrt"], [433, 1, 1, "", "square"], [434, 1, 1, "", "squeeze"], [435, 1, 1, "", "stack"], [436, 1, 1, "", "std"], [437, 1, 1, "", "subtract"], [438, 1, 1, "", "sum"], [439, 1, 1, "", "swapaxes"], [440, 1, 1, "", "take"], [441, 1, 1, "", "take_along_axis"], [442, 1, 1, "", "tan"], [443, 1, 1, "", "tanh"], [444, 1, 1, "", "tensordot"], [445, 1, 1, "", "tile"], [446, 1, 1, "", "trace"], [447, 1, 1, "", "transpose"], [448, 1, 1, "", "trapezoid"], [449, 1, 1, "", "tri"], [450, 1, 1, "", "tril"], [451, 1, 1, "", "tril_indices"], [452, 1, 1, "", "tril_indices_from"], [453, 1, 1, "", "trim_zeros"], [454, 1, 1, "", "triu"], [455, 1, 1, "", "triu_indices"], [456, 1, 1, "", "triu_indices_from"], [457, 1, 1, "", "true_divide"], [458, 1, 1, "", "trunc"], [459, 1, 1, "", "unique"], [460, 1, 1, "", "unwrap"], [461, 1, 1, "", "vander"], [462, 1, 1, "", "var"], [463, 1, 1, "", "vdot"], [464, 1, 1, "", "vstack"], [465, 1, 1, "", "where"], [466, 1, 1, "", "zeros"], [467, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[89, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[89, 3, 1, "", "T"], [89, 4, 1, "", "__eq__"], [89, 4, 1, "", "__ge__"], [89, 4, 1, "", "__getitem__"], [89, 4, 1, "", "__gt__"], [89, 4, 1, "", "__le__"], [89, 4, 1, "", "__len__"], [89, 4, 1, "", "__lt__"], [89, 4, 1, "", "__ne__"], [89, 4, 1, "", "__setitem__"], [89, 4, 1, "", "all"], [89, 4, 1, "", "any"], [89, 4, 1, "", "argmax"], [89, 4, 1, "", "argmin"], [89, 4, 1, "", "argsort"], [89, 4, 1, "", "asnumpy"], [89, 4, 1, "", "astype"], [89, 4, 1, "", "choose"], [89, 4, 1, "", "clip"], [89, 4, 1, "", "conj"], [89, 4, 1, "", "conjugate"], [89, 4, 1, "", "copy"], [89, 4, 1, "", "cumprod"], [89, 4, 1, "", "cumsum"], [89, 3, 1, "", "device"], [89, 4, 1, "", "diagonal"], [89, 4, 1, "", "dot"], [89, 3, 1, "", "dtype"], [89, 4, 1, "", "fill"], [89, 3, 1, "", "flags"], [89, 3, 1, "", "flat"], [89, 4, 1, "", "flatten"], [89, 4, 1, "", "get_array"], [89, 3, 1, "", "imag"], [89, 4, 1, "", "item"], [89, 3, 1, "", "itemsize"], [89, 4, 1, "", "max"], [89, 4, 1, "", "mean"], [89, 4, 1, "", "min"], [89, 3, 1, "", "nbytes"], [89, 3, 1, "", "ndim"], [89, 4, 1, "", "nonzero"], [89, 4, 1, "", "partition"], [89, 4, 1, "", "prod"], [89, 4, 1, "", "put"], [89, 4, 1, "", "ravel"], [89, 3, 1, "", "real"], [89, 4, 1, "", "repeat"], [89, 4, 1, "", "reshape"], [89, 4, 1, "", "round"], [89, 4, 1, "", "searchsorted"], [89, 3, 1, "", "shape"], [89, 3, 1, "", "size"], [89, 4, 1, "", "sort"], [89, 4, 1, "", "squeeze"], [89, 4, 1, "", "std"], [89, 3, 1, "", "strides"], [89, 4, 1, "", "sum"], [89, 4, 1, "", "swapaxes"], [89, 3, 1, "", "sycl_context"], [89, 3, 1, "", "sycl_device"], [89, 3, 1, "", "sycl_queue"], [89, 4, 1, "", "take"], [89, 4, 1, "", "to_device"], [89, 4, 1, "", "trace"], [89, 4, 1, "", "transpose"], [89, 3, 1, "", "usm_type"], [89, 4, 1, "", "var"]], "dpnp.dtype": [[91, 4, 1, "", "__eq__"], [91, 4, 1, "", "__ge__"], [91, 4, 1, "", "__getitem__"], [91, 4, 1, "", "__gt__"], [91, 4, 1, "", "__le__"], [91, 4, 1, "", "__len__"], [91, 4, 1, "", "__lt__"], [91, 4, 1, "", "__ne__"], [91, 3, 1, "", "alignment"], [91, 3, 1, "", "base"], [91, 3, 1, "", "byteorder"], [91, 3, 1, "", "char"], [91, 3, 1, "", "descr"], [91, 3, 1, "", "fields"], [91, 3, 1, "", "flags"], [91, 3, 1, "", "hasobject"], [91, 3, 1, "", "isalignedstruct"], [91, 3, 1, "", "isbuiltin"], [91, 3, 1, "", "isnative"], [91, 3, 1, "", "itemsize"], [91, 3, 1, "", "kind"], [91, 3, 1, "", "metadata"], [91, 3, 1, "", "name"], [91, 3, 1, "", "names"], [91, 3, 1, "", "ndim"], [91, 4, 1, "", "newbyteorder"], [91, 3, 1, "", "num"], [91, 3, 1, "", "shape"], [91, 3, 1, "", "str"], [91, 3, 1, "", "subdtype"], [91, 3, 1, "", "type"]], "dpnp.fft": [[106, 1, 1, "", "fft"], [107, 1, 1, "", "fft2"], [108, 1, 1, "", "fftfreq"], [109, 1, 1, "", "fftn"], [110, 1, 1, "", "fftshift"], [111, 1, 1, "", "hfft"], [112, 1, 1, "", "ifft"], [113, 1, 1, "", "ifft2"], [114, 1, 1, "", "ifftn"], [115, 1, 1, "", "ifftshift"], [116, 1, 1, "", "ihfft"], [117, 1, 1, "", "irfft"], [118, 1, 1, "", "irfft2"], [119, 1, 1, "", "irfftn"], [120, 1, 1, "", "rfft"], [121, 1, 1, "", "rfft2"], [122, 1, 1, "", "rfftfreq"], [123, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[127, 4, 1, "", "__eq__"], [127, 4, 1, "", "__ge__"], [127, 4, 1, "", "__getitem__"], [127, 4, 1, "", "__gt__"], [127, 4, 1, "", "__iter__"], [127, 4, 1, "", "__le__"], [127, 4, 1, "", "__lt__"], [127, 4, 1, "", "__ne__"], [127, 4, 1, "", "__next__"], [127, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[179, 1, 1, "", "cholesky"], [180, 1, 1, "", "cond"], [181, 1, 1, "", "det"], [182, 1, 1, "", "eig"], [183, 1, 1, "", "eigh"], [184, 1, 1, "", "eigvals"], [185, 1, 1, "", "eigvalsh"], [186, 1, 1, "", "inv"], [187, 1, 1, "", "lstsq"], [188, 1, 1, "", "matrix_power"], [189, 1, 1, "", "matrix_rank"], [190, 1, 1, "", "multi_dot"], [191, 1, 1, "", "norm"], [192, 1, 1, "", "pinv"], [193, 1, 1, "", "qr"], [194, 1, 1, "", "slogdet"], [195, 1, 1, "", "solve"], [196, 1, 1, "", "svd"], [197, 1, 1, "", "tensorinv"], [198, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[240, 6, 1, "", "T"], [241, 4, 1, "", "__abs__"], [242, 4, 1, "", "__add__"], [243, 4, 1, "", "__and__"], [244, 4, 1, "", "__bool__"], [245, 4, 1, "", "__complex__"], [246, 4, 1, "", "__copy__"], [247, 4, 1, "", "__eq__"], [248, 4, 1, "", "__float__"], [249, 4, 1, "", "__floordiv__"], [250, 4, 1, "", "__ge__"], [251, 4, 1, "", "__getitem__"], [252, 4, 1, "", "__gt__"], [253, 4, 1, "", "__iadd__"], [254, 4, 1, "", "__iand__"], [255, 4, 1, "", "__ifloordiv__"], [256, 4, 1, "", "__ilshift__"], [257, 4, 1, "", "__imod__"], [258, 4, 1, "", "__imul__"], [259, 4, 1, "", "__int__"], [260, 4, 1, "", "__invert__"], [261, 4, 1, "", "__ior__"], [262, 4, 1, "", "__ipow__"], [263, 4, 1, "", "__irshift__"], [264, 4, 1, "", "__isub__"], [265, 4, 1, "", "__itruediv__"], [266, 4, 1, "", "__ixor__"], [267, 4, 1, "", "__le__"], [268, 4, 1, "", "__len__"], [269, 4, 1, "", "__lshift__"], [270, 4, 1, "", "__lt__"], [271, 4, 1, "", "__matmul__"], [272, 4, 1, "", "__mod__"], [273, 4, 1, "", "__mul__"], [274, 4, 1, "", "__ne__"], [275, 4, 1, "", "__neg__"], [276, 4, 1, "", "__new__"], [277, 4, 1, "", "__or__"], [278, 4, 1, "", "__pos__"], [279, 4, 1, "", "__pow__"], [280, 4, 1, "", "__repr__"], [281, 4, 1, "", "__rshift__"], [282, 4, 1, "", "__setitem__"], [283, 4, 1, "", "__str__"], [284, 4, 1, "", "__sub__"], [285, 4, 1, "", "__truediv__"], [286, 4, 1, "", "__xor__"], [287, 4, 1, "", "all"], [288, 4, 1, "", "any"], [289, 4, 1, "", "argmax"], [290, 4, 1, "", "argmin"], [291, 4, 1, "", "argsort"], [292, 4, 1, "", "astype"], [293, 4, 1, "", "choose"], [294, 4, 1, "", "clip"], [295, 4, 1, "", "conj"], [296, 4, 1, "", "conjugate"], [297, 4, 1, "", "copy"], [298, 4, 1, "", "cumprod"], [299, 4, 1, "", "cumsum"], [300, 4, 1, "", "diagonal"], [301, 6, 1, "", "dtype"], [302, 4, 1, "", "fill"], [303, 6, 1, "", "flags"], [304, 6, 1, "", "flat"], [305, 4, 1, "", "flatten"], [306, 6, 1, "", "imag"], [307, 4, 1, "", "item"], [308, 6, 1, "", "itemsize"], [309, 4, 1, "", "max"], [310, 4, 1, "", "mean"], [311, 4, 1, "", "min"], [312, 6, 1, "", "nbytes"], [313, 6, 1, "", "ndim"], [314, 4, 1, "", "nonzero"], [315, 4, 1, "", "partition"], [316, 4, 1, "", "prod"], [317, 4, 1, "", "put"], [318, 4, 1, "", "ravel"], [319, 6, 1, "", "real"], [320, 4, 1, "", "repeat"], [321, 4, 1, "", "reshape"], [322, 4, 1, "", "round"], [323, 4, 1, "", "searchsorted"], [324, 6, 1, "", "shape"], [325, 6, 1, "", "size"], [326, 4, 1, "", "sort"], [327, 4, 1, "", "squeeze"], [328, 4, 1, "", "std"], [329, 6, 1, "", "strides"], [330, 4, 1, "", "sum"], [331, 4, 1, "", "swapaxes"], [332, 4, 1, "", "take"], [333, 4, 1, "", "trace"], [334, 4, 1, "", "transpose"], [335, 4, 1, "", "var"]], "dpnp.random": [[357, 2, 1, "", "RandomState"], [358, 1, 1, "", "beta"], [359, 1, 1, "", "binomial"], [360, 1, 1, "", "bytes"], [361, 1, 1, "", "chisquare"], [362, 1, 1, "", "choice"], [363, 1, 1, "", "dirichlet"], [364, 1, 1, "", "exponential"], [365, 1, 1, "", "f"], [366, 1, 1, "", "gamma"], [367, 1, 1, "", "geometric"], [368, 1, 1, "", "gumbel"], [369, 1, 1, "", "hypergeometric"], [370, 1, 1, "", "laplace"], [371, 1, 1, "", "logistic"], [372, 1, 1, "", "lognormal"], [373, 1, 1, "", "logseries"], [374, 1, 1, "", "multinomial"], [375, 1, 1, "", "multivariate_normal"], [376, 1, 1, "", "negative_binomial"], [377, 1, 1, "", "noncentral_chisquare"], [378, 1, 1, "", "noncentral_f"], [379, 1, 1, "", "normal"], [380, 1, 1, "", "pareto"], [381, 1, 1, "", "permutation"], [382, 1, 1, "", "poisson"], [383, 1, 1, "", "power"], [384, 1, 1, "", "rand"], [385, 1, 1, "", "randint"], [386, 1, 1, "", "randn"], [387, 1, 1, "", "random"], [388, 1, 1, "", "random_integers"], [389, 1, 1, "", "random_sample"], [390, 1, 1, "", "ranf"], [391, 1, 1, "", "rayleigh"], [392, 1, 1, "", "sample"], [393, 1, 1, "", "seed"], [394, 1, 1, "", "shuffle"], [395, 1, 1, "", "standard_cauchy"], [396, 1, 1, "", "standard_exponential"], [397, 1, 1, "", "standard_gamma"], [398, 1, 1, "", "standard_normal"], [399, 1, 1, "", "standard_t"], [400, 1, 1, "", "triangular"], [401, 1, 1, "", "uniform"], [402, 1, 1, "", "vonmises"], [403, 1, 1, "", "wald"], [404, 1, 1, "", "weibull"], [405, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[357, 4, 1, "", "__eq__"], [357, 4, 1, "", "__ge__"], [357, 4, 1, "", "__gt__"], [357, 4, 1, "", "__le__"], [357, 4, 1, "", "__lt__"], [357, 4, 1, "", "__ne__"], [357, 4, 1, "", "get_state"], [357, 4, 1, "", "get_sycl_device"], [357, 4, 1, "", "get_sycl_queue"], [357, 4, 1, "", "normal"], [357, 4, 1, "", "rand"], [357, 4, 1, "", "randint"], [357, 4, 1, "", "randn"], [357, 4, 1, "", "random_sample"], [357, 4, 1, "", "standard_normal"], [357, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 20, 74, 77, 89, 91, 92, 107, 109, 111, 113, 114, 116, 118, 119, 121, 123, 124, 139, 140, 187, 189, 191, 196, 301, 334, 357, 358, 359, 364, 365, 366, 368, 369, 370, 371, 372, 374, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 445, 475], "0": [0, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 148, 151, 152, 153, 156, 159, 160, 162, 165, 166, 167, 168, 169, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 199, 200, 201, 202, 203, 204, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 297, 300, 302, 306, 307, 319, 322, 324, 326, 328, 333, 334, 335, 336, 339, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 356, 357, 359, 364, 366, 367, 368, 370, 371, 372, 374, 375, 376, 379, 381, 382, 383, 384, 387, 389, 390, 391, 392, 395, 398, 400, 401, 402, 409, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 475], "00": [70, 94, 106, 427], "000": [227, 359], "00000000005e": 102, "00000000e": [106, 227], "000000082740371e": 102, "000000e": [70, 427], "00001e10": [15, 162], "0001e10": 162, "000e": 94, "000j": 227, "002": 227, "00867716": 361, "01": 94, "02": [94, 227], "03": 227, "03088525e": 95, "0396842": 211, "04": 94, "04719755": 356, "04921661": 357, "05": [15, 94, 162], "0614962j": [107, 121], "06310682": 357, "07": 227, "07944154": [75, 194], "08": [15, 70, 94, 132, 162, 375, 427], "08156915": 357, "0943951": 356, "09640474": 206, "09861229": [75, 194, 203], "0d": 32, "0dev0": 6, "0j": [18, 88, 89, 163, 164, 170, 171, 214, 306, 319, 425], "0th": 444, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 164, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 291, 292, 297, 300, 302, 305, 306, 307, 313, 315, 319, 324, 326, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 359, 361, 362, 364, 366, 368, 370, 371, 372, 374, 375, 376, 379, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 396, 398, 401, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475], "10": [0, 4, 13, 23, 25, 29, 30, 48, 60, 66, 75, 76, 77, 81, 82, 85, 86, 89, 91, 93, 94, 102, 103, 110, 122, 144, 146, 152, 153, 158, 162, 174, 175, 176, 201, 202, 203, 204, 211, 212, 218, 226, 321, 351, 353, 357, 359, 369, 381, 410, 414, 415, 417, 419, 422, 435, 441, 450, 451, 452, 454, 455, 456, 465], "100": [81, 122, 146, 162, 175, 190, 211, 369, 395, 408, 460], "1000": [56, 146, 190, 211, 358, 359, 364, 366, 368, 369, 370, 371, 372, 379, 380, 383, 385, 387, 390, 392, 398, 402, 403, 404, 405, 408, 448], "10000": [77, 190, 367, 382, 391, 401], "100000": 376, "1000000": [395, 397, 399, 400], "1024": 0, "105": 94, "11": [29, 30, 48, 71, 81, 82, 89, 103, 148, 191, 321, 376, 385, 419, 422, 428, 450, 451, 452, 454, 455, 456, 465], "110": [93, 160], "111111": 227, "113": 205, "11570901": 357, "1179187": 357, "118033988749895": 436, "119": 93, "1196081": 357, "12": [10, 29, 30, 47, 74, 79, 81, 82, 86, 91, 93, 103, 107, 121, 158, 211, 349, 351, 356, 381, 422, 450, 451, 452, 454, 455, 456, 465], "120": [76, 79], "123": [89, 94, 307], "125": [132, 348, 461], "127": 146, "128": [0, 146, 227], "12th": 93, "13": [10, 29, 30, 51, 81, 82, 88, 91, 93, 161, 214, 422, 451, 452, 455, 456], "130": 93, "134": 160, "13436424": 357, "135": 27, "13710533": 361, "139884456208480": 14, "13j": 408, "14": [29, 30, 50, 51, 81, 82, 88, 126, 160, 161, 422, 444, 451, 452, 455, 456], "140": 460, "140053638309840": 19, "14157194": 448, "14159265": [22, 27, 78, 356], "14423775e": 106, "14j": 408, "15": [29, 30, 77, 81, 82, 86, 93, 111, 116, 192, 202, 381, 422, 451, 452, 455, 456], "150": 79, "15888336": 211, "15j": 408, "16": [6, 50, 81, 82, 91, 106, 132, 142, 146, 148, 226, 348, 408, 423, 442, 451, 452, 455, 456], "16227766": [180, 410], "16394577": 357, "164": 206, "166": 206, "167": 6, "16j": 106, "17": [106, 107, 121], "17157288": [183, 185], "17281316e": 106, "177": [146, 211], "17j": 106, "18": [6, 76, 91, 92, 93, 109, 191, 211], "180": [27, 78, 79, 93, 355, 460, 483], "1805": 10, "18236388": 357, "18557831": 357, "1887902": 356, "19": [10, 72, 91, 460], "1923875335537315": 386, "19245009": 421, "1924881e": 132, "1965": 10, "19722458": 75, "1d": [92, 352, 353, 441, 448], "1e": [15, 102, 162, 182, 192, 202, 203, 205, 206, 375], "1e10": [15, 162], "1j": [11, 12, 18, 35, 63, 64, 89, 117, 158, 163, 170, 182, 196, 306, 319, 407, 431, 433], "1th": 444, "2": [0, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 163, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 292, 297, 300, 302, 305, 307, 313, 315, 324, 325, 334, 336, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 361, 365, 369, 375, 381, 384, 386, 397, 399, 400, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "20": [6, 76, 86, 93, 122, 159, 162, 175, 176, 191, 353, 359, 374, 422, 441, 460], "20000": 359, "2007": 10, "200e": 94, "20477401j": [107, 121], "2048": 0, "21": [77, 91], "210": 79, "215": 211, "21941987": 357, "21968665": 357, "22": 352, "220": 460, "220446049250313e": 408, "222222": 227, "22460635e": 442, "22464680e": 106, "22497216": 191, "22776602": 211, "23": [6, 357], "230": 93, "23598776": 356, "23606798": 191, "24": [29, 30, 74, 76, 89, 92, 93, 160, 175, 197, 324, 349, 444, 446], "240": 79, "24264069": 191, "24544512": 357, "247219128924647": 236, "25": [91, 93, 98, 108, 148, 152, 153, 186, 199, 226, 238, 386, 395, 423, 461, 462], "255": [50, 52], "25506903": 357, "256": [0, 146], "257": 6, "26": [53, 93], "260": 460, "26618007j": 204, "27": [57, 132, 211, 348, 421, 461], "270": 79, "28": 93, "28000000e": 227, "2800000e": 227, "283185307179586": 460, "28318531": 460, "28352814": 357, "28904982": 206, "297": 10, "299": 6, "2d": [196, 214, 459], "2e": 77, "2f": 0, "2j": [63, 64, 88, 106, 158, 163, 170, 183, 185, 214, 407, 425, 431, 463], "2k": 460, "3": [0, 3, 4, 13, 20, 21, 22, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 115, 116, 118, 119, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 146, 148, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 170, 171, 172, 174, 175, 176, 180, 181, 182, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 297, 300, 305, 307, 313, 315, 324, 325, 326, 334, 336, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 352, 356, 357, 361, 365, 372, 375, 381, 384, 385, 386, 396, 400, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 426, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467], "30": [74, 79, 89, 93, 122, 325, 353, 356, 441, 463], "300": [79, 460], "3003003": 409, "301": 10, "30102999566": 202, "3012989": 428, "30258509": [75, 212], "308": 227, "308j": 227, "31": [53, 146], "312": 95, "316": 211, "32": [91, 93, 146, 235, 237, 444], "33": 409, "330": 79, "333": 190, "33333333": 227, "3333333e": 227, "33340275": 448, "33486982e": 106, "33836967": 357, "340": 460, "34074171": 357, "34132519": 211, "34846923": 191, "34960421": 211, "35": [93, 367], "35106603e": 191, "35355338": 421, "36": 74, "360": 460, "37": 419, "371139e": 70, "38": [160, 359], "380": 460, "382": 6, "38268343": 183, "38268343j": 183, "38629436": 75, "38885": 359, "389056099": [99, 102], "39": 6, "39295758": 357, "397": 6, "3e": [0, 77, 408], "3j": [88, 214, 431], "3rd": 62, "3x3": 213, "3x8000": 396, "4": [0, 13, 14, 20, 21, 29, 30, 32, 34, 35, 45, 47, 48, 50, 52, 54, 60, 61, 62, 65, 68, 70, 72, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 103, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 128, 129, 132, 134, 135, 136, 140, 141, 142, 144, 146, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 163, 170, 174, 175, 178, 181, 186, 188, 189, 191, 194, 197, 198, 199, 204, 207, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 236, 238, 297, 300, 305, 313, 315, 324, 326, 334, 336, 339, 341, 343, 348, 349, 351, 352, 356, 357, 358, 361, 381, 386, 402, 406, 407, 408, 411, 412, 413, 417, 418, 419, 420, 423, 425, 429, 430, 432, 435, 436, 437, 439, 440, 444, 445, 447, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467], "40": [93, 122, 176, 353, 441], "40882036": 357, "4096": 0, "41421356": [180, 191], "42": 423, "420": 460, "429": 6, "44": [346, 352], "4400": [93, 444], "443469": 211, "44509285e": 106, "45": [18, 27], "4532": [93, 444], "46": 93, "460": 460, "46394577": 357, "464": 211, "4664": [93, 444], "47": 6, "4730": [93, 444], "4796": [93, 444], "48": [6, 74], "48093112": 357, "4874": [93, 444], "48927254": 357, "49": 6, "4928": [93, 444], "49543509": 357, "49778714": 460, "499128": 88, "4d": 196, "4e": 408, "4j": [158, 407, 463], "4x4": [451, 455], "5": [0, 6, 13, 14, 19, 20, 21, 28, 29, 32, 45, 48, 49, 50, 52, 53, 54, 58, 60, 62, 65, 68, 69, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 98, 103, 107, 108, 110, 118, 121, 122, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 146, 148, 151, 152, 153, 154, 155, 158, 159, 160, 163, 170, 174, 175, 176, 179, 183, 185, 186, 190, 191, 195, 199, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 233, 236, 292, 297, 325, 336, 339, 341, 342, 343, 348, 351, 352, 356, 357, 358, 359, 361, 364, 376, 380, 381, 382, 383, 386, 389, 404, 406, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423, 425, 429, 431, 435, 436, 438, 439, 440, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467], "50": [107, 121, 122, 146, 175, 205, 206, 211, 353, 441, 444, 448, 465], "500": [175, 460], "5018": [93, 444], "5091786": 71, "51": 6, "512": 0, "5162": [93, 444], "52069395e": 106, "52359878": 356, "52928804": 357, "5306": [93, 444], "5399045e": 132, "54": 357, "540": 460, "542": 6, "54288406": 357, "54465213": 357, "548739": 428, "54930614": 28, "55": [346, 352, 423], "5555555555555554": 238, "56": 6, "562": 211, "5620499351813308": [11, 12], "56920387": 357, "5707963267948966": 24, "57079633": [18, 27, 356, 460], "58997253": 357, "591953": 71, "5e": [205, 206], "5j": [220, 341, 431], "6": [0, 4, 6, 13, 20, 21, 29, 30, 32, 45, 48, 52, 53, 60, 62, 68, 74, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 97, 102, 103, 108, 111, 122, 129, 132, 145, 148, 154, 158, 159, 160, 174, 175, 191, 192, 193, 196, 197, 199, 211, 213, 230, 231, 235, 297, 307, 324, 336, 339, 343, 346, 348, 351, 357, 374, 376, 381, 386, 406, 407, 413, 417, 418, 419, 420, 423, 429, 431, 435, 437, 438, 439, 440, 444, 446, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 463, 464, 465, 467], "60": [74, 79, 93, 353, 441, 444, 460, 465], "600": 175, "60943791": 75, "61799388": 356, "62": 160, "6227766": 146, "62318272": 361, "62341325": 146, "624": 94, "63": 146, "63317787e": 442, "63522211": 357, "63836967": 357, "64": [0, 4, 93, 132, 146, 235, 237, 348, 419], "64000": 93, "65745445": 23, "66519143": 356, "6666666666666665": 233, "67": 93, "67305985": 139, "673174": 357, "67718303": 357, "69295758": 357, "69314718": [75, 194, 203], "6990877": 357, "6j": [158, 407, 463], "7": [13, 15, 20, 21, 45, 58, 60, 68, 72, 74, 77, 80, 81, 82, 84, 85, 87, 89, 92, 99, 103, 129, 133, 146, 148, 160, 162, 174, 175, 191, 196, 213, 218, 223, 226, 307, 339, 350, 351, 357, 381, 407, 411, 414, 416, 417, 437, 438, 439, 440, 444, 450, 451, 452, 454, 455, 456, 457, 458, 460, 463, 465], "70": [175, 463, 465], "700": 175, "700e": 94, "70710677": [89, 306, 319], "70710678": [180, 182], "70710678j": 182, "70882036": 357, "71238898": 356, "718281828": [99, 102], "72": 74, "720": [76, 460], "72075441": 211, "72538256": 25, "74165739": 191, "742278e": 427, "74596669": 191, "74921661": 357, "75": [48, 98, 108, 148, 153, 186, 199], "754": 125, "75958653": 356, "76096244": 357, "76377462": 357, "77447665": 206, "78539816": [18, 26, 27, 460], "78927254": 357, "79175947": 75, "79769313e": 227, "7j": 350, "8": [4, 13, 15, 20, 45, 57, 60, 68, 74, 80, 81, 82, 84, 85, 89, 91, 93, 94, 103, 106, 108, 122, 123, 129, 132, 146, 148, 158, 162, 174, 181, 191, 194, 196, 197, 199, 211, 213, 324, 339, 348, 349, 351, 357, 381, 400, 407, 417, 421, 427, 440, 444, 446, 448, 450, 451, 452, 454, 455, 456, 460, 461, 465], "80": [91, 93, 465], "8000": 396, "80226506": 357, "81715362": 357, "827941": [146, 211], "82842712": [183, 185], "84288406": 357, "84401099": 357, "84743374": 357, "84803548": 191, "85": 93, "86": 160, "87649168": 205, "88": 92, "88178420e": 106, "88997253": 357, "89920014": 361, "8f": 91, "8j": 463, "9": [4, 13, 20, 45, 60, 68, 74, 77, 80, 81, 82, 84, 87, 89, 93, 95, 103, 106, 109, 110, 115, 126, 132, 134, 142, 146, 148, 162, 174, 182, 187, 191, 192, 193, 196, 211, 213, 226, 227, 307, 339, 351, 357, 359, 361, 381, 407, 417, 432, 437, 444, 450, 451, 452, 454, 455, 456, 457, 460, 461, 465], "90": [18, 79, 355, 465], "917152": 443, "92387953": 183, "92387953j": 183, "94": 93, "94591015": 75, "95": 187, "95799250e": 106, "98": 214, "98024613": 211, "99": [92, 203, 353], "99322285": 23, "99532227": 98, "996272": 443, "99822295": 25, "99853728": 98, "999": 94, "9990000e": 227, "99959305": 98, "99989938": 98, "9999": 227, "99997791": 98, "999999e": 162, "A": [10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 109, 112, 113, 114, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 156, 158, 159, 161, 165, 166, 167, 168, 169, 176, 177, 178, 179, 183, 184, 185, 187, 189, 190, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 220, 222, 223, 226, 230, 231, 235, 237, 292, 297, 305, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 350, 355, 356, 357, 359, 376, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 406, 409, 411, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 439, 440, 442, 443, 444, 445, 447, 449, 451, 453, 455, 457, 458, 461, 465, 466, 467, 483], "AND": [14, 50, 51, 52, 53, 161, 207, 208, 209, 210], "And": [4, 43, 44, 81, 89, 292, 451, 455], "As": 459, "Be": 182, "Being": 3, "But": [4, 91], "By": [29, 30, 39, 44, 74, 89, 107, 111, 113, 117, 119, 123, 146, 187, 199, 211, 214, 215, 217, 221, 228, 229, 232, 233, 234, 235, 236, 237, 238, 292, 406, 412, 417, 429, 436, 440, 449, 451, 453, 455, 462], "For": [0, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 305, 306, 307, 313, 319, 321, 324, 329, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475, 483], "If": [4, 10, 11, 12, 14, 15, 19, 20, 21, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 60, 62, 72, 74, 75, 76, 77, 80, 84, 85, 88, 89, 91, 92, 93, 94, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 135, 136, 138, 143, 146, 148, 152, 153, 154, 158, 159, 160, 162, 168, 169, 170, 179, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 211, 212, 215, 216, 217, 219, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 326, 346, 349, 352, 353, 357, 379, 401, 407, 408, 410, 412, 413, 417, 419, 420, 422, 430, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 459, 460, 461, 462, 463, 464, 465, 475, 483], "In": [4, 10, 29, 30, 76, 77, 93, 94, 112, 113, 114, 117, 119, 148, 179, 184, 190, 193, 206, 211, 230, 231, 233, 235, 237, 349, 352, 357, 401, 413, 438, 440, 458], "It": [4, 10, 14, 19, 20, 29, 30, 60, 76, 77, 86, 88, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 148, 183, 185, 206, 214, 217, 228, 229, 230, 231, 232, 233, 234, 236, 238, 349, 423, 436, 438, 440, 462, 483], "Its": [60, 197, 353, 446], "NOT": [51, 161, 207, 208, 209, 210], "No": [38, 39, 93, 179], "Not": [14, 19, 39, 165, 227, 230, 231, 232, 234, 235, 237, 349], "OR": [19, 50, 51, 52, 53, 161, 207, 208, 209, 210], "On": 4, "One": [45, 46, 47, 74, 90, 91, 117, 413], "Or": [148, 448], "That": 213, "The": [3, 4, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 55, 57, 60, 61, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 164, 165, 166, 167, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 292, 297, 306, 313, 315, 319, 324, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 351, 352, 353, 355, 356, 357, 360, 362, 363, 373, 378, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 430, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 475, 479, 483], "Then": [10, 40, 42, 213], "There": [10, 199, 459], "These": [4, 20, 91, 93, 94, 101, 213, 225, 353, 441, 451, 455, 475, 479], "To": [4, 111, 117, 119, 132, 339, 460], "With": [29, 30, 48, 72, 191, 215, 221, 228, 229, 235, 237, 349, 438], "_": [0, 153, 435, 448], "__array_interface__": 91, "__bool__": 475, "__dlpack__": 138, "__dlpack_device__": 138, "__eq__": [89, 91, 127, 357], "__ge__": [89, 91, 127, 357], "__getitem__": [89, 91, 127], "__gt__": [89, 91, 127, 357], "__iter__": 127, "__le__": [89, 91, 127, 357], "__len__": [89, 91], "__lt__": [89, 91, 127, 357], "__main__": 0, "__name__": 0, "__ne__": [89, 91, 127, 357], "__next__": 127, "__setitem__": [89, 127], "__sycl_usm_array_interface__": 41, "_dtypes_list": 0, "a1": [35, 36], "a2": [35, 36], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 60, "a_min": 60, "a_resamp": 117, "ab": [6, 10, 12, 15, 162], "abc": 93, "abcd": 94, "about": [40, 42, 89, 125, 182, 303, 475], "abov": [3, 75, 80, 83, 109, 114, 119, 123, 159, 193, 212, 227, 410, 449, 450, 454], "absolut": [6, 11, 15, 18, 105, 162, 194, 236, 238, 350, 408, 436, 460, 462, 483], "accept": [31, 93, 357, 430, 451, 455], "access": [10, 81, 82, 124, 213, 451, 455, 475], "accord": [14, 19, 48, 56, 91, 123, 125, 182, 183, 184, 185, 212, 217, 233, 236, 238, 410, 415, 436, 462], "accordingli": [232, 234], "account": 413, "accumul": [75, 76, 77, 93, 152, 230, 231, 235, 237, 349, 438, 446], "accur": [91, 102, 148, 203, 205], "accuraci": [112, 113, 114, 117, 119], "achiev": 93, "across": [84, 153, 230, 231, 235, 237], "activ": 4, "actual": [91, 152, 153, 179, 190], "ad": [15, 91, 94, 101, 117, 162, 181, 194, 206, 460, 479], "add": [6, 91, 483], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [75, 179, 233, 459], "address": 91, "adjac": 460, "advanc": 93, "advers": 93, "advis": 4, "affect": [21, 84, 93, 124, 152, 153], "after": [90, 124, 338, 376, 417], "ag": 91, "against": [15, 29, 30, 54, 55, 60, 72, 147, 162, 191, 192, 215, 221, 228, 229, 235, 237, 349, 353, 438, 441], "ai": [3, 353, 441], "ai_max": 441, "ai_min": 441, "ainv": [186, 197], "al": 10, "algebra": [468, 479], "algorithm": [10, 93, 94, 106, 112, 120], "alia": [10, 16, 17, 87, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 223, 239, 357, 387, 390, 392, 411, 420, 457, 460, 464], "alias": [9, 111, 112, 117, 119], "align": 91, "all": [4, 6, 9, 15, 18, 19, 20, 35, 36, 39, 44, 48, 61, 72, 79, 85, 89, 90, 91, 93, 94, 99, 100, 102, 104, 109, 110, 114, 115, 118, 119, 123, 124, 129, 130, 131, 139, 140, 142, 146, 148, 154, 156, 158, 174, 179, 189, 192, 199, 211, 215, 221, 228, 229, 232, 234, 292, 295, 302, 315, 349, 359, 407, 408, 417, 420, 423, 434, 438, 459, 464, 475, 483], "allclos": [6, 35, 162, 186, 192, 193, 195, 196, 198], "alloc": [3, 4, 20, 21, 34, 37, 38, 39, 40, 41, 42, 44, 48, 66, 75, 80, 81, 83, 89, 95, 96, 104, 108, 122, 126, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 168, 169, 199, 200, 211, 212, 213, 217, 220, 233, 236, 238, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 410, 434, 436, 449, 451, 455, 461, 462, 466, 467], "allow": [44, 89, 93, 152, 153, 206, 213, 292, 321, 440, 475], "alltru": 6, "almost": [32, 182, 451], "along": [3, 4, 14, 16, 17, 19, 20, 29, 30, 31, 48, 61, 62, 72, 75, 76, 77, 80, 81, 83, 84, 85, 89, 90, 92, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 129, 130, 131, 135, 136, 141, 146, 148, 154, 159, 191, 193, 197, 198, 199, 211, 212, 215, 216, 217, 218, 219, 221, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 289, 290, 291, 298, 299, 309, 311, 316, 317, 325, 328, 330, 332, 333, 335, 346, 349, 351, 352, 353, 410, 412, 417, 418, 420, 423, 429, 430, 435, 436, 438, 440, 441, 444, 445, 446, 448, 451, 452, 455, 456, 459, 460, 462, 464, 475], "alpha": [358, 363, 364, 380, 383], "alreadi": [4, 10, 38, 39, 45, 46, 47, 344, 459], "also": [3, 10, 13, 15, 18, 21, 27, 50, 52, 53, 67, 87, 89, 91, 93, 97, 101, 109, 114, 118, 119, 120, 123, 132, 134, 135, 136, 137, 141, 143, 148, 149, 150, 151, 152, 155, 162, 176, 177, 178, 179, 205, 206, 213, 216, 222, 223, 225, 226, 324, 339, 340, 348, 395, 411, 415, 437, 440, 457, 459, 475], "alter": 84, "altern": [3, 4, 14, 19, 76, 77, 88, 89, 214, 215, 217, 221, 230, 231, 233, 235, 236, 237, 238, 334, 349, 436, 438, 462], "although": [18, 91, 113, 114, 115, 445], "alwai": [4, 10, 31, 37, 44, 84, 89, 92, 105, 132, 138, 183, 185, 236, 238, 292, 339, 413, 431, 436, 462], "amax": [6, 215], "ambigu": 475, "amin": [6, 221], "among": 92, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 171, 174, 176, 177, 178, 181, 184, 187, 189, 190, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 246, 291, 292, 293, 294, 297, 307, 309, 313, 315, 317, 320, 321, 324, 325, 326, 327, 331, 332, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 359, 364, 365, 367, 376, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 475, 483], "anaconda": [3, 4], "analog": [107, 109, 111, 113, 114, 116], "analysi": 10, "analyt": 3, "angl": [6, 10, 26, 27, 78, 79, 158, 355, 356, 407, 408, 460, 483], "ani": [3, 6, 14, 15, 20, 34, 37, 38, 39, 40, 41, 42, 44, 54, 55, 66, 80, 83, 85, 89, 91, 93, 94, 107, 109, 113, 114, 119, 123, 124, 144, 145, 146, 148, 153, 154, 164, 171, 172, 188, 198, 199, 211, 213, 232, 234, 292, 313, 357, 401, 430, 461, 475], "anoth": [4, 68, 89, 103, 113, 114, 138, 297, 317, 346, 352, 418], "answer": 359, "anti": [84, 124], "anyth": 91, "ap": 187, "apart": 448, "api": [0, 2, 3, 6, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "appear": [101, 130, 131, 459], "append": [0, 6, 85, 92, 94, 101, 112, 113, 114, 176], "appli": [29, 30, 31, 48, 56, 93, 227, 414, 444, 448], "applic": [10, 91], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [89, 91, 112, 113, 114, 324], "appropri": [4, 29, 30, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 147, 198, 228, 229, 232, 234, 357, 385, 388, 440, 475], "approxim": [125, 448], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 104, 105, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 146, 148, 149, 150, 151, 152, 153, 155, 160, 161, 162, 165, 166, 167, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 314, 315, 324, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 382, 383, 385, 388, 389, 391, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 448, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 475, 483], "arang": [0, 6, 13, 29, 30, 32, 45, 46, 47, 48, 49, 60, 67, 79, 80, 81, 82, 84, 87, 88, 89, 93, 97, 99, 100, 102, 103, 106, 128, 129, 132, 137, 145, 146, 148, 152, 159, 160, 174, 175, 191, 199, 202, 203, 207, 208, 209, 210, 211, 213, 214, 215, 219, 221, 223, 226, 300, 340, 343, 346, 348, 352, 356, 381, 411, 414, 417, 423, 437, 444, 446, 448, 451, 452, 455, 456, 457, 465, 467], "arbitrari": [43, 88, 91, 93, 160, 214, 414, 451, 455], "arbitrarili": 93, "arc": [18, 26], "arcco": [6, 23, 24, 26, 27, 70], "arccosh": [6, 22, 25, 28, 71], "arcsin": [6, 22, 25, 26, 27, 427], "arcsinh": [6, 23, 24, 28, 428], "arctan": [6, 18, 22, 24, 27, 28, 442], "arctan2": [6, 18, 26], "arctanh": [6, 23, 25, 26, 27, 443], "area": 448, "arg": [54, 174, 357], "arg1": 173, "arg2": 173, "argmax": [0, 6, 30, 89, 228, 353, 441, 475], "argmin": [6, 29, 89, 229, 441, 475], "argpartit": [6, 31, 353, 441, 475], "argsort": [6, 89, 353, 422, 430, 441, 447, 475], "argument": [0, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 56, 57, 58, 60, 62, 67, 70, 71, 78, 79, 87, 88, 89, 91, 94, 98, 99, 100, 102, 132, 133, 134, 135, 136, 137, 151, 155, 158, 161, 172, 173, 176, 190, 191, 202, 203, 204, 205, 206, 213, 214, 216, 222, 223, 224, 226, 321, 334, 337, 338, 347, 348, 350, 352, 355, 356, 407, 408, 409, 411, 414, 415, 416, 421, 425, 426, 427, 428, 435, 437, 442, 443, 444, 448, 457, 458, 475, 483], "argwher": [6, 339], "ari": [45, 46, 47, 92], "arithmet": [48, 146, 217, 218, 233, 236, 238, 347, 436, 438, 462, 468, 479], "around": [6, 89, 146, 352, 419], "arr": [20, 39, 82, 91, 153, 354, 381, 452, 456], "arr2": 91, "arr_t": [44, 89, 292], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 246, 289, 290, 291, 292, 293, 294, 297, 300, 301, 302, 303, 305, 306, 307, 308, 310, 312, 313, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 479, 483], "array2str": 6, "array_equ": 6, "array_equiv": [6, 35], "array_lik": [20, 34, 37, 38, 39, 40, 41, 42, 43, 48, 66, 68, 80, 83, 92, 103, 144, 145, 146, 164, 171, 199, 211, 336, 346, 352, 353, 357, 424, 429, 440, 444, 461], "array_of_diagon": 84, "array_repr": 6, "array_split": [6, 62], "array_str": 6, "arrays_and_dtyp": 414, "art": 10, "asanyarrai": [6, 38, 39, 42], "asarrai": [4, 6, 37, 39, 40, 42, 43, 336, 429], "asarray_chkfinit": [6, 37, 38], "ascend": [183, 185, 422], "ascii": 91, "ascontiguousarrai": [6, 37, 38, 39, 42], "asfarrai": [6, 37, 38], "asfortranarrai": [6, 37, 38, 39, 40], "asmatrix": 6, "asnumpi": 89, "aspect": 91, "assembl": [62, 90, 154, 420, 435, 464], "assign": [89, 302, 324, 451, 455], "associ": [48, 152, 153, 475], "assum": [10, 48, 94, 111, 117, 119, 189, 192, 196, 213, 448], "astyp": [6, 89, 146, 339], "atleast_1d": [6, 46, 47, 101], "atleast_2d": [6, 45, 47, 101], "atleast_3d": [6, 45, 46, 101], "atol": [15, 162], "attain": 0, "attempt": [88, 190], "attribut": [89, 91, 96, 125, 145, 157, 193, 343, 467, 468], "automat": [152, 153], "avail": [2, 3, 4, 10, 69, 73, 91, 98, 218, 224, 228, 229, 232, 234, 235, 468, 475], "averag": [6, 89, 217, 233, 310, 438, 479], "avg": 48, "avoid": [34, 38, 46, 47, 111, 117, 119], "aweight": 73, "ax": [14, 19, 29, 30, 48, 72, 75, 85, 88, 89, 93, 101, 107, 109, 110, 113, 114, 115, 118, 119, 121, 123, 129, 148, 160, 191, 195, 197, 198, 212, 214, 215, 217, 221, 225, 228, 229, 232, 233, 234, 235, 236, 237, 238, 331, 334, 344, 349, 410, 417, 418, 434, 436, 438, 439, 444, 445, 446, 447, 459, 462], "axi": [14, 16, 17, 19, 20, 29, 30, 31, 48, 61, 62, 72, 74, 75, 76, 77, 84, 85, 89, 90, 92, 93, 101, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 129, 130, 131, 135, 136, 141, 146, 148, 154, 159, 187, 191, 199, 211, 212, 214, 215, 216, 217, 218, 221, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 291, 298, 299, 305, 309, 310, 311, 315, 316, 317, 320, 325, 326, 327, 328, 330, 332, 334, 335, 345, 346, 349, 351, 352, 353, 406, 410, 412, 413, 417, 418, 420, 423, 429, 430, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 459, 460, 462, 464, 475], "axis1": [84, 89, 300, 331, 333, 439, 446], "axis2": [84, 89, 300, 331, 333, 439, 446], "axisa": 74, "axisb": 74, "axisc": 74, "axiserror": [31, 430], "b": [10, 13, 15, 20, 29, 30, 35, 36, 50, 53, 61, 62, 68, 74, 77, 88, 89, 90, 91, 93, 94, 97, 139, 140, 149, 150, 154, 160, 162, 175, 177, 178, 181, 187, 190, 191, 192, 194, 195, 196, 197, 198, 207, 209, 214, 215, 221, 338, 340, 344, 348, 358, 414, 420, 435, 444, 445, 453, 463, 464, 483], "back": [89, 141, 305, 406, 413, 418, 453], "backend": [2, 147, 360, 362, 363, 373, 378, 394], "backward": [10, 44, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 148, 292, 417, 418], "bad": 369, "bartlett": 6, "base": [0, 4, 91, 93, 100, 103, 132, 146, 152, 153, 196, 201, 202, 203, 204, 205, 206, 211, 212, 214, 346, 348, 352, 354], "base_repr": 6, "basic": [56, 93, 475, 479], "bc": [181, 194], "bcde": 94, "becaus": [10, 14, 19, 111, 117, 119, 460, 475], "becom": [10, 89, 152, 334], "been": [90, 353, 418, 441], "befor": [4, 20, 31, 62, 75, 89, 92, 112, 113, 114, 130, 131, 198, 212, 215, 221, 236, 238, 315, 326, 349, 410, 417, 418, 430, 436, 438, 445, 462, 463], "begin": [92, 94, 146, 199, 211, 423], "behav": [200, 352], "behavior": [89, 121, 297, 445], "behaviour": 227, "behind": [89, 315], "being": [3, 91, 135, 136, 216, 222], "belong": [86, 152], "below": [0, 4, 9, 80, 83, 91, 117, 189, 449, 450, 454, 460, 475], "best": 94, "beta": [6, 368], "between": [15, 21, 56, 85, 92, 125, 140, 143, 148, 160, 162, 199, 211, 374, 388, 437, 448, 460], "beyond": [4, 417], "bia": 73, "big": 91, "bin": [86, 106, 108, 122, 152, 153, 395], "bin_edg": [152, 153], "binari": [50, 52, 53, 139, 140, 142, 143, 468, 479], "binary_repr": 6, "bincount": [6, 86, 152], "binomi": [6, 376], "bins_0": 153, "bins_1": 153, "bit": [50, 51, 52, 53, 91, 125, 157, 161, 176, 207, 209, 210, 235, 237, 415, 426, 479], "bitwis": [50, 52, 53], "bitwise_and": [6, 51, 52, 53, 161, 207], "bitwise_not": 6, "bitwise_or": [6, 50, 51, 53, 161, 209], "bitwise_xor": [6, 50, 51, 52, 161, 210], "biufcmmosuv": 91, "blackman": 6, "block": [6, 62, 90, 124, 154, 175, 420, 435, 464], "bmat": 6, "bool": [9, 14, 15, 19, 29, 30, 34, 35, 36, 38, 41, 44, 48, 56, 68, 72, 75, 86, 89, 91, 94, 97, 124, 138, 146, 149, 150, 152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 189, 191, 192, 196, 199, 211, 212, 215, 217, 219, 221, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 292, 339, 340, 349, 410, 413, 423, 426, 436, 438, 440, 459, 461, 462, 475], "bool_": 9, "boolean": [50, 51, 52, 53, 68, 75, 91, 103, 132, 138, 159, 161, 162, 165, 166, 167, 168, 169, 170, 174, 207, 209, 212, 213, 217, 233, 235, 236, 238, 339, 346, 410, 413, 436, 440, 462], "boolean_sequ": 174, "both": [10, 13, 15, 20, 27, 35, 36, 48, 50, 52, 53, 60, 67, 74, 87, 88, 97, 113, 120, 132, 134, 135, 136, 137, 149, 150, 151, 155, 160, 162, 175, 176, 177, 178, 191, 205, 206, 207, 209, 210, 214, 216, 222, 223, 226, 237, 338, 340, 348, 411, 415, 437, 444, 446, 451, 453, 455, 457, 463, 465], "bound": [352, 422, 440, 441], "boundari": [148, 352], "briefli": 475, "broadcast": [13, 14, 19, 29, 30, 36, 48, 54, 55, 60, 68, 72, 87, 93, 103, 132, 135, 136, 155, 168, 169, 191, 192, 210, 212, 214, 215, 216, 217, 221, 222, 226, 228, 229, 233, 235, 236, 237, 238, 348, 349, 352, 353, 410, 412, 436, 437, 438, 441, 445, 457, 462, 465], "broadcast_arrai": [6, 55], "broadcast_shap": 6, "broadcast_to": [6, 54, 445], "brought": 10, "buffer": [41, 76, 77, 89, 138, 139, 140, 142, 143, 200, 215, 221, 230, 231, 413], "buffer_lik": 139, "buffererror": 138, "build": 479, "build_loc": 4, "built": 91, "busday_count": 6, "busday_offset": 6, "byte": [6, 44, 89, 91, 93, 139, 140, 200, 292, 308, 312], "byte_bound": 6, "byteord": 91, "byteswap": 6, "bz2": 200, "c": [2, 4, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 74, 78, 79, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 144, 145, 147, 149, 150, 151, 155, 158, 160, 161, 165, 166, 167, 175, 176, 177, 178, 181, 187, 190, 191, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 222, 223, 226, 292, 297, 305, 318, 337, 338, 339, 340, 342, 343, 347, 348, 350, 355, 356, 406, 409, 411, 413, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 444, 445, 457, 458, 459, 465, 466, 467, 483], "c_contigu": [40, 42, 89, 297], "ca": 65, "calcul": [10, 11, 12, 13, 18, 27, 48, 75, 77, 85, 87, 92, 93, 97, 99, 100, 102, 106, 115, 132, 133, 134, 137, 148, 153, 155, 182, 183, 184, 185, 187, 192, 203, 205, 206, 212, 214, 217, 223, 226, 233, 236, 238, 340, 348, 349, 410, 411, 436, 437, 457, 462, 463, 468, 483], "call": [10, 18, 20, 29, 30, 31, 40, 42, 91, 112, 113, 114, 117, 120, 141, 182, 184, 190, 213, 246, 339, 434, 440, 445, 448, 483], "callabl": [141, 213], "cambridg": 10, "can": [0, 3, 4, 10, 13, 15, 20, 21, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 56, 66, 67, 74, 80, 81, 83, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 104, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 122, 124, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 159, 160, 161, 162, 164, 171, 172, 174, 175, 176, 177, 178, 179, 186, 187, 188, 198, 199, 200, 205, 206, 207, 209, 210, 211, 213, 214, 216, 220, 222, 223, 226, 235, 237, 292, 297, 324, 326, 337, 338, 339, 340, 341, 342, 343, 347, 348, 353, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 411, 413, 415, 430, 437, 440, 441, 444, 446, 448, 449, 451, 455, 456, 457, 459, 461, 463, 465, 466, 467, 475, 483], "can_cast": [6, 479], "cannot": [62, 228, 229, 434, 435], "capabl": [21, 34, 37, 38, 40, 42, 48, 105, 146, 199, 211, 214], "care": [21, 182], "cartesian": 219, "case": [4, 14, 19, 21, 29, 30, 34, 37, 38, 39, 40, 42, 48, 66, 76, 77, 80, 83, 85, 93, 94, 95, 96, 104, 108, 111, 116, 120, 122, 139, 140, 141, 142, 144, 145, 146, 148, 156, 182, 193, 196, 199, 200, 206, 211, 220, 230, 231, 235, 237, 341, 342, 343, 349, 413, 438, 444, 449, 460, 461, 466, 467, 475], "cast": [14, 19, 44, 56, 62, 68, 75, 76, 77, 89, 93, 132, 154, 182, 212, 214, 217, 227, 230, 231, 233, 235, 236, 237, 238, 292, 349, 410, 420, 435, 436, 438, 462, 464], "cat": [359, 376], "cauchi": 395, "cbrt": [6, 432], "cdef": 94, "cdot": 444, "cdoubl": 9, "ceil": [6, 33, 126, 133, 134, 416, 419, 458], "center": [107, 108, 109, 110, 114, 115, 122], "central": [148, 377, 378], "certain": [91, 213], "ch": 10, "chain": [88, 89, 93, 94], "chang": [44, 66, 74, 89, 91, 93, 103, 230, 231, 292, 305, 329, 334, 337, 346, 347, 352, 353, 354, 406, 413, 418, 460, 479], "char": 91, "charact": [91, 140], "check": [14, 19, 37, 38, 39, 56, 111, 164, 171, 179, 192, 195], "check_valid": 375, "chi": [361, 377], "chisquar": 6, "choic": [6, 59, 89, 106, 107, 109, 112, 113, 114, 118, 119, 121, 123, 183, 185, 293], "choicelist": 423, "choleski": 6, "choos": [6, 18, 26, 89, 94, 423, 465, 475], "chosen": [32, 152, 459, 465], "circ": 483, "circl": [194, 448], "clamp": [352, 440, 441], "clariti": 124, "class": [3, 89, 91, 127, 139, 140, 141, 143, 159, 200, 357, 385, 449, 479], "classic": 93, "clear": [91, 475], "clip": [6, 89, 352, 440, 441, 475], "close": [18, 22, 23, 24, 26, 43, 44, 89, 93, 101, 158, 199, 292, 357, 385, 407, 408, 416, 419, 448], "closer": 458, "cloud": 3, "cmake": 4, "co": [6, 22, 71, 184, 427, 442, 448], "code": [41, 91, 173], "coeffici": [187, 195, 198], "coerc": [41, 139, 140, 141, 142, 143, 200], "coin": 359, "col": 159, "collaps": [89, 305, 459], "column": [6, 37, 38, 39, 40, 42, 43, 44, 61, 62, 76, 77, 84, 89, 90, 104, 124, 130, 131, 148, 154, 156, 182, 183, 187, 190, 193, 196, 292, 406, 420, 435, 449, 451, 455, 461, 464], "column_stack": [6, 62, 90, 154, 420, 435, 464], "com": 4, "combin": [0, 91, 101, 109, 114, 119, 123, 148], "combinatori": 94, "come": 459, "comma": [91, 93], "command": 4, "common": [112, 113, 114, 339, 444], "common_typ": 6, "compani": [359, 376], "compar": [15, 35, 97, 135, 136, 153, 162, 216, 222], "compare_chararrai": 6, "comparison": [2, 97, 149, 150, 177, 178, 340, 468, 479], "compat": [3, 10, 14, 19, 44, 48, 89, 212, 217, 232, 233, 234, 236, 238, 292, 410, 413, 436, 462, 479], "compil": [4, 91, 147], "complement": 460, "complementari": [134, 460], "complet": [3, 4, 94, 140, 141, 193, 418, 475], "complex": [10, 11, 12, 18, 26, 27, 35, 56, 75, 88, 89, 91, 94, 98, 105, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 132, 135, 136, 158, 163, 164, 170, 171, 182, 183, 184, 185, 193, 194, 196, 212, 214, 216, 222, 227, 236, 238, 295, 296, 350, 407, 408, 410, 431, 436, 459, 462, 463, 475, 479], "complex128": [9, 10, 48, 414], "complex64": [9, 10, 48, 89, 132, 325], "compliant": 89, "complic": [93, 483], "compon": [10, 35, 110, 115, 122, 125, 158, 227, 407], "compos": 67, "composit": [77, 175, 438, 448], "compress": [6, 103, 423, 440, 475], "comput": [4, 10, 18, 22, 23, 24, 25, 26, 27, 28, 33, 48, 50, 51, 52, 53, 57, 63, 64, 70, 71, 75, 76, 77, 85, 86, 93, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 133, 148, 149, 150, 151, 152, 153, 158, 159, 161, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 207, 208, 209, 210, 212, 214, 217, 218, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 337, 347, 350, 407, 409, 410, 411, 416, 419, 421, 425, 426, 427, 428, 432, 436, 438, 442, 443, 444, 448, 451, 455, 462], "compute_uv": [180, 196], "concaten": [6, 61, 90, 154, 420, 435, 441, 464], "concept": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467, 475], "cond": [6, 186], "condit": [32, 44, 88, 89, 103, 180, 186, 190, 292, 339, 346, 352, 354, 423, 465], "condlist": 423, "confus": 137, "conj": [6, 64, 89, 111, 158, 179, 182, 350], "conjug": [6, 10, 63, 88, 89, 117, 120, 158, 179, 182, 183, 184, 185, 214, 295, 350, 463], "consecut": [85, 92, 148], "conserv": 219, "consid": [15, 21, 34, 35, 37, 38, 40, 42, 94, 122, 146, 162, 165, 183, 185, 189, 199, 211, 214, 357, 385, 459], "consist": [35, 36, 92, 106, 107, 109, 112, 113, 114, 118, 119, 121, 123, 140, 153, 198, 199, 441, 444], "constant": [9, 91, 148], "constraint": 48, "construct": [37, 38, 39, 59, 80, 83, 84, 89, 91, 104, 139, 140, 141, 142, 143, 156, 174, 200, 220, 293, 341, 423, 445, 446, 465, 468], "constructor": 475, "consum": [89, 312], "contain": [10, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 39, 50, 51, 52, 53, 57, 58, 60, 63, 64, 67, 68, 70, 71, 74, 75, 84, 87, 89, 91, 97, 99, 100, 102, 107, 108, 109, 112, 117, 120, 122, 128, 132, 133, 134, 135, 136, 137, 138, 143, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 176, 177, 178, 183, 193, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 217, 222, 223, 226, 228, 229, 232, 233, 234, 236, 238, 321, 337, 339, 340, 347, 348, 350, 357, 407, 409, 410, 411, 415, 416, 419, 421, 425, 426, 427, 428, 432, 433, 436, 437, 442, 443, 447, 451, 452, 455, 456, 457, 458, 462, 475], "content": [40, 89, 394], "context": 10, "contigu": [37, 38, 39, 40, 42, 88, 89, 93, 190, 318, 406, 413], "continu": [357, 389], "contourf": 219, "contract": [93, 94, 444], "contrast": [93, 352], "contribut": [10, 48, 152, 153], "control": [4, 44, 56, 62, 68, 89, 93, 154, 214, 292, 420, 435, 464], "conveni": [89, 334, 357], "convent": [88, 93, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 160, 198, 214, 344, 444], "convers": [44, 89, 93, 292, 468], "convert": [20, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 66, 78, 79, 80, 83, 91, 93, 94, 101, 144, 145, 146, 164, 171, 199, 211, 355, 356, 460, 461], "convolut": [10, 65, 69], "convolv": [6, 69], "coolei": 10, "coordin": [72, 141, 148, 159, 174, 219], "copi": [6, 20, 21, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 68, 80, 81, 83, 84, 89, 91, 95, 96, 103, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 219, 220, 227, 246, 292, 305, 307, 315, 321, 324, 341, 342, 343, 345, 346, 347, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 413, 422, 430, 434, 449, 450, 451, 454, 455, 461, 466, 467, 475], "copysign": [6, 337, 347], "copyto": [6, 89, 103, 297, 346], "core": [3, 91, 93, 475], "corner": [107, 109, 113, 114], "corrcoef": [6, 73], "correct": [11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 50, 51, 52, 53, 57, 58, 62, 63, 64, 67, 70, 71, 78, 79, 87, 97, 99, 100, 102, 105, 111, 117, 119, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 222, 223, 226, 337, 338, 340, 347, 348, 350, 355, 356, 409, 411, 415, 416, 419, 421, 425, 426, 427, 428, 432, 433, 435, 437, 442, 443, 457, 458], "correctli": [18, 26, 29, 30, 72, 191, 215, 221, 228, 229, 235, 237, 339, 349, 438], "correl": [6, 479], "correspond": [6, 10, 21, 29, 30, 34, 37, 38, 39, 40, 41, 42, 44, 60, 62, 66, 78, 79, 80, 81, 83, 84, 89, 95, 96, 104, 107, 108, 109, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 156, 159, 174, 182, 183, 199, 200, 211, 213, 214, 220, 292, 297, 301, 341, 342, 343, 355, 356, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 417, 423, 424, 436, 444, 447, 448, 449, 451, 455, 461, 462, 466, 467, 475], "correspondingli": 10, "cosh": [6, 23, 70, 428, 443], "cosin": [22, 23, 24, 25, 26, 27, 28, 70, 71, 427, 428, 442, 443], "cost": [93, 94], "costli": 94, "could": [89, 111, 117, 119, 326], "count": [14, 19, 49, 72, 86, 91, 94, 129, 139, 140, 142, 143, 148, 152, 153, 339, 349, 359, 429, 438, 459, 468, 479], "count_nonzero": [6, 339], "counterpart": [10, 111, 117, 119, 475], "cov": [6, 375], "covari": 73, "cover": [451, 455, 479], "cpu": [4, 21, 34, 37, 38, 39, 40, 42, 66, 69, 73, 80, 83, 95, 96, 98, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 199, 200, 211, 218, 220, 224, 235, 341, 342, 343, 449, 461, 466, 467], "creat": [3, 4, 21, 34, 36, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 82, 83, 84, 89, 91, 94, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 227, 292, 297, 341, 342, 343, 353, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 446, 449, 451, 452, 455, 456, 461, 466, 467, 475, 479], "creation": [91, 94, 468, 475, 479, 483], "crop": [106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "cross": [6, 69, 174], "csingl": 9, "ct": 10, "cube": [57, 132, 432], "cubic": 94, "cumprod": [6, 89, 230, 475], "cumproduct": 6, "cumsum": [6, 85, 89, 231, 438, 448, 475], "cumul": [75, 76, 77, 85, 89, 230, 231, 298, 299, 438, 448], "cupi": [2, 468], "current": [10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 57, 58, 60, 67, 70, 71, 78, 79, 87, 89, 91, 94, 99, 100, 102, 132, 133, 134, 135, 136, 137, 140, 151, 153, 155, 156, 161, 176, 202, 203, 204, 205, 206, 216, 222, 223, 224, 226, 324, 337, 338, 347, 348, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 437, 442, 443, 457, 458], "curv": 448, "custom": 475, "customarili": 10, "cut": 187, "cutoff": 192, "cycl": [108, 122, 174], "cyclic": 352, "cython": 4, "d": [0, 14, 19, 21, 48, 61, 62, 76, 77, 80, 81, 82, 83, 84, 88, 89, 90, 91, 104, 108, 110, 115, 122, 124, 128, 130, 131, 143, 154, 156, 160, 174, 181, 183, 184, 190, 191, 194, 214, 219, 230, 231, 237, 305, 339, 348, 349, 352, 362, 406, 413, 420, 422, 424, 435, 438, 440, 444, 445, 446, 453, 459, 461, 464, 475], "d0": [357, 384, 386], "d1": [357, 386], "d3": 81, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 83, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 111, 117, 119, 125, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 176, 177, 178, 187, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 238, 292, 321, 334, 336, 337, 338, 340, 342, 343, 346, 347, 348, 350, 352, 353, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 441, 442, 443, 446, 449, 457, 458, 462, 464, 465, 466, 467, 468, 479], "datatyp": [91, 189], "date": 4, "datetim": 91, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [73, 89, 236, 238, 328, 335, 436, 462], "decai": 370, "decim": [33, 89, 125, 126, 322, 416, 419], "decomposit": [179, 186, 189, 192, 196, 479], "decompress": 200, "decreas": [86, 448], "decreasingli": [10, 107, 109, 113, 114], "deem": 138, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 183, 185, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 305, 337, 338, 340, 341, 342, 343, 345, 347, 348, 349, 350, 352, 355, 356, 357, 361, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 398, 401, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 475], "default_rng": 6, "defg": 94, "defici": 189, "defin": [10, 74, 91, 96, 106, 135, 136, 145, 151, 152, 153, 216, 222, 227, 343, 347, 408, 467, 475], "definit": [74, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 133, 179, 448], "deg": [18, 356], "deg2rad": [6, 355, 356, 460], "degre": [6, 18, 78, 236, 238, 355, 356, 399, 436, 460, 462, 483], "del": 483, "delet": [6, 20], "delta": [10, 236, 238, 436, 460, 462], "demonstr": [0, 4, 91], "dens": [159, 174, 220], "densiti": 152, "depend": [4, 32, 84, 105, 111, 117, 119, 183, 187, 193, 195, 196, 199, 235, 237, 423, 465], "deprec": 6, "deprecate_with_doc": 6, "depth": [61, 62, 90, 154, 420, 435, 464], "deriv": 148, "descend": 196, "descr": 91, "describ": [75, 91, 212, 410, 479], "descript": [75, 91, 112, 114, 152, 212, 410, 475], "design": 10, "desir": [21, 34, 37, 38, 40, 42, 43, 55, 95, 96, 104, 112, 113, 114, 144, 145, 146, 156, 199, 211, 342, 343, 445, 449, 466, 467], "destin": [62, 154, 225, 352, 353, 420, 435, 441, 464], "destruct": 483, "det": [6, 194], "detail": [33, 107, 109, 113, 114, 118, 119, 121, 123, 138, 419, 451, 452, 455, 456, 459, 475], "determin": [13, 18, 22, 23, 24, 25, 26, 27, 28, 50, 52, 53, 57, 67, 70, 71, 78, 79, 87, 99, 100, 102, 134, 135, 136, 137, 140, 141, 143, 155, 176, 181, 187, 193, 194, 201, 202, 203, 204, 205, 206, 214, 216, 222, 223, 226, 338, 348, 355, 356, 409, 411, 415, 421, 423, 425, 427, 428, 432, 433, 437, 442, 443, 446, 457, 458], "devel": 4, "develop": [3, 4], "deviat": [89, 217, 233, 236, 238, 328, 357, 372, 379, 436, 462], "devic": [0, 2, 3, 21, 34, 37, 38, 39, 40, 41, 42, 44, 48, 66, 75, 80, 81, 83, 89, 93, 95, 96, 104, 105, 108, 122, 126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 212, 213, 214, 217, 220, 233, 236, 238, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 410, 434, 436, 449, 451, 455, 461, 462, 466, 467], "df": [361, 377, 399, 400], "dfden": [365, 378], "dfnum": [365, 378], "dft": [10, 106, 111, 112, 116, 117, 120], "di": [81, 82], "diag": [6, 83, 84, 93, 104, 130, 131, 156, 182, 184, 196, 423, 446], "diag_indic": [6, 82, 124], "diag_indices_from": [6, 81, 124], "diagflat": [6, 80, 84, 446], "diagon": [6, 80, 81, 82, 83, 89, 93, 104, 124, 156, 179, 183, 184, 185, 213, 333, 423, 446, 449, 450, 451, 452, 454, 455, 456, 475], "dice": 374, "dictionari": 91, "diff": [6, 77, 92, 148, 152], "differ": [3, 10, 15, 21, 34, 37, 38, 39, 40, 42, 48, 66, 75, 77, 80, 83, 85, 89, 91, 92, 95, 96, 104, 107, 108, 112, 113, 115, 118, 121, 122, 125, 130, 131, 132, 139, 140, 141, 142, 144, 145, 146, 148, 156, 162, 185, 199, 200, 211, 212, 214, 220, 297, 341, 342, 343, 346, 348, 353, 410, 437, 441, 449, 451, 455, 460, 461, 466, 467, 479], "digit": [6, 10, 125, 152], "dim": 15, "dimens": [14, 19, 20, 29, 30, 34, 45, 46, 47, 48, 61, 62, 68, 72, 73, 74, 81, 84, 85, 89, 91, 101, 113, 114, 126, 130, 131, 148, 154, 159, 160, 174, 189, 191, 193, 212, 215, 217, 219, 220, 221, 225, 228, 229, 232, 233, 234, 235, 236, 237, 238, 305, 313, 324, 336, 339, 341, 349, 353, 357, 387, 389, 390, 392, 410, 413, 424, 434, 435, 436, 438, 439, 440, 441, 445, 446, 451, 452, 455, 456, 459, 462, 475, 479], "dimension": [2, 4, 31, 65, 69, 72, 75, 81, 82, 83, 84, 85, 86, 89, 92, 93, 106, 107, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 139, 140, 142, 148, 159, 174, 187, 193, 197, 198, 212, 215, 219, 220, 221, 228, 229, 232, 234, 236, 238, 327, 336, 341, 344, 349, 410, 430, 436, 438, 440, 445, 448, 459, 462, 463, 468], "direct": [10, 74, 85, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 130, 131, 148, 338], "directli": [91, 141, 159, 211, 339, 441], "directori": 147, "dirichlet": 6, "discard": 458, "discont": 460, "discontinu": 460, "discret": [3, 10, 65, 69, 77, 85, 92, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 148, 357, 468], "disp": 6, "dispers": 402, "displac": [89, 329], "distanc": 148, "distinct": [135, 136, 216, 222], "distinguish": 91, "distribut": [3, 4, 211, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 479], "divid": [6, 90, 134, 137, 223, 411, 457], "divis": [87, 134, 137, 223, 348, 411, 457, 458], "divisor": [236, 238, 436, 462], "divmod": [6, 475], "dlpack": 138, "dmlc": 138, "dn": [357, 384, 386], "do": [3, 4, 91, 213, 359, 418, 448], "docstr": 475, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475], "doe": [20, 21, 56, 93, 103, 105, 120, 135, 136, 138, 193, 227, 230, 231, 346, 440], "domain": [10, 111, 116], "done": [3, 44, 89, 93, 198, 292, 459, 460], "dot": [6, 89, 93, 94, 160, 179, 184, 186, 190, 192, 193, 195, 196, 197, 198, 214, 444, 463], "doubl": [9, 370, 444], "down": 131, "dp": [87, 181, 183, 194, 195, 348, 413, 414, 437, 457], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 228, 229, 232, 234, 235, 292, 297, 341, 342, 343, 351, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "dpnp": [0, 2, 3, 4, 10, 468, 475, 479, 480, 483], "dpnp_arrai": [21, 34, 37, 38, 39, 40, 42, 44, 66, 80, 81, 83, 95, 96, 104, 108, 122, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 159, 199, 200, 211, 213, 220, 239, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467, 468], "dpnp_iface_arraycr": [220, 341], "draw": [357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "drawn": [357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 382, 383, 385, 388, 391, 397, 398, 399, 400, 401, 402, 403, 404, 405, 423], "drill": [359, 376], "driver": 2, "drop": [3, 91], "dsplit": [6, 62, 90], "dst": 68, "dstack": [6, 61, 62, 154, 420, 435, 464], "dt": [91, 448], "dt2": 91, "dtype": [0, 9, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 52, 53, 56, 57, 58, 62, 63, 64, 67, 70, 71, 73, 75, 76, 77, 78, 79, 81, 87, 89, 93, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 176, 177, 178, 190, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 298, 299, 310, 316, 325, 328, 330, 333, 335, 337, 338, 340, 342, 343, 347, 348, 349, 350, 355, 356, 357, 379, 385, 401, 409, 410, 411, 414, 415, 416, 419, 420, 421, 425, 426, 427, 428, 431, 432, 433, 435, 436, 437, 438, 440, 442, 443, 446, 449, 450, 454, 457, 458, 462, 464, 466, 467, 475], "due": [120, 483], "dump": 6, "dx": [148, 448], "dy": 148, "dz": 148, "e": [9, 10, 23, 25, 75, 76, 84, 91, 95, 96, 101, 104, 107, 111, 112, 113, 114, 117, 119, 120, 132, 140, 144, 145, 148, 156, 176, 182, 194, 197, 201, 342, 343, 357, 408, 412, 439, 449, 466, 467], "ea": 94, "each": [0, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 67, 70, 71, 76, 77, 81, 84, 86, 87, 89, 91, 94, 97, 99, 100, 102, 107, 109, 111, 113, 114, 117, 118, 119, 121, 123, 130, 131, 132, 133, 134, 137, 141, 148, 149, 150, 152, 153, 158, 161, 165, 166, 167, 174, 176, 177, 178, 182, 183, 184, 185, 187, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 223, 225, 226, 227, 322, 337, 339, 340, 347, 348, 350, 353, 359, 376, 407, 409, 411, 412, 415, 416, 417, 419, 421, 425, 426, 427, 428, 432, 433, 435, 437, 441, 442, 443, 445, 448, 451, 452, 455, 456, 457, 458, 459, 475], "easier": 440, "easiest": 4, "easili": [0, 153], "edg": [60, 86, 152, 153], "edge_ord": 148, "ediff1d": [6, 85, 148], "effect": [94, 132, 135, 136, 216, 222, 348, 460], "effici": [10, 106, 120, 140, 189, 192, 196], "efgh": 94, "eig": [6, 183, 184, 185], "eigenvalu": [182, 183, 184, 185, 479], "eigenvector": [182, 183, 184, 185], "eigh": [6, 182, 184, 185], "eigval": [6, 182, 183, 185], "eigvalsh": [6, 182, 183, 184], "einstein": [88, 93, 94, 160, 198, 214, 344, 444], "einsum": [6, 88, 94, 160, 198, 214, 344, 444], "einsum_path": [6, 93], "either": [35, 36, 42, 48, 75, 84, 91, 107, 109, 111, 113, 114, 117, 119, 121, 123, 124, 148, 160, 183, 185, 191, 193, 212, 228, 229, 232, 234, 235, 237, 410, 422, 423, 441, 448], "element": [4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 39, 48, 49, 50, 51, 52, 53, 57, 58, 60, 63, 64, 67, 68, 70, 71, 75, 76, 77, 82, 84, 85, 86, 87, 89, 91, 92, 94, 97, 99, 100, 102, 103, 104, 105, 107, 109, 113, 114, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 184, 188, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 287, 288, 295, 296, 298, 299, 301, 302, 305, 307, 308, 310, 312, 314, 315, 320, 321, 322, 323, 325, 328, 329, 332, 335, 337, 338, 339, 340, 346, 347, 348, 349, 350, 352, 354, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438, 440, 442, 443, 444, 445, 446, 448, 450, 452, 454, 456, 457, 458, 459, 460, 462, 465, 475, 479, 483], "element_count": [89, 325, 429], "ellipsi": 93, "els": [0, 194, 244], "elsewher": [104, 156, 449, 465], "empti": [4, 6, 34, 89, 96, 107, 109, 113, 114, 118, 119, 121, 123, 140, 144, 145, 187, 302, 342, 343, 346, 466, 467], "empty_lik": [6, 34, 95, 145, 343, 467], "enabl": [124, 189, 192, 196], "encount": [230, 231, 232, 234, 423], "end": [20, 21, 84, 91, 92, 94, 112, 146, 199, 211], "end_tim": 0, "endian": 91, "endpoint": [21, 146, 199, 211, 448], "engin": 393, "enough": 152, "entir": [48, 75, 111, 152, 153, 212, 217, 232, 233, 234, 236, 238, 410, 436, 462], "entri": [89, 91, 95, 103, 111, 117, 119, 124, 129, 130, 131, 327, 434], "enumer": 138, "env": 4, "environ": 4, "ep": [125, 189, 338, 408], "epsilon": [189, 408], "epsneg": 125, "equal": [6, 14, 15, 19, 35, 36, 48, 62, 69, 73, 77, 89, 104, 146, 148, 149, 150, 152, 153, 154, 162, 164, 171, 173, 176, 177, 178, 188, 192, 193, 198, 199, 211, 223, 315, 340, 357, 367, 401, 411, 415, 416, 419, 420, 425, 434, 435, 449, 451, 455, 464], "equal_nan": [15, 35, 162, 459], "equat": [187, 195, 197, 198, 479], "equiv": [44, 56, 62, 68, 89, 93, 154, 188, 214, 292, 420, 435, 464], "equival": [10, 13, 14, 16, 17, 19, 29, 30, 31, 33, 36, 48, 66, 74, 75, 78, 79, 87, 88, 89, 90, 94, 101, 103, 128, 135, 136, 137, 174, 197, 212, 223, 226, 246, 287, 288, 300, 313, 321, 324, 334, 336, 339, 344, 347, 355, 356, 357, 385, 410, 411, 413, 419, 424, 430, 437, 438, 440, 444, 447, 457, 459, 475, 483], "error": [75, 93, 98, 111, 116, 182, 212, 410, 434, 468, 475], "essenti": 4, "estim": [73, 153, 359, 376, 448], "et": 10, "etc": [10, 34, 38, 91, 107, 109, 113, 114, 118, 119, 121, 123, 376], "euclidean": 187, "euler_gamma": 9, "evalu": [14, 15, 19, 89, 93, 94, 97, 164, 171, 198, 219, 287, 288, 344, 423, 444, 475], "even": [10, 91, 108, 110, 111, 112, 115, 116, 117, 119, 120, 122, 164, 171, 416, 419], "evenli": [21, 146, 199, 211, 416, 448], "event": 206, "everi": [119, 353, 441], "everywher": 117, "exact": [103, 190, 346], "exactli": [10, 43, 143, 357, 385, 423], "examin": 187, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 300, 302, 305, 306, 307, 313, 315, 319, 321, 324, 325, 326, 329, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 483], "exce": 206, "except": [4, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 66, 67, 70, 71, 78, 79, 85, 86, 87, 88, 89, 95, 96, 97, 99, 100, 102, 104, 118, 119, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 161, 165, 166, 167, 176, 177, 178, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 221, 222, 223, 226, 232, 233, 234, 235, 236, 237, 238, 292, 337, 338, 340, 342, 343, 347, 348, 349, 350, 355, 356, 409, 411, 412, 413, 415, 416, 421, 425, 426, 427, 428, 430, 432, 433, 436, 437, 438, 442, 443, 457, 458, 462, 466, 467], "exclud": [11, 12, 20, 199, 357, 401], "exclus": [357, 385], "execut": [3, 4, 37, 38, 39, 69, 73, 98, 141, 218, 224, 235, 360, 362, 363, 373, 378, 394, 483], "executor": 0, "exist": [10, 61, 62, 90, 91, 101, 138, 154, 413, 420, 435, 464, 479], "exp": [6, 10, 100, 102, 106, 194, 203, 205, 212], "exp2": [6, 99, 102], "expand": [85, 101], "expand_dim": [6, 29, 30], "expect": [4, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 28, 33, 50, 51, 52, 53, 57, 58, 63, 64, 67, 70, 71, 72, 75, 76, 77, 78, 79, 87, 88, 91, 97, 99, 100, 102, 105, 117, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 162, 165, 166, 167, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 221, 222, 223, 226, 230, 231, 233, 235, 236, 237, 238, 337, 338, 340, 347, 348, 349, 350, 355, 356, 407, 409, 410, 411, 415, 416, 419, 421, 425, 426, 427, 428, 432, 433, 436, 437, 438, 442, 443, 457, 458, 462, 465], "explain": [109, 114, 119, 123, 475], "explan": 91, "explicit": 93, "explicitli": [84, 107, 109, 113, 114, 118, 119, 121, 123], "exploit": [10, 120], "explor": [94, 359, 376], "expm1": [6, 99, 100, 203], "expon": [10, 99, 100, 102, 132, 188, 205, 206, 212, 348, 383, 479], "exponenti": [6, 10, 94, 205, 206, 212, 370, 396], "expos": [139, 475], "express": [10, 27, 93, 94, 200, 483], "extend": [10, 91, 175, 475], "extens": [0, 1, 3, 4, 9, 147, 200, 468], "extobj": 214, "extra": [91, 117, 143], "extract": [6, 80, 83, 84, 93, 104, 128, 156, 159, 213, 346, 423, 440, 446], "extrema": 479, "ey": [6, 63, 64, 72, 89, 113, 114, 135, 136, 156, 160, 175, 186, 188, 189, 197, 198, 210, 216, 222, 424, 446], "f": [0, 6, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 91, 93, 95, 96, 97, 99, 100, 102, 104, 105, 108, 120, 122, 126, 132, 133, 134, 135, 136, 137, 144, 145, 148, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 188, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 222, 223, 226, 292, 297, 305, 337, 338, 340, 342, 343, 347, 348, 350, 355, 356, 378, 406, 409, 411, 413, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 453, 457, 458, 465, 466, 467], "f0": 91, "f1": 91, "f2": 91, "f4": 56, "f8": [56, 91], "f_contigu": [40, 42], "f_k": 10, "fab": [6, 11, 12], "fact": 184, "factor": [10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 179, 193], "fail": [89, 324, 359], "fallback": [182, 184, 360, 362, 363, 373, 378, 394], "fals": [14, 15, 16, 17, 18, 19, 29, 30, 34, 35, 36, 38, 40, 42, 44, 48, 50, 51, 53, 54, 55, 56, 66, 72, 73, 75, 77, 86, 89, 91, 93, 94, 96, 97, 103, 124, 138, 141, 145, 146, 149, 150, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 189, 191, 192, 196, 199, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 221, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 244, 287, 288, 289, 290, 292, 309, 310, 311, 316, 328, 330, 335, 339, 340, 343, 349, 351, 410, 413, 423, 426, 436, 438, 459, 461, 462, 465, 467, 475], "famili": 10, "fanci": 440, "fashion": [206, 475], "fast": [10, 106, 107, 109, 113, 114, 119, 120, 123], "fastcopyandtranspos": 6, "faster": [10, 135, 136], "fastest": [89, 305, 406, 413], "fb": [94, 453], "featur": 91, "few": 124, "fft": [6, 468, 479], "fft2": [6, 106, 109, 113], "fftfreq": [6, 10, 106, 110, 115, 122], "fftn": [6, 106, 107, 114, 120, 123], "fftshift": [6, 10, 107, 109, 114, 115], "fh": 140, "field": [91, 219], "field1": 91, "file": [139, 140, 142, 143, 147, 200], "filenam": [140, 200], "fill": [6, 20, 34, 89, 95, 96, 124, 144, 145, 152, 153, 219, 227, 297, 342, 343, 449, 466, 467], "fill_diagon": 6, "fill_valu": [144, 145], "filt": 453, "filter": [10, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "final": [4, 10, 119, 120, 121, 123, 146, 211], "find": [32, 49, 86, 89, 105, 152, 189, 192, 196, 323, 338, 339, 412, 422, 430, 459, 479], "find_common_typ": 6, "fine": 4, "finfo": [338, 408], "finfo_object": 125, "finit": [39, 165, 166, 167, 168, 169, 227], "first": [13, 14, 15, 19, 27, 29, 30, 31, 35, 36, 48, 50, 52, 53, 61, 62, 67, 74, 75, 84, 87, 88, 89, 91, 94, 97, 100, 107, 109, 111, 113, 114, 129, 132, 134, 135, 136, 137, 148, 149, 150, 152, 153, 155, 160, 162, 173, 175, 176, 177, 178, 190, 197, 200, 205, 206, 207, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 226, 228, 229, 305, 340, 344, 346, 348, 349, 406, 411, 413, 415, 417, 420, 422, 423, 430, 431, 433, 437, 438, 439, 441, 444, 446, 457, 459, 463, 464], "fit": [187, 412], "fix": [6, 33, 58, 84, 91, 133, 352, 416, 419, 458], "flag": [40, 42, 89, 91, 297], "flanneri": 10, "flat": [29, 30, 89, 92, 127, 305, 412], "flatnonzero": [6, 339], "flatten": [6, 20, 29, 30, 31, 62, 72, 76, 77, 80, 83, 84, 89, 92, 124, 128, 152, 153, 215, 221, 228, 229, 230, 231, 235, 237, 304, 318, 326, 339, 344, 353, 406, 412, 417, 430, 440, 441, 446, 459, 463], "flexibl": [88, 91, 140, 190], "flip": [6, 51, 84, 124, 130, 131, 161, 359], "fliplr": [6, 84, 124, 129, 131], "flipud": [6, 84, 124, 129, 130], "float": [11, 12, 18, 21, 27, 37, 38, 41, 48, 56, 67, 75, 77, 91, 95, 96, 100, 104, 105, 108, 122, 125, 126, 132, 139, 140, 141, 142, 143, 144, 145, 148, 152, 153, 156, 158, 187, 188, 189, 191, 192, 199, 200, 205, 206, 211, 212, 215, 217, 221, 227, 233, 236, 238, 338, 342, 343, 348, 357, 361, 386, 387, 389, 390, 392, 395, 396, 398, 401, 407, 408, 409, 410, 421, 436, 449, 460, 462, 466, 467, 475, 479], "float16": [9, 132], "float32": [0, 9, 10, 39, 41, 44, 56, 76, 89, 91, 93, 132, 292, 338, 357, 379, 384, 386, 387, 389, 390, 392, 398, 401, 414], "float64": [0, 9, 10, 41, 44, 48, 56, 77, 89, 91, 93, 292, 357, 358, 364, 365, 366, 368, 370, 371, 372, 379, 380, 383, 384, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 414], "float_pow": [6, 348], "floor": [6, 33, 58, 126, 134, 223, 411, 416, 419, 458], "floor_divid": [6, 223, 411], "flop": 94, "flush": 140, "fmax": [6, 136, 215, 216, 222, 232, 348], "fmin": [6, 135, 216, 221, 222, 234, 348], "fmod": [6, 223, 348, 411], "fn": 141, "fname": 200, "follow": [4, 10, 48, 91, 101, 117, 125, 138, 157, 183, 185, 192, 444, 475, 479], "forc": [91, 93], "forg": 4, "form": [10, 20, 34, 37, 38, 39, 40, 41, 42, 61, 66, 80, 83, 89, 90, 93, 94, 113, 114, 117, 144, 145, 146, 164, 171, 174, 199, 211, 334, 420, 461, 464], "format": [91, 138, 140, 143, 479], "format_float_posit": 6, "format_float_scientif": 6, "former": [353, 441], "forth": 444, "fortran": [42, 44, 89, 292, 305, 406, 413], "forward": [10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 148], "found": [4, 422, 475], "four": [357, 386], "fourier": [10, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 468], "fourth": 107, "frac": [10, 448], "fraction": [224, 458], "free": [89, 321], "freedom": [236, 238, 399, 436, 462], "freq": [108, 110, 115, 122], "freq_spectrum": 111, "frequenc": [10, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122], "freshli": [168, 169], "frexp": 6, "fro": [180, 191], "frobeniu": 180, "from": [3, 10, 14, 19, 20, 21, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 54, 56, 59, 62, 66, 68, 75, 78, 79, 80, 81, 83, 84, 89, 90, 91, 93, 95, 96, 100, 103, 104, 108, 112, 121, 122, 123, 129, 132, 138, 139, 140, 141, 142, 143, 144, 145, 148, 152, 154, 156, 159, 174, 182, 184, 185, 189, 190, 200, 212, 213, 219, 220, 293, 297, 327, 332, 341, 342, 343, 346, 349, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 413, 414, 420, 422, 423, 433, 434, 435, 438, 440, 441, 446, 449, 451, 453, 455, 456, 459, 460, 461, 464, 465, 466, 467, 479], "from_": 56, "from_dlpack": 6, "frombuff": [6, 140, 142, 143, 200], "fromfil": [6, 139, 142, 143], "fromfunct": [6, 37, 38, 39], "fromit": [6, 37, 38, 39, 139, 140, 143], "frompyfunc": 6, "fromregex": [6, 200], "fromstr": [6, 139, 140, 142, 200], "front": 453, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467], "full_lik": [6, 34, 96, 144, 343, 467], "full_matric": 196, "fulli": 91, "function": [0, 2, 3, 11, 12, 16, 17, 21, 29, 30, 33, 34, 37, 38, 39, 40, 42, 43, 66, 69, 73, 75, 78, 79, 84, 87, 89, 93, 95, 96, 98, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 119, 120, 123, 124, 132, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 156, 174, 182, 184, 190, 200, 203, 205, 206, 212, 213, 218, 219, 223, 224, 235, 287, 288, 297, 300, 321, 324, 334, 342, 343, 348, 353, 355, 356, 357, 360, 362, 363, 373, 378, 394, 410, 411, 419, 420, 425, 436, 440, 441, 445, 451, 452, 455, 456, 457, 462, 464, 465, 466, 467, 468, 475, 479], "fundament": [10, 91], "further": [451, 455], "futur": [91, 153], "fweight": 73, "g": [4, 10, 91, 95, 96, 104, 144, 145, 156, 342, 343, 357, 449, 466, 467, 483], "g870d1582aa5": 6, "gamma": [6, 397], "gauss": 10, "gaussian": [357, 379, 403], "gc": 94, "gcd": 6, "gen": 93, "gender": 91, "gener": [10, 31, 48, 91, 112, 117, 120, 123, 146, 160, 182, 183, 184, 185, 192, 193, 200, 211, 357, 359, 362, 393, 448, 451, 455, 461, 475, 479], "genfromtxt": [6, 200], "geometr": [6, 146, 199], "geomspac": [6, 199, 211], "get": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 82, 83, 89, 95, 96, 104, 108, 111, 117, 119, 122, 132, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 324, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 441, 449, 451, 452, 455, 456, 461, 466, 467, 475], "get_arrai": 89, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 357], "get_sycl_devic": 357, "get_sycl_queu": 357, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 91], "getter": [89, 324], "gid": 153, "github": 138, "give": [10, 83, 89, 132, 153, 334, 413, 424, 429, 459], "given": [14, 15, 19, 20, 21, 29, 30, 33, 34, 35, 37, 38, 40, 42, 44, 48, 61, 66, 72, 73, 76, 77, 85, 88, 89, 90, 91, 92, 94, 95, 96, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 135, 136, 144, 145, 146, 148, 152, 153, 162, 186, 199, 211, 213, 215, 216, 219, 221, 222, 230, 231, 232, 234, 235, 236, 237, 238, 289, 290, 292, 298, 299, 311, 316, 317, 322, 325, 328, 330, 335, 339, 342, 343, 346, 349, 351, 352, 357, 362, 384, 401, 410, 412, 416, 417, 418, 420, 422, 423, 429, 436, 438, 440, 444, 445, 448, 449, 459, 462, 464, 466, 467, 475], "global": 0, "good": 369, "gpu": [0, 3, 4, 21, 34, 37, 38, 39, 40, 42, 66, 80, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 199, 200, 211, 220, 341, 342, 343, 449, 461, 466, 467], "grade": 91, "gradient": [6, 85, 92, 187], "graphic": 4, "great": 10, "greater": [6, 89, 97, 134, 150, 176, 177, 178, 189, 193, 315, 340, 415, 423, 425, 434, 460], "greater_equ": [6, 97, 149, 177, 178, 340], "greatest": 134, "greedi": [93, 94], "grid": [37, 38, 39, 141, 159, 219, 220, 341], "group": [32, 339], "guarante": [91, 413], "guid": [2, 3], "gumbel": 6, "gz": 200, "h": [147, 179, 193, 219], "ha": [4, 10, 11, 12, 14, 18, 19, 20, 29, 30, 31, 48, 75, 76, 77, 86, 91, 97, 101, 111, 116, 117, 141, 148, 149, 150, 154, 158, 163, 164, 170, 171, 177, 178, 184, 194, 196, 212, 217, 223, 230, 231, 233, 235, 236, 237, 238, 340, 349, 407, 408, 409, 410, 411, 412, 418, 421, 423, 434, 435, 436, 438, 439, 440, 445, 446, 462, 475], "had": [353, 441], "hadamard": 94, "half": [23, 107, 109, 110, 111, 113, 114, 199, 357, 387, 389, 390, 392, 401, 439], "ham": 6, "han": 6, "hand": [74, 198], "handl": [21, 91, 105, 200, 339, 440, 441, 479], "happen": [44, 48, 89, 292, 359, 448], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 91, "have": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 61, 62, 63, 64, 67, 70, 71, 74, 75, 76, 77, 78, 79, 87, 88, 90, 91, 97, 99, 100, 102, 105, 113, 114, 123, 125, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 154, 155, 158, 161, 162, 165, 166, 167, 168, 169, 176, 177, 178, 187, 190, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 337, 338, 340, 346, 347, 348, 349, 350, 355, 356, 376, 407, 409, 410, 411, 412, 415, 416, 419, 420, 421, 425, 426, 427, 428, 432, 433, 435, 436, 437, 438, 442, 443, 445, 457, 458, 460, 462, 464, 475], "hd": 94, "header": 147, "heavisid": 6, "hello": 91, "help": 483, "helper": 479, "henc": [101, 148], "here": [6, 31, 91, 93, 111, 116, 117, 430, 451, 455], "hermit": [183, 185], "hermitian": [111, 116, 117, 119, 120, 179, 182, 183, 184, 185, 189, 192, 196, 479], "hfft": [6, 10, 116], "hierarchi": 173, "high": [117, 357, 385, 388, 401], "higher": [93, 463], "highest": 106, "highli": 140, "hist": [152, 395], "hist_0": 153, "hist_1": 153, "histogram": [6, 86, 153, 422, 479], "histogram2d": 6, "histogram_bin_edg": [6, 152], "histogramdd": [6, 152], "hold": [60, 76, 77, 152, 191, 230, 231, 235, 237, 446], "homogen": 91, "horizont": [61, 62, 84, 90, 124, 129, 154, 420, 435, 464], "host": [3, 4, 21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 449, 451, 455, 461, 466, 467], "household": 193, "how": [0, 4, 91, 117, 120, 148, 352, 440, 441, 451, 455], "howev": [89, 326, 440], "hsplit": [6, 62], "hstack": [6, 61, 62, 90, 420, 435, 464], "http": [4, 138], "hyperbol": [22, 23, 24, 25, 26, 27, 28, 70, 71, 427, 428, 442, 443, 479], "hypergeometr": 6, "hypot": [6, 410], "hypotenus": [155, 410], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 246, 292, 297, 315, 321, 324, 326, 329, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475, 483], "i0": 6, "i1": [89, 91, 329], "i2": [89, 91, 329], "i3": [89, 329], "i4": [56, 91], "i7": 93, "i8": [56, 91], "icpx": 4, "icx": 4, "id": [14, 19, 89, 307], "ident": [3, 6, 14, 19, 39, 75, 91, 104, 115, 124, 195, 396], "identifi": 91, "ieee": 125, "ifft": [6, 106, 113, 114, 116, 117, 122], "ifft2": [6, 107, 112, 114], "ifftn": [6, 109, 112, 113], "ifftshift": [6, 10, 110, 114], "ignor": [29, 30, 74, 91, 135, 136, 143, 152, 153, 215, 216, 217, 221, 222, 228, 229, 232, 233, 234, 236, 238, 436, 462], "ihfft": [6, 111], "ii": [93, 380], "iinfo": 374, "iinfo_object": 157, "ij": [93, 94, 219], "ijk": 93, "il": 94, "il1": 451, "il2": 451, "illustr": 184, "ilm": 93, "imag": [6, 10, 18, 35, 89, 407, 408, 475], "imaginari": [18, 35, 89, 117, 135, 136, 158, 163, 164, 170, 171, 182, 183, 185, 188, 216, 222, 227, 306, 407, 408, 431, 459], "implement": [3, 6, 41, 106, 138], "impli": 91, "implicit": 93, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 300, 305, 306, 313, 315, 319, 324, 325, 326, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 382, 391, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "improv": 93, "in1d": 6, "in_array1": 98, "includ": [4, 10, 14, 19, 20, 21, 34, 37, 38, 39, 40, 41, 42, 48, 66, 75, 80, 83, 86, 93, 94, 105, 144, 145, 146, 147, 152, 153, 164, 171, 192, 199, 211, 212, 217, 232, 233, 234, 236, 238, 357, 401, 410, 436, 461, 462], "include_initi": 75, "inclus": [357, 385, 388, 423], "increas": [86, 91, 101, 112, 117, 152, 461], "ind": [31, 86, 197, 352, 353, 451, 452, 455, 456], "index": [4, 20, 29, 30, 31, 32, 59, 89, 91, 94, 104, 107, 113, 121, 128, 138, 159, 174, 219, 228, 229, 293, 305, 329, 339, 352, 353, 406, 413, 422, 423, 440, 441, 451, 455, 459, 465, 468, 479], "index_arrai": [29, 30, 31], "indic": [6, 10, 29, 30, 31, 32, 75, 81, 82, 86, 89, 91, 93, 94, 103, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 128, 138, 141, 152, 197, 198, 213, 214, 220, 228, 229, 289, 290, 291, 314, 317, 323, 332, 339, 352, 353, 413, 422, 425, 426, 430, 440, 441, 447, 451, 452, 455, 456, 459, 465], "indirect": [31, 430], "individu": 367, "inequ": 340, "inexact": [132, 227, 235, 237], "inf": [9, 15, 23, 27, 37, 38, 39, 67, 87, 162, 165, 166, 167, 168, 169, 180, 191, 201, 202, 204, 216, 222, 227, 228, 229, 232, 234, 237, 350, 432, 457], "infer": [39, 75, 212, 410, 413], "infin": [14, 19, 39, 134, 165, 166, 167, 168, 169, 223, 227, 232, 234, 237, 411, 458, 479], "infinit": 180, "info": 6, "inform": [0, 40, 42, 89, 91, 111, 117, 119, 125, 303, 475, 479], "initi": [16, 17, 75, 89, 95, 143, 215, 221, 232, 234, 235, 237, 309, 311, 316, 330, 349, 357, 438], "inner": [6, 74, 93, 94, 190, 214, 344], "input": [10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 183, 189, 191, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 305, 313, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 379, 385, 401, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 457, 458, 459, 460, 461, 462, 463, 466, 467], "insert": [6, 20, 29, 30, 84, 86, 89, 93, 101, 146, 152, 199, 211, 228, 229, 232, 234, 323, 353, 422, 423, 479], "instal": 2, "instanc": [3, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 111, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 156, 159, 199, 200, 211, 213, 214, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "instead": [32, 44, 84, 88, 89, 93, 101, 133, 146, 152, 153, 159, 190, 199, 206, 211, 215, 221, 292, 339, 349, 438, 475], "instruct": 4, "int": [9, 14, 19, 20, 21, 29, 30, 31, 33, 41, 48, 55, 62, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 89, 91, 95, 96, 97, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 156, 157, 159, 187, 188, 191, 197, 198, 199, 211, 212, 213, 215, 217, 221, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 313, 325, 334, 336, 342, 343, 345, 349, 352, 353, 357, 385, 388, 410, 412, 413, 417, 418, 419, 429, 430, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 459, 460, 461, 462, 466, 467, 475], "int16": 91, "int32": [0, 9, 41, 56, 91, 95, 96, 104, 139, 142, 144, 145, 156, 200, 235, 237, 342, 343, 357, 359, 367, 369, 374, 376, 382, 385, 401, 414, 438, 449, 466, 467], "int64": [0, 9, 56, 91, 235, 237, 414], "int8": [91, 349], "int_": 9, "int_0": 448, "int_t": 448, "intc": 9, "integ": [21, 33, 48, 49, 50, 51, 52, 53, 55, 58, 75, 76, 77, 86, 89, 91, 126, 129, 132, 133, 134, 138, 152, 157, 161, 174, 176, 188, 191, 197, 212, 215, 217, 221, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 326, 334, 348, 349, 352, 357, 385, 388, 393, 410, 411, 412, 413, 415, 416, 417, 419, 422, 423, 424, 433, 436, 438, 440, 444, 446, 458, 459, 460, 462, 475], "integer_lik": 444, "integr": [3, 4, 48, 75, 77, 132, 152, 212, 217, 224, 233, 236, 238, 348, 410, 436, 438, 448, 462], "intel": [3, 93], "intend": [89, 334], "intent": 132, "interchang": [89, 225, 331, 439], "interfac": [0, 139], "interior": 148, "intermedi": [76, 93, 94], "intern": 357, "interp": 6, "interpol": 117, "interpret": [2, 37, 38, 39, 43, 55, 66, 91, 111, 117, 119, 139, 174, 213, 339, 352, 475], "intersect1d": 6, "interv": [10, 21, 22, 23, 24, 26, 86, 101, 146, 199, 211, 357, 385, 387, 389, 390, 392, 400, 401, 439], "intp": [235, 237], "intrins": 475, "introduc": 417, "introduct": 10, "introselect": [89, 315, 345], "inv": [6, 180, 192], "invers": [10, 18, 22, 23, 24, 25, 26, 27, 28, 70, 71, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 186, 192, 197, 198, 203, 403, 427, 428, 442, 443, 459], "invert": [6, 51, 186, 192, 197], "invok": 475, "involv": 197, "io": [138, 200], "irfft": [6, 108, 111, 116, 118, 119, 120, 122], "irfft2": [6, 117, 119, 121], "irfftn": [6, 117, 118, 123], "irrespect": 31, "is_busdai": 6, "isalignedstruct": 91, "isbuiltin": 91, "isclos": [6, 15], "iscomplex": [6, 164, 170], "iscomplexobj": [6, 163, 171], "isfinit": [6, 166, 167, 168, 169, 227, 232, 234, 237], "isfortran": 6, "isin": 6, "isinf": [6, 165, 167, 168, 169, 227], "isn": 91, "isnan": [6, 165, 166, 168, 169, 227, 230, 231, 232, 234, 235, 237], "isnat": [6, 167], "isneginf": [6, 165, 166, 167, 169, 227], "isposinf": [6, 165, 166, 167, 168, 227], "isreal": [6, 163, 171], "isrealobj": [6, 164, 170], "isscalar": 6, "issctyp": 6, "issu": 113, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 32, 89, 139, 140, 142, 459, 468], "item_dtyp": 91, "item_hasobject": 91, "item_is_point": 91, "items": [89, 91], "itemset": 6, "iter": [6, 37, 38, 39, 89, 94, 127, 139, 140, 142, 143, 304, 305, 353, 441, 479], "its": [4, 6, 10, 11, 12, 14, 19, 31, 48, 80, 89, 111, 117, 119, 125, 152, 153, 156, 182, 183, 184, 185, 190, 192, 198, 217, 233, 236, 238, 334, 394, 406, 410, 413, 430, 436, 447, 448, 449, 462, 475], "itself": [44, 89, 91, 227, 292, 475], "iu": 213, "iu1": [213, 455], "iu2": 455, "ix_": 6, "ixgrid": 174, "j": [63, 64, 89, 93, 107, 109, 111, 112, 113, 114, 116, 117, 120, 121, 123, 132, 141, 158, 159, 175, 179, 182, 183, 204, 214, 227, 334, 344, 350, 353, 407, 431, 433, 441, 444], "j1": 175, "jame": 10, "ji": 93, "jil": 93, "jk": [93, 94], "jl": 94, "john": 10, "join": [61, 62, 90, 154, 420, 435, 464, 479], "jump": [78, 355], "just": [61, 84, 91, 107, 113, 118, 120, 121], "k": [10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 80, 83, 87, 89, 93, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 178, 187, 193, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 222, 223, 226, 246, 292, 297, 337, 338, 340, 347, 348, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 444, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 465, 483], "kaiser": 6, "kappa": 402, "keep": [43, 44, 89, 292, 459], "keepdim": [14, 16, 17, 19, 29, 30, 48, 72, 89, 191, 212, 215, 217, 218, 221, 228, 229, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 309, 310, 311, 316, 328, 330, 335, 349, 351, 353, 410, 436, 438, 441, 462], "kei": [3, 31, 89, 91, 127, 251, 282, 430], "key2": 91, "keyword": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 57, 58, 60, 66, 67, 70, 71, 74, 78, 79, 80, 81, 83, 87, 89, 95, 96, 99, 100, 102, 104, 108, 122, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 151, 155, 156, 159, 161, 176, 200, 202, 203, 204, 205, 206, 213, 214, 216, 220, 222, 223, 224, 226, 227, 297, 337, 338, 341, 342, 343, 347, 348, 350, 355, 356, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 409, 411, 415, 416, 421, 425, 426, 427, 428, 437, 442, 443, 449, 451, 455, 457, 458, 461, 465, 466, 467, 475], "ki": 93, "kind": [31, 44, 56, 62, 68, 75, 89, 91, 93, 125, 154, 190, 212, 214, 291, 292, 315, 326, 345, 410, 420, 430, 435, 464, 479], "kl": [10, 93, 94], "known": [10, 140, 395], "kron": 6, "kroneck": 175, "kth": [89, 315, 345], "kwarg": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 57, 58, 60, 63, 64, 67, 70, 71, 78, 79, 87, 89, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 141, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 222, 223, 224, 226, 276, 294, 321, 337, 338, 340, 347, 348, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 457, 458], "l": [10, 91, 179, 183, 185], "la": [182, 184, 185], "label": 93, "laid": 42, "lam": 382, "lambda": 141, "lapack": [182, 184], "laplac": 6, "laptop": 4, "larg": [10, 78, 91, 152, 192, 227, 355, 460, 483], "larger": [93, 106, 107, 109, 112, 113, 114, 116, 118, 119, 120, 121, 123, 125, 446, 460, 475], "largest": [10, 94, 120, 125, 133, 157, 187, 223, 227, 411], "largest_singular_valu": 192, "last": [14, 19, 20, 31, 74, 84, 85, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 129, 146, 148, 160, 190, 199, 211, 214, 305, 349, 406, 413, 417, 422, 430, 434, 438, 444, 460], "later": 483, "latest": [4, 138], "latter": [135, 136, 216, 222, 353, 441], "layout": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 42, 43, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 93, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 144, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 222, 223, 226, 297, 303, 337, 338, 340, 342, 343, 347, 348, 350, 355, 356, 409, 411, 413, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 457, 458, 465, 466, 467, 468], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [112, 113, 114, 230, 231, 453], "learn": [3, 4, 206], "least": [45, 46, 47, 48, 82, 90, 91, 94, 101, 124, 130, 135, 136, 140, 164, 187, 193, 216, 222, 420, 464], "left": [10, 29, 30, 33, 72, 84, 86, 89, 130, 131, 176, 184, 191, 215, 221, 228, 229, 235, 237, 323, 349, 400, 415, 419, 422, 438, 448, 461], "left_shift": [6, 415], "leg": [155, 410], "legaci": 393, "len": [89, 91, 109, 110, 111, 114, 116, 117, 118, 119, 123, 159, 187, 215, 219, 220, 221, 268, 424, 461], "length": [21, 48, 76, 77, 85, 97, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 143, 146, 148, 152, 154, 182, 196, 211, 215, 219, 221, 230, 231, 353, 360, 413, 414, 420, 422, 423, 424, 434, 441, 444, 445, 464], "less": [6, 76, 77, 97, 149, 150, 152, 153, 178, 187, 192, 230, 231, 235, 237, 340, 349, 423, 425, 438, 446], "less_equ": [6, 97, 149, 150, 177, 340], "let": 359, "level": [468, 475], "level_zero": [21, 34, 37, 38, 39, 40, 42, 66, 80, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 199, 200, 211, 220, 341, 342, 343, 449, 461, 466, 467], "lexicograph": 459, "lexsort": [6, 31, 430], "li": [417, 418], "librari": [3, 4, 475], "light": 10, "like": [21, 34, 37, 38, 40, 42, 44, 45, 46, 47, 61, 89, 90, 93, 95, 104, 119, 139, 140, 141, 142, 143, 144, 146, 156, 199, 200, 211, 213, 292, 305, 313, 336, 342, 353, 357, 401, 413, 441, 466, 479], "limit": [3, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 60, 63, 64, 66, 67, 69, 70, 71, 73, 78, 79, 87, 89, 91, 95, 96, 97, 98, 99, 100, 102, 104, 125, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 157, 161, 165, 166, 167, 176, 177, 178, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 232, 233, 234, 235, 236, 237, 238, 292, 294, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 382, 383, 385, 388, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 411, 413, 415, 416, 421, 425, 426, 427, 428, 430, 432, 433, 436, 437, 438, 442, 443, 457, 458, 462, 466, 467], "linalg": [6, 88, 93, 94, 433], "line": [187, 200], "linear": [10, 65, 69, 187, 195, 211, 468, 479], "linspac": [0, 6, 21, 98, 146, 211, 219, 448, 460], "linux": 4, "list": [3, 6, 9, 20, 34, 37, 38, 39, 40, 42, 45, 46, 47, 54, 62, 66, 80, 83, 89, 90, 91, 93, 94, 110, 115, 124, 144, 145, 146, 148, 154, 164, 171, 199, 200, 211, 214, 334, 412, 414, 420, 423, 435, 444, 447, 461, 464, 465], "list_pickl": 91, "littl": 91, "ln": 211, "load": [6, 140, 200], "loadtxt": [6, 140], "loc": [357, 368, 370, 371, 379, 403], "local": 4, "locat": [0, 4, 147, 168, 169, 213, 344, 368, 370, 422], "log": [6, 102, 146, 194, 199, 202, 203, 204, 205, 211, 212, 372], "log10": [6, 201, 203, 204], "log1p": [6, 100, 102, 201, 202, 204], "log2": [6, 201, 202, 203, 206], "log_bas": 211, "logabsdet": 194, "logaddexp": [6, 75, 206, 212], "logaddexp2": [6, 205, 212], "logarithm": [75, 181, 194, 199, 201, 202, 203, 204, 205, 206, 212, 373, 479], "logic": [14, 19, 207, 208, 209, 210, 468, 479], "logical_and": [6, 50, 208, 209, 210], "logical_not": [6, 51, 161, 207, 209, 210], "logical_or": [6, 52, 207, 208, 210], "logical_xor": [6, 53, 207, 208, 209], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 146, 199], "logsumexp": [75, 205, 206], "lomax": 380, "long": [91, 188], "longer": [111, 117, 483], "look": [338, 441], "lookfor": 6, "loop": 93, "loos": 92, "lorentz": 395, "lose": [111, 117, 119], "low": [107, 109, 113, 114, 357, 385, 388, 401, 475], "lower": [80, 104, 152, 153, 173, 179, 183, 185, 213, 449, 450, 451, 452, 455, 456], "lowest": [48, 93, 94, 357, 385], "lstsq": 6, "m": [4, 10, 73, 90, 91, 93, 104, 107, 109, 111, 113, 114, 117, 118, 119, 123, 129, 130, 131, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 213, 214, 353, 423, 440, 441, 449, 450, 451, 452, 454, 455, 456], "machin": [4, 10, 125, 157, 187, 206, 408], "machineri": 91, "made": [34, 38, 45, 91, 138, 175, 227], "magnitud": [11, 12, 67, 105, 350], "mai": [14, 18, 19, 44, 56, 60, 62, 68, 77, 89, 91, 93, 94, 101, 107, 109, 111, 112, 113, 114, 116, 117, 120, 123, 148, 153, 154, 180, 182, 183, 187, 191, 193, 206, 211, 214, 227, 233, 236, 238, 292, 324, 353, 408, 420, 435, 445, 464, 475], "main": [80, 81, 82, 83, 84, 104, 124, 156, 185, 213, 446, 449, 450, 451, 454, 455], "mainstai": 10, "maintain": [86, 89, 91, 152, 323, 422, 441], "major": [4, 37, 38, 39, 40, 42, 43, 44, 89, 292, 339, 406], "make": [40, 42, 61, 91, 219, 459, 460], "manag": 0, "mani": [10, 475], "manipul": [3, 81, 468, 479], "manual": [4, 91, 445], "mappingproxi": 91, "mask": [91, 174, 213, 339, 346, 354, 440, 451, 455], "mask_func": 213, "mask_indic": [6, 451, 455], "mass": 152, "mat": 6, "match": [11, 12, 38, 62, 68, 72, 75, 85, 91, 138, 140, 148, 160, 212, 214, 352, 353, 410, 435, 440, 441, 444, 465], "math": [10, 98], "mathemat": [468, 479], "matlab": 137, "matmul": [6, 88, 193, 196, 463], "matplotlib": [219, 395], "matric": [124, 141, 159, 174, 181, 182, 184, 186, 189, 191, 192, 193, 194, 196, 214, 219, 479], "matrix": [73, 88, 93, 160, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 214, 219, 433, 454, 461, 463, 468, 479], "matrix_pow": [6, 433], "matrix_rank": 6, "matter": 459, "max": [0, 6, 16, 29, 89, 125, 135, 136, 152, 153, 157, 187, 189, 216, 221, 222, 232, 294, 374, 441, 445, 460, 475], "max_arg": 0, "max_val": 0, "maxima": [135, 215, 216], "maximum": [0, 6, 16, 29, 30, 60, 89, 94, 135, 136, 215, 221, 222, 228, 229, 232, 234, 289, 309, 348, 351, 353, 460], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 21, 34, 36, 37, 38, 39, 40, 41, 42, 44, 48, 66, 72, 80, 81, 83, 89, 93, 95, 96, 104, 107, 108, 109, 113, 114, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 148, 156, 159, 180, 191, 200, 213, 218, 220, 233, 236, 238, 292, 297, 305, 334, 341, 342, 343, 357, 370, 372, 375, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 402, 403, 406, 413, 436, 438, 449, 451, 455, 461, 462, 466, 467, 475], "meaningfulli": 475, "meant": 475, "median": [0, 6], "meet": 423, "memori": [3, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 42, 43, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 91, 93, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 138, 144, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 219, 222, 223, 226, 297, 303, 329, 337, 338, 340, 342, 343, 347, 348, 350, 355, 356, 409, 411, 413, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 457, 458, 465, 466, 467, 468, 483], "mersenn": 357, "mesh": 174, "meshgrid": [6, 141, 159, 174, 220, 341], "met": [88, 190], "meta": 91, "metadata": 91, "method": [10, 14, 16, 17, 19, 31, 44, 66, 88, 89, 91, 127, 138, 140, 189, 192, 196, 292, 297, 313, 321, 324, 336, 339, 357, 413, 424, 438, 440, 447, 468], "mgrid": [107, 109, 118, 121, 159, 174], "mgridclass": 220, "middl": [10, 84, 107, 109, 113, 114, 184], "might": [93, 112, 113, 114], "min": [6, 17, 30, 60, 89, 125, 135, 136, 152, 153, 157, 180, 187, 193, 196, 215, 216, 222, 234, 294, 441, 475], "min_scalar_typ": 6, "minima": [136, 221, 222], "minimum": [6, 17, 29, 30, 60, 89, 132, 135, 136, 215, 216, 221, 228, 229, 232, 234, 290, 311, 348, 351], "minlength": 49, "mintypecod": 6, "minu": [102, 134, 223, 411, 458], "miscellan": [2, 468, 479], "mise": 402, "miss": 200, "mix": 214, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 103, 411, 460], "mode": [59, 65, 69, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 193, 293, 317, 332, 352, 395, 400, 422, 440, 441], "model": 359, "modf": 6, "modifi": [66, 84, 124, 394], "modul": [106, 147, 468], "modulu": [137, 223, 411], "monoton": [86, 152], "moor": 192, "more": [0, 3, 4, 31, 34, 45, 46, 47, 90, 91, 93, 94, 102, 118, 121, 130, 131, 138, 140, 153, 154, 159, 187, 188, 189, 190, 192, 196, 203, 205, 435, 444, 448, 459, 460, 475, 483], "most": [3, 4, 20, 84, 85, 91, 94, 106, 112, 227, 357, 393, 434], "move": [89, 225, 315, 417, 418, 447, 459], "moveaxi": [6, 417, 418, 447], "msg": 0, "msort": 6, "mt19937": 393, "mu": [368, 372, 379, 402], "multi": [2, 89, 159, 174, 220, 329, 341, 459, 468], "multi_dot": [6, 88, 93, 94], "multiarrai": 91, "multidimension": [152, 160, 465], "multinomi": 6, "multipl": [10, 29, 30, 31, 48, 62, 74, 75, 91, 93, 107, 109, 113, 114, 118, 119, 121, 123, 153, 154, 174, 182, 183, 184, 185, 186, 190, 212, 215, 217, 221, 232, 233, 234, 236, 238, 410, 420, 423, 430, 435, 436, 448, 459, 462, 464, 468], "multipli": [6, 76, 93, 184, 235, 349], "multivari": 375, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 75, 76, 77, 78, 79, 85, 87, 88, 90, 99, 100, 101, 102, 105, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 130, 132, 133, 134, 135, 136, 137, 140, 143, 148, 149, 150, 151, 152, 153, 154, 155, 158, 161, 165, 166, 167, 168, 169, 176, 177, 178, 179, 190, 191, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 337, 338, 340, 346, 347, 348, 349, 350, 352, 353, 355, 356, 409, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 425, 426, 427, 428, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 457, 458, 462, 464, 465], "mx": 187, "n": [0, 4, 10, 32, 77, 81, 82, 85, 86, 89, 90, 91, 92, 101, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 141, 148, 156, 174, 187, 188, 189, 192, 193, 196, 197, 198, 213, 214, 219, 236, 238, 334, 346, 352, 359, 374, 376, 386, 396, 422, 424, 433, 436, 439, 440, 441, 444, 447, 448, 449, 450, 451, 452, 454, 455, 456, 461, 462, 475], "n1": 219, "n2": [200, 219], "n3": 219, "naiv": 94, "name": [0, 6, 91], "namedtupl": 193, "nan": [9, 14, 15, 19, 29, 30, 35, 37, 38, 39, 87, 132, 135, 136, 162, 165, 166, 167, 168, 169, 202, 215, 216, 217, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 348, 349, 432, 436, 457, 459, 462, 479], "nan_to_num": 6, "nanargmax": [6, 29, 229], "nanargmin": [6, 30, 228], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 135, 136, 215, 216, 222, 234], "nanmean": [6, 217, 236, 238, 436, 462], "nanmedian": 6, "nanmin": [6, 135, 136, 216, 221, 222, 232], "nanpercentil": 6, "nanprod": [6, 349], "nanquantil": 6, "nanstd": [6, 217, 233, 238, 436, 462], "nansum": 6, "nanvar": [6, 217, 233, 236, 436, 462], "nat": 167, "nativ": 91, "native_cod": 91, "native_dt": 91, "natur": [194, 201, 202, 203, 204, 205, 206, 212], "nbad": 369, "nbyte": 89, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 480], "ndim": [6, 32, 34, 42, 45, 46, 47, 73, 81, 84, 89, 91, 124, 175, 196, 215, 221, 342, 445, 447, 466], "ndmin": 34, "nearest": [33, 58, 126, 133, 134, 223, 411, 416, 419, 458], "necessari": [4, 14, 19, 21, 34, 37, 38, 40, 42, 45, 68, 76, 77, 92, 103, 111, 117, 119, 124, 138, 146, 199, 211, 214, 217, 230, 231, 233, 235, 236, 237, 238, 349, 413, 436, 438, 462, 483], "necessarili": [182, 184], "need": [4, 34, 38, 84, 93, 147, 440, 441, 465], "needs_init": 91, "needs_pyapi": 91, "neg": [6, 10, 14, 19, 33, 49, 67, 83, 84, 86, 89, 101, 104, 107, 109, 112, 113, 114, 117, 120, 129, 132, 143, 148, 152, 165, 166, 167, 168, 169, 188, 227, 232, 234, 236, 237, 238, 324, 347, 348, 349, 352, 376, 419, 436, 438, 440, 441, 446, 462], "negat": 423, "negative_binomi": 6, "neginf": 227, "neither": [88, 135, 136, 196, 214, 232, 234], "nest": [41, 90, 154, 420, 435, 464], "nested_it": 6, "net": [135, 136, 216, 222], "never": [413, 460], "new": [20, 34, 44, 54, 55, 61, 62, 72, 75, 76, 77, 84, 89, 90, 91, 92, 95, 96, 101, 135, 136, 138, 142, 143, 144, 145, 146, 154, 156, 199, 211, 212, 213, 216, 222, 225, 230, 231, 235, 237, 292, 321, 324, 334, 342, 343, 410, 413, 417, 418, 420, 435, 445, 447, 464, 465, 466, 467, 475], "new_dtyp": 91, "new_ord": 91, "newaxi": 101, "newbyteord": [6, 91], "newli": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 144, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 222, 223, 226, 292, 297, 337, 338, 340, 342, 343, 347, 348, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 457, 458, 466, 467], "newshap": 413, "next": [4, 125, 338], "nextaft": 6, "ngood": 369, "ni": [219, 353, 440, 441], "nine": 359, "ninja": 4, "nj": [353, 440, 441], "njm": 93, "nk": [353, 440, 441], "nl": 10, "nlk": 93, "nn": 219, "noisi": 187, "non": [21, 32, 34, 37, 38, 39, 40, 41, 42, 44, 48, 49, 66, 72, 80, 81, 83, 86, 89, 95, 96, 103, 104, 108, 117, 120, 122, 128, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 156, 159, 163, 165, 174, 199, 200, 211, 213, 220, 227, 228, 229, 232, 234, 236, 238, 292, 297, 314, 324, 339, 341, 342, 343, 346, 348, 357, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 436, 444, 449, 451, 455, 461, 462, 465, 466, 467], "nonc": [377, 378], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 165, 166, 167, 168, 169, 176, 177, 178, 180, 187, 189, 190, 191, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 307, 309, 310, 311, 315, 316, 317, 320, 322, 323, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 451, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 475], "nonzero": [6, 32, 72, 89, 128, 174, 465, 475], "nor": [135, 136, 184, 232, 234], "norm": [6, 10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 180, 184, 187, 479], "normal": [6, 73, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 152, 182, 183, 193, 206, 357, 372, 375, 386, 398], "not_equ": [6, 97, 149, 150, 177, 178], "note": [11, 12, 13, 14, 18, 19, 20, 29, 30, 31, 32, 33, 43, 66, 74, 78, 84, 86, 87, 89, 91, 93, 94, 101, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 133, 135, 136, 139, 140, 141, 142, 143, 152, 159, 165, 182, 200, 211, 223, 226, 236, 237, 238, 297, 321, 339, 346, 352, 355, 360, 362, 363, 373, 378, 411, 413, 430, 436, 437, 439, 444, 445, 448, 457, 459, 460, 462, 463], "notic": [91, 117, 120], "notimplementederror": [11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 95, 96, 97, 99, 100, 102, 104, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 161, 165, 166, 167, 176, 177, 178, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 221, 222, 223, 226, 232, 233, 234, 236, 237, 238, 292, 337, 338, 340, 342, 343, 347, 348, 349, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 430, 432, 433, 436, 437, 438, 442, 443, 457, 458, 462, 466, 467], "now": [14, 19, 40, 42, 81, 184, 187, 213], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 300, 302, 305, 306, 307, 313, 315, 319, 324, 325, 326, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 355, 356, 382, 391, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "nr": 10, "nsamp": 369, "nsampl": 369, "nth": 444, "nuc": 191, "num": [0, 91, 98, 146, 199, 211, 448, 460], "number": [10, 14, 15, 18, 19, 20, 21, 32, 33, 39, 48, 49, 54, 55, 72, 81, 83, 85, 86, 89, 91, 92, 93, 94, 101, 104, 105, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 125, 126, 134, 139, 140, 142, 143, 146, 148, 152, 153, 156, 157, 162, 163, 164, 165, 171, 174, 180, 186, 189, 193, 194, 196, 197, 198, 199, 206, 211, 223, 227, 230, 231, 232, 234, 235, 236, 237, 238, 313, 322, 325, 336, 339, 346, 349, 350, 357, 359, 369, 393, 411, 412, 416, 417, 418, 419, 426, 429, 436, 439, 445, 447, 449, 458, 459, 461, 462, 475, 479], "number_of_dimens": [89, 313, 336], "numer": [3, 4, 10, 11, 12, 13, 15, 22, 23, 24, 25, 26, 28, 33, 63, 64, 67, 70, 71, 87, 91, 97, 99, 102, 112, 113, 114, 117, 119, 134, 135, 136, 149, 150, 158, 162, 165, 166, 167, 177, 178, 201, 202, 203, 204, 216, 222, 226, 337, 340, 347, 348, 350, 407, 416, 419, 425, 426, 427, 428, 437, 442, 443, 457, 479], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 301, 305, 306, 307, 313, 319, 324, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 475, 479], "nx": 219, "ny": 219, "nyquist": [10, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122], "o": [4, 14, 19, 91], "obj": [29, 30, 31, 91, 138, 152], "obj2sctyp": 6, "object": [21, 34, 37, 38, 39, 40, 41, 42, 43, 44, 66, 80, 81, 83, 89, 91, 95, 96, 101, 104, 108, 122, 125, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 159, 180, 183, 191, 199, 200, 211, 213, 220, 292, 297, 321, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 413, 449, 451, 455, 461, 466, 467, 475], "obtain": [10, 84, 179, 339], "obviou": 10, "occupi": [125, 157], "occur": [20, 44, 56, 62, 68, 89, 93, 154, 182, 214, 227, 292, 420, 435, 464], "occurr": [29, 30, 49, 86, 152, 228, 229, 459], "odd": [10, 108, 111, 115, 116, 117, 119, 120, 122], "off": [21, 182, 187], "offset": [84, 89, 91, 139, 140, 213, 300, 333, 446, 451, 452, 455, 456], "often": 151, "ogrid": [159, 174, 465], "ogridclass": 341, "oil": [359, 376], "omit": [357, 385], "onc": 186, "one": [3, 4, 29, 30, 31, 34, 36, 41, 45, 46, 47, 48, 60, 65, 68, 69, 72, 89, 91, 95, 97, 101, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 130, 131, 132, 135, 136, 140, 144, 148, 153, 154, 156, 159, 164, 174, 184, 188, 191, 201, 202, 204, 213, 215, 216, 219, 220, 221, 222, 228, 229, 235, 237, 297, 305, 308, 339, 341, 343, 346, 349, 376, 418, 423, 430, 434, 435, 438, 440, 444, 448, 451, 452, 455, 456, 459, 466, 475], "oneapi": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "onedpl": 4, "onemkl": [4, 182, 184], "ones": [6, 34, 40, 42, 48, 75, 87, 89, 93, 95, 96, 97, 101, 104, 123, 144, 145, 155, 156, 175, 187, 189, 212, 213, 230, 235, 343, 349, 410, 414, 418, 447, 449, 457, 466, 467], "ones_lik": [6, 34, 96, 145, 342, 467], "onli": [10, 14, 19, 21, 29, 30, 31, 34, 37, 38, 40, 42, 44, 45, 48, 60, 66, 69, 73, 89, 91, 93, 94, 95, 96, 104, 110, 120, 124, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 159, 179, 183, 185, 193, 196, 199, 200, 211, 213, 214, 215, 217, 218, 221, 227, 228, 229, 232, 233, 234, 235, 236, 238, 292, 324, 326, 342, 343, 345, 346, 347, 349, 357, 379, 385, 401, 413, 430, 436, 438, 441, 455, 459, 460, 462, 465, 466, 467, 475], "open": [140, 159, 174, 199, 341, 357, 387, 389, 390, 392, 401, 439], "opencl": [21, 34, 37, 38, 39, 40, 42, 66, 80, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 199, 200, 211, 220, 341, 342, 343, 449, 461, 466, 467], "oper": [10, 13, 50, 51, 52, 53, 87, 91, 93, 94, 97, 101, 124, 134, 137, 149, 150, 161, 176, 177, 178, 179, 207, 209, 214, 215, 221, 223, 226, 227, 228, 229, 337, 340, 347, 348, 352, 411, 415, 437, 445, 457, 459, 460, 468, 479], "operand": [93, 94, 198, 344, 444], "opposit": [10, 91, 103, 111, 116, 346], "optim": [4, 93, 94, 152, 153], "option": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 52, 53, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 183, 185, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 305, 334, 337, 338, 340, 341, 342, 343, 344, 347, 348, 349, 350, 352, 355, 356, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 483], "ord": 191, "order": [10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 84, 86, 87, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 107, 109, 112, 113, 114, 117, 119, 123, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 144, 145, 148, 149, 150, 151, 152, 155, 158, 161, 165, 166, 167, 176, 177, 178, 180, 182, 183, 184, 185, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 219, 222, 223, 225, 226, 246, 291, 292, 297, 305, 315, 318, 323, 326, 334, 337, 338, 339, 340, 342, 343, 345, 347, 348, 350, 355, 356, 406, 409, 411, 413, 415, 416, 421, 422, 425, 426, 427, 428, 430, 432, 433, 437, 442, 443, 444, 447, 457, 458, 459, 461, 465, 466, 467, 479], "ordin": [187, 195], "ordinari": [117, 160, 179], "org": 4, "orient": [74, 353, 441], "origin": [54, 84, 89, 111, 117, 119, 191, 219, 225, 235, 237, 413, 417, 459], "ortho": [10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "orthogon": [184, 193], "orthonorm": 193, "other": [31, 36, 44, 54, 55, 85, 89, 91, 112, 113, 114, 117, 119, 133, 141, 156, 182, 184, 190, 225, 242, 243, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 277, 279, 281, 284, 285, 286, 292, 357, 401, 418, 430, 459, 468, 479], "otherwis": [3, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 78, 79, 80, 85, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 160, 161, 165, 166, 167, 176, 177, 178, 187, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 232, 233, 234, 235, 236, 237, 238, 292, 321, 337, 338, 340, 342, 343, 347, 348, 349, 350, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 416, 421, 422, 425, 426, 427, 428, 430, 432, 433, 434, 436, 437, 438, 442, 443, 446, 457, 458, 462, 465, 466, 467], "otim": 444, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 186, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 293, 294, 297, 298, 299, 305, 309, 310, 311, 316, 322, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 355, 356, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467], "outer": [6, 74, 84, 93, 94, 175], "output": [10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 174, 176, 177, 178, 190, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 226, 229, 230, 231, 233, 235, 236, 237, 238, 292, 297, 337, 338, 340, 341, 342, 343, 347, 348, 349, 350, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 415, 416, 419, 421, 423, 425, 426, 427, 428, 430, 432, 433, 434, 436, 437, 438, 440, 442, 443, 445, 446, 449, 451, 455, 457, 458, 459, 460, 461, 462, 465, 466, 467, 479, 483], "outsid": [152, 153], "over": [10, 14, 19, 48, 75, 76, 77, 88, 89, 93, 94, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 129, 141, 146, 152, 153, 160, 191, 199, 211, 212, 214, 215, 217, 219, 221, 230, 231, 232, 233, 234, 235, 236, 237, 238, 305, 349, 353, 357, 384, 389, 400, 401, 410, 436, 438, 440, 441, 444, 448, 460, 462, 479], "overal": [107, 109, 113, 114, 118, 119, 121, 123], "overflow": 132, "overrid": [74, 96, 145, 343, 467], "overview": 2, "overwrite_input": 218, "p": [10, 180, 187, 188, 359, 362, 367, 373, 376, 460], "pack": [84, 406, 479], "packag": [0, 3], "packbit": 6, "pad": [6, 91, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "page": [3, 479], "pair": [10, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 182], "parallel": [1, 3, 4, 9, 468], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 302, 305, 321, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "parameter": [357, 379, 401], "parametr": 448, "pareto": 6, "pars": [140, 200], "part": [3, 10, 18, 89, 117, 135, 136, 158, 163, 164, 170, 171, 182, 183, 185, 213, 216, 222, 224, 306, 319, 407, 408, 431, 451, 455, 458, 459, 475], "partial": [31, 430], "particular": [91, 190], "particularli": 93, "partit": [6, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 430, 449, 451, 455, 461, 466, 467, 475], "pass": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 153, 156, 159, 174, 187, 200, 213, 220, 227, 297, 321, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 449, 451, 452, 455, 456, 461, 466, 467], "path": [4, 93, 94, 140, 200], "path_info": 94, "pathlib": 200, "pattern": 48, "penros": 192, "per": [93, 108, 122], "percentil": [6, 218], "perf_count": 0, "perform": [14, 19, 38, 39, 60, 85, 93, 107, 109, 112, 113, 114, 118, 119, 121, 123, 129, 179, 349, 438], "period": [10, 460], "permit": 140, "permut": [6, 89, 93, 225, 334, 447, 479], "phase": [10, 18, 460], "phase_deg": 460, "pi": [0, 9, 10, 22, 24, 26, 27, 70, 71, 78, 79, 106, 355, 427, 428, 442, 443, 448, 460, 483], "pickl": [140, 200], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 20, 33, 60, 62, 76, 77, 88, 89, 101, 103, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 138, 159, 162, 214, 215, 217, 221, 227, 230, 231, 233, 235, 236, 237, 238, 305, 324, 326, 334, 341, 349, 352, 353, 394, 413, 417, 419, 430, 435, 436, 438, 440, 446, 462, 475], "platform": [76, 77, 91, 230, 231, 235, 237, 349, 438], "pleas": [0, 3, 93, 152, 475], "plot": 395, "plt": [219, 395], "plu": [201, 202, 204], "point": [10, 11, 12, 18, 21, 27, 33, 37, 38, 48, 67, 75, 91, 95, 96, 100, 104, 105, 106, 111, 112, 116, 117, 118, 119, 120, 125, 126, 132, 139, 140, 141, 143, 144, 145, 148, 156, 158, 187, 188, 199, 200, 205, 206, 212, 217, 227, 233, 236, 238, 338, 342, 343, 357, 386, 398, 407, 409, 410, 419, 421, 422, 436, 448, 449, 462, 466, 467, 479], "pointer": 91, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 33, 50, 51, 52, 53, 57, 58, 63, 64, 67, 70, 71, 78, 79, 87, 89, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 222, 223, 226, 337, 338, 340, 347, 348, 350, 355, 356, 357, 384, 409, 411, 415, 416, 419, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 457, 458], "portion": [152, 153], "posinf": 227, "posit": [6, 10, 14, 15, 19, 21, 33, 37, 38, 39, 57, 67, 83, 84, 89, 101, 104, 105, 107, 109, 112, 113, 114, 117, 120, 122, 125, 132, 140, 162, 165, 166, 167, 168, 169, 179, 188, 197, 225, 227, 232, 234, 237, 315, 329, 337, 359, 383, 417, 418, 419, 421, 423, 432, 433, 446, 447], "possess": 182, "possibl": [10, 43, 44, 46, 47, 89, 93, 94, 101, 135, 136, 148, 152, 213, 292, 321, 413, 434, 439, 440, 441, 447], "possibli": 41, "pow": 475, "power": [6, 10, 100, 106, 132, 188, 433, 461], "pre": 153, "precis": [11, 12, 48, 76, 77, 91, 93, 125, 132, 158, 187, 213, 230, 231, 235, 237, 349, 407, 438, 446], "predecessor": 460, "prefer": [59, 66, 89, 297, 324, 339], "prepend": [85, 92, 445], "present": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 156, 159, 200, 213, 220, 232, 234, 237, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 449, 451, 455, 461, 466, 467], "preserv": [44, 45, 46, 47, 60, 89, 91, 93, 129, 130, 131, 132, 183, 184, 185, 292, 446, 459], "press": 10, "prevent": 93, "previou": 48, "print": [0, 4, 39, 48, 49, 65, 86, 91, 94, 357, 376, 381], "print_device_info": 0, "printabl": 94, "printopt": 6, "prior": 85, "prob1": [205, 206], "prob12": [205, 206], "prob2": [205, 206], "probabl": [152, 206, 359, 367, 376], "proce": 475, "process": 10, "processor": 93, "prod": [6, 76, 89, 197, 198, 235, 475], "produc": [10, 32, 91, 200, 353, 422, 441], "product": [6, 74, 76, 88, 89, 93, 94, 160, 174, 175, 190, 195, 197, 198, 214, 226, 230, 235, 298, 344, 349, 444, 463, 479], "program": [4, 133], "progress": [146, 199], "project": [91, 350], "promot": [13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 40, 42, 50, 52, 53, 56, 57, 67, 70, 71, 78, 79, 87, 99, 100, 102, 132, 134, 135, 136, 137, 146, 155, 176, 199, 201, 202, 203, 204, 205, 206, 211, 214, 216, 222, 223, 226, 338, 348, 355, 356, 409, 411, 414, 415, 421, 425, 427, 428, 432, 433, 437, 442, 443, 445, 457, 458], "promote_typ": 6, "propag": [91, 135, 136, 215, 216, 221, 222, 230, 231, 232, 234, 235, 237], "proper": [135, 136, 182, 184], "properti": [10, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 183, 185, 193, 199, 200, 211, 213, 220, 240, 292, 297, 301, 303, 304, 306, 308, 312, 313, 319, 324, 325, 329, 334, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467, 475], "protocol": [41, 91, 138], "prototyp": 96, "provid": [0, 6, 10, 29, 30, 62, 68, 75, 89, 93, 94, 101, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 142, 152, 153, 154, 168, 169, 212, 228, 229, 232, 234, 235, 237, 357, 385, 388, 410, 420, 435, 440, 448, 459, 464, 465, 483], "pseudo": [192, 357], "ptp": 6, "pure": [10, 111, 117, 119, 120], "purpos": [32, 187], "put": [6, 10, 89, 103, 111, 117, 119, 346, 353, 441, 475], "put_along_axi": [6, 352, 441], "putmask": [6, 352], "pval": 374, "py": 4, "pypi": 4, "pyplot": [219, 395], "pytest": 4, "python": [0, 2, 3, 41, 89, 91, 137, 138, 223, 307, 411, 412, 475], "q": [184, 188, 193, 198, 218], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [18, 26, 107], "quantil": 6, "quaternion": 188, "question": 80, "queue": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "quick": [2, 3], "quickli": [174, 483], "quotient": 27, "r": [79, 193], "r2": 193, "rad": 79, "rad2deg": [6, 78, 79, 460], "radian": [6, 18, 22, 23, 24, 26, 27, 78, 79, 355, 460, 483], "rais": [11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 66, 67, 68, 70, 71, 75, 78, 79, 86, 87, 88, 89, 95, 96, 97, 99, 100, 102, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 161, 165, 166, 167, 176, 177, 178, 188, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 221, 222, 223, 226, 228, 229, 232, 233, 234, 236, 237, 238, 292, 293, 337, 338, 340, 342, 343, 347, 348, 349, 350, 355, 356, 409, 410, 411, 413, 415, 416, 421, 425, 426, 427, 428, 430, 432, 433, 434, 436, 437, 438, 442, 443, 457, 458, 462, 466, 467, 475], "rand": [6, 94, 357, 387, 389, 390, 392], "randint": [6, 89, 307, 357, 388], "randn": [6, 129, 130, 131, 192, 193, 196, 198, 357, 435], "random": [89, 94, 129, 130, 131, 184, 190, 192, 193, 196, 198, 307, 435, 468, 479], "random_integ": [6, 357, 385], "random_sampl": [6, 357, 384, 387, 390, 392], "randomli": 381, "randomst": 385, "ranf": 6, "rang": [0, 86, 142, 152, 153, 206, 351, 352, 376, 381, 412, 435, 444, 447, 460, 479], "rank": [101, 103, 141, 187, 189, 439], "rate": [108, 122], "rather": 339, "ratio": [0, 87, 134, 187, 457, 483], "ration": 479, "ravel": [6, 89, 103, 128, 191, 305, 344, 475], "ravel_multi_index": 6, "raw": 193, "rayleigh": 6, "rcond": [187, 192], "re": [29, 30, 49, 80, 417], "read": [80, 84, 89, 91, 139, 140, 142, 143, 200, 305, 406, 413], "readonli": 91, "real": [6, 11, 12, 18, 21, 27, 35, 57, 58, 67, 75, 89, 106, 109, 111, 116, 117, 118, 119, 120, 121, 123, 125, 133, 135, 136, 137, 155, 158, 163, 170, 171, 179, 182, 183, 184, 185, 189, 192, 193, 194, 196, 205, 206, 212, 216, 222, 223, 227, 236, 238, 359, 376, 408, 409, 410, 411, 421, 431, 436, 458, 459, 462, 475, 479], "real_if_clos": [6, 18, 158, 407], "rearrang": [89, 315, 479], "reason": 119, "rebuild": 90, "recal": 91, "recent": [20, 434], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 421, 432], "recommend": [93, 339, 445], "reconstruct": [91, 196, 459], "recov": 10, "reduc": [14, 19, 29, 30, 48, 193, 196, 212, 215, 217, 219, 221, 228, 229, 232, 233, 234, 235, 236, 237, 238, 349, 410, 436, 438, 462], "reduce_hypot": 155, "reduct": [14, 19], "redund": 120, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475], "reflect": 475, "reflector": 193, "regardless": [91, 183, 185], "regular": 200, "rel": [15, 89, 162, 329, 417, 418], "relat": 91, "relev": [91, 146, 199, 211], "rem": 137, "remain": [14, 19, 48, 94, 121, 123, 152, 212, 217, 225, 233, 236, 238, 410, 413, 436, 462], "remaind": [6, 134, 137, 223, 348], "remov": [29, 30, 78, 84, 89, 101, 117, 327, 349, 355, 434, 438, 479], "reorder": [93, 129, 198, 225], "rep": 445, "repeat": [6, 89, 107, 109, 113, 114, 118, 119, 121, 123, 124, 182, 183, 184, 185, 219, 346, 445, 448, 459, 475], "repeatedli": 93, "repetit": [0, 412, 445], "replac": [3, 10, 41, 60, 103, 227, 230, 231, 346, 353, 362, 423, 475], "replic": 445, "repo": 4, "repr": 280, "repres": [10, 21, 34, 37, 38, 40, 41, 42, 48, 91, 94, 112, 120, 138, 141, 146, 148, 159, 194, 199, 211, 219, 238, 357, 453, 475], "represent": [50, 52, 53, 94, 125, 157, 159, 227, 338, 459, 475], "request": 418, "requir": [4, 6, 34, 38, 39, 40, 42, 44, 89, 91, 93, 105, 159, 227, 292, 324], "res_cpu": 80, "res_host": 80, "resampl": 117, "rese": 393, "reset": 475, "reshap": [0, 6, 13, 29, 30, 32, 45, 47, 48, 80, 81, 82, 84, 87, 88, 89, 90, 93, 101, 103, 110, 115, 129, 137, 159, 160, 174, 175, 191, 213, 214, 215, 221, 226, 300, 305, 324, 334, 346, 381, 406, 417, 437, 444, 446, 448, 451, 452, 455, 456, 457, 459, 475], "resid": [101, 105, 138], "residu": 187, "resiz": [6, 101, 475], "resolut": 125, "resolv": [75, 101, 212, 410], "resourc": 0, "respect": [10, 13, 27, 50, 52, 53, 87, 89, 97, 132, 134, 137, 148, 149, 150, 176, 177, 178, 205, 206, 207, 209, 210, 223, 226, 329, 340, 348, 411, 415, 437, 457, 460], "restor": 417, "result": [0, 4, 10, 14, 19, 27, 29, 30, 32, 48, 50, 51, 52, 53, 56, 60, 62, 67, 72, 75, 76, 77, 87, 88, 91, 94, 96, 97, 102, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 132, 134, 139, 140, 141, 142, 143, 145, 146, 149, 150, 152, 153, 159, 161, 165, 166, 167, 168, 169, 176, 177, 178, 179, 182, 191, 193, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 221, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 339, 340, 343, 344, 348, 349, 352, 357, 359, 389, 410, 413, 414, 415, 416, 418, 419, 422, 425, 426, 435, 436, 438, 440, 441, 444, 445, 448, 453, 457, 458, 459, 462, 465, 467, 475], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 56, 91, 479], "ret": 356, "retriev": [84, 91], "retstep": 199, "returnreturn_count": 459, "return_index": 459, "return_invers": 459, "reus": [138, 153, 413], "revers": [84, 89, 124, 129, 130, 131, 334, 447, 448, 461], "rewrit": 187, "rfft": [6, 10, 108, 111, 116, 117, 118, 119, 121, 122, 123], "rfft2": [6, 118], "rfftfreq": [6, 108], "rfftn": [6, 106, 109, 119, 120, 121], "right": [10, 60, 74, 84, 86, 130, 131, 155, 176, 182, 183, 184, 185, 190, 198, 213, 400, 410, 415, 422, 446, 448, 451, 455, 461], "right_shift": [6, 176], "rightmost": [152, 153, 198], "rint": [6, 33, 58, 126, 133, 419, 458], "roll": [6, 418], "rollaxi": [6, 417], "root": [6, 57, 155, 180, 409, 410, 421, 432, 433], "rot90": 6, "roughli": [91, 187], "round": [6, 21, 33, 58, 89, 126, 133, 134, 182, 223, 411, 416, 458, 475, 479], "round_": 6, "roundoff": [111, 116], "routin": [2, 468, 475], "row": [42, 44, 61, 62, 76, 77, 84, 89, 90, 104, 130, 131, 148, 154, 156, 159, 190, 196, 292, 339, 406, 420, 435, 449, 451, 459, 464], "row_stack": [6, 464], "rowvar": 73, "rsqrt": [409, 432], "rtol": [15, 162], "rule": [13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 40, 42, 48, 50, 52, 53, 56, 57, 67, 68, 70, 71, 74, 77, 78, 79, 87, 99, 100, 102, 134, 135, 136, 137, 146, 155, 176, 199, 201, 202, 203, 204, 205, 206, 211, 212, 214, 216, 217, 222, 223, 226, 233, 236, 238, 338, 348, 355, 356, 409, 410, 411, 414, 415, 421, 425, 427, 428, 432, 433, 436, 437, 438, 442, 443, 448, 457, 458, 462], "run": [0, 4], "runtim": 4, "runtimewarn": [232, 234], "s1": [89, 91, 175, 329], "s10": 91, "s16": 91, "s2": [89, 91, 329], "s25": 91, "s3": [89, 329], "safe": [44, 56, 62, 68, 89, 93, 154, 214, 292, 420, 435, 464], "safe_ev": 6, "said": 198, "same": [4, 10, 11, 12, 13, 14, 15, 19, 20, 27, 29, 30, 31, 32, 33, 35, 36, 40, 42, 43, 44, 48, 50, 51, 52, 53, 55, 61, 62, 67, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 96, 97, 101, 103, 112, 113, 114, 119, 124, 126, 132, 134, 135, 136, 137, 138, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 168, 169, 170, 175, 176, 177, 178, 184, 188, 193, 205, 206, 207, 209, 210, 212, 215, 216, 217, 221, 222, 223, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 321, 334, 338, 340, 343, 346, 348, 349, 353, 357, 379, 385, 401, 406, 407, 410, 411, 412, 415, 417, 418, 420, 422, 423, 430, 434, 435, 436, 437, 438, 440, 441, 444, 446, 450, 452, 454, 456, 457, 462, 463, 464, 467, 483], "same_kind": [44, 56, 62, 68, 89, 93, 154, 214, 292, 420, 435, 464], "sampl": [10, 108, 115, 120, 122, 146, 148, 152, 199, 211, 353, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 441, 448, 451, 455, 468, 479], "sample_r": 122, "satisfi": [34, 38, 40, 42, 44, 89, 103, 186, 292, 346, 423], "save": [6, 140, 483], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 20, 27, 34, 35, 36, 37, 38, 40, 41, 42, 50, 52, 53, 56, 66, 67, 68, 74, 80, 83, 85, 87, 88, 89, 91, 93, 94, 97, 103, 108, 122, 124, 132, 134, 135, 136, 137, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 160, 162, 164, 171, 172, 175, 176, 177, 178, 195, 199, 205, 206, 207, 209, 210, 211, 213, 214, 216, 219, 222, 223, 226, 302, 307, 336, 338, 340, 346, 348, 352, 353, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 385, 388, 391, 393, 397, 399, 400, 401, 402, 403, 404, 405, 408, 411, 415, 422, 423, 437, 440, 444, 448, 457, 458, 461, 463, 465, 475], "scale": [10, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 146, 175, 193, 199, 211, 357, 364, 366, 368, 369, 370, 371, 379, 391, 396, 403], "scientif": 10, "scipi": 98, "scope": 4, "script": 4, "sctype2char": 6, "search": [94, 468, 479], "searchsort": [6, 86, 89, 152, 430, 475], "second": [13, 15, 27, 35, 36, 48, 50, 52, 53, 67, 74, 84, 87, 88, 91, 94, 97, 100, 107, 108, 109, 110, 113, 114, 117, 120, 122, 132, 134, 135, 136, 137, 148, 149, 150, 152, 153, 154, 155, 160, 162, 175, 176, 177, 178, 205, 206, 207, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 226, 340, 344, 348, 411, 415, 433, 437, 439, 444, 446, 457, 463], "section": [4, 91, 109, 114, 119, 123, 475], "see": [3, 33, 91, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 138, 152, 187, 374, 419, 451, 452, 455, 456, 459, 475], "seed": [6, 89, 94, 307, 357], "seek": 140, "seldom": 132, "select": [6, 68, 103, 215, 221, 434, 440, 448, 468], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "self": [89, 91, 127, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 304, 357], "semant": 152, "sens": 198, "sep": [140, 143], "separ": [10, 89, 91, 93, 140, 143, 153, 227, 321], "sequenc": [41, 45, 46, 47, 61, 62, 65, 69, 90, 93, 94, 95, 96, 107, 109, 113, 114, 117, 118, 119, 121, 123, 144, 145, 146, 152, 153, 154, 159, 174, 190, 199, 211, 225, 342, 343, 346, 381, 394, 412, 414, 420, 435, 444, 448, 464, 466, 467], "sequenti": [69, 73, 98, 218, 224, 235], "seri": [10, 117, 373], "set": [10, 29, 30, 34, 44, 59, 72, 80, 81, 83, 86, 89, 91, 93, 95, 144, 152, 153, 156, 159, 189, 191, 192, 199, 215, 221, 228, 229, 237, 282, 292, 293, 304, 324, 342, 343, 349, 423, 425, 426, 438, 451, 455, 466, 467, 475], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 91], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 186, "sh": [89, 321], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 40, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 132, 133, 134, 135, 136, 137, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 181, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 313, 321, 325, 327, 334, 336, 337, 338, 340, 341, 342, 343, 347, 348, 349, 350, 352, 353, 355, 356, 357, 366, 369, 374, 375, 380, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 404, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 449, 450, 452, 454, 455, 456, 457, 458, 462, 464, 465, 466, 467, 468, 479], "share": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 449, 451, 455, 461, 466, 467], "shared_bin": 153, "shares_memori": 6, "shift": [10, 107, 109, 110, 114, 115, 176, 415, 417], "short": [458, 475], "shorter": [111, 117], "shorthand": [11, 12, 13, 50, 51, 52, 53, 87, 97, 134, 149, 150, 161, 176, 177, 178, 207, 209, 214, 223, 226, 337, 340, 347, 348, 411, 415, 437, 457, 465], "should": [29, 30, 44, 84, 86, 88, 89, 93, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 137, 140, 147, 152, 174, 187, 188, 214, 225, 228, 229, 232, 234, 292, 323, 374, 413, 422, 440, 444, 446, 460, 475], "show": [9, 36, 91, 124, 155, 210, 219, 227, 230, 231, 232, 234, 237, 395], "show_config": 6, "shown": 4, "shuffl": 6, "side": [89, 148, 184, 323, 422], "sigma": [372, 379], "sign": [6, 10, 15, 67, 91, 162, 181, 194, 223, 337, 347, 349, 411, 426, 438, 458], "signal": [10, 108, 111, 116, 117, 119, 122, 460], "signatur": [213, 214], "signbit": [6, 425], "signific": 93, "signum": 425, "similar": [3, 37, 38, 89, 91, 146, 199, 211, 213, 297, 324, 346, 357, 385, 451, 452, 455, 456], "simpl": [4, 210, 479], "simpli": [82, 89, 140, 152, 153, 334], "sin": [0, 6, 24, 70, 184, 219, 428, 442, 448], "sinc": [6, 89, 117, 182, 184, 326, 339], "sine": [22, 23, 24, 25, 26, 27, 28, 70, 71, 427, 428, 442, 443], "singl": [9, 10, 31, 55, 61, 89, 93, 94, 148, 190, 215, 221, 327, 349, 357, 376, 385, 386, 387, 388, 389, 390, 392, 398, 438, 448, 475], "singleton": [14, 19, 48, 101, 212, 217, 232, 233, 234, 236, 238, 410, 434, 436, 462], "singular": [186, 187, 189, 192, 196], "sinh": [6, 25, 71, 427, 443], "size": [0, 6, 21, 29, 30, 34, 48, 62, 69, 72, 73, 76, 77, 81, 86, 89, 91, 94, 103, 106, 108, 112, 122, 140, 146, 148, 154, 191, 193, 196, 199, 211, 213, 215, 217, 221, 228, 229, 230, 231, 233, 235, 237, 307, 308, 324, 342, 346, 349, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 417, 420, 434, 435, 438, 444, 455, 460, 464, 466], "skip": 84, "slice": [103, 228, 229, 232, 233, 234, 236, 238, 352, 353, 423, 441, 448, 455, 456, 475], "slogdet": [6, 181], "slower": 444, "slowest": [89, 305, 406, 413], "small": [15, 102, 162, 187, 192, 203, 205, 206, 227, 455], "smaller": [85, 89, 106, 107, 109, 112, 113, 114, 116, 118, 119, 120, 121, 123, 125, 187, 223, 315, 346, 411, 460], "smallest": [125, 157, 459], "smallest_norm": 125, "smat": 196, "so": [10, 14, 19, 48, 91, 97, 111, 116, 132, 152, 171, 199, 206, 212, 217, 219, 233, 236, 238, 395, 410, 436, 444, 445, 462], "softwar": 4, "solut": [187, 195], "solv": [6, 187, 197, 198, 479], "some": [21, 91, 101, 103, 133, 160, 187, 346, 460, 465, 475], "sometim": [151, 475], "sometru": 6, "somewhat": 188, "sophist": 188, "sort": [6, 31, 89, 196, 291, 315, 422, 431, 441, 447, 448, 459, 468, 475, 479], "sort_complex": 6, "sorter": [89, 323, 422], "sought": 180, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 59, 60, 61, 62, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 211, 212, 213, 214, 215, 217, 218, 219, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 336, 339, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 413, 414, 417, 418, 422, 423, 424, 429, 430, 431, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467], "space": [6, 21, 108, 110, 122, 140, 146, 148, 199, 211, 448, 483], "spars": [159, 219], "special": [2, 91, 98, 468, 479], "specif": [0, 4, 91, 141], "specifi": [14, 19, 20, 21, 29, 30, 31, 33, 34, 37, 38, 39, 40, 42, 48, 55, 56, 62, 66, 75, 76, 77, 80, 83, 84, 89, 93, 94, 95, 96, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 129, 132, 139, 140, 141, 142, 144, 145, 146, 148, 156, 183, 185, 191, 197, 198, 199, 200, 211, 212, 217, 218, 220, 230, 231, 233, 235, 236, 237, 238, 291, 300, 341, 342, 343, 346, 349, 352, 353, 357, 370, 380, 398, 406, 410, 417, 418, 419, 423, 429, 435, 436, 438, 440, 441, 444, 446, 447, 448, 449, 459, 461, 462, 466, 467], "spectrum": [10, 110, 111, 115, 116], "speed": 93, "speedup": 94, "spell": 339, "split": [6, 62, 90, 154, 420, 435, 464, 479], "spreadsheet": 133, "sqrt": [6, 10, 57, 89, 306, 319, 410, 421, 433], "squar": [6, 57, 155, 156, 179, 180, 182, 183, 184, 186, 187, 188, 194, 197, 198, 213, 236, 238, 361, 377, 409, 410, 421, 423, 432, 436, 452, 456, 461, 462], "squeez": [6, 89, 101, 475], "src": 68, "stabl": [31, 430], "stack": [6, 61, 62, 90, 154, 181, 189, 192, 193, 194, 214, 339, 420, 441, 464], "stand": 148, "standard": [89, 125, 134, 137, 217, 223, 233, 236, 238, 307, 328, 357, 372, 379, 386, 395, 396, 397, 398, 399, 411, 436, 462, 475, 479], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 357, 386], "standard_t": 6, "start": [2, 3, 21, 40, 42, 94, 108, 112, 122, 139, 146, 199, 211, 213, 418, 451, 455], "start_tim": 0, "state": 357, "statist": [468, 479], "std": [6, 89, 217, 233, 236, 238, 462, 475], "stdev": [357, 398], "step": [4, 21, 94, 146, 151, 199, 211], "sticki": 91, "still": 48, "stop": [21, 146, 199, 211], "store": [126, 146, 168, 169, 199, 206, 211, 214, 344], "str": [39, 41, 62, 91, 93, 94, 140, 143, 154, 200, 283, 420, 435, 453, 464], "str_": 91, "straightforward": 159, "stride": [43, 44, 89, 292], "string": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 453, 455, 461, 466, 467, 475], "string_repr": 94, "stringio": 200, "strongli": [4, 445], "struct": 91, "structur": [91, 200], "student": 399, "style": [44, 89, 292, 339, 406], "sub": [62, 84, 91, 93, 154, 198, 420, 435, 446, 449, 464], "subarrai": [91, 159, 459], "subclass": 38, "subdivid": 91, "subdtyp": 91, "subok": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 96, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 222, 223, 226, 292, 337, 338, 340, 343, 347, 348, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 432, 433, 437, 442, 443, 457, 458, 467], "subscript": [93, 94], "subset": [3, 148, 434, 479], "subtract": 6, "subtyp": 406, "succeed": 92, "success": [39, 359, 367, 376], "sugar": [82, 452, 456], "suggest": 84, "suit": 4, "suitabl": [32, 89, 334, 353, 422, 441], "sum": [0, 3, 4, 6, 10, 13, 48, 75, 77, 80, 83, 84, 85, 88, 89, 93, 112, 152, 155, 160, 180, 187, 197, 205, 206, 212, 214, 230, 231, 237, 299, 333, 359, 374, 376, 410, 444, 446, 448, 475, 479], "sum_": 10, "sum_along_diagon": 446, "sum_of_weight": 48, "summari": 468, "summat": [88, 93, 94, 160, 198, 214, 344, 444], "suppli": [111, 116, 190, 357, 386], "support": [3, 9, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 67, 69, 70, 71, 73, 78, 79, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 161, 165, 166, 167, 176, 177, 178, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 232, 233, 234, 235, 236, 237, 238, 292, 324, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 411, 413, 415, 421, 425, 426, 427, 430, 432, 433, 436, 437, 438, 442, 443, 457, 458, 462, 466, 467, 483], "surnam": 91, "surpris": [112, 113, 114], "svd": [6, 180, 186, 189, 192], "swap": [91, 107, 110, 439], "swapax": [6, 89, 225, 475], "swapped_cod": 91, "swapped_dt": 91, "sy": 91, "sycl": [0, 3, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "sycl_context": 89, "sycl_devic": 89, "sycl_queu": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "sycldevic": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "syclqueu": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 292, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 449, 451, 455, 461, 466, 467], "symmetr": [111, 117, 119, 120, 179, 182, 183, 184, 185, 189, 192, 196], "symmetri": [10, 106, 111, 116, 117, 120], "syntact": [82, 452, 456], "syntax": 475, "sys_is_l": 91, "system": [3, 4, 195], "t": [10, 62, 73, 89, 91, 111, 179, 182, 184, 187, 334, 339, 399, 448], "t1": 483, "tabl": [2, 9, 468], "tack": 91, "take": [6, 61, 89, 103, 174, 213, 346, 353, 413, 422, 423, 441, 459, 460, 475, 483], "take_along_axi": [6, 29, 30, 31, 59, 353, 440], "taken": [48, 84, 85, 92, 94, 111, 117, 118, 119, 120, 121, 123, 151, 152, 214, 236, 238, 423, 436, 446, 449, 451, 455, 462, 463], "tall": 124, "tan": [6, 26, 27, 70, 427, 443], "tangent": [18, 22, 23, 24, 25, 26, 27, 28, 70, 71, 427, 428, 442, 443], "tanh": [6, 28, 71, 428, 442], "target": [44, 56, 89, 292, 352], "target_devic": 89, "tau": 193, "tbb": 4, "tempfil": 140, "temporari": [140, 483], "temporaryfil": 140, "ten": 367, "tensor": [41, 89, 93, 94, 138, 197, 198, 228, 229, 232, 234, 235, 351, 444], "tensordot": [6, 88, 93, 160, 197, 198, 214, 344], "tensorinv": [6, 198], "tensorsolv": [6, 197], "term": [10, 13, 87, 94, 106, 107, 109, 112, 113, 114, 117, 120, 226, 437, 457], "test": [0, 2, 14, 15, 19, 97, 149, 150, 163, 165, 166, 167, 168, 169, 177, 178, 235, 339, 340, 359, 475, 479], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [139, 140, 142, 143, 200], "th": [77, 80, 83, 85, 89, 92, 104, 148, 159, 218, 334, 341, 423, 447, 450, 452, 454, 456], "than": [34, 76, 77, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 130, 131, 134, 141, 149, 150, 152, 153, 154, 176, 177, 178, 187, 189, 192, 193, 230, 231, 235, 237, 315, 339, 346, 349, 415, 423, 425, 434, 435, 438, 444, 446, 458, 460, 475, 483], "thei": [15, 36, 91, 162, 184, 187, 420, 422, 444, 448, 451, 455, 460, 461, 464, 475], "them": [61, 475], "theor": 182, "theoret": 94, "therefor": [106, 120, 141, 183, 185], "theta": 448, "thi": [10, 11, 12, 16, 17, 20, 21, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 60, 62, 66, 72, 75, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 131, 132, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 164, 171, 174, 183, 185, 187, 190, 191, 194, 199, 200, 203, 205, 206, 211, 212, 213, 214, 215, 221, 223, 225, 227, 228, 229, 232, 234, 235, 237, 292, 297, 302, 305, 315, 321, 334, 339, 346, 349, 352, 353, 390, 392, 406, 410, 411, 413, 418, 420, 435, 438, 440, 441, 445, 448, 452, 456, 459, 460, 461, 464, 465], "thing": 440, "third": [61, 62, 90, 107, 154, 420, 435, 464], "those": [10, 60, 188, 353], "though": 112, "thousand": 367, "three": [45, 46, 47, 101, 188, 213, 357, 393, 444, 459], "threshold": 189, "through": [38, 91, 153, 174, 182, 184, 187, 213, 475], "throw": 374, "thu": [10, 111, 117, 119, 445], "tile": [6, 412, 479], "time": [0, 10, 13, 15, 27, 35, 36, 50, 52, 53, 67, 85, 87, 88, 97, 107, 109, 111, 113, 114, 116, 118, 119, 121, 123, 132, 134, 135, 136, 137, 149, 150, 151, 155, 160, 162, 167, 175, 176, 177, 178, 187, 205, 206, 207, 209, 210, 216, 222, 223, 226, 338, 340, 348, 359, 374, 411, 415, 437, 441, 444, 445, 457, 459, 463], "time_dpnp": 0, "time_numpi": 0, "timedelta": 91, "timeit": 93, "timestep": 108, "tini": 125, "titl": 91, "tm": 137, "to_begin": 92, "to_devic": 89, "to_end": 92, "tobyt": 6, "todo": 377, "tofil": [6, 140], "togeth": [15, 62, 91, 112, 162, 174, 435, 465], "tol": [189, 375, 408], "toler": [15, 35, 162, 408], "tolist": 6, "too": [4, 107, 109, 113, 114, 118, 119, 121, 123, 465], "toolkit": 3, "tostr": 6, "total": [6, 72, 76, 89, 312, 429, 436, 462], "toward": [33, 58, 126, 133, 134, 152, 153, 223, 338, 411, 416, 419, 458], "trace": [6, 80, 83, 84, 89, 93, 475], "traceback": [20, 434], "trail": 453, "transfer": 89, "transform": [94, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 468], "transpos": [6, 32, 89, 93, 179, 184, 225, 240, 475, 479], "trapezoid": [77, 438], "trapz": 6, "treat": [15, 111, 117, 119, 140, 148, 162, 183, 185, 187, 190, 200, 230, 231, 235, 237, 349, 353, 422, 441, 445, 459, 460, 475], "tri": 6, "trial": 359, "triangl": [80, 155, 213, 410, 449, 450, 451, 452, 454, 455, 456], "triangular": [6, 179, 183, 185, 193, 213, 451, 452, 455, 456], "trigonometr": [18, 22, 23, 24, 25, 26, 27, 28, 70, 71, 427, 428, 442, 443, 479], "tril": [6, 80, 213, 449, 451, 452, 455], "tril_indic": [6, 213, 452, 455], "tril_indices_from": [6, 456], "trili": 452, "trili1": 452, "trim": [107, 109, 113, 114, 118, 119, 121, 123, 453], "trim_zero": 6, "triu": [6, 80, 213, 449, 451, 455, 456], "triu_indic": [6, 213, 451, 456], "triu_indices_from": [6, 452], "triui": 456, "triuim1": 456, "trivial": [182, 441], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 38, 40, 42, 44, 45, 48, 50, 51, 52, 53, 56, 57, 58, 63, 64, 66, 67, 68, 70, 71, 72, 73, 77, 78, 79, 86, 87, 89, 91, 93, 94, 97, 99, 100, 101, 102, 103, 105, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 146, 149, 150, 151, 152, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 189, 191, 192, 193, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 244, 287, 288, 292, 297, 309, 310, 311, 316, 328, 330, 335, 337, 338, 339, 340, 346, 347, 348, 349, 350, 353, 355, 356, 362, 409, 410, 411, 413, 415, 416, 421, 423, 425, 426, 427, 428, 432, 433, 436, 437, 438, 441, 442, 443, 444, 448, 457, 458, 459, 461, 462, 465], "true_divid": [6, 87], "trunc": [6, 33, 58, 126, 133, 416, 419], "truncat": [33, 58, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 133, 395, 416, 419, 458], "trust": [228, 229], "truth": [50, 51, 52, 53, 97, 149, 150, 161, 177, 178, 207, 208, 209, 210, 340, 475, 479], "try": [4, 39], "tukei": 10, "tup": [61, 90, 154, 420, 464], "tupl": [14, 19, 20, 29, 30, 34, 37, 38, 39, 40, 42, 48, 55, 66, 72, 75, 80, 81, 82, 83, 89, 91, 94, 101, 110, 115, 129, 138, 141, 144, 145, 146, 148, 152, 153, 159, 164, 171, 174, 175, 191, 193, 198, 199, 211, 212, 213, 214, 215, 217, 219, 220, 221, 232, 233, 234, 235, 236, 237, 238, 324, 334, 339, 341, 349, 410, 412, 413, 417, 424, 434, 436, 438, 445, 447, 451, 452, 455, 456, 461, 462, 475], "turn": 61, "twister": 357, "two": [10, 15, 35, 45, 46, 50, 51, 52, 53, 65, 69, 74, 83, 84, 85, 88, 89, 91, 93, 94, 101, 106, 107, 109, 112, 113, 114, 117, 118, 119, 121, 123, 135, 136, 148, 160, 161, 162, 175, 183, 187, 190, 195, 207, 209, 210, 214, 215, 216, 221, 222, 225, 232, 234, 315, 331, 344, 357, 386, 416, 419, 423, 439, 444, 446, 451, 452, 455, 456, 463], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 301, 305, 313, 321, 325, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 479], "type_nam": 0, "typeerror": [48, 68, 89, 138, 324], "typenam": 6, "typestr": 91, "typic": [15, 111, 162, 422, 475], "u": [91, 179, 183, 185, 196, 213, 235, 237, 459], "u1": [91, 139, 140], "u16": 91, "u4": 56, "u8": 91, "ufunc": [2, 468, 475], "uint64": 91, "uint8": [91, 139, 140], "uk": 10, "un": 91, "unari": 475, "unchang": 123, "undefin": [18, 89, 315], "underli": [50, 52, 53, 413], "undo": [10, 114], "undocu": 91, "unexpect": [235, 237], "unicod": 91, "uniform": [6, 91, 148, 152, 153, 211, 357, 384, 387, 389, 390, 392], "uniformli": [211, 357, 401], "uniniti": [34, 95, 96, 144, 342, 466], "union1d": 6, "uniqu": [6, 48, 49, 75, 86, 91, 212, 217, 225, 233, 236, 238, 410, 412, 436, 462], "unique_count": 459, "unique_indic": 459, "unique_invers": 459, "unit": [89, 108, 122, 174, 182, 188, 194, 329], "unitari": [10, 148, 193, 196], "uniti": 152, "univ": 10, "univers": [2, 468, 475], "unless": [14, 19, 44, 76, 77, 89, 93, 152, 182, 189, 191, 211, 230, 231, 235, 237, 292, 349, 438, 459], "unlik": [31, 89, 122, 321, 324, 430], "unmodifi": 153, "unpackbit": 6, "unravel_index": [6, 29, 30], "unsaf": [44, 56, 62, 68, 89, 93, 154, 214, 292, 420, 435, 464], "unscal": 10, "unsign": [91, 349, 438], "unspecifi": 413, "unsupport": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 57, 58, 60, 67, 70, 71, 78, 79, 87, 99, 100, 102, 132, 133, 134, 135, 136, 137, 138, 151, 155, 161, 176, 202, 203, 204, 205, 206, 216, 222, 223, 224, 226, 337, 338, 347, 348, 350, 355, 356, 409, 411, 415, 416, 421, 425, 426, 427, 428, 437, 442, 443, 457, 458], "until": [94, 417, 418], "unwrap": [6, 78, 355], "up": [4, 10, 91, 93, 131, 441, 452, 459], "updat": 4, "uplo": [183, 185], "upon": [89, 329], "upper": [80, 104, 152, 153, 179, 183, 185, 193, 213, 449, 451, 452, 454, 455, 456], "url": 4, "us": [4, 10, 13, 20, 21, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 56, 60, 62, 66, 74, 76, 77, 80, 81, 83, 84, 87, 89, 91, 93, 94, 95, 96, 97, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 160, 161, 174, 176, 177, 178, 179, 180, 183, 184, 185, 187, 189, 190, 191, 192, 199, 200, 206, 207, 209, 211, 213, 214, 215, 217, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 246, 292, 297, 305, 324, 337, 339, 340, 341, 342, 343, 346, 347, 348, 349, 353, 357, 360, 362, 363, 373, 378, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 398, 401, 406, 408, 411, 412, 413, 415, 417, 422, 423, 425, 431, 436, 437, 438, 440, 441, 444, 445, 446, 448, 449, 451, 452, 455, 456, 457, 459, 461, 462, 465, 466, 467, 475, 483], "usabl": 132, "usag": [3, 4, 108, 122], "use_getitem": 91, "use_setitem": 91, "user": [91, 227], "usm": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 434, 449, 451, 455, 461, 466, 467], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 336, 337, 338, 339, 340, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467], "usm_typ": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 199, 200, 211, 213, 220, 297, 341, 342, 343, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 449, 451, 455, 461, 466, 467], "usual": [81, 89, 91, 214, 324], "util": 468, "v": [65, 80, 83, 89, 91, 182, 183, 323, 352, 422], "v0": 6, "v1": 6, "v10": 91, "v9": 6, "val": [89, 124, 127, 282, 317, 346], "valid": [69, 101, 213, 439, 451, 452, 455, 456], "valu": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 85, 86, 87, 89, 91, 93, 95, 96, 97, 99, 100, 102, 103, 104, 105, 111, 112, 117, 119, 120, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 242, 243, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 277, 279, 281, 282, 284, 285, 286, 289, 290, 292, 294, 297, 302, 304, 315, 317, 324, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 367, 384, 385, 401, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 422, 423, 425, 426, 427, 430, 432, 433, 436, 437, 438, 440, 441, 442, 443, 446, 448, 451, 455, 457, 458, 459, 460, 462, 465, 466, 467, 475, 479], "value2": 91, "valueerror": [20, 34, 38, 39, 138, 228, 229, 413, 434], "vander": 6, "vandermond": 461, "var": [6, 89, 217, 233, 236, 238, 436, 475], "vararg": 148, "vari": [10, 14, 18, 19, 84, 94, 107, 109, 111, 112, 113, 114, 116, 117, 120, 123, 141, 159, 180, 182, 183, 187, 191, 227, 233, 236, 238, 408], "variabl": [73, 187, 195], "varianc": [89, 217, 233, 236, 238, 335, 436, 462, 479], "variou": 483, "vdot": [6, 88, 214], "vector": [74, 93, 141, 159, 160, 174, 180, 189, 190, 191, 196, 214, 219, 344, 463, 479], "vendor": 4, "veri": [3, 10, 15, 162, 219, 227], "verif": 0, "verifi": 179, "version": [4, 72, 89, 91, 128, 304, 339], "vertic": [61, 62, 84, 90, 124, 129, 130, 154, 420, 435, 464], "vetterlin": 10, "vh": 196, "via": 117, "view": [6, 45, 46, 47, 54, 80, 84, 89, 101, 107, 109, 113, 114, 118, 119, 121, 123, 129, 130, 131, 219, 225, 240, 321, 334, 353, 413, 434, 439, 447], "violat": 68, "void": 91, "void640": 91, "von": 402, "vonmis": 6, "vsplit": [6, 62], "vstack": [6, 61, 62, 90, 154, 187, 420, 435], "w": [10, 48, 182, 183, 184, 185, 188], "wa": [10, 75, 91, 190, 212, 232, 234, 236, 238, 357, 398, 410, 436, 462], "wai": [3, 4, 10, 89, 94, 106, 112, 113, 114, 119, 140, 315, 444], "wald": 6, "walk": 91, "want": [4, 441], "warn": [91, 228, 229, 375], "we": [66, 81, 84, 94, 124, 187, 213, 353, 441, 448], "weibul": [6, 405], "weight": [48, 49, 73, 152, 153, 217, 233, 438], "well": [91, 93, 140, 152, 153, 349, 359, 376, 395], "were": [62, 141, 357, 386, 435, 460], "what": [10, 44, 56, 62, 68, 89, 91, 93, 97, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 154, 163, 214, 292, 359, 376, 420, 435, 464, 475], "when": [10, 20, 21, 34, 35, 37, 38, 40, 42, 43, 44, 48, 66, 68, 86, 89, 91, 93, 106, 117, 119, 120, 135, 136, 146, 151, 182, 191, 193, 199, 206, 211, 213, 214, 223, 230, 231, 232, 234, 235, 237, 292, 411, 416, 418, 419, 423, 440, 444, 448, 459, 465, 483], "whenev": [101, 439, 447], "where": [0, 6, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 68, 70, 71, 75, 78, 79, 80, 81, 83, 85, 86, 87, 89, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 111, 117, 118, 119, 122, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 176, 177, 178, 179, 187, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 226, 232, 233, 234, 235, 236, 237, 238, 287, 288, 292, 297, 309, 310, 311, 316, 323, 328, 330, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 355, 356, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 398, 401, 409, 410, 411, 415, 416, 418, 421, 422, 423, 425, 426, 427, 428, 432, 433, 436, 437, 438, 442, 443, 446, 447, 449, 451, 455, 457, 458, 460, 461, 462, 466, 467], "wherev": 68, "whether": [14, 15, 19, 35, 75, 86, 91, 138, 162, 163, 179, 193, 199, 227, 235, 237, 413, 426, 459], "which": [3, 4, 10, 14, 19, 20, 21, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 44, 48, 54, 62, 66, 68, 72, 75, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 129, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 156, 159, 165, 166, 167, 168, 169, 179, 182, 189, 191, 198, 200, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 292, 297, 339, 341, 342, 343, 349, 352, 357, 379, 384, 385, 386, 387, 388, 389, 390, 392, 398, 401, 410, 412, 417, 423, 429, 430, 434, 435, 436, 438, 440, 446, 447, 448, 449, 450, 451, 454, 455, 458, 460, 461, 462, 465, 466, 467, 475, 483], "whichev": 160, "while": [10, 121, 123, 152, 153, 217, 233, 236, 238, 339, 346, 349, 417, 436, 438, 449, 462], "whitespac": [140, 143], "who": 6, "whole": [107, 109, 113, 114, 118, 119, 121, 123, 451, 455], "whose": [11, 12, 84, 91, 103, 104, 124, 180, 183, 184, 185, 197, 213, 225, 417, 452, 456], "why": 117, "wide": 124, "width": [91, 152, 153], "wild": [359, 376], "window": [4, 108, 122], "wise": [11, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 35, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 67, 70, 71, 75, 87, 89, 90, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 154, 155, 158, 161, 162, 165, 166, 167, 168, 169, 176, 177, 178, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 221, 222, 223, 224, 226, 232, 234, 235, 296, 337, 338, 340, 347, 348, 350, 407, 409, 411, 415, 416, 419, 420, 421, 425, 426, 427, 428, 432, 433, 435, 437, 442, 443, 457, 458, 464, 475, 479, 483], "within": [15, 21, 35, 44, 89, 93, 111, 112, 113, 114, 116, 117, 119, 152, 153, 162, 292, 352, 357, 401], "without": [84, 89, 95, 124, 334, 406, 413, 475], "won": 91, "word": [112, 113, 114, 117, 119, 133, 184, 357, 401], "work": [4, 33, 43, 441, 475], "world": [91, 359, 376], "would": [31, 62, 89, 91, 141, 159, 190, 213, 214, 315, 357, 430, 435, 441, 447, 460], "wrap": [78, 89, 124, 317, 332, 352, 355, 422, 440, 441, 460], "wrapper": 89, "write": [80, 84, 89, 124, 140, 305, 413], "written": [72, 75, 124, 140, 212, 410, 465], "x": [0, 3, 4, 11, 12, 14, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 45, 46, 47, 51, 54, 55, 57, 58, 63, 64, 66, 67, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 89, 91, 92, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 121, 122, 123, 126, 127, 128, 133, 139, 140, 141, 142, 144, 145, 146, 148, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 184, 187, 191, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 219, 220, 224, 225, 227, 292, 297, 306, 307, 313, 319, 324, 325, 337, 339, 341, 342, 343, 347, 349, 350, 351, 355, 356, 375, 381, 406, 407, 409, 410, 412, 416, 417, 418, 419, 421, 423, 425, 426, 427, 428, 432, 433, 434, 439, 440, 442, 443, 448, 449, 458, 461, 465, 466, 467], "x0": [40, 42, 66, 83, 343, 461, 467], "x00": 140, "x01": [139, 140], "x02": [139, 140], "x03": [139, 140], "x04": [139, 140], "x05": 139, "x1": [13, 15, 18, 26, 27, 35, 36, 44, 49, 50, 52, 53, 59, 67, 69, 87, 89, 97, 132, 134, 135, 136, 137, 149, 150, 151, 155, 174, 176, 177, 178, 205, 206, 207, 208, 209, 210, 214, 216, 218, 219, 222, 223, 224, 226, 292, 337, 338, 340, 345, 347, 348, 354, 394, 411, 415, 417, 437, 457], "x1_i": [13, 27, 50, 52, 53, 67, 87, 97, 132, 134, 137, 149, 150, 155, 176, 177, 178, 205, 206, 207, 209, 210, 223, 226, 340, 348, 411, 415, 437, 457], "x2": [13, 14, 15, 18, 19, 26, 27, 34, 35, 36, 50, 52, 53, 67, 69, 87, 97, 132, 134, 135, 136, 137, 149, 150, 151, 155, 174, 176, 177, 178, 205, 206, 207, 208, 209, 210, 214, 216, 219, 222, 223, 226, 337, 338, 340, 347, 348, 411, 415, 417, 432, 437, 457], "x2_i": [13, 27, 50, 52, 53, 67, 87, 97, 132, 134, 137, 149, 150, 155, 176, 177, 178, 205, 206, 207, 209, 210, 223, 226, 340, 348, 411, 415, 437, 457], "x3": [14, 19, 132], "x_i": [11, 12, 18, 22, 23, 24, 25, 26, 28, 51, 57, 58, 63, 64, 70, 71, 99, 100, 102, 133, 158, 161, 201, 202, 203, 204, 208, 337, 347, 350, 407, 409, 416, 419, 421, 425, 426, 427, 428, 432, 433, 442, 443, 458], "xi": [204, 219], "xn": [174, 219], "xor": [50, 51, 52, 53, 161, 207, 208, 209, 210], "xv": 219, "xx": 219, "xy": 219, "y": [0, 4, 21, 34, 37, 38, 39, 40, 42, 45, 54, 66, 73, 74, 83, 89, 91, 92, 95, 96, 101, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 148, 156, 168, 169, 180, 187, 199, 200, 211, 219, 220, 224, 227, 297, 313, 321, 324, 341, 342, 343, 448, 449, 461, 465, 466, 467], "yet": [4, 6], "yield": [31, 235, 237, 339, 357, 465, 475], "you": [4, 84, 111, 116, 117, 213, 440, 441, 475, 483], "your": [4, 84, 483], "yv": 219, "yy": 219, "z": [14, 19, 21, 34, 37, 38, 39, 40, 42, 66, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 199, 200, 211, 219, 220, 341, 342, 343, 367, 449, 461, 466, 467], "zero": [6, 10, 14, 18, 19, 31, 32, 33, 34, 58, 72, 75, 81, 85, 89, 95, 96, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 133, 140, 144, 145, 156, 158, 163, 164, 168, 169, 170, 171, 176, 182, 183, 185, 187, 188, 189, 192, 196, 212, 213, 215, 217, 221, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 313, 314, 324, 325, 329, 336, 339, 342, 343, 349, 357, 359, 387, 389, 390, 392, 407, 408, 410, 416, 419, 425, 430, 436, 438, 444, 449, 450, 453, 454, 458, 462, 465, 467], "zeros_lik": [6, 34, 79, 96, 145, 343, 356, 466], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 241, "__add__": 242, "__and__": 243, "__bool__": 244, "__complex__": 245, "__copy__": 246, "__eq__": 247, "__float__": 248, "__floordiv__": 249, "__ge__": 250, "__getitem__": 251, "__gt__": 252, "__iadd__": 253, "__iand__": 254, "__ifloordiv__": 255, "__ilshift__": 256, "__imod__": 257, "__imul__": 258, "__int__": 259, "__invert__": 260, "__ior__": 261, "__ipow__": 262, "__irshift__": 263, "__isub__": 264, "__itruediv__": 265, "__ixor__": 266, "__le__": 267, "__len__": 268, "__lshift__": 269, "__lt__": 270, "__matmul__": 271, "__mod__": 272, "__mul__": 273, "__ne__": 274, "__neg__": 275, "__new__": 276, "__or__": 277, "__pos__": 278, "__pow__": 279, "__repr__": 280, "__rshift__": 281, "__setitem__": 282, "__str__": 283, "__sub__": 284, "__truediv__": 285, "__xor__": 286, "ab": 11, "absolut": 12, "ad": 472, "add": 13, "algebra": [6, 470], "all": [14, 287], "allclos": 15, "amax": 16, "amin": 17, "angl": 18, "ani": [19, 288], "api": [1, 468], "append": 20, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 289], "argmin": [30, 290], "argsort": [31, 291], "argwher": 32, "arithmet": [473, 475, 477], "around": 33, "arrai": [6, 7, 9, 34, 469, 471, 472, 475], "array_equ": 35, "array_equiv": 36, "asanyarrai": 37, "asarrai": 38, "asarray_chkfinit": 39, "ascontiguousarrai": 40, "asfarrai": 41, "asfortranarrai": 42, "asnumpi": 43, "astyp": [44, 292], "atleast_1d": 45, "atleast_2d": 46, "atleast_3d": 47, "attribut": 475, "avail": [9, 483], "averag": [48, 482], "backend": 1, "background": 10, "basic": [472, 477], "beta": 358, "binari": 5, "bincount": 49, "binomi": 359, "bit": [5, 483], "bitwise_and": 50, "bitwise_not": 51, "bitwise_or": 52, "bitwise_xor": 53, "broadcast_arrai": 54, "broadcast_to": 55, "build": [4, 7], "byte": 360, "c": 1, "calcul": 475, "can_cast": 56, "cbrt": 57, "ceil": 58, "chang": 472, "channel": 4, "chisquar": 361, "choic": 362, "choleski": 179, "choos": [59, 293], "class": 7, "clip": [60, 294], "co": 70, "column_stack": 61, "comparison": [6, 471, 475, 483], "complex": 473, "concaten": 62, "cond": 180, "conda": 4, "conj": [63, 295], "conjug": [64, 296], "construct": 475, "control": 0, "convers": 475, "convolv": 65, "copi": [66, 297], "copysign": 67, "copyto": 68, "correl": [69, 482], "cosh": 71, "count": 480, "count_nonzero": 72, "cov": 73, "creat": 8, "creation": 7, "cross": 74, "cumlogsumexp": 75, "cumprod": [76, 298], "cumsum": [77, 299], "cupi": 6, "data": [0, 2, 7, 8, 9, 469, 475, 478], "decomposit": 470, "deg2rad": 78, "degre": 79, "det": 181, "detail": 10, "develop": 2, "devic": 4, "diag": 80, "diag_indic": 81, "diag_indices_from": 82, "diagflat": 83, "diagon": [84, 300], "diff": 85, "differ": 473, "digit": 86, "dimens": [10, 472], "dimension": [6, 475], "dirichlet": 363, "discret": 6, "distribut": 478, "divid": 87, "dot": 88, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 478], "dpnp_arrai": 89, "driver": 4, "dstack": 90, "dtype": [91, 301], "ediff1d": 92, "eig": 182, "eigenvalu": 470, "eigh": 183, "eigval": 184, "eigvalsh": 185, "einsum": 93, "einsum_path": 94, "element": [5, 472], "empti": 95, "empty_lik": 96, "equal": 97, "equat": 470, "erf": 98, "error": 481, "exampl": [0, 4], "exist": 7, "exp": 99, "exp2": 100, "expand_dim": 101, "expm1": 102, "expon": 473, "exponenti": 364, "extens": 2, "extract": 103, "extrema": 473, "ey": 104, "f": 365, "fab": 105, "fft": [10, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "fft2": 107, "fftfreq": 108, "fftn": 109, "fftshift": 110, "fill": 302, "fill_diagon": 124, "find": 473, "finfo": 125, "fix": 126, "flag": 303, "flat": 304, "flatit": 127, "flatnonzero": 128, "flatten": 305, "flip": 129, "fliplr": 130, "flipud": 131, "float": [473, 483], "float_pow": 132, "floor": 133, "floor_divid": 134, "fmax": 135, "fmin": 136, "fmod": 137, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 138, "frombuff": 139, "fromfil": 140, "fromfunct": 141, "fromit": 142, "fromstr": 143, "full": 144, "full_lik": 145, "function": [10, 471, 473, 481, 482, 483], "gamma": 366, "gener": [469, 478], "geometr": 367, "geomspac": 146, "get_includ": 147, "gradient": 148, "greater": 149, "greater_equ": 150, "guid": 4, "gumbel": 368, "handl": 473, "heavisid": 151, "helper": 10, "hermitian": 10, "hfft": 111, "higher": 10, "histogram": [152, 482], "histogram_bin_edg": 153, "hstack": 154, "hyperbol": 473, "hypergeometr": 369, "hypot": 155, "ident": 156, "ifft": 112, "ifft2": 113, "ifftn": 114, "ifftshift": 115, "ihfft": 116, "iinfo": 157, "imag": [158, 306], "implement": 10, "index": [469, 475], "indic": 159, "infin": 471, "inform": [2, 8, 10], "inner": 160, "insert": 469, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 186, "invert": 161, "irfft": 117, "irfft2": 118, "irfftn": 119, "isclos": 162, "iscomplex": 163, "iscomplexobj": 164, "isfinit": 165, "isinf": 166, "isnan": 167, "isneginf": 168, "isposinf": 169, "isreal": 170, "isrealobj": 171, "isscalar": 172, "issubdtyp": 173, "item": [307, 475], "items": 308, "iter": 469, "ix_": 174, "join": 472, "kind": 472, "kron": 175, "laplac": 370, "layout": 475, "left_shift": 176, "less": 177, "less_equ": 178, "level": 6, "librari": 0, "like": [469, 472], "linalg": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "linear": [6, 470], "linspac": 199, "loadtxt": 200, "log": 201, "log10": 202, "log1p": 203, "log2": 204, "logaddexp": 205, "logaddexp2": 206, "logarithm": 473, "logic": 471, "logical_and": 207, "logical_not": 208, "logical_or": 209, "logical_xor": 210, "logist": 371, "lognorm": 372, "logseri": 373, "logspac": 211, "logsumexp": 212, "lstsq": 187, "manipul": [472, 475], "mask_indic": 213, "math": 483, "mathemat": 473, "matmul": 214, "matric": 7, "matrix": [7, 470, 475], "matrix_pow": 188, "matrix_rank": 189, "max": [215, 309], "maximum": 216, "mean": [217, 310], "median": 218, "memori": 475, "meshgrid": 219, "method": 475, "mgrid": 220, "min": [221, 311], "minimum": 222, "miscellan": [8, 473, 474], "mod": 223, "modf": 224, "modul": [6, 477], "moveaxi": 225, "multi": [6, 475], "multi_dot": 190, "multinomi": 374, "multipl": 475, "multipli": 226, "multivariate_norm": 375, "nan": 471, "nan_to_num": 227, "nanargmax": 228, "nanargmin": 229, "nancumprod": 230, "nancumsum": 231, "nanmax": 232, "nanmean": 233, "nanmin": 234, "nanprod": 235, "nanstd": 236, "nansum": 237, "nanvar": 238, "nbyte": 312, "ndarrai": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 475], "ndim": [313, 336], "neg": 337, "negative_binomi": 376, "nextaft": 338, "noncentral_chisquar": 377, "noncentral_f": 378, "nonzero": [314, 339], "norm": [191, 470], "normal": [10, 379], "not_equ": 340, "number": [470, 472, 473], "numer": 7, "numpi": [2, 6], "ogrid": 341, "ones": 342, "ones_lik": 343, "oper": [5, 469, 471, 472, 473, 475, 483], "order": 482, "other": [470, 473, 475], "outer": 344, "output": 5, "over": 469, "overview": 3, "pack": 5, "packag": [4, 477], "pad": 476, "parallel": [0, 2], "pareto": 380, "partit": [315, 345], "permut": [381, 478], "pinv": 192, "place": 346, "point": 473, "poisson": 382, "poly1d": 477, "polynomi": 477, "polyutil": 477, "posit": 347, "power": [348, 383], "prod": [316, 349], "product": [470, 473], "proj": 350, "promot": 10, "ptp": 351, "put": [317, 352], "put_along_axi": 353, "putmask": 354, "python": 4, "qr": 193, "quick": 4, "r": 4, "rad2deg": 355, "radian": 356, "rand": 384, "randint": 385, "randn": 386, "random": [6, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 478], "random_integ": 388, "random_sampl": 389, "randomst": 357, "ranf": 390, "rang": 7, "ration": 473, "ravel": [318, 406], "rayleigh": 391, "real": [10, 319, 407], "real_if_clos": 408, "rearrang": 472, "reciproc": 409, "reduce_hypot": 410, "refer": [1, 468], "remaind": 411, "remov": 472, "repeat": [320, 412], "reshap": [321, 413], "result_typ": 414, "rfft": 120, "rfft2": 121, "rfftfreq": 122, "rfftn": 123, "right_shift": 415, "rint": 416, "roll": 417, "rollaxi": 418, "round": [322, 419, 473], "routin": [7, 8, 10, 469, 472, 473, 474, 479], "row_stack": 420, "rsqrt": 421, "sampl": [6, 392, 478], "scikit": 4, "search": 480, "searchsort": [323, 422], "seed": 393, "select": [423, 475], "shape": [7, 324, 424, 472, 475], "shuffl": 394, "sign": 425, "signbit": 426, "simpl": 478, "sin": 427, "sinh": 428, "size": [325, 429], "slogdet": 194, "solv": [195, 470], "sort": [326, 430, 480], "sort_complex": 431, "special": [473, 475, 481], "split": 472, "sqrt": 432, "squar": 433, "squeez": [327, 434], "stack": 435, "standard": 10, "standard_cauchi": 395, "standard_exponenti": 396, "standard_gamma": 397, "standard_norm": 398, "standard_t": 399, "start": 4, "statist": 482, "std": [328, 436], "stride": 329, "subtract": 437, "sum": [330, 438, 473], "summari": 6, "svd": 196, "swapax": [331, 439], "t": 240, "tabl": 6, "take": [332, 440], "take_along_axi": 441, "tan": 442, "tanh": 443, "tensordot": 444, "tensorinv": 197, "tensorsolv": 198, "test": [4, 8, 471], "tile": [445, 472], "trace": [333, 446], "transform": [6, 10], "transpos": [334, 447, 472], "trapezoid": 448, "tri": 449, "triangular": 400, "trigonometr": [473, 483], "tril": 450, "tril_indic": 451, "tril_indices_from": 452, "trim_zero": 453, "triu": 454, "triu_indic": 455, "triu_indices_from": 456, "true_divid": 457, "trunc": 458, "truth": 471, "twiddl": 483, "type": [8, 9, 10, 471, 475], "ufunc": 483, "uniform": 401, "uniqu": 459, "univers": 483, "unwrap": 460, "util": 474, "valu": [7, 471], "vander": 461, "var": [335, 462], "varianc": 482, "vdot": 463, "vector": 470, "vonmis": 402, "vstack": 464, "wald": 403, "weibul": 404, "where": 465, "wise": 5, "zero": 466, "zeros_lik": 467, "zipf": 405}})