Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "install", "reference/binary", "reference/comparison", "reference/creation", "reference/difference", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round_", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.sign", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.triu", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "install.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/difference.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round_.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["DPCtl Usage", "C++ backend API Reference", "DPNP \u2013 A NumPy-compatible library for SYCL-based devices", "Installation Guide", "Binary Operations", "Comparison Table", "Array Creation Routines", "Difference between DPNP and NumPy", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.cbrt", "dpnp.ceil", "dpnp.concatenate", "dpnp.conj", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diagflat", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.fromfile", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.power", "dpnp.prod", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.right_shift", "dpnp.rollaxis", "dpnp.round_", "dpnp.searchsorted", "dpnp.sign", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.triu", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 2, 5, 68, 259, 284], "api": [0, 2, 3, 5], "manag": 0, "specif": 0, "sycl": [0, 180], "resourc": 0, "base": [0, 3, 108, 138, 140, 143, 148], "python": [0, 2, 68], "packag": [0, 280], "dpnp": [0, 1, 5, 270, 273, 276, 280, 281, 284], "us": [0, 3, 27, 68, 78, 100, 105, 108, 128, 139, 148, 154, 169, 180, 183, 185, 186, 196, 201, 216, 217, 255], "global": 0, "queue": [0, 180], "below": [0, 134, 136, 256, 258], "code": 0, "illustr": 0, "simpl": [0, 280], "combin": [0, 78], "import": [0, 2, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 100, 101, 104, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 205, 214, 218, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269], "np": [0, 2, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 100, 101, 104, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 205, 214, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269], "device_context": 0, "opencl": 0, "gpu": [0, 2], "x": [0, 2, 9, 10, 11, 12, 16, 18, 19, 20, 21, 22, 24, 27, 29, 31, 32, 33, 42, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 66, 68, 69, 72, 73, 75, 76, 77, 78, 79, 81, 100, 101, 104, 106, 107, 108, 110, 117, 118, 120, 121, 122, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 157, 159, 160, 161, 162, 163, 168, 169, 172, 173, 174, 176, 198, 204, 229, 230, 231, 232, 238, 239, 240, 242, 243, 244, 247, 249, 250, 251, 252, 254, 255, 260, 261, 263, 267, 268, 269], "arrai": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 89, 90, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 268, 269, 270, 280], "1": [0, 2, 3, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 31, 32, 33, 36, 39, 40, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 107, 108, 110, 112, 113, 116, 117, 119, 125, 126, 127, 132, 135, 136, 140, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 187, 189, 191, 193, 194, 195, 197, 198, 199, 202, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 219, 221, 224, 229, 230, 231, 232, 234, 235, 238, 239, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269], "2": [0, 2, 9, 10, 11, 17, 19, 21, 25, 26, 27, 28, 29, 31, 32, 33, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 73, 75, 76, 77, 78, 80, 81, 83, 89, 94, 97, 100, 101, 104, 110, 111, 112, 113, 117, 125, 126, 127, 132, 135, 136, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 184, 188, 192, 198, 204, 207, 209, 220, 222, 223, 226, 228, 229, 230, 231, 232, 234, 235, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269], "3": [0, 2, 5, 11, 17, 18, 25, 26, 27, 28, 29, 31, 32, 33, 39, 41, 44, 45, 47, 49, 50, 53, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79, 100, 104, 110, 113, 115, 116, 117, 125, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 165, 169, 170, 171, 173, 174, 176, 177, 180, 184, 188, 195, 198, 204, 207, 208, 209, 219, 223, 226, 229, 230, 231, 232, 234, 235, 241, 242, 243, 244, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 261, 262, 263, 264, 269], "": [0, 2, 83, 85, 89, 90, 94, 95, 97, 99, 134, 136, 138, 180, 181, 182, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 276], "sum": [0, 2, 5, 60, 67, 68, 113, 149, 163, 165, 182, 197, 199, 253, 280], "For": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276], "more": [0, 29, 134, 135], "inform": 0, "pleas": [0, 2, 276], "refer": [0, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276], "document": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276], "time": [0, 122, 182, 197], "try": 0, "except": 0, "importerror": 0, "o": 0, "sy": 0, "path": 0, "insert": [0, 5, 78, 237, 267], "0": [0, 3, 5, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 40, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 62, 63, 64, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 98, 100, 101, 104, 107, 108, 110, 113, 115, 116, 117, 118, 120, 121, 122, 132, 139, 140, 141, 142, 143, 145, 148, 149, 150, 152, 154, 155, 156, 159, 160, 162, 163, 166, 169, 171, 172, 173, 179, 180, 182, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 202, 204, 205, 206, 207, 210, 212, 213, 214, 215, 218, 221, 223, 224, 225, 230, 231, 232, 235, 236, 238, 239, 240, 242, 244, 245, 246, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 262, 264, 268, 269], "abspath": 0, "numpi": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 276, 280], "def": 0, "run": 0, "executor": 0, "size": [0, 5, 29, 41, 43, 44, 53, 57, 58, 68, 74, 108, 125, 136, 139, 148, 152, 160, 172, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 234, 244, 246, 264, 268], "test_typ": 0, "repetit": 0, "reshap": [0, 5, 25, 26, 33, 63, 68, 78, 150, 156, 204, 254], "arang": [0, 5, 25, 26, 33, 39, 40, 62, 63, 68, 74, 76, 77, 79, 107, 108, 113, 139, 141, 142, 148, 150, 154, 156, 170, 173, 179, 204, 254, 269], "dtype": [0, 7, 11, 17, 23, 29, 31, 32, 33, 34, 41, 43, 44, 47, 51, 66, 68, 72, 73, 80, 101, 104, 106, 107, 108, 110, 115, 116, 125, 138, 139, 148, 151, 157, 161, 166, 172, 173, 176, 177, 180, 208, 231, 234, 246, 247, 248, 253, 256, 264, 268, 269], "_": 0, "rang": [0, 113, 199, 204, 262, 280], "start_tim": 0, "perf_count": 0, "result": [0, 9, 10, 11, 46, 51, 58, 59, 60, 66, 68, 69, 81, 100, 101, 104, 110, 117, 120, 121, 122, 136, 151, 157, 159, 161, 162, 163, 168, 174, 176, 180, 182, 212, 231, 238, 247, 248, 252, 260], "end_tim": 0, "append": [0, 5, 65], "return": [0, 13, 14, 15, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 45, 46, 48, 49, 50, 58, 59, 60, 67, 68, 70, 71, 72, 73, 74, 75, 80, 100, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 139, 140, 143, 148, 150, 154, 156, 159, 162, 163, 169, 170, 172, 173, 174, 175, 180, 183, 204, 208, 209, 210, 212, 213, 215, 228, 229, 230, 231, 238, 241, 242, 243, 252, 253, 254, 257, 258, 265, 268, 269], "median": [0, 5], "test_repetit": 0, "5": [0, 12, 17, 24, 25, 28, 33, 39, 40, 41, 43, 44, 46, 47, 49, 53, 56, 58, 59, 60, 63, 66, 68, 69, 75, 100, 104, 108, 110, 113, 115, 125, 139, 148, 149, 151, 152, 153, 154, 155, 157, 160, 161, 169, 171, 172, 173, 176, 180, 181, 182, 184, 187, 199, 203, 204, 205, 206, 209, 212, 227, 229, 230, 234, 235, 238, 248, 252, 256, 257, 258, 260, 262, 263, 268, 269], "float64": [0, 7, 34, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105, 180, 181, 184, 187, 188, 189, 191, 193, 194, 195, 202, 203, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "float32": [0, 7, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105, 180, 202, 207, 209, 210, 212, 213, 215, 221, 224], "int64": [0, 7, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105], "int32": [0, 7, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105, 180, 182, 190, 192, 197, 199, 205, 208], "type_nam": 0, "name": [0, 5], "print": [0, 29, 32, 40, 47, 49, 72, 113, 180, 199, 204, 261], "f": [0, 5, 68, 106, 107, 201, 268, 269], "test": [0, 12, 16, 120, 121, 122, 182, 280], "data": [0, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 39, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 66, 67, 68, 69, 74, 75, 76, 77, 79, 81, 100, 101, 104, 105, 110, 111, 112, 115, 119, 120, 121, 122, 125, 126, 127, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 254, 255, 260, 262, 264, 270, 280], "type": [0, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 39, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 100, 101, 104, 105, 106, 107, 110, 111, 112, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 254, 255, 260, 262, 264, 268, 269, 270, 280], "i": [0, 2, 3, 5, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 175, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 260, 262, 264, 268, 269, 270, 276], "each": [0, 40, 68, 131, 182, 199], "64": [0, 28], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 11, 12, 13, 16, 23, 29, 30, 41, 43, 44, 50, 51, 52, 57, 66, 68, 74, 78, 101, 104, 108, 111, 112, 113, 115, 119, 120, 121, 122, 123, 125, 126, 127, 134, 136, 138, 139, 144, 145, 146, 147, 148, 150, 151, 154, 156, 157, 161, 176, 177, 185, 231, 234, 247, 248, 259, 263], "els": 0, "msg": 0, "n": [0, 65, 69, 80, 82, 84, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 116, 134, 136, 154, 182, 197, 199, 209, 219, 256, 263], "4": [0, 5, 11, 12, 17, 28, 29, 33, 39, 41, 43, 47, 49, 58, 59, 60, 63, 64, 66, 67, 69, 72, 77, 101, 104, 106, 108, 110, 111, 112, 113, 115, 127, 139, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 171, 173, 176, 177, 180, 181, 184, 204, 209, 225, 229, 231, 232, 235, 238, 241, 242, 243, 246, 247, 248, 252, 254, 255, 257, 258, 263, 264, 269], "3e": 0, "ratio": 0, "6": [0, 11, 17, 25, 26, 28, 33, 43, 44, 47, 51, 54, 58, 59, 60, 62, 63, 66, 68, 69, 79, 81, 107, 138, 139, 148, 162, 163, 169, 173, 179, 180, 197, 199, 204, 209, 229, 235, 248, 252, 255, 257, 258, 262, 269], "2f": 0, "__name__": 0, "__main__": 0, "gpu_queu": 0, "get_sycl_devic": 0, "dump_device_info": 0, "like": [2, 17, 29, 32, 72, 106, 116, 180, 254, 268, 280], "acceler": 2, "intel": [2, 3], "It": 2, "interfac": 2, "mani": 2, "function": [2, 10, 11, 12, 13, 14, 15, 16, 17, 23, 25, 26, 27, 28, 31, 32, 34, 35, 39, 41, 42, 43, 44, 46, 51, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 75, 81, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 135, 136, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 174, 176, 178, 179, 180, 183, 185, 186, 196, 201, 216, 217, 229, 230, 231, 232, 234, 235, 236, 238, 239, 241, 242, 246, 247, 249, 252, 254, 255, 259, 260, 264, 265, 268, 269, 270, 280], "includ": [2, 148, 180], "subset": [2, 280], "method": [2, 68, 105, 134, 180], "ndarrai": [2, 5, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 79, 80, 81, 100, 101, 104, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 174, 175, 176, 179, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 251, 252, 253, 254, 255, 260, 262, 264, 270], "under": [2, 136], "hood": 2, "nativ": 2, "c": [2, 3, 29, 31, 32, 33, 35, 50, 68, 72, 73, 80, 106, 107, 109, 149, 172, 173, 229, 233, 268, 269], "onemkl": 2, "kernel": 2, "Being": 2, "drop": 2, "replac": [2, 185, 254], "its": [2, 5, 48, 82, 88, 115, 131, 217, 233], "usag": 2, "veri": [2, 154], "similar": [2, 31, 32, 108, 139, 148, 180, 208], "The": [2, 3, 14, 15, 17, 25, 26, 48, 68, 69, 78, 116, 131, 135, 136, 183, 185, 186, 196, 201, 280], "class": [2, 34, 68, 180, 208, 256], "altern": [2, 149], "abov": [2, 257], "exampl": [2, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 100, 101, 104, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269], "an": [2, 14, 15, 17, 25, 26, 27, 29, 31, 32, 33, 34, 40, 45, 47, 50, 68, 69, 70, 71, 72, 73, 78, 105, 107, 110, 125, 129, 134, 136, 150, 159, 160, 171, 172, 173, 175, 180, 182, 187, 188, 190, 199, 207, 213, 215, 228, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 249, 254, 256, 257, 258, 261, 268, 269], "instanc": [2, 68], "creat": [2, 29, 31, 32, 64, 180, 207], "ident": [2, 5, 219], "one": [2, 29, 36, 49, 52, 53, 68, 72, 82, 84, 87, 88, 92, 93, 96, 98, 106, 136, 140, 143, 154, 162, 170, 173, 199, 244, 268], "kei": [2, 27, 68, 241], "differ": [2, 65, 68, 69, 131, 136, 149, 270, 280], "from": [2, 25, 26, 27, 31, 32, 52, 61, 62, 68, 77, 105, 154, 171, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 243, 244, 262, 280], "memori": [2, 31, 32, 33, 68], "alloc": 2, "when": [2, 68, 136, 148], "set": [2, 29, 68, 72, 106, 134, 136, 172, 173, 268, 269], "up": 2, "dpnp_queue_gpu": 2, "environ": 2, "most": [2, 244], "manipul": [2, 270, 280], "ar": [2, 3, 7, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 81, 100, 101, 104, 105, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 136, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 208, 211, 212, 214, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 262, 264], "also": [2, 78, 218], "done": 2, "wai": [2, 105], "see": [2, 68, 136, 197, 236], "complet": 2, "list": [2, 5, 68, 232], "support": [2, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 251, 252, 253, 254, 255, 260, 262, 264, 268, 269, 284], "along": [2, 12, 14, 15, 16, 25, 26, 39, 47, 59, 60, 65, 68, 69, 117, 136, 150, 152, 153, 156, 162, 163, 166, 235, 245, 246, 252, 253, 255, 264], "limit": [2, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 262, 264, 268, 269], "instal": 2, "guid": 2, "requir": [2, 5, 33, 68], "conda": 2, "forg": 2, "sourc": [2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "multi": [2, 68, 83, 85, 89, 90, 94, 95, 97, 99, 155, 171, 270], "dimension": [2, 36, 49, 53, 64, 68, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 154, 155, 171, 244, 270], "univers": [2, 270], "ufunc": [2, 270], "routin": [2, 270], "special": [2, 75, 270, 280], "between": [2, 69, 131, 197, 211, 262, 270], "comparison": [2, 270, 280], "tabl": [2, 136, 270], "miscellan": [2, 270, 280], "backend": [2, 109, 183, 185, 186, 196, 201, 216, 217], "dpctl": [2, 68], "follow": [3, 7, 78, 280], "linux": 3, "distribut": [3, 148, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 280], "recommend": [3, 169], "ubuntu": 3, "20": [3, 5, 125, 182, 197], "04": 3, "lt": 3, "x86_64": 3, "These": [3, 78, 280], "compon": [3, 86, 91], "must": [3, 68, 128, 135, 136], "v3": 3, "compat": [3, 280], "18": [3, 5, 69], "you": 3, "can": [3, 68, 105, 169], "anaconda": 3, "channel": 3, "latest": 3, "develop": 3, "version": [3, 68, 169], "clone": 3, "git": 3, "repositori": 3, "recurs": 3, "http": 3, "github": 3, "com": 3, "intelpython": 3, "cd": 3, "build": 3, "sh": 3, "To": 3, "tree": 3, "download": 3, "need": [3, 68], "oneapi": 3, "toolkit": 3, "cython": 3, "pip": 3, "here": 5, "correspond": [5, 25, 26, 68], "implement": 5, "column": [5, 31, 32, 33, 68, 114, 135], "mean": [5, 39, 68, 136, 153, 180, 193, 195, 198, 202, 221, 225, 226, 246, 264, 280], "yet": 5, "v1": 5, "21": [5, 60], "v0": 5, "11": [5, 25, 26, 28, 68, 110, 199, 208, 240, 257, 258], "cupi": 5, "v8": 5, "401": 5, "201": 5, "286": 5, "56": 5, "26": [5, 44], "47": 5, "12": [5, 25, 26, 67, 204, 257, 258], "16": [5, 41, 110, 161, 176, 239, 250], "51": 5, "48": [5, 162], "total": 5, "549": 5, "305": 5, "415": 5, "ab": [5, 10, 81], "absolut": [5, 9, 81], "add": 5, "add_docstr": 5, "add_newdoc": 5, "add_newdoc_ufunc": 5, "alen": 5, "all": [5, 16, 30, 68, 76, 128, 182], "allclos": [5, 30, 119, 138], "alltru": 5, "amax": [5, 15, 25], "amin": [5, 14, 26], "angl": [5, 22, 23, 61, 62, 178, 179, 262], "ani": [5, 12, 14, 15, 68, 180], "apply_along_axi": 5, "apply_over_ax": 5, "arcco": [5, 20], "arccosh": 5, "arcsin": [5, 18, 239], "arcsinh": [5, 19], "arctan": [5, 18, 20, 23], "arctan2": [5, 20, 22], "arctanh": [5, 19], "argmax": [5, 14, 26, 68], "argmin": [5, 15, 25, 68], "argpartit": [5, 27], "argsort": [5, 68, 241, 254], "argwher": 5, "around": [5, 68, 236], "array2str": 5, "array_equ": 5, "array_equiv": [5, 30], "array_repr": 5, "array_split": 5, "array_str": 5, "asanyarrai": [5, 32], "asarrai": [5, 31, 35], "asarray_chkfinit": [5, 31, 32], "ascontiguousarrai": [5, 31, 32], "asfarrai": [5, 31, 32], "asfortranarrai": [5, 31, 32, 33], "asmatrix": 5, "asscalar": 5, "atleast_1d": [5, 78], "atleast_2d": [5, 78], "atleast_3d": [5, 78], "averag": [5, 68, 152], "bartlett": 5, "base_repr": 5, "binary_repr": 5, "bincount": 5, "bitwise_and": [5, 42, 43, 44, 118, 144], "bitwise_not": 5, "bitwise_or": [5, 41, 42, 44, 118, 146], "bitwise_xor": [5, 41, 42, 43, 118, 147], "blackman": 5, "block": 5, "bmat": 5, "broadcast_arrai": 5, "broadcast_shap": 5, "broadcast_to": 5, "busday_count": 5, "busday_offset": 5, "byte_bound": 5, "can_cast": 5, "cbrt": 5, "ceil": [5, 100, 101, 260], "choos": [5, 20, 22, 23, 68], "clip": 5, "column_stack": 5, "common_typ": 5, "compare_chararrai": 5, "compress": 5, "concaten": 5, "conj": [5, 68], "conjug": [5, 48, 67, 68, 128, 149], "convolv": [5, 53], "copi": [5, 29, 52, 68, 154, 175, 241, 257, 258], "copysign": 5, "copyto": 5, "corrcoef": [5, 57], "correl": [5, 280], "co": [5, 18, 20, 239], "cosh": [5, 19], "count_nonzero": [5, 169], "cov": [5, 198], "cross": [5, 53], "cumprod": [5, 162], "cumproduct": 5, "cumsum": [5, 68, 163], "datetime_as_str": 5, "datetime_data": 5, "deg2rad": [5, 178, 179, 262], "degre": [5, 61, 178, 179, 222, 262], "delet": 5, "deprec": 5, "deprecate_with_doc": 5, "diag": [5, 138], "diag_indic": 5, "diag_indices_from": 5, "diagflat": 5, "diagon": [5, 63, 64, 68, 80, 116, 128, 253, 256, 257, 258], "diff": [5, 69, 113], "digit": 5, "disp": 5, "divid": [5, 101, 104, 132, 158, 231, 259], "divmod": 5, "dot": [5, 70, 71, 117, 133, 135, 138, 149, 252, 265], "dsplit": 5, "dstack": 5, "ediff1d": 5, "einsum": [5, 71, 117, 149, 174, 252], "einsum_path": [5, 70], "empti": [5, 29, 68, 73, 106, 107, 172, 173, 268, 269], "empty_lik": [5, 29, 72, 107, 173, 269], "equal": [5, 12, 13, 16, 30, 41, 43, 44, 52, 53, 57, 101, 111, 112, 119, 125, 126, 127, 132, 160, 170, 180, 190, 231, 234, 241, 244], "exp": [5, 142], "exp2": [5, 76], "expand_dim": [5, 25, 26], "expm1": [5, 76, 142], "extract": [5, 63], "ey": [5, 48], "fab": 5, "fastcopyandtranspos": 5, "fill_diagon": 5, "find_common_typ": 5, "fix": 5, "flatnonzero": [5, 169], "flip": [5, 182], "fliplr": 5, "flipud": 5, "float_pow": 5, "floor": [5, 46, 101, 231, 260], "floor_divid": [5, 104, 158], "fmax": [5, 14, 15, 103, 151, 157, 176], "fmin": [5, 14, 15, 102, 151, 157, 176], "fmod": [5, 102, 103, 151, 157, 158, 176, 231], "format_float_posit": 5, "format_float_scientif": 5, "frexp": 5, "frombuff": 5, "fromfil": 5, "fromfunct": [5, 31, 32], "fromit": [5, 31, 32], "frompyfunc": 5, "fromregex": 5, "fromstr": 5, "full": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "full_lik": [5, 29, 73, 106, 173, 269], "gcd": 5, "genfromtxt": 5, "geomspac": [5, 139, 148], "get_array_wrap": 5, "get_includ": 5, "get_printopt": 5, "getbufs": 5, "geterr": 5, "geterrcal": 5, "geterrobj": 5, "gradient": 5, "greater": [5, 74, 112, 126, 127, 134, 170], "greater_equ": [5, 74, 111, 126, 127, 170], "ham": 5, "han": 5, "heavisid": 5, "histogram": [5, 280], "histogram2d": 5, "histogram_bin_edg": 5, "histogramdd": 5, "hsplit": 5, "hstack": 5, "hypot": 5, "i0": 5, "imag": 5, "in1d": 5, "indic": [5, 14, 15, 25, 26, 27, 68, 169, 237, 238, 254, 267], "info": 5, "inner": [5, 70, 71, 174], "interp": 5, "intersect1d": 5, "invert": [5, 42], "is_busdai": 5, "isclos": 5, "iscomplex": 5, "iscomplexobj": 5, "isfinit": [5, 121, 122], "isfortran": 5, "isin": 5, "isinf": [5, 120, 122], "isnan": [5, 120, 121], "isnat": [5, 122], "isneginf": [5, 120, 121, 122], "isposinf": [5, 120, 121, 122], "isreal": 5, "isrealobj": 5, "isscalar": 5, "issctyp": 5, "issubclass_": 5, "issubdtyp": 5, "issubsctyp": 5, "iter": [5, 31, 32, 68], "ix_": 5, "kaiser": 5, "kron": 5, "lcm": 5, "ldexp": 5, "left_shift": [5, 234], "less": [5, 74, 111, 112, 127, 170, 232], "less_equ": [5, 74, 111, 112, 126, 170], "lexsort": [5, 27, 68, 241], "linspac": [5, 17, 75, 108, 148, 154, 262], "load": 5, "loadtxt": 5, "log": [5, 79, 108, 139, 143, 148, 195], "log10": [5, 140, 143], "log1p": [5, 79, 140, 143], "log2": [5, 140], "logaddexp": 5, "logaddexp2": 5, "logical_and": [5, 41, 145, 146, 147], "logical_not": [5, 42, 118, 144, 146, 147], "logical_or": [5, 43, 144, 145, 147], "logical_xor": [5, 44, 144, 145, 146], "logspac": [5, 108, 139], "lookfor": 5, "mafromtxt": 5, "mask_indic": 5, "mat": 5, "matmul": [5, 138], "max": [5, 14, 25, 68, 134, 197], "maximum": [5, 14, 15, 25, 26, 68, 102, 103, 150, 157, 176], "maximum_sctyp": 5, "may_share_memori": 5, "meshgrid": [5, 155, 171], "min": [5, 15, 26, 68], "min_scalar_typ": 5, "minimum": [5, 14, 15, 25, 26, 68, 102, 103, 151, 156, 176], "mintypecod": 5, "mod": 5, "modf": 5, "moveaxi": [5, 235, 254], "msort": 5, "multipli": 5, "nan_to_num": 5, "nanargmax": 5, "nanargmin": 5, "nancumprod": [5, 163], "nancumsum": 5, "nanmax": [5, 14, 15], "nanmean": [5, 152, 246, 264], "nanmedian": 5, "nanmin": [5, 14, 15], "nanpercentil": 5, "nanprod": 5, "nanquantil": 5, "nanstd": [5, 152, 246, 264], "nansum": 5, "nanvar": [5, 152, 246, 264], "ndfromtxt": 5, "ndim": [5, 10, 29, 33, 57, 68, 172, 235, 249, 268], "neg": [5, 12, 16, 40, 120, 121, 122, 199], "nested_it": 5, "nextaft": 5, "nonzero": 5, "not_equ": [5, 74, 111, 112, 126, 127], "obj2sctyp": 5, "ones": [5, 29, 72, 73, 78, 80, 106, 107, 115, 116, 149, 164, 173, 235, 256, 268, 269], "ones_lik": [5, 29, 73, 107, 172, 269], "outer": [5, 70, 71, 124], "packbit": 5, "pad": [5, 270, 280], "partit": [5, 241], "percentil": [5, 153], "piecewis": 5, "place": [5, 68, 217], "poli": 5, "polyadd": 5, "polyd": 5, "polydiv": 5, "polyfit": 5, "polyint": 5, "polymul": 5, "polysub": 5, "polyv": 5, "posit": [5, 12, 16, 31, 32, 78, 120, 121, 122, 128, 160, 182, 206, 235, 242, 243, 254], "power": [5, 77, 133, 243], "printopt": 5, "prod": [5, 68, 164], "product": [5, 58, 59, 67, 70, 71, 117, 124, 133, 135, 149, 162, 174, 177, 252, 265, 280], "promote_typ": 5, "ptp": 5, "put": 5, "put_along_axi": 5, "putmask": 5, "quantil": 5, "rad2deg": [5, 61, 62, 262], "radian": [5, 61, 62, 178, 262], "ravel": [5, 68, 136], "ravel_multi_index": 5, "real": [5, 93, 94, 95, 96, 97, 99, 128, 131, 134, 182, 199, 280], "real_if_clos": 5, "recfromcsv": 5, "recfromtxt": 5, "reciproc": 5, "remaind": [5, 101, 102, 103, 104, 151, 157, 158, 176], "repeat": [5, 131], "resiz": [5, 78], "result_typ": 5, "right_shift": [5, 125], "rint": 5, "roll": [5, 235], "rollaxi": 5, "root": [5, 45, 242, 243], "rot90": 5, "round": [5, 28, 68, 100, 101, 231, 236, 260, 280], "round_": 5, "row_stack": 5, "safe_ev": 5, "save": 5, "savetxt": 5, "savez": 5, "savez_compress": 5, "sctype2char": 5, "searchsort": [5, 241, 267], "select": [5, 244], "set_numeric_op": 5, "set_printopt": 5, "set_string_funct": 5, "setbufs": 5, "setdiff1d": 5, "seterr": 5, "seterrcal": 5, "seterrobj": 5, "setxor1d": 5, "shape": [5, 25, 26, 29, 30, 33, 41, 43, 44, 52, 53, 57, 58, 68, 72, 73, 74, 78, 106, 107, 125, 132, 134, 138, 149, 150, 156, 160, 172, 173, 180, 189, 192, 197, 198, 203, 207, 220, 227, 231, 233, 234, 235, 244, 249, 254, 268, 269, 280], "shares_memori": 5, "show_config": 5, "sign": [5, 48, 51], "signbit": 5, "sin": [5, 20, 154], "sinc": 5, "sinh": [5, 19, 239], "sometru": 5, "sort": [5, 27, 68, 237, 254, 270, 280], "sort_complex": 5, "space": [5, 17, 108, 139, 148], "split": [5, 280], "sqrt": [5, 243], "squar": [5, 116, 128, 130, 133, 184, 200, 242], "squeez": [5, 68, 78], "stack": [5, 114, 134, 266], "std": [5, 68, 152, 264], "subtract": 5, "swapax": [5, 160], "take": [5, 68], "take_along_axi": [5, 25, 26, 27], "tan": [5, 20, 23], "tanh": [5, 19], "tensordot": [5, 67, 117, 149], "tile": [5, 232, 280], "trace": 5, "transpos": [5, 68, 128, 160, 280], "trapz": 5, "tri": 5, "tril": 5, "tril_indic": 5, "tril_indices_from": 5, "trim_zero": 5, "triu": 5, "triu_indic": 5, "triu_indices_from": 5, "true_divid": 5, "trunc": [5, 46, 100], "typenam": 5, "union1d": 5, "uniqu": [5, 40], "unpackbit": 5, "unravel_index": [5, 25, 26], "unwrap": [5, 61, 178], "vander": 5, "var": [5, 68, 152, 246], "vdot": [5, 67, 149], "vsplit": 5, "vstack": 5, "where": [5, 11, 23, 41, 43, 44, 51, 52, 66, 68, 100, 101, 104, 115, 119, 120, 121, 122, 125, 128, 137, 144, 145, 146, 147, 150, 151, 156, 157, 161, 176, 177, 231, 234, 237, 247, 248], "who": 5, "zero": [5, 12, 16, 29, 56, 72, 73, 80, 86, 91, 100, 106, 107, 134, 138, 160, 165, 169, 172, 173, 182, 256, 257, 258, 269], "zeros_lik": [5, 29, 73, 107, 173, 268], "astyp": [5, 68, 169], "byteswap": 5, "dump": 5, "fill": [5, 29, 68, 72, 73, 106, 107, 172, 173, 268, 269], "flatten": [5, 64, 68, 169, 229], "getfield": 5, "item": [5, 68], "itemset": 5, "newbyteord": 5, "setfield": 5, "setflag": 5, "tobyt": 5, "tofil": [5, 105], "tolist": 5, "tostr": 5, "view": [5, 37, 38, 68], "linalg": 5, "choleski": 5, "cond": 5, "det": 5, "eig": [5, 131], "eigh": 5, "eigval": 5, "eigvalsh": 5, "inv": 5, "lstsq": 5, "matrix_pow": 5, "matrix_rank": 5, "multi_dot": 5, "norm": [5, 82, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 113, 280], "pinv": 5, "qr": 5, "slogdet": 5, "solv": [5, 280], "svd": [5, 134], "tensorinv": 5, "tensorsolv": 5, "fft": [5, 270, 280], "fft2": 5, "fftfreq": 5, "fftn": 5, "fftshift": 5, "hfft": 5, "ifft": 5, "ifft2": 5, "ifftn": 5, "ifftshift": 5, "ihfft": 5, "irfft": 5, "irfft2": 5, "irfftn": 5, "register_func": 5, "restore_al": 5, "restore_func": 5, "rfft": 5, "rfft2": 5, "rfftfreq": 5, "rfftn": 5, "beta": [5, 191], "binomi": [5, 199], "byte": 5, "chisquar": 5, "choic": [5, 68], "default_rng": 5, "dirichlet": 5, "exponenti": [5, 193, 219], "gamma": [5, 220], "geometr": [5, 108, 139], "get_stat": [5, 180], "gumbel": 5, "hypergeometr": 5, "laplac": 5, "logist": 5, "lognorm": 5, "logseri": 5, "multinomi": 5, "multivariate_norm": 5, "negative_binomi": 5, "noncentral_chisquar": 5, "noncentral_f": 5, "normal": [5, 57, 160, 180, 195, 198, 209, 221], "pareto": 5, "permut": [5, 68, 160, 254, 280], "poisson": 5, "rand": [5, 180, 210, 212, 213, 215], "randint": [5, 68, 180, 211], "randn": [5, 138, 180], "random_integ": [5, 180, 208], "random_sampl": [5, 180, 207, 210, 213, 215], "ranf": 5, "rayleigh": 5, "seed": [5, 68, 180], "set_stat": 5, "shuffl": 5, "standard_cauchi": 5, "standard_exponenti": 5, "standard_gamma": 5, "standard_norm": [5, 180, 209], "standard_t": 5, "triangular": [5, 128, 137], "uniform": [5, 180, 207, 210, 212, 213, 215], "vonmis": 5, "wald": 5, "weibul": [5, 228], "zipf": 5, "bool": [7, 68, 120, 121, 122, 134, 136, 169], "complex128": [7, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99], "nan": [7, 12, 14, 15, 16, 31, 32, 120, 121, 122, 152, 162, 163, 164, 165, 166, 246, 264, 280], "arg": [9, 70, 71, 102, 103, 158, 180, 259, 265], "kwarg": [9, 10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 46, 48, 51, 54, 58, 59, 60, 66, 67, 70, 71, 76, 80, 81, 100, 101, 102, 103, 104, 105, 110, 115, 117, 118, 120, 121, 122, 125, 140, 144, 145, 146, 147, 149, 151, 152, 157, 158, 159, 161, 162, 163, 164, 165, 168, 174, 176, 230, 231, 234, 238, 239, 241, 247, 250, 252, 255, 256, 259, 260, 261, 265], "calcul": [9, 10, 65, 69, 76, 81, 100, 102, 103, 104, 151, 157, 158, 164, 165, 176, 177, 231], "valu": [9, 10, 11, 12, 14, 15, 16, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 39, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 56, 57, 65, 66, 68, 69, 72, 73, 74, 80, 81, 82, 88, 100, 101, 104, 106, 107, 108, 111, 112, 115, 118, 120, 121, 122, 125, 126, 127, 128, 131, 134, 136, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 166, 169, 170, 172, 173, 175, 176, 180, 190, 207, 208, 231, 232, 234, 237, 239, 246, 247, 252, 253, 254, 260, 262, 264, 268, 269, 280], "element": [9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 30, 40, 41, 42, 43, 44, 45, 46, 48, 51, 54, 55, 59, 60, 66, 68, 69, 74, 76, 77, 79, 81, 100, 102, 103, 104, 111, 112, 118, 119, 120, 121, 122, 126, 127, 128, 132, 140, 141, 142, 143, 144, 145, 146, 147, 151, 157, 158, 159, 161, 162, 163, 168, 169, 170, 176, 177, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 250, 251, 257, 258, 259, 260, 261, 267, 280], "wise": [9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 30, 41, 42, 43, 44, 45, 46, 48, 51, 54, 55, 66, 68, 74, 76, 77, 79, 81, 100, 102, 103, 104, 111, 112, 114, 118, 119, 120, 121, 122, 126, 127, 132, 140, 141, 142, 143, 144, 145, 146, 147, 151, 157, 158, 159, 161, 168, 170, 176, 230, 231, 238, 239, 240, 242, 243, 247, 250, 251, 259, 260, 266], "note": [9, 12, 14, 15, 16, 25, 26, 34, 35, 61, 68, 78, 100, 102, 103, 120, 136, 148, 158, 169, 178, 183, 185, 186, 196, 201, 259, 265], "shorthand": 9, "x1": [10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 74, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 107, 110, 111, 112, 115, 117, 119, 120, 121, 122, 124, 125, 126, 127, 130, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 217, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 269], "paramet": [10, 11, 12, 13, 16, 17, 23, 25, 26, 28, 29, 31, 32, 41, 42, 43, 44, 46, 50, 51, 52, 56, 58, 59, 60, 65, 66, 67, 68, 69, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 110, 115, 116, 117, 118, 120, 121, 122, 125, 128, 129, 131, 133, 134, 135, 136, 137, 139, 144, 145, 146, 147, 148, 149, 151, 154, 157, 159, 161, 162, 163, 164, 165, 168, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 208, 211, 214, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 237, 238, 239, 247, 248, 249, 252, 253, 254, 255, 260, 268, 269], "dimens": [10, 29, 36, 37, 38, 57, 68, 78, 132, 136, 160, 180, 232, 241, 280], "input": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 93, 94, 95, 96, 97, 99, 100, 101, 104, 106, 107, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 262, 264, 268, 269], "keyword": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 46, 51, 58, 59, 60, 66, 67, 69, 81, 100, 101, 104, 110, 115, 117, 118, 125, 151, 152, 157, 159, 161, 162, 163, 164, 165, 168, 174, 176, 230, 231, 234, 238, 239, 241, 247, 250, 252, 255, 260], "argument": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 46, 51, 58, 59, 60, 66, 67, 68, 69, 75, 81, 100, 101, 104, 110, 115, 117, 118, 125, 132, 135, 151, 152, 157, 159, 161, 162, 163, 164, 165, 168, 174, 176, 230, 231, 234, 238, 239, 241, 247, 250, 252, 255, 260], "current": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 46, 51, 58, 59, 60, 66, 67, 68, 69, 81, 100, 101, 104, 110, 115, 116, 117, 118, 125, 151, 152, 157, 159, 161, 162, 163, 164, 165, 168, 174, 176, 230, 231, 234, 238, 239, 241, 247, 250, 252, 255, 260], "unsupport": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 46, 51, 58, 59, 60, 66, 67, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 110, 115, 117, 118, 125, 135, 151, 152, 157, 159, 161, 162, 163, 164, 165, 168, 174, 176, 177, 230, 231, 234, 238, 239, 241, 247, 248, 250, 252, 255, 260], "otherwis": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 30, 39, 41, 42, 43, 44, 46, 51, 52, 53, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 75, 81, 100, 101, 104, 106, 107, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 174, 176, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 241, 242, 246, 247, 249, 252, 254, 255, 260, 264, 268, 269], "execut": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 31, 32, 39, 41, 42, 43, 44, 46, 51, 52, 53, 56, 57, 58, 59, 60, 65, 66, 67, 69, 70, 71, 75, 81, 100, 101, 104, 106, 107, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 174, 176, 183, 185, 186, 196, 201, 216, 217, 229, 230, 231, 232, 234, 235, 238, 239, 241, 242, 246, 247, 249, 252, 254, 255, 260, 264, 268, 269], "sequenti": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 39, 41, 42, 43, 44, 46, 51, 52, 53, 56, 57, 58, 59, 60, 65, 66, 67, 69, 70, 71, 75, 81, 100, 101, 104, 106, 107, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 174, 176, 229, 230, 231, 232, 234, 235, 238, 239, 241, 242, 246, 247, 249, 252, 254, 255, 260, 264, 268, 269], "cpu": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 39, 41, 42, 43, 44, 46, 51, 52, 53, 56, 57, 58, 59, 60, 65, 66, 67, 69, 70, 71, 75, 81, 100, 101, 104, 106, 107, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 174, 176, 229, 230, 231, 232, 234, 235, 238, 239, 241, 242, 246, 247, 249, 252, 254, 255, 260, 264, 268, 269], "x2": [11, 12, 13, 16, 20, 22, 23, 29, 41, 43, 44, 51, 53, 58, 66, 67, 74, 101, 104, 108, 111, 112, 115, 117, 119, 124, 125, 126, 127, 139, 144, 145, 146, 147, 148, 149, 151, 154, 157, 161, 169, 170, 174, 176, 231, 234, 237, 247, 252], "none": [11, 12, 14, 15, 16, 17, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 43, 44, 46, 47, 51, 54, 56, 57, 58, 66, 68, 69, 72, 73, 76, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 113, 115, 116, 120, 121, 122, 125, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 166, 172, 173, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 236, 237, 239, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 260, 263, 264, 267, 268, 269], "out": [11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 41, 42, 43, 44, 45, 46, 47, 51, 54, 55, 57, 62, 66, 68, 74, 75, 76, 77, 79, 100, 101, 104, 111, 112, 115, 118, 119, 120, 121, 122, 125, 126, 127, 135, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 157, 161, 166, 169, 170, 176, 177, 179, 229, 230, 231, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 260, 262, 264], "either": [11, 13, 23, 41, 43, 44, 51, 66, 74, 101, 104, 111, 112, 115, 119, 125, 126, 127, 136, 151, 157, 161, 170, 176, 231, 232, 234, 247], "scalar": [11, 13, 23, 36, 41, 43, 44, 51, 66, 68, 101, 104, 115, 123, 125, 151, 154, 157, 161, 170, 176, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 208, 211, 214, 216, 220, 222, 223, 224, 225, 226, 227, 228, 231, 234, 247], "default": [11, 12, 16, 17, 23, 25, 26, 27, 28, 29, 31, 32, 39, 41, 43, 44, 50, 51, 52, 53, 56, 57, 65, 66, 68, 69, 72, 73, 80, 82, 88, 101, 104, 106, 107, 108, 115, 120, 121, 122, 125, 134, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 166, 172, 173, 175, 176, 180, 231, 234, 237, 239, 246, 247, 253, 264, 268, 269], "b": [11, 47, 59, 60, 67, 68, 69, 104, 117, 138, 149, 162, 163, 174, 176, 181, 252, 255], "axi": [12, 14, 15, 16, 25, 26, 27, 39, 47, 56, 58, 59, 60, 65, 68, 69, 78, 82, 87, 88, 92, 93, 96, 108, 136, 139, 148, 150, 152, 153, 156, 162, 163, 166, 175, 177, 232, 235, 244, 245, 246, 248, 255, 264], "keepdim": [12, 16, 56, 68, 136, 150, 153, 156, 166, 177, 246, 248, 264], "fals": [12, 13, 16, 29, 30, 39, 50, 56, 57, 68, 73, 74, 107, 108, 111, 112, 119, 120, 121, 122, 126, 127, 134, 136, 138, 139, 144, 145, 146, 147, 148, 150, 153, 154, 156, 166, 170, 173, 177, 246, 248, 263, 264, 269], "whether": [12, 16, 128], "given": [12, 14, 15, 16, 17, 25, 26, 28, 29, 50, 57, 59, 60, 65, 68, 69, 72, 73, 106, 107, 115, 154, 156, 162, 163, 172, 173, 177, 180, 185, 207, 235, 236, 248, 255, 256, 268, 269], "evalu": [12, 16, 68, 70, 71, 117, 154, 174, 252], "onli": [12, 16, 17, 25, 26, 27, 29, 31, 32, 39, 41, 42, 43, 44, 50, 52, 53, 56, 57, 65, 69, 72, 73, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105, 106, 107, 108, 118, 120, 121, 122, 125, 128, 139, 144, 145, 146, 147, 148, 150, 152, 153, 154, 156, 166, 172, 173, 175, 180, 208, 233, 234, 235, 237, 246, 252, 253, 264, 268, 269], "Not": [12, 16, 68, 120, 162, 164, 165], "number": [12, 16, 17, 28, 40, 48, 56, 68, 100, 101, 108, 120, 134, 136, 139, 148, 162, 164, 165, 169, 180, 182, 192, 216, 231, 235, 236, 238, 260, 280], "infin": [12, 16, 100, 101, 120, 121, 122, 231, 260, 280], "becaus": [12, 16], "x3": [12, 16, 139, 148], "rtol": [13, 119], "1e": [13, 119, 198], "05": [13, 119], "atol": [13, 119], "08": [13, 119, 198], "two": [13, 14, 15, 30, 37, 41, 42, 43, 44, 49, 53, 58, 64, 70, 71, 117, 118, 119, 124, 135, 144, 146, 147, 149, 160, 174, 180, 209, 249, 265], "within": [13, 17, 30, 119, 180], "toler": [13, 30, 119], "1e10": [13, 119], "7": [13, 17, 46, 56, 60, 63, 68, 69, 76, 100, 110, 119, 138, 149, 153, 163, 169, 180, 204, 231, 247, 252, 257, 258, 260], "00001e10": [13, 119], "8": [13, 45, 63, 119, 138, 139, 148, 162, 180, 204, 223, 252, 255, 257, 258, 263], "propag": [14, 15], "ignor": [14, 15, 68, 152, 166, 246, 264], "thi": [14, 15, 34, 35, 61, 68, 102, 103, 105, 136, 158, 178, 213, 215, 259, 265, 270], "work": [14, 15, 34, 35, 61, 102, 103, 158, 178, 259, 265], "exactli": [14, 15, 34, 35, 61, 178, 180], "same": [14, 15, 30, 34, 35, 61, 67, 68, 73, 78, 102, 103, 107, 158, 173, 178, 180, 259, 265, 269], "start": [17, 108, 139, 148, 235], "stop": [17, 108, 139, 148], "step": [17, 108, 139, 148], "devic": [17, 29, 32, 68, 72, 106, 107, 180, 202, 207, 208, 209, 210, 211, 212, 213, 215, 221, 224, 268, 269], "usm_typ": [17, 29, 32, 68, 72, 106, 107, 180, 202, 207, 208, 209, 210, 211, 212, 213, 215, 221, 224, 268, 269], "sycl_queu": [17, 29, 32, 68, 72, 106, 107, 180, 268, 269], "evenli": [17, 28, 108, 139, 148], "interv": [17, 139, 180, 208, 210, 212, 213, 215, 223], "d": [17, 80, 83, 84, 85, 89, 90, 94, 95, 97, 98, 99, 135, 136, 154, 169, 185], "contain": [17, 68, 109, 180], "care": 17, "handl": [17, 169, 280], "endpoint": [17, 108, 139, 148], "trigonometr": [18, 19, 20, 22, 23, 24, 54, 55, 76, 77, 79, 140, 141, 142, 143, 239, 240, 280], "invers": [18, 19, 20, 21, 22, 23, 24, 42, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 118, 142, 226, 239], "cosin": [18, 19, 20, 54, 55, 239], "tangent": [18, 19, 20, 22, 23, 24, 250, 251], "sine": [18, 19, 20, 21, 239, 240], "14159265": 18, "hyperbol": [19, 21, 24, 55, 239, 240, 251, 280], "comput": [19, 20, 23, 39, 41, 42, 43, 44, 46, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 113, 117, 118, 129, 130, 131, 135, 136, 137, 144, 145, 146, 147, 152, 153, 158, 166, 246, 250, 251, 252, 260, 264], "e": [19, 21, 140, 180], "10": [19, 21, 25, 26, 28, 50, 60, 68, 106, 108, 113, 125, 140, 143, 148, 153, 165, 180, 182, 192, 204, 234, 257, 258], "65745445": 19, "99322285": 19, "arc": [20, 22, 23], "quadrant": [20, 22, 23], "correctli": [20, 22, 23, 136, 169], "5707963267948966": 20, "72538256": 21, "99822295": 21, "complex": [22, 23, 48, 67, 68, 75, 131, 138, 149, 280], "78539816": [22, 262], "57079633": [23, 179, 262], "54930614": 24, "convert": [25, 26, 31, 32, 33, 34, 36, 61, 62, 178, 179, 262], "flat": [25, 26, 68], "index": [25, 26, 68, 78, 154], "tupl": [25, 26, 78, 136, 232], "appli": [25, 26, 27], "index_arrai": [25, 26, 27, 68], "call": [25, 26, 27, 135, 244], "In": [25, 26, 68, 128, 180], "case": [25, 26, 138], "multipl": [25, 26, 27, 68, 131, 241], "occurr": [25, 26, 40], "first": [25, 26, 68, 77, 135, 176, 243], "13": [25, 26, 42, 68, 118, 163], "14": [25, 26, 41, 42, 67, 118, 252], "15": [25, 26, 60, 204, 248], "in_array1": [27, 56, 75], "kind": [27, 68, 175, 280], "order": [27, 29, 31, 32, 33, 35, 50, 68, 70, 71, 72, 73, 80, 106, 107, 131, 136, 160, 172, 173, 175, 229, 233, 237, 267, 268, 269, 280], "would": [27, 180, 254], "pramet": [27, 39, 53, 57, 150, 152, 153, 156, 166, 246, 264], "describ": [27, 68, 136, 280], "algorithm": [27, 68], "indirect": [27, 68, 241], "stabl": [27, 68, 241], "partial": [27, 241], "decim": [28, 68, 236], "37": 28, "nearest": [28, 100, 101, 231, 260], "even": 28, "int": [28, 40, 68, 74, 110, 175, 180, 208, 256], "subok": [29, 50, 68, 73, 107, 173, 269], "ndmin": 29, "new": [29, 68, 72, 73, 78, 106, 107, 160, 172, 173, 233, 235, 245, 254, 268, 269], "uniniti": [29, 73, 106, 172, 268], "than": [29, 134, 232], "a1": 30, "a2": 30, "equal_nan": [30, 119], "have": [30, 199], "consist": 30, "pass": [31, 32, 68], "subclass": [31, 32], "through": [31, 32], "which": [31, 32, 68, 128, 134, 136, 169, 244], "alwai": 31, "contigu": [31, 32, 33, 68, 229], "float": [31, 32, 34, 110, 134, 136, 148, 180, 210, 212, 213, 215, 224, 256, 280], "point": [31, 32, 139, 280], "major": [31, 32, 33, 68], "check": [31, 32, 128], "inf": [31, 32, 120, 121, 122, 136, 140, 141, 143], "construct": [31, 32, 63, 68, 105, 155, 171], "grid": [31, 32, 154], "object": [32, 50, 68, 78, 128, 136, 155, 171], "satisfi": 33, "ari": [36, 37, 38], "least": [36, 37, 38, 111, 112, 119, 126, 127, 170], "whilst": 36, "higher": 36, "preserv": [36, 68], "three": 38, "weight": [39, 40, 57, 113, 152], "specifi": [39, 68, 108, 117, 136, 139, 148, 152, 153, 166, 180, 193, 203, 235, 246, 252, 264], "arithmet": [39, 108, 152, 153, 246, 264, 280], "minlength": 40, "count": [40, 56, 133, 169, 182, 270, 280], "non": [40, 56, 120, 169], "find": [40, 134, 237, 241, 261, 267], "re": [40, 47, 113, 261], "bit": [41, 42, 43, 44, 118, 125, 144, 146, 147, 234, 280], "AND": [41, 42, 43, 44, 118, 144, 145, 146, 147], "integ": [41, 42, 43, 44, 68, 100, 101, 118, 119, 125, 133, 136, 180, 208, 211, 231, 234, 235, 260], "truth": [41, 42, 43, 44, 74, 111, 112, 118, 126, 127, 144, 145, 146, 147, 170, 280], "OR": [41, 42, 43, 44, 118, 144, 145, 146, 147], "xor": [41, 42, 43, 44, 118, 144, 145, 146, 147], "255": [41, 43], "NOT": [42, 118, 144, 145, 146, 147], "31": [44, 108], "cube": 45, "27": [45, 263], "truncat": [46, 100, 218, 260], "arr": [47, 68, 169, 204], "cast": [47, 52, 68], "same_kind": [47, 52], "join": [47, 245, 280], "sequenc": [47, 49, 53, 114, 133, 135, 204, 217, 245, 266], "exist": [47, 78], "t": [47, 57, 68, 131, 222, 273], "obtain": [48, 169], "chang": [48, 51, 68, 233, 262, 280], "imaginari": 48, "part": [48, 159], "2j": 48, "1j": [48, 138], "j": 48, "v": 49, "mode": [49, 53, 68, 137, 218, 223], "discret": [49, 53, 65, 69, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 180, 270], "linear": [49, 53, 148, 270, 280], "convolut": [49, 53], "ca": 49, "k": [50, 63, 64, 68, 80, 256, 257, 258, 284], "y": [50, 57, 58, 78, 110, 154, 159, 255, 267], "z": [50, 154, 190], "9": [51, 56, 63, 66, 68, 81, 101, 138, 149, 161, 176, 180, 182, 184, 204, 242, 243, 252, 257, 258, 263], "dst": 52, "src": 52, "anoth": 52, "broadcast": [52, 136, 149], "necessari": 52, "valid": 53, "pi": [54, 62, 239, 240, 250, 251, 262], "123233995736766e": 54, "17": 54, "rowvar": 57, "bia": 57, "ddof": [57, 68, 166, 246, 264], "fweight": 57, "aweight": 57, "estim": [57, 182, 199], "covari": 57, "matrix": [57, 128, 131, 133, 134, 136, 137, 149, 258, 263, 280], "m": [57, 80, 128, 129, 131, 134, 256], "axisa": 58, "axisb": 58, "axisc": 58, "vector": [58, 134, 135, 136, 154, 265, 280], "cumul": [59, 60, 68, 162, 163], "24": [59, 69, 164, 177], "120": [59, 62], "720": 59, "remov": [61, 68, 78, 178, 244, 280], "larg": [61, 178], "jump": [61, 178], "wrap": [61, 178], "rad": 62, "30": [62, 179], "60": 62, "90": 62, "150": 62, "prepend": 65, "th": [65, 69, 153, 257, 258], "over": [67, 136, 139, 149, 154, 162, 177, 180, 207, 212, 223, 224, 248], "arbitrari": [67, 149], "ax": [67, 68, 83, 85, 86, 89, 90, 91, 94, 95, 97, 99, 117, 136, 149, 160, 235, 249, 252, 254], "f8": [68, 72], "buffer": 68, "offset": [68, 253], "stride": 68, "wrapper": 68, "tensor": [68, 117, 252], "usm_ndarrai": 68, "compliant": 68, "origin": [68, 136, 160], "__getitem__": 68, "__setitem__": 68, "val": 68, "__len__": 68, "perform": [68, 128], "oper": [68, 78, 128, 270, 280], "equival": [68, 78, 179, 180, 236], "If": [68, 134, 135, 136, 170, 180, 232], "option": [68, 134, 135, 136], "Its": 68, "right": [68, 115, 125, 130, 223, 234, 237], "hold": [68, 136], "output": [68, 133, 135, 154, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 280], "integer_arrai": 68, "versionchang": 68, "previous": 68, "wa": 68, "error": [68, 75, 270], "At": [68, 111, 112, 126, 127, 170], "some": [68, 78, 100], "futur": 68, "date": 68, "intend": 68, "until": [68, 235], "should": [68, 111, 112, 119, 126, 127, 170, 197, 232, 237, 267], "explicitli": 68, "avoid": 68, "futurewarn": 68, "quicksort": 68, "mergesort": 68, "heapsort": 68, "field": [68, 154], "defin": 68, "compar": 68, "second": [68, 77, 176, 243], "etc": [68, 199, 280], "other": [68, 100, 135, 160, 170, 180, 280], "word": [68, 100, 180], "yield": [68, 180], "maskedarrai": 68, "inplac": 68, "asnumpi": 68, "content": [68, 217], "popul": [68, 180, 207], "unsaf": 68, "target": 68, "A": [68, 105, 131, 180, 182, 199], "row": [68, 135, 266], "style": 68, "fortran": 68, "And": 68, "keep": 68, "close": [68, 180, 208], "possibl": 68, "happen": [68, 182], "itself": 68, "possibli": 68, "doe": 68, "rais": [68, 77, 133, 176, 243], "axis1": [68, 249, 253], "axis2": [68, 249, 253], "assign": 68, "collaps": 68, "occur": 68, "get_arrai": 68, "get": 68, "id": 68, "standard": [68, 101, 104, 152, 158, 180, 195, 202, 209, 218, 219, 220, 221, 222, 231, 246, 264, 280], "random": [68, 138, 270, 280], "123": 68, "initi": [68, 72, 150, 156, 177, 248], "dparrai": [68, 273, 281], "d0": [68, 207, 209], "dn": [68, 207, 209], "unlik": 68, "free": 68, "allow": 68, "separ": 68, "singl": [68, 135, 199, 244], "entri": [68, 72, 244], "varianc": [68, 152, 166, 246, 264, 280], "to_devic": 68, "target_devic": 68, "transfer": 68, "mask": 68, "finit": [68, 120, 121, 122], "__eq__": [68, 180], "self": [68, 180], "__ne__": [68, 180], "__lt__": [68, 180], "__le__": [68, 180], "__gt__": [68, 180], "__ge__": [68, 180], "attribut": 68, "revers": [68, 254], "just": 68, "items": 68, "sycl_context": 68, "sycl_devic": 68, "to_end": 69, "to_begin": 69, "consecut": 69, "obj": [69, 123], "seealso": 69, "einstein": [70, 71, 117, 149, 174, 252], "summat": [70, 71, 117, 149, 174, 252], "convent": [70, 71, 117, 149, 174, 252], "operand": [70, 71, 117, 174, 252], "lowest": [70, 71, 180, 208], "cost": [70, 71], "contract": [70, 71], "express": [70, 71], "consid": [71, 120, 134, 180], "creation": [71, 270, 280], "intermedi": 71, "without": [72, 233], "prototyp": 73, "scipi": 75, "math": 75, "num": [75, 108, 139, 148, 262], "25": [75, 110, 113, 139, 161, 176, 209, 218, 263, 264], "75": [75, 110, 139], "99532227": 75, "99853728": 75, "99959305": 75, "99989938": 75, "99997791": 75, "expon": [76, 79, 206, 280], "718281828": [76, 79], "389056099": [76, 79], "exponent2": 77, "expand": 78, "appear": 78, "singleton": 78, "newaxi": 78, "mai": [78, 148], "instead": [78, 100, 108, 139, 148, 169], "minu": [79, 100, 101, 231, 260], "elsewher": [80, 256], "fourier": [82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 270], "transform": [82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 270], "complex64": [82, 88], "datatyp": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 134], "batch": [83, 85, 89, 90, 94, 95, 97, 99], "sampl": [84, 98, 108, 139, 148, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 270, 280], "frequenc": [84, 86, 91, 98], "shift": [86, 91, 125, 234], "center": [86, 91], "spectrum": [86, 91], "signal": [87, 92], "ha": [87, 92, 244], "hermitian": [87, 92, 128, 134, 138, 280], "symmetri": [87, 92], "toward": [100, 101, 231, 260], "spreadsheet": 100, "program": 100, "definit": [100, 128], "largest": 101, "smaller": 101, "divis": [101, 102, 103, 104, 151, 157, 158, 176, 231, 259], "remind": [101, 104, 158], "complementari": [101, 104, 158], "file": [105, 109], "text": 105, "binari": [105, 270, 280], "highli": 105, "effici": [105, 134], "read": 105, "known": [105, 218], "well": [105, 182, 199, 218], "pars": 105, "simpli": 105, "format": [105, 280], "written": 105, "fill_valu": [106, 107], "dpnp_arrai": [107, 167, 269, 270], "50": [108, 139, 148, 252], "scale": [108, 139, 148, 180, 187, 189, 191, 192, 193, 194, 202, 214, 219, 226], "progress": [108, 139], "1000": [108, 148, 181, 182, 187, 189, 191, 192, 193, 194, 195, 202, 203, 206, 208, 210, 213, 215, 221, 225, 226, 227, 228], "100": [108, 148, 192, 218], "62341325": 108, "6227766": 108, "177": [108, 148], "827941": [108, 148], "directori": 109, "h": [109, 128, 154], "header": 109, "vararg": 110, "y1": [110, 255], "bin": [113, 218], "densiti": 113, "dataset": 113, "rubric": 113, "hist": [113, 218], "bin_edg": 113, "4999999999999996": 113, "tup": [114, 266], "horizont": 114, "leg": 115, "triangl": [115, 257, 258], "hypotenus": 115, "main": [116, 131], "boolean": [119, 120, 121, 122], "nat": 122, "kroneck": 124, "left": [125, 136, 223, 234, 237], "40": 125, "decomposit": [128, 138, 280], "l": 128, "lower": [128, 257], "ordinari": 128, "symmetr": [128, 134], "No": 128, "verifi": 128, "addit": 128, "actual": 128, "array_lik": [128, 129, 131, 133, 134, 135, 136], "upper": [128, 137, 258], "factor": [128, 137], "determin": 129, "eigenvalu": [130, 131, 280], "eigenvector": [130, 131], "gener": [131, 180, 182, 185, 216, 263, 280], "aren": 131, "whose": 131, "w": 131, "accord": 131, "thei": 131, "necessarili": 131, "nor": 131, "matric": [131, 134, 136, 154, 280], "suppli": [133, 135], "tol": [134, 198], "rank": 134, "singular": [134, 138], "threshold": 134, "ep": 134, "epsilon": 134, "assum": 134, "enabl": 134, "treat": [135, 162, 164, 165], "last": [135, 244], "ord": 136, "abl": 136, "eight": 136, "infinit": 136, "depend": 136, "unless": 136, "both": 136, "With": 136, "against": 136, "reduc": [137, 138], "q": [137, 153], "orthonorm": 137, "r": 137, "full_matric": 138, "compute_uv": 138, "reconstruct": 138, "2d": 138, "u": 138, "vh": 138, "smat": 138, "4d": 138, "retstep": 139, "end": 139, "logarithm": [139, 140, 141, 142, 143, 196, 280], "natur": [140, 143], "plu": [140, 143], "30102999566": 141, "69314718": 142, "09861229": 142, "uniformli": [148, 180, 224], "directli": 148, "215": 148, "443469": 148, "464": 148, "15888336": 148, "316": 148, "22776602": 148, "562": 148, "34132519": 148, "0396842": 148, "34960421": 148, "rule": [149, 255], "deviat": [152, 180, 195, 202, 246, 264], "while": [152, 166, 169, 246, 264], "overwrite_input": 153, "xi": 154, "spars": 154, "xy": 154, "coordin": 154, "make": 154, "xn": 154, "nx": 154, "ny": 154, "xv": 154, "yv": 154, "matplotlib": [154, 218], "pyplot": [154, 218], "plt": [154, 218], "xx": 154, "yy": 154, "contourf": 154, "show": [154, 218], "dpnp_iface_arraycr": [155, 171], "mgridclass": 155, "dens": 155, "5j": [155, 171], "fraction": 159, "integr": [159, 255], "destin": 160, "move": [160, 235, 254], "remain": 160, "interchang": [160, 249], "_novalu": [166, 246, 264], "alia": [167, 180, 210, 213, 215], "out2": 169, "ogridclass": 171, "open": [171, 180, 210, 212, 213, 215], "kth": 175, "introselect": 175, "deg": 179, "52359878": 179, "04719755": 179, "0943951": 179, "61799388": 179, "mersenn": 180, "twister": 180, "pseudo": 180, "intern": 180, "state": 180, "get_sycl_queu": 180, "loc": [180, 191, 193, 194, 202, 226], "draw": [180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "gaussian": [180, 202, 226], "drawn": [180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 208, 211, 214, 220, 222, 223, 224, 225, 226, 227, 228], "58997253": 180, "84288406": 180, "33836967": 180, "16394577": 180, "40882036": 180, "39295758": 180, "48927254": 180, "74921661": 180, "13436424": 180, "56920387": 180, "84743374": 180, "80226506": 180, "76377462": 180, "06310682": 180, "25506903": 180, "1179187": 180, "49543509": 180, "76096244": 180, "low": [180, 208, 211, 224], "high": [180, 208, 211, 224], "inclus": [180, 208, 211], "exclus": [180, 208], "half": [180, 210, 212, 213, 215], "omit": [180, 208], "84401099": 180, "four": [180, 209], "88997253": 180, "54288406": 180, "63836967": 180, "46394577": 180, "70882036": 180, "69295758": 180, "78927254": 180, "04921661": 180, "continu": [180, 212], "stdev": [180, 221], "81715362": 180, "54465213": 180, "18557831": 180, "28352814": 180, "67718303": 180, "11570901": 180, "21968665": 180, "18236388": 180, "08156915": 180, "21941987": 180, "24544512": 180, "63522211": 180, "673174": 180, "exclud": 180, "23": 180, "54": 180, "48093112": 180, "52928804": 180, "1196081": 180, "6990877": 180, "34074171": 180, "conveni": 180, "accept": 180, "g": 180, "alpha": [181, 186, 187, 203, 206], "p": [182, 185, 190, 196, 199], "trial": 182, "probabl": [182, 190, 199], "coin": 182, "world": [182, 199], "compani": [182, 199], "drill": [182, 199], "wild": [182, 199], "cat": [182, 199], "oil": [182, 199], "explor": [182, 199], "success": [182, 190, 199], "nine": 182, "fail": 182, "what": [182, 199], "let": 182, "do": 182, "000": 182, "model": 182, "20000": 182, "answer": 182, "38885": 182, "38": 182, "length": 183, "fallback": [183, 185, 186, 196, 201, 216, 217], "df": [184, 200, 222, 223], "chi": [184, 200], "89920014": 184, "00867716": 184, "13710533": 184, "62318272": 184, "dfnum": [188, 201], "dfden": [188, 201], "ten": 190, "thousand": 190, "individu": 190, "35": 190, "10000": [190, 205, 214, 224], "mu": [191, 195, 202, 225], "locat": [191, 193], "ngood": 192, "nbad": 192, "nsampl": 192, "nsamp": 192, "good": 192, "bad": 192, "doubl": 193, "decai": 193, "sigma": [195, 202], "seri": 196, "pval": 197, "iinfo": 197, "throw": 197, "dice": 197, "check_valid": 198, "warn": 198, "multivari": 198, "after": 199, "100000": 199, "nonc": [200, 201], "noncentr": [200, 201], "todo": 200, "ii": 203, "lomax": 203, "randomli": 204, "lam": 205, "1923875335537315": 209, "rese": 216, "legaci": 216, "mt19937": 216, "engin": 216, "modifi": [217, 254], "cauchi": 218, "lorentz": 218, "plot": 218, "1000000": [218, 220, 222, 223], "so": 218, "3x8000": 219, "8000": 219, "student": 222, "freedom": 222, "kappa": 225, "von": 225, "mise": 225, "dispers": 225, "33": 230, "3003003": 230, "len": 232, "newshap": 233, "give": 233, "backward": 235, "li": 235, "detail": 236, "side": 237, "sorter": 237, "maintain": [237, 267], "2246467991473532e": 239, "3012989": 240, "548739": 240, "traceback": 244, "recent": 244, "valueerror": 244, "cannot": 244, "1234": 244, "0d": 244, "118033988749895": 246, "22460635e": 250, "63317787e": 250, "996272": 251, "917152": 251, "32": 252, "dx": 255, "composit": 255, "trapezoid": 255, "delta": 262, "complement": 262, "phase": 262, "49778714": 262, "28318531": 262, "increas": 263, "vandermond": 263, "125": 263, "vertic": 266, "condit": 267, "offici": 270, "avail": 270, "algebra": [270, 280], "logic": [270, 280], "mathemat": [270, 280], "polynomi": [270, 280], "search": [270, 280], "statist": [270, 280], "summari": 270, "modul": 270, "level": 270, "util": 270, "counterpart": 276, "basic": [276, 280], "concept": 276, "page": 280, "cover": 280, "numer": 280, "ad": 280, "rearrang": 280, "elementwis": [280, 284], "pack": 280, "helper": 280, "equat": 280, "poly1d": 280, "variou": 284}, "objects": {"": [[2, 0, 0, "-", "dpnp"]], "dpnp": [[9, 1, 1, "", "abs"], [10, 1, 1, "", "absolute"], [11, 1, 1, "", "add"], [12, 1, 1, "", "all"], [13, 1, 1, "", "allclose"], [14, 1, 1, "", "amax"], [15, 1, 1, "", "amin"], [16, 1, 1, "", "any"], [17, 1, 1, "", "arange"], [18, 1, 1, "", "arccos"], [19, 1, 1, "", "arccosh"], [20, 1, 1, "", "arcsin"], [21, 1, 1, "", "arcsinh"], [22, 1, 1, "", "arctan"], [23, 1, 1, "", "arctan2"], [24, 1, 1, "", "arctanh"], [25, 1, 1, "", "argmax"], [26, 1, 1, "", "argmin"], [27, 1, 1, "", "argsort"], [28, 1, 1, "", "around"], [29, 1, 1, "", "array"], [30, 1, 1, "", "array_equal"], [31, 1, 1, "", "asanyarray"], [32, 1, 1, "", "asarray"], [33, 1, 1, "", "ascontiguousarray"], [34, 1, 1, "", "asfarray"], [35, 1, 1, "", "asnumpy"], [36, 1, 1, "", "atleast_1d"], [37, 1, 1, "", "atleast_2d"], [38, 1, 1, "", "atleast_3d"], [39, 1, 1, "", "average"], [40, 1, 1, "", "bincount"], [41, 1, 1, "", "bitwise_and"], [42, 1, 1, "", "bitwise_not"], [43, 1, 1, "", "bitwise_or"], [44, 1, 1, "", "bitwise_xor"], [45, 1, 1, "", "cbrt"], [46, 1, 1, "", "ceil"], [47, 1, 1, "", "concatenate"], [48, 1, 1, "", "conj"], [49, 1, 1, "", "convolve"], [50, 1, 1, "", "copy"], [51, 1, 1, "", "copysign"], [52, 1, 1, "", "copyto"], [53, 1, 1, "", "correlate"], [54, 1, 1, "", "cos"], [55, 1, 1, "", "cosh"], [56, 1, 1, "", "count_nonzero"], [57, 1, 1, "", "cov"], [58, 1, 1, "", "cross"], [59, 1, 1, "", "cumprod"], [60, 1, 1, "", "cumsum"], [61, 1, 1, "", "deg2rad"], [62, 1, 1, "", "degrees"], [63, 1, 1, "", "diag"], [64, 1, 1, "", "diagflat"], [65, 1, 1, "", "diff"], [66, 1, 1, "", "divide"], [67, 1, 1, "", "dot"], [69, 1, 1, "", "ediff1d"], [70, 1, 1, "", "einsum"], [71, 1, 1, "", "einsum_path"], [72, 1, 1, "", "empty"], [73, 1, 1, "", "empty_like"], [74, 1, 1, "", "equal"], [75, 1, 1, "", "erf"], [76, 1, 1, "", "exp"], [77, 1, 1, "", "exp2"], [78, 1, 1, "", "expand_dims"], [79, 1, 1, "", "expm1"], [80, 1, 1, "", "eye"], [81, 1, 1, "", "fabs"], [8, 0, 0, "-", "fft"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "fmax"], [103, 1, 1, "", "fmin"], [104, 1, 1, "", "fmod"], [105, 1, 1, "", "fromfile"], [106, 1, 1, "", "full"], [107, 1, 1, "", "full_like"], [108, 1, 1, "", "geomspace"], [109, 1, 1, "", "get_include"], [110, 1, 1, "", "gradient"], [111, 1, 1, "", "greater"], [112, 1, 1, "", "greater_equal"], [113, 1, 1, "", "histogram"], [114, 1, 1, "", "hstack"], [115, 1, 1, "", "hypot"], [116, 1, 1, "", "identity"], [117, 1, 1, "", "inner"], [118, 1, 1, "", "invert"], [119, 1, 1, "", "isclose"], [120, 1, 1, "", "isfinite"], [121, 1, 1, "", "isinf"], [122, 1, 1, "", "isnan"], [123, 1, 1, "", "isscalar"], [124, 1, 1, "", "kron"], [125, 1, 1, "", "left_shift"], [126, 1, 1, "", "less"], [127, 1, 1, "", "less_equal"], [139, 1, 1, "", "linspace"], [140, 1, 1, "", "log"], [141, 1, 1, "", "log10"], [142, 1, 1, "", "log1p"], [143, 1, 1, "", "log2"], [144, 1, 1, "", "logical_and"], [145, 1, 1, "", "logical_not"], [146, 1, 1, "", "logical_or"], [147, 1, 1, "", "logical_xor"], [148, 1, 1, "", "logspace"], [149, 1, 1, "", "matmul"], [150, 1, 1, "", "max"], [151, 1, 1, "", "maximum"], [152, 1, 1, "", "mean"], [153, 1, 1, "", "median"], [154, 1, 1, "", "meshgrid"], [155, 5, 1, "", "mgrid"], [156, 1, 1, "", "min"], [157, 1, 1, "", "minimum"], [158, 1, 1, "", "mod"], [159, 1, 1, "", "modf"], [160, 1, 1, "", "moveaxis"], [161, 1, 1, "", "multiply"], [162, 1, 1, "", "nancumprod"], [163, 1, 1, "", "nancumsum"], [164, 1, 1, "", "nanprod"], [165, 1, 1, "", "nansum"], [166, 1, 1, "", "nanvar"], [167, 3, 1, "", "ndarray"], [168, 1, 1, "", "negative"], [169, 1, 1, "", "nonzero"], [170, 1, 1, "", "not_equal"], [171, 5, 1, "", "ogrid"], [172, 1, 1, "", "ones"], [173, 1, 1, "", "ones_like"], [174, 1, 1, "", "outer"], [175, 1, 1, "", "partition"], [176, 1, 1, "", "power"], [177, 1, 1, "", "prod"], [178, 1, 1, "", "rad2deg"], [179, 1, 1, "", "radians"], [279, 0, 0, "-", "random"], [229, 1, 1, "", "ravel"], [230, 1, 1, "", "reciprocal"], [231, 1, 1, "", "remainder"], [232, 1, 1, "", "repeat"], [233, 1, 1, "", "reshape"], [234, 1, 1, "", "right_shift"], [235, 1, 1, "", "rollaxis"], [236, 1, 1, "", "round_"], [237, 1, 1, "", "searchsorted"], [238, 1, 1, "", "sign"], [239, 1, 1, "", "sin"], [240, 1, 1, "", "sinh"], [241, 1, 1, "", "sort"], [242, 1, 1, "", "sqrt"], [243, 1, 1, "", "square"], [244, 1, 1, "", "squeeze"], [245, 1, 1, "", "stack"], [246, 1, 1, "", "std"], [247, 1, 1, "", "subtract"], [248, 1, 1, "", "sum"], [249, 1, 1, "", "swapaxes"], [250, 1, 1, "", "tan"], [251, 1, 1, "", "tanh"], [252, 1, 1, "", "tensordot"], [253, 1, 1, "", "trace"], [254, 1, 1, "", "transpose"], [255, 1, 1, "", "trapz"], [256, 1, 1, "", "tri"], [257, 1, 1, "", "tril"], [258, 1, 1, "", "triu"], [259, 1, 1, "", "true_divide"], [260, 1, 1, "", "trunc"], [261, 1, 1, "", "unique"], [262, 1, 1, "", "unwrap"], [263, 1, 1, "", "vander"], [264, 1, 1, "", "var"], [265, 1, 1, "", "vdot"], [266, 1, 1, "", "vstack"], [267, 1, 1, "", "where"], [268, 1, 1, "", "zeros"], [269, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[68, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[68, 3, 1, "", "T"], [68, 4, 1, "", "__eq__"], [68, 4, 1, "", "__ge__"], [68, 4, 1, "", "__getitem__"], [68, 4, 1, "", "__gt__"], [68, 4, 1, "", "__le__"], [68, 4, 1, "", "__len__"], [68, 4, 1, "", "__lt__"], [68, 4, 1, "", "__ne__"], [68, 4, 1, "", "__setitem__"], [68, 4, 1, "", "all"], [68, 4, 1, "", "any"], [68, 4, 1, "", "argmax"], [68, 4, 1, "", "argmin"], [68, 4, 1, "", "argsort"], [68, 4, 1, "", "asnumpy"], [68, 4, 1, "", "astype"], [68, 4, 1, "", "choose"], [68, 4, 1, "", "conj"], [68, 4, 1, "", "conjugate"], [68, 4, 1, "", "cumsum"], [68, 3, 1, "", "device"], [68, 4, 1, "", "diagonal"], [68, 3, 1, "", "dtype"], [68, 4, 1, "", "fill"], [68, 3, 1, "", "flat"], [68, 4, 1, "", "flatten"], [68, 4, 1, "", "get_array"], [68, 4, 1, "", "item"], [68, 3, 1, "", "itemsize"], [68, 4, 1, "", "max"], [68, 4, 1, "", "mean"], [68, 4, 1, "", "min"], [68, 3, 1, "", "ndim"], [68, 4, 1, "", "prod"], [68, 4, 1, "", "reshape"], [68, 4, 1, "", "round"], [68, 3, 1, "", "shape"], [68, 3, 1, "", "size"], [68, 4, 1, "", "squeeze"], [68, 4, 1, "", "std"], [68, 3, 1, "", "strides"], [68, 4, 1, "", "sum"], [68, 3, 1, "", "sycl_context"], [68, 3, 1, "", "sycl_device"], [68, 3, 1, "", "sycl_queue"], [68, 4, 1, "", "take"], [68, 4, 1, "", "to_device"], [68, 4, 1, "", "transpose"], [68, 3, 1, "", "usm_type"], [68, 4, 1, "", "var"]], "dpnp.fft": [[82, 1, 1, "", "fft"], [83, 1, 1, "", "fft2"], [84, 1, 1, "", "fftfreq"], [85, 1, 1, "", "fftn"], [86, 1, 1, "", "fftshift"], [87, 1, 1, "", "hfft"], [88, 1, 1, "", "ifft"], [89, 1, 1, "", "ifft2"], [90, 1, 1, "", "ifftn"], [91, 1, 1, "", "ifftshift"], [92, 1, 1, "", "ihfft"], [93, 1, 1, "", "irfft"], [94, 1, 1, "", "irfft2"], [95, 1, 1, "", "irfftn"], [96, 1, 1, "", "rfft"], [97, 1, 1, "", "rfft2"], [98, 1, 1, "", "rfftfreq"], [99, 1, 1, "", "rfftn"]], "dpnp.linalg": [[128, 1, 1, "", "cholesky"], [129, 1, 1, "", "det"], [130, 1, 1, "", "eig"], [131, 1, 1, "", "eigvals"], [132, 1, 1, "", "inv"], [133, 1, 1, "", "matrix_power"], [134, 1, 1, "", "matrix_rank"], [135, 1, 1, "", "multi_dot"], [136, 1, 1, "", "norm"], [137, 1, 1, "", "qr"], [138, 1, 1, "", "svd"]], "dpnp.random": [[180, 2, 1, "", "RandomState"], [181, 1, 1, "", "beta"], [182, 1, 1, "", "binomial"], [183, 1, 1, "", "bytes"], [184, 1, 1, "", "chisquare"], [185, 1, 1, "", "choice"], [186, 1, 1, "", "dirichlet"], [187, 1, 1, "", "exponential"], [188, 1, 1, "", "f"], [189, 1, 1, "", "gamma"], [190, 1, 1, "", "geometric"], [191, 1, 1, "", "gumbel"], [192, 1, 1, "", "hypergeometric"], [193, 1, 1, "", "laplace"], [194, 1, 1, "", "logistic"], [195, 1, 1, "", "lognormal"], [196, 1, 1, "", "logseries"], [197, 1, 1, "", "multinomial"], [198, 1, 1, "", "multivariate_normal"], [199, 1, 1, "", "negative_binomial"], [200, 1, 1, "", "noncentral_chisquare"], [201, 1, 1, "", "noncentral_f"], [202, 1, 1, "", "normal"], [203, 1, 1, "", "pareto"], [204, 1, 1, "", "permutation"], [205, 1, 1, "", "poisson"], [206, 1, 1, "", "power"], [207, 1, 1, "", "rand"], [208, 1, 1, "", "randint"], [209, 1, 1, "", "randn"], [210, 1, 1, "", "random"], [211, 1, 1, "", "random_integers"], [212, 1, 1, "", "random_sample"], [213, 1, 1, "", "ranf"], [214, 1, 1, "", "rayleigh"], [215, 1, 1, "", "sample"], [216, 1, 1, "", "seed"], [217, 1, 1, "", "shuffle"], [218, 1, 1, "", "standard_cauchy"], [219, 1, 1, "", "standard_exponential"], [220, 1, 1, "", "standard_gamma"], [221, 1, 1, "", "standard_normal"], [222, 1, 1, "", "standard_t"], [223, 1, 1, "", "triangular"], [224, 1, 1, "", "uniform"], [225, 1, 1, "", "vonmises"], [226, 1, 1, "", "wald"], [227, 1, 1, "", "weibull"], [228, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[180, 4, 1, "", "__eq__"], [180, 4, 1, "", "__ge__"], [180, 4, 1, "", "__gt__"], [180, 4, 1, "", "__le__"], [180, 4, 1, "", "__lt__"], [180, 4, 1, "", "__ne__"], [180, 4, 1, "", "get_state"], [180, 4, 1, "", "get_sycl_queue"], [180, 4, 1, "", "normal"], [180, 4, 1, "", "rand"], [180, 4, 1, "", "randint"], [180, 4, 1, "", "randn"], [180, 4, 1, "", "random_sample"], [180, 4, 1, "", "standard_normal"], [180, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"dpctl": 0, "usag": 0, "exampl": 0, "c": 1, "backend": 1, "api": [1, 270], "refer": [1, 270], "dpnp": [2, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279], "A": 2, "numpi": [2, 7], "compat": 2, "librari": 2, "sycl": 2, "base": 2, "devic": 2, "instal": 3, "guid": 3, "requir": 3, "python": 3, "depend": 3, "from": [3, 6], "conda": 3, "forg": 3, "sourc": 3, "binari": 4, "oper": [4, 272, 273, 274, 284], "elementwis": 4, "bit": [4, 284], "pack": 4, "output": 4, "format": 4, "comparison": [5, 272, 284], "tabl": 5, "summari": 5, "modul": [5, 278], "level": 5, "multi": [5, 276], "dimension": [5, 276], "arrai": [5, 6, 29, 272, 273, 276], "linear": [5, 271], "algebra": [5, 271], "discret": 5, "fourier": 5, "transform": 5, "random": [5, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 279], "sampl": [5, 215, 279], "creation": 6, "routin": [6, 8, 273, 274, 275, 280], "basic": [6, 273, 278], "other": [6, 274], "data": [6, 7, 279], "numer": 6, "rang": 6, "matrix": [6, 271], "differ": [7, 274], "between": 7, "type": [7, 272], "fft": [8, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "function": [8, 272, 274, 282, 283, 284], "standard": 8, "real": 8, "hermitian": 8, "helper": 8, "ab": 9, "absolut": 10, "add": 11, "all": 12, "allclos": 13, "amax": 14, "amin": 15, "ani": 16, "arang": 17, "arcco": 18, "arccosh": 19, "arcsin": 20, "arcsinh": 21, "arctan": 22, "arctan2": 23, "arctanh": 24, "argmax": 25, "argmin": 26, "argsort": 27, "around": 28, "array_equ": 30, "asanyarrai": 31, "asarrai": 32, "ascontiguousarrai": 33, "asfarrai": 34, "asnumpi": 35, "atleast_1d": 36, "atleast_2d": 37, "atleast_3d": 38, "averag": 39, "bincount": 40, "bitwise_and": 41, "bitwise_not": 42, "bitwise_or": 43, "bitwise_xor": 44, "cbrt": 45, "ceil": 46, "concaten": 47, "conj": 48, "convolv": 49, "copi": 50, "copysign": 51, "copyto": 52, "correl": [53, 283], "co": 54, "cosh": 55, "count_nonzero": 56, "cov": 57, "cross": 58, "cumprod": 59, "cumsum": 60, "deg2rad": 61, "degre": 62, "diag": 63, "diagflat": 64, "diff": 65, "divid": 66, "dot": 67, "dpnp_arrai": 68, "ediff1d": 69, "einsum": 70, "einsum_path": 71, "empti": 72, "empty_lik": 73, "equal": 74, "erf": 75, "exp": 76, "exp2": 77, "expand_dim": 78, "expm1": 79, "ey": 80, "fab": 81, "fft2": 83, "fftfreq": 84, "fftn": 85, "fftshift": 86, "hfft": 87, "ifft": 88, "ifft2": 89, "ifftn": 90, "ifftshift": 91, "ihfft": 92, "irfft": 93, "irfft2": 94, "irfftn": 95, "rfft": 96, "rfft2": 97, "rfftfreq": 98, "rfftn": 99, "floor": 100, "floor_divid": 101, "fmax": 102, "fmin": 103, "fmod": 104, "fromfil": 105, "full": 106, "full_lik": 107, "geomspac": 108, "get_includ": 109, "gradient": 110, "greater": 111, "greater_equ": 112, "histogram": [113, 283], "hstack": 114, "hypot": 115, "ident": 116, "inner": 117, "invert": 118, "isclos": 119, "isfinit": 120, "isinf": 121, "isnan": 122, "isscalar": 123, "kron": 124, "left_shift": 125, "less": 126, "less_equ": 127, "linalg": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "choleski": 128, "det": 129, "eig": 130, "eigval": 131, "inv": 132, "matrix_pow": 133, "matrix_rank": 134, "multi_dot": 135, "norm": [136, 271], "qr": 137, "svd": 138, "linspac": 139, "log": 140, "log10": 141, "log1p": 142, "log2": 143, "logical_and": 144, "logical_not": 145, "logical_or": 146, "logical_xor": 147, "logspac": 148, "matmul": 149, "max": 150, "maximum": 151, "mean": [152, 283], "median": 153, "meshgrid": 154, "mgrid": 155, "min": 156, "minimum": 157, "mod": 158, "modf": 159, "moveaxi": 160, "multipli": 161, "nancumprod": 162, "nancumsum": 163, "nanprod": 164, "nansum": 165, "nanvar": 166, "ndarrai": [167, 276], "neg": 168, "nonzero": 169, "not_equ": 170, "ogrid": 171, "ones": 172, "ones_lik": 173, "outer": 174, "partit": 175, "power": [176, 206], "prod": 177, "rad2deg": 178, "radian": 179, "randomst": 180, "beta": 181, "binomi": 182, "byte": 183, "chisquar": 184, "choic": 185, "dirichlet": 186, "exponenti": 187, "f": 188, "gamma": 189, "geometr": 190, "gumbel": 191, "hypergeometr": 192, "laplac": 193, "logist": 194, "lognorm": 195, "logseri": 196, "multinomi": 197, "multivariate_norm": 198, "negative_binomi": 199, "noncentral_chisquar": 200, "noncentral_f": 201, "normal": 202, "pareto": 203, "permut": [204, 279], "poisson": 205, "rand": 207, "randint": 208, "randn": 209, "random_integ": 211, "random_sampl": 212, "ranf": 213, "rayleigh": 214, "seed": 216, "shuffl": 217, "standard_cauchi": 218, "standard_exponenti": 219, "standard_gamma": 220, "standard_norm": 221, "standard_t": 222, "triangular": 223, "uniform": 224, "vonmis": 225, "wald": 226, "weibul": 227, "zipf": 228, "ravel": 229, "reciproc": 230, "remaind": 231, "repeat": 232, "reshap": 233, "right_shift": 234, "rollaxi": 235, "round_": 236, "searchsort": 237, "sign": 238, "sin": 239, "sinh": 240, "sort": [241, 281], "sqrt": 242, "squar": 243, "squeez": 244, "stack": 245, "std": 246, "subtract": 247, "sum": [248, 274], "swapax": 249, "tan": 250, "tanh": 251, "tensordot": 252, "trace": 253, "transpos": [254, 273], "trapz": 255, "tri": 256, "tril": 257, "triu": 258, "true_divid": 259, "trunc": 260, "uniqu": 261, "unwrap": 262, "vander": 263, "var": 264, "vdot": 265, "vstack": 266, "where": 267, "zero": 268, "zeros_lik": 269, "vector": 271, "product": [271, 274], "decomposit": 271, "eigenvalu": 271, "etc": 271, "solv": 271, "equat": 271, "special": [271, 274, 282], "matric": 271, "logic": 272, "truth": 272, "valu": 272, "test": 272, "infin": 272, "nan": 272, "manipul": 273, "chang": 273, "shape": 273, "like": 273, "number": [273, 274], "dimens": 273, "kind": 273, "join": 273, "split": 273, "tile": 273, "ad": 273, "remov": 273, "element": 273, "rearrang": 273, "mathemat": 274, "trigonometr": [274, 284], "hyperbol": 274, "round": 274, "expon": 274, "logarithm": 274, "float": [274, 284], "point": 274, "arithmet": [274, 278], "handl": 274, "complex": 274, "miscellan": [274, 275], "util": 275, "pad": 277, "polynomi": 278, "packag": 278, "polyutil": 278, "poly1d": 278, "simpl": 279, "distribut": 279, "gener": 279, "search": 281, "count": 281, "error": 282, "statist": 283, "order": 283, "varianc": 283, "univers": 284, "ufunc": 284, "avail": 284, "math": 284, "twiddl": 284}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"DPCtl Usage": [[0, "dpctl-usage"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "DPNP \u2013 A NumPy-compatible library for SYCL-based devices": [[2, "module-dpnp"]], "Installation Guide": [[3, "installation-guide"]], "Requirements": [[3, "requirements"]], "Python Dependencies": [[3, "python-dependencies"]], "Installing DPNP from conda-forge": [[3, "installing-dpnp-from-conda-forge"]], "Installing DPNP from Source": [[3, "installing-dpnp-from-source"]], "Binary Operations": [[4, "binary-operations"]], "Elementwise bit operations": [[4, "elementwise-bit-operations"]], "Bit packing": [[4, "bit-packing"]], "Output formatting": [[4, "output-formatting"]], "Comparison Table": [[5, "comparison-table"]], "Summary": [[5, "summary"]], "Module-Level": [[5, "module-level"]], "Multi-Dimensional Array": [[5, "multi-dimensional-array"]], "Linear Algebra": [[5, "linear-algebra"], [271, "linear-algebra"]], "Discrete Fourier Transform": [[5, "discrete-fourier-transform"]], "Random Sampling": [[5, "random-sampling"]], "Array Creation Routines": [[6, "array-creation-routines"]], "Basic creation routines": [[6, "basic-creation-routines"]], "Creation from other data": [[6, "creation-from-other-data"]], "Numerical ranges": [[6, "numerical-ranges"]], "Matrix creation": [[6, "matrix-creation"]], "Difference between DPNP and NumPy": [[7, "difference-between-dpnp-and-numpy"]], "Data types": [[7, "data-types"]], "FFT Functions": [[8, "fft-functions"]], "Standard FFTs": [[8, "standard-ffts"]], "Real FFTs": [[8, "real-ffts"]], "Hermitian FFTs": [[8, "hermitian-ffts"]], "Helper routines": [[8, "helper-routines"]], "dpnp.abs": [[9, "dpnp-abs"]], "dpnp.absolute": [[10, "dpnp-absolute"]], "dpnp.add": [[11, "dpnp-add"]], "dpnp.all": [[12, "dpnp-all"]], "dpnp.allclose": [[13, "dpnp-allclose"]], "dpnp.amax": [[14, "dpnp-amax"]], "dpnp.amin": [[15, "dpnp-amin"]], "dpnp.any": [[16, "dpnp-any"]], "dpnp.arange": [[17, "dpnp-arange"]], "dpnp.arccos": [[18, "dpnp-arccos"]], "dpnp.arccosh": [[19, "dpnp-arccosh"]], "dpnp.arcsin": [[20, "dpnp-arcsin"]], "dpnp.arcsinh": [[21, "dpnp-arcsinh"]], "dpnp.arctan": [[22, "dpnp-arctan"]], "dpnp.arctan2": [[23, "dpnp-arctan2"]], "dpnp.arctanh": [[24, "dpnp-arctanh"]], "dpnp.argmax": [[25, "dpnp-argmax"]], "dpnp.argmin": [[26, "dpnp-argmin"]], "dpnp.argsort": [[27, "dpnp-argsort"]], "dpnp.around": [[28, "dpnp-around"]], "dpnp.array": [[29, "dpnp-array"]], "dpnp.array_equal": [[30, "dpnp-array-equal"]], "dpnp.asanyarray": [[31, "dpnp-asanyarray"]], "dpnp.asarray": [[32, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[33, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[34, "dpnp-asfarray"]], "dpnp.asnumpy": [[35, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[36, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[37, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[38, "dpnp-atleast-3d"]], "dpnp.average": [[39, "dpnp-average"]], "dpnp.bincount": [[40, "dpnp-bincount"]], "dpnp.bitwise_and": [[41, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[42, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[43, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[44, "dpnp-bitwise-xor"]], "dpnp.cbrt": [[45, "dpnp-cbrt"]], "dpnp.ceil": [[46, "dpnp-ceil"]], "dpnp.concatenate": [[47, "dpnp-concatenate"]], "dpnp.conj": [[48, "dpnp-conj"]], "dpnp.convolve": [[49, "dpnp-convolve"]], "dpnp.copy": [[50, "dpnp-copy"]], "dpnp.copysign": [[51, "dpnp-copysign"]], "dpnp.copyto": [[52, "dpnp-copyto"]], "dpnp.correlate": [[53, "dpnp-correlate"]], "dpnp.cos": [[54, "dpnp-cos"]], "dpnp.cosh": [[55, "dpnp-cosh"]], "dpnp.count_nonzero": [[56, "dpnp-count-nonzero"]], "dpnp.cov": [[57, "dpnp-cov"]], "dpnp.cross": [[58, "dpnp-cross"]], "dpnp.cumprod": [[59, "dpnp-cumprod"]], "dpnp.cumsum": [[60, "dpnp-cumsum"]], "dpnp.deg2rad": [[61, "dpnp-deg2rad"]], "dpnp.degrees": [[62, "dpnp-degrees"]], "dpnp.diag": [[63, "dpnp-diag"]], "dpnp.diagflat": [[64, "dpnp-diagflat"]], "dpnp.diff": [[65, "dpnp-diff"]], "dpnp.divide": [[66, "dpnp-divide"]], "dpnp.dot": [[67, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[68, "dpnp-dpnp-array-dpnp-array"]], "dpnp.ediff1d": [[69, "dpnp-ediff1d"]], "dpnp.einsum": [[70, "dpnp-einsum"]], "dpnp.einsum_path": [[71, "dpnp-einsum-path"]], "dpnp.empty": [[72, "dpnp-empty"]], "dpnp.empty_like": [[73, "dpnp-empty-like"]], "dpnp.equal": [[74, "dpnp-equal"]], "dpnp.erf": [[75, "dpnp-erf"]], "dpnp.exp": [[76, "dpnp-exp"]], "dpnp.exp2": [[77, "dpnp-exp2"]], "dpnp.expand_dims": [[78, "dpnp-expand-dims"]], "dpnp.expm1": [[79, "dpnp-expm1"]], "dpnp.eye": [[80, "dpnp-eye"]], "dpnp.fabs": [[81, "dpnp-fabs"]], "dpnp.fft.fft": [[82, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[83, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[84, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[85, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[86, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[87, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[88, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[89, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[90, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[91, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[92, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[93, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[94, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[95, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[96, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[97, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[98, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[99, "dpnp-fft-rfftn"]], "dpnp.floor": [[100, "dpnp-floor"]], "dpnp.floor_divide": [[101, "dpnp-floor-divide"]], "dpnp.fmax": [[102, "dpnp-fmax"]], "dpnp.fmin": [[103, "dpnp-fmin"]], "dpnp.fmod": [[104, "dpnp-fmod"]], "dpnp.fromfile": [[105, "dpnp-fromfile"]], "dpnp.full": [[106, "dpnp-full"]], "dpnp.full_like": [[107, "dpnp-full-like"]], "dpnp.geomspace": [[108, "dpnp-geomspace"]], "dpnp.get_include": [[109, "dpnp-get-include"]], "dpnp.gradient": [[110, "dpnp-gradient"]], "dpnp.greater": [[111, "dpnp-greater"]], "dpnp.greater_equal": [[112, "dpnp-greater-equal"]], "dpnp.histogram": [[113, "dpnp-histogram"]], "dpnp.hstack": [[114, "dpnp-hstack"]], "dpnp.hypot": [[115, "dpnp-hypot"]], "dpnp.identity": [[116, "dpnp-identity"]], "dpnp.inner": [[117, "dpnp-inner"]], "dpnp.invert": [[118, "dpnp-invert"]], "dpnp.isclose": [[119, "dpnp-isclose"]], "dpnp.isfinite": [[120, "dpnp-isfinite"]], "dpnp.isinf": [[121, "dpnp-isinf"]], "dpnp.isnan": [[122, "dpnp-isnan"]], "dpnp.isscalar": [[123, "dpnp-isscalar"]], "dpnp.kron": [[124, "dpnp-kron"]], "dpnp.left_shift": [[125, "dpnp-left-shift"]], "dpnp.less": [[126, "dpnp-less"]], "dpnp.less_equal": [[127, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[128, "dpnp-linalg-cholesky"]], "dpnp.linalg.det": [[129, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[130, "dpnp-linalg-eig"]], "dpnp.linalg.eigvals": [[131, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[132, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[133, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[134, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[135, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[136, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[137, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[138, "dpnp-linalg-svd"]], "dpnp.linspace": [[139, "dpnp-linspace"]], "dpnp.log": [[140, "dpnp-log"]], "dpnp.log10": [[141, "dpnp-log10"]], "dpnp.log1p": [[142, "dpnp-log1p"]], "dpnp.log2": [[143, "dpnp-log2"]], "dpnp.logical_and": [[144, "dpnp-logical-and"]], "dpnp.logical_not": [[145, "dpnp-logical-not"]], "dpnp.logical_or": [[146, "dpnp-logical-or"]], "dpnp.logical_xor": [[147, "dpnp-logical-xor"]], "dpnp.logspace": [[148, "dpnp-logspace"]], "dpnp.matmul": [[149, "dpnp-matmul"]], "dpnp.max": [[150, "dpnp-max"]], "dpnp.maximum": [[151, "dpnp-maximum"]], "dpnp.mean": [[152, "dpnp-mean"]], "dpnp.median": [[153, "dpnp-median"]], "dpnp.meshgrid": [[154, "dpnp-meshgrid"]], "dpnp.mgrid": [[155, "dpnp-mgrid"]], "dpnp.min": [[156, "dpnp-min"]], "dpnp.minimum": [[157, "dpnp-minimum"]], "dpnp.mod": [[158, "dpnp-mod"]], "dpnp.modf": [[159, "dpnp-modf"]], "dpnp.moveaxis": [[160, "dpnp-moveaxis"]], "dpnp.multiply": [[161, "dpnp-multiply"]], "dpnp.nancumprod": [[162, "dpnp-nancumprod"]], "dpnp.nancumsum": [[163, "dpnp-nancumsum"]], "dpnp.nanprod": [[164, "dpnp-nanprod"]], "dpnp.nansum": [[165, "dpnp-nansum"]], "dpnp.nanvar": [[166, "dpnp-nanvar"]], "dpnp.ndarray": [[167, "dpnp-ndarray"]], "dpnp.negative": [[168, "dpnp-negative"]], "dpnp.nonzero": [[169, "dpnp-nonzero"]], "dpnp.not_equal": [[170, "dpnp-not-equal"]], "dpnp.ogrid": [[171, "dpnp-ogrid"]], "dpnp.ones": [[172, "dpnp-ones"]], "dpnp.ones_like": [[173, "dpnp-ones-like"]], "dpnp.outer": [[174, "dpnp-outer"]], "dpnp.partition": [[175, "dpnp-partition"]], "dpnp.power": [[176, "dpnp-power"]], "dpnp.prod": [[177, "dpnp-prod"]], "dpnp.rad2deg": [[178, "dpnp-rad2deg"]], "dpnp.radians": [[179, "dpnp-radians"]], "dpnp.random.RandomState": [[180, "dpnp-random-randomstate"]], "dpnp.random.beta": [[181, "dpnp-random-beta"]], "dpnp.random.binomial": [[182, "dpnp-random-binomial"]], "dpnp.random.bytes": [[183, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[184, "dpnp-random-chisquare"]], "dpnp.random.choice": [[185, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[186, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[187, "dpnp-random-exponential"]], "dpnp.random.f": [[188, "dpnp-random-f"]], "dpnp.random.gamma": [[189, "dpnp-random-gamma"]], "dpnp.random.geometric": [[190, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[191, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[192, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[193, "dpnp-random-laplace"]], "dpnp.random.logistic": [[194, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[195, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[196, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[197, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[198, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[199, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[200, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[201, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[202, "dpnp-random-normal"]], "dpnp.random.pareto": [[203, "dpnp-random-pareto"]], "dpnp.random.permutation": [[204, "dpnp-random-permutation"]], "dpnp.random.poisson": [[205, "dpnp-random-poisson"]], "dpnp.random.power": [[206, "dpnp-random-power"]], "dpnp.random.rand": [[207, "dpnp-random-rand"]], "dpnp.random.randint": [[208, "dpnp-random-randint"]], "dpnp.random.randn": [[209, "dpnp-random-randn"]], "dpnp.random.random": [[210, "dpnp-random-random"]], "dpnp.random.random_integers": [[211, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[212, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[213, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[214, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[215, "dpnp-random-sample"]], "dpnp.random.seed": [[216, "dpnp-random-seed"]], "dpnp.random.shuffle": [[217, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[218, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[219, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[220, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[221, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[222, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[223, "dpnp-random-triangular"]], "dpnp.random.uniform": [[224, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[225, "dpnp-random-vonmises"]], "dpnp.random.wald": [[226, "dpnp-random-wald"]], "dpnp.random.weibull": [[227, "dpnp-random-weibull"]], "dpnp.random.zipf": [[228, "dpnp-random-zipf"]], "dpnp.ravel": [[229, "dpnp-ravel"]], "dpnp.reciprocal": [[230, "dpnp-reciprocal"]], "dpnp.remainder": [[231, "dpnp-remainder"]], "dpnp.repeat": [[232, "dpnp-repeat"]], "dpnp.reshape": [[233, "dpnp-reshape"]], "dpnp.right_shift": [[234, "dpnp-right-shift"]], "dpnp.rollaxis": [[235, "dpnp-rollaxis"]], "dpnp.round_": [[236, "dpnp-round"]], "dpnp.searchsorted": [[237, "dpnp-searchsorted"]], "dpnp.sign": [[238, "dpnp-sign"]], "dpnp.sin": [[239, "dpnp-sin"]], "dpnp.sinh": [[240, "dpnp-sinh"]], "dpnp.sort": [[241, "dpnp-sort"]], "dpnp.sqrt": [[242, "dpnp-sqrt"]], "dpnp.square": [[243, "dpnp-square"]], "dpnp.squeeze": [[244, "dpnp-squeeze"]], "dpnp.stack": [[245, "dpnp-stack"]], "dpnp.std": [[246, "dpnp-std"]], "dpnp.subtract": [[247, "dpnp-subtract"]], "dpnp.sum": [[248, "dpnp-sum"]], "dpnp.swapaxes": [[249, "dpnp-swapaxes"]], "dpnp.tan": [[250, "dpnp-tan"]], "dpnp.tanh": [[251, "dpnp-tanh"]], "dpnp.tensordot": [[252, "dpnp-tensordot"]], "dpnp.trace": [[253, "dpnp-trace"]], "dpnp.transpose": [[254, "dpnp-transpose"]], "dpnp.trapz": [[255, "dpnp-trapz"]], "dpnp.tri": [[256, "dpnp-tri"]], "dpnp.tril": [[257, "dpnp-tril"]], "dpnp.triu": [[258, "dpnp-triu"]], "dpnp.true_divide": [[259, "dpnp-true-divide"]], "dpnp.trunc": [[260, "dpnp-trunc"]], "dpnp.unique": [[261, "dpnp-unique"]], "dpnp.unwrap": [[262, "dpnp-unwrap"]], "dpnp.vander": [[263, "dpnp-vander"]], "dpnp.var": [[264, "dpnp-var"]], "dpnp.vdot": [[265, "dpnp-vdot"]], "dpnp.vstack": [[266, "dpnp-vstack"]], "dpnp.where": [[267, "dpnp-where"]], "dpnp.zeros": [[268, "dpnp-zeros"]], "dpnp.zeros_like": [[269, "dpnp-zeros-like"]], "API Reference": [[270, "api-reference"]], "Matrix and vector products": [[271, "matrix-and-vector-products"]], "Decompositions": [[271, "decompositions"]], "Matrix eigenvalues": [[271, "matrix-eigenvalues"]], "Norms etc.": [[271, "norms-etc"]], "Solving linear equations": [[271, "solving-linear-equations"]], "Special Matrices": [[271, "special-matrices"]], "Logic Functions": [[272, "logic-functions"]], "Truth value testing": [[272, "truth-value-testing"]], "Infinities and NaNs": [[272, "infinities-and-nans"]], "Array type testing": [[272, "array-type-testing"]], "Logic operations": [[272, "logic-operations"]], "Comparison": [[272, "comparison"]], "Array Manipulation Routines": [[273, "array-manipulation-routines"]], "Basic operations": [[273, "basic-operations"]], "Changing array shape": [[273, "changing-array-shape"]], "Transpose-like operations": [[273, "transpose-like-operations"]], "Changing number of dimensions": [[273, "changing-number-of-dimensions"]], "Changing kind of array": [[273, "changing-kind-of-array"]], "Joining arrays": [[273, "joining-arrays"]], "Splitting arrays": [[273, "splitting-arrays"]], "Tiling arrays": [[273, "tiling-arrays"]], "Adding and removing elements": [[273, "adding-and-removing-elements"]], "Rearranging elements": [[273, "rearranging-elements"]], "Mathematical Functions": [[274, "mathematical-functions"]], "Trigonometric functions": [[274, "trigonometric-functions"], [284, "trigonometric-functions"]], "Hyperbolic functions": [[274, "hyperbolic-functions"]], "Rounding": [[274, "rounding"]], "Sums, products, differences": [[274, "sums-products-differences"]], "Exponents and logarithms": [[274, "exponents-and-logarithms"]], "Other special functions": [[274, "other-special-functions"]], "Floating point routines": [[274, "floating-point-routines"]], "Arithmetic operations": [[274, "arithmetic-operations"]], "Handling complex numbers": [[274, "handling-complex-numbers"]], "Miscellaneous": [[274, "miscellaneous"]], "Miscellaneous routines": [[275, "miscellaneous-routines"]], "Utility": [[275, "utility"]], "Multi-Dimensional Array (ndarray)": [[276, "multi-dimensional-array-ndarray"]], "Padding": [[277, "padding"]], "Polynomials": [[278, "polynomials"]], "Polynomial Package": [[278, "polynomial-package"]], "Polynomial Module": [[278, "polynomial-module"]], "Polyutils": [[278, "polyutils"]], "Poly1d": [[278, "poly1d"]], "Basics": [[278, "basics"]], "Arithmetic": [[278, "arithmetic"]], "Random Sampling (dpnp.random)": [[279, "random-sampling-dpnp-random"]], "Simple random data": [[279, "simple-random-data"]], "Permutations": [[279, "permutations"]], "Distributions": [[279, "distributions"]], "Random generator": [[279, "random-generator"]], "Routines": [[280, "routines"]], "Sorting, Searching, and Counting": [[281, "sorting-searching-and-counting"]], "Sorting": [[281, "sorting"]], "Searching": [[281, "searching"]], "Counting": [[281, "counting"]], "Special Functions": [[282, "special-functions"]], "Error Function": [[282, "error-function"]], "Statistical Functions": [[283, "statistical-functions"]], "Order statistics": [[283, "order-statistics"]], "Means and variances": [[283, "means-and-variances"]], "Histograms": [[283, "histograms"]], "Correlations": [[283, "correlations"]], "Universal Functions (ufunc)": [[284, "universal-functions-ufunc"]], "Available ufuncs": [[284, "available-ufuncs"]], "Math operations": [[284, "math-operations"]], "Bit-twiddling functions": [[284, "bit-twiddling-functions"]], "Comparison functions": [[284, "comparison-functions"]], "Floating functions": [[284, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"]], "module": [[2, "module-dpnp"], [8, "module-dpnp.fft"], [279, "module-dpnp.random"]], "dpnp.fft": [[8, "module-dpnp.fft"]], "abs() (in module dpnp)": [[9, "dpnp.abs"]], "absolute() (in module dpnp)": [[10, "dpnp.absolute"]], "add() (in module dpnp)": [[11, "dpnp.add"]], "all() (in module dpnp)": [[12, "dpnp.all"]], "allclose() (in module dpnp)": [[13, "dpnp.allclose"]], "amax() (in module dpnp)": [[14, "dpnp.amax"]], "amin() (in module dpnp)": [[15, "dpnp.amin"]], "any() (in module dpnp)": [[16, "dpnp.any"]], "arange() (in module dpnp)": [[17, "dpnp.arange"]], "arccos() (in module dpnp)": [[18, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[19, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[20, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[21, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[22, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[23, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[24, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[25, "dpnp.argmax"]], "argmin() (in module dpnp)": [[26, "dpnp.argmin"]], "argsort() (in module dpnp)": [[27, "dpnp.argsort"]], "around() (in module dpnp)": [[28, "dpnp.around"]], "array() (in module dpnp)": [[29, "dpnp.array"]], "array_equal() (in module dpnp)": [[30, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[31, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[32, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[33, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[34, "dpnp.asfarray"]], "asnumpy() (in module dpnp)": [[35, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[36, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[37, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[38, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[39, "dpnp.average"]], "bincount() (in module dpnp)": [[40, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[41, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[42, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[43, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[44, "dpnp.bitwise_xor"]], "cbrt() (in module dpnp)": [[45, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[46, "dpnp.ceil"]], "concatenate() (in module dpnp)": [[47, "dpnp.concatenate"]], "conj() (in module dpnp)": [[48, "dpnp.conj"]], "convolve() (in module dpnp)": [[49, "dpnp.convolve"]], "copy() (in module dpnp)": [[50, "dpnp.copy"]], "copysign() (in module dpnp)": [[51, "dpnp.copysign"]], "copyto() (in module dpnp)": [[52, "dpnp.copyto"]], "correlate() (in module dpnp)": [[53, "dpnp.correlate"]], "cos() (in module dpnp)": [[54, "dpnp.cos"]], "cosh() (in module dpnp)": [[55, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[56, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[57, "dpnp.cov"]], "cross() (in module dpnp)": [[58, "dpnp.cross"]], "cumprod() (in module dpnp)": [[59, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[60, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[61, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[62, "dpnp.degrees"]], "diag() (in module dpnp)": [[63, "dpnp.diag"]], "diagflat() (in module dpnp)": [[64, "dpnp.diagflat"]], "diff() (in module dpnp)": [[65, "dpnp.diff"]], "divide() (in module dpnp)": [[66, "dpnp.divide"]], "dot() (in module dpnp)": [[67, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.conjugate"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dpnp_array (class in dpnp.dpnp_array)": [[68, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.fill"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.get_array"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.min"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.ndim"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.prod"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.sum"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[68, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[68, "dpnp.dpnp_array.dpnp_array.var"]], "ediff1d() (in module dpnp)": [[69, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[70, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[71, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[72, "dpnp.empty"]], "empty_like() (in module dpnp)": [[73, "dpnp.empty_like"]], "equal() (in module dpnp)": [[74, "dpnp.equal"]], "erf() (in module dpnp)": [[75, "dpnp.erf"]], "exp() (in module dpnp)": [[76, "dpnp.exp"]], "exp2() (in module dpnp)": [[77, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[78, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[79, "dpnp.expm1"]], "eye() (in module dpnp)": [[80, "dpnp.eye"]], "fabs() (in module dpnp)": [[81, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[82, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[83, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[84, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[85, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[86, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[87, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[88, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[89, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[90, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[91, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[92, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[93, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[94, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[95, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[96, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[97, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[98, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[99, "dpnp.fft.rfftn"]], "floor() (in module dpnp)": [[100, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[101, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[102, "dpnp.fmax"]], "fmin() (in module dpnp)": [[103, "dpnp.fmin"]], "fmod() (in module dpnp)": [[104, "dpnp.fmod"]], "fromfile() (in module dpnp)": [[105, "dpnp.fromfile"]], "full() (in module dpnp)": [[106, "dpnp.full"]], "full_like() (in module dpnp)": [[107, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[108, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[109, "dpnp.get_include"]], "gradient() (in module dpnp)": [[110, "dpnp.gradient"]], "greater() (in module dpnp)": [[111, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[112, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[113, "dpnp.histogram"]], "hstack() (in module dpnp)": [[114, "dpnp.hstack"]], "hypot() (in module dpnp)": [[115, "dpnp.hypot"]], "identity() (in module dpnp)": [[116, "dpnp.identity"]], "inner() (in module dpnp)": [[117, "dpnp.inner"]], "invert() (in module dpnp)": [[118, "dpnp.invert"]], "isclose() (in module dpnp)": [[119, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[120, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[121, "dpnp.isinf"]], "isnan() (in module dpnp)": [[122, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[123, "dpnp.isscalar"]], "kron() (in module dpnp)": [[124, "dpnp.kron"]], "left_shift() (in module dpnp)": [[125, "dpnp.left_shift"]], "less() (in module dpnp)": [[126, "dpnp.less"]], "less_equal() (in module dpnp)": [[127, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[128, "dpnp.linalg.cholesky"]], "det() (in module dpnp.linalg)": [[129, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[130, "dpnp.linalg.eig"]], "eigvals() (in module dpnp.linalg)": [[131, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[132, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[133, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[134, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[135, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[136, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[137, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[138, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[139, "dpnp.linspace"]], "log() (in module dpnp)": [[140, "dpnp.log"]], "log10() (in module dpnp)": [[141, "dpnp.log10"]], "log1p() (in module dpnp)": [[142, "dpnp.log1p"]], "log2() (in module dpnp)": [[143, "dpnp.log2"]], "logical_and() (in module dpnp)": [[144, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[145, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[146, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[147, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[148, "dpnp.logspace"]], "matmul() (in module dpnp)": [[149, "dpnp.matmul"]], "max() (in module dpnp)": [[150, "dpnp.max"]], "maximum() (in module dpnp)": [[151, "dpnp.maximum"]], "mean() (in module dpnp)": [[152, "dpnp.mean"]], "median() (in module dpnp)": [[153, "dpnp.median"]], "meshgrid() (in module dpnp)": [[154, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[155, "dpnp.mgrid"]], "min() (in module dpnp)": [[156, "dpnp.min"]], "minimum() (in module dpnp)": [[157, "dpnp.minimum"]], "mod() (in module dpnp)": [[158, "dpnp.mod"]], "modf() (in module dpnp)": [[159, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[160, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[161, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[162, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[163, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[164, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[165, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[166, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[167, "dpnp.ndarray"]], "negative() (in module dpnp)": [[168, "dpnp.negative"]], "nonzero() (in module dpnp)": [[169, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[170, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[171, "dpnp.ogrid"]], "ones() (in module dpnp)": [[172, "dpnp.ones"]], "ones_like() (in module dpnp)": [[173, "dpnp.ones_like"]], "outer() (in module dpnp)": [[174, "dpnp.outer"]], "partition() (in module dpnp)": [[175, "dpnp.partition"]], "power() (in module dpnp)": [[176, "dpnp.power"]], "prod() (in module dpnp)": [[177, "dpnp.prod"]], "rad2deg() (in module dpnp)": [[178, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[179, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[180, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.get_state"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[180, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[181, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[182, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[183, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[184, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[185, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[186, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[187, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[188, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[189, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[190, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[191, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[192, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[193, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[194, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[195, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[196, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[197, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[198, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[199, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[200, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[201, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[202, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[203, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[204, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[205, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[206, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[207, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[208, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[209, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[210, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[211, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[212, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[213, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[214, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[215, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[216, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[217, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[218, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[219, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[220, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[221, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[222, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[223, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[224, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[225, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[226, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[227, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[228, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[229, "dpnp.ravel"]], "reciprocal() (in module dpnp)": [[230, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[231, "dpnp.remainder"]], "repeat() (in module dpnp)": [[232, "dpnp.repeat"]], "reshape() (in module dpnp)": [[233, "dpnp.reshape"]], "right_shift() (in module dpnp)": [[234, "dpnp.right_shift"]], "rollaxis() (in module dpnp)": [[235, "dpnp.rollaxis"]], "round_() (in module dpnp)": [[236, "dpnp.round_"]], "searchsorted() (in module dpnp)": [[237, "dpnp.searchsorted"]], "sign() (in module dpnp)": [[238, "dpnp.sign"]], "sin() (in module dpnp)": [[239, "dpnp.sin"]], "sinh() (in module dpnp)": [[240, "dpnp.sinh"]], "sort() (in module dpnp)": [[241, "dpnp.sort"]], "sqrt() (in module dpnp)": [[242, "dpnp.sqrt"]], "square() (in module dpnp)": [[243, "dpnp.square"]], "squeeze() (in module dpnp)": [[244, "dpnp.squeeze"]], "stack() (in module dpnp)": [[245, "dpnp.stack"]], "std() (in module dpnp)": [[246, "dpnp.std"]], "subtract() (in module dpnp)": [[247, "dpnp.subtract"]], "sum() (in module dpnp)": [[248, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[249, "dpnp.swapaxes"]], "tan() (in module dpnp)": [[250, "dpnp.tan"]], "tanh() (in module dpnp)": [[251, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[252, "dpnp.tensordot"]], "trace() (in module dpnp)": [[253, "dpnp.trace"]], "transpose() (in module dpnp)": [[254, "dpnp.transpose"]], "trapz() (in module dpnp)": [[255, "dpnp.trapz"]], "tri() (in module dpnp)": [[256, "dpnp.tri"]], "tril() (in module dpnp)": [[257, "dpnp.tril"]], "triu() (in module dpnp)": [[258, "dpnp.triu"]], "true_divide() (in module dpnp)": [[259, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[260, "dpnp.trunc"]], "unique() (in module dpnp)": [[261, "dpnp.unique"]], "unwrap() (in module dpnp)": [[262, "dpnp.unwrap"]], "vander() (in module dpnp)": [[263, "dpnp.vander"]], "var() (in module dpnp)": [[264, "dpnp.var"]], "vdot() (in module dpnp)": [[265, "dpnp.vdot"]], "vstack() (in module dpnp)": [[266, "dpnp.vstack"]], "where() (in module dpnp)": [[267, "dpnp.where"]], "zeros() (in module dpnp)": [[268, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[269, "dpnp.zeros_like"]], "dpnp.random": [[279, "module-dpnp.random"]]}})