Search.setIndex({"alltitles": {"API Reference": [[467, null]], "Adding and removing elements": [[471, "adding-and-removing-elements"]], "Arithmetic": [[476, "arithmetic"]], "Arithmetic operations": [[472, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[474, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[468, null]], "Array Manipulation Routines": [[471, null]], "Array attributes": [[474, "array-attributes"]], "Array conversion": [[474, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[474, "array-methods"]], "Array type testing": [[470, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[482, "available-ufuncs"]], "Averages and variances": [[481, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[471, "basic-operations"]], "Basics": [[476, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[482, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[474, "calculation"]], "Changing array shape": [[471, "changing-array-shape"]], "Changing kind of array": [[471, "changing-kind-of-array"]], "Changing number of dimensions": [[471, "changing-number-of-dimensions"]], "Comparison": [[470, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[482, "comparison-functions"]], "Constructing arrays": [[474, "constructing-arrays"]], "Correlations": [[481, "correlations"]], "Counting": [[479, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[474, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[469, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[477, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[480, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[472, "exponents-and-logarithms"]], "Extrema finding": [[472, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[482, "floating-functions"]], "Floating point routines": [[472, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[468, "generating-index-arrays"]], "Handling complex numbers": [[472, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[481, "histograms"]], "Hyperbolic functions": [[472, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[474, "indexing-arrays"]], "Indexing-like operations": [[468, "indexing-like-operations"]], "Infinities and NaNs": [[470, "infinities-and-nans"]], "Inserting data into arrays": [[468, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[474, "item-selection-and-manipulation"]], "Iterating over arrays": [[468, "iterating-over-arrays"]], "Joining arrays": [[471, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [469, null]], "Logic Functions": [[470, null]], "Logic operations": [[470, "logic-operations"]], "Math operations": [[482, "math-operations"]], "Mathematical functions": [[472, null]], "Matrix and vector products": [[469, "matrix-and-vector-products"]], "Matrix eigenvalues": [[469, "matrix-eigenvalues"]], "Memory layout": [[474, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [472, "miscellaneous"]], "Miscellaneous routines": [[473, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[474, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[469, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[481, "order-statistics"]], "Other attributes": [[474, "other-attributes"]], "Other special functions": [[472, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[475, null]], "Permutations": [[477, "permutations"]], "Poly1d": [[476, "poly1d"]], "Polynomial Module": [[476, "polynomial-module"]], "Polynomial Package": [[476, "polynomial-package"]], "Polynomials": [[476, null]], "Polyutils": [[476, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[477, null]], "Random generator": [[477, "random-generator"]], "Rational routines": [[472, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[471, "rearranging-elements"]], "Rounding": [[472, "rounding"]], "Routines": [[478, null]], "Searching": [[479, "searching"]], "Shape manipulation": [[474, "shape-manipulation"]], "Simple random data": [[477, "simple-random-data"]], "Solving linear equations": [[469, "solving-linear-equations"]], "Sorting": [[479, "sorting"]], "Sorting, Searching, and Counting": [[479, null]], "Special Functions": [[480, null]], "Special methods": [[474, "special-methods"]], "Splitting arrays": [[471, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[481, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[472, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[471, "tiling-arrays"]], "Transpose-like operations": [[471, "transpose-like-operations"]], "Trigonometric functions": [[472, "trigonometric-functions"], [482, "trigonometric-functions"]], "Truth value testing": [[470, "truth-value-testing"]], "Type Promotion": [[10, "type-promotion"]], "Universal Functions (ufunc)": [[482, null]], "Utility": [[473, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.add": [[13, null]], "dpnp.all": [[14, null]], "dpnp.allclose": [[15, null]], "dpnp.amax": [[16, null]], "dpnp.amin": [[17, null]], "dpnp.angle": [[18, null]], "dpnp.any": [[19, null]], "dpnp.append": [[20, null]], "dpnp.arange": [[21, null]], "dpnp.arccos": [[22, null]], "dpnp.arccosh": [[23, null]], "dpnp.arcsin": [[24, null]], "dpnp.arcsinh": [[25, null]], "dpnp.arctan": [[26, null]], "dpnp.arctan2": [[27, null]], "dpnp.arctanh": [[28, null]], "dpnp.argmax": [[29, null]], "dpnp.argmin": [[30, null]], "dpnp.argsort": [[31, null]], "dpnp.argwhere": [[32, null]], "dpnp.around": [[33, null]], "dpnp.array": [[34, null]], "dpnp.array_equal": [[35, null]], "dpnp.array_equiv": [[36, null]], "dpnp.asanyarray": [[37, null]], "dpnp.asarray": [[38, null]], "dpnp.asarray_chkfinite": [[39, null]], "dpnp.ascontiguousarray": [[40, null]], "dpnp.asfarray": [[41, null]], "dpnp.asfortranarray": [[42, null]], "dpnp.asnumpy": [[43, null]], "dpnp.astype": [[44, null]], "dpnp.atleast_1d": [[45, null]], "dpnp.atleast_2d": [[46, null]], "dpnp.atleast_3d": [[47, null]], "dpnp.average": [[48, null]], "dpnp.bincount": [[49, null]], "dpnp.bitwise_and": [[50, null]], "dpnp.bitwise_not": [[51, null]], "dpnp.bitwise_or": [[52, null]], "dpnp.bitwise_xor": [[53, null]], "dpnp.broadcast_arrays": [[54, null]], "dpnp.broadcast_to": [[55, null]], "dpnp.can_cast": [[56, null]], "dpnp.cbrt": [[57, null]], "dpnp.ceil": [[58, null]], "dpnp.choose": [[59, null]], "dpnp.clip": [[60, null]], "dpnp.column_stack": [[61, null]], "dpnp.concatenate": [[62, null]], "dpnp.conj": [[63, null]], "dpnp.conjugate": [[64, null]], "dpnp.convolve": [[65, null]], "dpnp.copy": [[66, null]], "dpnp.copysign": [[67, null]], "dpnp.copyto": [[68, null]], "dpnp.correlate": [[69, null]], "dpnp.cos": [[70, null]], "dpnp.cosh": [[71, null]], "dpnp.count_nonzero": [[72, null]], "dpnp.cov": [[73, null]], "dpnp.cross": [[74, null]], "dpnp.cumlogsumexp": [[75, null]], "dpnp.cumprod": [[76, null]], "dpnp.cumsum": [[77, null]], "dpnp.deg2rad": [[78, null]], "dpnp.degrees": [[79, null]], "dpnp.diag": [[80, null]], "dpnp.diag_indices": [[81, null]], "dpnp.diag_indices_from": [[82, null]], "dpnp.diagflat": [[83, null]], "dpnp.diagonal": [[84, null]], "dpnp.diff": [[85, null]], "dpnp.digitize": [[86, null]], "dpnp.divide": [[87, null]], "dpnp.dot": [[88, null]], "dpnp.dpnp_array.dpnp_array": [[89, null]], "dpnp.dstack": [[90, null]], "dpnp.dtype": [[91, null]], "dpnp.ediff1d": [[92, null]], "dpnp.einsum": [[93, null]], "dpnp.einsum_path": [[94, null]], "dpnp.empty": [[95, null]], "dpnp.empty_like": [[96, null]], "dpnp.equal": [[97, null]], "dpnp.erf": [[98, null]], "dpnp.exp": [[99, null]], "dpnp.exp2": [[100, null]], "dpnp.expand_dims": [[101, null]], "dpnp.expm1": [[102, null]], "dpnp.extract": [[103, null]], "dpnp.eye": [[104, null]], "dpnp.fabs": [[105, null]], "dpnp.fft.fft": [[106, null]], "dpnp.fft.fft2": [[107, null]], "dpnp.fft.fftfreq": [[108, null]], "dpnp.fft.fftn": [[109, null]], "dpnp.fft.fftshift": [[110, null]], "dpnp.fft.hfft": [[111, null]], "dpnp.fft.ifft": [[112, null]], "dpnp.fft.ifft2": [[113, null]], "dpnp.fft.ifftn": [[114, null]], "dpnp.fft.ifftshift": [[115, null]], "dpnp.fft.ihfft": [[116, null]], "dpnp.fft.irfft": [[117, null]], "dpnp.fft.irfft2": [[118, null]], "dpnp.fft.irfftn": [[119, null]], "dpnp.fft.rfft": [[120, null]], "dpnp.fft.rfft2": [[121, null]], "dpnp.fft.rfftfreq": [[122, null]], "dpnp.fft.rfftn": [[123, null]], "dpnp.fill_diagonal": [[124, null]], "dpnp.finfo": [[125, null]], "dpnp.fix": [[126, null]], "dpnp.flatiter": [[127, null]], "dpnp.flatnonzero": [[128, null]], "dpnp.flip": [[129, null]], "dpnp.fliplr": [[130, null]], "dpnp.flipud": [[131, null]], "dpnp.float_power": [[132, null]], "dpnp.floor": [[133, null]], "dpnp.floor_divide": [[134, null]], "dpnp.fmax": [[135, null]], "dpnp.fmin": [[136, null]], "dpnp.fmod": [[137, null]], "dpnp.from_dlpack": [[138, null]], "dpnp.frombuffer": [[139, null]], "dpnp.fromfile": [[140, null]], "dpnp.fromfunction": [[141, null]], "dpnp.fromiter": [[142, null]], "dpnp.fromstring": [[143, null]], "dpnp.full": [[144, null]], "dpnp.full_like": [[145, null]], "dpnp.geomspace": [[146, null]], "dpnp.get_include": [[147, null]], "dpnp.gradient": [[148, null]], "dpnp.greater": [[149, null]], "dpnp.greater_equal": [[150, null]], "dpnp.heaviside": [[151, null]], "dpnp.histogram": [[152, null]], "dpnp.histogram_bin_edges": [[153, null]], "dpnp.hstack": [[154, null]], "dpnp.hypot": [[155, null]], "dpnp.identity": [[156, null]], "dpnp.iinfo": [[157, null]], "dpnp.imag": [[158, null]], "dpnp.indices": [[159, null]], "dpnp.inner": [[160, null]], "dpnp.invert": [[161, null]], "dpnp.isclose": [[162, null]], "dpnp.iscomplex": [[163, null]], "dpnp.iscomplexobj": [[164, null]], "dpnp.isfinite": [[165, null]], "dpnp.isinf": [[166, null]], "dpnp.isnan": [[167, null]], "dpnp.isneginf": [[168, null]], "dpnp.isposinf": [[169, null]], "dpnp.isreal": [[170, null]], "dpnp.isrealobj": [[171, null]], "dpnp.isscalar": [[172, null]], "dpnp.issubdtype": [[173, null]], "dpnp.kron": [[174, null]], "dpnp.left_shift": [[175, null]], "dpnp.less": [[176, null]], "dpnp.less_equal": [[177, null]], "dpnp.linalg.cholesky": [[178, null]], "dpnp.linalg.cond": [[179, null]], "dpnp.linalg.det": [[180, null]], "dpnp.linalg.eig": [[181, null]], "dpnp.linalg.eigh": [[182, null]], "dpnp.linalg.eigvals": [[183, null]], "dpnp.linalg.eigvalsh": [[184, null]], "dpnp.linalg.inv": [[185, null]], "dpnp.linalg.lstsq": [[186, null]], "dpnp.linalg.matrix_power": [[187, null]], "dpnp.linalg.matrix_rank": [[188, null]], "dpnp.linalg.multi_dot": [[189, null]], "dpnp.linalg.norm": [[190, null]], "dpnp.linalg.pinv": [[191, null]], "dpnp.linalg.qr": [[192, null]], "dpnp.linalg.slogdet": [[193, null]], "dpnp.linalg.solve": [[194, null]], "dpnp.linalg.svd": [[195, null]], "dpnp.linalg.tensorinv": [[196, null]], "dpnp.linalg.tensorsolve": [[197, null]], "dpnp.linspace": [[198, null]], "dpnp.loadtxt": [[199, null]], "dpnp.log": [[200, null]], "dpnp.log10": [[201, null]], "dpnp.log1p": [[202, null]], "dpnp.log2": [[203, null]], "dpnp.logaddexp": [[204, null]], "dpnp.logaddexp2": [[205, null]], "dpnp.logical_and": [[206, null]], "dpnp.logical_not": [[207, null]], "dpnp.logical_or": [[208, null]], "dpnp.logical_xor": [[209, null]], "dpnp.logspace": [[210, null]], "dpnp.logsumexp": [[211, null]], "dpnp.mask_indices": [[212, null]], "dpnp.matmul": [[213, null]], "dpnp.max": [[214, null]], "dpnp.maximum": [[215, null]], "dpnp.mean": [[216, null]], "dpnp.median": [[217, null]], "dpnp.meshgrid": [[218, null]], "dpnp.mgrid": [[219, null]], "dpnp.min": [[220, null]], "dpnp.minimum": [[221, null]], "dpnp.mod": [[222, null]], "dpnp.modf": [[223, null]], "dpnp.moveaxis": [[224, null]], "dpnp.multiply": [[225, null]], "dpnp.nan_to_num": [[226, null]], "dpnp.nanargmax": [[227, null]], "dpnp.nanargmin": [[228, null]], "dpnp.nancumprod": [[229, null]], "dpnp.nancumsum": [[230, null]], "dpnp.nanmax": [[231, null]], "dpnp.nanmean": [[232, null]], "dpnp.nanmin": [[233, null]], "dpnp.nanprod": [[234, null]], "dpnp.nanstd": [[235, null]], "dpnp.nansum": [[236, null]], "dpnp.nanvar": [[237, null]], "dpnp.ndarray": [[238, null]], "dpnp.ndarray.T": [[239, null]], "dpnp.ndarray.__abs__": [[240, null]], "dpnp.ndarray.__add__": [[241, null]], "dpnp.ndarray.__and__": [[242, null]], "dpnp.ndarray.__bool__": [[243, null]], "dpnp.ndarray.__complex__": [[244, null]], "dpnp.ndarray.__copy__": [[245, null]], "dpnp.ndarray.__eq__": [[246, null]], "dpnp.ndarray.__float__": [[247, null]], "dpnp.ndarray.__floordiv__": [[248, null]], "dpnp.ndarray.__ge__": [[249, null]], "dpnp.ndarray.__getitem__": [[250, null]], "dpnp.ndarray.__gt__": [[251, null]], "dpnp.ndarray.__iadd__": [[252, null]], "dpnp.ndarray.__iand__": [[253, null]], "dpnp.ndarray.__ifloordiv__": [[254, null]], "dpnp.ndarray.__ilshift__": [[255, null]], "dpnp.ndarray.__imod__": [[256, null]], "dpnp.ndarray.__imul__": [[257, null]], "dpnp.ndarray.__int__": [[258, null]], "dpnp.ndarray.__invert__": [[259, null]], "dpnp.ndarray.__ior__": [[260, null]], "dpnp.ndarray.__ipow__": [[261, null]], "dpnp.ndarray.__irshift__": [[262, null]], "dpnp.ndarray.__isub__": [[263, null]], "dpnp.ndarray.__itruediv__": [[264, null]], "dpnp.ndarray.__ixor__": [[265, null]], "dpnp.ndarray.__le__": [[266, null]], "dpnp.ndarray.__len__": [[267, null]], "dpnp.ndarray.__lshift__": [[268, null]], "dpnp.ndarray.__lt__": [[269, null]], "dpnp.ndarray.__matmul__": [[270, null]], "dpnp.ndarray.__mod__": [[271, null]], "dpnp.ndarray.__mul__": [[272, null]], "dpnp.ndarray.__ne__": [[273, null]], "dpnp.ndarray.__neg__": [[274, null]], "dpnp.ndarray.__new__": [[275, null]], "dpnp.ndarray.__or__": [[276, null]], "dpnp.ndarray.__pos__": [[277, null]], "dpnp.ndarray.__pow__": [[278, null]], "dpnp.ndarray.__repr__": [[279, null]], "dpnp.ndarray.__rshift__": [[280, null]], "dpnp.ndarray.__setitem__": [[281, null]], "dpnp.ndarray.__str__": [[282, null]], "dpnp.ndarray.__sub__": [[283, null]], "dpnp.ndarray.__truediv__": [[284, null]], "dpnp.ndarray.__xor__": [[285, null]], "dpnp.ndarray.all": [[286, null]], "dpnp.ndarray.any": [[287, null]], "dpnp.ndarray.argmax": [[288, null]], "dpnp.ndarray.argmin": [[289, null]], "dpnp.ndarray.argsort": [[290, null]], "dpnp.ndarray.astype": [[291, null]], "dpnp.ndarray.choose": [[292, null]], "dpnp.ndarray.clip": [[293, null]], "dpnp.ndarray.conj": [[294, null]], "dpnp.ndarray.conjugate": [[295, null]], "dpnp.ndarray.copy": [[296, null]], "dpnp.ndarray.cumprod": [[297, null]], "dpnp.ndarray.cumsum": [[298, null]], "dpnp.ndarray.diagonal": [[299, null]], "dpnp.ndarray.dtype": [[300, null]], "dpnp.ndarray.fill": [[301, null]], "dpnp.ndarray.flags": [[302, null]], "dpnp.ndarray.flat": [[303, null]], "dpnp.ndarray.flatten": [[304, null]], "dpnp.ndarray.imag": [[305, null]], "dpnp.ndarray.item": [[306, null]], "dpnp.ndarray.itemsize": [[307, null]], "dpnp.ndarray.max": [[308, null]], "dpnp.ndarray.mean": [[309, null]], "dpnp.ndarray.min": [[310, null]], "dpnp.ndarray.nbytes": [[311, null]], "dpnp.ndarray.ndim": [[312, null]], "dpnp.ndarray.nonzero": [[313, null]], "dpnp.ndarray.partition": [[314, null]], "dpnp.ndarray.prod": [[315, null]], "dpnp.ndarray.put": [[316, null]], "dpnp.ndarray.ravel": [[317, null]], "dpnp.ndarray.real": [[318, null]], "dpnp.ndarray.repeat": [[319, null]], "dpnp.ndarray.reshape": [[320, null]], "dpnp.ndarray.round": [[321, null]], "dpnp.ndarray.searchsorted": [[322, null]], "dpnp.ndarray.shape": [[323, null]], "dpnp.ndarray.size": [[324, null]], "dpnp.ndarray.sort": [[325, null]], "dpnp.ndarray.squeeze": [[326, null]], "dpnp.ndarray.std": [[327, null]], "dpnp.ndarray.strides": [[328, null]], "dpnp.ndarray.sum": [[329, null]], "dpnp.ndarray.swapaxes": [[330, null]], "dpnp.ndarray.take": [[331, null]], "dpnp.ndarray.trace": [[332, null]], "dpnp.ndarray.transpose": [[333, null]], "dpnp.ndarray.var": [[334, null]], "dpnp.ndim": [[335, null]], "dpnp.negative": [[336, null]], "dpnp.nextafter": [[337, null]], "dpnp.nonzero": [[338, null]], "dpnp.not_equal": [[339, null]], "dpnp.ogrid": [[340, null]], "dpnp.ones": [[341, null]], "dpnp.ones_like": [[342, null]], "dpnp.outer": [[343, null]], "dpnp.partition": [[344, null]], "dpnp.place": [[345, null]], "dpnp.positive": [[346, null]], "dpnp.power": [[347, null]], "dpnp.prod": [[348, null]], "dpnp.proj": [[349, null]], "dpnp.ptp": [[350, null]], "dpnp.put": [[351, null]], "dpnp.put_along_axis": [[352, null]], "dpnp.putmask": [[353, null]], "dpnp.rad2deg": [[354, null]], "dpnp.radians": [[355, null]], "dpnp.random.RandomState": [[356, null]], "dpnp.random.beta": [[357, null]], "dpnp.random.binomial": [[358, null]], "dpnp.random.bytes": [[359, null]], "dpnp.random.chisquare": [[360, null]], "dpnp.random.choice": [[361, null]], "dpnp.random.dirichlet": [[362, null]], "dpnp.random.exponential": [[363, null]], "dpnp.random.f": [[364, null]], "dpnp.random.gamma": [[365, null]], "dpnp.random.geometric": [[366, null]], "dpnp.random.gumbel": [[367, null]], "dpnp.random.hypergeometric": [[368, null]], "dpnp.random.laplace": [[369, null]], "dpnp.random.logistic": [[370, null]], "dpnp.random.lognormal": [[371, null]], "dpnp.random.logseries": [[372, null]], "dpnp.random.multinomial": [[373, null]], "dpnp.random.multivariate_normal": [[374, null]], "dpnp.random.negative_binomial": [[375, null]], "dpnp.random.noncentral_chisquare": [[376, null]], "dpnp.random.noncentral_f": [[377, null]], "dpnp.random.normal": [[378, null]], "dpnp.random.pareto": [[379, null]], "dpnp.random.permutation": [[380, null]], "dpnp.random.poisson": [[381, null]], "dpnp.random.power": [[382, null]], "dpnp.random.rand": [[383, null]], "dpnp.random.randint": [[384, null]], "dpnp.random.randn": [[385, null]], "dpnp.random.random": [[386, null]], "dpnp.random.random_integers": [[387, null]], "dpnp.random.random_sample": [[388, null]], "dpnp.random.ranf": [[389, null]], "dpnp.random.rayleigh": [[390, null]], "dpnp.random.sample": [[391, null]], "dpnp.random.seed": [[392, null]], "dpnp.random.shuffle": [[393, null]], "dpnp.random.standard_cauchy": [[394, null]], "dpnp.random.standard_exponential": [[395, null]], "dpnp.random.standard_gamma": [[396, null]], "dpnp.random.standard_normal": [[397, null]], "dpnp.random.standard_t": [[398, null]], "dpnp.random.triangular": [[399, null]], "dpnp.random.uniform": [[400, null]], "dpnp.random.vonmises": [[401, null]], "dpnp.random.wald": [[402, null]], "dpnp.random.weibull": [[403, null]], "dpnp.random.zipf": [[404, null]], "dpnp.ravel": [[405, null]], "dpnp.real": [[406, null]], "dpnp.real_if_close": [[407, null]], "dpnp.reciprocal": [[408, null]], "dpnp.reduce_hypot": [[409, null]], "dpnp.remainder": [[410, null]], "dpnp.repeat": [[411, null]], "dpnp.reshape": [[412, null]], "dpnp.result_type": [[413, null]], "dpnp.right_shift": [[414, null]], "dpnp.rint": [[415, null]], "dpnp.roll": [[416, null]], "dpnp.rollaxis": [[417, null]], "dpnp.round": [[418, null]], "dpnp.row_stack": [[419, null]], "dpnp.rsqrt": [[420, null]], "dpnp.searchsorted": [[421, null]], "dpnp.select": [[422, null]], "dpnp.shape": [[423, null]], "dpnp.sign": [[424, null]], "dpnp.signbit": [[425, null]], "dpnp.sin": [[426, null]], "dpnp.sinh": [[427, null]], "dpnp.size": [[428, null]], "dpnp.sort": [[429, null]], "dpnp.sort_complex": [[430, null]], "dpnp.sqrt": [[431, null]], "dpnp.square": [[432, null]], "dpnp.squeeze": [[433, null]], "dpnp.stack": [[434, null]], "dpnp.std": [[435, null]], "dpnp.subtract": [[436, null]], "dpnp.sum": [[437, null]], "dpnp.swapaxes": [[438, null]], "dpnp.take": [[439, null]], "dpnp.take_along_axis": [[440, null]], "dpnp.tan": [[441, null]], "dpnp.tanh": [[442, null]], "dpnp.tensordot": [[443, null]], "dpnp.tile": [[444, null]], "dpnp.trace": [[445, null]], "dpnp.transpose": [[446, null]], "dpnp.trapezoid": [[447, null]], "dpnp.tri": [[448, null]], "dpnp.tril": [[449, null]], "dpnp.tril_indices": [[450, null]], "dpnp.tril_indices_from": [[451, null]], "dpnp.trim_zeros": [[452, null]], "dpnp.triu": [[453, null]], "dpnp.triu_indices": [[454, null]], "dpnp.triu_indices_from": [[455, null]], "dpnp.true_divide": [[456, null]], "dpnp.trunc": [[457, null]], "dpnp.unique": [[458, null]], "dpnp.unwrap": [[459, null]], "dpnp.vander": [[460, null]], "dpnp.var": [[461, null]], "dpnp.vdot": [[462, null]], "dpnp.vstack": [[463, null]], "dpnp.where": [[464, null]], "dpnp.zeros": [[465, null]], "dpnp.zeros_like": [[466, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[91, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[91, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[91, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[91, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[91, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[91, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[91, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[91, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[127, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[91, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[286, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[287, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "append() (in module dpnp)": [[20, "dpnp.append", false]], "arange() (in module dpnp)": [[21, "dpnp.arange", false]], "arccos() (in module dpnp)": [[22, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[23, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[24, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[25, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[26, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[27, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[28, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[288, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[29, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[289, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[30, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[290, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[31, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[32, "dpnp.argwhere", false]], "around() (in module dpnp)": [[33, "dpnp.around", false]], "array() (in module dpnp)": [[34, "dpnp.array", false]], "array_equal() (in module dpnp)": [[35, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[36, "dpnp.array_equiv", false]], "asanyarray() (in module dpnp)": [[37, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[38, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[39, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[40, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[41, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[42, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[43, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[291, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[44, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[45, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[46, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[47, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[48, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[91, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[357, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[49, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[358, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[50, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[51, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[52, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[53, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[54, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[55, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[91, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[359, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[56, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[57, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[58, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[91, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[360, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[361, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[178, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[292, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[59, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[293, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[60, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[61, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[62, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[179, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[294, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[63, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[295, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[64, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[65, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[296, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[66, "dpnp.copy", false]], "copysign() (in module dpnp)": [[67, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[68, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[69, "dpnp.correlate", false]], "cos() (in module dpnp)": [[70, "dpnp.cos", false]], "cosh() (in module dpnp)": [[71, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[72, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[73, "dpnp.cov", false]], "cross() (in module dpnp)": [[74, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[75, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[297, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[76, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[298, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[77, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[78, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[79, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[91, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[180, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[80, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[81, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[82, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[83, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[299, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[84, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[85, "dpnp.diff", false]], "digitize() (in module dpnp)": [[86, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[362, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[87, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[88, "dpnp.dot", false]], "dpnp": [[2, "module-dpnp", false], [3, "module-dpnp", false]], "dpnp.fft": [[10, "module-0", false], [10, "module-dpnp.fft", false]], "dpnp.random": [[477, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[89, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[90, "dpnp.dstack", false]], "dtype (class in dpnp)": [[91, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[300, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[92, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[181, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[182, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[183, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[184, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[93, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[94, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[95, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[96, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[97, "dpnp.equal", false]], "erf() (in module dpnp)": [[98, "dpnp.erf", false]], "exp() (in module dpnp)": [[99, "dpnp.exp", false]], "exp2() (in module dpnp)": [[100, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[101, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[102, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[363, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[103, "dpnp.extract", false]], "eye() (in module dpnp)": [[104, "dpnp.eye", false]], "f() (in module dpnp.random)": [[364, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[105, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[106, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[107, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[108, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[109, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[110, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[91, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[301, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[124, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[125, "dpnp.finfo", false]], "fix() (in module dpnp)": [[126, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[91, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[302, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[303, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[127, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[128, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[304, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[129, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[130, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[131, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[132, "dpnp.float_power", false]], "floor() (in module dpnp)": [[133, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[134, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[135, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[136, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[137, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[138, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[139, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[140, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[141, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[142, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[143, "dpnp.fromstring", false]], "full() (in module dpnp)": [[144, "dpnp.full", false]], "full_like() (in module dpnp)": [[145, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[365, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[366, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[146, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[147, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[148, "dpnp.gradient", false]], "greater() (in module dpnp)": [[149, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[150, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[367, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[91, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[151, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[111, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[152, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[153, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[154, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[368, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[155, "dpnp.hypot", false]], "identity() (in module dpnp)": [[156, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[112, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[113, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[114, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[115, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[116, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[157, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[305, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[158, "dpnp.imag", false]], "indices() (in module dpnp)": [[159, "dpnp.indices", false]], "inner() (in module dpnp)": [[160, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[185, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[161, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[117, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[118, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[119, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[91, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[91, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[162, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[163, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[164, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[165, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[166, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[167, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[91, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[168, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[169, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[170, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[171, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[172, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[173, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[306, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[91, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[307, "dpnp.ndarray.itemsize", false]], "kind (dpnp.dtype attribute)": [[91, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[174, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[369, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[175, "dpnp.left_shift", false]], "less() (in module dpnp)": [[176, "dpnp.less", false]], "less_equal() (in module dpnp)": [[177, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[198, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[199, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[200, "dpnp.log", false]], "log10() (in module dpnp)": [[201, "dpnp.log10", false]], "log1p() (in module dpnp)": [[202, "dpnp.log1p", false]], "log2() (in module dpnp)": [[203, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[204, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[205, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[206, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[207, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[208, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[209, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[370, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[371, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[372, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[210, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[211, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[186, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[212, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[213, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[187, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[188, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[308, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[214, "dpnp.max", false]], "maximum() (in module dpnp)": [[215, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[309, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[216, "dpnp.mean", false]], "median() (in module dpnp)": [[217, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[218, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[91, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[219, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[310, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[220, "dpnp.min", false]], "minimum() (in module dpnp)": [[221, "dpnp.minimum", false]], "mod() (in module dpnp)": [[222, "dpnp.mod", false]], "modf() (in module dpnp)": [[223, "dpnp.modf", false]], "module": [[2, "module-dpnp", false], [3, "module-dpnp", false], [10, "module-0", false], [10, "module-dpnp.fft", false], [477, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[224, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[189, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[373, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[225, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[374, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[91, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[91, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[226, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[227, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[228, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[229, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[230, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[231, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[232, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[233, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[234, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[235, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[236, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[237, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[311, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[238, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[91, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[312, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[335, "dpnp.ndim", false]], "negative() (in module dpnp)": [[336, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[375, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[91, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[337, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[376, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[377, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[313, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[338, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[190, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[378, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[339, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[91, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[340, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[341, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[342, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[343, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[379, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[314, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[344, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[380, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[191, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[345, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[381, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[346, "dpnp.positive", false]], "power() (in module dpnp)": [[347, "dpnp.power", false]], "power() (in module dpnp.random)": [[382, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[315, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[348, "dpnp.prod", false]], "proj() (in module dpnp)": [[349, "dpnp.proj", false]], "ptp() (in module dpnp)": [[350, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[316, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[351, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[352, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[353, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[192, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[354, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[355, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[383, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[384, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[385, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[386, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[387, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[388, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[356, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[389, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[317, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[405, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[390, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[318, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[406, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[407, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[408, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[409, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[410, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[319, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[411, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[320, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[412, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[413, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[120, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[121, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[122, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[123, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[414, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[415, "dpnp.rint", false]], "roll() (in module dpnp)": [[416, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[417, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[321, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[418, "dpnp.round", false]], "row_stack() (in module dpnp)": [[419, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[420, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[391, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[322, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[421, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[392, "dpnp.random.seed", false]], "select() (in module dpnp)": [[422, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[91, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[323, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[423, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[393, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[424, "dpnp.sign", false]], "signbit() (in module dpnp)": [[425, "dpnp.signbit", false]], "sin() (in module dpnp)": [[426, "dpnp.sin", false]], "sinh() (in module dpnp)": [[427, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[324, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[428, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[193, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[194, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[325, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[429, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[430, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[431, "dpnp.sqrt", false]], "square() (in module dpnp)": [[432, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[326, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[433, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[434, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[394, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[395, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[396, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[397, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[398, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[327, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[435, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[91, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[328, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[91, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[436, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[329, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[437, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[195, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[330, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[438, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[239, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[331, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[439, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[440, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[441, "dpnp.tan", false]], "tanh() (in module dpnp)": [[442, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[443, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[196, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[197, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[444, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[332, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[445, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[333, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[446, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[447, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[448, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[399, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[449, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[450, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[451, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[452, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[453, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[454, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[455, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[456, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[457, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[91, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[356, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[400, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[458, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[459, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[89, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[460, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[89, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[334, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[461, "dpnp.var", false]], "vdot() (in module dpnp)": [[462, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[401, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[463, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[402, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[403, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[464, "dpnp.where", false]], "zeros() (in module dpnp)": [[465, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[466, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[404, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argsort"], [32, 1, 1, "", "argwhere"], [33, 1, 1, "", "around"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_equiv"], [37, 1, 1, "", "asanyarray"], [38, 1, 1, "", "asarray"], [39, 1, 1, "", "asarray_chkfinite"], [40, 1, 1, "", "ascontiguousarray"], [41, 1, 1, "", "asfarray"], [42, 1, 1, "", "asfortranarray"], [43, 1, 1, "", "asnumpy"], [44, 1, 1, "", "astype"], [45, 1, 1, "", "atleast_1d"], [46, 1, 1, "", "atleast_2d"], [47, 1, 1, "", "atleast_3d"], [48, 1, 1, "", "average"], [49, 1, 1, "", "bincount"], [50, 1, 1, "", "bitwise_and"], [51, 1, 1, "", "bitwise_not"], [52, 1, 1, "", "bitwise_or"], [53, 1, 1, "", "bitwise_xor"], [54, 1, 1, "", "broadcast_arrays"], [55, 1, 1, "", "broadcast_to"], [56, 1, 1, "", "can_cast"], [57, 1, 1, "", "cbrt"], [58, 1, 1, "", "ceil"], [59, 1, 1, "", "choose"], [60, 1, 1, "", "clip"], [61, 1, 1, "", "column_stack"], [62, 1, 1, "", "concatenate"], [63, 1, 1, "", "conj"], [64, 1, 1, "", "conjugate"], [65, 1, 1, "", "convolve"], [66, 1, 1, "", "copy"], [67, 1, 1, "", "copysign"], [68, 1, 1, "", "copyto"], [69, 1, 1, "", "correlate"], [70, 1, 1, "", "cos"], [71, 1, 1, "", "cosh"], [72, 1, 1, "", "count_nonzero"], [73, 1, 1, "", "cov"], [74, 1, 1, "", "cross"], [75, 1, 1, "", "cumlogsumexp"], [76, 1, 1, "", "cumprod"], [77, 1, 1, "", "cumsum"], [78, 1, 1, "", "deg2rad"], [79, 1, 1, "", "degrees"], [80, 1, 1, "", "diag"], [81, 1, 1, "", "diag_indices"], [82, 1, 1, "", "diag_indices_from"], [83, 1, 1, "", "diagflat"], [84, 1, 1, "", "diagonal"], [85, 1, 1, "", "diff"], [86, 1, 1, "", "digitize"], [87, 1, 1, "", "divide"], [88, 1, 1, "", "dot"], [90, 1, 1, "", "dstack"], [91, 2, 1, "", "dtype"], [92, 1, 1, "", "ediff1d"], [93, 1, 1, "", "einsum"], [94, 1, 1, "", "einsum_path"], [95, 1, 1, "", "empty"], [96, 1, 1, "", "empty_like"], [97, 1, 1, "", "equal"], [98, 1, 1, "", "erf"], [99, 1, 1, "", "exp"], [100, 1, 1, "", "exp2"], [101, 1, 1, "", "expand_dims"], [102, 1, 1, "", "expm1"], [103, 1, 1, "", "extract"], [104, 1, 1, "", "eye"], [105, 1, 1, "", "fabs"], [10, 0, 0, "module-0", "fft"], [124, 1, 1, "", "fill_diagonal"], [125, 1, 1, "", "finfo"], [126, 1, 1, "", "fix"], [127, 2, 1, "", "flatiter"], [128, 1, 1, "", "flatnonzero"], [129, 1, 1, "", "flip"], [130, 1, 1, "", "fliplr"], [131, 1, 1, "", "flipud"], [132, 1, 1, "", "float_power"], [133, 1, 1, "", "floor"], [134, 1, 1, "", "floor_divide"], [135, 1, 1, "", "fmax"], [136, 1, 1, "", "fmin"], [137, 1, 1, "", "fmod"], [138, 1, 1, "", "from_dlpack"], [139, 1, 1, "", "frombuffer"], [140, 1, 1, "", "fromfile"], [141, 1, 1, "", "fromfunction"], [142, 1, 1, "", "fromiter"], [143, 1, 1, "", "fromstring"], [144, 1, 1, "", "full"], [145, 1, 1, "", "full_like"], [146, 1, 1, "", "geomspace"], [147, 1, 1, "", "get_include"], [148, 1, 1, "", "gradient"], [149, 1, 1, "", "greater"], [150, 1, 1, "", "greater_equal"], [151, 1, 1, "", "heaviside"], [152, 1, 1, "", "histogram"], [153, 1, 1, "", "histogram_bin_edges"], [154, 1, 1, "", "hstack"], [155, 1, 1, "", "hypot"], [156, 1, 1, "", "identity"], [157, 1, 1, "", "iinfo"], [158, 1, 1, "", "imag"], [159, 1, 1, "", "indices"], [160, 1, 1, "", "inner"], [161, 1, 1, "", "invert"], [162, 1, 1, "", "isclose"], [163, 1, 1, "", "iscomplex"], [164, 1, 1, "", "iscomplexobj"], [165, 1, 1, "", "isfinite"], [166, 1, 1, "", "isinf"], [167, 1, 1, "", "isnan"], [168, 1, 1, "", "isneginf"], [169, 1, 1, "", "isposinf"], [170, 1, 1, "", "isreal"], [171, 1, 1, "", "isrealobj"], [172, 1, 1, "", "isscalar"], [173, 1, 1, "", "issubdtype"], [174, 1, 1, "", "kron"], [175, 1, 1, "", "left_shift"], [176, 1, 1, "", "less"], [177, 1, 1, "", "less_equal"], [198, 1, 1, "", "linspace"], [199, 1, 1, "", "loadtxt"], [200, 1, 1, "", "log"], [201, 1, 1, "", "log10"], [202, 1, 1, "", "log1p"], [203, 1, 1, "", "log2"], [204, 1, 1, "", "logaddexp"], [205, 1, 1, "", "logaddexp2"], [206, 1, 1, "", "logical_and"], [207, 1, 1, "", "logical_not"], [208, 1, 1, "", "logical_or"], [209, 1, 1, "", "logical_xor"], [210, 1, 1, "", "logspace"], [211, 1, 1, "", "logsumexp"], [212, 1, 1, "", "mask_indices"], [213, 1, 1, "", "matmul"], [214, 1, 1, "", "max"], [215, 1, 1, "", "maximum"], [216, 1, 1, "", "mean"], [217, 1, 1, "", "median"], [218, 1, 1, "", "meshgrid"], [219, 5, 1, "", "mgrid"], [220, 1, 1, "", "min"], [221, 1, 1, "", "minimum"], [222, 1, 1, "", "mod"], [223, 1, 1, "", "modf"], [224, 1, 1, "", "moveaxis"], [225, 1, 1, "", "multiply"], [226, 1, 1, "", "nan_to_num"], [227, 1, 1, "", "nanargmax"], [228, 1, 1, "", "nanargmin"], [229, 1, 1, "", "nancumprod"], [230, 1, 1, "", "nancumsum"], [231, 1, 1, "", "nanmax"], [232, 1, 1, "", "nanmean"], [233, 1, 1, "", "nanmin"], [234, 1, 1, "", "nanprod"], [235, 1, 1, "", "nanstd"], [236, 1, 1, "", "nansum"], [237, 1, 1, "", "nanvar"], [238, 3, 1, "", "ndarray"], [335, 1, 1, "", "ndim"], [336, 1, 1, "", "negative"], [337, 1, 1, "", "nextafter"], [338, 1, 1, "", "nonzero"], [339, 1, 1, "", "not_equal"], [340, 5, 1, "", "ogrid"], [341, 1, 1, "", "ones"], [342, 1, 1, "", "ones_like"], [343, 1, 1, "", "outer"], [344, 1, 1, "", "partition"], [345, 1, 1, "", "place"], [346, 1, 1, "", "positive"], [347, 1, 1, "", "power"], [348, 1, 1, "", "prod"], [349, 1, 1, "", "proj"], [350, 1, 1, "", "ptp"], [351, 1, 1, "", "put"], [352, 1, 1, "", "put_along_axis"], [353, 1, 1, "", "putmask"], [354, 1, 1, "", "rad2deg"], [355, 1, 1, "", "radians"], [477, 0, 0, "-", "random"], [405, 1, 1, "", "ravel"], [406, 1, 1, "", "real"], [407, 1, 1, "", "real_if_close"], [408, 1, 1, "", "reciprocal"], [409, 1, 1, "", "reduce_hypot"], [410, 1, 1, "", "remainder"], [411, 1, 1, "", "repeat"], [412, 1, 1, "", "reshape"], [413, 1, 1, "", "result_type"], [414, 1, 1, "", "right_shift"], [415, 1, 1, "", "rint"], [416, 1, 1, "", "roll"], [417, 1, 1, "", "rollaxis"], [418, 1, 1, "", "round"], [419, 1, 1, "", "row_stack"], [420, 1, 1, "", "rsqrt"], [421, 1, 1, "", "searchsorted"], [422, 1, 1, "", "select"], [423, 1, 1, "", "shape"], [424, 1, 1, "", "sign"], [425, 1, 1, "", "signbit"], [426, 1, 1, "", "sin"], [427, 1, 1, "", "sinh"], [428, 1, 1, "", "size"], [429, 1, 1, "", "sort"], [430, 1, 1, "", "sort_complex"], [431, 1, 1, "", "sqrt"], [432, 1, 1, "", "square"], [433, 1, 1, "", "squeeze"], [434, 1, 1, "", "stack"], [435, 1, 1, "", "std"], [436, 1, 1, "", "subtract"], [437, 1, 1, "", "sum"], [438, 1, 1, "", "swapaxes"], [439, 1, 1, "", "take"], [440, 1, 1, "", "take_along_axis"], [441, 1, 1, "", "tan"], [442, 1, 1, "", "tanh"], [443, 1, 1, "", "tensordot"], [444, 1, 1, "", "tile"], [445, 1, 1, "", "trace"], [446, 1, 1, "", "transpose"], [447, 1, 1, "", "trapezoid"], [448, 1, 1, "", "tri"], [449, 1, 1, "", "tril"], [450, 1, 1, "", "tril_indices"], [451, 1, 1, "", "tril_indices_from"], [452, 1, 1, "", "trim_zeros"], [453, 1, 1, "", "triu"], [454, 1, 1, "", "triu_indices"], [455, 1, 1, "", "triu_indices_from"], [456, 1, 1, "", "true_divide"], [457, 1, 1, "", "trunc"], [458, 1, 1, "", "unique"], [459, 1, 1, "", "unwrap"], [460, 1, 1, "", "vander"], [461, 1, 1, "", "var"], [462, 1, 1, "", "vdot"], [463, 1, 1, "", "vstack"], [464, 1, 1, "", "where"], [465, 1, 1, "", "zeros"], [466, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[89, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[89, 3, 1, "", "T"], [89, 4, 1, "", "__eq__"], [89, 4, 1, "", "__ge__"], [89, 4, 1, "", "__getitem__"], [89, 4, 1, "", "__gt__"], [89, 4, 1, "", "__le__"], [89, 4, 1, "", "__len__"], [89, 4, 1, "", "__lt__"], [89, 4, 1, "", "__ne__"], [89, 4, 1, "", "__setitem__"], [89, 4, 1, "", "all"], [89, 4, 1, "", "any"], [89, 4, 1, "", "argmax"], [89, 4, 1, "", "argmin"], [89, 4, 1, "", "argsort"], [89, 4, 1, "", "asnumpy"], [89, 4, 1, "", "astype"], [89, 4, 1, "", "choose"], [89, 4, 1, "", "clip"], [89, 4, 1, "", "conj"], [89, 4, 1, "", "conjugate"], [89, 4, 1, "", "copy"], [89, 4, 1, "", "cumprod"], [89, 4, 1, "", "cumsum"], [89, 3, 1, "", "device"], [89, 4, 1, "", "diagonal"], [89, 4, 1, "", "dot"], [89, 3, 1, "", "dtype"], [89, 4, 1, "", "fill"], [89, 3, 1, "", "flags"], [89, 3, 1, "", "flat"], [89, 4, 1, "", "flatten"], [89, 4, 1, "", "get_array"], [89, 3, 1, "", "imag"], [89, 4, 1, "", "item"], [89, 3, 1, "", "itemsize"], [89, 4, 1, "", "max"], [89, 4, 1, "", "mean"], [89, 4, 1, "", "min"], [89, 3, 1, "", "nbytes"], [89, 3, 1, "", "ndim"], [89, 4, 1, "", "nonzero"], [89, 4, 1, "", "partition"], [89, 4, 1, "", "prod"], [89, 4, 1, "", "put"], [89, 4, 1, "", "ravel"], [89, 3, 1, "", "real"], [89, 4, 1, "", "repeat"], [89, 4, 1, "", "reshape"], [89, 4, 1, "", "round"], [89, 4, 1, "", "searchsorted"], [89, 3, 1, "", "shape"], [89, 3, 1, "", "size"], [89, 4, 1, "", "sort"], [89, 4, 1, "", "squeeze"], [89, 4, 1, "", "std"], [89, 3, 1, "", "strides"], [89, 4, 1, "", "sum"], [89, 4, 1, "", "swapaxes"], [89, 3, 1, "", "sycl_context"], [89, 3, 1, "", "sycl_device"], [89, 3, 1, "", "sycl_queue"], [89, 4, 1, "", "take"], [89, 4, 1, "", "to_device"], [89, 4, 1, "", "trace"], [89, 4, 1, "", "transpose"], [89, 3, 1, "", "usm_type"], [89, 4, 1, "", "var"]], "dpnp.dtype": [[91, 4, 1, "", "__eq__"], [91, 4, 1, "", "__ge__"], [91, 4, 1, "", "__getitem__"], [91, 4, 1, "", "__gt__"], [91, 4, 1, "", "__le__"], [91, 4, 1, "", "__len__"], [91, 4, 1, "", "__lt__"], [91, 4, 1, "", "__ne__"], [91, 3, 1, "", "alignment"], [91, 3, 1, "", "base"], [91, 3, 1, "", "byteorder"], [91, 3, 1, "", "char"], [91, 3, 1, "", "descr"], [91, 3, 1, "", "fields"], [91, 3, 1, "", "flags"], [91, 3, 1, "", "hasobject"], [91, 3, 1, "", "isalignedstruct"], [91, 3, 1, "", "isbuiltin"], [91, 3, 1, "", "isnative"], [91, 3, 1, "", "itemsize"], [91, 3, 1, "", "kind"], [91, 3, 1, "", "metadata"], [91, 3, 1, "", "name"], [91, 3, 1, "", "names"], [91, 3, 1, "", "ndim"], [91, 4, 1, "", "newbyteorder"], [91, 3, 1, "", "num"], [91, 3, 1, "", "shape"], [91, 3, 1, "", "str"], [91, 3, 1, "", "subdtype"], [91, 3, 1, "", "type"]], "dpnp.fft": [[106, 1, 1, "", "fft"], [107, 1, 1, "", "fft2"], [108, 1, 1, "", "fftfreq"], [109, 1, 1, "", "fftn"], [110, 1, 1, "", "fftshift"], [111, 1, 1, "", "hfft"], [112, 1, 1, "", "ifft"], [113, 1, 1, "", "ifft2"], [114, 1, 1, "", "ifftn"], [115, 1, 1, "", "ifftshift"], [116, 1, 1, "", "ihfft"], [117, 1, 1, "", "irfft"], [118, 1, 1, "", "irfft2"], [119, 1, 1, "", "irfftn"], [120, 1, 1, "", "rfft"], [121, 1, 1, "", "rfft2"], [122, 1, 1, "", "rfftfreq"], [123, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[127, 4, 1, "", "__eq__"], [127, 4, 1, "", "__ge__"], [127, 4, 1, "", "__getitem__"], [127, 4, 1, "", "__gt__"], [127, 4, 1, "", "__iter__"], [127, 4, 1, "", "__le__"], [127, 4, 1, "", "__lt__"], [127, 4, 1, "", "__ne__"], [127, 4, 1, "", "__next__"], [127, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[178, 1, 1, "", "cholesky"], [179, 1, 1, "", "cond"], [180, 1, 1, "", "det"], [181, 1, 1, "", "eig"], [182, 1, 1, "", "eigh"], [183, 1, 1, "", "eigvals"], [184, 1, 1, "", "eigvalsh"], [185, 1, 1, "", "inv"], [186, 1, 1, "", "lstsq"], [187, 1, 1, "", "matrix_power"], [188, 1, 1, "", "matrix_rank"], [189, 1, 1, "", "multi_dot"], [190, 1, 1, "", "norm"], [191, 1, 1, "", "pinv"], [192, 1, 1, "", "qr"], [193, 1, 1, "", "slogdet"], [194, 1, 1, "", "solve"], [195, 1, 1, "", "svd"], [196, 1, 1, "", "tensorinv"], [197, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[239, 6, 1, "", "T"], [240, 4, 1, "", "__abs__"], [241, 4, 1, "", "__add__"], [242, 4, 1, "", "__and__"], [243, 4, 1, "", "__bool__"], [244, 4, 1, "", "__complex__"], [245, 4, 1, "", "__copy__"], [246, 4, 1, "", "__eq__"], [247, 4, 1, "", "__float__"], [248, 4, 1, "", "__floordiv__"], [249, 4, 1, "", "__ge__"], [250, 4, 1, "", "__getitem__"], [251, 4, 1, "", "__gt__"], [252, 4, 1, "", "__iadd__"], [253, 4, 1, "", "__iand__"], [254, 4, 1, "", "__ifloordiv__"], [255, 4, 1, "", "__ilshift__"], [256, 4, 1, "", "__imod__"], [257, 4, 1, "", "__imul__"], [258, 4, 1, "", "__int__"], [259, 4, 1, "", "__invert__"], [260, 4, 1, "", "__ior__"], [261, 4, 1, "", "__ipow__"], [262, 4, 1, "", "__irshift__"], [263, 4, 1, "", "__isub__"], [264, 4, 1, "", "__itruediv__"], [265, 4, 1, "", "__ixor__"], [266, 4, 1, "", "__le__"], [267, 4, 1, "", "__len__"], [268, 4, 1, "", "__lshift__"], [269, 4, 1, "", "__lt__"], [270, 4, 1, "", "__matmul__"], [271, 4, 1, "", "__mod__"], [272, 4, 1, "", "__mul__"], [273, 4, 1, "", "__ne__"], [274, 4, 1, "", "__neg__"], [275, 4, 1, "", "__new__"], [276, 4, 1, "", "__or__"], [277, 4, 1, "", "__pos__"], [278, 4, 1, "", "__pow__"], [279, 4, 1, "", "__repr__"], [280, 4, 1, "", "__rshift__"], [281, 4, 1, "", "__setitem__"], [282, 4, 1, "", "__str__"], [283, 4, 1, "", "__sub__"], [284, 4, 1, "", "__truediv__"], [285, 4, 1, "", "__xor__"], [286, 4, 1, "", "all"], [287, 4, 1, "", "any"], [288, 4, 1, "", "argmax"], [289, 4, 1, "", "argmin"], [290, 4, 1, "", "argsort"], [291, 4, 1, "", "astype"], [292, 4, 1, "", "choose"], [293, 4, 1, "", "clip"], [294, 4, 1, "", "conj"], [295, 4, 1, "", "conjugate"], [296, 4, 1, "", "copy"], [297, 4, 1, "", "cumprod"], [298, 4, 1, "", "cumsum"], [299, 4, 1, "", "diagonal"], [300, 6, 1, "", "dtype"], [301, 4, 1, "", "fill"], [302, 6, 1, "", "flags"], [303, 6, 1, "", "flat"], [304, 4, 1, "", "flatten"], [305, 6, 1, "", "imag"], [306, 4, 1, "", "item"], [307, 6, 1, "", "itemsize"], [308, 4, 1, "", "max"], [309, 4, 1, "", "mean"], [310, 4, 1, "", "min"], [311, 6, 1, "", "nbytes"], [312, 6, 1, "", "ndim"], [313, 4, 1, "", "nonzero"], [314, 4, 1, "", "partition"], [315, 4, 1, "", "prod"], [316, 4, 1, "", "put"], [317, 4, 1, "", "ravel"], [318, 6, 1, "", "real"], [319, 4, 1, "", "repeat"], [320, 4, 1, "", "reshape"], [321, 4, 1, "", "round"], [322, 4, 1, "", "searchsorted"], [323, 6, 1, "", "shape"], [324, 6, 1, "", "size"], [325, 4, 1, "", "sort"], [326, 4, 1, "", "squeeze"], [327, 4, 1, "", "std"], [328, 6, 1, "", "strides"], [329, 4, 1, "", "sum"], [330, 4, 1, "", "swapaxes"], [331, 4, 1, "", "take"], [332, 4, 1, "", "trace"], [333, 4, 1, "", "transpose"], [334, 4, 1, "", "var"]], "dpnp.random": [[356, 2, 1, "", "RandomState"], [357, 1, 1, "", "beta"], [358, 1, 1, "", "binomial"], [359, 1, 1, "", "bytes"], [360, 1, 1, "", "chisquare"], [361, 1, 1, "", "choice"], [362, 1, 1, "", "dirichlet"], [363, 1, 1, "", "exponential"], [364, 1, 1, "", "f"], [365, 1, 1, "", "gamma"], [366, 1, 1, "", "geometric"], [367, 1, 1, "", "gumbel"], [368, 1, 1, "", "hypergeometric"], [369, 1, 1, "", "laplace"], [370, 1, 1, "", "logistic"], [371, 1, 1, "", "lognormal"], [372, 1, 1, "", "logseries"], [373, 1, 1, "", "multinomial"], [374, 1, 1, "", "multivariate_normal"], [375, 1, 1, "", "negative_binomial"], [376, 1, 1, "", "noncentral_chisquare"], [377, 1, 1, "", "noncentral_f"], [378, 1, 1, "", "normal"], [379, 1, 1, "", "pareto"], [380, 1, 1, "", "permutation"], [381, 1, 1, "", "poisson"], [382, 1, 1, "", "power"], [383, 1, 1, "", "rand"], [384, 1, 1, "", "randint"], [385, 1, 1, "", "randn"], [386, 1, 1, "", "random"], [387, 1, 1, "", "random_integers"], [388, 1, 1, "", "random_sample"], [389, 1, 1, "", "ranf"], [390, 1, 1, "", "rayleigh"], [391, 1, 1, "", "sample"], [392, 1, 1, "", "seed"], [393, 1, 1, "", "shuffle"], [394, 1, 1, "", "standard_cauchy"], [395, 1, 1, "", "standard_exponential"], [396, 1, 1, "", "standard_gamma"], [397, 1, 1, "", "standard_normal"], [398, 1, 1, "", "standard_t"], [399, 1, 1, "", "triangular"], [400, 1, 1, "", "uniform"], [401, 1, 1, "", "vonmises"], [402, 1, 1, "", "wald"], [403, 1, 1, "", "weibull"], [404, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[356, 4, 1, "", "__eq__"], [356, 4, 1, "", "__ge__"], [356, 4, 1, "", "__gt__"], [356, 4, 1, "", "__le__"], [356, 4, 1, "", "__lt__"], [356, 4, 1, "", "__ne__"], [356, 4, 1, "", "get_state"], [356, 4, 1, "", "get_sycl_device"], [356, 4, 1, "", "get_sycl_queue"], [356, 4, 1, "", "normal"], [356, 4, 1, "", "rand"], [356, 4, 1, "", "randint"], [356, 4, 1, "", "randn"], [356, 4, 1, "", "random_sample"], [356, 4, 1, "", "standard_normal"], [356, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 20, 74, 77, 89, 91, 92, 107, 109, 111, 113, 114, 116, 118, 119, 121, 123, 124, 139, 140, 186, 188, 190, 195, 300, 333, 356, 357, 358, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 444, 474], "0": [0, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 148, 151, 152, 153, 156, 159, 160, 162, 165, 166, 167, 168, 169, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 198, 199, 200, 201, 202, 203, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 296, 299, 301, 305, 306, 318, 321, 323, 325, 327, 332, 333, 334, 335, 338, 340, 341, 342, 345, 347, 348, 349, 350, 351, 352, 355, 356, 358, 363, 365, 366, 367, 369, 370, 371, 373, 374, 375, 378, 380, 381, 382, 383, 386, 388, 389, 390, 391, 394, 397, 399, 400, 401, 408, 410, 411, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 474], "00": [70, 94, 106, 426], "000": [226, 358], "00000000005e": 102, "00000000e": [106, 226], "000000082740371e": 102, "000000e": [70, 426], "00001e10": [15, 162], "0001e10": 162, "000e": 94, "000j": 226, "002": 226, "00867716": 360, "01": 94, "02": [94, 226], "03": 226, "03088525e": 95, "0396842": 210, "04": 94, "04719755": 355, "04921661": 356, "05": [15, 94, 162], "0614962j": [107, 121], "06310682": 356, "07": 226, "07944154": [75, 193], "08": [15, 70, 94, 132, 162, 374, 426], "08156915": 356, "0943951": 355, "09640474": 205, "09861229": [75, 193, 202], "0d": 32, "0dev0": 6, "0j": [18, 88, 89, 163, 164, 170, 171, 213, 305, 318, 424], "0th": 443, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 164, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 290, 291, 296, 299, 301, 304, 305, 306, 312, 314, 318, 323, 325, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 360, 361, 363, 365, 367, 369, 370, 371, 373, 374, 375, 378, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 395, 397, 400, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 474], "10": [0, 4, 13, 23, 25, 29, 30, 48, 60, 66, 75, 76, 77, 81, 82, 85, 86, 89, 91, 93, 94, 102, 103, 110, 122, 144, 146, 152, 153, 158, 162, 174, 175, 200, 201, 202, 203, 210, 211, 217, 225, 320, 350, 352, 356, 358, 368, 380, 409, 413, 414, 416, 418, 421, 434, 440, 449, 450, 451, 453, 454, 455, 464], "100": [81, 122, 146, 162, 174, 189, 210, 368, 394, 407, 459], "1000": [56, 146, 189, 210, 357, 358, 363, 365, 367, 368, 369, 370, 371, 378, 379, 382, 384, 386, 389, 391, 397, 401, 402, 403, 404, 407, 447], "10000": [77, 189, 366, 381, 390, 400], "100000": 375, "1000000": [394, 396, 398, 399], "1024": 0, "105": 94, "11": [29, 30, 48, 71, 81, 82, 89, 103, 148, 190, 320, 375, 384, 418, 421, 427, 449, 450, 451, 453, 454, 455, 464], "110": [93, 160], "111111": 226, "113": 204, "11570901": 356, "1179187": 356, "118033988749895": 435, "119": 93, "1196081": 356, "12": [10, 29, 30, 47, 74, 79, 81, 82, 86, 91, 93, 103, 107, 121, 158, 210, 348, 350, 355, 380, 421, 449, 450, 451, 453, 454, 455, 464], "120": [76, 79], "123": [89, 94, 306], "125": [132, 347, 460], "127": 146, "128": [0, 146, 226], "12th": 93, "13": [10, 29, 30, 51, 81, 82, 88, 91, 93, 161, 213, 421, 450, 451, 454, 455], "130": 93, "134": 160, "13436424": 356, "135": 27, "13710533": 360, "139884456208480": 14, "13j": 407, "14": [29, 30, 50, 51, 81, 82, 88, 126, 160, 161, 421, 443, 450, 451, 454, 455], "140": 459, "140053638309840": 19, "14157194": 447, "14159265": [22, 27, 78, 355], "14423775e": 106, "14j": 407, "15": [29, 30, 77, 81, 82, 86, 93, 111, 116, 191, 201, 380, 421, 450, 451, 454, 455], "150": 79, "15888336": 210, "15j": 407, "16": [6, 50, 81, 82, 91, 106, 132, 142, 146, 148, 225, 347, 407, 422, 441, 450, 451, 454, 455], "16227766": [179, 409], "16394577": 356, "164": 205, "166": [6, 205], "16j": 106, "17": [106, 107, 121], "17157288": [182, 184], "17281316e": 106, "177": [146, 210], "17j": 106, "18": [6, 76, 91, 92, 93, 109, 190, 210], "180": [27, 78, 79, 93, 354, 459, 482], "1805": 10, "18236388": 356, "18557831": 356, "1887902": 355, "19": [10, 72, 91, 459], "1923875335537315": 385, "19245009": 420, "1924881e": 132, "1965": 10, "19722458": 75, "1d": [92, 351, 352, 440, 447], "1e": [15, 102, 162, 181, 191, 201, 202, 204, 205, 374], "1e10": [15, 162], "1j": [11, 12, 18, 35, 63, 64, 89, 117, 158, 163, 170, 181, 195, 305, 318, 406, 430, 432], "1th": 443, "2": [0, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 163, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 291, 296, 299, 301, 304, 306, 312, 314, 323, 324, 333, 335, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 354, 355, 356, 360, 364, 368, 374, 380, 383, 385, 396, 398, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "20": [6, 76, 86, 93, 122, 159, 162, 174, 175, 190, 352, 358, 373, 421, 440, 459], "20000": 358, "2007": 10, "200e": 94, "20477401j": [107, 121], "2048": 0, "21": [77, 91], "210": 79, "215": 210, "21941987": 356, "21968665": 356, "22": 351, "220": 459, "220446049250313e": 407, "222222": 226, "22460635e": 441, "22464680e": 106, "22497216": 190, "22776602": 210, "23": [6, 356], "230": 93, "23598776": 355, "23606798": 190, "24": [29, 30, 74, 76, 89, 92, 93, 160, 174, 196, 323, 348, 443, 445], "240": 79, "24264069": 190, "24544512": 356, "247219128924647": 235, "25": [91, 93, 98, 108, 148, 152, 153, 185, 198, 225, 237, 385, 394, 422, 460, 461], "255": [50, 52], "25506903": 356, "256": [0, 6, 146], "26": [53, 93], "260": 459, "26618007j": 203, "27": [57, 132, 210, 347, 420, 460], "270": 79, "28": 93, "28000000e": 226, "2800000e": 226, "283185307179586": 459, "28318531": 459, "28352814": 356, "28904982": 205, "297": 10, "299": 6, "2d": [195, 213, 458], "2e": 77, "2f": 0, "2j": [63, 64, 88, 106, 158, 163, 170, 182, 184, 213, 406, 424, 430, 462], "2k": 459, "3": [0, 3, 4, 13, 20, 21, 22, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 54, 55, 57, 60, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 115, 116, 118, 119, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 146, 148, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 170, 171, 172, 174, 175, 179, 180, 181, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 296, 299, 304, 306, 312, 314, 323, 324, 325, 333, 335, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 351, 355, 356, 360, 364, 371, 374, 380, 383, 384, 385, 395, 399, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 425, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466], "30": [74, 79, 89, 93, 122, 324, 352, 355, 440, 462], "300": [79, 459], "3003003": 408, "301": 10, "30102999566": 201, "3012989": 427, "30258509": [75, 211], "308": 226, "308j": 226, "31": [53, 146], "312": 95, "316": 210, "32": [91, 93, 146, 234, 236, 443], "33": 408, "330": 79, "333": 189, "33333333": 226, "3333333e": 226, "33340275": 447, "33486982e": 106, "33836967": 356, "340": 459, "34074171": 356, "34132519": 210, "34846923": 190, "34960421": 210, "35": [93, 366], "35106603e": 190, "35355338": 420, "36": 74, "360": 459, "37": 418, "371139e": 70, "38": [160, 358], "380": 459, "381": 6, "38268343": 182, "38268343j": 182, "38629436": 75, "38885": 358, "389056099": [99, 102], "39": 6, "39295758": 356, "397": 6, "3e": [0, 77, 407], "3j": [88, 213, 430], "3rd": 62, "3x3": 212, "3x8000": 395, "4": [0, 13, 14, 20, 21, 29, 30, 32, 34, 35, 45, 47, 48, 50, 52, 54, 60, 61, 62, 65, 68, 70, 72, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 103, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 128, 129, 132, 134, 135, 136, 140, 141, 142, 144, 146, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 163, 170, 174, 177, 180, 185, 187, 188, 190, 193, 196, 197, 198, 203, 206, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 227, 228, 230, 232, 235, 237, 296, 299, 304, 312, 314, 323, 325, 333, 335, 338, 340, 342, 347, 348, 350, 351, 355, 356, 357, 360, 380, 385, 401, 405, 406, 407, 410, 411, 412, 416, 417, 418, 419, 422, 424, 428, 429, 431, 434, 435, 436, 438, 439, 443, 444, 446, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466], "40": [93, 122, 175, 352, 440], "40882036": 356, "4096": 0, "41421356": [179, 190], "42": 422, "420": 459, "429": 6, "44": [345, 351], "4400": [93, 443], "443469": 210, "44509285e": 106, "45": [18, 27], "4532": [93, 443], "46": 93, "460": 459, "46394577": 356, "464": 210, "4664": [93, 443], "47": 6, "4730": [93, 443], "4796": [93, 443], "48": [6, 74], "48093112": 356, "4874": [93, 443], "48927254": 356, "49": 6, "4928": [93, 443], "49543509": 356, "49778714": 459, "499128": 88, "4d": 195, "4e": 407, "4j": [158, 406, 462], "4x4": [450, 454], "5": [0, 6, 13, 14, 19, 20, 21, 28, 29, 32, 45, 48, 49, 50, 52, 53, 54, 58, 60, 62, 65, 68, 69, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 98, 103, 107, 108, 110, 118, 121, 122, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 146, 148, 151, 152, 153, 154, 155, 158, 159, 160, 163, 170, 174, 175, 178, 182, 184, 185, 189, 190, 194, 198, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 232, 235, 291, 296, 324, 335, 338, 340, 341, 342, 347, 350, 351, 355, 356, 357, 358, 360, 363, 375, 379, 380, 381, 382, 385, 388, 403, 405, 406, 407, 408, 410, 412, 414, 415, 416, 417, 418, 419, 421, 422, 424, 428, 430, 434, 435, 437, 438, 439, 443, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466], "50": [107, 121, 122, 146, 174, 204, 205, 210, 352, 440, 443, 447, 464], "500": [174, 459], "5018": [93, 443], "5091786": 71, "51": 6, "512": 0, "5162": [93, 443], "52069395e": 106, "52359878": 355, "52928804": 356, "5306": [93, 443], "5399045e": 132, "54": 356, "540": 459, "542": 6, "54288406": 356, "54465213": 356, "548739": 427, "54930614": 28, "55": [345, 351, 422], "5555555555555554": 237, "56": 6, "562": 210, "5620499351813308": [11, 12], "56920387": 356, "5707963267948966": 24, "57079633": [18, 27, 355, 459], "58997253": 356, "591953": 71, "5e": [204, 205], "5j": [219, 340, 430], "6": [0, 4, 6, 13, 20, 21, 29, 30, 32, 45, 48, 52, 53, 60, 62, 68, 74, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 97, 102, 103, 108, 111, 122, 129, 132, 145, 148, 154, 158, 159, 160, 174, 190, 191, 192, 195, 196, 198, 210, 212, 229, 230, 234, 296, 306, 323, 335, 338, 342, 345, 347, 350, 356, 373, 375, 380, 385, 405, 406, 412, 416, 417, 418, 419, 422, 428, 430, 434, 436, 437, 438, 439, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 462, 463, 464, 466], "60": [74, 79, 93, 352, 440, 443, 459, 464], "600": 174, "60943791": 75, "61799388": 355, "62": 160, "6227766": 146, "62318272": 360, "62341325": 146, "624": 94, "63": 146, "63317787e": 441, "63522211": 356, "63836967": 356, "64": [0, 4, 93, 132, 146, 234, 236, 347, 418], "64000": 93, "65745445": 23, "66519143": 355, "6666666666666665": 232, "67": 93, "67305985": 139, "673174": 356, "67718303": 356, "69295758": 356, "69314718": [75, 193, 202], "6990877": 356, "6j": [158, 406, 462], "7": [13, 15, 20, 21, 45, 58, 60, 68, 72, 74, 77, 80, 81, 82, 84, 85, 87, 89, 92, 99, 103, 129, 133, 146, 148, 160, 162, 174, 190, 195, 212, 217, 222, 225, 306, 338, 349, 350, 356, 380, 406, 410, 413, 415, 416, 436, 437, 438, 439, 443, 449, 450, 451, 453, 454, 455, 456, 457, 459, 462, 464], "70": [174, 462, 464], "700": 174, "700e": 94, "70710677": [89, 305, 318], "70710678": [179, 181], "70710678j": 181, "70882036": 356, "71238898": 355, "718281828": [99, 102], "72": 74, "720": [76, 459], "72075441": 210, "72538256": 25, "74165739": 190, "742278e": 426, "74596669": 190, "74921661": 356, "75": [48, 98, 108, 148, 153, 185, 198], "754": 125, "75958653": 355, "76096244": 356, "76377462": 356, "77447665": 205, "78539816": [18, 26, 27, 459], "78927254": 356, "79175947": 75, "79769313e": 226, "7j": 349, "8": [4, 13, 15, 20, 45, 57, 60, 68, 74, 80, 81, 82, 84, 85, 89, 91, 93, 94, 103, 106, 108, 122, 123, 129, 132, 146, 148, 158, 162, 180, 190, 193, 195, 196, 198, 210, 212, 323, 338, 347, 348, 350, 356, 380, 399, 406, 416, 420, 426, 439, 443, 445, 447, 449, 450, 451, 453, 454, 455, 459, 460, 464], "80": [91, 93, 464], "8000": 395, "80226506": 356, "81715362": 356, "827941": [146, 210], "82842712": [182, 184], "84288406": 356, "84401099": 356, "84743374": 356, "84803548": 190, "85": 93, "86": 160, "87649168": 204, "88": 92, "88178420e": 106, "88997253": 356, "89920014": 360, "8f": 91, "8j": 462, "9": [4, 13, 20, 45, 60, 68, 74, 77, 80, 81, 82, 84, 87, 89, 93, 95, 103, 106, 109, 110, 115, 126, 132, 134, 142, 146, 148, 162, 181, 186, 190, 191, 192, 195, 210, 212, 225, 226, 306, 338, 350, 356, 358, 360, 380, 406, 416, 431, 436, 443, 449, 450, 451, 453, 454, 455, 456, 459, 460, 464], "90": [18, 79, 354, 464], "917152": 442, "92387953": 182, "92387953j": 182, "94": 93, "94591015": 75, "95": 186, "95799250e": 106, "98": 213, "98024613": 210, "99": [92, 202, 352], "99322285": 23, "99532227": 98, "996272": 442, "99822295": 25, "99853728": 98, "999": 94, "9990000e": 226, "99959305": 98, "99989938": 98, "9999": 226, "99997791": 98, "999999e": 162, "A": [10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 109, 112, 113, 114, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 156, 158, 159, 161, 165, 166, 167, 168, 169, 175, 176, 177, 178, 182, 183, 184, 186, 188, 189, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 219, 221, 222, 225, 229, 230, 234, 236, 291, 296, 304, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 349, 354, 355, 356, 358, 375, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 405, 408, 410, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 438, 439, 441, 442, 443, 444, 446, 448, 450, 452, 454, 456, 457, 460, 464, 465, 466, 482], "AND": [14, 50, 51, 52, 53, 161, 206, 207, 208, 209], "And": [4, 43, 44, 81, 89, 291, 450, 454], "As": 458, "Be": 181, "Being": 3, "But": [4, 91], "By": [29, 30, 39, 44, 74, 89, 107, 111, 113, 117, 119, 123, 146, 186, 198, 210, 213, 214, 216, 220, 227, 228, 231, 232, 233, 234, 235, 236, 237, 291, 405, 411, 416, 428, 435, 439, 448, 450, 452, 454, 461], "For": [0, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 304, 305, 306, 312, 318, 320, 323, 328, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 474, 482], "If": [4, 10, 11, 12, 14, 15, 19, 20, 21, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 60, 62, 72, 74, 75, 76, 77, 80, 84, 85, 88, 89, 91, 92, 93, 94, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 135, 136, 138, 143, 146, 148, 152, 153, 154, 158, 159, 160, 162, 168, 169, 170, 178, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 199, 210, 211, 214, 215, 216, 218, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 325, 345, 348, 351, 352, 356, 378, 400, 406, 407, 409, 411, 412, 416, 418, 419, 421, 429, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 458, 459, 460, 461, 462, 463, 464, 474, 482], "In": [4, 10, 29, 30, 76, 77, 93, 94, 112, 113, 114, 117, 119, 148, 178, 183, 189, 192, 205, 210, 229, 230, 232, 234, 236, 348, 351, 356, 400, 412, 437, 439, 457], "It": [4, 10, 14, 19, 20, 29, 30, 60, 76, 77, 86, 88, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 148, 182, 184, 205, 213, 216, 227, 228, 229, 230, 231, 232, 233, 235, 237, 348, 422, 435, 437, 439, 461, 482], "Its": [60, 196, 352, 445], "NOT": [51, 161, 206, 207, 208, 209], "No": [38, 39, 93, 178], "Not": [14, 19, 39, 165, 226, 229, 230, 231, 233, 234, 236, 348], "OR": [19, 50, 51, 52, 53, 161, 206, 207, 208, 209], "On": 4, "One": [45, 46, 47, 74, 90, 91, 117, 412], "Or": [148, 447], "That": 212, "The": [3, 4, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 55, 57, 60, 61, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 164, 165, 166, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 291, 296, 305, 312, 314, 318, 323, 335, 336, 337, 338, 339, 340, 341, 342, 346, 347, 348, 350, 351, 352, 354, 355, 356, 359, 361, 362, 372, 377, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 405, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 474, 478, 482], "Then": [10, 40, 42, 212], "There": [10, 198, 458], "These": [4, 20, 91, 93, 94, 101, 212, 224, 352, 440, 450, 454, 474, 478], "To": [4, 111, 117, 119, 132, 338, 459], "With": [29, 30, 48, 72, 190, 214, 220, 227, 228, 234, 236, 348, 437], "_": [0, 153, 434, 447], "__array_interface__": 91, "__bool__": 474, "__dlpack__": 138, "__dlpack_device__": 138, "__eq__": [89, 91, 127, 356], "__ge__": [89, 91, 127, 356], "__getitem__": [89, 91, 127], "__gt__": [89, 91, 127, 356], "__iter__": 127, "__le__": [89, 91, 127, 356], "__len__": [89, 91], "__lt__": [89, 91, 127, 356], "__main__": 0, "__name__": 0, "__ne__": [89, 91, 127, 356], "__next__": 127, "__setitem__": [89, 127], "__sycl_usm_array_interface__": 41, "_dtypes_list": 0, "a1": [35, 36], "a2": [35, 36], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 60, "a_min": 60, "a_resamp": 117, "ab": [6, 10, 12, 15, 162], "abc": 93, "abcd": 94, "about": [40, 42, 89, 125, 181, 302, 474], "abov": [3, 75, 80, 83, 109, 114, 119, 123, 159, 192, 211, 226, 409, 448, 449, 453], "absolut": [6, 11, 15, 18, 105, 162, 193, 235, 237, 349, 407, 435, 459, 461, 482], "accept": [31, 93, 356, 429, 450, 454], "access": [10, 81, 82, 124, 212, 450, 454, 474], "accord": [14, 19, 48, 56, 91, 123, 125, 181, 182, 183, 184, 211, 216, 232, 235, 237, 409, 414, 435, 461], "accordingli": [231, 233], "account": 412, "accumul": [75, 76, 77, 93, 152, 229, 230, 234, 236, 348, 437, 445], "accur": [91, 102, 148, 202, 204], "accuraci": [112, 113, 114, 117, 119], "achiev": 93, "across": [84, 153, 229, 230, 234, 236], "activ": 4, "actual": [91, 152, 153, 178, 189], "ad": [15, 91, 94, 101, 117, 162, 180, 193, 205, 459, 478], "add": [6, 91, 482], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [75, 178, 232, 458], "address": 91, "adjac": 459, "advanc": 93, "advers": 93, "advis": 4, "affect": [21, 84, 93, 124, 152, 153], "after": [90, 124, 337, 375, 416], "ag": 91, "against": [15, 29, 30, 54, 55, 60, 72, 147, 162, 190, 191, 214, 220, 227, 228, 234, 236, 348, 352, 437, 440], "ai": [3, 352, 440], "ai_max": 440, "ai_min": 440, "ainv": [185, 196], "al": 10, "algebra": [467, 478], "algorithm": [10, 93, 94, 106, 112, 120], "alia": [10, 16, 17, 87, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 222, 238, 356, 386, 389, 391, 410, 419, 456, 459, 463], "alias": [9, 111, 112, 117, 119], "align": 91, "all": [4, 6, 9, 15, 18, 19, 20, 35, 36, 39, 44, 48, 61, 72, 79, 85, 89, 90, 91, 93, 94, 99, 100, 102, 104, 109, 110, 114, 115, 118, 119, 123, 124, 129, 130, 131, 139, 140, 142, 146, 148, 154, 156, 158, 178, 188, 191, 198, 210, 214, 220, 227, 228, 231, 233, 291, 294, 301, 314, 348, 358, 406, 407, 416, 419, 422, 433, 437, 458, 463, 474, 482], "allclos": [6, 35, 162, 185, 191, 192, 194, 195, 197], "alloc": [3, 4, 20, 21, 34, 37, 38, 39, 40, 41, 42, 44, 48, 66, 75, 80, 81, 83, 89, 95, 96, 104, 108, 122, 126, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 168, 169, 198, 199, 210, 211, 212, 216, 219, 232, 235, 237, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 409, 433, 435, 448, 450, 454, 460, 461, 465, 466], "allow": [44, 89, 93, 152, 153, 205, 212, 291, 320, 439, 474], "alltru": 6, "almost": [32, 181, 450], "along": [3, 4, 14, 16, 17, 19, 20, 29, 30, 31, 48, 61, 62, 72, 75, 76, 77, 80, 81, 83, 84, 85, 89, 90, 92, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 129, 130, 131, 135, 136, 141, 146, 148, 154, 159, 190, 192, 196, 197, 198, 210, 211, 214, 215, 216, 217, 218, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 288, 289, 290, 297, 298, 308, 310, 315, 316, 324, 327, 329, 331, 332, 334, 345, 348, 350, 351, 352, 409, 411, 416, 417, 419, 422, 428, 429, 434, 435, 437, 439, 440, 443, 444, 445, 447, 450, 451, 454, 455, 458, 459, 461, 463, 474], "alpha": [357, 362, 363, 379, 382], "alreadi": [4, 10, 38, 39, 45, 46, 47, 343, 458], "also": [3, 10, 13, 15, 18, 21, 27, 50, 52, 53, 67, 87, 89, 91, 93, 97, 101, 109, 114, 118, 119, 120, 123, 132, 134, 135, 136, 137, 141, 143, 148, 149, 150, 151, 152, 155, 162, 175, 176, 177, 178, 204, 205, 212, 215, 221, 222, 224, 225, 323, 338, 339, 347, 394, 410, 414, 436, 439, 456, 458, 474], "alter": 84, "altern": [3, 4, 14, 19, 76, 77, 88, 89, 213, 214, 216, 220, 229, 230, 232, 234, 235, 236, 237, 333, 348, 435, 437, 461], "although": [18, 91, 113, 114, 115, 444], "alwai": [4, 10, 31, 37, 44, 84, 89, 92, 105, 132, 138, 182, 184, 235, 237, 291, 338, 412, 430, 435, 461], "amax": [6, 214], "ambigu": 474, "amin": [6, 220], "among": 92, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 171, 175, 176, 177, 180, 183, 186, 188, 189, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 290, 291, 292, 293, 296, 306, 308, 312, 314, 316, 319, 320, 323, 324, 325, 326, 330, 331, 333, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 358, 363, 364, 366, 375, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 474, 482], "anaconda": [3, 4], "analog": [107, 109, 111, 113, 114, 116], "analysi": 10, "analyt": 3, "angl": [6, 10, 26, 27, 78, 79, 158, 354, 355, 406, 407, 459, 482], "ani": [3, 6, 14, 15, 20, 34, 37, 38, 39, 40, 41, 42, 44, 54, 55, 66, 80, 83, 85, 89, 91, 93, 94, 107, 109, 113, 114, 119, 123, 124, 144, 145, 146, 148, 153, 154, 164, 171, 172, 187, 197, 198, 210, 212, 231, 233, 291, 312, 356, 400, 429, 460, 474], "anoth": [4, 68, 89, 103, 113, 114, 138, 296, 316, 345, 351, 417], "answer": 358, "anti": [84, 124], "anyth": 91, "ap": 186, "apart": 447, "api": [0, 2, 3, 6, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "appear": [101, 130, 131, 458], "append": [0, 6, 85, 92, 94, 101, 112, 113, 114, 175], "appli": [29, 30, 31, 48, 56, 93, 226, 413, 443, 447], "applic": [10, 91], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [89, 91, 112, 113, 114, 323], "appropri": [4, 29, 30, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 147, 197, 227, 228, 231, 233, 356, 384, 387, 439, 474], "approxim": [125, 447], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 104, 105, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 146, 148, 149, 150, 151, 152, 153, 155, 160, 161, 162, 165, 166, 167, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 313, 314, 323, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 381, 382, 384, 387, 388, 390, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 447, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 474, 482], "arang": [0, 6, 13, 29, 30, 32, 45, 46, 47, 48, 49, 60, 67, 79, 80, 81, 82, 84, 87, 88, 89, 93, 97, 99, 100, 102, 103, 106, 128, 129, 132, 137, 145, 146, 148, 152, 159, 160, 174, 190, 198, 201, 202, 206, 207, 208, 209, 210, 212, 213, 214, 218, 220, 222, 225, 299, 339, 342, 345, 347, 351, 355, 380, 410, 413, 416, 422, 436, 443, 445, 447, 450, 451, 454, 455, 456, 464, 466], "arbitrari": [43, 88, 91, 93, 160, 213, 413, 450, 454], "arbitrarili": 93, "arc": [18, 26], "arcco": [6, 23, 24, 26, 27, 70], "arccosh": [6, 22, 25, 28, 71], "arcsin": [6, 22, 25, 26, 27, 426], "arcsinh": [6, 23, 24, 28, 427], "arctan": [6, 18, 22, 24, 27, 28, 441], "arctan2": [6, 18, 26], "arctanh": [6, 23, 25, 26, 27, 442], "area": 447, "arg": [54, 356], "arg1": 173, "arg2": 173, "argmax": [0, 6, 30, 89, 227, 352, 440, 474], "argmin": [6, 29, 89, 228, 440, 474], "argpartit": [6, 31, 352, 440, 474], "argsort": [6, 89, 352, 421, 429, 440, 446, 474], "argument": [0, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 56, 57, 58, 60, 62, 67, 70, 71, 78, 79, 87, 88, 89, 91, 94, 98, 99, 100, 102, 132, 133, 134, 135, 136, 137, 151, 155, 158, 161, 172, 173, 175, 189, 190, 201, 202, 203, 204, 205, 212, 213, 215, 221, 222, 223, 225, 320, 333, 336, 337, 346, 347, 349, 351, 354, 355, 406, 407, 408, 410, 413, 414, 415, 420, 424, 425, 426, 427, 434, 436, 441, 442, 443, 447, 456, 457, 474, 482], "argwher": [6, 338], "ari": [45, 46, 47, 92], "arithmet": [48, 146, 216, 217, 232, 235, 237, 346, 435, 437, 461, 467, 478], "around": [6, 89, 146, 351, 418], "arr": [20, 39, 82, 91, 153, 353, 380, 451, 455], "arr2": 91, "arr_t": [44, 89, 291], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 245, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 478, 482], "array2str": 6, "array_equ": 6, "array_equiv": [6, 35], "array_lik": [20, 34, 37, 38, 39, 40, 41, 42, 43, 48, 66, 68, 80, 83, 92, 103, 144, 145, 146, 164, 171, 198, 210, 335, 345, 351, 352, 356, 423, 428, 439, 443, 460], "array_of_diagon": 84, "array_repr": 6, "array_split": [6, 62], "array_str": 6, "arrays_and_dtyp": 413, "art": 10, "asanyarrai": [6, 38, 39, 42], "asarrai": [4, 6, 37, 39, 40, 42, 43, 335, 428], "asarray_chkfinit": [6, 37, 38], "ascend": [182, 184, 421], "ascii": 91, "ascontiguousarrai": [6, 37, 38, 39, 42], "asfarrai": [6, 37, 38], "asfortranarrai": [6, 37, 38, 39, 40], "asmatrix": 6, "asnumpi": 89, "aspect": 91, "assembl": [62, 90, 154, 419, 434, 463], "assign": [89, 301, 323, 450, 454], "associ": [48, 152, 153, 474], "assum": [10, 48, 94, 111, 117, 119, 188, 191, 195, 212, 447], "astyp": [6, 89, 146, 338], "atleast_1d": [6, 46, 47, 101], "atleast_2d": [6, 45, 47, 101], "atleast_3d": [6, 45, 46, 101], "atol": [15, 162], "attain": 0, "attempt": [88, 189], "attribut": [89, 91, 96, 125, 145, 157, 192, 342, 466, 467], "automat": [152, 153], "avail": [2, 3, 4, 10, 69, 73, 91, 98, 217, 223, 227, 228, 231, 233, 234, 467, 474], "averag": [6, 89, 216, 232, 309, 437, 478], "avg": 48, "avoid": [34, 38, 46, 47, 111, 117, 119], "aweight": 73, "ax": [14, 19, 29, 30, 48, 72, 75, 85, 88, 89, 93, 101, 107, 109, 110, 113, 114, 115, 118, 119, 121, 123, 129, 148, 160, 190, 194, 196, 197, 211, 213, 214, 216, 220, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 330, 333, 343, 348, 409, 416, 417, 433, 435, 437, 438, 443, 444, 445, 446, 458, 461], "axi": [14, 16, 17, 19, 20, 29, 30, 31, 48, 61, 62, 72, 74, 75, 76, 77, 84, 85, 89, 90, 92, 93, 101, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 129, 130, 131, 135, 136, 141, 146, 148, 154, 159, 186, 190, 198, 210, 211, 213, 214, 215, 216, 217, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 290, 297, 298, 304, 308, 309, 310, 314, 315, 316, 319, 324, 325, 326, 327, 329, 331, 333, 334, 344, 345, 348, 350, 351, 352, 405, 409, 411, 412, 416, 417, 419, 422, 428, 429, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 458, 459, 461, 463, 474], "axis1": [84, 89, 299, 330, 332, 438, 445], "axis2": [84, 89, 299, 330, 332, 438, 445], "axisa": 74, "axisb": 74, "axisc": 74, "axiserror": [31, 429], "b": [10, 13, 15, 20, 29, 30, 35, 36, 50, 53, 61, 62, 68, 74, 77, 88, 89, 90, 91, 93, 94, 97, 139, 140, 149, 150, 154, 160, 162, 174, 176, 177, 180, 186, 189, 190, 191, 193, 194, 195, 196, 197, 206, 208, 213, 214, 220, 337, 339, 343, 347, 357, 413, 419, 434, 443, 444, 452, 462, 463, 482], "back": [89, 141, 304, 405, 412, 417, 452], "backend": [2, 147, 359, 361, 362, 372, 377, 393], "backward": [10, 44, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 148, 291, 416, 417], "bad": 368, "bartlett": 6, "base": [0, 4, 91, 93, 100, 103, 132, 146, 152, 153, 195, 200, 201, 202, 203, 204, 205, 210, 211, 213, 345, 347, 351, 353], "base_repr": 6, "basic": [56, 93, 474, 478], "bc": [180, 193], "bcde": 94, "becaus": [10, 14, 19, 111, 117, 119, 459, 474], "becom": [10, 89, 152, 333], "been": [90, 352, 417, 440], "befor": [4, 20, 31, 62, 75, 89, 92, 112, 113, 114, 130, 131, 197, 211, 214, 220, 235, 237, 314, 325, 348, 409, 416, 417, 429, 435, 437, 444, 461, 462], "begin": [92, 94, 146, 198, 210, 422], "behav": [199, 351], "behavior": [89, 121, 296, 444], "behaviour": 226, "behind": [89, 314], "being": [3, 91, 135, 136, 215, 221], "belong": [86, 152], "below": [0, 4, 9, 80, 83, 91, 117, 188, 448, 449, 453, 459, 474], "best": 94, "beta": [6, 367], "between": [15, 21, 56, 85, 92, 125, 140, 143, 148, 160, 162, 198, 210, 373, 387, 436, 447, 459], "beyond": [4, 416], "bia": 73, "big": 91, "bin": [86, 106, 108, 122, 152, 153, 394], "bin_edg": [152, 153], "binari": [50, 52, 53, 139, 140, 142, 143, 467, 478], "binary_repr": 6, "bincount": [6, 86, 152], "binomi": [6, 375], "bins_0": 153, "bins_1": 153, "bit": [50, 51, 52, 53, 91, 125, 157, 161, 175, 206, 208, 209, 234, 236, 414, 425, 478], "bitwis": [50, 52, 53], "bitwise_and": [6, 51, 52, 53, 161, 206], "bitwise_not": 6, "bitwise_or": [6, 50, 51, 53, 161, 208], "bitwise_xor": [6, 50, 51, 52, 161, 209], "biufcmmosuv": 91, "blackman": 6, "block": [6, 62, 90, 124, 154, 174, 419, 434, 463], "bmat": 6, "bool": [9, 14, 15, 19, 29, 30, 34, 35, 36, 38, 41, 44, 48, 56, 68, 72, 75, 86, 89, 91, 94, 97, 124, 138, 146, 149, 150, 152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 188, 190, 191, 195, 198, 210, 211, 214, 216, 218, 220, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 291, 338, 339, 348, 409, 412, 422, 425, 435, 437, 439, 458, 460, 461, 474], "bool_": 9, "boolean": [50, 51, 52, 53, 68, 75, 91, 103, 132, 138, 159, 161, 162, 165, 166, 167, 168, 169, 170, 206, 208, 211, 212, 216, 232, 234, 235, 237, 338, 345, 409, 412, 435, 439, 461], "both": [10, 13, 15, 20, 27, 35, 36, 48, 50, 52, 53, 60, 67, 74, 87, 88, 97, 113, 120, 132, 134, 135, 136, 137, 149, 150, 151, 155, 160, 162, 174, 175, 176, 177, 190, 204, 205, 206, 208, 209, 213, 215, 221, 222, 225, 236, 337, 339, 347, 410, 414, 436, 443, 445, 450, 452, 454, 456, 462, 464], "bound": [351, 421, 439, 440], "boundari": [148, 351], "briefli": 474, "broadcast": [13, 14, 19, 29, 30, 36, 48, 54, 55, 60, 68, 72, 87, 93, 103, 132, 135, 136, 155, 168, 169, 190, 191, 209, 211, 213, 214, 215, 216, 220, 221, 225, 227, 228, 232, 234, 235, 236, 237, 347, 348, 351, 352, 409, 411, 435, 436, 437, 440, 444, 456, 461, 464], "broadcast_arrai": [6, 55], "broadcast_shap": 6, "broadcast_to": [6, 54, 444], "brought": 10, "buffer": [41, 76, 77, 89, 138, 139, 140, 142, 143, 199, 214, 220, 229, 230, 412], "buffer_lik": 139, "buffererror": 138, "build": 478, "build_loc": 4, "built": 91, "busday_count": 6, "busday_offset": 6, "byte": [6, 44, 89, 91, 93, 139, 140, 199, 291, 307, 311], "byte_bound": 6, "byteord": 91, "byteswap": 6, "bz2": 199, "c": [2, 4, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 74, 78, 79, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 144, 145, 147, 149, 150, 151, 155, 158, 160, 161, 165, 166, 167, 174, 175, 176, 177, 180, 186, 189, 190, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 221, 222, 225, 291, 296, 304, 317, 336, 337, 338, 339, 341, 342, 346, 347, 349, 354, 355, 405, 408, 410, 412, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 443, 444, 456, 457, 458, 464, 465, 466, 482], "c_contigu": [40, 42, 89, 296], "ca": 65, "calcul": [10, 11, 12, 13, 18, 27, 48, 75, 77, 85, 87, 92, 93, 97, 99, 100, 102, 106, 115, 132, 133, 134, 137, 148, 153, 155, 181, 182, 183, 184, 186, 191, 202, 204, 205, 211, 213, 216, 222, 225, 232, 235, 237, 339, 347, 348, 409, 410, 435, 436, 456, 461, 462, 467, 482], "call": [10, 18, 20, 29, 30, 31, 40, 42, 91, 112, 113, 114, 117, 120, 141, 181, 183, 189, 212, 245, 338, 433, 439, 444, 447, 482], "callabl": [141, 212], "cambridg": 10, "can": [0, 3, 4, 10, 13, 15, 20, 21, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 56, 66, 67, 74, 80, 81, 83, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 104, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 122, 124, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 159, 160, 161, 162, 164, 171, 172, 174, 175, 176, 177, 178, 185, 186, 187, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 215, 219, 221, 222, 225, 234, 236, 291, 296, 323, 325, 336, 337, 338, 339, 340, 341, 342, 346, 347, 352, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 410, 412, 414, 429, 436, 439, 440, 443, 445, 447, 448, 450, 454, 455, 456, 458, 460, 462, 464, 465, 466, 474, 482], "can_cast": [6, 478], "cannot": [62, 227, 228, 433, 434], "capabl": [21, 34, 37, 38, 40, 42, 48, 105, 146, 198, 210, 213], "care": [21, 181], "cartesian": 218, "case": [4, 14, 19, 21, 29, 30, 34, 37, 38, 39, 40, 42, 48, 66, 76, 77, 80, 83, 85, 93, 94, 95, 96, 104, 108, 111, 116, 120, 122, 139, 140, 141, 142, 144, 145, 146, 148, 156, 181, 192, 195, 198, 199, 205, 210, 219, 229, 230, 234, 236, 340, 341, 342, 348, 412, 437, 443, 448, 459, 460, 465, 466, 474], "cast": [14, 19, 44, 56, 62, 68, 75, 76, 77, 89, 93, 132, 154, 181, 211, 213, 216, 226, 229, 230, 232, 234, 235, 236, 237, 291, 348, 409, 419, 434, 435, 437, 461, 463], "cat": [358, 375], "cauchi": 394, "cbrt": [6, 431], "cdef": 94, "cdot": 443, "cdoubl": 9, "ceil": [6, 33, 126, 133, 134, 415, 418, 457], "center": [107, 108, 109, 110, 114, 115, 122], "central": [148, 376, 377], "certain": [91, 212], "ch": 10, "chain": [88, 89, 93, 94], "chang": [44, 66, 74, 89, 91, 93, 103, 229, 230, 291, 304, 328, 333, 336, 345, 346, 351, 352, 353, 405, 412, 417, 459, 478], "char": 91, "charact": [91, 140], "check": [14, 19, 37, 38, 39, 56, 111, 164, 171, 178, 191, 194], "check_valid": 374, "chi": [360, 376], "chisquar": 6, "choic": [6, 59, 89, 106, 107, 109, 112, 113, 114, 118, 119, 121, 123, 182, 184, 292], "choicelist": 422, "choleski": 6, "choos": [6, 18, 26, 89, 94, 422, 464, 474], "chosen": [32, 152, 458, 464], "circ": 482, "circl": [193, 447], "clamp": [351, 439, 440], "clariti": 124, "class": [3, 89, 91, 127, 139, 140, 141, 143, 159, 199, 356, 384, 448, 478], "classic": 93, "clear": [91, 474], "clip": [6, 89, 351, 439, 440, 474], "close": [18, 22, 23, 24, 26, 43, 44, 89, 93, 101, 158, 198, 291, 356, 384, 406, 407, 415, 418, 447], "closer": 457, "cloud": 3, "cmake": 4, "co": [6, 22, 71, 183, 426, 441, 447], "code": [41, 91, 173], "coeffici": [186, 194, 197], "coerc": [41, 139, 140, 141, 142, 143, 199], "coin": 358, "col": 159, "collaps": [89, 304, 458], "column": [6, 37, 38, 39, 40, 42, 43, 44, 61, 62, 76, 77, 84, 89, 90, 104, 124, 130, 131, 148, 154, 156, 181, 182, 186, 189, 192, 195, 291, 405, 419, 434, 448, 450, 454, 460, 463], "column_stack": [6, 62, 90, 154, 419, 434, 463], "com": 4, "combin": [0, 91, 101, 109, 114, 119, 123, 148], "combinatori": 94, "come": 458, "comma": [91, 93], "command": 4, "common": [112, 113, 114, 338, 443], "common_typ": 6, "compani": [358, 375], "compar": [15, 35, 97, 135, 136, 153, 162, 215, 221], "compare_chararrai": 6, "comparison": [2, 97, 149, 150, 176, 177, 339, 467, 478], "compat": [3, 10, 14, 19, 44, 48, 89, 211, 216, 231, 232, 233, 235, 237, 291, 409, 412, 435, 461, 478], "compil": [4, 91, 147], "complement": 459, "complementari": [134, 459], "complet": [3, 4, 94, 140, 141, 192, 417, 474], "complex": [10, 11, 12, 18, 26, 27, 35, 56, 75, 88, 89, 91, 94, 98, 105, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 132, 135, 136, 158, 163, 164, 170, 171, 181, 182, 183, 184, 192, 193, 195, 211, 213, 215, 221, 226, 235, 237, 294, 295, 349, 406, 407, 409, 430, 435, 458, 461, 462, 474, 478], "complex128": [9, 10, 48, 413], "complex64": [9, 10, 48, 89, 132, 324], "compliant": 89, "complic": [93, 482], "compon": [10, 35, 110, 115, 122, 125, 158, 226, 406], "compos": 67, "composit": [77, 174, 437, 447], "compress": [6, 103, 422, 439, 474], "comput": [4, 10, 18, 22, 23, 24, 25, 26, 27, 28, 33, 48, 50, 51, 52, 53, 57, 63, 64, 70, 71, 75, 76, 77, 85, 86, 93, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 133, 148, 149, 150, 151, 152, 153, 158, 159, 161, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 206, 207, 208, 209, 211, 213, 216, 217, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 336, 346, 349, 406, 408, 409, 410, 415, 418, 420, 424, 425, 426, 427, 431, 435, 437, 441, 442, 443, 447, 450, 454, 461], "compute_uv": [179, 195], "concaten": [6, 61, 90, 154, 419, 434, 440, 463], "concept": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466, 474], "cond": [6, 185], "condit": [32, 44, 88, 89, 103, 179, 185, 189, 291, 338, 345, 351, 353, 422, 464], "condlist": 422, "confus": 137, "conj": [6, 64, 89, 111, 158, 178, 181, 349], "conjug": [6, 10, 63, 88, 89, 117, 120, 158, 178, 181, 182, 183, 184, 213, 294, 349, 462], "consecut": [85, 92, 148], "conserv": 218, "consid": [15, 21, 34, 35, 37, 38, 40, 42, 94, 122, 146, 162, 165, 182, 184, 188, 198, 210, 213, 356, 384, 458], "consist": [35, 36, 92, 106, 107, 109, 112, 113, 114, 118, 119, 121, 123, 140, 153, 197, 198, 440, 443], "constant": [9, 91, 148], "constraint": 48, "construct": [37, 38, 39, 59, 80, 83, 84, 89, 91, 104, 139, 140, 141, 142, 143, 156, 199, 219, 292, 340, 422, 444, 445, 464, 467], "constructor": 474, "consum": [89, 311], "contain": [10, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 39, 50, 51, 52, 53, 57, 58, 60, 63, 64, 67, 68, 70, 71, 74, 75, 84, 87, 89, 91, 97, 99, 100, 102, 107, 108, 109, 112, 117, 120, 122, 128, 132, 133, 134, 135, 136, 137, 138, 143, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 175, 176, 177, 182, 192, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 215, 216, 221, 222, 225, 227, 228, 231, 232, 233, 235, 237, 320, 336, 338, 339, 346, 347, 349, 356, 406, 408, 409, 410, 414, 415, 418, 420, 424, 425, 426, 427, 431, 432, 435, 436, 441, 442, 446, 450, 451, 454, 455, 456, 457, 461, 474], "content": [40, 89, 393], "context": 10, "contigu": [37, 38, 39, 40, 42, 88, 89, 93, 189, 317, 405, 412], "continu": [356, 388], "contourf": 218, "contract": [93, 94, 443], "contrast": [93, 351], "contribut": [10, 48, 152, 153], "control": [4, 44, 56, 62, 68, 89, 93, 154, 213, 291, 419, 434, 463], "conveni": [89, 333, 356], "convent": [88, 93, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 160, 197, 213, 343, 443], "convers": [44, 89, 93, 291, 467], "convert": [20, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 66, 78, 79, 80, 83, 91, 93, 94, 101, 144, 145, 146, 164, 171, 198, 210, 354, 355, 459, 460], "convolut": [10, 65, 69], "convolv": [6, 69], "coolei": 10, "coordin": [72, 141, 148, 159, 218], "copi": [6, 20, 21, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 68, 80, 81, 83, 84, 89, 91, 95, 96, 103, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 218, 219, 226, 245, 291, 304, 306, 314, 320, 323, 340, 341, 342, 344, 345, 346, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 412, 421, 429, 433, 448, 449, 450, 453, 454, 460, 465, 466, 474], "copysign": [6, 336, 346], "copyto": [6, 89, 103, 296, 345], "core": [3, 91, 93, 474], "corner": [107, 109, 113, 114], "corrcoef": [6, 73], "correct": [11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 50, 51, 52, 53, 57, 58, 62, 63, 64, 67, 70, 71, 78, 79, 87, 97, 99, 100, 102, 105, 111, 117, 119, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 221, 222, 225, 336, 337, 339, 346, 347, 349, 354, 355, 408, 410, 414, 415, 418, 420, 424, 425, 426, 427, 431, 432, 434, 436, 441, 442, 456, 457], "correctli": [18, 26, 29, 30, 72, 190, 214, 220, 227, 228, 234, 236, 338, 348, 437], "correl": [6, 478], "correspond": [6, 10, 21, 29, 30, 34, 37, 38, 39, 40, 41, 42, 44, 60, 62, 66, 78, 79, 80, 81, 83, 84, 89, 95, 96, 104, 107, 108, 109, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 156, 159, 181, 182, 198, 199, 210, 212, 213, 219, 291, 296, 300, 340, 341, 342, 354, 355, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 416, 422, 423, 435, 443, 446, 447, 448, 450, 454, 460, 461, 465, 466, 474], "correspondingli": 10, "cosh": [6, 23, 70, 427, 442], "cosin": [22, 23, 24, 25, 26, 27, 28, 70, 71, 426, 427, 441, 442], "cost": [93, 94], "costli": 94, "could": [89, 111, 117, 119, 325], "count": [14, 19, 49, 72, 86, 91, 94, 129, 139, 140, 142, 143, 148, 152, 153, 338, 348, 358, 428, 437, 458, 467, 478], "count_nonzero": [6, 338], "counterpart": [10, 111, 117, 119, 474], "cov": [6, 374], "covari": 73, "cover": [450, 454, 478], "cpu": [4, 21, 34, 37, 38, 39, 40, 42, 66, 69, 73, 80, 83, 95, 96, 98, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 198, 199, 210, 217, 219, 223, 234, 340, 341, 342, 448, 460, 465, 466], "creat": [3, 4, 21, 34, 36, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 82, 83, 84, 89, 91, 94, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 226, 291, 296, 340, 341, 342, 352, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 445, 448, 450, 451, 454, 455, 460, 465, 466, 474, 478], "creation": [91, 94, 467, 474, 478, 482], "crop": [106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "cross": [6, 69], "csingl": 9, "ct": 10, "cube": [57, 132, 431], "cubic": 94, "cumprod": [6, 89, 229, 474], "cumproduct": 6, "cumsum": [6, 85, 89, 230, 437, 447, 474], "cumul": [75, 76, 77, 85, 89, 229, 230, 297, 298, 437, 447], "cupi": [2, 467], "current": [10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 57, 58, 60, 67, 70, 71, 78, 79, 87, 89, 91, 94, 99, 100, 102, 132, 133, 134, 135, 136, 137, 140, 151, 153, 155, 156, 161, 175, 201, 202, 203, 204, 205, 215, 221, 222, 223, 225, 323, 336, 337, 346, 347, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 436, 441, 442, 456, 457], "curv": 447, "custom": 474, "customarili": 10, "cut": 186, "cutoff": 191, "cycl": [108, 122], "cyclic": 351, "cython": 4, "d": [0, 14, 19, 21, 48, 61, 62, 76, 77, 80, 81, 82, 83, 84, 88, 89, 90, 91, 104, 108, 110, 115, 122, 124, 128, 130, 131, 143, 154, 156, 160, 180, 182, 183, 189, 190, 193, 213, 218, 229, 230, 236, 304, 338, 347, 348, 351, 361, 405, 412, 419, 421, 423, 434, 437, 439, 443, 444, 445, 452, 458, 460, 463, 474], "d0": [356, 383, 385], "d1": [356, 385], "d3": 81, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 83, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 111, 117, 119, 125, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 175, 176, 177, 186, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 237, 291, 320, 333, 335, 336, 337, 339, 341, 342, 345, 346, 347, 349, 351, 352, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 440, 441, 442, 445, 448, 456, 457, 461, 463, 464, 465, 466, 467, 478], "datatyp": [91, 188], "date": 4, "datetim": 91, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [73, 89, 235, 237, 327, 334, 435, 461], "decai": 369, "decim": [33, 89, 125, 126, 321, 415, 418], "decomposit": [178, 185, 188, 191, 195, 478], "decompress": 199, "decreas": [86, 447], "decreasingli": [10, 107, 109, 113, 114], "deem": 138, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 182, 184, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 304, 336, 337, 339, 340, 341, 342, 344, 346, 347, 348, 349, 351, 354, 355, 356, 360, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 397, 400, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 474], "default_rng": 6, "defg": 94, "defici": 188, "defin": [10, 74, 91, 96, 106, 135, 136, 145, 151, 152, 153, 215, 221, 226, 342, 346, 407, 466, 474], "definit": [74, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 133, 178, 447], "deg": [18, 355], "deg2rad": [6, 354, 355, 459], "degre": [6, 18, 78, 235, 237, 354, 355, 398, 435, 459, 461, 482], "del": 482, "delet": [6, 20], "delta": [10, 235, 237, 435, 459, 461], "demonstr": [0, 4, 91], "dens": [159, 219], "densiti": 152, "depend": [4, 32, 84, 105, 111, 117, 119, 182, 186, 192, 194, 195, 198, 234, 236, 422, 464], "deprec": 6, "deprecate_with_doc": 6, "depth": [61, 62, 90, 154, 419, 434, 463], "deriv": 148, "descend": 195, "descr": 91, "describ": [75, 91, 211, 409, 478], "descript": [75, 91, 112, 114, 152, 211, 409, 474], "design": 10, "desir": [21, 34, 37, 38, 40, 42, 43, 55, 95, 96, 104, 112, 113, 114, 144, 145, 146, 156, 198, 210, 341, 342, 444, 448, 465, 466], "destin": [62, 154, 224, 351, 352, 419, 434, 440, 463], "destruct": 482, "det": [6, 193], "detail": [33, 107, 109, 113, 114, 118, 119, 121, 123, 138, 418, 450, 451, 454, 455, 458, 474], "determin": [13, 18, 22, 23, 24, 25, 26, 27, 28, 50, 52, 53, 57, 67, 70, 71, 78, 79, 87, 99, 100, 102, 134, 135, 136, 137, 140, 141, 143, 155, 175, 180, 186, 192, 193, 200, 201, 202, 203, 204, 205, 213, 215, 221, 222, 225, 337, 347, 354, 355, 408, 410, 414, 420, 422, 424, 426, 427, 431, 432, 436, 441, 442, 445, 456, 457], "devel": 4, "develop": [3, 4], "deviat": [89, 216, 232, 235, 237, 327, 356, 371, 378, 435, 461], "devic": [0, 2, 3, 21, 34, 37, 38, 39, 40, 41, 42, 44, 48, 66, 75, 80, 81, 83, 89, 93, 95, 96, 104, 105, 108, 122, 126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 211, 212, 213, 216, 219, 232, 235, 237, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 409, 433, 435, 448, 450, 454, 460, 461, 465, 466], "df": [360, 376, 398, 399], "dfden": [364, 377], "dfnum": [364, 377], "dft": [10, 106, 111, 112, 116, 117, 120], "di": [81, 82], "diag": [6, 83, 84, 93, 104, 130, 131, 156, 181, 183, 195, 422, 445], "diag_indic": [6, 82, 124], "diag_indices_from": [6, 81, 124], "diagflat": [6, 80, 84, 445], "diagon": [6, 80, 81, 82, 83, 89, 93, 104, 124, 156, 178, 182, 183, 184, 212, 332, 422, 445, 448, 449, 450, 451, 453, 454, 455, 474], "dice": 373, "dictionari": 91, "diff": [6, 77, 92, 148, 152], "differ": [3, 10, 15, 21, 34, 37, 38, 39, 40, 42, 48, 66, 75, 77, 80, 83, 85, 89, 91, 92, 95, 96, 104, 107, 108, 112, 113, 115, 118, 121, 122, 125, 130, 131, 132, 139, 140, 141, 142, 144, 145, 146, 148, 156, 162, 184, 198, 199, 210, 211, 213, 219, 296, 340, 341, 342, 345, 347, 352, 409, 436, 440, 448, 450, 454, 459, 460, 465, 466, 478], "digit": [6, 10, 125, 152], "dim": 15, "dimens": [14, 19, 20, 29, 30, 34, 45, 46, 47, 48, 61, 62, 68, 72, 73, 74, 81, 84, 85, 89, 91, 101, 113, 114, 126, 130, 131, 148, 154, 159, 160, 188, 190, 192, 211, 214, 216, 218, 219, 220, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 304, 312, 323, 335, 338, 340, 348, 352, 356, 386, 388, 389, 391, 409, 412, 423, 433, 434, 435, 437, 438, 439, 440, 444, 445, 450, 451, 454, 455, 458, 461, 474, 478], "dimension": [2, 4, 31, 65, 69, 72, 75, 81, 82, 83, 84, 85, 86, 89, 92, 93, 106, 107, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 139, 140, 142, 148, 159, 186, 192, 196, 197, 211, 214, 218, 219, 220, 227, 228, 231, 233, 235, 237, 326, 335, 340, 343, 348, 409, 429, 435, 437, 439, 444, 447, 458, 461, 462, 467], "direct": [10, 74, 85, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 130, 131, 148, 337], "directli": [91, 141, 159, 210, 338, 440], "directori": 147, "dirichlet": 6, "discard": 457, "discont": 459, "discontinu": 459, "discret": [3, 10, 65, 69, 77, 85, 92, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 148, 356, 467], "disp": 6, "dispers": 401, "displac": [89, 328], "distanc": 148, "distinct": [135, 136, 215, 221], "distinguish": 91, "distribut": [3, 4, 210, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 478], "divid": [6, 90, 134, 137, 222, 410, 456], "divis": [87, 134, 137, 222, 347, 410, 456, 457], "divisor": [235, 237, 435, 461], "divmod": [6, 474], "dlpack": 138, "dmlc": 138, "dn": [356, 383, 385], "do": [3, 4, 91, 212, 358, 417, 447], "docstr": 474, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 474], "doe": [20, 21, 56, 93, 103, 105, 120, 135, 136, 138, 192, 226, 229, 230, 345, 439], "domain": [10, 111, 116], "done": [3, 44, 89, 93, 197, 291, 458, 459], "dot": [6, 89, 93, 94, 160, 178, 183, 185, 189, 191, 192, 194, 195, 196, 197, 213, 443, 462], "doubl": [9, 369, 443], "down": 131, "dp": [87, 180, 182, 193, 194, 347, 412, 413, 436, 456], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 227, 228, 231, 233, 234, 291, 296, 340, 341, 342, 350, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "dpnp": [0, 2, 3, 4, 10, 467, 474, 478, 479, 482], "dpnp_arrai": [21, 34, 37, 38, 39, 40, 42, 44, 66, 80, 81, 83, 95, 96, 104, 108, 122, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 159, 198, 199, 210, 212, 219, 238, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466, 467], "dpnp_iface_arraycr": [219, 340], "draw": [356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "drawn": [356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 381, 382, 384, 387, 390, 396, 397, 398, 399, 400, 401, 402, 403, 404, 422], "drill": [358, 375], "driver": 2, "drop": [3, 91], "dsplit": [6, 62, 90], "dst": 68, "dstack": [6, 61, 62, 154, 419, 434, 463], "dt": [91, 447], "dt2": 91, "dtype": [0, 9, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 52, 53, 56, 57, 58, 62, 63, 64, 67, 70, 71, 73, 75, 76, 77, 78, 79, 81, 87, 89, 93, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 175, 176, 177, 189, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 297, 298, 309, 315, 324, 327, 329, 332, 334, 336, 337, 339, 341, 342, 346, 347, 348, 349, 354, 355, 356, 378, 384, 400, 408, 409, 410, 413, 414, 415, 418, 419, 420, 424, 425, 426, 427, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 445, 448, 449, 453, 456, 457, 461, 463, 465, 466, 474], "due": [120, 482], "dump": 6, "dx": [148, 447], "dy": 148, "dz": 148, "e": [9, 10, 23, 25, 75, 76, 84, 91, 95, 96, 101, 104, 107, 111, 112, 113, 114, 117, 119, 120, 132, 140, 144, 145, 148, 156, 175, 181, 193, 196, 200, 341, 342, 356, 407, 411, 438, 448, 465, 466], "ea": 94, "each": [0, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 67, 70, 71, 76, 77, 81, 84, 86, 87, 89, 91, 94, 97, 99, 100, 102, 107, 109, 111, 113, 114, 117, 118, 119, 121, 123, 130, 131, 132, 133, 134, 137, 141, 148, 149, 150, 152, 153, 158, 161, 165, 166, 167, 175, 176, 177, 181, 182, 183, 184, 186, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 222, 224, 225, 226, 321, 336, 338, 339, 346, 347, 349, 352, 358, 375, 406, 408, 410, 411, 414, 415, 416, 418, 420, 424, 425, 426, 427, 431, 432, 434, 436, 440, 441, 442, 444, 447, 450, 451, 454, 455, 456, 457, 458, 474], "easier": 439, "easiest": 4, "easili": [0, 153], "edg": [60, 86, 152, 153], "edge_ord": 148, "ediff1d": [6, 85, 148], "effect": [94, 132, 135, 136, 215, 221, 347, 459], "effici": [10, 106, 120, 140, 188, 191, 195], "efgh": 94, "eig": [6, 182, 183, 184], "eigenvalu": [181, 182, 183, 184, 478], "eigenvector": [181, 182, 183, 184], "eigh": [6, 181, 183, 184], "eigval": [6, 181, 182, 184], "eigvalsh": [6, 181, 182, 183], "einstein": [88, 93, 94, 160, 197, 213, 343, 443], "einsum": [6, 88, 94, 160, 197, 213, 343, 443], "einsum_path": [6, 93], "either": [35, 36, 42, 48, 75, 84, 91, 107, 109, 111, 113, 114, 117, 119, 121, 123, 124, 148, 160, 182, 184, 190, 192, 211, 227, 228, 231, 233, 234, 236, 409, 421, 422, 440, 447], "element": [4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 39, 48, 49, 50, 51, 52, 53, 57, 58, 60, 63, 64, 67, 68, 70, 71, 75, 76, 77, 82, 84, 85, 86, 87, 89, 91, 92, 94, 97, 99, 100, 102, 103, 104, 105, 107, 109, 113, 114, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 183, 187, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 286, 287, 294, 295, 297, 298, 300, 301, 304, 306, 307, 309, 311, 313, 314, 319, 320, 321, 322, 324, 327, 328, 331, 334, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 353, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 449, 451, 453, 455, 456, 457, 458, 459, 461, 464, 474, 478, 482], "element_count": [89, 324, 428], "ellipsi": 93, "els": [0, 193, 243], "elsewher": [104, 156, 448, 464], "empti": [4, 6, 34, 89, 96, 107, 109, 113, 114, 118, 119, 121, 123, 140, 144, 145, 186, 301, 341, 342, 345, 465, 466], "empty_lik": [6, 34, 95, 145, 342, 466], "enabl": [124, 188, 191, 195], "encount": [229, 230, 231, 233, 422], "end": [20, 21, 84, 91, 92, 94, 112, 146, 198, 210], "end_tim": 0, "endian": 91, "endpoint": [21, 146, 198, 210, 447], "engin": 392, "enough": 152, "entir": [48, 75, 111, 152, 153, 211, 216, 231, 232, 233, 235, 237, 409, 435, 461], "entri": [89, 91, 95, 103, 111, 117, 119, 124, 129, 130, 131, 326, 433], "enumer": 138, "env": 4, "environ": 4, "ep": [125, 188, 337, 407], "epsilon": [188, 407], "epsneg": 125, "equal": [6, 14, 15, 19, 35, 36, 48, 62, 69, 73, 77, 89, 104, 146, 148, 149, 150, 152, 153, 154, 162, 164, 171, 173, 175, 176, 177, 187, 191, 192, 197, 198, 210, 222, 314, 339, 356, 366, 400, 410, 414, 415, 418, 419, 424, 433, 434, 448, 450, 454, 463], "equal_nan": [15, 35, 162, 458], "equat": [186, 194, 196, 197, 478], "equiv": [44, 56, 62, 68, 89, 93, 154, 187, 213, 291, 419, 434, 463], "equival": [10, 13, 14, 16, 17, 19, 29, 30, 31, 33, 36, 48, 66, 74, 75, 78, 79, 87, 88, 89, 90, 94, 101, 103, 128, 135, 136, 137, 196, 211, 222, 225, 245, 286, 287, 299, 312, 320, 323, 333, 335, 338, 343, 346, 354, 355, 356, 384, 409, 410, 412, 418, 423, 429, 436, 437, 439, 443, 446, 456, 458, 474, 482], "error": [75, 93, 98, 111, 116, 181, 211, 409, 433, 467, 474], "essenti": 4, "estim": [73, 153, 358, 375, 447], "et": 10, "etc": [10, 34, 38, 91, 107, 109, 113, 114, 118, 119, 121, 123, 375], "euclidean": 186, "euler_gamma": 9, "evalu": [14, 15, 19, 89, 93, 94, 97, 164, 171, 197, 218, 286, 287, 343, 422, 443, 474], "even": [10, 91, 108, 110, 111, 112, 115, 116, 117, 119, 120, 122, 164, 171, 415, 418], "evenli": [21, 146, 198, 210, 415, 447], "event": 205, "everi": [119, 352, 440], "everywher": 117, "exact": [103, 189, 345], "exactli": [10, 43, 143, 356, 384, 422], "examin": 186, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 299, 301, 304, 305, 306, 312, 314, 318, 320, 323, 324, 325, 328, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 482], "exce": 205, "except": [4, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 66, 67, 70, 71, 78, 79, 85, 86, 87, 88, 89, 95, 96, 97, 99, 100, 102, 104, 118, 119, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 161, 165, 166, 167, 175, 176, 177, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 220, 221, 222, 225, 231, 232, 233, 234, 235, 236, 237, 291, 336, 337, 339, 341, 342, 346, 347, 348, 349, 354, 355, 408, 410, 411, 412, 414, 415, 420, 424, 425, 426, 427, 429, 431, 432, 435, 436, 437, 441, 442, 456, 457, 461, 465, 466], "exclud": [11, 12, 20, 198, 356, 400], "exclus": [356, 384], "execut": [3, 4, 37, 38, 39, 69, 73, 98, 141, 217, 223, 234, 359, 361, 362, 372, 377, 393, 482], "executor": 0, "exist": [10, 61, 62, 90, 91, 101, 138, 154, 412, 419, 434, 463, 478], "exp": [6, 10, 100, 102, 106, 193, 202, 204, 211], "exp2": [6, 99, 102], "expand": [85, 101], "expand_dim": [6, 29, 30], "expect": [4, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 28, 33, 50, 51, 52, 53, 57, 58, 63, 64, 67, 70, 71, 72, 75, 76, 77, 78, 79, 87, 88, 91, 97, 99, 100, 102, 105, 117, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 162, 165, 166, 167, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 220, 221, 222, 225, 229, 230, 232, 234, 235, 236, 237, 336, 337, 339, 346, 347, 348, 349, 354, 355, 406, 408, 409, 410, 414, 415, 418, 420, 424, 425, 426, 427, 431, 432, 435, 436, 437, 441, 442, 456, 457, 461, 464], "explain": [109, 114, 119, 123, 474], "explan": 91, "explicit": 93, "explicitli": [84, 107, 109, 113, 114, 118, 119, 121, 123], "exploit": [10, 120], "explor": [94, 358, 375], "expm1": [6, 99, 100, 202], "expon": [10, 99, 100, 102, 132, 187, 204, 205, 211, 347, 382, 478], "exponenti": [6, 10, 94, 204, 205, 211, 369, 395], "expos": [139, 474], "express": [10, 27, 93, 94, 199, 482], "extend": [10, 91, 174, 474], "extens": [0, 1, 3, 4, 9, 147, 199, 467], "extobj": 213, "extra": [91, 117, 143], "extract": [6, 80, 83, 84, 93, 104, 128, 156, 159, 212, 345, 422, 439, 445], "extrema": 478, "ey": [6, 63, 64, 72, 89, 113, 114, 135, 136, 156, 160, 174, 185, 187, 188, 196, 197, 209, 215, 221, 423, 445], "f": [0, 6, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 91, 93, 95, 96, 97, 99, 100, 102, 104, 105, 108, 120, 122, 126, 132, 133, 134, 135, 136, 137, 144, 145, 148, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 187, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 221, 222, 225, 291, 296, 304, 336, 337, 339, 341, 342, 346, 347, 349, 354, 355, 377, 405, 408, 410, 412, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 452, 456, 457, 464, 465, 466], "f0": 91, "f1": 91, "f2": 91, "f4": 56, "f8": [56, 91], "f_contigu": [40, 42], "f_k": 10, "fab": [6, 11, 12], "fact": 183, "factor": [10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 178, 192], "fail": [89, 323, 358], "fallback": [181, 183, 359, 361, 362, 372, 377, 393], "fals": [14, 15, 16, 17, 18, 19, 29, 30, 34, 35, 36, 38, 40, 42, 44, 48, 50, 51, 53, 54, 55, 56, 66, 72, 73, 75, 77, 86, 89, 91, 93, 94, 96, 97, 103, 124, 138, 141, 145, 146, 149, 150, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 188, 190, 191, 195, 198, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 220, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 243, 286, 287, 288, 289, 291, 308, 309, 310, 315, 327, 329, 334, 338, 339, 342, 348, 350, 409, 412, 422, 425, 435, 437, 458, 460, 461, 464, 466, 474], "famili": 10, "fanci": 439, "fashion": [205, 474], "fast": [10, 106, 107, 109, 113, 114, 119, 120, 123], "fastcopyandtranspos": 6, "faster": [10, 135, 136], "fastest": [89, 304, 405, 412], "fb": [94, 452], "featur": 91, "few": 124, "fft": [6, 467, 478], "fft2": [6, 106, 109, 113], "fftfreq": [6, 10, 106, 110, 115, 122], "fftn": [6, 106, 107, 114, 120, 123], "fftshift": [6, 10, 107, 109, 114, 115], "fh": 140, "field": [91, 218], "field1": 91, "file": [139, 140, 142, 143, 147, 199], "filenam": [140, 199], "fill": [6, 20, 34, 89, 95, 96, 124, 144, 145, 152, 153, 218, 226, 296, 341, 342, 448, 465, 466], "fill_diagon": 6, "fill_valu": [144, 145], "filt": 452, "filter": [10, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "final": [4, 10, 119, 120, 121, 123, 146, 210], "find": [32, 49, 86, 89, 105, 152, 188, 191, 195, 322, 337, 338, 411, 421, 429, 458, 478], "find_common_typ": 6, "fine": 4, "finfo": [337, 407], "finfo_object": 125, "finit": [39, 165, 166, 167, 168, 169, 226], "first": [13, 14, 15, 19, 27, 29, 30, 31, 35, 36, 48, 50, 52, 53, 61, 62, 67, 74, 75, 84, 87, 88, 89, 91, 94, 97, 100, 107, 109, 111, 113, 114, 129, 132, 134, 135, 136, 137, 148, 149, 150, 152, 153, 155, 160, 162, 173, 174, 175, 176, 177, 189, 196, 199, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 221, 222, 225, 227, 228, 304, 339, 343, 345, 347, 348, 405, 410, 412, 414, 416, 419, 421, 422, 429, 430, 432, 436, 437, 438, 440, 443, 445, 456, 458, 462, 463], "fit": [186, 411], "fix": [6, 33, 58, 84, 91, 133, 351, 415, 418, 457], "flag": [40, 42, 89, 91, 296], "flanneri": 10, "flat": [29, 30, 89, 92, 127, 304, 411], "flatnonzero": [6, 338], "flatten": [6, 20, 29, 30, 31, 62, 72, 76, 77, 80, 83, 84, 89, 92, 124, 128, 152, 153, 214, 220, 227, 228, 229, 230, 234, 236, 303, 317, 325, 338, 343, 352, 405, 411, 416, 429, 439, 440, 445, 458, 462], "flexibl": [88, 91, 140, 189], "flip": [6, 51, 84, 124, 130, 131, 161, 358], "fliplr": [6, 84, 124, 129, 131], "flipud": [6, 84, 124, 129, 130], "float": [11, 12, 18, 21, 27, 37, 38, 41, 48, 56, 67, 75, 77, 91, 95, 96, 100, 104, 105, 108, 122, 125, 126, 132, 139, 140, 141, 142, 143, 144, 145, 148, 152, 153, 156, 158, 186, 187, 188, 190, 191, 198, 199, 204, 205, 210, 211, 214, 216, 220, 226, 232, 235, 237, 337, 341, 342, 347, 356, 360, 385, 386, 388, 389, 391, 394, 395, 397, 400, 406, 407, 408, 409, 420, 435, 448, 459, 461, 465, 466, 474, 478], "float16": [9, 132], "float32": [0, 9, 10, 39, 41, 44, 56, 76, 89, 91, 93, 132, 291, 337, 356, 378, 383, 385, 386, 388, 389, 391, 397, 400, 413], "float64": [0, 9, 10, 41, 44, 48, 56, 77, 89, 91, 93, 291, 356, 357, 363, 364, 365, 367, 369, 370, 371, 378, 379, 382, 383, 385, 386, 388, 389, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 413], "float_pow": [6, 347], "floor": [6, 33, 58, 126, 134, 222, 410, 415, 418, 457], "floor_divid": [6, 222, 410], "flop": 94, "flush": 140, "fmax": [6, 136, 214, 215, 221, 231, 347], "fmin": [6, 135, 215, 220, 221, 233, 347], "fmod": [6, 222, 347, 410], "fn": 141, "fname": 199, "follow": [4, 10, 48, 91, 101, 117, 125, 138, 157, 182, 184, 191, 443, 474, 478], "forc": [91, 93], "forg": 4, "form": [10, 20, 34, 37, 38, 39, 40, 41, 42, 61, 66, 80, 83, 89, 90, 93, 94, 113, 114, 117, 144, 145, 146, 164, 171, 198, 210, 333, 419, 460, 463], "format": [91, 138, 140, 143, 478], "format_float_posit": 6, "format_float_scientif": 6, "former": [352, 440], "forth": 443, "fortran": [42, 44, 89, 291, 304, 405, 412], "forward": [10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 148], "found": [4, 421, 474], "four": [356, 385], "fourier": [10, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 467], "fourth": 107, "frac": [10, 447], "fraction": [223, 457], "free": [89, 320], "freedom": [235, 237, 398, 435, 461], "freq": [108, 110, 115, 122], "freq_spectrum": 111, "frequenc": [10, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122], "freshli": [168, 169], "frexp": 6, "fro": [179, 190], "frobeniu": 179, "from": [3, 10, 14, 19, 20, 21, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 54, 56, 59, 62, 66, 68, 75, 78, 79, 80, 81, 83, 84, 89, 90, 91, 93, 95, 96, 100, 103, 104, 108, 112, 121, 122, 123, 129, 132, 138, 139, 140, 141, 142, 143, 144, 145, 148, 152, 154, 156, 159, 181, 183, 184, 188, 189, 199, 211, 212, 218, 219, 292, 296, 326, 331, 340, 341, 342, 345, 348, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 412, 413, 419, 421, 422, 432, 433, 434, 437, 439, 440, 445, 448, 450, 452, 454, 455, 458, 459, 460, 463, 464, 465, 466, 478], "from_": 56, "from_dlpack": 6, "frombuff": [6, 140, 142, 143, 199], "fromfil": [6, 139, 142, 143], "fromfunct": [6, 37, 38, 39], "fromit": [6, 37, 38, 39, 139, 140, 143], "frompyfunc": 6, "fromregex": [6, 199], "fromstr": [6, 139, 140, 142, 199], "front": 452, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466], "full_lik": [6, 34, 96, 144, 342, 466], "full_matric": 195, "fulli": 91, "function": [0, 2, 3, 11, 12, 16, 17, 21, 29, 30, 33, 34, 37, 38, 39, 40, 42, 43, 66, 69, 73, 75, 78, 79, 84, 87, 89, 93, 95, 96, 98, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 119, 120, 123, 124, 132, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 156, 181, 183, 189, 199, 202, 204, 205, 211, 212, 217, 218, 222, 223, 234, 286, 287, 296, 299, 320, 323, 333, 341, 342, 347, 352, 354, 355, 356, 359, 361, 362, 372, 377, 393, 409, 410, 418, 419, 424, 435, 439, 440, 444, 450, 451, 454, 455, 456, 461, 463, 464, 465, 466, 467, 474, 478], "fundament": [10, 91], "further": [450, 454], "futur": [91, 153], "fweight": 73, "g": [4, 10, 91, 95, 96, 104, 144, 145, 156, 341, 342, 356, 448, 465, 466, 482], "gamma": [6, 396], "gauss": 10, "gaussian": [356, 378, 402], "gc": 94, "gcd": 6, "gen": 93, "gender": 91, "gener": [10, 31, 48, 91, 112, 117, 120, 123, 146, 160, 181, 182, 183, 184, 191, 192, 199, 210, 356, 358, 361, 392, 447, 450, 454, 460, 474, 478], "genfromtxt": [6, 199], "geometr": [6, 146, 198], "geomspac": [6, 198, 210], "get": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 82, 83, 89, 95, 96, 104, 108, 111, 117, 119, 122, 132, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 323, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 440, 448, 450, 451, 454, 455, 460, 465, 466, 474], "get_arrai": 89, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 356], "get_sycl_devic": 356, "get_sycl_queu": 356, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 91], "getter": [89, 323], "gf8378b0ee7b": 6, "gid": 153, "github": 138, "give": [10, 83, 89, 132, 153, 333, 412, 423, 428, 458], "given": [14, 15, 19, 20, 21, 29, 30, 33, 34, 35, 37, 38, 40, 42, 44, 48, 61, 66, 72, 73, 76, 77, 85, 88, 89, 90, 91, 92, 94, 95, 96, 103, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 135, 136, 144, 145, 146, 148, 152, 153, 162, 185, 198, 210, 212, 214, 215, 218, 220, 221, 229, 230, 231, 233, 234, 235, 236, 237, 288, 289, 291, 297, 298, 310, 315, 316, 321, 324, 327, 329, 334, 338, 341, 342, 345, 348, 350, 351, 356, 361, 383, 400, 409, 411, 415, 416, 417, 419, 421, 422, 428, 435, 437, 439, 443, 444, 447, 448, 458, 461, 463, 465, 466, 474], "global": 0, "good": 368, "gpu": [0, 3, 4, 21, 34, 37, 38, 39, 40, 42, 66, 80, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 198, 199, 210, 219, 340, 341, 342, 448, 460, 465, 466], "grade": 91, "gradient": [6, 85, 92, 186], "graphic": 4, "great": 10, "greater": [6, 89, 97, 134, 150, 175, 176, 177, 188, 192, 314, 339, 414, 422, 424, 433, 459], "greater_equ": [6, 97, 149, 176, 177, 339], "greatest": 134, "greedi": [93, 94], "grid": [37, 38, 39, 141, 159, 218, 219, 340], "group": [32, 338], "guarante": [91, 412], "guid": [2, 3], "gumbel": 6, "gz": 199, "h": [147, 178, 192, 218], "ha": [4, 10, 11, 12, 14, 18, 19, 20, 29, 30, 31, 48, 75, 76, 77, 86, 91, 97, 101, 111, 116, 117, 141, 148, 149, 150, 154, 158, 163, 164, 170, 171, 176, 177, 183, 193, 195, 211, 216, 222, 229, 230, 232, 234, 235, 236, 237, 339, 348, 406, 407, 408, 409, 410, 411, 417, 420, 422, 433, 434, 435, 437, 438, 439, 444, 445, 461, 474], "had": [352, 440], "hadamard": 94, "half": [23, 107, 109, 110, 111, 113, 114, 198, 356, 386, 388, 389, 391, 400, 438], "ham": 6, "han": 6, "hand": [74, 197], "handl": [21, 91, 105, 199, 338, 439, 440, 478], "happen": [44, 48, 89, 291, 358, 447], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 91, "have": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 61, 62, 63, 64, 67, 70, 71, 74, 75, 76, 77, 78, 79, 87, 88, 90, 91, 97, 99, 100, 102, 105, 113, 114, 123, 125, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 154, 155, 158, 161, 162, 165, 166, 167, 168, 169, 175, 176, 177, 186, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 216, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 336, 337, 339, 345, 346, 347, 348, 349, 354, 355, 375, 406, 408, 409, 410, 411, 414, 415, 418, 419, 420, 424, 425, 426, 427, 431, 432, 434, 435, 436, 437, 441, 442, 444, 456, 457, 459, 461, 463, 474], "hd": 94, "header": 147, "heavisid": 6, "hello": 91, "help": 482, "helper": 478, "henc": [101, 148], "here": [6, 31, 91, 93, 111, 116, 117, 429, 450, 454], "hermit": [182, 184], "hermitian": [111, 116, 117, 119, 120, 178, 181, 182, 183, 184, 188, 191, 195, 478], "hfft": [6, 10, 116], "hierarchi": 173, "high": [117, 356, 384, 387, 400], "higher": [93, 462], "highest": 106, "highli": 140, "hist": [152, 394], "hist_0": 153, "hist_1": 153, "histogram": [6, 86, 153, 421, 478], "histogram2d": 6, "histogram_bin_edg": [6, 152], "histogramdd": [6, 152], "hold": [60, 76, 77, 152, 190, 229, 230, 234, 236, 445], "homogen": 91, "horizont": [61, 62, 84, 90, 124, 129, 154, 419, 434, 463], "host": [3, 4, 21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 448, 450, 454, 460, 465, 466], "household": 192, "how": [0, 4, 91, 117, 120, 148, 351, 439, 440, 450, 454], "howev": [89, 325, 439], "hsplit": [6, 62], "hstack": [6, 61, 62, 90, 419, 434, 463], "http": [4, 138], "hyperbol": [22, 23, 24, 25, 26, 27, 28, 70, 71, 426, 427, 441, 442, 478], "hypergeometr": 6, "hypot": [6, 409], "hypotenus": [155, 409], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 291, 296, 314, 320, 323, 325, 328, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 474, 482], "i0": 6, "i1": [89, 91, 328], "i2": [89, 91, 328], "i3": [89, 328], "i4": [56, 91], "i7": 93, "i8": [56, 91], "icpx": 4, "icx": 4, "id": [14, 19, 89, 306], "ident": [3, 6, 14, 19, 39, 75, 91, 104, 115, 124, 194, 395], "identifi": 91, "ieee": 125, "ifft": [6, 106, 113, 114, 116, 117, 122], "ifft2": [6, 107, 112, 114], "ifftn": [6, 109, 112, 113], "ifftshift": [6, 10, 110, 114], "ignor": [29, 30, 74, 91, 135, 136, 143, 152, 153, 214, 215, 216, 220, 221, 227, 228, 231, 232, 233, 235, 237, 435, 461], "ihfft": [6, 111], "ii": [93, 379], "iinfo": 373, "iinfo_object": 157, "ij": [93, 94, 218], "ijk": 93, "il": 94, "il1": 450, "il2": 450, "illustr": 183, "ilm": 93, "imag": [6, 10, 18, 35, 89, 406, 407, 474], "imaginari": [18, 35, 89, 117, 135, 136, 158, 163, 164, 170, 171, 181, 182, 184, 187, 215, 221, 226, 305, 406, 407, 430, 458], "implement": [3, 6, 41, 106, 138], "impli": 91, "implicit": 93, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 299, 304, 305, 312, 314, 318, 323, 324, 325, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 381, 390, 394, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "improv": 93, "in1d": 6, "in_array1": 98, "includ": [4, 10, 14, 19, 20, 21, 34, 37, 38, 39, 40, 41, 42, 48, 66, 75, 80, 83, 86, 93, 94, 105, 144, 145, 146, 147, 152, 153, 164, 171, 191, 198, 210, 211, 216, 231, 232, 233, 235, 237, 356, 400, 409, 435, 460, 461], "include_initi": 75, "inclus": [356, 384, 387, 422], "increas": [86, 91, 101, 112, 117, 152, 460], "ind": [31, 86, 196, 351, 352, 450, 451, 454, 455], "index": [4, 20, 29, 30, 31, 32, 59, 89, 91, 94, 104, 107, 113, 121, 128, 138, 159, 218, 227, 228, 292, 304, 328, 338, 351, 352, 405, 412, 421, 422, 439, 440, 450, 454, 458, 464, 467, 478], "index_arrai": [29, 30, 31], "indic": [6, 10, 29, 30, 31, 32, 75, 81, 82, 86, 89, 91, 93, 94, 103, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 128, 138, 141, 152, 196, 197, 212, 213, 219, 227, 228, 288, 289, 290, 313, 316, 322, 331, 338, 351, 352, 412, 421, 424, 425, 429, 439, 440, 446, 450, 451, 454, 455, 458, 464], "indirect": [31, 429], "individu": 366, "inequ": 339, "inexact": [132, 226, 234, 236], "inf": [9, 15, 23, 27, 37, 38, 39, 67, 87, 162, 165, 166, 167, 168, 169, 179, 190, 200, 201, 203, 215, 221, 226, 227, 228, 231, 233, 236, 349, 431, 456], "infer": [39, 75, 211, 409, 412], "infin": [14, 19, 39, 134, 165, 166, 167, 168, 169, 222, 226, 231, 233, 236, 410, 457, 478], "infinit": 179, "info": 6, "inform": [0, 40, 42, 89, 91, 111, 117, 119, 125, 302, 474, 478], "initi": [16, 17, 75, 89, 95, 143, 214, 220, 231, 233, 234, 236, 308, 310, 315, 329, 348, 356, 437], "inner": [6, 74, 93, 94, 189, 213, 343], "input": [10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 188, 190, 192, 193, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 304, 312, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 378, 384, 400, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 456, 457, 458, 459, 460, 461, 462, 465, 466], "insert": [6, 20, 29, 30, 84, 86, 89, 93, 101, 146, 152, 198, 210, 227, 228, 231, 233, 322, 352, 421, 422, 478], "instal": 2, "instanc": [3, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 111, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 156, 159, 198, 199, 210, 212, 213, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "instead": [32, 44, 84, 88, 89, 93, 101, 133, 146, 152, 153, 159, 189, 198, 205, 210, 214, 220, 291, 338, 348, 437, 474], "instruct": 4, "int": [9, 14, 19, 20, 21, 29, 30, 31, 33, 41, 48, 55, 62, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 89, 91, 95, 96, 97, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 156, 157, 159, 186, 187, 190, 196, 197, 198, 210, 211, 212, 214, 216, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 312, 324, 333, 335, 341, 342, 344, 348, 351, 352, 356, 384, 387, 409, 411, 412, 416, 417, 418, 428, 429, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 458, 459, 460, 461, 465, 466, 474], "int16": 91, "int32": [0, 9, 41, 56, 91, 95, 96, 104, 139, 142, 144, 145, 156, 199, 234, 236, 341, 342, 356, 358, 366, 368, 373, 375, 381, 384, 400, 413, 437, 448, 465, 466], "int64": [0, 9, 56, 91, 234, 236, 413], "int8": [91, 348], "int_": 9, "int_0": 447, "int_t": 447, "intc": 9, "integ": [21, 33, 48, 49, 50, 51, 52, 53, 55, 58, 75, 76, 77, 86, 89, 91, 126, 129, 132, 133, 134, 138, 152, 157, 161, 175, 187, 190, 196, 211, 214, 216, 220, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 325, 333, 347, 348, 351, 356, 384, 387, 392, 409, 410, 411, 412, 414, 415, 416, 418, 421, 422, 423, 432, 435, 437, 439, 443, 445, 457, 458, 459, 461, 474], "integer_lik": 443, "integr": [3, 4, 48, 75, 77, 132, 152, 211, 216, 223, 232, 235, 237, 347, 409, 435, 437, 447, 461], "intel": [3, 93], "intend": [89, 333], "intent": 132, "interchang": [89, 224, 330, 438], "interfac": [0, 139], "interior": 148, "intermedi": [76, 93, 94], "intern": 356, "interp": 6, "interpol": 117, "interpret": [2, 37, 38, 39, 43, 55, 66, 91, 111, 117, 119, 139, 212, 338, 351, 474], "intersect1d": 6, "interv": [10, 21, 22, 23, 24, 26, 86, 101, 146, 198, 210, 356, 384, 386, 388, 389, 391, 399, 400, 438], "intp": [234, 236], "intrins": 474, "introduc": 416, "introduct": 10, "introselect": [89, 314, 344], "inv": [6, 179, 191], "invers": [10, 18, 22, 23, 24, 25, 26, 27, 28, 70, 71, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 185, 191, 196, 197, 202, 402, 426, 427, 441, 442, 458], "invert": [6, 51, 185, 191, 196], "invok": 474, "involv": 196, "io": [138, 199], "irfft": [6, 108, 111, 116, 118, 119, 120, 122], "irfft2": [6, 117, 119, 121], "irfftn": [6, 117, 118, 123], "irrespect": 31, "is_busdai": 6, "isalignedstruct": 91, "isbuiltin": 91, "isclos": [6, 15], "iscomplex": [6, 164, 170], "iscomplexobj": [6, 163, 171], "isfinit": [6, 166, 167, 168, 169, 226, 231, 233, 236], "isfortran": 6, "isin": 6, "isinf": [6, 165, 167, 168, 169, 226], "isn": 91, "isnan": [6, 165, 166, 168, 169, 226, 229, 230, 231, 233, 234, 236], "isnat": [6, 167], "isneginf": [6, 165, 166, 167, 169, 226], "isposinf": [6, 165, 166, 167, 168, 226], "isreal": [6, 163, 171], "isrealobj": [6, 164, 170], "isscalar": 6, "issctyp": 6, "issu": 113, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 32, 89, 139, 140, 142, 458, 467], "item_dtyp": 91, "item_hasobject": 91, "item_is_point": 91, "items": [89, 91], "itemset": 6, "iter": [6, 37, 38, 39, 89, 94, 127, 139, 140, 142, 143, 303, 304, 352, 440, 478], "its": [4, 6, 10, 11, 12, 14, 19, 31, 48, 80, 89, 111, 117, 119, 125, 152, 153, 156, 181, 182, 183, 184, 189, 191, 197, 216, 232, 235, 237, 333, 393, 405, 409, 412, 429, 435, 446, 447, 448, 461, 474], "itself": [44, 89, 91, 226, 291, 474], "iu": 212, "iu1": [212, 454], "iu2": 454, "ix_": 6, "j": [63, 64, 89, 93, 107, 109, 111, 112, 113, 114, 116, 117, 120, 121, 123, 132, 141, 158, 159, 174, 178, 181, 182, 203, 213, 226, 333, 343, 349, 352, 406, 430, 432, 440, 443], "j1": 174, "jame": 10, "ji": 93, "jil": 93, "jk": [93, 94], "jl": 94, "john": 10, "join": [61, 62, 90, 154, 419, 434, 463, 478], "jump": [78, 354], "just": [61, 84, 91, 107, 113, 118, 120, 121], "k": [10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 80, 83, 87, 89, 93, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 165, 166, 167, 174, 175, 176, 177, 186, 192, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 221, 222, 225, 245, 291, 296, 336, 337, 339, 346, 347, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 443, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 464, 482], "kaiser": 6, "kappa": 401, "keep": [43, 44, 89, 291, 458], "keepdim": [14, 16, 17, 19, 29, 30, 48, 72, 89, 190, 211, 214, 216, 217, 220, 227, 228, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 308, 309, 310, 315, 327, 329, 334, 348, 350, 352, 409, 435, 437, 440, 461], "kei": [3, 31, 89, 91, 127, 250, 281, 429], "key2": 91, "keyword": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 57, 58, 60, 66, 67, 70, 71, 74, 78, 79, 80, 81, 83, 87, 89, 95, 96, 99, 100, 102, 104, 108, 122, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 151, 155, 156, 159, 161, 175, 199, 201, 202, 203, 204, 205, 212, 213, 215, 219, 221, 222, 223, 225, 226, 296, 336, 337, 340, 341, 342, 346, 347, 349, 354, 355, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 408, 410, 414, 415, 420, 424, 425, 426, 427, 436, 441, 442, 448, 450, 454, 456, 457, 460, 464, 465, 466, 474], "ki": 93, "kind": [31, 44, 56, 62, 68, 75, 89, 91, 93, 125, 154, 189, 211, 213, 290, 291, 314, 325, 344, 409, 419, 429, 434, 463, 478], "kl": [10, 93, 94], "known": [10, 140, 394], "kron": 6, "kroneck": 174, "kth": [89, 314, 344], "kwarg": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 57, 58, 60, 63, 64, 67, 70, 71, 78, 79, 87, 89, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 141, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 221, 222, 223, 225, 275, 293, 320, 336, 337, 339, 346, 347, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 456, 457], "l": [10, 91, 178, 182, 184], "la": [181, 183, 184], "label": 93, "laid": 42, "lam": 381, "lambda": 141, "lapack": [181, 183], "laplac": 6, "laptop": 4, "larg": [10, 78, 91, 152, 191, 226, 354, 459, 482], "larger": [93, 106, 107, 109, 112, 113, 114, 116, 118, 119, 120, 121, 123, 125, 445, 459, 474], "largest": [10, 94, 120, 125, 133, 157, 186, 222, 226, 410], "largest_singular_valu": 191, "last": [14, 19, 20, 31, 74, 84, 85, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 129, 146, 148, 160, 189, 198, 210, 213, 304, 348, 405, 412, 416, 421, 429, 433, 437, 443, 459], "later": 482, "latest": [4, 138], "latter": [135, 136, 215, 221, 352, 440], "layout": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 42, 43, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 93, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 144, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 221, 222, 225, 296, 302, 336, 337, 339, 341, 342, 346, 347, 349, 354, 355, 408, 410, 412, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 456, 457, 464, 465, 466, 467], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [112, 113, 114, 229, 230, 452], "learn": [3, 4, 205], "least": [45, 46, 47, 48, 82, 90, 91, 94, 101, 124, 130, 135, 136, 140, 164, 186, 192, 215, 221, 419, 463], "left": [10, 29, 30, 33, 72, 84, 86, 89, 130, 131, 175, 183, 190, 214, 220, 227, 228, 234, 236, 322, 348, 399, 414, 418, 421, 437, 447, 460], "left_shift": [6, 414], "leg": [155, 409], "legaci": 392, "len": [89, 91, 109, 110, 111, 114, 116, 117, 118, 119, 123, 159, 186, 214, 218, 219, 220, 267, 423, 460], "length": [21, 48, 76, 77, 85, 97, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 143, 146, 148, 152, 154, 181, 195, 210, 214, 218, 220, 229, 230, 352, 359, 412, 413, 419, 421, 422, 423, 433, 440, 443, 444, 463], "less": [6, 76, 77, 97, 149, 150, 152, 153, 177, 186, 191, 229, 230, 234, 236, 339, 348, 422, 424, 437, 445], "less_equ": [6, 97, 149, 150, 176, 339], "let": 358, "level": [467, 474], "level_zero": [21, 34, 37, 38, 39, 40, 42, 66, 80, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 198, 199, 210, 219, 340, 341, 342, 448, 460, 465, 466], "lexicograph": 458, "lexsort": [6, 31, 429], "li": [416, 417], "librari": [3, 4, 474], "light": 10, "like": [21, 34, 37, 38, 40, 42, 44, 45, 46, 47, 61, 89, 90, 93, 95, 104, 119, 139, 140, 141, 142, 143, 144, 146, 156, 198, 199, 210, 212, 291, 304, 312, 335, 341, 352, 356, 400, 412, 440, 465, 478], "limit": [3, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 60, 63, 64, 66, 67, 69, 70, 71, 73, 78, 79, 87, 89, 91, 95, 96, 97, 98, 99, 100, 102, 104, 125, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 157, 161, 165, 166, 167, 175, 176, 177, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 291, 293, 336, 337, 339, 341, 342, 344, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 381, 382, 384, 387, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 408, 410, 412, 414, 415, 420, 424, 425, 426, 427, 429, 431, 432, 435, 436, 437, 441, 442, 456, 457, 461, 465, 466], "linalg": [6, 88, 93, 94, 432], "line": [186, 199], "linear": [10, 65, 69, 186, 194, 210, 467, 478], "linspac": [0, 6, 21, 98, 146, 210, 218, 447, 459], "linux": 4, "list": [3, 6, 9, 20, 34, 37, 38, 39, 40, 42, 45, 46, 47, 54, 62, 66, 80, 83, 89, 90, 91, 93, 94, 110, 115, 124, 144, 145, 146, 148, 154, 164, 171, 198, 199, 210, 213, 333, 411, 413, 419, 422, 434, 443, 446, 460, 463, 464], "list_pickl": 91, "littl": 91, "ln": 210, "load": [6, 140, 199], "loadtxt": [6, 140], "loc": [356, 367, 369, 370, 378, 402], "local": 4, "locat": [0, 4, 147, 168, 169, 212, 343, 367, 369, 421], "log": [6, 102, 146, 193, 198, 201, 202, 203, 204, 210, 211, 371], "log10": [6, 200, 202, 203], "log1p": [6, 100, 102, 200, 201, 203], "log2": [6, 200, 201, 202, 205], "log_bas": 210, "logabsdet": 193, "logaddexp": [6, 75, 205, 211], "logaddexp2": [6, 204, 211], "logarithm": [75, 180, 193, 198, 200, 201, 202, 203, 204, 205, 211, 372, 478], "logic": [14, 19, 206, 207, 208, 209, 467, 478], "logical_and": [6, 50, 207, 208, 209], "logical_not": [6, 51, 161, 206, 208, 209], "logical_or": [6, 52, 206, 207, 209], "logical_xor": [6, 53, 206, 207, 208], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 146, 198], "logsumexp": [75, 204, 205], "lomax": 379, "long": [91, 187], "longer": [111, 117, 482], "look": [337, 440], "lookfor": 6, "loop": 93, "loos": 92, "lorentz": 394, "lose": [111, 117, 119], "low": [107, 109, 113, 114, 356, 384, 387, 400, 474], "lower": [80, 104, 152, 153, 173, 178, 182, 184, 212, 448, 449, 450, 451, 454, 455], "lowest": [48, 93, 94, 356, 384], "lstsq": 6, "m": [4, 10, 73, 90, 91, 93, 104, 107, 109, 111, 113, 114, 117, 118, 119, 123, 129, 130, 131, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 212, 213, 352, 422, 439, 440, 448, 449, 450, 451, 453, 454, 455], "machin": [4, 10, 125, 157, 186, 205, 407], "machineri": 91, "made": [34, 38, 45, 91, 138, 174, 226], "magnitud": [11, 12, 67, 105, 349], "mai": [14, 18, 19, 44, 56, 60, 62, 68, 77, 89, 91, 93, 94, 101, 107, 109, 111, 112, 113, 114, 116, 117, 120, 123, 148, 153, 154, 179, 181, 182, 186, 190, 192, 205, 210, 213, 226, 232, 235, 237, 291, 323, 352, 407, 419, 434, 444, 463, 474], "main": [80, 81, 82, 83, 84, 104, 124, 156, 184, 212, 445, 448, 449, 450, 453, 454], "mainstai": 10, "maintain": [86, 89, 91, 152, 322, 421, 440], "major": [4, 37, 38, 39, 40, 42, 43, 44, 89, 291, 338, 405], "make": [40, 42, 61, 91, 218, 458, 459], "manag": 0, "mani": [10, 474], "manipul": [3, 81, 467, 478], "manual": [4, 91, 444], "mappingproxi": 91, "mask": [91, 212, 338, 345, 353, 439, 450, 454], "mask_func": 212, "mask_indic": [6, 450, 454], "mass": 152, "mat": 6, "match": [11, 12, 38, 62, 68, 72, 75, 85, 91, 138, 140, 148, 160, 211, 213, 351, 352, 409, 434, 439, 440, 443, 464], "math": [10, 98], "mathemat": [467, 478], "matlab": 137, "matmul": [6, 88, 192, 195, 462], "matplotlib": [218, 394], "matric": [124, 141, 159, 180, 181, 183, 185, 188, 190, 191, 192, 193, 195, 213, 218, 478], "matrix": [73, 88, 93, 160, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 213, 218, 432, 453, 460, 462, 467, 478], "matrix_pow": [6, 432], "matrix_rank": 6, "matter": 458, "max": [0, 6, 16, 29, 89, 125, 135, 136, 152, 153, 157, 186, 188, 215, 220, 221, 231, 293, 373, 440, 444, 459, 474], "max_arg": 0, "max_val": 0, "maxima": [135, 214, 215], "maximum": [0, 6, 16, 29, 30, 60, 89, 94, 135, 136, 214, 220, 221, 227, 228, 231, 233, 288, 308, 347, 350, 352, 459], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 21, 34, 36, 37, 38, 39, 40, 41, 42, 44, 48, 66, 72, 80, 81, 83, 89, 93, 95, 96, 104, 107, 108, 109, 113, 114, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 148, 156, 159, 179, 190, 199, 212, 217, 219, 232, 235, 237, 291, 296, 304, 333, 340, 341, 342, 356, 369, 371, 374, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 401, 402, 405, 412, 435, 437, 448, 450, 454, 460, 461, 465, 466, 474], "meaningfulli": 474, "meant": 474, "median": [0, 6], "meet": 422, "memori": [3, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 40, 42, 43, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 91, 93, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 138, 144, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 218, 221, 222, 225, 296, 302, 328, 336, 337, 339, 341, 342, 346, 347, 349, 354, 355, 408, 410, 412, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 456, 457, 464, 465, 466, 467, 482], "mersenn": 356, "meshgrid": [6, 141, 159, 219, 340], "met": [88, 189], "meta": 91, "metadata": 91, "method": [10, 14, 16, 17, 19, 31, 44, 66, 88, 89, 91, 127, 138, 140, 188, 191, 195, 291, 296, 312, 320, 323, 335, 338, 356, 412, 423, 437, 439, 446, 467], "mgrid": [107, 109, 118, 121, 159], "mgridclass": 219, "middl": [10, 84, 107, 109, 113, 114, 183], "might": [93, 112, 113, 114], "min": [6, 17, 30, 60, 89, 125, 135, 136, 152, 153, 157, 179, 186, 192, 195, 214, 215, 221, 233, 293, 440, 474], "min_scalar_typ": 6, "minima": [136, 220, 221], "minimum": [6, 17, 29, 30, 60, 89, 132, 135, 136, 214, 215, 220, 227, 228, 231, 233, 289, 310, 347, 350], "minlength": 49, "mintypecod": 6, "minu": [102, 134, 222, 410, 457], "miscellan": [2, 467, 478], "mise": 401, "miss": 199, "mix": 213, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 103, 410, 459], "mode": [59, 65, 69, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 192, 292, 316, 331, 351, 394, 399, 421, 439, 440], "model": 358, "modf": 6, "modifi": [66, 84, 124, 393], "modul": [106, 147, 467], "modulu": [137, 222, 410], "monoton": [86, 152], "moor": 191, "more": [0, 3, 4, 31, 34, 45, 46, 47, 90, 91, 93, 94, 102, 118, 121, 130, 131, 138, 140, 153, 154, 159, 186, 187, 188, 189, 191, 195, 202, 204, 434, 443, 447, 458, 459, 474, 482], "most": [3, 4, 20, 84, 85, 91, 94, 106, 112, 226, 356, 392, 433], "move": [89, 224, 314, 416, 417, 446, 458], "moveaxi": [6, 416, 417, 446], "msg": 0, "msort": 6, "mt19937": 392, "mu": [367, 371, 378, 401], "multi": [2, 89, 159, 219, 328, 340, 458, 467], "multi_dot": [6, 88, 93, 94], "multiarrai": 91, "multidimension": [152, 160, 464], "multinomi": 6, "multipl": [10, 29, 30, 31, 48, 62, 74, 75, 91, 93, 107, 109, 113, 114, 118, 119, 121, 123, 153, 154, 181, 182, 183, 184, 185, 189, 211, 214, 216, 220, 231, 232, 233, 235, 237, 409, 419, 422, 429, 434, 435, 447, 458, 461, 463, 467], "multipli": [6, 76, 93, 183, 234, 348], "multivari": 374, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 75, 76, 77, 78, 79, 85, 87, 88, 90, 99, 100, 101, 102, 105, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 130, 132, 133, 134, 135, 136, 137, 140, 143, 148, 149, 150, 151, 152, 153, 154, 155, 158, 161, 165, 166, 167, 168, 169, 175, 176, 177, 178, 189, 190, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 336, 337, 339, 345, 346, 347, 348, 349, 351, 352, 354, 355, 408, 409, 410, 411, 414, 415, 416, 418, 419, 420, 421, 424, 425, 426, 427, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 456, 457, 461, 463, 464], "mx": 186, "n": [0, 4, 10, 32, 77, 81, 82, 85, 86, 89, 90, 91, 92, 101, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 141, 148, 156, 186, 187, 188, 191, 192, 195, 196, 197, 212, 213, 218, 235, 237, 333, 345, 351, 358, 373, 375, 385, 395, 421, 423, 432, 435, 438, 439, 440, 443, 446, 447, 448, 449, 450, 451, 453, 454, 455, 460, 461, 474], "n1": 218, "n2": [199, 218], "n3": 218, "naiv": 94, "name": [0, 6, 91], "namedtupl": 192, "nan": [9, 14, 15, 19, 29, 30, 35, 37, 38, 39, 87, 132, 135, 136, 162, 165, 166, 167, 168, 169, 201, 214, 215, 216, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 347, 348, 431, 435, 456, 458, 461, 478], "nan_to_num": 6, "nanargmax": [6, 29, 228], "nanargmin": [6, 30, 227], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 135, 136, 214, 215, 221, 233], "nanmean": [6, 216, 235, 237, 435, 461], "nanmedian": 6, "nanmin": [6, 135, 136, 215, 220, 221, 231], "nanpercentil": 6, "nanprod": [6, 348], "nanquantil": 6, "nanstd": [6, 216, 232, 237, 435, 461], "nansum": 6, "nanvar": [6, 216, 232, 235, 435, 461], "nat": 167, "nativ": 91, "native_cod": 91, "native_dt": 91, "natur": [193, 200, 201, 202, 203, 204, 205, 211], "nbad": 368, "nbyte": 89, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 479], "ndim": [6, 32, 34, 42, 45, 46, 47, 73, 81, 84, 89, 91, 124, 174, 195, 214, 220, 341, 444, 446, 465], "ndmin": 34, "nearest": [33, 58, 126, 133, 134, 222, 410, 415, 418, 457], "necessari": [4, 14, 19, 21, 34, 37, 38, 40, 42, 45, 68, 76, 77, 92, 103, 111, 117, 119, 124, 138, 146, 198, 210, 213, 216, 229, 230, 232, 234, 235, 236, 237, 348, 412, 435, 437, 461, 482], "necessarili": [181, 183], "need": [4, 34, 38, 84, 93, 147, 439, 440, 464], "needs_init": 91, "needs_pyapi": 91, "neg": [6, 10, 14, 19, 33, 49, 67, 83, 84, 86, 89, 101, 104, 107, 109, 112, 113, 114, 117, 120, 129, 132, 143, 148, 152, 165, 166, 167, 168, 169, 187, 226, 231, 233, 235, 236, 237, 323, 346, 347, 348, 351, 375, 418, 435, 437, 439, 440, 445, 461], "negat": 422, "negative_binomi": 6, "neginf": 226, "neither": [88, 135, 136, 195, 213, 231, 233], "nest": [41, 90, 154, 419, 434, 463], "nested_it": 6, "net": [135, 136, 215, 221], "never": [412, 459], "new": [20, 34, 44, 54, 55, 61, 62, 72, 75, 76, 77, 84, 89, 90, 91, 92, 95, 96, 101, 135, 136, 138, 142, 143, 144, 145, 146, 154, 156, 198, 210, 211, 212, 215, 221, 224, 229, 230, 234, 236, 291, 320, 323, 333, 341, 342, 409, 412, 416, 417, 419, 434, 444, 446, 463, 464, 465, 466, 474], "new_dtyp": 91, "new_ord": 91, "newaxi": 101, "newbyteord": [6, 91], "newli": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 39, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 95, 96, 97, 99, 100, 102, 104, 105, 126, 132, 133, 134, 135, 136, 137, 144, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 221, 222, 225, 291, 296, 336, 337, 339, 341, 342, 346, 347, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 456, 457, 465, 466], "newshap": 412, "next": [4, 125, 337], "nextaft": 6, "ngood": 368, "ni": [218, 352, 439, 440], "nine": 358, "ninja": 4, "nj": [352, 439, 440], "njm": 93, "nk": [352, 439, 440], "nl": 10, "nlk": 93, "nn": 218, "noisi": 186, "non": [21, 32, 34, 37, 38, 39, 40, 41, 42, 44, 48, 49, 66, 72, 80, 81, 83, 86, 89, 95, 96, 103, 104, 108, 117, 120, 122, 128, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 156, 159, 163, 165, 198, 199, 210, 212, 219, 226, 227, 228, 231, 233, 235, 237, 291, 296, 313, 323, 338, 340, 341, 342, 345, 347, 356, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 435, 443, 448, 450, 454, 460, 461, 464, 465, 466], "nonc": [376, 377], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 165, 166, 167, 168, 169, 175, 176, 177, 179, 186, 188, 189, 190, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 306, 308, 309, 310, 314, 315, 316, 319, 321, 322, 325, 326, 327, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 450, 454, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 474], "nonzero": [6, 32, 72, 89, 128, 464, 474], "nor": [135, 136, 183, 231, 233], "norm": [6, 10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 179, 183, 186, 478], "normal": [6, 73, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 152, 181, 182, 192, 205, 356, 371, 374, 385, 397], "not_equ": [6, 97, 149, 150, 176, 177], "note": [11, 12, 13, 14, 18, 19, 20, 29, 30, 31, 32, 33, 43, 66, 74, 78, 84, 86, 87, 89, 91, 93, 94, 101, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 133, 135, 136, 139, 140, 141, 142, 143, 152, 159, 165, 181, 199, 210, 222, 225, 235, 236, 237, 296, 320, 338, 345, 351, 354, 359, 361, 362, 372, 377, 410, 412, 429, 435, 436, 438, 443, 444, 447, 456, 458, 459, 461, 462], "notic": [91, 117, 120], "notimplementederror": [11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 95, 96, 97, 99, 100, 102, 104, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 161, 165, 166, 167, 175, 176, 177, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 220, 221, 222, 225, 231, 232, 233, 235, 236, 237, 291, 336, 337, 339, 341, 342, 346, 347, 348, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 429, 431, 432, 435, 436, 437, 441, 442, 456, 457, 461, 465, 466], "now": [14, 19, 40, 42, 81, 183, 186, 212], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 299, 301, 304, 305, 306, 312, 314, 318, 323, 324, 325, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355, 381, 390, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "nr": 10, "nsamp": 368, "nsampl": 368, "nth": 443, "nuc": 190, "num": [0, 91, 98, 146, 198, 210, 447, 459], "number": [10, 14, 15, 18, 19, 20, 21, 32, 33, 39, 48, 49, 54, 55, 72, 81, 83, 85, 86, 89, 91, 92, 93, 94, 101, 104, 105, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 125, 126, 134, 139, 140, 142, 143, 146, 148, 152, 153, 156, 157, 162, 163, 164, 165, 171, 179, 185, 188, 192, 193, 195, 196, 197, 198, 205, 210, 222, 226, 229, 230, 231, 233, 234, 235, 236, 237, 312, 321, 324, 335, 338, 345, 348, 349, 356, 358, 368, 392, 410, 411, 415, 416, 417, 418, 425, 428, 435, 438, 444, 446, 448, 457, 458, 460, 461, 474, 478], "number_of_dimens": [89, 312, 335], "numer": [3, 4, 10, 11, 12, 13, 15, 22, 23, 24, 25, 26, 28, 33, 63, 64, 67, 70, 71, 87, 91, 97, 99, 102, 112, 113, 114, 117, 119, 134, 135, 136, 149, 150, 158, 162, 165, 166, 167, 176, 177, 200, 201, 202, 203, 215, 221, 225, 336, 339, 346, 347, 349, 406, 415, 418, 424, 425, 426, 427, 436, 441, 442, 456, 478], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 300, 304, 305, 306, 312, 318, 323, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474, 478], "nx": 218, "ny": 218, "nyquist": [10, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122], "o": [4, 14, 19, 91], "obj": [29, 30, 31, 91, 138, 152], "obj2sctyp": 6, "object": [21, 34, 37, 38, 39, 40, 41, 42, 43, 44, 66, 80, 81, 83, 89, 91, 95, 96, 101, 104, 108, 122, 125, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 159, 179, 182, 190, 198, 199, 210, 212, 219, 291, 296, 320, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 412, 448, 450, 454, 460, 465, 466, 474], "obtain": [10, 84, 178, 338], "obviou": 10, "occupi": [125, 157], "occur": [20, 44, 56, 62, 68, 89, 93, 154, 181, 213, 226, 291, 419, 434, 463], "occurr": [29, 30, 49, 86, 152, 227, 228, 458], "odd": [10, 108, 111, 115, 116, 117, 119, 120, 122], "off": [21, 181, 186], "offset": [84, 89, 91, 139, 140, 212, 299, 332, 445, 450, 451, 454, 455], "often": 151, "ogrid": [159, 464], "ogridclass": 340, "oil": [358, 375], "omit": [356, 384], "onc": 185, "one": [3, 4, 29, 30, 31, 34, 36, 41, 45, 46, 47, 48, 60, 65, 68, 69, 72, 89, 91, 95, 97, 101, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 130, 131, 132, 135, 136, 140, 144, 148, 153, 154, 156, 159, 164, 183, 187, 190, 200, 201, 203, 212, 214, 215, 218, 219, 220, 221, 227, 228, 234, 236, 296, 304, 307, 338, 340, 342, 345, 348, 375, 417, 422, 429, 433, 434, 437, 439, 443, 447, 450, 451, 454, 455, 458, 465, 474], "oneapi": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "onedpl": 4, "onemkl": [4, 181, 183], "ones": [6, 34, 40, 42, 48, 75, 87, 89, 93, 95, 96, 97, 101, 104, 123, 144, 145, 155, 156, 174, 186, 188, 211, 212, 229, 234, 342, 348, 409, 413, 417, 446, 448, 456, 465, 466], "ones_lik": [6, 34, 96, 145, 341, 466], "onli": [10, 14, 19, 21, 29, 30, 31, 34, 37, 38, 40, 42, 44, 45, 48, 60, 66, 69, 73, 89, 91, 93, 94, 95, 96, 104, 110, 120, 124, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 159, 178, 182, 184, 192, 195, 198, 199, 210, 212, 213, 214, 216, 217, 220, 226, 227, 228, 231, 232, 233, 234, 235, 237, 291, 323, 325, 341, 342, 344, 345, 346, 348, 356, 378, 384, 400, 412, 429, 435, 437, 440, 454, 458, 459, 461, 464, 465, 466, 474], "open": [140, 159, 198, 340, 356, 386, 388, 389, 391, 400, 438], "opencl": [21, 34, 37, 38, 39, 40, 42, 66, 80, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 198, 199, 210, 219, 340, 341, 342, 448, 460, 465, 466], "oper": [10, 13, 50, 51, 52, 53, 87, 91, 93, 94, 97, 101, 124, 134, 137, 149, 150, 161, 175, 176, 177, 178, 206, 208, 213, 214, 220, 222, 225, 226, 227, 228, 336, 339, 346, 347, 351, 410, 414, 436, 444, 456, 458, 459, 467, 478], "operand": [93, 94, 197, 343, 443], "opposit": [10, 91, 103, 111, 116, 345], "optim": [4, 93, 94, 152, 153], "option": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 52, 53, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 182, 184, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 304, 333, 336, 337, 339, 340, 341, 342, 343, 346, 347, 348, 349, 351, 354, 355, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 482], "ord": 190, "order": [10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 78, 79, 84, 86, 87, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 107, 109, 112, 113, 114, 117, 119, 123, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 144, 145, 148, 149, 150, 151, 152, 155, 158, 161, 165, 166, 167, 175, 176, 177, 179, 181, 182, 183, 184, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 218, 221, 222, 224, 225, 245, 290, 291, 296, 304, 314, 317, 322, 325, 333, 336, 337, 338, 339, 341, 342, 344, 346, 347, 349, 354, 355, 405, 408, 410, 412, 414, 415, 420, 421, 424, 425, 426, 427, 429, 431, 432, 436, 441, 442, 443, 446, 456, 457, 458, 460, 464, 465, 466, 478], "ordin": [186, 194], "ordinari": [117, 160, 178], "org": 4, "orient": [74, 352, 440], "origin": [54, 84, 89, 111, 117, 119, 190, 218, 224, 234, 236, 412, 416, 458], "ortho": [10, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "orthogon": [183, 192], "orthonorm": 192, "other": [31, 36, 44, 54, 55, 85, 89, 91, 112, 113, 114, 117, 119, 133, 141, 156, 181, 183, 189, 224, 241, 242, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 278, 280, 283, 284, 285, 291, 356, 400, 417, 429, 458, 467, 478], "otherwis": [3, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 78, 79, 80, 85, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 160, 161, 165, 166, 167, 175, 176, 177, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 291, 320, 336, 337, 339, 341, 342, 346, 347, 348, 349, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 414, 415, 420, 421, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 441, 442, 445, 456, 457, 461, 464, 465, 466], "otim": 443, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 185, 189, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 292, 293, 296, 297, 298, 304, 308, 309, 310, 315, 321, 327, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 354, 355, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466], "outer": [6, 74, 84, 93, 94, 174], "output": [10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 175, 176, 177, 189, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 225, 228, 229, 230, 232, 234, 235, 236, 237, 291, 296, 336, 337, 339, 340, 341, 342, 346, 347, 348, 349, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 414, 415, 418, 420, 422, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 439, 441, 442, 444, 445, 448, 450, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 478, 482], "outsid": [152, 153], "over": [10, 14, 19, 48, 75, 76, 77, 88, 89, 93, 94, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 129, 141, 146, 152, 153, 160, 190, 198, 210, 211, 213, 214, 216, 218, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 304, 348, 352, 356, 383, 388, 399, 400, 409, 435, 437, 439, 440, 443, 447, 459, 461, 478], "overal": [107, 109, 113, 114, 118, 119, 121, 123], "overflow": 132, "overrid": [74, 96, 145, 342, 466], "overview": 2, "overwrite_input": 217, "p": [10, 179, 186, 187, 358, 361, 366, 372, 375, 459], "pack": [84, 405, 478], "packag": [0, 3], "packbit": 6, "pad": [6, 91, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "page": [3, 478], "pair": [10, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 181], "parallel": [1, 3, 4, 9, 467], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 301, 304, 320, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "parameter": [356, 378, 400], "parametr": 447, "pareto": 6, "pars": [140, 199], "part": [3, 10, 18, 89, 117, 135, 136, 158, 163, 164, 170, 171, 181, 182, 184, 212, 215, 221, 223, 305, 318, 406, 407, 430, 450, 454, 457, 458, 474], "partial": [31, 429], "particular": [91, 189], "particularli": 93, "partit": [6, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 429, 448, 450, 454, 460, 465, 466, 474], "pass": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 153, 156, 159, 186, 199, 212, 219, 226, 296, 320, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 448, 450, 451, 454, 455, 460, 465, 466], "path": [4, 93, 94, 140, 199], "path_info": 94, "pathlib": 199, "pattern": 48, "penros": 191, "per": [93, 108, 122], "percentil": [6, 217], "perf_count": 0, "perform": [14, 19, 38, 39, 60, 85, 93, 107, 109, 112, 113, 114, 118, 119, 121, 123, 129, 178, 348, 437], "period": [10, 459], "permit": 140, "permut": [6, 89, 93, 224, 333, 446, 478], "phase": [10, 18, 459], "phase_deg": 459, "pi": [0, 9, 10, 22, 24, 26, 27, 70, 71, 78, 79, 106, 354, 426, 427, 441, 442, 447, 459, 482], "pickl": [140, 199], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 20, 33, 60, 62, 76, 77, 88, 89, 101, 103, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 138, 159, 162, 213, 214, 216, 220, 226, 229, 230, 232, 234, 235, 236, 237, 304, 323, 325, 333, 340, 348, 351, 352, 393, 412, 416, 418, 429, 434, 435, 437, 439, 445, 461, 474], "platform": [76, 77, 91, 229, 230, 234, 236, 348, 437], "pleas": [0, 3, 93, 152, 474], "plot": 394, "plt": [218, 394], "plu": [200, 201, 203], "point": [10, 11, 12, 18, 21, 27, 33, 37, 38, 48, 67, 75, 91, 95, 96, 100, 104, 105, 106, 111, 112, 116, 117, 118, 119, 120, 125, 126, 132, 139, 140, 141, 143, 144, 145, 148, 156, 158, 186, 187, 198, 199, 204, 205, 211, 216, 226, 232, 235, 237, 337, 341, 342, 356, 385, 397, 406, 408, 409, 418, 420, 421, 435, 447, 448, 461, 465, 466, 478], "pointer": 91, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 28, 33, 50, 51, 52, 53, 57, 58, 63, 64, 67, 70, 71, 78, 79, 87, 89, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 221, 222, 225, 336, 337, 339, 346, 347, 349, 354, 355, 356, 383, 408, 410, 414, 415, 418, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 456, 457], "portion": [152, 153], "posinf": 226, "posit": [6, 10, 14, 15, 19, 21, 33, 37, 38, 39, 57, 67, 83, 84, 89, 101, 104, 105, 107, 109, 112, 113, 114, 117, 120, 122, 125, 132, 140, 162, 165, 166, 167, 168, 169, 178, 187, 196, 224, 226, 231, 233, 236, 314, 328, 336, 358, 382, 416, 417, 418, 420, 422, 431, 432, 445, 446], "possess": 181, "possibl": [10, 43, 44, 46, 47, 89, 93, 94, 101, 135, 136, 148, 152, 212, 291, 320, 412, 433, 438, 439, 440, 446], "possibli": 41, "pow": 474, "power": [6, 10, 100, 106, 132, 187, 432, 460], "pre": 153, "precis": [11, 12, 48, 76, 77, 91, 93, 125, 132, 158, 186, 212, 229, 230, 234, 236, 348, 406, 437, 445], "predecessor": 459, "prefer": [59, 66, 89, 296, 323, 338], "prepend": [85, 92, 444], "present": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 156, 159, 199, 212, 219, 231, 233, 236, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 448, 450, 454, 460, 465, 466], "preserv": [44, 45, 46, 47, 60, 89, 91, 93, 129, 130, 131, 132, 182, 183, 184, 291, 445, 458], "press": 10, "prevent": 93, "previou": 48, "print": [0, 4, 39, 48, 49, 65, 86, 91, 94, 356, 375, 380], "print_device_info": 0, "printabl": 94, "printopt": 6, "prior": 85, "prob1": [204, 205], "prob12": [204, 205], "prob2": [204, 205], "probabl": [152, 205, 358, 366, 375], "proce": 474, "process": 10, "processor": 93, "prod": [6, 76, 89, 196, 197, 234, 474], "produc": [10, 32, 91, 199, 352, 421, 440], "product": [6, 74, 76, 88, 89, 93, 94, 160, 174, 189, 194, 196, 197, 213, 225, 229, 234, 297, 343, 348, 443, 462, 478], "program": [4, 133], "progress": [146, 198], "project": [91, 349], "promot": [13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 40, 42, 50, 52, 53, 56, 57, 67, 70, 71, 78, 79, 87, 99, 100, 102, 132, 134, 135, 136, 137, 146, 155, 175, 198, 200, 201, 202, 203, 204, 205, 210, 213, 215, 221, 222, 225, 337, 347, 354, 355, 408, 410, 413, 414, 420, 424, 426, 427, 431, 432, 436, 441, 442, 444, 456, 457], "promote_typ": 6, "propag": [91, 135, 136, 214, 215, 220, 221, 229, 230, 231, 233, 234, 236], "proper": [135, 136, 181, 183], "properti": [10, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 182, 184, 192, 198, 199, 210, 212, 219, 239, 291, 296, 300, 302, 303, 305, 307, 311, 312, 318, 323, 324, 328, 333, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466, 474], "protocol": [41, 91, 138], "prototyp": 96, "provid": [0, 6, 10, 29, 30, 62, 68, 75, 89, 93, 94, 101, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 142, 152, 153, 154, 168, 169, 211, 227, 228, 231, 233, 234, 236, 356, 384, 387, 409, 419, 434, 439, 447, 458, 463, 464, 482], "pseudo": [191, 356], "ptp": 6, "pure": [10, 111, 117, 119, 120], "purpos": [32, 186], "put": [6, 10, 89, 103, 111, 117, 119, 345, 352, 440, 474], "put_along_axi": [6, 351, 440], "putmask": [6, 351], "pval": 373, "py": 4, "pypi": 4, "pyplot": [218, 394], "pytest": 4, "python": [0, 2, 3, 41, 89, 91, 137, 138, 222, 306, 410, 411, 474], "q": [183, 187, 192, 197, 217], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [18, 26, 107], "quantil": 6, "quaternion": 187, "question": 80, "queue": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "quick": [2, 3], "quickli": 482, "quotient": 27, "r": [79, 192], "r2": 192, "rad": 79, "rad2deg": [6, 78, 79, 459], "radian": [6, 18, 22, 23, 24, 26, 27, 78, 79, 354, 459, 482], "rais": [11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 42, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 66, 67, 68, 70, 71, 75, 78, 79, 86, 87, 88, 89, 95, 96, 97, 99, 100, 102, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 161, 165, 166, 167, 175, 176, 177, 187, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 220, 221, 222, 225, 227, 228, 231, 232, 233, 235, 236, 237, 291, 292, 336, 337, 339, 341, 342, 346, 347, 348, 349, 354, 355, 408, 409, 410, 412, 414, 415, 420, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 441, 442, 456, 457, 461, 465, 466, 474], "rand": [6, 94, 356, 386, 388, 389, 391], "randint": [6, 89, 306, 356, 387], "randn": [6, 129, 130, 131, 191, 192, 195, 197, 356, 434], "random": [89, 94, 129, 130, 131, 183, 189, 191, 192, 195, 197, 306, 434, 467, 478], "random_integ": [6, 356, 384], "random_sampl": [6, 356, 383, 386, 389, 391], "randomli": 380, "randomst": 384, "ranf": 6, "rang": [0, 86, 142, 152, 153, 205, 350, 351, 375, 380, 411, 434, 443, 446, 459, 478], "rank": [101, 103, 141, 186, 188, 438], "rate": [108, 122], "rather": 338, "ratio": [0, 87, 134, 186, 456, 482], "ration": 478, "ravel": [6, 89, 103, 128, 190, 304, 343, 474], "ravel_multi_index": 6, "raw": 192, "rayleigh": 6, "rcond": [186, 191], "re": [29, 30, 49, 80, 416], "read": [80, 84, 89, 91, 139, 140, 142, 143, 199, 304, 405, 412], "readonli": 91, "real": [6, 11, 12, 18, 21, 27, 35, 57, 58, 67, 75, 89, 106, 109, 111, 116, 117, 118, 119, 120, 121, 123, 125, 133, 135, 136, 137, 155, 158, 163, 170, 171, 178, 181, 182, 183, 184, 188, 191, 192, 193, 195, 204, 205, 211, 215, 221, 222, 226, 235, 237, 358, 375, 407, 408, 409, 410, 420, 430, 435, 457, 458, 461, 474, 478], "real_if_clos": [6, 18, 158, 406], "rearrang": [89, 314, 478], "reason": 119, "rebuild": 90, "recal": 91, "recent": [20, 433], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 420, 431], "recommend": [93, 338, 444], "reconstruct": [91, 195, 458], "recov": 10, "reduc": [14, 19, 29, 30, 48, 192, 195, 211, 214, 216, 218, 220, 227, 228, 231, 232, 233, 234, 235, 236, 237, 348, 409, 435, 437, 461], "reduce_hypot": 155, "reduct": [14, 19], "redund": 120, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 474], "reflect": 474, "reflector": 192, "regardless": [91, 182, 184], "regular": 199, "rel": [15, 89, 162, 328, 416, 417], "relat": 91, "relev": [91, 146, 198, 210], "rem": 137, "remain": [14, 19, 48, 94, 121, 123, 152, 211, 216, 224, 232, 235, 237, 409, 412, 435, 461], "remaind": [6, 134, 137, 222, 347], "remov": [29, 30, 78, 84, 89, 101, 117, 326, 348, 354, 433, 437, 478], "reorder": [93, 129, 197, 224], "rep": 444, "repeat": [6, 89, 107, 109, 113, 114, 118, 119, 121, 123, 124, 181, 182, 183, 184, 218, 345, 444, 447, 458, 474], "repeatedli": 93, "repetit": [0, 411, 444], "replac": [3, 10, 41, 60, 103, 226, 229, 230, 345, 352, 361, 422, 474], "replic": 444, "repo": 4, "repr": 279, "repres": [10, 21, 34, 37, 38, 40, 41, 42, 48, 91, 94, 112, 120, 138, 141, 146, 148, 159, 193, 198, 210, 218, 237, 356, 452, 474], "represent": [50, 52, 53, 94, 125, 157, 159, 226, 337, 458, 474], "request": 417, "requir": [4, 6, 34, 38, 39, 40, 42, 44, 89, 91, 93, 105, 159, 226, 291, 323], "res_cpu": 80, "res_host": 80, "resampl": 117, "rese": 392, "reset": 474, "reshap": [0, 6, 13, 29, 30, 32, 45, 47, 48, 80, 81, 82, 84, 87, 88, 89, 90, 93, 101, 103, 110, 115, 129, 137, 159, 160, 174, 190, 212, 213, 214, 220, 225, 299, 304, 323, 333, 345, 380, 405, 416, 436, 443, 445, 447, 450, 451, 454, 455, 456, 458, 474], "resid": [101, 105, 138], "residu": 186, "resiz": [6, 101, 474], "resolut": 125, "resolv": [75, 101, 211, 409], "resourc": 0, "respect": [10, 13, 27, 50, 52, 53, 87, 89, 97, 132, 134, 137, 148, 149, 150, 175, 176, 177, 204, 205, 206, 208, 209, 222, 225, 328, 339, 347, 410, 414, 436, 456, 459], "restor": 416, "result": [0, 4, 10, 14, 19, 27, 29, 30, 32, 48, 50, 51, 52, 53, 56, 60, 62, 67, 72, 75, 76, 77, 87, 88, 91, 94, 96, 97, 102, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 132, 134, 139, 140, 141, 142, 143, 145, 146, 149, 150, 152, 153, 159, 161, 165, 166, 167, 168, 169, 175, 176, 177, 178, 181, 190, 192, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 338, 339, 342, 343, 347, 348, 351, 356, 358, 388, 409, 412, 413, 414, 415, 417, 418, 421, 424, 425, 434, 435, 437, 439, 440, 443, 444, 447, 452, 456, 457, 458, 461, 464, 466, 474], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 56, 91, 478], "ret": 355, "retriev": [84, 91], "retstep": 198, "returnreturn_count": 458, "return_index": 458, "return_invers": 458, "reus": [138, 153, 412], "revers": [84, 89, 124, 129, 130, 131, 333, 446, 447, 460], "rewrit": 186, "rfft": [6, 10, 108, 111, 116, 117, 118, 119, 121, 122, 123], "rfft2": [6, 118], "rfftfreq": [6, 108], "rfftn": [6, 106, 109, 119, 120, 121], "right": [10, 60, 74, 84, 86, 130, 131, 155, 175, 181, 182, 183, 184, 189, 197, 212, 399, 409, 414, 421, 445, 447, 450, 454, 460], "right_shift": [6, 175], "rightmost": [152, 153, 197], "rint": [6, 33, 58, 126, 133, 418, 457], "roll": [6, 417], "rollaxi": [6, 416], "root": [6, 57, 155, 179, 408, 409, 420, 431, 432], "rot90": 6, "roughli": [91, 186], "round": [6, 21, 33, 58, 89, 126, 133, 134, 181, 222, 410, 415, 457, 474, 478], "round_": 6, "roundoff": [111, 116], "routin": [2, 467, 474], "row": [42, 44, 61, 62, 76, 77, 84, 89, 90, 104, 130, 131, 148, 154, 156, 159, 189, 195, 291, 338, 405, 419, 434, 448, 450, 458, 463], "row_stack": [6, 463], "rowvar": 73, "rsqrt": [408, 431], "rtol": [15, 162], "rule": [13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 38, 40, 42, 48, 50, 52, 53, 56, 57, 67, 68, 70, 71, 74, 77, 78, 79, 87, 99, 100, 102, 134, 135, 136, 137, 146, 155, 175, 198, 200, 201, 202, 203, 204, 205, 210, 211, 213, 215, 216, 221, 222, 225, 232, 235, 237, 337, 347, 354, 355, 408, 409, 410, 413, 414, 420, 424, 426, 427, 431, 432, 435, 436, 437, 441, 442, 447, 456, 457, 461], "run": [0, 4], "runtim": 4, "runtimewarn": [231, 233], "s1": [89, 91, 174, 328], "s10": 91, "s16": 91, "s2": [89, 91, 328], "s25": 91, "s3": [89, 328], "safe": [44, 56, 62, 68, 89, 93, 154, 213, 291, 419, 434, 463], "safe_ev": 6, "said": 197, "same": [4, 10, 11, 12, 13, 14, 15, 19, 20, 27, 29, 30, 31, 32, 33, 35, 36, 40, 42, 43, 44, 48, 50, 51, 52, 53, 55, 61, 62, 67, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 96, 97, 101, 103, 112, 113, 114, 119, 124, 126, 132, 134, 135, 136, 137, 138, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 168, 169, 170, 174, 175, 176, 177, 183, 187, 192, 204, 205, 206, 208, 209, 211, 214, 215, 216, 220, 221, 222, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 320, 333, 337, 339, 342, 345, 347, 348, 352, 356, 378, 384, 400, 405, 406, 409, 410, 411, 414, 416, 417, 419, 421, 422, 429, 433, 434, 435, 436, 437, 439, 440, 443, 445, 449, 451, 453, 455, 456, 461, 462, 463, 466, 482], "same_kind": [44, 56, 62, 68, 89, 93, 154, 213, 291, 419, 434, 463], "sampl": [10, 108, 115, 120, 122, 146, 148, 152, 198, 210, 352, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 440, 447, 450, 454, 467, 478], "sample_r": 122, "satisfi": [34, 38, 40, 42, 44, 89, 103, 185, 291, 345, 422], "save": [6, 140, 482], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 20, 27, 34, 35, 36, 37, 38, 40, 41, 42, 50, 52, 53, 56, 66, 67, 68, 74, 80, 83, 85, 87, 88, 89, 91, 93, 94, 97, 103, 108, 122, 124, 132, 134, 135, 136, 137, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 160, 162, 164, 171, 172, 174, 175, 176, 177, 194, 198, 204, 205, 206, 208, 209, 210, 212, 213, 215, 218, 221, 222, 225, 301, 306, 335, 337, 339, 345, 347, 351, 352, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 384, 387, 390, 392, 396, 398, 399, 400, 401, 402, 403, 404, 407, 410, 414, 421, 422, 436, 439, 443, 447, 456, 457, 460, 462, 464, 474], "scale": [10, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 146, 174, 192, 198, 210, 356, 363, 365, 367, 368, 369, 370, 378, 390, 395, 402], "scientif": 10, "scipi": 98, "scope": 4, "script": 4, "sctype2char": 6, "search": [94, 467, 478], "searchsort": [6, 86, 89, 152, 429, 474], "second": [13, 15, 27, 35, 36, 48, 50, 52, 53, 67, 74, 84, 87, 88, 91, 94, 97, 100, 107, 108, 109, 110, 113, 114, 117, 120, 122, 132, 134, 135, 136, 137, 148, 149, 150, 152, 153, 154, 155, 160, 162, 174, 175, 176, 177, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 221, 222, 225, 339, 343, 347, 410, 414, 432, 436, 438, 443, 445, 456, 462], "section": [4, 91, 109, 114, 119, 123, 474], "see": [3, 33, 91, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 138, 152, 186, 373, 418, 450, 451, 454, 455, 458, 474], "seed": [6, 89, 94, 306, 356], "seek": 140, "seldom": 132, "select": [6, 68, 103, 214, 220, 433, 439, 447, 467], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "self": [89, 91, 127, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 303, 356], "semant": 152, "sens": 197, "sep": [140, 143], "separ": [10, 89, 91, 93, 140, 143, 153, 226, 320], "sequenc": [41, 45, 46, 47, 61, 62, 65, 69, 90, 93, 94, 95, 96, 107, 109, 113, 114, 117, 118, 119, 121, 123, 144, 145, 146, 152, 153, 154, 159, 189, 198, 210, 224, 341, 342, 345, 380, 393, 411, 413, 419, 434, 443, 447, 463, 465, 466], "sequenti": [69, 73, 98, 217, 223, 234], "seri": [10, 117, 372], "set": [10, 29, 30, 34, 44, 59, 72, 80, 81, 83, 86, 89, 91, 93, 95, 144, 152, 153, 156, 159, 188, 190, 191, 198, 214, 220, 227, 228, 236, 281, 291, 292, 303, 323, 341, 342, 348, 422, 424, 425, 437, 450, 454, 465, 466, 474], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 91], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 185, "sh": [89, 320], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 40, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 132, 133, 134, 135, 136, 137, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 180, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 312, 320, 324, 326, 333, 335, 336, 337, 339, 340, 341, 342, 346, 347, 348, 349, 351, 352, 354, 355, 356, 365, 368, 373, 374, 379, 383, 384, 385, 386, 387, 388, 389, 391, 396, 397, 403, 405, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 448, 449, 451, 453, 454, 455, 456, 457, 461, 463, 464, 465, 466, 467, 478], "share": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 448, 450, 454, 460, 465, 466], "shared_bin": 153, "shares_memori": 6, "shift": [10, 107, 109, 110, 114, 115, 175, 414, 416], "short": [457, 474], "shorter": [111, 117], "shorthand": [11, 12, 13, 50, 51, 52, 53, 87, 97, 134, 149, 150, 161, 175, 176, 177, 206, 208, 213, 222, 225, 336, 339, 346, 347, 410, 414, 436, 456, 464], "should": [29, 30, 44, 84, 86, 88, 89, 93, 94, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 137, 140, 147, 152, 186, 187, 213, 224, 227, 228, 231, 233, 291, 322, 373, 412, 421, 439, 443, 445, 459, 474], "show": [9, 36, 91, 124, 155, 209, 218, 226, 229, 230, 231, 233, 236, 394], "show_config": 6, "shown": 4, "shuffl": 6, "side": [89, 148, 183, 322, 421], "sigma": [371, 378], "sign": [6, 10, 15, 67, 91, 162, 180, 193, 222, 336, 346, 348, 410, 425, 437, 457], "signal": [10, 108, 111, 116, 117, 119, 122, 459], "signatur": [212, 213], "signbit": [6, 424], "signific": 93, "signum": 424, "similar": [3, 37, 38, 89, 91, 146, 198, 210, 212, 296, 323, 345, 356, 384, 450, 451, 454, 455], "simpl": [4, 209, 478], "simpli": [82, 89, 140, 152, 153, 333], "sin": [0, 6, 24, 70, 183, 218, 427, 441, 447], "sinc": [6, 89, 117, 181, 183, 325, 338], "sine": [22, 23, 24, 25, 26, 27, 28, 70, 71, 426, 427, 441, 442], "singl": [9, 10, 31, 55, 61, 89, 93, 94, 148, 189, 214, 220, 326, 348, 356, 375, 384, 385, 386, 387, 388, 389, 391, 397, 437, 447, 474], "singleton": [14, 19, 48, 101, 211, 216, 231, 232, 233, 235, 237, 409, 433, 435, 461], "singular": [185, 186, 188, 191, 195], "sinh": [6, 25, 71, 426, 442], "size": [0, 6, 21, 29, 30, 34, 48, 62, 69, 72, 73, 76, 77, 81, 86, 89, 91, 94, 103, 106, 108, 112, 122, 140, 146, 148, 154, 190, 192, 195, 198, 210, 212, 214, 216, 220, 227, 228, 229, 230, 232, 234, 236, 306, 307, 323, 341, 345, 348, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 416, 419, 433, 434, 437, 443, 454, 459, 463, 465], "skip": 84, "slice": [103, 227, 228, 231, 232, 233, 235, 237, 351, 352, 422, 440, 447, 454, 455, 474], "slogdet": [6, 180], "slower": 443, "slowest": [89, 304, 405, 412], "small": [15, 102, 162, 186, 191, 202, 204, 205, 226, 454], "smaller": [85, 89, 106, 107, 109, 112, 113, 114, 116, 118, 119, 120, 121, 123, 125, 186, 222, 314, 345, 410, 459], "smallest": [125, 157, 458], "smallest_norm": 125, "smat": 195, "so": [10, 14, 19, 48, 91, 97, 111, 116, 132, 152, 171, 198, 205, 211, 216, 218, 232, 235, 237, 394, 409, 435, 443, 444, 461], "softwar": 4, "solut": [186, 194], "solv": [6, 186, 196, 197, 478], "some": [21, 91, 101, 103, 133, 160, 186, 345, 459, 464, 474], "sometim": [151, 474], "sometru": 6, "somewhat": 187, "sophist": 187, "sort": [6, 31, 89, 195, 290, 314, 421, 430, 440, 446, 447, 458, 467, 474, 478], "sort_complex": 6, "sorter": [89, 322, 421], "sought": 179, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 59, 60, 61, 62, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 212, 213, 214, 216, 217, 218, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 335, 338, 341, 342, 343, 344, 345, 348, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 411, 412, 413, 416, 417, 421, 422, 423, 428, 429, 430, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466], "space": [6, 21, 108, 110, 122, 140, 146, 148, 198, 210, 447, 482], "spars": [159, 218], "special": [2, 91, 98, 467, 478], "specif": [0, 4, 91, 141], "specifi": [14, 19, 20, 21, 29, 30, 31, 33, 34, 37, 38, 39, 40, 42, 48, 55, 56, 62, 66, 75, 76, 77, 80, 83, 84, 89, 93, 94, 95, 96, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 129, 132, 139, 140, 141, 142, 144, 145, 146, 148, 156, 182, 184, 190, 196, 197, 198, 199, 210, 211, 216, 217, 219, 229, 230, 232, 234, 235, 236, 237, 290, 299, 340, 341, 342, 345, 348, 351, 352, 356, 369, 379, 397, 405, 409, 416, 417, 418, 422, 428, 434, 435, 437, 439, 440, 443, 445, 446, 447, 448, 458, 460, 461, 465, 466], "spectrum": [10, 110, 111, 115, 116], "speed": 93, "speedup": 94, "spell": 338, "split": [6, 62, 90, 154, 419, 434, 463, 478], "spreadsheet": 133, "sqrt": [6, 10, 57, 89, 305, 318, 409, 420, 432], "squar": [6, 57, 155, 156, 178, 179, 181, 182, 183, 185, 186, 187, 193, 196, 197, 212, 235, 237, 360, 376, 408, 409, 420, 422, 431, 435, 451, 455, 460, 461], "squeez": [6, 89, 101, 474], "src": 68, "stabl": [31, 429], "stack": [6, 61, 62, 90, 154, 180, 188, 191, 192, 193, 213, 338, 419, 440, 463], "stand": 148, "standard": [89, 125, 134, 137, 216, 222, 232, 235, 237, 306, 327, 356, 371, 378, 385, 394, 395, 396, 397, 398, 410, 435, 461, 474, 478], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 356, 385], "standard_t": 6, "start": [2, 3, 21, 40, 42, 94, 108, 112, 122, 139, 146, 198, 210, 212, 417, 450, 454], "start_tim": 0, "state": 356, "statist": [467, 478], "std": [6, 89, 216, 232, 235, 237, 461, 474], "stdev": [356, 397], "step": [4, 21, 94, 146, 151, 198, 210], "sticki": 91, "still": 48, "stop": [21, 146, 198, 210], "store": [126, 146, 168, 169, 198, 205, 210, 213, 343], "str": [39, 41, 62, 91, 93, 94, 140, 143, 154, 199, 282, 419, 434, 452, 463], "str_": 91, "straightforward": 159, "stride": [43, 44, 89, 291], "string": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 91, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 452, 454, 460, 465, 466, 474], "string_repr": 94, "stringio": 199, "strongli": [4, 444], "struct": 91, "structur": [91, 199], "student": 398, "style": [44, 89, 291, 338, 405], "sub": [62, 84, 91, 93, 154, 197, 419, 434, 445, 448, 463], "subarrai": [91, 159, 458], "subclass": 38, "subdivid": 91, "subdtyp": 91, "subok": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 67, 70, 71, 78, 79, 87, 89, 96, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 145, 149, 150, 151, 155, 158, 161, 165, 166, 167, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 221, 222, 225, 291, 336, 337, 339, 342, 346, 347, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 431, 432, 436, 441, 442, 456, 457, 466], "subscript": [93, 94], "subset": [3, 148, 433, 478], "subtract": 6, "subtyp": 405, "succeed": 92, "success": [39, 358, 366, 375], "sugar": [82, 451, 455], "suggest": 84, "suit": 4, "suitabl": [32, 89, 333, 352, 421, 440], "sum": [0, 3, 4, 6, 10, 13, 48, 75, 77, 80, 83, 84, 85, 88, 89, 93, 112, 152, 155, 160, 179, 186, 196, 204, 205, 211, 213, 229, 230, 236, 298, 332, 358, 373, 375, 409, 443, 445, 447, 474, 478], "sum_": 10, "sum_along_diagon": 445, "sum_of_weight": 48, "summari": 467, "summat": [88, 93, 94, 160, 197, 213, 343, 443], "suppli": [111, 116, 189, 356, 385], "support": [3, 9, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 37, 38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 67, 69, 70, 71, 73, 78, 79, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 155, 156, 161, 165, 166, 167, 175, 176, 177, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 291, 323, 336, 337, 339, 341, 342, 344, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 410, 412, 414, 420, 424, 425, 426, 429, 431, 432, 435, 436, 437, 441, 442, 456, 457, 461, 465, 466, 482], "surnam": 91, "surpris": [112, 113, 114], "svd": [6, 179, 185, 188, 191], "swap": [91, 107, 110, 438], "swapax": [6, 89, 224, 474], "swapped_cod": 91, "swapped_dt": 91, "sy": 91, "sycl": [0, 3, 21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "sycl_context": 89, "sycl_devic": 89, "sycl_queu": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "sycldevic": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "syclqueu": [21, 34, 37, 38, 39, 40, 41, 42, 44, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 291, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 448, 450, 454, 460, 465, 466], "symmetr": [111, 117, 119, 120, 178, 181, 182, 183, 184, 188, 191, 195], "symmetri": [10, 106, 111, 116, 117, 120], "syntact": [82, 451, 455], "syntax": 474, "sys_is_l": 91, "system": [3, 4, 194], "t": [10, 62, 73, 89, 91, 111, 178, 181, 183, 186, 333, 338, 398, 447], "t1": 482, "tabl": [2, 9, 467], "tack": 91, "take": [6, 61, 89, 103, 212, 345, 352, 412, 421, 422, 440, 458, 459, 474, 482], "take_along_axi": [6, 29, 30, 31, 59, 352, 439], "taken": [48, 84, 85, 92, 94, 111, 117, 118, 119, 120, 121, 123, 151, 152, 213, 235, 237, 422, 435, 445, 448, 450, 454, 461, 462], "tall": 124, "tan": [6, 26, 27, 70, 426, 442], "tangent": [18, 22, 23, 24, 25, 26, 27, 28, 70, 71, 426, 427, 441, 442], "tanh": [6, 28, 71, 427, 441], "target": [44, 56, 89, 291, 351], "target_devic": 89, "tau": 192, "tbb": 4, "tempfil": 140, "temporari": [140, 482], "temporaryfil": 140, "ten": 366, "tensor": [41, 89, 93, 94, 138, 196, 197, 227, 228, 231, 233, 234, 350, 443], "tensordot": [6, 88, 93, 160, 196, 197, 213, 343], "tensorinv": [6, 197], "tensorsolv": [6, 196], "term": [10, 13, 87, 94, 106, 107, 109, 112, 113, 114, 117, 120, 225, 436, 456], "test": [0, 2, 14, 15, 19, 97, 149, 150, 163, 165, 166, 167, 168, 169, 176, 177, 234, 338, 339, 358, 474, 478], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [139, 140, 142, 143, 199], "th": [77, 80, 83, 85, 89, 92, 104, 148, 159, 217, 333, 340, 422, 446, 449, 451, 453, 455], "than": [34, 76, 77, 89, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 130, 131, 134, 141, 149, 150, 152, 153, 154, 175, 176, 177, 186, 188, 191, 192, 229, 230, 234, 236, 314, 338, 345, 348, 414, 422, 424, 433, 434, 437, 443, 445, 457, 459, 474, 482], "thei": [15, 36, 91, 162, 183, 186, 419, 421, 443, 447, 450, 454, 459, 460, 463, 474], "them": [61, 474], "theor": 181, "theoret": 94, "therefor": [106, 120, 141, 182, 184], "theta": 447, "thi": [10, 11, 12, 16, 17, 20, 21, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 60, 62, 66, 72, 75, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 131, 132, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 164, 171, 182, 184, 186, 189, 190, 193, 198, 199, 202, 204, 205, 210, 211, 212, 213, 214, 220, 222, 224, 226, 227, 228, 231, 233, 234, 236, 291, 296, 301, 304, 314, 320, 333, 338, 345, 348, 351, 352, 389, 391, 405, 409, 410, 412, 417, 419, 434, 437, 439, 440, 444, 447, 451, 455, 458, 459, 460, 463, 464], "thing": 439, "third": [61, 62, 90, 107, 154, 419, 434, 463], "those": [10, 60, 187, 352], "though": 112, "thousand": 366, "three": [45, 46, 47, 101, 187, 212, 356, 392, 443, 458], "threshold": 188, "through": [38, 91, 153, 181, 183, 186, 212, 474], "throw": 373, "thu": [10, 111, 117, 119, 444], "tile": [6, 411, 478], "time": [0, 10, 13, 15, 27, 35, 36, 50, 52, 53, 67, 85, 87, 88, 97, 107, 109, 111, 113, 114, 116, 118, 119, 121, 123, 132, 134, 135, 136, 137, 149, 150, 151, 155, 160, 162, 167, 174, 175, 176, 177, 186, 204, 205, 206, 208, 209, 215, 221, 222, 225, 337, 339, 347, 358, 373, 410, 414, 436, 440, 443, 444, 456, 458, 462], "time_dpnp": 0, "time_numpi": 0, "timedelta": 91, "timeit": 93, "timestep": 108, "tini": 125, "titl": 91, "tm": 137, "to_begin": 92, "to_devic": 89, "to_end": 92, "tobyt": 6, "todo": 376, "tofil": [6, 140], "togeth": [15, 62, 91, 112, 162, 434, 464], "tol": [188, 374, 407], "toler": [15, 35, 162, 407], "tolist": 6, "too": [4, 107, 109, 113, 114, 118, 119, 121, 123, 464], "toolkit": 3, "tostr": 6, "total": [6, 72, 76, 89, 311, 428, 435, 461], "toward": [33, 58, 126, 133, 134, 152, 153, 222, 337, 410, 415, 418, 457], "trace": [6, 80, 83, 84, 89, 93, 474], "traceback": [20, 433], "trail": 452, "transfer": 89, "transform": [94, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 467], "transpos": [6, 32, 89, 93, 178, 183, 224, 239, 474, 478], "trapezoid": [77, 437], "trapz": 6, "treat": [15, 111, 117, 119, 140, 148, 162, 182, 184, 186, 189, 199, 229, 230, 234, 236, 348, 352, 421, 440, 444, 458, 459, 474], "tri": 6, "trial": 358, "triangl": [80, 155, 212, 409, 448, 449, 450, 451, 453, 454, 455], "triangular": [6, 178, 182, 184, 192, 212, 450, 451, 454, 455], "trigonometr": [18, 22, 23, 24, 25, 26, 27, 28, 70, 71, 426, 427, 441, 442, 478], "tril": [6, 80, 212, 448, 450, 451, 454], "tril_indic": [6, 212, 451, 454], "tril_indices_from": [6, 455], "trili": 451, "trili1": 451, "trim": [107, 109, 113, 114, 118, 119, 121, 123, 452], "trim_zero": 6, "triu": [6, 80, 212, 448, 450, 454, 455], "triu_indic": [6, 212, 450, 455], "triu_indices_from": [6, 451], "triui": 455, "triuim1": 455, "trivial": [181, 440], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 38, 40, 42, 44, 45, 48, 50, 51, 52, 53, 56, 57, 58, 63, 64, 66, 67, 68, 70, 71, 72, 73, 77, 78, 79, 86, 87, 89, 91, 93, 94, 97, 99, 100, 101, 102, 103, 105, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 146, 149, 150, 151, 152, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 188, 190, 191, 192, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 243, 286, 287, 291, 296, 308, 309, 310, 315, 327, 329, 334, 336, 337, 338, 339, 345, 346, 347, 348, 349, 352, 354, 355, 361, 408, 409, 410, 412, 414, 415, 420, 422, 424, 425, 426, 427, 431, 432, 435, 436, 437, 440, 441, 442, 443, 447, 456, 457, 458, 460, 461, 464], "true_divid": [6, 87], "trunc": [6, 33, 58, 126, 133, 415, 418], "truncat": [33, 58, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 133, 394, 415, 418, 457], "trust": [227, 228], "truth": [50, 51, 52, 53, 97, 149, 150, 161, 176, 177, 206, 207, 208, 209, 339, 474, 478], "try": [4, 39], "tukei": 10, "tup": [61, 90, 154, 419, 463], "tupl": [14, 19, 20, 29, 30, 34, 37, 38, 39, 40, 42, 48, 55, 66, 72, 75, 80, 81, 82, 83, 89, 91, 94, 101, 110, 115, 129, 138, 141, 144, 145, 146, 148, 152, 153, 159, 164, 171, 174, 190, 192, 197, 198, 210, 211, 212, 213, 214, 216, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 323, 333, 338, 340, 348, 409, 411, 412, 416, 423, 433, 435, 437, 444, 446, 450, 451, 454, 455, 460, 461, 474], "turn": 61, "twister": 356, "two": [10, 15, 35, 45, 46, 50, 51, 52, 53, 65, 69, 74, 83, 84, 85, 88, 89, 91, 93, 94, 101, 106, 107, 109, 112, 113, 114, 117, 118, 119, 121, 123, 135, 136, 148, 160, 161, 162, 174, 182, 186, 189, 194, 206, 208, 209, 213, 214, 215, 220, 221, 224, 231, 233, 314, 330, 343, 356, 385, 415, 418, 422, 438, 443, 445, 450, 451, 454, 455, 462], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 300, 304, 312, 320, 324, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 478], "type_nam": 0, "typeerror": [48, 68, 89, 138, 323], "typenam": 6, "typestr": 91, "typic": [15, 111, 162, 421, 474], "u": [91, 178, 182, 184, 195, 212, 234, 236, 458], "u1": [91, 139, 140], "u16": 91, "u4": 56, "u8": 91, "ufunc": [2, 467, 474], "uint64": 91, "uint8": [91, 139, 140], "uk": 10, "un": 91, "unari": 474, "unchang": 123, "undefin": [18, 89, 314], "underli": [50, 52, 53, 412], "undo": [10, 114], "undocu": 91, "unexpect": [234, 236], "unicod": 91, "uniform": [6, 91, 148, 152, 153, 210, 356, 383, 386, 388, 389, 391], "uniformli": [210, 356, 400], "uniniti": [34, 95, 96, 144, 341, 465], "union1d": 6, "uniqu": [6, 48, 49, 75, 86, 91, 211, 216, 224, 232, 235, 237, 409, 411, 435, 461], "unique_count": 458, "unique_indic": 458, "unique_invers": 458, "unit": [89, 108, 122, 181, 187, 193, 328], "unitari": [10, 148, 192, 195], "uniti": 152, "univ": 10, "univers": [2, 467, 474], "unless": [14, 19, 44, 76, 77, 89, 93, 152, 181, 188, 190, 210, 229, 230, 234, 236, 291, 348, 437, 458], "unlik": [31, 89, 122, 320, 323, 429], "unmodifi": 153, "unpackbit": 6, "unravel_index": [6, 29, 30], "unsaf": [44, 56, 62, 68, 89, 93, 154, 213, 291, 419, 434, 463], "unscal": 10, "unsign": [91, 348, 437], "unspecifi": 412, "unsupport": [11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 50, 51, 52, 53, 57, 58, 60, 67, 70, 71, 78, 79, 87, 99, 100, 102, 132, 133, 134, 135, 136, 137, 138, 151, 155, 161, 175, 201, 202, 203, 204, 205, 215, 221, 222, 223, 225, 336, 337, 346, 347, 349, 354, 355, 408, 410, 414, 415, 420, 424, 425, 426, 427, 436, 441, 442, 456, 457], "until": [94, 416, 417], "unwrap": [6, 78, 354], "up": [4, 10, 91, 93, 131, 440, 451, 458], "updat": 4, "uplo": [182, 184], "upon": [89, 328], "upper": [80, 104, 152, 153, 178, 182, 184, 192, 212, 448, 450, 451, 453, 454, 455], "url": 4, "us": [4, 10, 13, 20, 21, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 56, 60, 62, 66, 74, 76, 77, 80, 81, 83, 84, 87, 89, 91, 93, 94, 95, 96, 97, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 160, 161, 175, 176, 177, 178, 179, 182, 183, 184, 186, 188, 189, 190, 191, 198, 199, 205, 206, 208, 210, 212, 213, 214, 216, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 245, 291, 296, 304, 323, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 352, 356, 359, 361, 362, 372, 377, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 397, 400, 405, 407, 410, 411, 412, 414, 416, 421, 422, 424, 430, 435, 436, 437, 439, 440, 443, 444, 445, 447, 448, 450, 451, 454, 455, 456, 458, 460, 461, 464, 465, 466, 474, 482], "usabl": 132, "usag": [3, 4, 108, 122], "use_getitem": 91, "use_setitem": 91, "user": [91, 226], "usm": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 433, 448, 450, 454, 460, 465, 466], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 335, 336, 337, 338, 339, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466], "usm_typ": [21, 34, 37, 38, 39, 40, 41, 42, 66, 80, 81, 83, 89, 95, 96, 104, 108, 122, 139, 140, 141, 142, 143, 144, 145, 146, 156, 159, 198, 199, 210, 212, 219, 296, 340, 341, 342, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 448, 450, 454, 460, 465, 466], "usual": [81, 89, 91, 213, 323], "util": 467, "v": [65, 80, 83, 89, 91, 181, 182, 322, 351, 421], "v0": 6, "v1": 6, "v10": 91, "v9": 6, "val": [89, 124, 127, 281, 316, 345], "valid": [69, 101, 212, 438, 450, 451, 454, 455], "valu": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 85, 86, 87, 89, 91, 93, 95, 96, 97, 99, 100, 102, 103, 104, 105, 111, 112, 117, 119, 120, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 241, 242, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 283, 284, 285, 288, 289, 291, 293, 296, 301, 303, 314, 316, 323, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 366, 383, 384, 400, 406, 408, 409, 410, 411, 412, 414, 415, 416, 418, 420, 421, 422, 424, 425, 426, 429, 431, 432, 435, 436, 437, 439, 440, 441, 442, 445, 447, 450, 454, 456, 457, 458, 459, 461, 464, 465, 466, 474, 478], "value2": 91, "valueerror": [20, 34, 38, 39, 138, 227, 228, 412, 433], "vander": 6, "vandermond": 460, "var": [6, 89, 216, 232, 235, 237, 435, 474], "vararg": 148, "vari": [10, 14, 18, 19, 84, 94, 107, 109, 111, 112, 113, 114, 116, 117, 120, 123, 141, 159, 179, 181, 182, 186, 190, 226, 232, 235, 237, 407], "variabl": [73, 186, 194], "varianc": [89, 216, 232, 235, 237, 334, 435, 461, 478], "variou": 482, "vdot": [6, 88, 213], "vector": [74, 93, 141, 159, 160, 179, 188, 189, 190, 195, 213, 218, 343, 462, 478], "vendor": 4, "veri": [3, 10, 15, 162, 218, 226], "verif": 0, "verifi": 178, "version": [4, 72, 89, 91, 128, 303, 338], "vertic": [61, 62, 84, 90, 124, 129, 130, 154, 419, 434, 463], "vetterlin": 10, "vh": 195, "via": 117, "view": [6, 45, 46, 47, 54, 80, 84, 89, 101, 107, 109, 113, 114, 118, 119, 121, 123, 129, 130, 131, 218, 224, 239, 320, 333, 352, 412, 433, 438, 446], "violat": 68, "void": 91, "void640": 91, "von": 401, "vonmis": 6, "vsplit": [6, 62], "vstack": [6, 61, 62, 90, 154, 186, 419, 434], "w": [10, 48, 181, 182, 183, 184, 187], "wa": [10, 75, 91, 189, 211, 231, 233, 235, 237, 356, 397, 409, 435, 461], "wai": [3, 4, 10, 89, 94, 106, 112, 113, 114, 119, 140, 314, 443], "wald": 6, "walk": 91, "want": [4, 440], "warn": [91, 227, 228, 374], "we": [66, 81, 84, 94, 124, 186, 212, 352, 440, 447], "weibul": [6, 404], "weight": [48, 49, 73, 152, 153, 216, 232, 437], "well": [91, 93, 140, 152, 153, 348, 358, 375, 394], "were": [62, 141, 356, 385, 434, 459], "what": [10, 44, 56, 62, 68, 89, 91, 93, 97, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 154, 163, 213, 291, 358, 375, 419, 434, 463, 474], "when": [10, 20, 21, 34, 35, 37, 38, 40, 42, 43, 44, 48, 66, 68, 86, 89, 91, 93, 106, 117, 119, 120, 135, 136, 146, 151, 181, 190, 192, 198, 205, 210, 212, 213, 222, 229, 230, 231, 233, 234, 236, 291, 410, 415, 417, 418, 422, 439, 443, 447, 458, 464, 482], "whenev": [101, 438, 446], "where": [0, 6, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 68, 70, 71, 75, 78, 79, 80, 81, 83, 85, 86, 87, 89, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 111, 117, 118, 119, 122, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 175, 176, 177, 178, 186, 192, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 222, 225, 231, 232, 233, 234, 235, 236, 237, 286, 287, 291, 296, 308, 309, 310, 315, 322, 327, 329, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 354, 355, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 400, 408, 409, 410, 414, 415, 417, 420, 421, 422, 424, 425, 426, 427, 431, 432, 435, 436, 437, 441, 442, 445, 446, 448, 450, 454, 456, 457, 459, 460, 461, 465, 466], "wherev": 68, "whether": [14, 15, 19, 35, 75, 86, 91, 138, 162, 163, 178, 192, 198, 226, 234, 236, 412, 425, 458], "which": [3, 4, 10, 14, 19, 20, 21, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 44, 48, 54, 62, 66, 68, 72, 75, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 129, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 156, 159, 165, 166, 167, 168, 169, 178, 181, 188, 190, 197, 199, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 291, 296, 338, 340, 341, 342, 348, 351, 356, 378, 383, 384, 385, 386, 387, 388, 389, 391, 397, 400, 409, 411, 416, 422, 428, 429, 433, 434, 435, 437, 439, 445, 446, 447, 448, 449, 450, 453, 454, 457, 459, 460, 461, 464, 465, 466, 474, 482], "whichev": 160, "while": [10, 121, 123, 152, 153, 216, 232, 235, 237, 338, 345, 348, 416, 435, 437, 448, 461], "whitespac": [140, 143], "who": 6, "whole": [107, 109, 113, 114, 118, 119, 121, 123, 450, 454], "whose": [11, 12, 84, 91, 103, 104, 124, 179, 182, 183, 184, 196, 212, 224, 416, 451, 455], "why": 117, "wide": 124, "width": [91, 152, 153], "wild": [358, 375], "window": [4, 108, 122], "wise": [11, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 35, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 67, 70, 71, 75, 87, 89, 90, 97, 99, 100, 102, 105, 126, 132, 133, 134, 135, 136, 137, 149, 150, 151, 154, 155, 158, 161, 162, 165, 166, 167, 168, 169, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 220, 221, 222, 223, 225, 231, 233, 234, 295, 336, 337, 339, 346, 347, 349, 406, 408, 410, 414, 415, 418, 419, 420, 424, 425, 426, 427, 431, 432, 434, 436, 441, 442, 456, 457, 463, 474, 478, 482], "within": [15, 21, 35, 44, 89, 93, 111, 112, 113, 114, 116, 117, 119, 152, 153, 162, 291, 351, 356, 400], "without": [84, 89, 95, 124, 333, 405, 412, 474], "won": 91, "word": [112, 113, 114, 117, 119, 133, 183, 356, 400], "work": [4, 33, 43, 440, 474], "world": [91, 358, 375], "would": [31, 62, 89, 91, 141, 159, 189, 212, 213, 314, 356, 429, 434, 440, 446, 459], "wrap": [78, 89, 124, 316, 331, 351, 354, 421, 439, 440, 459], "wrapper": 89, "write": [80, 84, 89, 124, 140, 304, 412], "written": [72, 75, 124, 140, 211, 409, 464], "x": [0, 3, 4, 11, 12, 14, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 45, 46, 47, 51, 54, 55, 57, 58, 63, 64, 66, 67, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 89, 91, 92, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 121, 122, 123, 126, 127, 128, 133, 139, 140, 141, 142, 144, 145, 146, 148, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 179, 183, 186, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 218, 219, 223, 224, 226, 291, 296, 305, 306, 312, 318, 323, 324, 336, 338, 340, 341, 342, 346, 348, 349, 350, 354, 355, 374, 380, 405, 406, 408, 409, 411, 415, 416, 417, 418, 420, 422, 424, 425, 426, 427, 431, 432, 433, 438, 439, 441, 442, 447, 448, 457, 460, 464, 465, 466], "x0": [40, 42, 66, 83, 342, 460, 466], "x00": 140, "x01": [139, 140], "x02": [139, 140], "x03": [139, 140], "x04": [139, 140], "x05": 139, "x1": [13, 15, 18, 26, 27, 35, 36, 44, 49, 50, 52, 53, 59, 67, 69, 87, 89, 97, 132, 134, 135, 136, 137, 149, 150, 151, 155, 175, 176, 177, 204, 205, 206, 207, 208, 209, 213, 215, 217, 218, 221, 222, 223, 225, 291, 336, 337, 339, 344, 346, 347, 353, 393, 410, 414, 416, 436, 456], "x1_i": [13, 27, 50, 52, 53, 67, 87, 97, 132, 134, 137, 149, 150, 155, 175, 176, 177, 204, 205, 206, 208, 209, 222, 225, 339, 347, 410, 414, 436, 456], "x2": [13, 14, 15, 18, 19, 26, 27, 34, 35, 36, 50, 52, 53, 67, 69, 87, 97, 132, 134, 135, 136, 137, 149, 150, 151, 155, 175, 176, 177, 204, 205, 206, 207, 208, 209, 213, 215, 218, 221, 222, 225, 336, 337, 339, 346, 347, 410, 414, 416, 431, 436, 456], "x2_i": [13, 27, 50, 52, 53, 67, 87, 97, 132, 134, 137, 149, 150, 155, 175, 176, 177, 204, 205, 206, 208, 209, 222, 225, 339, 347, 410, 414, 436, 456], "x3": [14, 19, 132], "x_i": [11, 12, 18, 22, 23, 24, 25, 26, 28, 51, 57, 58, 63, 64, 70, 71, 99, 100, 102, 133, 158, 161, 200, 201, 202, 203, 207, 336, 346, 349, 406, 408, 415, 418, 420, 424, 425, 426, 427, 431, 432, 441, 442, 457], "xi": [203, 218], "xn": 218, "xor": [50, 51, 52, 53, 161, 206, 207, 208, 209], "xv": 218, "xx": 218, "xy": 218, "y": [0, 4, 21, 34, 37, 38, 39, 40, 42, 45, 54, 66, 73, 74, 83, 89, 91, 92, 95, 96, 101, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 148, 156, 168, 169, 179, 186, 198, 199, 210, 218, 219, 223, 226, 296, 312, 320, 323, 340, 341, 342, 447, 448, 460, 464, 465, 466], "yet": [4, 6], "yield": [31, 234, 236, 338, 356, 464, 474], "you": [4, 84, 111, 116, 117, 212, 439, 440, 474, 482], "your": [4, 84, 482], "yv": 218, "yy": 218, "z": [14, 19, 21, 34, 37, 38, 39, 40, 42, 66, 83, 95, 96, 104, 108, 122, 139, 140, 141, 142, 144, 145, 146, 156, 198, 199, 210, 218, 219, 340, 341, 342, 366, 448, 460, 465, 466], "zero": [6, 10, 14, 18, 19, 31, 32, 33, 34, 58, 72, 75, 81, 85, 89, 95, 96, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 133, 140, 144, 145, 156, 158, 163, 164, 168, 169, 170, 171, 175, 181, 182, 184, 186, 187, 188, 191, 195, 211, 212, 214, 216, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 312, 313, 323, 324, 328, 335, 338, 341, 342, 348, 356, 358, 386, 388, 389, 391, 406, 407, 409, 415, 418, 424, 429, 435, 437, 443, 448, 449, 452, 453, 457, 461, 464, 466], "zeros_lik": [6, 34, 79, 96, 145, 342, 355, 465], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 240, "__add__": 241, "__and__": 242, "__bool__": 243, "__complex__": 244, "__copy__": 245, "__eq__": 246, "__float__": 247, "__floordiv__": 248, "__ge__": 249, "__getitem__": 250, "__gt__": 251, "__iadd__": 252, "__iand__": 253, "__ifloordiv__": 254, "__ilshift__": 255, "__imod__": 256, "__imul__": 257, "__int__": 258, "__invert__": 259, "__ior__": 260, "__ipow__": 261, "__irshift__": 262, "__isub__": 263, "__itruediv__": 264, "__ixor__": 265, "__le__": 266, "__len__": 267, "__lshift__": 268, "__lt__": 269, "__matmul__": 270, "__mod__": 271, "__mul__": 272, "__ne__": 273, "__neg__": 274, "__new__": 275, "__or__": 276, "__pos__": 277, "__pow__": 278, "__repr__": 279, "__rshift__": 280, "__setitem__": 281, "__str__": 282, "__sub__": 283, "__truediv__": 284, "__xor__": 285, "ab": 11, "absolut": 12, "ad": 471, "add": 13, "algebra": [6, 469], "all": [14, 286], "allclos": 15, "amax": 16, "amin": 17, "angl": 18, "ani": [19, 287], "api": [1, 467], "append": 20, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 288], "argmin": [30, 289], "argsort": [31, 290], "argwher": 32, "arithmet": [472, 474, 476], "around": 33, "arrai": [6, 7, 9, 34, 468, 470, 471, 474], "array_equ": 35, "array_equiv": 36, "asanyarrai": 37, "asarrai": 38, "asarray_chkfinit": 39, "ascontiguousarrai": 40, "asfarrai": 41, "asfortranarrai": 42, "asnumpi": 43, "astyp": [44, 291], "atleast_1d": 45, "atleast_2d": 46, "atleast_3d": 47, "attribut": 474, "avail": [9, 482], "averag": [48, 481], "backend": 1, "background": 10, "basic": [471, 476], "beta": 357, "binari": 5, "bincount": 49, "binomi": 358, "bit": [5, 482], "bitwise_and": 50, "bitwise_not": 51, "bitwise_or": 52, "bitwise_xor": 53, "broadcast_arrai": 54, "broadcast_to": 55, "build": [4, 7], "byte": 359, "c": 1, "calcul": 474, "can_cast": 56, "cbrt": 57, "ceil": 58, "chang": 471, "channel": 4, "chisquar": 360, "choic": 361, "choleski": 178, "choos": [59, 292], "class": 7, "clip": [60, 293], "co": 70, "column_stack": 61, "comparison": [6, 470, 474, 482], "complex": 472, "concaten": 62, "cond": 179, "conda": 4, "conj": [63, 294], "conjug": [64, 295], "construct": 474, "control": 0, "convers": 474, "convolv": 65, "copi": [66, 296], "copysign": 67, "copyto": 68, "correl": [69, 481], "cosh": 71, "count": 479, "count_nonzero": 72, "cov": 73, "creat": 8, "creation": 7, "cross": 74, "cumlogsumexp": 75, "cumprod": [76, 297], "cumsum": [77, 298], "cupi": 6, "data": [0, 2, 7, 8, 9, 468, 474, 477], "decomposit": 469, "deg2rad": 78, "degre": 79, "det": 180, "detail": 10, "develop": 2, "devic": 4, "diag": 80, "diag_indic": 81, "diag_indices_from": 82, "diagflat": 83, "diagon": [84, 299], "diff": 85, "differ": 472, "digit": 86, "dimens": [10, 471], "dimension": [6, 474], "dirichlet": 362, "discret": 6, "distribut": 477, "divid": 87, "dot": 88, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 477], "dpnp_arrai": 89, "driver": 4, "dstack": 90, "dtype": [91, 300], "ediff1d": 92, "eig": 181, "eigenvalu": 469, "eigh": 182, "eigval": 183, "eigvalsh": 184, "einsum": 93, "einsum_path": 94, "element": [5, 471], "empti": 95, "empty_lik": 96, "equal": 97, "equat": 469, "erf": 98, "error": 480, "exampl": [0, 4], "exist": 7, "exp": 99, "exp2": 100, "expand_dim": 101, "expm1": 102, "expon": 472, "exponenti": 363, "extens": 2, "extract": 103, "extrema": 472, "ey": 104, "f": 364, "fab": 105, "fft": [10, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "fft2": 107, "fftfreq": 108, "fftn": 109, "fftshift": 110, "fill": 301, "fill_diagon": 124, "find": 472, "finfo": 125, "fix": 126, "flag": 302, "flat": 303, "flatit": 127, "flatnonzero": 128, "flatten": 304, "flip": 129, "fliplr": 130, "flipud": 131, "float": [472, 482], "float_pow": 132, "floor": 133, "floor_divid": 134, "fmax": 135, "fmin": 136, "fmod": 137, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 138, "frombuff": 139, "fromfil": 140, "fromfunct": 141, "fromit": 142, "fromstr": 143, "full": 144, "full_lik": 145, "function": [10, 470, 472, 480, 481, 482], "gamma": 365, "gener": [468, 477], "geometr": 366, "geomspac": 146, "get_includ": 147, "gradient": 148, "greater": 149, "greater_equ": 150, "guid": 4, "gumbel": 367, "handl": 472, "heavisid": 151, "helper": 10, "hermitian": 10, "hfft": 111, "higher": 10, "histogram": [152, 481], "histogram_bin_edg": 153, "hstack": 154, "hyperbol": 472, "hypergeometr": 368, "hypot": 155, "ident": 156, "ifft": 112, "ifft2": 113, "ifftn": 114, "ifftshift": 115, "ihfft": 116, "iinfo": 157, "imag": [158, 305], "implement": 10, "index": [468, 474], "indic": 159, "infin": 470, "inform": [2, 8, 10], "inner": 160, "insert": 468, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 185, "invert": 161, "irfft": 117, "irfft2": 118, "irfftn": 119, "isclos": 162, "iscomplex": 163, "iscomplexobj": 164, "isfinit": 165, "isinf": 166, "isnan": 167, "isneginf": 168, "isposinf": 169, "isreal": 170, "isrealobj": 171, "isscalar": 172, "issubdtyp": 173, "item": [306, 474], "items": 307, "iter": 468, "join": 471, "kind": 471, "kron": 174, "laplac": 369, "layout": 474, "left_shift": 175, "less": 176, "less_equ": 177, "level": 6, "librari": 0, "like": [468, 471], "linalg": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "linear": [6, 469], "linspac": 198, "loadtxt": 199, "log": 200, "log10": 201, "log1p": 202, "log2": 203, "logaddexp": 204, "logaddexp2": 205, "logarithm": 472, "logic": 470, "logical_and": 206, "logical_not": 207, "logical_or": 208, "logical_xor": 209, "logist": 370, "lognorm": 371, "logseri": 372, "logspac": 210, "logsumexp": 211, "lstsq": 186, "manipul": [471, 474], "mask_indic": 212, "math": 482, "mathemat": 472, "matmul": 213, "matric": 7, "matrix": [7, 469, 474], "matrix_pow": 187, "matrix_rank": 188, "max": [214, 308], "maximum": 215, "mean": [216, 309], "median": 217, "memori": 474, "meshgrid": 218, "method": 474, "mgrid": 219, "min": [220, 310], "minimum": 221, "miscellan": [8, 472, 473], "mod": 222, "modf": 223, "modul": [6, 476], "moveaxi": 224, "multi": [6, 474], "multi_dot": 189, "multinomi": 373, "multipl": 474, "multipli": 225, "multivariate_norm": 374, "nan": 470, "nan_to_num": 226, "nanargmax": 227, "nanargmin": 228, "nancumprod": 229, "nancumsum": 230, "nanmax": 231, "nanmean": 232, "nanmin": 233, "nanprod": 234, "nanstd": 235, "nansum": 236, "nanvar": 237, "nbyte": 311, "ndarrai": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 474], "ndim": [312, 335], "neg": 336, "negative_binomi": 375, "nextaft": 337, "noncentral_chisquar": 376, "noncentral_f": 377, "nonzero": [313, 338], "norm": [190, 469], "normal": [10, 378], "not_equ": 339, "number": [469, 471, 472], "numer": 7, "numpi": [2, 6], "ogrid": 340, "ones": 341, "ones_lik": 342, "oper": [5, 468, 470, 471, 472, 474, 482], "order": 481, "other": [469, 472, 474], "outer": 343, "output": 5, "over": 468, "overview": 3, "pack": 5, "packag": [4, 476], "pad": 475, "parallel": [0, 2], "pareto": 379, "partit": [314, 344], "permut": [380, 477], "pinv": 191, "place": 345, "point": 472, "poisson": 381, "poly1d": 476, "polynomi": 476, "polyutil": 476, "posit": 346, "power": [347, 382], "prod": [315, 348], "product": [469, 472], "proj": 349, "promot": 10, "ptp": 350, "put": [316, 351], "put_along_axi": 352, "putmask": 353, "python": 4, "qr": 192, "quick": 4, "r": 4, "rad2deg": 354, "radian": 355, "rand": 383, "randint": 384, "randn": 385, "random": [6, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 477], "random_integ": 387, "random_sampl": 388, "randomst": 356, "ranf": 389, "rang": 7, "ration": 472, "ravel": [317, 405], "rayleigh": 390, "real": [10, 318, 406], "real_if_clos": 407, "rearrang": 471, "reciproc": 408, "reduce_hypot": 409, "refer": [1, 467], "remaind": 410, "remov": 471, "repeat": [319, 411], "reshap": [320, 412], "result_typ": 413, "rfft": 120, "rfft2": 121, "rfftfreq": 122, "rfftn": 123, "right_shift": 414, "rint": 415, "roll": 416, "rollaxi": 417, "round": [321, 418, 472], "routin": [7, 8, 10, 468, 471, 472, 473, 478], "row_stack": 419, "rsqrt": 420, "sampl": [6, 391, 477], "scikit": 4, "search": 479, "searchsort": [322, 421], "seed": 392, "select": [422, 474], "shape": [7, 323, 423, 471, 474], "shuffl": 393, "sign": 424, "signbit": 425, "simpl": 477, "sin": 426, "sinh": 427, "size": [324, 428], "slogdet": 193, "solv": [194, 469], "sort": [325, 429, 479], "sort_complex": 430, "special": [472, 474, 480], "split": 471, "sqrt": 431, "squar": 432, "squeez": [326, 433], "stack": 434, "standard": 10, "standard_cauchi": 394, "standard_exponenti": 395, "standard_gamma": 396, "standard_norm": 397, "standard_t": 398, "start": 4, "statist": 481, "std": [327, 435], "stride": 328, "subtract": 436, "sum": [329, 437, 472], "summari": 6, "svd": 195, "swapax": [330, 438], "t": 239, "tabl": 6, "take": [331, 439], "take_along_axi": 440, "tan": 441, "tanh": 442, "tensordot": 443, "tensorinv": 196, "tensorsolv": 197, "test": [4, 8, 470], "tile": [444, 471], "trace": [332, 445], "transform": [6, 10], "transpos": [333, 446, 471], "trapezoid": 447, "tri": 448, "triangular": 399, "trigonometr": [472, 482], "tril": 449, "tril_indic": 450, "tril_indices_from": 451, "trim_zero": 452, "triu": 453, "triu_indic": 454, "triu_indices_from": 455, "true_divid": 456, "trunc": 457, "truth": 470, "twiddl": 482, "type": [8, 9, 10, 470, 474], "ufunc": 482, "uniform": 400, "uniqu": 458, "univers": 482, "unwrap": 459, "util": 473, "valu": [7, 470], "vander": 460, "var": [334, 461], "varianc": 481, "vdot": 462, "vector": 469, "vonmis": 401, "vstack": 463, "wald": 402, "weibul": 403, "where": 464, "wise": 5, "zero": 465, "zeros_lik": 466, "zipf": 404}})