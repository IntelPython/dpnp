Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "install", "reference/binary", "reference/comparison", "reference/creation", "reference/difference", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round_", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.sign", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.triu", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "install.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/difference.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round_.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["DPCtl Usage", "C++ backend API Reference", "DPNP \u2013 A NumPy-compatible library for SYCL-based devices", "Installation Guide", "Binary Operations", "Comparison Table", "Array Creation Routines", "Difference between DPNP and NumPy", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_to", "dpnp.cbrt", "dpnp.ceil", "dpnp.concatenate", "dpnp.conj", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diagflat", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.fromfile", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.power", "dpnp.prod", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.right_shift", "dpnp.rollaxis", "dpnp.round_", "dpnp.searchsorted", "dpnp.sign", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.triu", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 2, 5, 69, 182, 210, 213, 261, 269, 286], "api": [0, 2, 3, 5, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 250], "manag": 0, "specif": 0, "sycl": [0, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "resourc": 0, "base": [0, 3, 109, 140, 142, 145, 150, 178], "python": [0, 2, 69, 250], "packag": [0, 282], "dpnp": [0, 1, 5, 272, 275, 278, 282, 283, 286], "us": [0, 3, 27, 69, 75, 79, 101, 106, 109, 112, 113, 127, 128, 129, 141, 146, 148, 150, 156, 171, 172, 182, 185, 187, 188, 198, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 223, 226, 235, 257], "global": 0, "queue": [0, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "below": [0, 136, 138, 258, 260], "code": 0, "illustr": 0, "simpl": [0, 149, 282], "combin": [0, 79], "import": [0, 2, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 101, 102, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 207, 216, 220, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271], "np": [0, 2, 9, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 43, 44, 46, 47, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 101, 102, 105, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 179, 181, 207, 216, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 257, 258, 259, 260, 262, 263, 264, 265, 266, 270, 271], "device_context": 0, "opencl": 0, "gpu": [0, 2], "x": [0, 2, 9, 10, 12, 16, 18, 19, 20, 21, 22, 24, 27, 29, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 64, 69, 70, 73, 74, 76, 77, 78, 79, 80, 82, 101, 102, 105, 107, 108, 109, 111, 118, 119, 121, 122, 123, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 159, 161, 162, 164, 165, 170, 171, 174, 175, 176, 178, 200, 206, 231, 232, 233, 234, 235, 240, 241, 242, 244, 245, 246, 250, 251, 252, 253, 254, 257, 262, 263, 265, 269, 270, 271], "arrai": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 90, 91, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 282], "1": [0, 2, 3, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 31, 32, 33, 36, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 108, 109, 111, 113, 114, 117, 118, 120, 126, 127, 128, 132, 134, 137, 138, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 186, 187, 189, 191, 193, 195, 196, 197, 199, 200, 201, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 221, 223, 226, 231, 232, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271], "2": [0, 2, 9, 10, 11, 17, 19, 21, 25, 26, 27, 28, 29, 31, 32, 33, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 81, 82, 84, 90, 95, 98, 101, 102, 105, 111, 112, 113, 114, 118, 126, 127, 128, 132, 134, 137, 138, 140, 141, 142, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 186, 190, 194, 200, 206, 209, 211, 222, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271], "3": [0, 2, 5, 11, 17, 18, 25, 26, 27, 28, 29, 31, 32, 33, 39, 41, 44, 45, 46, 48, 50, 51, 54, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 74, 75, 76, 77, 78, 80, 101, 105, 111, 114, 116, 117, 118, 126, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 167, 171, 172, 173, 175, 176, 178, 179, 182, 186, 190, 197, 200, 206, 209, 210, 211, 221, 225, 228, 231, 232, 233, 234, 235, 236, 237, 243, 244, 246, 248, 249, 250, 251, 254, 256, 257, 258, 259, 260, 263, 264, 265, 266, 269, 271], "": [0, 2, 69, 84, 86, 90, 91, 95, 96, 98, 100, 136, 138, 140, 182, 183, 184, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 278], "sum": [0, 2, 5, 11, 61, 68, 69, 114, 151, 165, 167, 184, 199, 201, 255, 282], "For": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 278], "more": [0, 29, 136, 137, 259, 260], "inform": [0, 69], "pleas": [0, 2, 278], "refer": [0, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 278], "document": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 278], "time": [0, 11, 41, 43, 44, 67, 68, 75, 112, 113, 123, 126, 127, 128, 146, 148, 149, 163, 172, 176, 178, 184, 199, 236, 249], "try": 0, "except": [0, 69, 235], "importerror": 0, "o": 0, "sy": 0, "path": 0, "insert": [0, 5, 79, 239], "0": [0, 5, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 40, 42, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 63, 64, 65, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 99, 101, 102, 105, 108, 109, 111, 114, 116, 117, 118, 119, 121, 122, 123, 132, 134, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 156, 157, 158, 161, 162, 164, 165, 168, 171, 173, 174, 175, 181, 182, 184, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 204, 206, 207, 208, 209, 212, 214, 215, 216, 217, 220, 223, 225, 226, 227, 232, 233, 234, 237, 238, 240, 241, 242, 245, 246, 247, 248, 250, 251, 253, 255, 256, 257, 258, 259, 260, 262, 264, 266, 269, 270, 271], "abspath": 0, "numpi": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 282], "def": 0, "run": 0, "executor": 0, "size": [0, 5, 29, 54, 58, 59, 69, 109, 138, 141, 150, 174, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 246, 248, 266, 270], "test_typ": 0, "repetit": 0, "reshap": [0, 5, 25, 26, 33, 64, 69, 79, 152, 158, 206], "arang": [0, 5, 25, 26, 33, 39, 40, 63, 64, 69, 75, 77, 78, 80, 108, 109, 114, 141, 143, 144, 146, 147, 148, 149, 150, 152, 156, 158, 172, 175, 181, 206, 269, 271], "dtype": [0, 7, 10, 11, 17, 23, 29, 31, 32, 33, 34, 41, 42, 43, 44, 48, 52, 55, 58, 67, 69, 73, 74, 75, 81, 102, 105, 107, 108, 109, 111, 112, 113, 116, 117, 119, 126, 127, 128, 140, 141, 142, 146, 147, 148, 149, 150, 153, 154, 159, 163, 168, 172, 174, 175, 178, 179, 182, 204, 210, 226, 233, 236, 241, 244, 245, 248, 249, 250, 255, 258, 266, 270, 271], "_": 0, "rang": [0, 114, 201, 206, 264, 282], "start_tim": 0, "perf_count": 0, "result": [0, 9, 10, 11, 41, 42, 43, 44, 47, 52, 59, 60, 61, 67, 69, 70, 82, 101, 102, 105, 111, 118, 119, 121, 122, 123, 126, 138, 146, 147, 148, 149, 153, 159, 161, 163, 164, 165, 170, 176, 178, 182, 184, 214, 233, 235, 236, 240, 249, 250, 254, 262], "end_tim": 0, "append": [0, 5, 66], "return": [0, 10, 11, 13, 14, 15, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 81, 101, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 152, 154, 156, 158, 161, 162, 163, 164, 165, 171, 172, 174, 175, 176, 177, 178, 182, 185, 204, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 230, 231, 232, 233, 235, 236, 240, 241, 243, 244, 245, 246, 249, 250, 254, 255, 256, 259, 260, 267, 269, 270, 271], "median": [0, 5], "test_repetit": 0, "5": [0, 5, 12, 17, 24, 25, 28, 33, 39, 40, 41, 43, 44, 47, 48, 50, 54, 57, 59, 60, 61, 64, 67, 69, 70, 76, 101, 105, 109, 111, 114, 116, 126, 132, 141, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 171, 173, 174, 175, 178, 182, 183, 184, 186, 189, 201, 205, 206, 207, 208, 211, 214, 229, 231, 232, 235, 236, 237, 240, 250, 254, 256, 258, 259, 260, 262, 264, 265, 269, 270, 271], "float64": [0, 7, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 106, 182, 183, 186, 189, 190, 191, 193, 195, 196, 197, 204, 205, 208, 209, 211, 212, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 258], "float32": [0, 7, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 106, 182, 204, 209, 211, 212, 214, 215, 217, 223, 226], "int64": [0, 7, 41, 42, 43, 44, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 106, 119], "int32": [0, 7, 41, 42, 43, 44, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 106, 119, 182, 184, 192, 194, 199, 201, 207, 210, 226], "type_nam": 0, "name": [0, 5], "print": [0, 11, 29, 32, 40, 48, 50, 67, 73, 114, 163, 182, 201, 206, 249, 263], "f": [0, 5, 69, 73, 74, 81, 107, 108, 174, 175, 203, 235, 270, 271], "test": [0, 12, 16, 121, 122, 123, 184, 282], "data": [0, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 69, 70, 75, 76, 77, 78, 80, 82, 101, 102, 105, 106, 111, 112, 113, 116, 119, 120, 121, 122, 123, 126, 127, 128, 132, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 176, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 262, 264, 266, 269, 272, 282], "type": [0, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 82, 101, 102, 105, 106, 107, 108, 111, 112, 113, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 262, 264, 266, 269, 270, 271, 272, 282], "i": [0, 2, 3, 5, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 111, 116, 117, 119, 120, 121, 122, 123, 124, 126, 129, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 161, 162, 164, 165, 166, 167, 168, 170, 171, 174, 175, 177, 179, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 264, 266, 269, 270, 271, 272, 278], "each": [0, 10, 40, 55, 69, 132, 133, 156, 184, 201, 241, 244], "64": [0, 28], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 10, 11, 12, 13, 16, 23, 29, 30, 41, 42, 43, 44, 51, 52, 53, 55, 58, 67, 69, 75, 79, 102, 105, 109, 112, 113, 114, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 136, 138, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 163, 172, 178, 179, 187, 233, 235, 236, 241, 244, 245, 249, 250, 261, 265, 269], "els": 0, "msg": 0, "n": [0, 66, 70, 81, 83, 85, 86, 88, 89, 91, 93, 94, 96, 97, 99, 100, 117, 136, 138, 156, 184, 199, 201, 211, 221, 245, 258, 265], "4": [0, 11, 12, 17, 28, 29, 33, 39, 41, 43, 48, 50, 55, 59, 60, 61, 64, 65, 67, 69, 70, 73, 75, 78, 102, 105, 107, 109, 111, 112, 113, 114, 116, 128, 141, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 171, 173, 175, 178, 179, 182, 183, 186, 206, 211, 227, 231, 233, 234, 235, 237, 240, 243, 244, 248, 249, 250, 254, 256, 257, 259, 260, 265, 266, 269, 271], "3e": 0, "ratio": 0, "6": [0, 11, 17, 25, 26, 28, 33, 43, 44, 48, 52, 59, 60, 61, 63, 64, 67, 69, 70, 75, 80, 82, 108, 140, 141, 150, 164, 165, 171, 175, 181, 182, 199, 201, 206, 211, 231, 235, 237, 250, 254, 257, 259, 260, 264, 269, 271], "2f": 0, "__name__": 0, "__main__": 0, "gpu_queu": 0, "get_sycl_devic": [0, 182], "dump_device_info": 0, "like": [2, 17, 29, 32, 73, 81, 107, 117, 174, 182, 226, 235, 270, 282], "acceler": 2, "intel": [2, 3], "It": 2, "interfac": 2, "mani": 2, "function": [2, 10, 11, 12, 13, 14, 15, 16, 17, 23, 25, 26, 27, 28, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 134, 137, 138, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 185, 187, 188, 198, 203, 219, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 257, 259, 260, 261, 262, 266, 267, 269, 270, 271, 272, 282], "includ": [2, 150, 182, 226], "subset": [2, 246, 282], "method": [2, 69, 106, 136, 182, 235, 256], "ndarrai": [2, 5, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 75, 76, 77, 78, 80, 82, 101, 102, 105, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 181, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 264, 266, 269, 272], "under": [2, 138], "hood": 2, "nativ": 2, "c": [2, 3, 29, 31, 32, 33, 35, 51, 69, 73, 74, 81, 107, 108, 110, 151, 174, 175, 231, 235, 270, 271], "onemkl": 2, "kernel": 2, "Being": 2, "drop": 2, "replac": [2, 34, 187], "its": [2, 5, 49, 69, 83, 89, 116, 132, 133, 219, 235, 256], "usag": 2, "veri": [2, 156], "similar": [2, 31, 32, 109, 141, 150, 182, 210], "The": [2, 3, 11, 14, 15, 17, 25, 26, 49, 55, 58, 67, 69, 70, 75, 79, 112, 113, 117, 127, 128, 132, 133, 137, 138, 142, 146, 148, 162, 163, 172, 178, 182, 185, 187, 188, 198, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 235, 241, 249, 250, 269, 282], "class": [2, 69, 182, 210, 244, 245, 258], "altern": [2, 151], "abov": [2, 259], "exampl": [2, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 101, 102, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271], "an": [2, 10, 14, 15, 17, 25, 26, 27, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 48, 51, 69, 70, 71, 72, 73, 74, 75, 79, 106, 108, 111, 119, 126, 130, 136, 138, 152, 154, 161, 162, 173, 174, 175, 177, 178, 182, 184, 189, 190, 192, 201, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 230, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 250, 251, 256, 258, 259, 260, 263, 269, 270, 271], "instanc": [2, 69, 156, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "creat": [2, 29, 31, 32, 65, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "ident": [2, 5, 221], "one": [2, 29, 34, 36, 50, 53, 54, 69, 73, 75, 83, 85, 88, 89, 93, 94, 97, 99, 107, 138, 142, 145, 156, 164, 175, 201, 246, 270], "kei": [2, 27, 69, 243], "differ": [2, 66, 69, 70, 133, 138, 151, 249, 272, 282], "from": [2, 25, 26, 27, 31, 32, 53, 62, 63, 69, 78, 106, 156, 173, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 245, 246, 264, 269, 282], "memori": [2, 31, 32, 33, 69, 235], "alloc": [2, 162, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 246], "when": [2, 69, 138, 150, 269], "set": [2, 29, 69, 73, 107, 136, 138, 174, 175, 270, 271], "up": 2, "dpnp_queue_gpu": 2, "environ": 2, "most": [2, 246], "manipul": [2, 272, 282], "ar": [2, 3, 7, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 39, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 82, 101, 102, 105, 106, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 176, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 210, 213, 214, 216, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 262, 264, 266, 269], "also": [2, 79, 220], "done": 2, "wai": [2, 69, 106], "see": [2, 69, 138, 199, 238], "complet": 2, "list": [2, 5, 69, 234], "support": [2, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 264, 266, 269, 270, 271, 286], "along": [2, 12, 14, 15, 16, 25, 26, 39, 48, 60, 61, 66, 69, 70, 118, 138, 152, 154, 155, 158, 164, 165, 168, 237, 247, 248, 254, 255, 257, 266], "limit": [2, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 210, 213, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 264, 266, 269, 270, 271], "instal": 2, "guid": 2, "requir": [2, 5, 33, 69], "conda": 2, "forg": 2, "sourc": [2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "multi": [2, 69, 84, 86, 90, 91, 95, 96, 98, 100, 157, 173, 272], "dimension": [2, 36, 50, 54, 65, 69, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 156, 157, 173, 250, 272], "univers": [2, 272], "ufunc": [2, 272], "routin": [2, 272], "special": [2, 76, 272, 282], "between": [2, 70, 133, 199, 213, 264, 272], "comparison": [2, 75, 112, 113, 127, 128, 172, 272, 282], "tabl": [2, 138, 272], "miscellan": [2, 272, 282], "backend": [2, 110, 185, 187, 188, 198, 203, 219], "dpctl": [2, 10, 11, 41, 42, 43, 44, 45, 55, 67, 68, 69, 74, 75, 108, 112, 113, 119, 126, 127, 128, 132, 142, 146, 147, 148, 149, 154, 156, 162, 163, 171, 172, 175, 176, 178, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 236, 241, 244, 245, 246, 249, 250, 256, 259, 260, 269, 271], "follow": [3, 7, 79, 282], "linux": 3, "distribut": [3, 150, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 282], "recommend": [3, 171], "ubuntu": 3, "20": [3, 5, 126, 184, 199], "04": 3, "lt": 3, "x86_64": 3, "These": [3, 79, 282], "compon": [3, 87, 92], "must": [3, 45, 69, 129, 137, 138], "v3": 3, "compat": [3, 235, 282], "18": [3, 5, 70], "you": 3, "can": [3, 11, 41, 43, 44, 67, 68, 69, 75, 106, 112, 113, 126, 127, 128, 146, 148, 149, 163, 171, 172, 176, 178, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 235, 236, 249], "anaconda": 3, "channel": 3, "latest": 3, "develop": 3, "version": [3, 69, 171], "clone": 3, "git": 3, "repositori": 3, "recurs": 3, "http": 3, "github": 3, "com": 3, "intelpython": 3, "cd": 3, "script": 3, "build_loc": 3, "py": 3, "To": 3, "build": 3, "tree": 3, "download": 3, "need": [3, 69], "oneapi": [3, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "toolkit": 3, "cython": 3, "pip": 3, "here": 5, "correspond": [5, 25, 26, 69, 132, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "implement": 5, "column": [5, 31, 32, 33, 69, 115, 132, 137], "mean": [5, 39, 69, 138, 155, 182, 195, 197, 200, 204, 223, 227, 228, 235, 248, 266, 282], "yet": 5, "v1": 5, "23": [5, 182], "v0": 5, "12": [5, 25, 26, 206, 259, 260], "1dev0": 5, "cupi": 5, "v8": 5, "397": 5, "208": 5, "286": 5, "56": 5, "29": 5, "47": 5, "13": [5, 25, 26, 42, 69, 119, 165], "16": [5, 41, 111, 163, 178, 252], "21": [5, 61], "51": 5, "48": [5, 164], "total": [5, 69], "545": 5, "316": [5, 150], "415": 5, "ab": [5, 10, 82], "absolut": [5, 9, 82], "add": 5, "add_docstr": 5, "add_newdoc": 5, "add_newdoc_ufunc": 5, "all": [5, 16, 30, 69, 77, 129, 184, 244, 246], "allclos": [5, 30, 120, 140], "alltru": 5, "amax": [5, 15, 25], "amin": [5, 14, 26], "angl": [5, 22, 23, 62, 63, 180, 181, 264], "ani": [5, 12, 14, 15, 69, 182, 226, 244], "apply_along_axi": 5, "apply_over_ax": 5, "arcco": [5, 20], "arccosh": 5, "arcsin": [5, 18, 241], "arcsinh": [5, 19], "arctan": [5, 18, 20, 23], "arctan2": [5, 20, 22], "arctanh": [5, 19], "argmax": [5, 14, 26, 69], "argmin": [5, 15, 25, 69], "argpartit": [5, 27], "argsort": [5, 69, 243, 256], "argwher": 5, "around": [5, 69, 238], "array2str": 5, "array_equ": 5, "array_equiv": [5, 30], "array_repr": 5, "array_split": 5, "array_str": 5, "asanyarrai": [5, 32], "asarrai": [5, 31, 35], "asarray_chkfinit": [5, 31, 32], "ascontiguousarrai": [5, 31, 32], "asfarrai": [5, 31, 32], "asfortranarrai": [5, 31, 32, 33], "asmatrix": 5, "atleast_1d": [5, 79], "atleast_2d": [5, 79], "atleast_3d": [5, 79], "averag": [5, 69, 154], "bartlett": 5, "base_repr": 5, "binary_repr": 5, "bincount": 5, "bitwise_and": [5, 42, 43, 44, 119, 146], "bitwise_not": 5, "bitwise_or": [5, 41, 42, 44, 119, 148], "bitwise_xor": [5, 41, 42, 43, 119, 149], "blackman": 5, "block": 5, "bmat": 5, "broadcast_arrai": 5, "broadcast_shap": 5, "broadcast_to": 5, "busday_count": 5, "busday_offset": 5, "byte_bound": 5, "can_cast": 5, "cbrt": 5, "ceil": [5, 101, 102, 262], "choos": [5, 20, 22, 23, 69], "clip": 5, "column_stack": 5, "common_typ": 5, "compare_chararrai": 5, "compress": 5, "concaten": 5, "conj": [5, 69], "conjug": [5, 49, 68, 69, 129, 132, 151], "convolv": [5, 54], "copi": [5, 29, 53, 69, 156, 177, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 235, 243, 246, 259, 260], "copysign": 5, "copyto": 5, "corrcoef": [5, 58], "correl": [5, 282], "co": [5, 18, 20, 241], "cosh": [5, 19], "count_nonzero": [5, 171], "cov": [5, 200], "cross": [5, 54], "cumprod": [5, 164], "cumproduct": 5, "cumsum": [5, 69, 165], "datetime_as_str": 5, "datetime_data": 5, "deg2rad": [5, 180, 181, 264], "degre": [5, 62, 180, 181, 224, 264], "delet": 5, "deprec": 5, "deprecate_with_doc": 5, "diag": [5, 140], "diag_indic": 5, "diag_indices_from": 5, "diagflat": 5, "diagon": [5, 64, 65, 69, 81, 117, 129, 255, 258, 259, 260], "diff": [5, 70, 114], "digit": 5, "disp": 5, "divid": [5, 102, 105, 134, 160, 233, 261], "divmod": 5, "dot": [5, 69, 71, 72, 118, 135, 137, 140, 151, 254, 267], "dsplit": 5, "dstack": 5, "ediff1d": 5, "einsum": [5, 72, 118, 151, 176, 254], "einsum_path": [5, 71], "empti": [5, 29, 69, 74, 107, 108, 154, 174, 175, 270, 271], "empty_lik": [5, 29, 73, 108, 175, 271], "equal": [5, 12, 13, 16, 30, 53, 54, 58, 69, 102, 112, 113, 120, 127, 128, 134, 172, 182, 192, 226, 233, 243, 246], "exp": [5, 142, 144], "exp2": [5, 77], "expand_dim": [5, 25, 26], "expm1": [5, 77, 144], "extract": [5, 64], "ey": [5, 49, 149], "fab": 5, "fastcopyandtranspos": 5, "fill_diagon": 5, "find_common_typ": 5, "fix": 5, "flatnonzero": [5, 171], "flip": [5, 184], "fliplr": 5, "flipud": 5, "float_pow": 5, "floor": [5, 47, 102, 233, 262], "floor_divid": [5, 105, 160], "fmax": [5, 14, 15, 104, 153, 159, 178], "fmin": [5, 14, 15, 103, 153, 159, 178], "fmod": [5, 103, 104, 153, 159, 160, 178, 233], "format_float_posit": 5, "format_float_scientif": 5, "frexp": 5, "from_dlpack": 5, "frombuff": 5, "fromfil": 5, "fromfunct": [5, 31, 32], "fromit": [5, 31, 32], "frompyfunc": 5, "fromregex": 5, "fromstr": 5, "full": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "full_lik": [5, 29, 74, 107, 175, 271], "gcd": 5, "genfromtxt": 5, "geomspac": [5, 141, 150], "get_array_wrap": 5, "get_includ": 5, "get_printopt": 5, "getbufs": 5, "geterr": 5, "geterrcal": 5, "geterrobj": 5, "gradient": 5, "greater": [5, 69, 75, 113, 127, 128, 136, 172], "greater_equ": [5, 75, 112, 127, 128, 172], "ham": 5, "han": 5, "heavisid": 5, "histogram": [5, 282], "histogram2d": 5, "histogram_bin_edg": 5, "histogramdd": 5, "hsplit": 5, "hstack": 5, "hypot": 5, "i0": 5, "imag": 5, "in1d": 5, "indic": [5, 14, 15, 25, 26, 27, 69, 171, 235, 239, 240, 256], "info": 5, "inner": [5, 71, 72, 176], "interp": 5, "intersect1d": 5, "invert": [5, 42], "is_busdai": 5, "isclos": 5, "iscomplex": 5, "iscomplexobj": 5, "isfinit": [5, 122, 123], "isfortran": 5, "isin": 5, "isinf": [5, 121, 123], "isnan": [5, 121, 122], "isnat": [5, 123], "isneginf": [5, 121, 122, 123], "isposinf": [5, 121, 122, 123], "isreal": 5, "isrealobj": 5, "isscalar": 5, "issctyp": 5, "issubclass_": 5, "issubdtyp": 5, "issubsctyp": 5, "iter": [5, 31, 32, 69], "ix_": 5, "kaiser": 5, "kron": 5, "lcm": 5, "ldexp": 5, "left_shift": [5, 236], "less": [5, 75, 112, 113, 128, 172, 234], "less_equ": [5, 75, 112, 113, 127, 172], "lexsort": [5, 27, 69, 243], "linspac": [5, 17, 76, 109, 150, 156, 264], "load": 5, "loadtxt": 5, "log": [5, 80, 109, 141, 145, 150, 197], "log10": [5, 142, 145], "log1p": [5, 80, 142, 145], "log2": [5, 142], "logaddexp": 5, "logaddexp2": 5, "logical_and": [5, 41, 147, 148, 149], "logical_not": [5, 42, 119, 146, 148, 149], "logical_or": [5, 43, 146, 147, 149], "logical_xor": [5, 44, 146, 147, 148], "logspac": [5, 109, 141], "lookfor": 5, "mask_indic": 5, "mat": 5, "matmul": [5, 140], "max": [5, 14, 25, 69, 136, 199], "maximum": [5, 14, 15, 25, 26, 69, 103, 104, 152, 159, 178], "maximum_sctyp": 5, "may_share_memori": 5, "meshgrid": [5, 157, 173], "min": [5, 15, 26, 69], "min_scalar_typ": 5, "minimum": [5, 14, 15, 25, 26, 69, 103, 104, 153, 158, 178], "mintypecod": 5, "mod": 5, "modf": 5, "moveaxi": [5, 237, 256], "msort": 5, "multipli": 5, "nan_to_num": 5, "nanargmax": 5, "nanargmin": 5, "nancumprod": [5, 165], "nancumsum": 5, "nanmax": [5, 14, 15], "nanmean": [5, 154, 248, 266], "nanmedian": 5, "nanmin": [5, 14, 15], "nanpercentil": 5, "nanprod": 5, "nanquantil": 5, "nanstd": [5, 154, 248, 266], "nansum": 5, "nanvar": [5, 154, 248, 266], "ndim": [5, 29, 33, 58, 69, 174, 237, 251, 270], "neg": [5, 12, 16, 40, 121, 122, 123, 178, 201, 244], "nested_it": 5, "nextaft": 5, "nonzero": [5, 69, 269], "not_equ": [5, 75, 112, 113, 127, 128], "obj2sctyp": 5, "ones": [5, 29, 73, 74, 75, 79, 81, 107, 108, 116, 117, 151, 166, 175, 237, 256, 258, 270, 271], "ones_lik": [5, 29, 74, 108, 174, 271], "outer": [5, 71, 72, 125], "packbit": 5, "pad": [5, 272, 282], "partit": [5, 69, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 243], "percentil": [5, 155], "piecewis": 5, "place": [5, 69, 219, 235], "poli": 5, "polyadd": 5, "polyd": 5, "polydiv": 5, "polyfit": 5, "polyint": 5, "polymul": 5, "polysub": 5, "polyv": 5, "posit": [5, 12, 16, 31, 32, 41, 69, 79, 121, 122, 123, 129, 162, 178, 184, 208, 237, 244, 245, 256], "power": [5, 78, 135, 245], "printopt": 5, "prod": [5, 69, 166], "product": [5, 59, 60, 68, 71, 72, 118, 125, 135, 137, 151, 163, 164, 176, 179, 254, 267, 282], "promote_typ": 5, "ptp": 5, "put": 5, "put_along_axi": 5, "putmask": 5, "quantil": 5, "rad2deg": [5, 62, 63, 264], "radian": [5, 62, 63, 180, 264], "ravel": [5, 69, 138], "ravel_multi_index": 5, "real": [5, 94, 95, 96, 97, 98, 100, 129, 132, 133, 136, 184, 201, 244, 282], "real_if_clos": 5, "recfromcsv": 5, "recfromtxt": 5, "reciproc": 5, "remaind": [5, 102, 103, 104, 105, 153, 159, 160, 178], "repeat": [5, 132, 133], "resiz": [5, 79], "result_typ": 5, "right_shift": [5, 126], "rint": 5, "roll": [5, 237], "rollaxi": 5, "root": [5, 41, 46, 244, 245], "rot90": 5, "round": [5, 28, 69, 101, 102, 233, 238, 262, 282], "round_": 5, "row_stack": 5, "safe_ev": 5, "save": 5, "savetxt": 5, "savez": 5, "savez_compress": 5, "sctype2char": 5, "searchsort": [5, 243], "select": [5, 246], "set_numeric_op": 5, "set_printopt": 5, "set_string_funct": 5, "setbufs": 5, "setdiff1d": 5, "seterr": 5, "seterrcal": 5, "seterrobj": 5, "setxor1d": 5, "shape": [5, 25, 26, 29, 30, 33, 45, 53, 54, 58, 59, 69, 73, 74, 79, 107, 108, 134, 136, 140, 146, 147, 148, 149, 151, 152, 158, 162, 174, 175, 182, 191, 194, 199, 200, 205, 209, 210, 211, 212, 213, 214, 215, 217, 222, 223, 229, 233, 235, 237, 244, 245, 246, 251, 256, 270, 271, 282], "shares_memori": 5, "show_config": 5, "sign": [5, 49, 52], "signbit": 5, "sin": [5, 20, 156], "sinc": 5, "sinh": [5, 19, 241], "sometru": 5, "sort": [5, 27, 69, 239, 256, 272, 282], "sort_complex": 5, "space": [5, 17, 109, 141, 150], "split": [5, 282], "sqrt": [5, 245], "squar": [5, 41, 117, 129, 131, 132, 135, 186, 202, 244], "squeez": [5, 69, 79], "stack": [5, 115, 136, 268], "std": [5, 69, 154, 266], "subtract": 5, "swapax": [5, 162], "take": [5, 69, 235], "take_along_axi": [5, 25, 26, 27], "tan": [5, 20, 23], "tanh": [5, 19], "tensordot": [5, 68, 118, 151], "tile": [5, 234, 282], "trace": 5, "transpos": [5, 69, 129, 162, 282], "trapz": 5, "tri": 5, "tril": 5, "tril_indic": 5, "tril_indices_from": 5, "trim_zero": 5, "triu": 5, "triu_indic": 5, "triu_indices_from": 5, "true_divid": 5, "trunc": [5, 47, 101], "typenam": 5, "union1d": 5, "uniqu": [5, 40], "unpackbit": 5, "unravel_index": [5, 25, 26], "unwrap": [5, 62, 180], "vander": 5, "var": [5, 69, 154, 248], "vdot": [5, 68, 151], "vsplit": 5, "vstack": 5, "where": [5, 10, 11, 12, 16, 23, 41, 42, 43, 44, 52, 53, 55, 67, 69, 75, 101, 102, 105, 112, 113, 116, 119, 120, 121, 122, 123, 126, 127, 128, 129, 139, 142, 146, 147, 148, 149, 152, 153, 154, 158, 159, 163, 172, 178, 179, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 233, 236, 239, 241, 244, 245, 249, 250], "who": 5, "zero": [5, 12, 16, 29, 57, 73, 74, 81, 87, 92, 101, 107, 108, 136, 140, 162, 167, 171, 174, 175, 178, 182, 184, 212, 214, 215, 217, 250, 258, 259, 260, 271], "zeros_lik": [5, 29, 74, 108, 175, 270], "astyp": [5, 69, 171], "byteswap": 5, "dump": 5, "fill": [5, 29, 69, 73, 74, 107, 108, 174, 175, 270, 271], "flatten": [5, 65, 69, 171, 231], "getfield": 5, "item": [5, 69], "itemset": 5, "newbyteord": 5, "setfield": 5, "setflag": 5, "tobyt": 5, "tofil": [5, 106], "tolist": 5, "tostr": 5, "view": [5, 37, 38, 69, 235, 246, 256], "linalg": [5, 245], "choleski": 5, "cond": 5, "det": 5, "eig": [5, 132, 133], "eigh": 5, "eigval": [5, 132], "eigvalsh": 5, "inv": 5, "lstsq": 5, "matrix_pow": [5, 245], "matrix_rank": 5, "multi_dot": 5, "norm": [5, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 282], "pinv": 5, "qr": 5, "slogdet": 5, "solv": [5, 282], "svd": [5, 136], "tensorinv": 5, "tensorsolv": 5, "fft": [5, 272, 282], "fft2": 5, "fftfreq": 5, "fftn": 5, "fftshift": 5, "hfft": 5, "ifft": 5, "ifft2": 5, "ifftn": 5, "ifftshift": 5, "ihfft": 5, "irfft": 5, "irfft2": 5, "irfftn": 5, "register_func": 5, "restore_al": 5, "restore_func": 5, "rfft": 5, "rfft2": 5, "rfftfreq": 5, "rfftn": 5, "beta": [5, 193], "binomi": [5, 201], "byte": [5, 69], "chisquar": 5, "choic": [5, 69], "default_rng": 5, "dirichlet": 5, "exponenti": [5, 142, 195, 221], "gamma": [5, 222], "geometr": [5, 109, 141], "get_stat": [5, 182], "gumbel": 5, "hypergeometr": 5, "laplac": 5, "logist": 5, "lognorm": 5, "logseri": 5, "multinomi": 5, "multivariate_norm": 5, "negative_binomi": 5, "noncentral_chisquar": 5, "noncentral_f": 5, "normal": [5, 58, 132, 182, 197, 200, 211, 223], "pareto": 5, "permut": [5, 69, 162, 256, 282], "poisson": 5, "rand": [5, 182, 212, 214, 215, 217], "randint": [5, 69, 182, 213], "randn": [5, 140, 182], "random_integ": [5, 182, 210], "random_sampl": [5, 182, 209, 212, 215, 217], "ranf": 5, "rayleigh": 5, "seed": [5, 69, 182], "set_stat": 5, "shuffl": 5, "standard_cauchi": 5, "standard_exponenti": 5, "standard_gamma": 5, "standard_norm": [5, 182, 211], "standard_t": 5, "triangular": [5, 129, 139], "uniform": [5, 182, 209, 212, 214, 215, 217], "vonmis": 5, "wald": 5, "weibul": [5, 230], "zipf": 5, "bool": [7, 34, 41, 42, 43, 44, 69, 75, 112, 113, 119, 121, 122, 123, 127, 128, 136, 138, 171, 172, 235], "complex128": [7, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "nan": [7, 12, 14, 15, 16, 31, 32, 121, 122, 123, 154, 164, 165, 166, 167, 168, 244, 248, 266, 282], "arg": [9, 71, 103, 104, 160, 182, 261, 267], "kwarg": [9, 10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 47, 49, 52, 55, 59, 60, 61, 67, 68, 69, 71, 75, 77, 82, 101, 102, 103, 104, 105, 106, 111, 112, 113, 116, 118, 119, 121, 122, 123, 126, 127, 128, 142, 146, 147, 148, 149, 151, 153, 159, 160, 161, 163, 164, 165, 166, 167, 170, 172, 178, 232, 233, 236, 240, 241, 243, 244, 245, 249, 252, 254, 257, 258, 261, 262, 263, 267], "calcul": [9, 10, 66, 70, 77, 82, 101, 103, 104, 105, 153, 159, 160, 166, 167, 178, 179, 233, 244], "valu": [9, 10, 11, 12, 14, 15, 16, 17, 22, 23, 25, 26, 27, 28, 29, 31, 32, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 55, 57, 58, 66, 67, 69, 70, 73, 74, 75, 81, 82, 83, 89, 101, 102, 105, 107, 108, 109, 112, 113, 116, 119, 121, 122, 123, 126, 127, 128, 129, 133, 136, 138, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 168, 171, 172, 174, 175, 177, 178, 182, 192, 209, 210, 226, 233, 234, 235, 236, 239, 241, 244, 245, 248, 249, 250, 254, 255, 262, 264, 266, 270, 271, 282], "element": [9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 30, 40, 41, 42, 43, 44, 46, 47, 49, 52, 55, 56, 60, 61, 67, 69, 70, 75, 77, 78, 80, 82, 101, 103, 104, 105, 112, 113, 119, 120, 121, 122, 123, 126, 127, 128, 129, 134, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 159, 160, 161, 163, 164, 165, 170, 171, 172, 178, 179, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 249, 250, 252, 253, 259, 260, 261, 262, 263, 269, 282], "wise": [9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 30, 41, 42, 43, 44, 46, 47, 49, 52, 55, 56, 67, 69, 75, 77, 78, 80, 82, 101, 103, 104, 105, 112, 113, 115, 119, 120, 121, 122, 123, 126, 127, 128, 134, 142, 143, 144, 145, 146, 147, 148, 149, 153, 159, 160, 161, 163, 170, 172, 178, 232, 233, 236, 240, 241, 242, 244, 245, 249, 252, 253, 261, 262, 268], "note": [9, 12, 14, 15, 16, 25, 26, 34, 35, 62, 69, 79, 101, 103, 104, 121, 138, 150, 160, 171, 180, 185, 187, 188, 198, 203, 235, 261, 267], "shorthand": [9, 75, 112, 113, 127, 128, 146, 148, 172, 269], "out": [10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 41, 42, 43, 44, 46, 47, 48, 52, 55, 56, 58, 63, 67, 68, 69, 75, 76, 77, 78, 80, 101, 102, 105, 112, 113, 116, 119, 120, 121, 122, 123, 126, 127, 128, 137, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 162, 163, 168, 171, 172, 176, 178, 179, 181, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 231, 232, 233, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 262, 264, 266], "none": [10, 11, 12, 14, 15, 16, 17, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 52, 55, 57, 58, 59, 67, 68, 69, 70, 73, 74, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 126, 127, 128, 136, 137, 138, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 163, 168, 172, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 258, 262, 265, 266, 269, 270, 271], "subok": [10, 11, 29, 42, 45, 51, 55, 67, 69, 74, 75, 108, 112, 113, 119, 127, 128, 142, 146, 147, 148, 149, 163, 172, 175, 178, 241, 244, 245, 249, 271], "y": [10, 11, 41, 42, 43, 44, 45, 51, 55, 58, 59, 67, 68, 69, 79, 111, 119, 126, 142, 154, 156, 161, 163, 171, 178, 235, 236, 241, 244, 245, 249, 250, 256, 257, 269], "contain": [10, 17, 41, 42, 43, 44, 69, 110, 119, 126, 132, 154, 182, 236, 244, 250], "paramet": [10, 11, 12, 13, 16, 17, 23, 25, 26, 28, 29, 31, 32, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 57, 59, 60, 61, 66, 67, 68, 69, 70, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 153, 154, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 249, 250, 251, 254, 255, 257, 259, 260, 262, 269, 270, 271], "onli": [10, 12, 16, 17, 25, 26, 27, 29, 31, 32, 39, 51, 53, 54, 55, 57, 58, 66, 70, 73, 74, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 106, 107, 108, 109, 121, 122, 123, 126, 129, 141, 142, 147, 150, 152, 155, 156, 158, 168, 174, 175, 177, 182, 204, 210, 226, 235, 236, 237, 239, 241, 248, 254, 255, 259, 260, 266, 269, 270, 271], "either": [10, 11, 13, 23, 41, 42, 43, 44, 45, 52, 55, 67, 68, 75, 102, 105, 112, 113, 116, 119, 120, 126, 127, 128, 138, 142, 146, 147, 148, 149, 153, 154, 156, 159, 162, 163, 171, 172, 176, 178, 218, 233, 234, 236, 241, 244, 245, 246, 249, 250, 256, 269], "tensor": [10, 11, 41, 42, 43, 44, 45, 55, 67, 68, 69, 74, 75, 108, 112, 113, 118, 119, 126, 127, 128, 132, 142, 146, 147, 148, 149, 154, 156, 162, 163, 171, 172, 175, 176, 178, 236, 241, 244, 245, 246, 249, 250, 254, 256, 259, 260, 269, 271], "usm_ndarrai": [10, 11, 41, 42, 43, 44, 45, 55, 67, 68, 69, 74, 75, 108, 112, 113, 119, 126, 127, 128, 132, 142, 146, 147, 148, 149, 154, 156, 162, 163, 171, 172, 175, 176, 178, 235, 236, 241, 244, 245, 246, 249, 250, 256, 259, 260, 269, 271], "default": [10, 11, 12, 16, 17, 23, 25, 26, 27, 28, 29, 31, 32, 34, 39, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 57, 58, 66, 67, 69, 70, 73, 74, 75, 81, 83, 89, 102, 105, 107, 108, 109, 112, 113, 116, 119, 121, 122, 123, 126, 127, 128, 136, 138, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 168, 172, 174, 175, 177, 178, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 233, 235, 236, 239, 241, 244, 245, 248, 249, 250, 255, 266, 270, 271], "keyword": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 47, 52, 59, 60, 61, 67, 68, 70, 82, 101, 102, 105, 111, 116, 118, 119, 126, 153, 159, 161, 163, 164, 165, 166, 167, 170, 178, 232, 233, 236, 240, 243, 249, 252, 254, 257, 262], "argument": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 47, 52, 59, 60, 61, 67, 68, 69, 70, 76, 82, 101, 102, 105, 111, 116, 118, 119, 126, 134, 137, 153, 159, 161, 163, 164, 165, 166, 167, 170, 178, 232, 233, 236, 240, 243, 249, 252, 254, 257, 262], "current": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 47, 52, 59, 60, 61, 67, 68, 69, 70, 82, 101, 102, 105, 111, 116, 117, 118, 119, 126, 153, 159, 161, 163, 164, 165, 166, 167, 170, 178, 232, 233, 236, 240, 243, 249, 252, 254, 257, 262], "unsupport": [10, 11, 13, 20, 22, 23, 41, 42, 43, 44, 47, 52, 59, 60, 61, 67, 68, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 111, 116, 118, 119, 126, 137, 153, 159, 161, 163, 164, 165, 166, 167, 170, 178, 179, 232, 233, 236, 240, 243, 249, 252, 254, 257, 262], "otherwis": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 30, 39, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 73, 74, 75, 76, 81, 82, 101, 102, 105, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 134, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 257, 259, 260, 262, 266, 269, 270, 271], "execut": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 31, 32, 39, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 101, 102, 105, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 134, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 185, 187, 188, 198, 203, 219, 231, 232, 233, 234, 236, 237, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 257, 259, 260, 262, 266, 269, 270, 271], "sequenti": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 39, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 101, 102, 105, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 134, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 231, 232, 233, 234, 236, 237, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 257, 259, 260, 262, 266, 269, 270, 271], "cpu": [10, 11, 12, 13, 16, 17, 23, 25, 26, 27, 28, 39, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 101, 102, 105, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 134, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 231, 232, 233, 234, 236, 237, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 257, 259, 260, 262, 266, 269, 270, 271], "input": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 82, 94, 95, 96, 97, 98, 100, 101, 102, 105, 107, 108, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 204, 210, 226, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 266, 269, 270, 271], "dp": [10, 11, 12, 16, 42, 45, 67, 68, 69, 119, 132, 163, 178, 235, 249, 256, 269], "x1": [11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 39, 40, 41, 43, 44, 46, 47, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 108, 111, 112, 113, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 131, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 172, 175, 176, 177, 178, 179, 180, 181, 219, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 248, 249, 251, 252, 253, 254, 255, 257, 259, 260, 262, 263, 264, 265, 266, 271], "x2": [11, 12, 13, 16, 20, 22, 23, 29, 41, 43, 44, 52, 54, 59, 67, 68, 75, 102, 105, 109, 112, 113, 116, 118, 120, 125, 126, 127, 128, 141, 146, 147, 148, 149, 150, 151, 153, 156, 159, 163, 171, 172, 176, 178, 233, 236, 239, 244, 249, 254], "order": [11, 27, 29, 31, 32, 33, 35, 51, 55, 67, 69, 71, 72, 73, 74, 75, 81, 107, 108, 112, 113, 127, 128, 132, 133, 138, 142, 146, 147, 148, 149, 162, 163, 172, 174, 175, 177, 231, 235, 239, 241, 244, 245, 249, 270, 271, 282], "k": [11, 51, 55, 64, 65, 67, 69, 75, 81, 112, 113, 127, 128, 142, 146, 147, 148, 149, 163, 172, 241, 244, 245, 249, 258, 259, 260, 286], "scalar": [11, 13, 23, 36, 41, 43, 44, 52, 67, 68, 69, 75, 102, 105, 112, 113, 116, 124, 126, 127, 128, 146, 148, 149, 153, 156, 159, 163, 172, 176, 178, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 210, 213, 216, 218, 222, 224, 225, 226, 227, 228, 229, 230, 233, 236, 249, 269], "both": [11, 41, 43, 44, 67, 68, 75, 112, 113, 126, 127, 128, 138, 146, 148, 149, 163, 172, 176, 178, 236, 249], "same": [11, 14, 15, 30, 34, 35, 41, 43, 44, 45, 62, 67, 68, 69, 74, 75, 79, 103, 104, 108, 112, 113, 126, 127, 128, 146, 147, 148, 149, 160, 162, 163, 172, 175, 176, 178, 180, 182, 204, 210, 226, 236, 244, 245, 246, 249, 261, 267, 271], "b": [11, 48, 60, 61, 68, 70, 75, 105, 112, 113, 118, 127, 128, 140, 146, 148, 151, 164, 165, 172, 176, 178, 183, 254, 257], "axi": [12, 14, 15, 16, 25, 26, 27, 39, 48, 57, 59, 60, 61, 66, 69, 70, 79, 83, 88, 89, 93, 94, 97, 109, 138, 141, 150, 152, 154, 155, 158, 164, 165, 168, 177, 179, 234, 235, 237, 246, 247, 248, 250, 257, 266], "keepdim": [12, 16, 57, 69, 138, 152, 154, 155, 158, 168, 179, 248, 250, 266], "fals": [12, 13, 16, 29, 30, 39, 45, 51, 57, 58, 69, 74, 75, 108, 109, 112, 113, 120, 121, 122, 123, 127, 128, 136, 138, 140, 141, 146, 147, 148, 149, 150, 152, 154, 155, 156, 158, 168, 172, 175, 179, 235, 248, 250, 265, 266, 271], "whether": [12, 16, 129, 235], "given": [12, 14, 15, 16, 17, 25, 26, 28, 29, 51, 58, 60, 61, 66, 68, 69, 70, 73, 74, 107, 108, 116, 156, 158, 164, 165, 174, 175, 179, 182, 187, 209, 226, 237, 238, 250, 257, 258, 270, 271], "evalu": [12, 16, 69, 71, 72, 75, 118, 156, 176, 254], "Not": [12, 16, 69, 121, 164, 166, 167], "number": [12, 16, 17, 28, 40, 49, 57, 69, 101, 102, 109, 121, 136, 138, 141, 150, 164, 166, 167, 171, 182, 184, 194, 218, 233, 237, 238, 240, 262, 282], "infin": [12, 16, 101, 102, 121, 122, 123, 233, 262, 282], "becaus": [12, 16], "x3": [12, 16, 141, 150], "rtol": [13, 120], "1e": [13, 120, 200], "05": [13, 120], "atol": [13, 120], "08": [13, 55, 120, 200, 241], "two": [13, 14, 15, 30, 37, 41, 42, 43, 44, 50, 54, 59, 65, 69, 71, 72, 118, 119, 120, 125, 132, 137, 146, 148, 149, 151, 162, 176, 182, 211, 251, 259, 260, 267], "within": [13, 17, 30, 120, 182, 226], "toler": [13, 30, 120], "1e10": [13, 120], "7": [13, 17, 47, 57, 61, 64, 69, 70, 77, 101, 111, 120, 140, 151, 155, 165, 171, 182, 206, 233, 249, 254, 259, 260, 262, 269], "00001e10": [13, 120], "8": [13, 46, 64, 120, 140, 141, 150, 164, 182, 206, 225, 241, 254, 257, 259, 260, 265, 269], "propag": [14, 15], "ignor": [14, 15, 69, 154, 168, 248, 266], "thi": [14, 15, 34, 35, 62, 69, 103, 104, 106, 138, 160, 180, 215, 217, 235, 261, 267, 269, 272], "work": [14, 15, 34, 35, 62, 103, 104, 160, 180, 261, 267], "exactli": [14, 15, 34, 35, 62, 180, 182, 210], "start": [17, 109, 141, 150, 237], "stop": [17, 109, 141, 150], "step": [17, 109, 141, 150], "devic": [17, 29, 32, 34, 69, 73, 74, 81, 107, 108, 141, 174, 175, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 246, 270, 271], "usm_typ": [17, 29, 32, 69, 73, 74, 81, 107, 108, 141, 174, 175, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 270, 271], "sycl_queu": [17, 29, 32, 69, 73, 74, 81, 107, 108, 141, 174, 175, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 270, 271], "evenli": [17, 28, 109, 141, 150], "interv": [17, 141, 182, 210, 212, 214, 215, 217, 225, 226], "d": [17, 81, 84, 85, 86, 90, 91, 95, 96, 98, 99, 100, 132, 137, 138, 156, 171, 187, 235, 269], "care": 17, "handl": [17, 171, 282], "endpoint": [17, 109, 141, 150], "trigonometr": [18, 19, 20, 22, 23, 24, 55, 56, 77, 78, 80, 143, 144, 145, 241, 242, 282], "invers": [18, 19, 20, 21, 22, 23, 24, 42, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 119, 142, 144, 228, 241], "cosin": [18, 19, 20, 55, 56, 241], "tangent": [18, 19, 20, 22, 23, 24, 252, 253], "sine": [18, 19, 20, 21, 241, 242], "14159265": 18, "hyperbol": [19, 21, 24, 56, 241, 242, 253, 282], "comput": [19, 20, 23, 39, 41, 42, 43, 44, 47, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 114, 118, 119, 130, 131, 133, 137, 138, 139, 146, 147, 148, 149, 154, 155, 160, 168, 248, 250, 252, 253, 254, 262, 266], "e": [19, 21, 69, 142, 182], "10": [19, 21, 25, 26, 28, 51, 61, 69, 107, 109, 114, 126, 142, 145, 150, 155, 167, 182, 184, 194, 206, 236, 259, 260, 269], "65745445": 19, "99322285": 19, "arc": [20, 22, 23], "quadrant": [20, 22, 23], "correctli": [20, 22, 23, 138, 171], "5707963267948966": 20, "72538256": 21, "99822295": 21, "complex": [22, 23, 49, 68, 69, 76, 132, 133, 140, 151, 244, 282], "78539816": [22, 264], "57079633": [23, 181, 264], "54930614": 24, "convert": [25, 26, 31, 32, 33, 34, 36, 62, 63, 180, 181, 264], "flat": [25, 26, 69], "index": [25, 26, 69, 79, 156, 235], "tupl": [25, 26, 69, 79, 138, 171, 234, 235], "appli": [25, 26, 27, 146, 148, 149], "index_arrai": [25, 26, 27, 69], "call": [25, 26, 27, 137, 246, 269], "In": [25, 26, 69, 129, 182, 226, 235], "case": [25, 26, 140, 235], "multipl": [25, 26, 27, 69, 132, 133, 243], "occurr": [25, 26, 40], "first": [25, 26, 69, 78, 137, 178, 235, 245], "11": [25, 26, 28, 69, 111, 201, 210, 242, 259, 260], "14": [25, 26, 41, 42, 68, 119, 254], "15": [25, 26, 61, 206, 250], "in_array1": [27, 57, 76], "kind": [27, 69, 177, 282], "would": [27, 69, 182, 256], "pramet": [27, 39, 54, 58, 152, 155, 158, 168, 248, 266], "describ": [27, 69, 138, 250, 282], "algorithm": [27, 69], "indirect": [27, 69, 243], "stabl": [27, 69, 243], "partial": [27, 243], "decim": [28, 69, 238], "37": 28, "nearest": [28, 101, 102, 233, 262], "even": 28, "int": [28, 34, 40, 69, 75, 111, 177, 182, 210, 213, 235, 258], "ndmin": 29, "new": [29, 45, 69, 73, 74, 79, 107, 108, 162, 174, 175, 235, 237, 247, 256, 270, 271], "uniniti": [29, 74, 107, 174, 270], "than": [29, 69, 136, 234], "dimens": [29, 36, 37, 38, 58, 69, 79, 134, 138, 162, 182, 212, 214, 215, 217, 234, 235, 243, 246, 259, 260, 282], "a1": 30, "a2": 30, "equal_nan": [30, 120], "have": [30, 45, 162, 201], "consist": 30, "pass": [31, 32, 69], "subclass": [31, 32], "through": [31, 32], "which": [31, 32, 69, 129, 136, 138, 171, 246], "alwai": [31, 235], "contigu": [31, 32, 33, 69, 231, 235], "float": [31, 32, 34, 111, 136, 138, 150, 182, 211, 212, 214, 215, 217, 223, 226, 282], "point": [31, 32, 141, 182, 211, 223, 282], "major": [31, 32, 33, 69], "check": [31, 32, 129], "inf": [31, 32, 121, 122, 123, 138, 142, 143, 145, 244], "construct": [31, 32, 64, 69, 106, 157, 173], "grid": [31, 32, 156], "object": [32, 51, 69, 79, 129, 132, 138, 157, 173, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 235], "satisfi": 33, "If": [34, 68, 69, 136, 137, 138, 154, 182, 204, 226, 234, 235, 244, 250], "depend": [34, 132, 138, 269], "capabl": 34, "ari": [36, 37, 38], "least": [36, 37, 38, 120], "whilst": 36, "higher": 36, "preserv": [36, 69], "three": [38, 182, 218], "weight": [39, 40, 58, 114, 154], "specifi": [39, 45, 69, 109, 118, 138, 141, 150, 154, 155, 168, 182, 195, 205, 223, 237, 248, 254, 266], "arithmet": [39, 109, 154, 155, 248, 266, 282], "minlength": 40, "count": [40, 57, 135, 171, 184, 272, 282], "non": [40, 57, 121, 132, 171, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 244], "find": [40, 136, 239, 243, 263], "re": [40, 48, 114, 263], "bit": [41, 42, 43, 44, 119, 126, 146, 148, 149, 236, 282], "AND": [41, 42, 43, 44, 119, 146, 147, 148, 149], "truth": [41, 42, 43, 44, 75, 112, 113, 119, 127, 128, 146, 147, 148, 149, 172, 282], "OR": [41, 42, 43, 44, 119, 146, 147, 148, 149], "xor": [41, 42, 43, 44, 119, 146, 147, 148, 149], "255": [41, 43], "NOT": [42, 119, 146, 147, 148, 149], "31": [44, 109], "26": 44, "broadcast": [45, 53, 138, 146, 148, 149, 151], "cube": 46, "27": [46, 265], "truncat": [47, 101, 220, 262], "arr": [48, 69, 171, 206], "cast": [48, 53, 69], "same_kind": [48, 53], "join": [48, 247, 282], "sequenc": [48, 50, 54, 115, 135, 137, 206, 219, 247, 268], "exist": [48, 79, 235], "t": [48, 58, 69, 133, 224, 275], "obtain": [49, 171], "chang": [49, 52, 69, 235, 264, 282], "imaginari": 49, "part": [49, 161], "2j": [49, 132], "1j": [49, 140, 245], "j": [49, 132, 245], "v": [50, 132], "mode": [50, 54, 69, 139, 220, 225], "discret": [50, 54, 66, 70, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 182, 272], "linear": [50, 54, 150, 272, 282], "convolut": [50, 54], "ca": 50, "z": [51, 156, 192], "9": [52, 57, 64, 67, 69, 82, 102, 140, 151, 163, 178, 182, 184, 186, 206, 244, 254, 259, 260, 265, 269], "dst": 53, "src": 53, "anoth": 53, "necessari": [53, 235], "valid": 54, "pi": [55, 63, 241, 242, 252, 253, 264], "000000e": [55, 241], "00": [55, 241], "371139e": 55, "m": [58, 81, 129, 130, 132, 133, 136, 258], "rowvar": 58, "bia": 58, "ddof": [58, 69, 168, 248, 266], "fweight": 58, "aweight": 58, "estim": [58, 184, 201], "covari": 58, "matrix": [58, 129, 132, 133, 135, 136, 138, 139, 151, 245, 260, 265, 282], "variabl": 58, "axisa": 59, "axisb": 59, "axisc": 59, "vector": [59, 136, 137, 138, 156, 267, 282], "cumul": [60, 61, 69, 164, 165], "24": [60, 70, 166, 179], "120": [60, 63], "720": 60, "remov": [62, 69, 79, 180, 246, 282], "larg": [62, 180], "jump": [62, 180], "wrap": [62, 180], "rad": 63, "30": [63, 181], "60": [63, 269], "90": [63, 269], "150": 63, "prepend": 66, "th": [66, 70, 155, 259, 260], "quotient": 67, "over": [68, 138, 141, 151, 156, 164, 179, 182, 209, 214, 225, 226, 250], "arbitrari": [68, 151], "ax": [68, 69, 84, 86, 87, 90, 91, 92, 95, 96, 98, 100, 118, 138, 151, 154, 162, 237, 246, 251, 254, 256], "f8": 69, "buffer": [69, 235], "offset": [69, 255], "stride": 69, "wrapper": 69, "compliant": 69, "origin": [69, 138, 162, 235], "__getitem__": 69, "__setitem__": 69, "val": 69, "__len__": 69, "perform": [69, 129], "oper": [69, 75, 79, 112, 113, 127, 128, 129, 146, 147, 148, 149, 172, 272, 282], "equival": [69, 79, 181, 182, 210, 235, 238, 256], "integ": [69, 101, 102, 120, 126, 135, 138, 178, 182, 210, 213, 218, 233, 235, 236, 237, 245, 259, 260, 262], "option": [69, 136, 137, 138, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 235], "Its": 69, "right": [69, 116, 126, 131, 132, 225, 236, 239], "hold": [69, 138], "output": [69, 75, 112, 113, 127, 128, 135, 137, 156, 172, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 246, 282], "integer_arrai": 69, "versionchang": 69, "previous": 69, "wa": [69, 182, 223, 250], "error": [69, 76, 272], "At": 69, "some": [69, 79, 101], "futur": 69, "date": 69, "intend": 69, "until": [69, 237], "should": [69, 120, 199, 234, 235, 239], "explicitli": 69, "avoid": 69, "futurewarn": 69, "quicksort": 69, "mergesort": 69, "heapsort": 69, "field": [69, 156], "defin": 69, "compar": [69, 75], "second": [69, 78, 178, 245], "etc": [69, 201, 282], "other": [69, 101, 137, 162, 182, 226, 282], "word": [69, 101, 182, 226], "yield": [69, 182], "maskedarrai": 69, "inplac": 69, "asnumpi": 69, "content": [69, 219], "popul": [69, 182, 209], "unsaf": 69, "target": 69, "A": [69, 106, 133, 182, 184, 201, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 256], "row": [69, 137, 268], "style": 69, "fortran": [69, 235], "And": 69, "keep": 69, "close": [69, 182, 210], "possibl": [69, 235, 246, 256], "happen": [69, 184], "itself": 69, "possibli": 69, "doe": 69, "rais": [69, 78, 135, 178, 235, 245], "axis1": [69, 251, 255], "axis2": [69, 251, 255], "assign": 69, "collaps": 69, "occur": 69, "get_arrai": 69, "get": 69, "id": 69, "standard": [69, 102, 105, 154, 160, 182, 197, 204, 211, 220, 221, 222, 223, 224, 233, 248, 250, 266, 282], "random": [69, 140, 272, 282], "123": 69, "initi": [69, 73, 152, 158, 179, 182, 250], "kth": [69, 177], "introselect": [69, 177], "rearrang": [69, 282], "smaller": [69, 102], "move": [69, 162, 237, 256], "befor": 69, "behind": 69, "undefin": 69, "dparrai": [69, 275, 283], "sh": 69, "unlik": 69, "free": 69, "allow": 69, "separ": 69, "singl": [69, 137, 154, 182, 201, 210, 211, 212, 213, 214, 215, 217, 223], "entri": [69, 73], "varianc": [69, 154, 168, 248, 266, 282], "to_devic": 69, "target_devic": 69, "transfer": 69, "suitabl": 69, "properti": [69, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "give": [69, 235], "without": [69, 73, 235], "mask": 69, "finit": [69, 121, 122, 123], "__eq__": [69, 182], "self": [69, 182], "__ne__": [69, 182], "__lt__": [69, 182], "__le__": [69, 182], "__gt__": [69, 182], "__ge__": [69, 182], "attribut": 69, "flag": 69, "about": 69, "layout": [69, 235], "items": 69, "nbyte": 69, "consum": 69, "length": [69, 75, 185, 235, 246], "repres": [69, 182], "diment": 69, "setter": 69, "involv": 69, "cannot": [69, 246], "displac": 69, "upon": 69, "unit": 69, "respect": 69, "g": [69, 182], "s1": 69, "s2": 69, "s3": 69, "i1": 69, "i2": 69, "i3": 69, "sycl_context": 69, "sycl_devic": 69, "to_end": 70, "to_begin": 70, "consecut": 70, "obj": [70, 124], "seealso": 70, "einstein": [71, 72, 118, 151, 176, 254], "summat": [71, 72, 118, 151, 176, 254], "convent": [71, 72, 118, 151, 176, 254], "operand": [71, 72, 118, 176, 254], "lowest": [71, 72, 182, 210], "cost": [71, 72], "contract": [71, 72], "express": [71, 72], "subscript": 72, "optim": 72, "greedi": 72, "consid": [72, 121, 136, 182, 210], "creation": [72, 272, 282], "intermedi": 72, "dpnp_arrai": [74, 108, 156, 169, 175, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 235, 259, 260, 271, 272], "what": [75, 184, 201], "so": [75, 142, 220, 244], "scipi": 76, "math": 76, "num": [76, 109, 141, 150, 264], "25": [76, 111, 114, 141, 163, 178, 211, 220, 265, 266], "75": [76, 111, 141], "99532227": 76, "99853728": 76, "99959305": 76, "99989938": 76, "99997791": 76, "expon": [77, 80, 178, 208, 282], "718281828": [77, 80], "389056099": [77, 80], "exponent2": 78, "expand": 79, "appear": 79, "singleton": [79, 246], "newaxi": 79, "mai": [79, 132, 150], "instead": [79, 101, 109, 141, 150, 171], "minu": [80, 101, 102, 233, 262], "elsewher": [81, 258, 269], "fourier": [83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 272], "transform": [83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 272], "complex64": [83, 89], "datatyp": [83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 136], "batch": [84, 86, 90, 91, 95, 96, 98, 100], "sampl": [85, 99, 109, 141, 150, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 272, 282], "frequenc": [85, 87, 92, 99], "shift": [87, 92, 126, 236], "center": [87, 92], "spectrum": [87, 92], "signal": [88, 93], "ha": [88, 93, 246, 250], "hermitian": [88, 93, 129, 132, 136, 140, 282], "symmetri": [88, 93], "toward": [101, 102, 233, 262], "spreadsheet": 101, "program": 101, "definit": [101, 129], "largest": 102, "divis": [102, 103, 104, 105, 153, 159, 160, 178, 233, 261], "remind": [102, 105, 160], "complementari": [102, 105, 160], "file": [106, 110], "text": 106, "binari": [106, 272, 282], "highli": 106, "effici": [106, 136], "read": [106, 235], "known": [106, 220], "well": [106, 184, 201, 220], "pars": 106, "simpli": 106, "format": [106, 282], "written": 106, "fill_valu": [107, 108], "50": [109, 150, 254, 269], "scale": [109, 141, 150, 182, 189, 191, 193, 194, 195, 196, 204, 216, 221, 228], "progress": [109, 141], "1000": [109, 150, 183, 184, 189, 191, 193, 194, 195, 196, 197, 204, 205, 208, 210, 212, 215, 217, 223, 227, 228, 229, 230], "100": [109, 150, 194, 220], "62341325": 109, "6227766": 109, "177": [109, 150], "827941": [109, 150], "directori": 110, "h": [110, 129, 156], "header": 110, "vararg": 111, "y1": [111, 257], "bin": [114, 220], "densiti": 114, "dataset": 114, "hist": [114, 220], "bin_edg": 114, "4999999999999996": 114, "tup": [115, 268], "horizont": 115, "leg": 116, "triangl": [116, 259, 260], "hypotenus": 116, "main": [117, 133], "boolean": [120, 121, 122, 123, 146, 147, 148, 149, 235], "nat": 123, "kroneck": 125, "left": [126, 138, 225, 236, 239], "40": 126, "decomposit": [129, 140, 282], "l": [129, 132], "lower": [129, 259], "ordinari": 129, "symmetr": [129, 132, 136], "No": 129, "verifi": 129, "addit": 129, "actual": 129, "array_lik": [129, 130, 133, 135, 136, 137, 138, 182], "upper": [129, 139, 260], "factor": [129, 139], "determin": [130, 146, 148, 149], "eigenvalu": [131, 132, 133, 282], "eigenvector": [131, 132, 133], "uplo": 132, "w": [132, 133], "ascend": 132, "accord": [132, 133], "17157288": 132, "82842712": 132, "92387953": 132, "38268343": 132, "vari": 132, "38268343j": 132, "92387953j": 132, "gener": [133, 182, 184, 187, 218, 265, 282], "aren": 133, "whose": 133, "thei": 133, "necessarili": 133, "nor": 133, "matric": [133, 136, 138, 156, 282], "suppli": [135, 137, 182, 211], "tol": [136, 200], "rank": 136, "singular": [136, 140], "threshold": 136, "ep": 136, "epsilon": 136, "assum": 136, "enabl": 136, "treat": [137, 164, 166, 167], "last": [137, 235, 246], "ord": 138, "abl": 138, "eight": 138, "infinit": 138, "unless": 138, "With": 138, "against": 138, "reduc": [139, 140], "q": [139, 155], "orthonorm": 139, "r": 139, "full_matric": 140, "compute_uv": 140, "reconstruct": 140, "2d": 140, "u": 140, "vh": 140, "smat": 140, "4d": 140, "retstep": 141, "end": 141, "logarithm": [141, 142, 143, 144, 145, 198, 282], "natur": [142, 145], "plu": [142, 145], "30102999566": 143, "69314718": 144, "09861229": 144, "logic": [146, 148, 149, 272, 282], "show": [149, 156, 220], "uniformli": [150, 182, 226], "directli": 150, "215": 150, "443469": 150, "464": 150, "15888336": 150, "22776602": 150, "562": 150, "34132519": 150, "0396842": 150, "34960421": 150, "rule": [151, 257], "deviat": [154, 182, 197, 204, 248, 266], "while": [154, 168, 171, 248, 266], "overwrite_input": 155, "xi": 156, "spars": 156, "xy": 156, "coordin": 156, "make": 156, "xn": 156, "nx": 156, "ny": 156, "xv": 156, "yv": 156, "matplotlib": [156, 220], "pyplot": [156, 220], "plt": [156, 220], "xx": 156, "yy": 156, "contourf": 156, "dpnp_iface_arraycr": [157, 173], "mgridclass": 157, "dens": 157, "5j": [157, 173], "fraction": 161, "integr": [161, 257], "destin": 162, "remain": [162, 235], "usm": [162, 182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 246], "interchang": [162, 251], "_novalu": [168, 248, 266], "alia": [169, 182, 212, 215, 217], "out2": 171, "ogridclass": 173, "open": [173, 182, 212, 214, 215, 217, 226], "deg": 181, "52359878": 181, "04719755": 181, "0943951": 181, "61799388": 181, "mersenn": 182, "twister": 182, "pseudo": 182, "maximumum": [182, 218], "string": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "sycldevic": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "syclqueu": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "concept": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226, 278], "filter": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "selector": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 223, 226], "intern": 182, "state": 182, "get_sycl_queu": 182, "loc": [182, 193, 195, 196, 204, 228], "draw": [182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "gaussian": [182, 204, 228], "share": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226], "host": [182, 204, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226], "drawn": [182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 210, 213, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230], "parameter": [182, 204, 226], "58997253": 182, "84288406": 182, "33836967": 182, "16394577": 182, "40882036": 182, "39295758": 182, "48927254": 182, "74921661": 182, "13436424": 182, "56920387": 182, "84743374": 182, "80226506": 182, "76377462": 182, "06310682": 182, "25506903": 182, "1179187": 182, "49543509": 182, "76096244": 182, "low": [182, 210, 213, 226], "high": [182, 210, 213, 226], "inclus": [182, 210, 213], "exclus": [182, 210], "half": [182, 212, 214, 215, 217, 226], "appropri": [182, 210, 213], "omit": [182, 210, 269], "d0": [182, 209, 211], "d1": [182, 211], "dn": [182, 209, 211], "were": [182, 211], "84401099": 182, "four": [182, 211], "88997253": 182, "54288406": 182, "63836967": 182, "46394577": 182, "70882036": 182, "69295758": 182, "78927254": 182, "04921661": 182, "continu": [182, 214], "stdev": [182, 223], "81715362": 182, "54465213": 182, "18557831": 182, "28352814": 182, "67718303": 182, "11570901": 182, "21968665": 182, "18236388": 182, "08156915": 182, "21941987": 182, "24544512": 182, "63522211": 182, "673174": 182, "exclud": [182, 226], "54": 182, "48093112": 182, "52928804": 182, "1196081": 182, "6990877": 182, "34074171": 182, "conveni": 182, "accept": 182, "alpha": [183, 188, 189, 205, 208], "p": [184, 187, 192, 198, 201], "trial": 184, "probabl": [184, 192, 201], "coin": 184, "world": [184, 201], "compani": [184, 201], "drill": [184, 201], "wild": [184, 201], "cat": [184, 201], "oil": [184, 201], "explor": [184, 201], "success": [184, 192, 201], "nine": 184, "fail": 184, "let": 184, "do": 184, "000": 184, "model": 184, "20000": 184, "answer": 184, "38885": 184, "38": 184, "fallback": [185, 187, 188, 198, 203, 219], "df": [186, 202, 224, 225], "chi": [186, 202], "89920014": 186, "00867716": 186, "13710533": 186, "62318272": 186, "dfnum": [190, 203], "dfden": [190, 203], "ten": 192, "thousand": 192, "individu": 192, "35": 192, "10000": [192, 207, 216, 226], "mu": [193, 197, 204, 227], "locat": [193, 195], "ngood": 194, "nbad": 194, "nsampl": 194, "nsamp": 194, "good": 194, "bad": 194, "doubl": 195, "decai": 195, "sigma": [197, 204], "seri": 198, "pval": 199, "iinfo": 199, "throw": 199, "dice": 199, "check_valid": 200, "warn": 200, "multivari": 200, "after": 201, "100000": 201, "nonc": [202, 203], "noncentr": [202, 203], "todo": 202, "ii": 205, "lomax": 205, "randomli": 206, "lam": 207, "randomst": 210, "1923875335537315": 211, "rese": 218, "legaci": 218, "mt19937": 218, "engin": 218, "modifi": 219, "cauchi": 220, "lorentz": 220, "plot": 220, "1000000": [220, 222, 224, 225], "3x8000": 221, "8000": 221, "student": 224, "freedom": 224, "kappa": 227, "von": 227, "mise": 227, "dispers": 227, "33": 232, "3003003": 232, "len": 234, "newshap": 235, "One": 235, "infer": 235, "write": 235, "fastest": 235, "back": 235, "slowest": 235, "account": 235, "underli": 235, "never": 235, "valueerror": [235, 246], "reus": 235, "guarante": 235, "unspecifi": 235, "backward": 237, "li": 237, "detail": 238, "side": 239, "sorter": 239, "maintain": 239, "742278e": 241, "3012989": 242, "548739": 242, "traceback": 246, "recent": 246, "118033988749895": 248, "entir": 250, "22460635e": 252, "63317787e": 252, "996272": 253, "917152": 253, "32": 254, "whenev": 256, "dx": 257, "composit": 257, "trapezoid": 257, "delta": 264, "complement": 264, "phase": 264, "49778714": 264, "28318531": 264, "increas": 265, "vandermond": 265, "125": 265, "vertic": 268, "condit": 269, "chosen": 269, "70": 269, "80": 269, "offici": 272, "avail": 272, "algebra": [272, 282], "mathemat": [272, 282], "polynomi": [272, 282], "search": [272, 282], "statist": [272, 282], "summari": 272, "modul": 272, "level": 272, "util": 272, "counterpart": 278, "basic": [278, 282], "page": 282, "cover": 282, "numer": 282, "ad": 282, "elementwis": [282, 286], "pack": 282, "helper": 282, "equat": 282, "poly1d": 282, "variou": 286}, "objects": {"": [[2, 0, 0, "-", "dpnp"]], "dpnp": [[9, 1, 1, "", "abs"], [10, 1, 1, "", "absolute"], [11, 1, 1, "", "add"], [12, 1, 1, "", "all"], [13, 1, 1, "", "allclose"], [14, 1, 1, "", "amax"], [15, 1, 1, "", "amin"], [16, 1, 1, "", "any"], [17, 1, 1, "", "arange"], [18, 1, 1, "", "arccos"], [19, 1, 1, "", "arccosh"], [20, 1, 1, "", "arcsin"], [21, 1, 1, "", "arcsinh"], [22, 1, 1, "", "arctan"], [23, 1, 1, "", "arctan2"], [24, 1, 1, "", "arctanh"], [25, 1, 1, "", "argmax"], [26, 1, 1, "", "argmin"], [27, 1, 1, "", "argsort"], [28, 1, 1, "", "around"], [29, 1, 1, "", "array"], [30, 1, 1, "", "array_equal"], [31, 1, 1, "", "asanyarray"], [32, 1, 1, "", "asarray"], [33, 1, 1, "", "ascontiguousarray"], [34, 1, 1, "", "asfarray"], [35, 1, 1, "", "asnumpy"], [36, 1, 1, "", "atleast_1d"], [37, 1, 1, "", "atleast_2d"], [38, 1, 1, "", "atleast_3d"], [39, 1, 1, "", "average"], [40, 1, 1, "", "bincount"], [41, 1, 1, "", "bitwise_and"], [42, 1, 1, "", "bitwise_not"], [43, 1, 1, "", "bitwise_or"], [44, 1, 1, "", "bitwise_xor"], [45, 1, 1, "", "broadcast_to"], [46, 1, 1, "", "cbrt"], [47, 1, 1, "", "ceil"], [48, 1, 1, "", "concatenate"], [49, 1, 1, "", "conj"], [50, 1, 1, "", "convolve"], [51, 1, 1, "", "copy"], [52, 1, 1, "", "copysign"], [53, 1, 1, "", "copyto"], [54, 1, 1, "", "correlate"], [55, 1, 1, "", "cos"], [56, 1, 1, "", "cosh"], [57, 1, 1, "", "count_nonzero"], [58, 1, 1, "", "cov"], [59, 1, 1, "", "cross"], [60, 1, 1, "", "cumprod"], [61, 1, 1, "", "cumsum"], [62, 1, 1, "", "deg2rad"], [63, 1, 1, "", "degrees"], [64, 1, 1, "", "diag"], [65, 1, 1, "", "diagflat"], [66, 1, 1, "", "diff"], [67, 1, 1, "", "divide"], [68, 1, 1, "", "dot"], [70, 1, 1, "", "ediff1d"], [71, 1, 1, "", "einsum"], [72, 1, 1, "", "einsum_path"], [73, 1, 1, "", "empty"], [74, 1, 1, "", "empty_like"], [75, 1, 1, "", "equal"], [76, 1, 1, "", "erf"], [77, 1, 1, "", "exp"], [78, 1, 1, "", "exp2"], [79, 1, 1, "", "expand_dims"], [80, 1, 1, "", "expm1"], [81, 1, 1, "", "eye"], [82, 1, 1, "", "fabs"], [8, 0, 0, "-", "fft"], [101, 1, 1, "", "floor"], [102, 1, 1, "", "floor_divide"], [103, 1, 1, "", "fmax"], [104, 1, 1, "", "fmin"], [105, 1, 1, "", "fmod"], [106, 1, 1, "", "fromfile"], [107, 1, 1, "", "full"], [108, 1, 1, "", "full_like"], [109, 1, 1, "", "geomspace"], [110, 1, 1, "", "get_include"], [111, 1, 1, "", "gradient"], [112, 1, 1, "", "greater"], [113, 1, 1, "", "greater_equal"], [114, 1, 1, "", "histogram"], [115, 1, 1, "", "hstack"], [116, 1, 1, "", "hypot"], [117, 1, 1, "", "identity"], [118, 1, 1, "", "inner"], [119, 1, 1, "", "invert"], [120, 1, 1, "", "isclose"], [121, 1, 1, "", "isfinite"], [122, 1, 1, "", "isinf"], [123, 1, 1, "", "isnan"], [124, 1, 1, "", "isscalar"], [125, 1, 1, "", "kron"], [126, 1, 1, "", "left_shift"], [127, 1, 1, "", "less"], [128, 1, 1, "", "less_equal"], [141, 1, 1, "", "linspace"], [142, 1, 1, "", "log"], [143, 1, 1, "", "log10"], [144, 1, 1, "", "log1p"], [145, 1, 1, "", "log2"], [146, 1, 1, "", "logical_and"], [147, 1, 1, "", "logical_not"], [148, 1, 1, "", "logical_or"], [149, 1, 1, "", "logical_xor"], [150, 1, 1, "", "logspace"], [151, 1, 1, "", "matmul"], [152, 1, 1, "", "max"], [153, 1, 1, "", "maximum"], [154, 1, 1, "", "mean"], [155, 1, 1, "", "median"], [156, 1, 1, "", "meshgrid"], [157, 5, 1, "", "mgrid"], [158, 1, 1, "", "min"], [159, 1, 1, "", "minimum"], [160, 1, 1, "", "mod"], [161, 1, 1, "", "modf"], [162, 1, 1, "", "moveaxis"], [163, 1, 1, "", "multiply"], [164, 1, 1, "", "nancumprod"], [165, 1, 1, "", "nancumsum"], [166, 1, 1, "", "nanprod"], [167, 1, 1, "", "nansum"], [168, 1, 1, "", "nanvar"], [169, 3, 1, "", "ndarray"], [170, 1, 1, "", "negative"], [171, 1, 1, "", "nonzero"], [172, 1, 1, "", "not_equal"], [173, 5, 1, "", "ogrid"], [174, 1, 1, "", "ones"], [175, 1, 1, "", "ones_like"], [176, 1, 1, "", "outer"], [177, 1, 1, "", "partition"], [178, 1, 1, "", "power"], [179, 1, 1, "", "prod"], [180, 1, 1, "", "rad2deg"], [181, 1, 1, "", "radians"], [281, 0, 0, "-", "random"], [231, 1, 1, "", "ravel"], [232, 1, 1, "", "reciprocal"], [233, 1, 1, "", "remainder"], [234, 1, 1, "", "repeat"], [235, 1, 1, "", "reshape"], [236, 1, 1, "", "right_shift"], [237, 1, 1, "", "rollaxis"], [238, 1, 1, "", "round_"], [239, 1, 1, "", "searchsorted"], [240, 1, 1, "", "sign"], [241, 1, 1, "", "sin"], [242, 1, 1, "", "sinh"], [243, 1, 1, "", "sort"], [244, 1, 1, "", "sqrt"], [245, 1, 1, "", "square"], [246, 1, 1, "", "squeeze"], [247, 1, 1, "", "stack"], [248, 1, 1, "", "std"], [249, 1, 1, "", "subtract"], [250, 1, 1, "", "sum"], [251, 1, 1, "", "swapaxes"], [252, 1, 1, "", "tan"], [253, 1, 1, "", "tanh"], [254, 1, 1, "", "tensordot"], [255, 1, 1, "", "trace"], [256, 1, 1, "", "transpose"], [257, 1, 1, "", "trapz"], [258, 1, 1, "", "tri"], [259, 1, 1, "", "tril"], [260, 1, 1, "", "triu"], [261, 1, 1, "", "true_divide"], [262, 1, 1, "", "trunc"], [263, 1, 1, "", "unique"], [264, 1, 1, "", "unwrap"], [265, 1, 1, "", "vander"], [266, 1, 1, "", "var"], [267, 1, 1, "", "vdot"], [268, 1, 1, "", "vstack"], [269, 1, 1, "", "where"], [270, 1, 1, "", "zeros"], [271, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[69, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[69, 3, 1, "", "T"], [69, 4, 1, "", "__eq__"], [69, 4, 1, "", "__ge__"], [69, 4, 1, "", "__getitem__"], [69, 4, 1, "", "__gt__"], [69, 4, 1, "", "__le__"], [69, 4, 1, "", "__len__"], [69, 4, 1, "", "__lt__"], [69, 4, 1, "", "__ne__"], [69, 4, 1, "", "__setitem__"], [69, 4, 1, "", "all"], [69, 4, 1, "", "any"], [69, 4, 1, "", "argmax"], [69, 4, 1, "", "argmin"], [69, 4, 1, "", "argsort"], [69, 4, 1, "", "asnumpy"], [69, 4, 1, "", "astype"], [69, 4, 1, "", "choose"], [69, 4, 1, "", "conj"], [69, 4, 1, "", "conjugate"], [69, 4, 1, "", "cumsum"], [69, 3, 1, "", "device"], [69, 4, 1, "", "diagonal"], [69, 4, 1, "", "dot"], [69, 3, 1, "", "dtype"], [69, 4, 1, "", "fill"], [69, 3, 1, "", "flags"], [69, 3, 1, "", "flat"], [69, 4, 1, "", "flatten"], [69, 4, 1, "", "get_array"], [69, 4, 1, "", "item"], [69, 3, 1, "", "itemsize"], [69, 4, 1, "", "max"], [69, 4, 1, "", "mean"], [69, 4, 1, "", "min"], [69, 3, 1, "", "nbytes"], [69, 3, 1, "", "ndim"], [69, 4, 1, "", "nonzero"], [69, 4, 1, "", "partition"], [69, 4, 1, "", "prod"], [69, 4, 1, "", "reshape"], [69, 4, 1, "", "round"], [69, 3, 1, "", "shape"], [69, 3, 1, "", "size"], [69, 4, 1, "", "squeeze"], [69, 4, 1, "", "std"], [69, 3, 1, "", "strides"], [69, 4, 1, "", "sum"], [69, 3, 1, "", "sycl_context"], [69, 3, 1, "", "sycl_device"], [69, 3, 1, "", "sycl_queue"], [69, 4, 1, "", "take"], [69, 4, 1, "", "to_device"], [69, 4, 1, "", "transpose"], [69, 3, 1, "", "usm_type"], [69, 4, 1, "", "var"]], "dpnp.fft": [[83, 1, 1, "", "fft"], [84, 1, 1, "", "fft2"], [85, 1, 1, "", "fftfreq"], [86, 1, 1, "", "fftn"], [87, 1, 1, "", "fftshift"], [88, 1, 1, "", "hfft"], [89, 1, 1, "", "ifft"], [90, 1, 1, "", "ifft2"], [91, 1, 1, "", "ifftn"], [92, 1, 1, "", "ifftshift"], [93, 1, 1, "", "ihfft"], [94, 1, 1, "", "irfft"], [95, 1, 1, "", "irfft2"], [96, 1, 1, "", "irfftn"], [97, 1, 1, "", "rfft"], [98, 1, 1, "", "rfft2"], [99, 1, 1, "", "rfftfreq"], [100, 1, 1, "", "rfftn"]], "dpnp.linalg": [[129, 1, 1, "", "cholesky"], [130, 1, 1, "", "det"], [131, 1, 1, "", "eig"], [132, 1, 1, "", "eigh"], [133, 1, 1, "", "eigvals"], [134, 1, 1, "", "inv"], [135, 1, 1, "", "matrix_power"], [136, 1, 1, "", "matrix_rank"], [137, 1, 1, "", "multi_dot"], [138, 1, 1, "", "norm"], [139, 1, 1, "", "qr"], [140, 1, 1, "", "svd"]], "dpnp.random": [[182, 2, 1, "", "RandomState"], [183, 1, 1, "", "beta"], [184, 1, 1, "", "binomial"], [185, 1, 1, "", "bytes"], [186, 1, 1, "", "chisquare"], [187, 1, 1, "", "choice"], [188, 1, 1, "", "dirichlet"], [189, 1, 1, "", "exponential"], [190, 1, 1, "", "f"], [191, 1, 1, "", "gamma"], [192, 1, 1, "", "geometric"], [193, 1, 1, "", "gumbel"], [194, 1, 1, "", "hypergeometric"], [195, 1, 1, "", "laplace"], [196, 1, 1, "", "logistic"], [197, 1, 1, "", "lognormal"], [198, 1, 1, "", "logseries"], [199, 1, 1, "", "multinomial"], [200, 1, 1, "", "multivariate_normal"], [201, 1, 1, "", "negative_binomial"], [202, 1, 1, "", "noncentral_chisquare"], [203, 1, 1, "", "noncentral_f"], [204, 1, 1, "", "normal"], [205, 1, 1, "", "pareto"], [206, 1, 1, "", "permutation"], [207, 1, 1, "", "poisson"], [208, 1, 1, "", "power"], [209, 1, 1, "", "rand"], [210, 1, 1, "", "randint"], [211, 1, 1, "", "randn"], [212, 1, 1, "", "random"], [213, 1, 1, "", "random_integers"], [214, 1, 1, "", "random_sample"], [215, 1, 1, "", "ranf"], [216, 1, 1, "", "rayleigh"], [217, 1, 1, "", "sample"], [218, 1, 1, "", "seed"], [219, 1, 1, "", "shuffle"], [220, 1, 1, "", "standard_cauchy"], [221, 1, 1, "", "standard_exponential"], [222, 1, 1, "", "standard_gamma"], [223, 1, 1, "", "standard_normal"], [224, 1, 1, "", "standard_t"], [225, 1, 1, "", "triangular"], [226, 1, 1, "", "uniform"], [227, 1, 1, "", "vonmises"], [228, 1, 1, "", "wald"], [229, 1, 1, "", "weibull"], [230, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[182, 4, 1, "", "__eq__"], [182, 4, 1, "", "__ge__"], [182, 4, 1, "", "__gt__"], [182, 4, 1, "", "__le__"], [182, 4, 1, "", "__lt__"], [182, 4, 1, "", "__ne__"], [182, 4, 1, "", "get_state"], [182, 4, 1, "", "get_sycl_device"], [182, 4, 1, "", "get_sycl_queue"], [182, 4, 1, "", "normal"], [182, 4, 1, "", "rand"], [182, 4, 1, "", "randint"], [182, 4, 1, "", "randn"], [182, 4, 1, "", "random_sample"], [182, 4, 1, "", "standard_normal"], [182, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"dpctl": 0, "usag": 0, "exampl": 0, "c": 1, "backend": 1, "api": [1, 272], "refer": [1, 272], "dpnp": [2, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 281], "A": 2, "numpi": [2, 7], "compat": 2, "librari": 2, "sycl": 2, "base": 2, "devic": 2, "instal": 3, "guid": 3, "requir": 3, "python": 3, "depend": 3, "from": [3, 6], "conda": 3, "forg": 3, "sourc": 3, "binari": 4, "oper": [4, 274, 275, 276, 286], "elementwis": 4, "bit": [4, 286], "pack": 4, "output": 4, "format": 4, "comparison": [5, 274, 286], "tabl": 5, "summari": 5, "modul": [5, 280], "level": 5, "multi": [5, 278], "dimension": [5, 278], "arrai": [5, 6, 29, 274, 275, 278], "linear": [5, 273], "algebra": [5, 273], "discret": 5, "fourier": 5, "transform": 5, "random": [5, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 281], "sampl": [5, 217, 281], "creation": 6, "routin": [6, 8, 275, 276, 277, 282], "basic": [6, 275, 280], "other": [6, 276], "data": [6, 7, 281], "numer": 6, "rang": 6, "matrix": [6, 273], "differ": [7, 276], "between": 7, "type": [7, 274], "fft": [8, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "function": [8, 274, 276, 284, 285, 286], "standard": 8, "real": 8, "hermitian": 8, "helper": 8, "ab": 9, "absolut": 10, "add": 11, "all": 12, "allclos": 13, "amax": 14, "amin": 15, "ani": 16, "arang": 17, "arcco": 18, "arccosh": 19, "arcsin": 20, "arcsinh": 21, "arctan": 22, "arctan2": 23, "arctanh": 24, "argmax": 25, "argmin": 26, "argsort": 27, "around": 28, "array_equ": 30, "asanyarrai": 31, "asarrai": 32, "ascontiguousarrai": 33, "asfarrai": 34, "asnumpi": 35, "atleast_1d": 36, "atleast_2d": 37, "atleast_3d": 38, "averag": 39, "bincount": 40, "bitwise_and": 41, "bitwise_not": 42, "bitwise_or": 43, "bitwise_xor": 44, "broadcast_to": 45, "cbrt": 46, "ceil": 47, "concaten": 48, "conj": 49, "convolv": 50, "copi": 51, "copysign": 52, "copyto": 53, "correl": [54, 285], "co": 55, "cosh": 56, "count_nonzero": 57, "cov": 58, "cross": 59, "cumprod": 60, "cumsum": 61, "deg2rad": 62, "degre": 63, "diag": 64, "diagflat": 65, "diff": 66, "divid": 67, "dot": 68, "dpnp_arrai": 69, "ediff1d": 70, "einsum": 71, "einsum_path": 72, "empti": 73, "empty_lik": 74, "equal": 75, "erf": 76, "exp": 77, "exp2": 78, "expand_dim": 79, "expm1": 80, "ey": 81, "fab": 82, "fft2": 84, "fftfreq": 85, "fftn": 86, "fftshift": 87, "hfft": 88, "ifft": 89, "ifft2": 90, "ifftn": 91, "ifftshift": 92, "ihfft": 93, "irfft": 94, "irfft2": 95, "irfftn": 96, "rfft": 97, "rfft2": 98, "rfftfreq": 99, "rfftn": 100, "floor": 101, "floor_divid": 102, "fmax": 103, "fmin": 104, "fmod": 105, "fromfil": 106, "full": 107, "full_lik": 108, "geomspac": 109, "get_includ": 110, "gradient": 111, "greater": 112, "greater_equ": 113, "histogram": [114, 285], "hstack": 115, "hypot": 116, "ident": 117, "inner": 118, "invert": 119, "isclos": 120, "isfinit": 121, "isinf": 122, "isnan": 123, "isscalar": 124, "kron": 125, "left_shift": 126, "less": 127, "less_equ": 128, "linalg": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "choleski": 129, "det": 130, "eig": 131, "eigh": 132, "eigval": 133, "inv": 134, "matrix_pow": 135, "matrix_rank": 136, "multi_dot": 137, "norm": [138, 273], "qr": 139, "svd": 140, "linspac": 141, "log": 142, "log10": 143, "log1p": 144, "log2": 145, "logical_and": 146, "logical_not": 147, "logical_or": 148, "logical_xor": 149, "logspac": 150, "matmul": 151, "max": 152, "maximum": 153, "mean": [154, 285], "median": 155, "meshgrid": 156, "mgrid": 157, "min": 158, "minimum": 159, "mod": 160, "modf": 161, "moveaxi": 162, "multipli": 163, "nancumprod": 164, "nancumsum": 165, "nanprod": 166, "nansum": 167, "nanvar": 168, "ndarrai": [169, 278], "neg": 170, "nonzero": 171, "not_equ": 172, "ogrid": 173, "ones": 174, "ones_lik": 175, "outer": 176, "partit": 177, "power": [178, 208], "prod": 179, "rad2deg": 180, "radian": 181, "randomst": 182, "beta": 183, "binomi": 184, "byte": 185, "chisquar": 186, "choic": 187, "dirichlet": 188, "exponenti": 189, "f": 190, "gamma": 191, "geometr": 192, "gumbel": 193, "hypergeometr": 194, "laplac": 195, "logist": 196, "lognorm": 197, "logseri": 198, "multinomi": 199, "multivariate_norm": 200, "negative_binomi": 201, "noncentral_chisquar": 202, "noncentral_f": 203, "normal": 204, "pareto": 205, "permut": [206, 281], "poisson": 207, "rand": 209, "randint": 210, "randn": 211, "random_integ": 213, "random_sampl": 214, "ranf": 215, "rayleigh": 216, "seed": 218, "shuffl": 219, "standard_cauchi": 220, "standard_exponenti": 221, "standard_gamma": 222, "standard_norm": 223, "standard_t": 224, "triangular": 225, "uniform": 226, "vonmis": 227, "wald": 228, "weibul": 229, "zipf": 230, "ravel": 231, "reciproc": 232, "remaind": 233, "repeat": 234, "reshap": 235, "right_shift": 236, "rollaxi": 237, "round_": 238, "searchsort": 239, "sign": 240, "sin": 241, "sinh": 242, "sort": [243, 283], "sqrt": 244, "squar": 245, "squeez": 246, "stack": 247, "std": 248, "subtract": 249, "sum": [250, 276], "swapax": 251, "tan": 252, "tanh": 253, "tensordot": 254, "trace": 255, "transpos": [256, 275], "trapz": 257, "tri": 258, "tril": 259, "triu": 260, "true_divid": 261, "trunc": 262, "uniqu": 263, "unwrap": 264, "vander": 265, "var": 266, "vdot": 267, "vstack": 268, "where": 269, "zero": 270, "zeros_lik": 271, "vector": 273, "product": [273, 276], "decomposit": 273, "eigenvalu": 273, "etc": 273, "solv": 273, "equat": 273, "special": [273, 276, 284], "matric": 273, "logic": 274, "truth": 274, "valu": 274, "test": 274, "infin": 274, "nan": 274, "manipul": 275, "chang": 275, "shape": 275, "like": 275, "number": [275, 276], "dimens": 275, "kind": 275, "join": 275, "split": 275, "tile": 275, "ad": 275, "remov": 275, "element": 275, "rearrang": 275, "mathemat": 276, "trigonometr": [276, 286], "hyperbol": 276, "round": 276, "expon": 276, "logarithm": 276, "float": [276, 286], "point": 276, "arithmet": [276, 280], "handl": 276, "complex": 276, "miscellan": [276, 277], "util": 277, "pad": 279, "polynomi": 280, "packag": 280, "polyutil": 280, "poly1d": 280, "simpl": 281, "distribut": 281, "gener": 281, "search": 283, "count": 283, "error": 284, "statist": 285, "order": 285, "varianc": 285, "univers": 286, "ufunc": 286, "avail": 286, "math": 286, "twiddl": 286}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"DPCtl Usage": [[0, "dpctl-usage"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "DPNP \u2013 A NumPy-compatible library for SYCL-based devices": [[2, "module-dpnp"]], "Installation Guide": [[3, "installation-guide"]], "Requirements": [[3, "requirements"]], "Python Dependencies": [[3, "python-dependencies"]], "Installing DPNP from conda-forge": [[3, "installing-dpnp-from-conda-forge"]], "Installing DPNP from Source": [[3, "installing-dpnp-from-source"]], "Binary Operations": [[4, "binary-operations"]], "Elementwise bit operations": [[4, "elementwise-bit-operations"]], "Bit packing": [[4, "bit-packing"]], "Output formatting": [[4, "output-formatting"]], "Comparison Table": [[5, "comparison-table"]], "Summary": [[5, "summary"]], "Module-Level": [[5, "module-level"]], "Multi-Dimensional Array": [[5, "multi-dimensional-array"]], "Linear Algebra": [[5, "linear-algebra"], [273, "linear-algebra"]], "Discrete Fourier Transform": [[5, "discrete-fourier-transform"]], "Random Sampling": [[5, "random-sampling"]], "Array Creation Routines": [[6, "array-creation-routines"]], "Basic creation routines": [[6, "basic-creation-routines"]], "Creation from other data": [[6, "creation-from-other-data"]], "Numerical ranges": [[6, "numerical-ranges"]], "Matrix creation": [[6, "matrix-creation"]], "Difference between DPNP and NumPy": [[7, "difference-between-dpnp-and-numpy"]], "Data types": [[7, "data-types"]], "FFT Functions": [[8, "fft-functions"]], "Standard FFTs": [[8, "standard-ffts"]], "Real FFTs": [[8, "real-ffts"]], "Hermitian FFTs": [[8, "hermitian-ffts"]], "Helper routines": [[8, "helper-routines"]], "dpnp.abs": [[9, "dpnp-abs"]], "dpnp.absolute": [[10, "dpnp-absolute"]], "dpnp.add": [[11, "dpnp-add"]], "dpnp.all": [[12, "dpnp-all"]], "dpnp.allclose": [[13, "dpnp-allclose"]], "dpnp.amax": [[14, "dpnp-amax"]], "dpnp.amin": [[15, "dpnp-amin"]], "dpnp.any": [[16, "dpnp-any"]], "dpnp.arange": [[17, "dpnp-arange"]], "dpnp.arccos": [[18, "dpnp-arccos"]], "dpnp.arccosh": [[19, "dpnp-arccosh"]], "dpnp.arcsin": [[20, "dpnp-arcsin"]], "dpnp.arcsinh": [[21, "dpnp-arcsinh"]], "dpnp.arctan": [[22, "dpnp-arctan"]], "dpnp.arctan2": [[23, "dpnp-arctan2"]], "dpnp.arctanh": [[24, "dpnp-arctanh"]], "dpnp.argmax": [[25, "dpnp-argmax"]], "dpnp.argmin": [[26, "dpnp-argmin"]], "dpnp.argsort": [[27, "dpnp-argsort"]], "dpnp.around": [[28, "dpnp-around"]], "dpnp.array": [[29, "dpnp-array"]], "dpnp.array_equal": [[30, "dpnp-array-equal"]], "dpnp.asanyarray": [[31, "dpnp-asanyarray"]], "dpnp.asarray": [[32, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[33, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[34, "dpnp-asfarray"]], "dpnp.asnumpy": [[35, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[36, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[37, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[38, "dpnp-atleast-3d"]], "dpnp.average": [[39, "dpnp-average"]], "dpnp.bincount": [[40, "dpnp-bincount"]], "dpnp.bitwise_and": [[41, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[42, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[43, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[44, "dpnp-bitwise-xor"]], "dpnp.broadcast_to": [[45, "dpnp-broadcast-to"]], "dpnp.cbrt": [[46, "dpnp-cbrt"]], "dpnp.ceil": [[47, "dpnp-ceil"]], "dpnp.concatenate": [[48, "dpnp-concatenate"]], "dpnp.conj": [[49, "dpnp-conj"]], "dpnp.convolve": [[50, "dpnp-convolve"]], "dpnp.copy": [[51, "dpnp-copy"]], "dpnp.copysign": [[52, "dpnp-copysign"]], "dpnp.copyto": [[53, "dpnp-copyto"]], "dpnp.correlate": [[54, "dpnp-correlate"]], "dpnp.cos": [[55, "dpnp-cos"]], "dpnp.cosh": [[56, "dpnp-cosh"]], "dpnp.count_nonzero": [[57, "dpnp-count-nonzero"]], "dpnp.cov": [[58, "dpnp-cov"]], "dpnp.cross": [[59, "dpnp-cross"]], "dpnp.cumprod": [[60, "dpnp-cumprod"]], "dpnp.cumsum": [[61, "dpnp-cumsum"]], "dpnp.deg2rad": [[62, "dpnp-deg2rad"]], "dpnp.degrees": [[63, "dpnp-degrees"]], "dpnp.diag": [[64, "dpnp-diag"]], "dpnp.diagflat": [[65, "dpnp-diagflat"]], "dpnp.diff": [[66, "dpnp-diff"]], "dpnp.divide": [[67, "dpnp-divide"]], "dpnp.dot": [[68, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[69, "dpnp-dpnp-array-dpnp-array"]], "dpnp.ediff1d": [[70, "dpnp-ediff1d"]], "dpnp.einsum": [[71, "dpnp-einsum"]], "dpnp.einsum_path": [[72, "dpnp-einsum-path"]], "dpnp.empty": [[73, "dpnp-empty"]], "dpnp.empty_like": [[74, "dpnp-empty-like"]], "dpnp.equal": [[75, "dpnp-equal"]], "dpnp.erf": [[76, "dpnp-erf"]], "dpnp.exp": [[77, "dpnp-exp"]], "dpnp.exp2": [[78, "dpnp-exp2"]], "dpnp.expand_dims": [[79, "dpnp-expand-dims"]], "dpnp.expm1": [[80, "dpnp-expm1"]], "dpnp.eye": [[81, "dpnp-eye"]], "dpnp.fabs": [[82, "dpnp-fabs"]], "dpnp.fft.fft": [[83, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[84, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[85, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[86, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[87, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[88, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[89, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[90, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[91, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[92, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[93, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[94, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[95, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[96, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[97, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[98, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[99, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[100, "dpnp-fft-rfftn"]], "dpnp.floor": [[101, "dpnp-floor"]], "dpnp.floor_divide": [[102, "dpnp-floor-divide"]], "dpnp.fmax": [[103, "dpnp-fmax"]], "dpnp.fmin": [[104, "dpnp-fmin"]], "dpnp.fmod": [[105, "dpnp-fmod"]], "dpnp.fromfile": [[106, "dpnp-fromfile"]], "dpnp.full": [[107, "dpnp-full"]], "dpnp.full_like": [[108, "dpnp-full-like"]], "dpnp.geomspace": [[109, "dpnp-geomspace"]], "dpnp.get_include": [[110, "dpnp-get-include"]], "dpnp.gradient": [[111, "dpnp-gradient"]], "dpnp.greater": [[112, "dpnp-greater"]], "dpnp.greater_equal": [[113, "dpnp-greater-equal"]], "dpnp.histogram": [[114, "dpnp-histogram"]], "dpnp.hstack": [[115, "dpnp-hstack"]], "dpnp.hypot": [[116, "dpnp-hypot"]], "dpnp.identity": [[117, "dpnp-identity"]], "dpnp.inner": [[118, "dpnp-inner"]], "dpnp.invert": [[119, "dpnp-invert"]], "dpnp.isclose": [[120, "dpnp-isclose"]], "dpnp.isfinite": [[121, "dpnp-isfinite"]], "dpnp.isinf": [[122, "dpnp-isinf"]], "dpnp.isnan": [[123, "dpnp-isnan"]], "dpnp.isscalar": [[124, "dpnp-isscalar"]], "dpnp.kron": [[125, "dpnp-kron"]], "dpnp.left_shift": [[126, "dpnp-left-shift"]], "dpnp.less": [[127, "dpnp-less"]], "dpnp.less_equal": [[128, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[129, "dpnp-linalg-cholesky"]], "dpnp.linalg.det": [[130, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[131, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[132, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[133, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[134, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[135, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[136, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[137, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[138, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[139, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[140, "dpnp-linalg-svd"]], "dpnp.linspace": [[141, "dpnp-linspace"]], "dpnp.log": [[142, "dpnp-log"]], "dpnp.log10": [[143, "dpnp-log10"]], "dpnp.log1p": [[144, "dpnp-log1p"]], "dpnp.log2": [[145, "dpnp-log2"]], "dpnp.logical_and": [[146, "dpnp-logical-and"]], "dpnp.logical_not": [[147, "dpnp-logical-not"]], "dpnp.logical_or": [[148, "dpnp-logical-or"]], "dpnp.logical_xor": [[149, "dpnp-logical-xor"]], "dpnp.logspace": [[150, "dpnp-logspace"]], "dpnp.matmul": [[151, "dpnp-matmul"]], "dpnp.max": [[152, "dpnp-max"]], "dpnp.maximum": [[153, "dpnp-maximum"]], "dpnp.mean": [[154, "dpnp-mean"]], "dpnp.median": [[155, "dpnp-median"]], "dpnp.meshgrid": [[156, "dpnp-meshgrid"]], "dpnp.mgrid": [[157, "dpnp-mgrid"]], "dpnp.min": [[158, "dpnp-min"]], "dpnp.minimum": [[159, "dpnp-minimum"]], "dpnp.mod": [[160, "dpnp-mod"]], "dpnp.modf": [[161, "dpnp-modf"]], "dpnp.moveaxis": [[162, "dpnp-moveaxis"]], "dpnp.multiply": [[163, "dpnp-multiply"]], "dpnp.nancumprod": [[164, "dpnp-nancumprod"]], "dpnp.nancumsum": [[165, "dpnp-nancumsum"]], "dpnp.nanprod": [[166, "dpnp-nanprod"]], "dpnp.nansum": [[167, "dpnp-nansum"]], "dpnp.nanvar": [[168, "dpnp-nanvar"]], "dpnp.ndarray": [[169, "dpnp-ndarray"]], "dpnp.negative": [[170, "dpnp-negative"]], "dpnp.nonzero": [[171, "dpnp-nonzero"]], "dpnp.not_equal": [[172, "dpnp-not-equal"]], "dpnp.ogrid": [[173, "dpnp-ogrid"]], "dpnp.ones": [[174, "dpnp-ones"]], "dpnp.ones_like": [[175, "dpnp-ones-like"]], "dpnp.outer": [[176, "dpnp-outer"]], "dpnp.partition": [[177, "dpnp-partition"]], "dpnp.power": [[178, "dpnp-power"]], "dpnp.prod": [[179, "dpnp-prod"]], "dpnp.rad2deg": [[180, "dpnp-rad2deg"]], "dpnp.radians": [[181, "dpnp-radians"]], "dpnp.random.RandomState": [[182, "dpnp-random-randomstate"]], "dpnp.random.beta": [[183, "dpnp-random-beta"]], "dpnp.random.binomial": [[184, "dpnp-random-binomial"]], "dpnp.random.bytes": [[185, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[186, "dpnp-random-chisquare"]], "dpnp.random.choice": [[187, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[188, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[189, "dpnp-random-exponential"]], "dpnp.random.f": [[190, "dpnp-random-f"]], "dpnp.random.gamma": [[191, "dpnp-random-gamma"]], "dpnp.random.geometric": [[192, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[193, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[194, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[195, "dpnp-random-laplace"]], "dpnp.random.logistic": [[196, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[197, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[198, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[199, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[200, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[201, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[202, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[203, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[204, "dpnp-random-normal"]], "dpnp.random.pareto": [[205, "dpnp-random-pareto"]], "dpnp.random.permutation": [[206, "dpnp-random-permutation"]], "dpnp.random.poisson": [[207, "dpnp-random-poisson"]], "dpnp.random.power": [[208, "dpnp-random-power"]], "dpnp.random.rand": [[209, "dpnp-random-rand"]], "dpnp.random.randint": [[210, "dpnp-random-randint"]], "dpnp.random.randn": [[211, "dpnp-random-randn"]], "dpnp.random.random": [[212, "dpnp-random-random"]], "dpnp.random.random_integers": [[213, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[214, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[215, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[216, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[217, "dpnp-random-sample"]], "dpnp.random.seed": [[218, "dpnp-random-seed"]], "dpnp.random.shuffle": [[219, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[220, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[221, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[222, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[223, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[224, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[225, "dpnp-random-triangular"]], "dpnp.random.uniform": [[226, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[227, "dpnp-random-vonmises"]], "dpnp.random.wald": [[228, "dpnp-random-wald"]], "dpnp.random.weibull": [[229, "dpnp-random-weibull"]], "dpnp.random.zipf": [[230, "dpnp-random-zipf"]], "dpnp.ravel": [[231, "dpnp-ravel"]], "dpnp.reciprocal": [[232, "dpnp-reciprocal"]], "dpnp.remainder": [[233, "dpnp-remainder"]], "dpnp.repeat": [[234, "dpnp-repeat"]], "dpnp.reshape": [[235, "dpnp-reshape"]], "dpnp.right_shift": [[236, "dpnp-right-shift"]], "dpnp.rollaxis": [[237, "dpnp-rollaxis"]], "dpnp.round_": [[238, "dpnp-round"]], "dpnp.searchsorted": [[239, "dpnp-searchsorted"]], "dpnp.sign": [[240, "dpnp-sign"]], "dpnp.sin": [[241, "dpnp-sin"]], "dpnp.sinh": [[242, "dpnp-sinh"]], "dpnp.sort": [[243, "dpnp-sort"]], "dpnp.sqrt": [[244, "dpnp-sqrt"]], "dpnp.square": [[245, "dpnp-square"]], "dpnp.squeeze": [[246, "dpnp-squeeze"]], "dpnp.stack": [[247, "dpnp-stack"]], "dpnp.std": [[248, "dpnp-std"]], "dpnp.subtract": [[249, "dpnp-subtract"]], "dpnp.sum": [[250, "dpnp-sum"]], "dpnp.swapaxes": [[251, "dpnp-swapaxes"]], "dpnp.tan": [[252, "dpnp-tan"]], "dpnp.tanh": [[253, "dpnp-tanh"]], "dpnp.tensordot": [[254, "dpnp-tensordot"]], "dpnp.trace": [[255, "dpnp-trace"]], "dpnp.transpose": [[256, "dpnp-transpose"]], "dpnp.trapz": [[257, "dpnp-trapz"]], "dpnp.tri": [[258, "dpnp-tri"]], "dpnp.tril": [[259, "dpnp-tril"]], "dpnp.triu": [[260, "dpnp-triu"]], "dpnp.true_divide": [[261, "dpnp-true-divide"]], "dpnp.trunc": [[262, "dpnp-trunc"]], "dpnp.unique": [[263, "dpnp-unique"]], "dpnp.unwrap": [[264, "dpnp-unwrap"]], "dpnp.vander": [[265, "dpnp-vander"]], "dpnp.var": [[266, "dpnp-var"]], "dpnp.vdot": [[267, "dpnp-vdot"]], "dpnp.vstack": [[268, "dpnp-vstack"]], "dpnp.where": [[269, "dpnp-where"]], "dpnp.zeros": [[270, "dpnp-zeros"]], "dpnp.zeros_like": [[271, "dpnp-zeros-like"]], "API Reference": [[272, "api-reference"]], "Matrix and vector products": [[273, "matrix-and-vector-products"]], "Decompositions": [[273, "decompositions"]], "Matrix eigenvalues": [[273, "matrix-eigenvalues"]], "Norms etc.": [[273, "norms-etc"]], "Solving linear equations": [[273, "solving-linear-equations"]], "Special Matrices": [[273, "special-matrices"]], "Logic Functions": [[274, "logic-functions"]], "Truth value testing": [[274, "truth-value-testing"]], "Infinities and NaNs": [[274, "infinities-and-nans"]], "Array type testing": [[274, "array-type-testing"]], "Logic operations": [[274, "logic-operations"]], "Comparison": [[274, "comparison"]], "Array Manipulation Routines": [[275, "array-manipulation-routines"]], "Basic operations": [[275, "basic-operations"]], "Changing array shape": [[275, "changing-array-shape"]], "Transpose-like operations": [[275, "transpose-like-operations"]], "Changing number of dimensions": [[275, "changing-number-of-dimensions"]], "Changing kind of array": [[275, "changing-kind-of-array"]], "Joining arrays": [[275, "joining-arrays"]], "Splitting arrays": [[275, "splitting-arrays"]], "Tiling arrays": [[275, "tiling-arrays"]], "Adding and removing elements": [[275, "adding-and-removing-elements"]], "Rearranging elements": [[275, "rearranging-elements"]], "Mathematical Functions": [[276, "mathematical-functions"]], "Trigonometric functions": [[276, "trigonometric-functions"], [286, "trigonometric-functions"]], "Hyperbolic functions": [[276, "hyperbolic-functions"]], "Rounding": [[276, "rounding"]], "Sums, products, differences": [[276, "sums-products-differences"]], "Exponents and logarithms": [[276, "exponents-and-logarithms"]], "Other special functions": [[276, "other-special-functions"]], "Floating point routines": [[276, "floating-point-routines"]], "Arithmetic operations": [[276, "arithmetic-operations"]], "Handling complex numbers": [[276, "handling-complex-numbers"]], "Miscellaneous": [[276, "miscellaneous"]], "Miscellaneous routines": [[277, "miscellaneous-routines"]], "Utility": [[277, "utility"]], "Multi-Dimensional Array (ndarray)": [[278, "multi-dimensional-array-ndarray"]], "Padding": [[279, "padding"]], "Polynomials": [[280, "polynomials"]], "Polynomial Package": [[280, "polynomial-package"]], "Polynomial Module": [[280, "polynomial-module"]], "Polyutils": [[280, "polyutils"]], "Poly1d": [[280, "poly1d"]], "Basics": [[280, "basics"]], "Arithmetic": [[280, "arithmetic"]], "Random Sampling (dpnp.random)": [[281, "random-sampling-dpnp-random"]], "Simple random data": [[281, "simple-random-data"]], "Permutations": [[281, "permutations"]], "Distributions": [[281, "distributions"]], "Random generator": [[281, "random-generator"]], "Routines": [[282, "routines"]], "Sorting, Searching, and Counting": [[283, "sorting-searching-and-counting"]], "Sorting": [[283, "sorting"]], "Searching": [[283, "searching"]], "Counting": [[283, "counting"]], "Special Functions": [[284, "special-functions"]], "Error Function": [[284, "error-function"]], "Statistical Functions": [[285, "statistical-functions"]], "Order statistics": [[285, "order-statistics"]], "Means and variances": [[285, "means-and-variances"]], "Histograms": [[285, "histograms"]], "Correlations": [[285, "correlations"]], "Universal Functions (ufunc)": [[286, "universal-functions-ufunc"]], "Available ufuncs": [[286, "available-ufuncs"]], "Math operations": [[286, "math-operations"]], "Bit-twiddling functions": [[286, "bit-twiddling-functions"]], "Comparison functions": [[286, "comparison-functions"]], "Floating functions": [[286, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"]], "module": [[2, "module-dpnp"], [8, "module-dpnp.fft"], [281, "module-dpnp.random"]], "dpnp.fft": [[8, "module-dpnp.fft"]], "abs() (in module dpnp)": [[9, "dpnp.abs"]], "absolute() (in module dpnp)": [[10, "dpnp.absolute"]], "add() (in module dpnp)": [[11, "dpnp.add"]], "all() (in module dpnp)": [[12, "dpnp.all"]], "allclose() (in module dpnp)": [[13, "dpnp.allclose"]], "amax() (in module dpnp)": [[14, "dpnp.amax"]], "amin() (in module dpnp)": [[15, "dpnp.amin"]], "any() (in module dpnp)": [[16, "dpnp.any"]], "arange() (in module dpnp)": [[17, "dpnp.arange"]], "arccos() (in module dpnp)": [[18, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[19, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[20, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[21, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[22, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[23, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[24, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[25, "dpnp.argmax"]], "argmin() (in module dpnp)": [[26, "dpnp.argmin"]], "argsort() (in module dpnp)": [[27, "dpnp.argsort"]], "around() (in module dpnp)": [[28, "dpnp.around"]], "array() (in module dpnp)": [[29, "dpnp.array"]], "array_equal() (in module dpnp)": [[30, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[31, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[32, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[33, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[34, "dpnp.asfarray"]], "asnumpy() (in module dpnp)": [[35, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[36, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[37, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[38, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[39, "dpnp.average"]], "bincount() (in module dpnp)": [[40, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[41, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[42, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[43, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[44, "dpnp.bitwise_xor"]], "broadcast_to() (in module dpnp)": [[45, "dpnp.broadcast_to"]], "cbrt() (in module dpnp)": [[46, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[47, "dpnp.ceil"]], "concatenate() (in module dpnp)": [[48, "dpnp.concatenate"]], "conj() (in module dpnp)": [[49, "dpnp.conj"]], "convolve() (in module dpnp)": [[50, "dpnp.convolve"]], "copy() (in module dpnp)": [[51, "dpnp.copy"]], "copysign() (in module dpnp)": [[52, "dpnp.copysign"]], "copyto() (in module dpnp)": [[53, "dpnp.copyto"]], "correlate() (in module dpnp)": [[54, "dpnp.correlate"]], "cos() (in module dpnp)": [[55, "dpnp.cos"]], "cosh() (in module dpnp)": [[56, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[57, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[58, "dpnp.cov"]], "cross() (in module dpnp)": [[59, "dpnp.cross"]], "cumprod() (in module dpnp)": [[60, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[61, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[62, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[63, "dpnp.degrees"]], "diag() (in module dpnp)": [[64, "dpnp.diag"]], "diagflat() (in module dpnp)": [[65, "dpnp.diagflat"]], "diff() (in module dpnp)": [[66, "dpnp.diff"]], "divide() (in module dpnp)": [[67, "dpnp.divide"]], "dot() (in module dpnp)": [[68, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.conjugate"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[69, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.get_array"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.prod"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.sum"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[69, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[69, "dpnp.dpnp_array.dpnp_array.var"]], "ediff1d() (in module dpnp)": [[70, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[71, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[72, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[73, "dpnp.empty"]], "empty_like() (in module dpnp)": [[74, "dpnp.empty_like"]], "equal() (in module dpnp)": [[75, "dpnp.equal"]], "erf() (in module dpnp)": [[76, "dpnp.erf"]], "exp() (in module dpnp)": [[77, "dpnp.exp"]], "exp2() (in module dpnp)": [[78, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[79, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[80, "dpnp.expm1"]], "eye() (in module dpnp)": [[81, "dpnp.eye"]], "fabs() (in module dpnp)": [[82, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[83, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[84, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[85, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[86, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[87, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[88, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[89, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[90, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[91, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[92, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[93, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[94, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[95, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[96, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[97, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[98, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[99, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[100, "dpnp.fft.rfftn"]], "floor() (in module dpnp)": [[101, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[102, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[103, "dpnp.fmax"]], "fmin() (in module dpnp)": [[104, "dpnp.fmin"]], "fmod() (in module dpnp)": [[105, "dpnp.fmod"]], "fromfile() (in module dpnp)": [[106, "dpnp.fromfile"]], "full() (in module dpnp)": [[107, "dpnp.full"]], "full_like() (in module dpnp)": [[108, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[109, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[110, "dpnp.get_include"]], "gradient() (in module dpnp)": [[111, "dpnp.gradient"]], "greater() (in module dpnp)": [[112, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[113, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[114, "dpnp.histogram"]], "hstack() (in module dpnp)": [[115, "dpnp.hstack"]], "hypot() (in module dpnp)": [[116, "dpnp.hypot"]], "identity() (in module dpnp)": [[117, "dpnp.identity"]], "inner() (in module dpnp)": [[118, "dpnp.inner"]], "invert() (in module dpnp)": [[119, "dpnp.invert"]], "isclose() (in module dpnp)": [[120, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[121, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[122, "dpnp.isinf"]], "isnan() (in module dpnp)": [[123, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[124, "dpnp.isscalar"]], "kron() (in module dpnp)": [[125, "dpnp.kron"]], "left_shift() (in module dpnp)": [[126, "dpnp.left_shift"]], "less() (in module dpnp)": [[127, "dpnp.less"]], "less_equal() (in module dpnp)": [[128, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[129, "dpnp.linalg.cholesky"]], "det() (in module dpnp.linalg)": [[130, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[131, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[132, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[133, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[134, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[135, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[136, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[137, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[138, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[139, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[140, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[141, "dpnp.linspace"]], "log() (in module dpnp)": [[142, "dpnp.log"]], "log10() (in module dpnp)": [[143, "dpnp.log10"]], "log1p() (in module dpnp)": [[144, "dpnp.log1p"]], "log2() (in module dpnp)": [[145, "dpnp.log2"]], "logical_and() (in module dpnp)": [[146, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[147, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[148, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[149, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[150, "dpnp.logspace"]], "matmul() (in module dpnp)": [[151, "dpnp.matmul"]], "max() (in module dpnp)": [[152, "dpnp.max"]], "maximum() (in module dpnp)": [[153, "dpnp.maximum"]], "mean() (in module dpnp)": [[154, "dpnp.mean"]], "median() (in module dpnp)": [[155, "dpnp.median"]], "meshgrid() (in module dpnp)": [[156, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[157, "dpnp.mgrid"]], "min() (in module dpnp)": [[158, "dpnp.min"]], "minimum() (in module dpnp)": [[159, "dpnp.minimum"]], "mod() (in module dpnp)": [[160, "dpnp.mod"]], "modf() (in module dpnp)": [[161, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[162, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[163, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[164, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[165, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[166, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[167, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[168, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[169, "dpnp.ndarray"]], "negative() (in module dpnp)": [[170, "dpnp.negative"]], "nonzero() (in module dpnp)": [[171, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[172, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[173, "dpnp.ogrid"]], "ones() (in module dpnp)": [[174, "dpnp.ones"]], "ones_like() (in module dpnp)": [[175, "dpnp.ones_like"]], "outer() (in module dpnp)": [[176, "dpnp.outer"]], "partition() (in module dpnp)": [[177, "dpnp.partition"]], "power() (in module dpnp)": [[178, "dpnp.power"]], "prod() (in module dpnp)": [[179, "dpnp.prod"]], "rad2deg() (in module dpnp)": [[180, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[181, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[182, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[182, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[183, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[184, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[185, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[186, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[187, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[188, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[189, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[190, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[191, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[192, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[193, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[194, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[195, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[196, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[197, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[198, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[199, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[200, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[201, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[202, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[203, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[204, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[205, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[206, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[207, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[208, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[209, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[210, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[211, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[212, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[213, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[214, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[215, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[216, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[217, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[218, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[219, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[220, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[221, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[222, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[223, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[224, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[225, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[226, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[227, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[228, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[229, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[230, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[231, "dpnp.ravel"]], "reciprocal() (in module dpnp)": [[232, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[233, "dpnp.remainder"]], "repeat() (in module dpnp)": [[234, "dpnp.repeat"]], "reshape() (in module dpnp)": [[235, "dpnp.reshape"]], "right_shift() (in module dpnp)": [[236, "dpnp.right_shift"]], "rollaxis() (in module dpnp)": [[237, "dpnp.rollaxis"]], "round_() (in module dpnp)": [[238, "dpnp.round_"]], "searchsorted() (in module dpnp)": [[239, "dpnp.searchsorted"]], "sign() (in module dpnp)": [[240, "dpnp.sign"]], "sin() (in module dpnp)": [[241, "dpnp.sin"]], "sinh() (in module dpnp)": [[242, "dpnp.sinh"]], "sort() (in module dpnp)": [[243, "dpnp.sort"]], "sqrt() (in module dpnp)": [[244, "dpnp.sqrt"]], "square() (in module dpnp)": [[245, "dpnp.square"]], "squeeze() (in module dpnp)": [[246, "dpnp.squeeze"]], "stack() (in module dpnp)": [[247, "dpnp.stack"]], "std() (in module dpnp)": [[248, "dpnp.std"]], "subtract() (in module dpnp)": [[249, "dpnp.subtract"]], "sum() (in module dpnp)": [[250, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[251, "dpnp.swapaxes"]], "tan() (in module dpnp)": [[252, "dpnp.tan"]], "tanh() (in module dpnp)": [[253, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[254, "dpnp.tensordot"]], "trace() (in module dpnp)": [[255, "dpnp.trace"]], "transpose() (in module dpnp)": [[256, "dpnp.transpose"]], "trapz() (in module dpnp)": [[257, "dpnp.trapz"]], "tri() (in module dpnp)": [[258, "dpnp.tri"]], "tril() (in module dpnp)": [[259, "dpnp.tril"]], "triu() (in module dpnp)": [[260, "dpnp.triu"]], "true_divide() (in module dpnp)": [[261, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[262, "dpnp.trunc"]], "unique() (in module dpnp)": [[263, "dpnp.unique"]], "unwrap() (in module dpnp)": [[264, "dpnp.unwrap"]], "vander() (in module dpnp)": [[265, "dpnp.vander"]], "var() (in module dpnp)": [[266, "dpnp.var"]], "vdot() (in module dpnp)": [[267, "dpnp.vdot"]], "vstack() (in module dpnp)": [[268, "dpnp.vstack"]], "where() (in module dpnp)": [[269, "dpnp.where"]], "zeros() (in module dpnp)": [[270, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[271, "dpnp.zeros_like"]], "dpnp.random": [[281, "module-dpnp.random"]]}})