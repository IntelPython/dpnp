Search.setIndex({"alltitles": {"API Reference": [[476, null]], "Adding and removing elements": [[480, "adding-and-removing-elements"]], "Arithmetic": [[485, "arithmetic"]], "Arithmetic operations": [[481, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[483, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[477, null]], "Array Manipulation Routines": [[480, null]], "Array attributes": [[483, "array-attributes"]], "Array conversion": [[483, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[483, "array-methods"]], "Array type testing": [[479, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[491, "available-ufuncs"]], "Averages and variances": [[490, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[480, "basic-operations"]], "Basics": [[485, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[491, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[483, "calculation"]], "Changing array shape": [[480, "changing-array-shape"]], "Changing kind of array": [[480, "changing-kind-of-array"]], "Changing number of dimensions": [[480, "changing-number-of-dimensions"]], "Comparison": [[479, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[491, "comparison-functions"]], "Constructing arrays": [[483, "constructing-arrays"]], "Correlations": [[490, "correlations"]], "Counting": [[488, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[483, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[478, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[486, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[489, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[481, "exponents-and-logarithms"]], "Extrema finding": [[481, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[491, "floating-functions"]], "Floating point routines": [[481, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[477, "generating-index-arrays"]], "Handling complex numbers": [[481, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[490, "histograms"]], "Hyperbolic functions": [[481, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[483, "indexing-arrays"]], "Indexing-like operations": [[477, "indexing-like-operations"]], "Infinities and NaNs": [[479, "infinities-and-nans"]], "Inserting data into arrays": [[477, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[483, "item-selection-and-manipulation"]], "Iterating over arrays": [[477, "iterating-over-arrays"]], "Joining arrays": [[480, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [478, null]], "Logic Functions": [[479, null]], "Logic operations": [[479, "logic-operations"]], "Math operations": [[491, "math-operations"]], "Mathematical functions": [[481, null]], "Matrix and vector products": [[478, "matrix-and-vector-products"]], "Matrix eigenvalues": [[478, "matrix-eigenvalues"]], "Memory layout": [[483, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [481, "miscellaneous"]], "Miscellaneous routines": [[482, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[483, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[478, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[490, "order-statistics"]], "Other attributes": [[483, "other-attributes"]], "Other special functions": [[481, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[484, null]], "Permutations": [[486, "permutations"]], "Poly1d": [[485, "poly1d"]], "Polynomial Module": [[485, "polynomial-module"]], "Polynomial Package": [[485, "polynomial-package"]], "Polynomials": [[485, null]], "Polyutils": [[485, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[486, null]], "Random generator": [[486, "random-generator"]], "Rational routines": [[481, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[480, "rearranging-elements"]], "Rounding": [[481, "rounding"]], "Routines": [[487, null]], "Searching": [[488, "searching"]], "Shape manipulation": [[483, "shape-manipulation"]], "Simple random data": [[486, "simple-random-data"]], "Solving linear equations": [[478, "solving-linear-equations"]], "Sorting": [[488, "sorting"]], "Sorting, Searching, and Counting": [[488, null]], "Special Functions": [[489, null]], "Special methods": [[483, "special-methods"]], "Splitting arrays": [[480, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[490, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[481, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[480, "tiling-arrays"]], "Transpose-like operations": [[480, "transpose-like-operations"]], "Trigonometric functions": [[481, "trigonometric-functions"], [491, "trigonometric-functions"]], "Truth value testing": [[479, "truth-value-testing"]], "Universal Functions (ufunc)": [[491, null]], "Utility": [[482, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.asanyarray": [[39, null]], "dpnp.asarray": [[40, null]], "dpnp.asarray_chkfinite": [[41, null]], "dpnp.ascontiguousarray": [[42, null]], "dpnp.asfarray": [[43, null]], "dpnp.asfortranarray": [[44, null]], "dpnp.asin": [[45, null]], "dpnp.asinh": [[46, null]], "dpnp.asnumpy": [[47, null]], "dpnp.astype": [[48, null]], "dpnp.atan": [[49, null]], "dpnp.atan2": [[50, null]], "dpnp.atanh": [[51, null]], "dpnp.atleast_1d": [[52, null]], "dpnp.atleast_2d": [[53, null]], "dpnp.atleast_3d": [[54, null]], "dpnp.average": [[55, null]], "dpnp.bincount": [[56, null]], "dpnp.bitwise_and": [[57, null]], "dpnp.bitwise_not": [[58, null]], "dpnp.bitwise_or": [[59, null]], "dpnp.bitwise_xor": [[60, null]], "dpnp.broadcast_arrays": [[61, null]], "dpnp.broadcast_to": [[62, null]], "dpnp.can_cast": [[63, null]], "dpnp.cbrt": [[64, null]], "dpnp.ceil": [[65, null]], "dpnp.choose": [[66, null]], "dpnp.clip": [[67, null]], "dpnp.column_stack": [[68, null]], "dpnp.concatenate": [[69, null]], "dpnp.conj": [[70, null]], "dpnp.conjugate": [[71, null]], "dpnp.convolve": [[72, null]], "dpnp.copy": [[73, null]], "dpnp.copysign": [[74, null]], "dpnp.copyto": [[75, null]], "dpnp.correlate": [[76, null]], "dpnp.cos": [[77, null]], "dpnp.cosh": [[78, null]], "dpnp.count_nonzero": [[79, null]], "dpnp.cov": [[80, null]], "dpnp.cross": [[81, null]], "dpnp.cumlogsumexp": [[82, null]], "dpnp.cumprod": [[83, null]], "dpnp.cumsum": [[84, null]], "dpnp.deg2rad": [[85, null]], "dpnp.degrees": [[86, null]], "dpnp.diag": [[87, null]], "dpnp.diag_indices": [[88, null]], "dpnp.diag_indices_from": [[89, null]], "dpnp.diagflat": [[90, null]], "dpnp.diagonal": [[91, null]], "dpnp.diff": [[92, null]], "dpnp.digitize": [[93, null]], "dpnp.divide": [[94, null]], "dpnp.dot": [[95, null]], "dpnp.dpnp_array.dpnp_array": [[96, null]], "dpnp.dstack": [[97, null]], "dpnp.dtype": [[98, null]], "dpnp.ediff1d": [[99, null]], "dpnp.einsum": [[100, null]], "dpnp.einsum_path": [[101, null]], "dpnp.empty": [[102, null]], "dpnp.empty_like": [[103, null]], "dpnp.equal": [[104, null]], "dpnp.erf": [[105, null]], "dpnp.exp": [[106, null]], "dpnp.exp2": [[107, null]], "dpnp.expand_dims": [[108, null]], "dpnp.expm1": [[109, null]], "dpnp.extract": [[110, null]], "dpnp.eye": [[111, null]], "dpnp.fabs": [[112, null]], "dpnp.fft.fft": [[113, null]], "dpnp.fft.fft2": [[114, null]], "dpnp.fft.fftfreq": [[115, null]], "dpnp.fft.fftn": [[116, null]], "dpnp.fft.fftshift": [[117, null]], "dpnp.fft.hfft": [[118, null]], "dpnp.fft.ifft": [[119, null]], "dpnp.fft.ifft2": [[120, null]], "dpnp.fft.ifftn": [[121, null]], "dpnp.fft.ifftshift": [[122, null]], "dpnp.fft.ihfft": [[123, null]], "dpnp.fft.irfft": [[124, null]], "dpnp.fft.irfft2": [[125, null]], "dpnp.fft.irfftn": [[126, null]], "dpnp.fft.rfft": [[127, null]], "dpnp.fft.rfft2": [[128, null]], "dpnp.fft.rfftfreq": [[129, null]], "dpnp.fft.rfftn": [[130, null]], "dpnp.fill_diagonal": [[131, null]], "dpnp.finfo": [[132, null]], "dpnp.fix": [[133, null]], "dpnp.flatiter": [[134, null]], "dpnp.flatnonzero": [[135, null]], "dpnp.flip": [[136, null]], "dpnp.fliplr": [[137, null]], "dpnp.flipud": [[138, null]], "dpnp.float_power": [[139, null]], "dpnp.floor": [[140, null]], "dpnp.floor_divide": [[141, null]], "dpnp.fmax": [[142, null]], "dpnp.fmin": [[143, null]], "dpnp.fmod": [[144, null]], "dpnp.from_dlpack": [[145, null]], "dpnp.frombuffer": [[146, null]], "dpnp.fromfile": [[147, null]], "dpnp.fromfunction": [[148, null]], "dpnp.fromiter": [[149, null]], "dpnp.fromstring": [[150, null]], "dpnp.full": [[151, null]], "dpnp.full_like": [[152, null]], "dpnp.geomspace": [[153, null]], "dpnp.get_include": [[154, null]], "dpnp.gradient": [[155, null]], "dpnp.greater": [[156, null]], "dpnp.greater_equal": [[157, null]], "dpnp.heaviside": [[158, null]], "dpnp.histogram": [[159, null]], "dpnp.histogram_bin_edges": [[160, null]], "dpnp.hstack": [[161, null]], "dpnp.hypot": [[162, null]], "dpnp.identity": [[163, null]], "dpnp.iinfo": [[164, null]], "dpnp.imag": [[165, null]], "dpnp.indices": [[166, null]], "dpnp.inner": [[167, null]], "dpnp.invert": [[168, null]], "dpnp.isclose": [[169, null]], "dpnp.iscomplex": [[170, null]], "dpnp.iscomplexobj": [[171, null]], "dpnp.isfinite": [[172, null]], "dpnp.isinf": [[173, null]], "dpnp.isnan": [[174, null]], "dpnp.isneginf": [[175, null]], "dpnp.isposinf": [[176, null]], "dpnp.isreal": [[177, null]], "dpnp.isrealobj": [[178, null]], "dpnp.isscalar": [[179, null]], "dpnp.issubdtype": [[180, null]], "dpnp.ix_": [[181, null]], "dpnp.kron": [[182, null]], "dpnp.left_shift": [[183, null]], "dpnp.less": [[184, null]], "dpnp.less_equal": [[185, null]], "dpnp.linalg.cholesky": [[186, null]], "dpnp.linalg.cond": [[187, null]], "dpnp.linalg.det": [[188, null]], "dpnp.linalg.eig": [[189, null]], "dpnp.linalg.eigh": [[190, null]], "dpnp.linalg.eigvals": [[191, null]], "dpnp.linalg.eigvalsh": [[192, null]], "dpnp.linalg.inv": [[193, null]], "dpnp.linalg.lstsq": [[194, null]], "dpnp.linalg.matrix_power": [[195, null]], "dpnp.linalg.matrix_rank": [[196, null]], "dpnp.linalg.multi_dot": [[197, null]], "dpnp.linalg.norm": [[198, null]], "dpnp.linalg.pinv": [[199, null]], "dpnp.linalg.qr": [[200, null]], "dpnp.linalg.slogdet": [[201, null]], "dpnp.linalg.solve": [[202, null]], "dpnp.linalg.svd": [[203, null]], "dpnp.linalg.tensorinv": [[204, null]], "dpnp.linalg.tensorsolve": [[205, null]], "dpnp.linspace": [[206, null]], "dpnp.loadtxt": [[207, null]], "dpnp.log": [[208, null]], "dpnp.log10": [[209, null]], "dpnp.log1p": [[210, null]], "dpnp.log2": [[211, null]], "dpnp.logaddexp": [[212, null]], "dpnp.logaddexp2": [[213, null]], "dpnp.logical_and": [[214, null]], "dpnp.logical_not": [[215, null]], "dpnp.logical_or": [[216, null]], "dpnp.logical_xor": [[217, null]], "dpnp.logspace": [[218, null]], "dpnp.logsumexp": [[219, null]], "dpnp.mask_indices": [[220, null]], "dpnp.matmul": [[221, null]], "dpnp.max": [[222, null]], "dpnp.maximum": [[223, null]], "dpnp.mean": [[224, null]], "dpnp.median": [[225, null]], "dpnp.meshgrid": [[226, null]], "dpnp.mgrid": [[227, null]], "dpnp.min": [[228, null]], "dpnp.minimum": [[229, null]], "dpnp.mod": [[230, null]], "dpnp.modf": [[231, null]], "dpnp.moveaxis": [[232, null]], "dpnp.multiply": [[233, null]], "dpnp.nan_to_num": [[234, null]], "dpnp.nanargmax": [[235, null]], "dpnp.nanargmin": [[236, null]], "dpnp.nancumprod": [[237, null]], "dpnp.nancumsum": [[238, null]], "dpnp.nanmax": [[239, null]], "dpnp.nanmean": [[240, null]], "dpnp.nanmin": [[241, null]], "dpnp.nanprod": [[242, null]], "dpnp.nanstd": [[243, null]], "dpnp.nansum": [[244, null]], "dpnp.nanvar": [[245, null]], "dpnp.ndarray": [[246, null]], "dpnp.ndarray.T": [[247, null]], "dpnp.ndarray.__abs__": [[248, null]], "dpnp.ndarray.__add__": [[249, null]], "dpnp.ndarray.__and__": [[250, null]], "dpnp.ndarray.__bool__": [[251, null]], "dpnp.ndarray.__complex__": [[252, null]], "dpnp.ndarray.__copy__": [[253, null]], "dpnp.ndarray.__eq__": [[254, null]], "dpnp.ndarray.__float__": [[255, null]], "dpnp.ndarray.__floordiv__": [[256, null]], "dpnp.ndarray.__ge__": [[257, null]], "dpnp.ndarray.__getitem__": [[258, null]], "dpnp.ndarray.__gt__": [[259, null]], "dpnp.ndarray.__iadd__": [[260, null]], "dpnp.ndarray.__iand__": [[261, null]], "dpnp.ndarray.__ifloordiv__": [[262, null]], "dpnp.ndarray.__ilshift__": [[263, null]], "dpnp.ndarray.__imod__": [[264, null]], "dpnp.ndarray.__imul__": [[265, null]], "dpnp.ndarray.__int__": [[266, null]], "dpnp.ndarray.__invert__": [[267, null]], "dpnp.ndarray.__ior__": [[268, null]], "dpnp.ndarray.__ipow__": [[269, null]], "dpnp.ndarray.__irshift__": [[270, null]], "dpnp.ndarray.__isub__": [[271, null]], "dpnp.ndarray.__itruediv__": [[272, null]], "dpnp.ndarray.__ixor__": [[273, null]], "dpnp.ndarray.__le__": [[274, null]], "dpnp.ndarray.__len__": [[275, null]], "dpnp.ndarray.__lshift__": [[276, null]], "dpnp.ndarray.__lt__": [[277, null]], "dpnp.ndarray.__matmul__": [[278, null]], "dpnp.ndarray.__mod__": [[279, null]], "dpnp.ndarray.__mul__": [[280, null]], "dpnp.ndarray.__ne__": [[281, null]], "dpnp.ndarray.__neg__": [[282, null]], "dpnp.ndarray.__new__": [[283, null]], "dpnp.ndarray.__or__": [[284, null]], "dpnp.ndarray.__pos__": [[285, null]], "dpnp.ndarray.__pow__": [[286, null]], "dpnp.ndarray.__repr__": [[287, null]], "dpnp.ndarray.__rshift__": [[288, null]], "dpnp.ndarray.__setitem__": [[289, null]], "dpnp.ndarray.__str__": [[290, null]], "dpnp.ndarray.__sub__": [[291, null]], "dpnp.ndarray.__truediv__": [[292, null]], "dpnp.ndarray.__xor__": [[293, null]], "dpnp.ndarray.all": [[294, null]], "dpnp.ndarray.any": [[295, null]], "dpnp.ndarray.argmax": [[296, null]], "dpnp.ndarray.argmin": [[297, null]], "dpnp.ndarray.argsort": [[298, null]], "dpnp.ndarray.astype": [[299, null]], "dpnp.ndarray.choose": [[300, null]], "dpnp.ndarray.clip": [[301, null]], "dpnp.ndarray.conj": [[302, null]], "dpnp.ndarray.conjugate": [[303, null]], "dpnp.ndarray.copy": [[304, null]], "dpnp.ndarray.cumprod": [[305, null]], "dpnp.ndarray.cumsum": [[306, null]], "dpnp.ndarray.diagonal": [[307, null]], "dpnp.ndarray.dtype": [[308, null]], "dpnp.ndarray.fill": [[309, null]], "dpnp.ndarray.flags": [[310, null]], "dpnp.ndarray.flat": [[311, null]], "dpnp.ndarray.flatten": [[312, null]], "dpnp.ndarray.imag": [[313, null]], "dpnp.ndarray.item": [[314, null]], "dpnp.ndarray.itemsize": [[315, null]], "dpnp.ndarray.max": [[316, null]], "dpnp.ndarray.mean": [[317, null]], "dpnp.ndarray.min": [[318, null]], "dpnp.ndarray.nbytes": [[319, null]], "dpnp.ndarray.ndim": [[320, null]], "dpnp.ndarray.nonzero": [[321, null]], "dpnp.ndarray.partition": [[322, null]], "dpnp.ndarray.prod": [[323, null]], "dpnp.ndarray.put": [[324, null]], "dpnp.ndarray.ravel": [[325, null]], "dpnp.ndarray.real": [[326, null]], "dpnp.ndarray.repeat": [[327, null]], "dpnp.ndarray.reshape": [[328, null]], "dpnp.ndarray.round": [[329, null]], "dpnp.ndarray.searchsorted": [[330, null]], "dpnp.ndarray.shape": [[331, null]], "dpnp.ndarray.size": [[332, null]], "dpnp.ndarray.sort": [[333, null]], "dpnp.ndarray.squeeze": [[334, null]], "dpnp.ndarray.std": [[335, null]], "dpnp.ndarray.strides": [[336, null]], "dpnp.ndarray.sum": [[337, null]], "dpnp.ndarray.swapaxes": [[338, null]], "dpnp.ndarray.take": [[339, null]], "dpnp.ndarray.trace": [[340, null]], "dpnp.ndarray.transpose": [[341, null]], "dpnp.ndarray.var": [[342, null]], "dpnp.ndim": [[343, null]], "dpnp.negative": [[344, null]], "dpnp.nextafter": [[345, null]], "dpnp.nonzero": [[346, null]], "dpnp.not_equal": [[347, null]], "dpnp.ogrid": [[348, null]], "dpnp.ones": [[349, null]], "dpnp.ones_like": [[350, null]], "dpnp.outer": [[351, null]], "dpnp.partition": [[352, null]], "dpnp.place": [[353, null]], "dpnp.positive": [[354, null]], "dpnp.pow": [[355, null]], "dpnp.power": [[356, null]], "dpnp.prod": [[357, null]], "dpnp.proj": [[358, null]], "dpnp.ptp": [[359, null]], "dpnp.put": [[360, null]], "dpnp.put_along_axis": [[361, null]], "dpnp.putmask": [[362, null]], "dpnp.rad2deg": [[363, null]], "dpnp.radians": [[364, null]], "dpnp.random.RandomState": [[365, null]], "dpnp.random.beta": [[366, null]], "dpnp.random.binomial": [[367, null]], "dpnp.random.bytes": [[368, null]], "dpnp.random.chisquare": [[369, null]], "dpnp.random.choice": [[370, null]], "dpnp.random.dirichlet": [[371, null]], "dpnp.random.exponential": [[372, null]], "dpnp.random.f": [[373, null]], "dpnp.random.gamma": [[374, null]], "dpnp.random.geometric": [[375, null]], "dpnp.random.gumbel": [[376, null]], "dpnp.random.hypergeometric": [[377, null]], "dpnp.random.laplace": [[378, null]], "dpnp.random.logistic": [[379, null]], "dpnp.random.lognormal": [[380, null]], "dpnp.random.logseries": [[381, null]], "dpnp.random.multinomial": [[382, null]], "dpnp.random.multivariate_normal": [[383, null]], "dpnp.random.negative_binomial": [[384, null]], "dpnp.random.noncentral_chisquare": [[385, null]], "dpnp.random.noncentral_f": [[386, null]], "dpnp.random.normal": [[387, null]], "dpnp.random.pareto": [[388, null]], "dpnp.random.permutation": [[389, null]], "dpnp.random.poisson": [[390, null]], "dpnp.random.power": [[391, null]], "dpnp.random.rand": [[392, null]], "dpnp.random.randint": [[393, null]], "dpnp.random.randn": [[394, null]], "dpnp.random.random": [[395, null]], "dpnp.random.random_integers": [[396, null]], "dpnp.random.random_sample": [[397, null]], "dpnp.random.ranf": [[398, null]], "dpnp.random.rayleigh": [[399, null]], "dpnp.random.sample": [[400, null]], "dpnp.random.seed": [[401, null]], "dpnp.random.shuffle": [[402, null]], "dpnp.random.standard_cauchy": [[403, null]], "dpnp.random.standard_exponential": [[404, null]], "dpnp.random.standard_gamma": [[405, null]], "dpnp.random.standard_normal": [[406, null]], "dpnp.random.standard_t": [[407, null]], "dpnp.random.triangular": [[408, null]], "dpnp.random.uniform": [[409, null]], "dpnp.random.vonmises": [[410, null]], "dpnp.random.wald": [[411, null]], "dpnp.random.weibull": [[412, null]], "dpnp.random.zipf": [[413, null]], "dpnp.ravel": [[414, null]], "dpnp.real": [[415, null]], "dpnp.real_if_close": [[416, null]], "dpnp.reciprocal": [[417, null]], "dpnp.reduce_hypot": [[418, null]], "dpnp.remainder": [[419, null]], "dpnp.repeat": [[420, null]], "dpnp.reshape": [[421, null]], "dpnp.result_type": [[422, null]], "dpnp.right_shift": [[423, null]], "dpnp.rint": [[424, null]], "dpnp.roll": [[425, null]], "dpnp.rollaxis": [[426, null]], "dpnp.round": [[427, null]], "dpnp.row_stack": [[428, null]], "dpnp.rsqrt": [[429, null]], "dpnp.searchsorted": [[430, null]], "dpnp.select": [[431, null]], "dpnp.shape": [[432, null]], "dpnp.sign": [[433, null]], "dpnp.signbit": [[434, null]], "dpnp.sin": [[435, null]], "dpnp.sinh": [[436, null]], "dpnp.size": [[437, null]], "dpnp.sort": [[438, null]], "dpnp.sort_complex": [[439, null]], "dpnp.sqrt": [[440, null]], "dpnp.square": [[441, null]], "dpnp.squeeze": [[442, null]], "dpnp.stack": [[443, null]], "dpnp.std": [[444, null]], "dpnp.subtract": [[445, null]], "dpnp.sum": [[446, null]], "dpnp.swapaxes": [[447, null]], "dpnp.take": [[448, null]], "dpnp.take_along_axis": [[449, null]], "dpnp.tan": [[450, null]], "dpnp.tanh": [[451, null]], "dpnp.tensordot": [[452, null]], "dpnp.tile": [[453, null]], "dpnp.trace": [[454, null]], "dpnp.transpose": [[455, null]], "dpnp.trapezoid": [[456, null]], "dpnp.tri": [[457, null]], "dpnp.tril": [[458, null]], "dpnp.tril_indices": [[459, null]], "dpnp.tril_indices_from": [[460, null]], "dpnp.trim_zeros": [[461, null]], "dpnp.triu": [[462, null]], "dpnp.triu_indices": [[463, null]], "dpnp.triu_indices_from": [[464, null]], "dpnp.true_divide": [[465, null]], "dpnp.trunc": [[466, null]], "dpnp.unique": [[467, null]], "dpnp.unwrap": [[468, null]], "dpnp.vander": [[469, null]], "dpnp.var": [[470, null]], "dpnp.vdot": [[471, null]], "dpnp.vstack": [[472, null]], "dpnp.where": [[473, null]], "dpnp.zeros": [[474, null]], "dpnp.zeros_like": [[475, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[98, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[98, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[98, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[98, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[98, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[98, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[98, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[98, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[134, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[98, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[294, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[295, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[296, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[297, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[298, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "asanyarray() (in module dpnp)": [[39, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[40, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[41, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[42, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[43, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[44, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[45, "dpnp.asin", false]], "asinh() (in module dpnp)": [[46, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[47, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[299, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[48, "dpnp.astype", false]], "atan() (in module dpnp)": [[49, "dpnp.atan", false]], "atan2() (in module dpnp)": [[50, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[51, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[52, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[53, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[54, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[55, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[98, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[366, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[56, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[367, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[57, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[58, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[59, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[60, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[61, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[62, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[98, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[368, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[63, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[64, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[65, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[98, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[369, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[370, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[186, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[300, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[66, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[301, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[67, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[68, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[69, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[187, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[302, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[70, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[303, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[71, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[72, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[304, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[73, "dpnp.copy", false]], "copysign() (in module dpnp)": [[74, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[75, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[76, "dpnp.correlate", false]], "cos() (in module dpnp)": [[77, "dpnp.cos", false]], "cosh() (in module dpnp)": [[78, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[79, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[80, "dpnp.cov", false]], "cross() (in module dpnp)": [[81, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[82, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[305, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[83, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[306, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[84, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[85, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[86, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[98, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[188, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[87, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[88, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[89, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[90, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[307, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[91, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[92, "dpnp.diff", false]], "digitize() (in module dpnp)": [[93, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[371, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[94, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[95, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[10, "module-dpnp.fft", false]], "dpnp.random": [[486, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[96, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[97, "dpnp.dstack", false]], "dtype (class in dpnp)": [[98, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[308, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[99, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[189, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[190, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[191, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[192, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[100, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[101, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[102, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[103, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[104, "dpnp.equal", false]], "erf() (in module dpnp)": [[105, "dpnp.erf", false]], "exp() (in module dpnp)": [[106, "dpnp.exp", false]], "exp2() (in module dpnp)": [[107, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[108, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[109, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[372, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[110, "dpnp.extract", false]], "eye() (in module dpnp)": [[111, "dpnp.eye", false]], "f() (in module dpnp.random)": [[373, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[112, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[113, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[114, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[115, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[116, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[117, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[98, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[309, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[131, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[132, "dpnp.finfo", false]], "fix() (in module dpnp)": [[133, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[98, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[310, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[311, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[134, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[135, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[312, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[136, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[137, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[138, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[139, "dpnp.float_power", false]], "floor() (in module dpnp)": [[140, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[141, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[142, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[143, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[144, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[145, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[146, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[147, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[148, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[149, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[150, "dpnp.fromstring", false]], "full() (in module dpnp)": [[151, "dpnp.full", false]], "full_like() (in module dpnp)": [[152, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[374, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[375, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[153, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[154, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[155, "dpnp.gradient", false]], "greater() (in module dpnp)": [[156, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[157, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[376, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[98, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[158, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[118, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[159, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[160, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[161, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[377, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[162, "dpnp.hypot", false]], "identity() (in module dpnp)": [[163, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[119, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[120, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[121, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[122, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[123, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[164, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[313, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[165, "dpnp.imag", false]], "indices() (in module dpnp)": [[166, "dpnp.indices", false]], "inner() (in module dpnp)": [[167, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[193, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[168, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[124, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[125, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[126, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[98, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[98, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[169, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[170, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[171, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[172, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[173, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[174, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[98, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[175, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[176, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[177, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[178, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[179, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[180, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[314, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[98, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[315, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[181, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[98, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[182, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[378, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[183, "dpnp.left_shift", false]], "less() (in module dpnp)": [[184, "dpnp.less", false]], "less_equal() (in module dpnp)": [[185, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[206, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[207, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[208, "dpnp.log", false]], "log10() (in module dpnp)": [[209, "dpnp.log10", false]], "log1p() (in module dpnp)": [[210, "dpnp.log1p", false]], "log2() (in module dpnp)": [[211, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[212, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[213, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[214, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[215, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[216, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[217, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[379, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[380, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[381, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[218, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[219, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[194, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[220, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[221, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[195, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[196, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[316, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[222, "dpnp.max", false]], "maximum() (in module dpnp)": [[223, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[317, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[224, "dpnp.mean", false]], "median() (in module dpnp)": [[225, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[226, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[98, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[227, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[318, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[228, "dpnp.min", false]], "minimum() (in module dpnp)": [[229, "dpnp.minimum", false]], "mod() (in module dpnp)": [[230, "dpnp.mod", false]], "modf() (in module dpnp)": [[231, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [10, "module-dpnp.fft", false], [486, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[232, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[197, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[382, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[233, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[383, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[98, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[98, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[234, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[235, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[236, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[237, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[238, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[239, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[240, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[241, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[242, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[243, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[244, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[245, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[319, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[246, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[98, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[320, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[343, "dpnp.ndim", false]], "negative() (in module dpnp)": [[344, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[384, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[98, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[345, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[385, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[386, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[321, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[346, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[198, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[387, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[347, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[98, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[348, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[349, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[350, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[351, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[388, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[322, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[352, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[389, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[199, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[353, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[390, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[354, "dpnp.positive", false]], "pow() (in module dpnp)": [[355, "dpnp.pow", false]], "power() (in module dpnp)": [[356, "dpnp.power", false]], "power() (in module dpnp.random)": [[391, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[323, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[357, "dpnp.prod", false]], "proj() (in module dpnp)": [[358, "dpnp.proj", false]], "ptp() (in module dpnp)": [[359, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[324, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[360, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[361, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[362, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[200, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[363, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[364, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[392, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[393, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[394, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[395, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[396, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[397, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[365, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[398, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[325, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[414, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[399, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[326, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[415, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[416, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[417, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[418, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[419, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[327, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[420, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[328, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[421, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[422, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[127, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[128, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[129, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[130, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[423, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[424, "dpnp.rint", false]], "roll() (in module dpnp)": [[425, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[426, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[329, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[427, "dpnp.round", false]], "row_stack() (in module dpnp)": [[428, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[429, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[400, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[330, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[430, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[401, "dpnp.random.seed", false]], "select() (in module dpnp)": [[431, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[98, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[331, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[432, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[402, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[433, "dpnp.sign", false]], "signbit() (in module dpnp)": [[434, "dpnp.signbit", false]], "sin() (in module dpnp)": [[435, "dpnp.sin", false]], "sinh() (in module dpnp)": [[436, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[332, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[437, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[201, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[202, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[333, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[438, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[439, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[440, "dpnp.sqrt", false]], "square() (in module dpnp)": [[441, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[334, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[442, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[443, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[403, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[404, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[405, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[406, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[407, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[335, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[444, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[98, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[336, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[98, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[445, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[337, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[446, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[203, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[338, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[447, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[247, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[339, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[448, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[449, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[450, "dpnp.tan", false]], "tanh() (in module dpnp)": [[451, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[452, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[204, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[205, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[453, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[340, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[454, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[341, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[455, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[456, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[457, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[408, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[458, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[459, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[460, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[461, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[462, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[463, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[464, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[465, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[466, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[98, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[365, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[409, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[467, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[468, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[96, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[469, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[96, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[342, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[470, "dpnp.var", false]], "vdot() (in module dpnp)": [[471, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[410, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[472, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[411, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[412, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[473, "dpnp.where", false]], "zeros() (in module dpnp)": [[474, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[475, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[413, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "asanyarray"], [40, 1, 1, "", "asarray"], [41, 1, 1, "", "asarray_chkfinite"], [42, 1, 1, "", "ascontiguousarray"], [43, 1, 1, "", "asfarray"], [44, 1, 1, "", "asfortranarray"], [45, 1, 1, "", "asin"], [46, 1, 1, "", "asinh"], [47, 1, 1, "", "asnumpy"], [48, 1, 1, "", "astype"], [49, 1, 1, "", "atan"], [50, 1, 1, "", "atan2"], [51, 1, 1, "", "atanh"], [52, 1, 1, "", "atleast_1d"], [53, 1, 1, "", "atleast_2d"], [54, 1, 1, "", "atleast_3d"], [55, 1, 1, "", "average"], [56, 1, 1, "", "bincount"], [57, 1, 1, "", "bitwise_and"], [58, 1, 1, "", "bitwise_not"], [59, 1, 1, "", "bitwise_or"], [60, 1, 1, "", "bitwise_xor"], [61, 1, 1, "", "broadcast_arrays"], [62, 1, 1, "", "broadcast_to"], [63, 1, 1, "", "can_cast"], [64, 1, 1, "", "cbrt"], [65, 1, 1, "", "ceil"], [66, 1, 1, "", "choose"], [67, 1, 1, "", "clip"], [68, 1, 1, "", "column_stack"], [69, 1, 1, "", "concatenate"], [70, 1, 1, "", "conj"], [71, 1, 1, "", "conjugate"], [72, 1, 1, "", "convolve"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "copysign"], [75, 1, 1, "", "copyto"], [76, 1, 1, "", "correlate"], [77, 1, 1, "", "cos"], [78, 1, 1, "", "cosh"], [79, 1, 1, "", "count_nonzero"], [80, 1, 1, "", "cov"], [81, 1, 1, "", "cross"], [82, 1, 1, "", "cumlogsumexp"], [83, 1, 1, "", "cumprod"], [84, 1, 1, "", "cumsum"], [85, 1, 1, "", "deg2rad"], [86, 1, 1, "", "degrees"], [87, 1, 1, "", "diag"], [88, 1, 1, "", "diag_indices"], [89, 1, 1, "", "diag_indices_from"], [90, 1, 1, "", "diagflat"], [91, 1, 1, "", "diagonal"], [92, 1, 1, "", "diff"], [93, 1, 1, "", "digitize"], [94, 1, 1, "", "divide"], [95, 1, 1, "", "dot"], [97, 1, 1, "", "dstack"], [98, 2, 1, "", "dtype"], [99, 1, 1, "", "ediff1d"], [100, 1, 1, "", "einsum"], [101, 1, 1, "", "einsum_path"], [102, 1, 1, "", "empty"], [103, 1, 1, "", "empty_like"], [104, 1, 1, "", "equal"], [105, 1, 1, "", "erf"], [106, 1, 1, "", "exp"], [107, 1, 1, "", "exp2"], [108, 1, 1, "", "expand_dims"], [109, 1, 1, "", "expm1"], [110, 1, 1, "", "extract"], [111, 1, 1, "", "eye"], [112, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [131, 1, 1, "", "fill_diagonal"], [132, 1, 1, "", "finfo"], [133, 1, 1, "", "fix"], [134, 2, 1, "", "flatiter"], [135, 1, 1, "", "flatnonzero"], [136, 1, 1, "", "flip"], [137, 1, 1, "", "fliplr"], [138, 1, 1, "", "flipud"], [139, 1, 1, "", "float_power"], [140, 1, 1, "", "floor"], [141, 1, 1, "", "floor_divide"], [142, 1, 1, "", "fmax"], [143, 1, 1, "", "fmin"], [144, 1, 1, "", "fmod"], [145, 1, 1, "", "from_dlpack"], [146, 1, 1, "", "frombuffer"], [147, 1, 1, "", "fromfile"], [148, 1, 1, "", "fromfunction"], [149, 1, 1, "", "fromiter"], [150, 1, 1, "", "fromstring"], [151, 1, 1, "", "full"], [152, 1, 1, "", "full_like"], [153, 1, 1, "", "geomspace"], [154, 1, 1, "", "get_include"], [155, 1, 1, "", "gradient"], [156, 1, 1, "", "greater"], [157, 1, 1, "", "greater_equal"], [158, 1, 1, "", "heaviside"], [159, 1, 1, "", "histogram"], [160, 1, 1, "", "histogram_bin_edges"], [161, 1, 1, "", "hstack"], [162, 1, 1, "", "hypot"], [163, 1, 1, "", "identity"], [164, 1, 1, "", "iinfo"], [165, 1, 1, "", "imag"], [166, 1, 1, "", "indices"], [167, 1, 1, "", "inner"], [168, 1, 1, "", "invert"], [169, 1, 1, "", "isclose"], [170, 1, 1, "", "iscomplex"], [171, 1, 1, "", "iscomplexobj"], [172, 1, 1, "", "isfinite"], [173, 1, 1, "", "isinf"], [174, 1, 1, "", "isnan"], [175, 1, 1, "", "isneginf"], [176, 1, 1, "", "isposinf"], [177, 1, 1, "", "isreal"], [178, 1, 1, "", "isrealobj"], [179, 1, 1, "", "isscalar"], [180, 1, 1, "", "issubdtype"], [181, 1, 1, "", "ix_"], [182, 1, 1, "", "kron"], [183, 1, 1, "", "left_shift"], [184, 1, 1, "", "less"], [185, 1, 1, "", "less_equal"], [206, 1, 1, "", "linspace"], [207, 1, 1, "", "loadtxt"], [208, 1, 1, "", "log"], [209, 1, 1, "", "log10"], [210, 1, 1, "", "log1p"], [211, 1, 1, "", "log2"], [212, 1, 1, "", "logaddexp"], [213, 1, 1, "", "logaddexp2"], [214, 1, 1, "", "logical_and"], [215, 1, 1, "", "logical_not"], [216, 1, 1, "", "logical_or"], [217, 1, 1, "", "logical_xor"], [218, 1, 1, "", "logspace"], [219, 1, 1, "", "logsumexp"], [220, 1, 1, "", "mask_indices"], [221, 1, 1, "", "matmul"], [222, 1, 1, "", "max"], [223, 1, 1, "", "maximum"], [224, 1, 1, "", "mean"], [225, 1, 1, "", "median"], [226, 1, 1, "", "meshgrid"], [227, 5, 1, "", "mgrid"], [228, 1, 1, "", "min"], [229, 1, 1, "", "minimum"], [230, 1, 1, "", "mod"], [231, 1, 1, "", "modf"], [232, 1, 1, "", "moveaxis"], [233, 1, 1, "", "multiply"], [234, 1, 1, "", "nan_to_num"], [235, 1, 1, "", "nanargmax"], [236, 1, 1, "", "nanargmin"], [237, 1, 1, "", "nancumprod"], [238, 1, 1, "", "nancumsum"], [239, 1, 1, "", "nanmax"], [240, 1, 1, "", "nanmean"], [241, 1, 1, "", "nanmin"], [242, 1, 1, "", "nanprod"], [243, 1, 1, "", "nanstd"], [244, 1, 1, "", "nansum"], [245, 1, 1, "", "nanvar"], [246, 3, 1, "", "ndarray"], [343, 1, 1, "", "ndim"], [344, 1, 1, "", "negative"], [345, 1, 1, "", "nextafter"], [346, 1, 1, "", "nonzero"], [347, 1, 1, "", "not_equal"], [348, 5, 1, "", "ogrid"], [349, 1, 1, "", "ones"], [350, 1, 1, "", "ones_like"], [351, 1, 1, "", "outer"], [352, 1, 1, "", "partition"], [353, 1, 1, "", "place"], [354, 1, 1, "", "positive"], [355, 1, 1, "", "pow"], [356, 1, 1, "", "power"], [357, 1, 1, "", "prod"], [358, 1, 1, "", "proj"], [359, 1, 1, "", "ptp"], [360, 1, 1, "", "put"], [361, 1, 1, "", "put_along_axis"], [362, 1, 1, "", "putmask"], [363, 1, 1, "", "rad2deg"], [364, 1, 1, "", "radians"], [486, 0, 0, "-", "random"], [414, 1, 1, "", "ravel"], [415, 1, 1, "", "real"], [416, 1, 1, "", "real_if_close"], [417, 1, 1, "", "reciprocal"], [418, 1, 1, "", "reduce_hypot"], [419, 1, 1, "", "remainder"], [420, 1, 1, "", "repeat"], [421, 1, 1, "", "reshape"], [422, 1, 1, "", "result_type"], [423, 1, 1, "", "right_shift"], [424, 1, 1, "", "rint"], [425, 1, 1, "", "roll"], [426, 1, 1, "", "rollaxis"], [427, 1, 1, "", "round"], [428, 1, 1, "", "row_stack"], [429, 1, 1, "", "rsqrt"], [430, 1, 1, "", "searchsorted"], [431, 1, 1, "", "select"], [432, 1, 1, "", "shape"], [433, 1, 1, "", "sign"], [434, 1, 1, "", "signbit"], [435, 1, 1, "", "sin"], [436, 1, 1, "", "sinh"], [437, 1, 1, "", "size"], [438, 1, 1, "", "sort"], [439, 1, 1, "", "sort_complex"], [440, 1, 1, "", "sqrt"], [441, 1, 1, "", "square"], [442, 1, 1, "", "squeeze"], [443, 1, 1, "", "stack"], [444, 1, 1, "", "std"], [445, 1, 1, "", "subtract"], [446, 1, 1, "", "sum"], [447, 1, 1, "", "swapaxes"], [448, 1, 1, "", "take"], [449, 1, 1, "", "take_along_axis"], [450, 1, 1, "", "tan"], [451, 1, 1, "", "tanh"], [452, 1, 1, "", "tensordot"], [453, 1, 1, "", "tile"], [454, 1, 1, "", "trace"], [455, 1, 1, "", "transpose"], [456, 1, 1, "", "trapezoid"], [457, 1, 1, "", "tri"], [458, 1, 1, "", "tril"], [459, 1, 1, "", "tril_indices"], [460, 1, 1, "", "tril_indices_from"], [461, 1, 1, "", "trim_zeros"], [462, 1, 1, "", "triu"], [463, 1, 1, "", "triu_indices"], [464, 1, 1, "", "triu_indices_from"], [465, 1, 1, "", "true_divide"], [466, 1, 1, "", "trunc"], [467, 1, 1, "", "unique"], [468, 1, 1, "", "unwrap"], [469, 1, 1, "", "vander"], [470, 1, 1, "", "var"], [471, 1, 1, "", "vdot"], [472, 1, 1, "", "vstack"], [473, 1, 1, "", "where"], [474, 1, 1, "", "zeros"], [475, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[96, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[96, 3, 1, "", "T"], [96, 4, 1, "", "__eq__"], [96, 4, 1, "", "__ge__"], [96, 4, 1, "", "__getitem__"], [96, 4, 1, "", "__gt__"], [96, 4, 1, "", "__le__"], [96, 4, 1, "", "__len__"], [96, 4, 1, "", "__lt__"], [96, 4, 1, "", "__ne__"], [96, 4, 1, "", "__setitem__"], [96, 4, 1, "", "all"], [96, 4, 1, "", "any"], [96, 4, 1, "", "argmax"], [96, 4, 1, "", "argmin"], [96, 4, 1, "", "argsort"], [96, 4, 1, "", "asnumpy"], [96, 4, 1, "", "astype"], [96, 4, 1, "", "choose"], [96, 4, 1, "", "clip"], [96, 4, 1, "", "conj"], [96, 4, 1, "", "conjugate"], [96, 4, 1, "", "copy"], [96, 4, 1, "", "cumprod"], [96, 4, 1, "", "cumsum"], [96, 3, 1, "", "device"], [96, 4, 1, "", "diagonal"], [96, 4, 1, "", "dot"], [96, 3, 1, "", "dtype"], [96, 4, 1, "", "fill"], [96, 3, 1, "", "flags"], [96, 3, 1, "", "flat"], [96, 4, 1, "", "flatten"], [96, 4, 1, "", "get_array"], [96, 3, 1, "", "imag"], [96, 4, 1, "", "item"], [96, 3, 1, "", "itemsize"], [96, 4, 1, "", "max"], [96, 4, 1, "", "mean"], [96, 4, 1, "", "min"], [96, 3, 1, "", "nbytes"], [96, 3, 1, "", "ndim"], [96, 4, 1, "", "nonzero"], [96, 4, 1, "", "partition"], [96, 4, 1, "", "prod"], [96, 4, 1, "", "put"], [96, 4, 1, "", "ravel"], [96, 3, 1, "", "real"], [96, 4, 1, "", "repeat"], [96, 4, 1, "", "reshape"], [96, 4, 1, "", "round"], [96, 4, 1, "", "searchsorted"], [96, 3, 1, "", "shape"], [96, 3, 1, "", "size"], [96, 4, 1, "", "sort"], [96, 4, 1, "", "squeeze"], [96, 4, 1, "", "std"], [96, 3, 1, "", "strides"], [96, 4, 1, "", "sum"], [96, 4, 1, "", "swapaxes"], [96, 3, 1, "", "sycl_context"], [96, 3, 1, "", "sycl_device"], [96, 3, 1, "", "sycl_queue"], [96, 4, 1, "", "take"], [96, 4, 1, "", "to_device"], [96, 4, 1, "", "trace"], [96, 4, 1, "", "transpose"], [96, 3, 1, "", "usm_type"], [96, 4, 1, "", "var"]], "dpnp.dtype": [[98, 4, 1, "", "__eq__"], [98, 4, 1, "", "__ge__"], [98, 4, 1, "", "__getitem__"], [98, 4, 1, "", "__gt__"], [98, 4, 1, "", "__le__"], [98, 4, 1, "", "__len__"], [98, 4, 1, "", "__lt__"], [98, 4, 1, "", "__ne__"], [98, 3, 1, "", "alignment"], [98, 3, 1, "", "base"], [98, 3, 1, "", "byteorder"], [98, 3, 1, "", "char"], [98, 3, 1, "", "descr"], [98, 3, 1, "", "fields"], [98, 3, 1, "", "flags"], [98, 3, 1, "", "hasobject"], [98, 3, 1, "", "isalignedstruct"], [98, 3, 1, "", "isbuiltin"], [98, 3, 1, "", "isnative"], [98, 3, 1, "", "itemsize"], [98, 3, 1, "", "kind"], [98, 3, 1, "", "metadata"], [98, 3, 1, "", "name"], [98, 3, 1, "", "names"], [98, 3, 1, "", "ndim"], [98, 4, 1, "", "newbyteorder"], [98, 3, 1, "", "num"], [98, 3, 1, "", "shape"], [98, 3, 1, "", "str"], [98, 3, 1, "", "subdtype"], [98, 3, 1, "", "type"]], "dpnp.fft": [[113, 1, 1, "", "fft"], [114, 1, 1, "", "fft2"], [115, 1, 1, "", "fftfreq"], [116, 1, 1, "", "fftn"], [117, 1, 1, "", "fftshift"], [118, 1, 1, "", "hfft"], [119, 1, 1, "", "ifft"], [120, 1, 1, "", "ifft2"], [121, 1, 1, "", "ifftn"], [122, 1, 1, "", "ifftshift"], [123, 1, 1, "", "ihfft"], [124, 1, 1, "", "irfft"], [125, 1, 1, "", "irfft2"], [126, 1, 1, "", "irfftn"], [127, 1, 1, "", "rfft"], [128, 1, 1, "", "rfft2"], [129, 1, 1, "", "rfftfreq"], [130, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[134, 4, 1, "", "__eq__"], [134, 4, 1, "", "__ge__"], [134, 4, 1, "", "__getitem__"], [134, 4, 1, "", "__gt__"], [134, 4, 1, "", "__iter__"], [134, 4, 1, "", "__le__"], [134, 4, 1, "", "__lt__"], [134, 4, 1, "", "__ne__"], [134, 4, 1, "", "__next__"], [134, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[186, 1, 1, "", "cholesky"], [187, 1, 1, "", "cond"], [188, 1, 1, "", "det"], [189, 1, 1, "", "eig"], [190, 1, 1, "", "eigh"], [191, 1, 1, "", "eigvals"], [192, 1, 1, "", "eigvalsh"], [193, 1, 1, "", "inv"], [194, 1, 1, "", "lstsq"], [195, 1, 1, "", "matrix_power"], [196, 1, 1, "", "matrix_rank"], [197, 1, 1, "", "multi_dot"], [198, 1, 1, "", "norm"], [199, 1, 1, "", "pinv"], [200, 1, 1, "", "qr"], [201, 1, 1, "", "slogdet"], [202, 1, 1, "", "solve"], [203, 1, 1, "", "svd"], [204, 1, 1, "", "tensorinv"], [205, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[247, 6, 1, "", "T"], [248, 4, 1, "", "__abs__"], [249, 4, 1, "", "__add__"], [250, 4, 1, "", "__and__"], [251, 4, 1, "", "__bool__"], [252, 4, 1, "", "__complex__"], [253, 4, 1, "", "__copy__"], [254, 4, 1, "", "__eq__"], [255, 4, 1, "", "__float__"], [256, 4, 1, "", "__floordiv__"], [257, 4, 1, "", "__ge__"], [258, 4, 1, "", "__getitem__"], [259, 4, 1, "", "__gt__"], [260, 4, 1, "", "__iadd__"], [261, 4, 1, "", "__iand__"], [262, 4, 1, "", "__ifloordiv__"], [263, 4, 1, "", "__ilshift__"], [264, 4, 1, "", "__imod__"], [265, 4, 1, "", "__imul__"], [266, 4, 1, "", "__int__"], [267, 4, 1, "", "__invert__"], [268, 4, 1, "", "__ior__"], [269, 4, 1, "", "__ipow__"], [270, 4, 1, "", "__irshift__"], [271, 4, 1, "", "__isub__"], [272, 4, 1, "", "__itruediv__"], [273, 4, 1, "", "__ixor__"], [274, 4, 1, "", "__le__"], [275, 4, 1, "", "__len__"], [276, 4, 1, "", "__lshift__"], [277, 4, 1, "", "__lt__"], [278, 4, 1, "", "__matmul__"], [279, 4, 1, "", "__mod__"], [280, 4, 1, "", "__mul__"], [281, 4, 1, "", "__ne__"], [282, 4, 1, "", "__neg__"], [283, 4, 1, "", "__new__"], [284, 4, 1, "", "__or__"], [285, 4, 1, "", "__pos__"], [286, 4, 1, "", "__pow__"], [287, 4, 1, "", "__repr__"], [288, 4, 1, "", "__rshift__"], [289, 4, 1, "", "__setitem__"], [290, 4, 1, "", "__str__"], [291, 4, 1, "", "__sub__"], [292, 4, 1, "", "__truediv__"], [293, 4, 1, "", "__xor__"], [294, 4, 1, "", "all"], [295, 4, 1, "", "any"], [296, 4, 1, "", "argmax"], [297, 4, 1, "", "argmin"], [298, 4, 1, "", "argsort"], [299, 4, 1, "", "astype"], [300, 4, 1, "", "choose"], [301, 4, 1, "", "clip"], [302, 4, 1, "", "conj"], [303, 4, 1, "", "conjugate"], [304, 4, 1, "", "copy"], [305, 4, 1, "", "cumprod"], [306, 4, 1, "", "cumsum"], [307, 4, 1, "", "diagonal"], [308, 6, 1, "", "dtype"], [309, 4, 1, "", "fill"], [310, 6, 1, "", "flags"], [311, 6, 1, "", "flat"], [312, 4, 1, "", "flatten"], [313, 6, 1, "", "imag"], [314, 4, 1, "", "item"], [315, 6, 1, "", "itemsize"], [316, 4, 1, "", "max"], [317, 4, 1, "", "mean"], [318, 4, 1, "", "min"], [319, 6, 1, "", "nbytes"], [320, 6, 1, "", "ndim"], [321, 4, 1, "", "nonzero"], [322, 4, 1, "", "partition"], [323, 4, 1, "", "prod"], [324, 4, 1, "", "put"], [325, 4, 1, "", "ravel"], [326, 6, 1, "", "real"], [327, 4, 1, "", "repeat"], [328, 4, 1, "", "reshape"], [329, 4, 1, "", "round"], [330, 4, 1, "", "searchsorted"], [331, 6, 1, "", "shape"], [332, 6, 1, "", "size"], [333, 4, 1, "", "sort"], [334, 4, 1, "", "squeeze"], [335, 4, 1, "", "std"], [336, 6, 1, "", "strides"], [337, 4, 1, "", "sum"], [338, 4, 1, "", "swapaxes"], [339, 4, 1, "", "take"], [340, 4, 1, "", "trace"], [341, 4, 1, "", "transpose"], [342, 4, 1, "", "var"]], "dpnp.random": [[365, 2, 1, "", "RandomState"], [366, 1, 1, "", "beta"], [367, 1, 1, "", "binomial"], [368, 1, 1, "", "bytes"], [369, 1, 1, "", "chisquare"], [370, 1, 1, "", "choice"], [371, 1, 1, "", "dirichlet"], [372, 1, 1, "", "exponential"], [373, 1, 1, "", "f"], [374, 1, 1, "", "gamma"], [375, 1, 1, "", "geometric"], [376, 1, 1, "", "gumbel"], [377, 1, 1, "", "hypergeometric"], [378, 1, 1, "", "laplace"], [379, 1, 1, "", "logistic"], [380, 1, 1, "", "lognormal"], [381, 1, 1, "", "logseries"], [382, 1, 1, "", "multinomial"], [383, 1, 1, "", "multivariate_normal"], [384, 1, 1, "", "negative_binomial"], [385, 1, 1, "", "noncentral_chisquare"], [386, 1, 1, "", "noncentral_f"], [387, 1, 1, "", "normal"], [388, 1, 1, "", "pareto"], [389, 1, 1, "", "permutation"], [390, 1, 1, "", "poisson"], [391, 1, 1, "", "power"], [392, 1, 1, "", "rand"], [393, 1, 1, "", "randint"], [394, 1, 1, "", "randn"], [395, 1, 1, "", "random"], [396, 1, 1, "", "random_integers"], [397, 1, 1, "", "random_sample"], [398, 1, 1, "", "ranf"], [399, 1, 1, "", "rayleigh"], [400, 1, 1, "", "sample"], [401, 1, 1, "", "seed"], [402, 1, 1, "", "shuffle"], [403, 1, 1, "", "standard_cauchy"], [404, 1, 1, "", "standard_exponential"], [405, 1, 1, "", "standard_gamma"], [406, 1, 1, "", "standard_normal"], [407, 1, 1, "", "standard_t"], [408, 1, 1, "", "triangular"], [409, 1, 1, "", "uniform"], [410, 1, 1, "", "vonmises"], [411, 1, 1, "", "wald"], [412, 1, 1, "", "weibull"], [413, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[365, 4, 1, "", "__eq__"], [365, 4, 1, "", "__ge__"], [365, 4, 1, "", "__gt__"], [365, 4, 1, "", "__le__"], [365, 4, 1, "", "__lt__"], [365, 4, 1, "", "__ne__"], [365, 4, 1, "", "get_state"], [365, 4, 1, "", "get_sycl_device"], [365, 4, 1, "", "get_sycl_queue"], [365, 4, 1, "", "normal"], [365, 4, 1, "", "rand"], [365, 4, 1, "", "randint"], [365, 4, 1, "", "randn"], [365, 4, 1, "", "random_sample"], [365, 4, 1, "", "standard_normal"], [365, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 81, 84, 96, 98, 99, 114, 116, 118, 120, 121, 123, 125, 126, 128, 130, 131, 146, 147, 194, 196, 198, 203, 308, 341, 365, 366, 367, 372, 373, 374, 376, 377, 378, 379, 380, 382, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 453, 483], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 158, 159, 160, 163, 166, 167, 169, 172, 173, 174, 175, 176, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 206, 207, 208, 209, 210, 211, 215, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 304, 307, 309, 313, 314, 326, 329, 331, 333, 335, 340, 341, 342, 343, 346, 348, 349, 350, 353, 355, 356, 357, 358, 359, 360, 361, 364, 365, 367, 372, 374, 375, 376, 378, 379, 380, 382, 383, 384, 387, 389, 390, 391, 392, 395, 397, 398, 399, 400, 403, 406, 408, 409, 410, 417, 419, 420, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 483], "00": [77, 101, 113, 435], "000": [234, 367], "00000000005e": 109, "00000000e": [113, 234], "000000082740371e": 109, "000000e": [77, 435], "00001e10": [17, 169], "0001e10": 169, "000e": 101, "000j": 234, "002": 234, "00867716": 369, "01": 101, "02": [101, 234], "03": 234, "03088525e": 102, "0396842": 218, "04": 101, "04719755": 364, "04921661": 365, "05": [17, 101, 169], "0614962j": [114, 128], "06310682": 365, "07": 234, "07944154": [82, 201], "08": [17, 77, 101, 139, 169, 383, 435], "08156915": 365, "0943951": 364, "09640474": 213, "09861229": [82, 201, 210], "0d": 34, "0dev0": 6, "0j": [20, 95, 96, 170, 171, 177, 178, 221, 313, 326, 433], "0th": 452, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 170, 171, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 298, 299, 304, 307, 309, 312, 313, 314, 320, 322, 326, 331, 333, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 367, 369, 370, 372, 374, 376, 378, 379, 380, 382, 383, 384, 387, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 404, 406, 409, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483], "10": [0, 4, 14, 15, 25, 27, 31, 32, 46, 55, 67, 73, 82, 83, 84, 88, 89, 92, 93, 96, 98, 100, 101, 109, 110, 117, 129, 151, 153, 159, 160, 165, 169, 181, 182, 183, 208, 209, 210, 211, 218, 219, 225, 233, 328, 359, 361, 365, 367, 377, 389, 418, 422, 423, 425, 427, 430, 443, 449, 458, 459, 460, 462, 463, 464, 473], "100": [88, 129, 153, 169, 182, 197, 218, 377, 403, 416, 468], "1000": [63, 153, 197, 218, 366, 367, 372, 374, 376, 377, 378, 379, 380, 387, 388, 391, 393, 395, 398, 400, 406, 410, 411, 412, 413, 416, 456], "10000": [84, 197, 375, 390, 399, 409], "100000": 384, "1000000": [403, 405, 407, 408], "1024": 0, "105": 101, "11": [31, 32, 55, 78, 88, 89, 96, 110, 155, 198, 328, 384, 393, 427, 430, 436, 458, 459, 460, 462, 463, 464, 473], "110": [100, 167], "111111": 234, "113": 212, "11570901": 365, "1179187": 365, "118033988749895": 444, "119": 100, "1196081": 365, "12": [10, 31, 32, 54, 81, 86, 88, 89, 93, 98, 100, 110, 114, 128, 165, 218, 357, 359, 364, 389, 430, 458, 459, 460, 462, 463, 464, 473], "120": [83, 86], "123": [96, 101, 314], "125": [139, 355, 356, 469], "127": 153, "128": [0, 153, 234], "12th": 100, "13": [10, 31, 32, 58, 88, 89, 95, 98, 100, 168, 221, 430, 459, 460, 463, 464], "130": 100, "134": 167, "13436424": 365, "135": [29, 50], "13710533": 369, "139884456208480": 16, "13j": 416, "14": [31, 32, 57, 58, 88, 89, 95, 133, 167, 168, 430, 452, 459, 460, 463, 464], "140": 468, "140053638309840": 21, "14157194": 456, "14159265": [13, 24, 29, 50, 85, 364], "14423775e": 113, "14j": 416, "15": [31, 32, 84, 88, 89, 93, 100, 118, 123, 199, 209, 389, 430, 459, 460, 463, 464], "150": 86, "15888336": 218, "15j": 416, "16": [6, 57, 88, 89, 98, 113, 139, 149, 153, 155, 233, 355, 356, 416, 431, 450, 459, 460, 463, 464], "16227766": [187, 418], "16394577": 365, "164": 213, "166": 213, "16j": 113, "17": [113, 114, 128], "17157288": [190, 192], "172": 6, "17281316e": 113, "177": [153, 218], "17j": 113, "18": [6, 83, 98, 99, 100, 116, 198, 218], "180": [29, 50, 85, 86, 100, 363, 468, 491], "1805": 10, "18236388": 365, "18557831": 365, "1887902": 364, "19": [10, 79, 98, 468], "1923875335537315": 394, "19245009": 429, "1924881e": 139, "1965": 10, "19722458": 82, "1d": [99, 360, 361, 449, 456], "1e": [17, 109, 169, 189, 199, 209, 210, 212, 213, 383], "1e10": [17, 169], "1j": [11, 12, 20, 27, 28, 37, 46, 49, 70, 71, 96, 124, 165, 170, 177, 189, 203, 313, 326, 415, 439, 441], "1th": 452, "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 55, 57, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 170, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 299, 304, 307, 309, 312, 314, 320, 322, 331, 332, 341, 343, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 363, 364, 365, 369, 373, 377, 383, 389, 392, 394, 405, 407, 408, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "20": [6, 83, 93, 100, 129, 166, 169, 182, 183, 198, 361, 367, 382, 430, 449, 468], "20000": 367, "2007": 10, "200e": 101, "20477401j": [114, 128], "2048": 0, "21": [84, 98], "210": 86, "215": 218, "21941987": 365, "21968665": 365, "22": 360, "220": 468, "220446049250313e": 416, "222222": 234, "22460635e": 450, "22464680e": 113, "22497216": 198, "22776602": 218, "23": [6, 365], "230": 100, "23598776": 364, "23606798": 198, "24": [31, 32, 81, 83, 96, 99, 100, 167, 182, 204, 331, 357, 452, 454], "240": 86, "24264069": 198, "24544512": 365, "247219128924647": 243, "25": [98, 100, 105, 115, 155, 159, 160, 193, 206, 233, 245, 394, 403, 431, 469, 470], "255": [57, 59], "25506903": 365, "256": [0, 153], "257": 6, "26": [60, 100], "260": 468, "26618007j": 211, "27": [64, 139, 218, 355, 356, 429, 469], "270": 86, "28": 100, "28000000e": 234, "2800000e": 234, "283185307179586": 468, "28318531": 468, "28352814": 365, "28904982": 213, "297": 10, "299": 6, "2d": [203, 221, 467], "2e": 84, "2f": 0, "2j": [70, 71, 95, 113, 165, 170, 177, 190, 192, 221, 415, 433, 439, 471], "2k": 468, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 52, 53, 54, 55, 57, 60, 61, 62, 64, 67, 68, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 122, 123, 125, 126, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 153, 155, 159, 160, 161, 162, 163, 165, 166, 167, 170, 171, 177, 178, 179, 181, 182, 183, 187, 188, 189, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 304, 307, 312, 314, 320, 322, 331, 332, 333, 341, 343, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 364, 365, 369, 373, 380, 383, 389, 392, 393, 394, 404, 408, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 434, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475], "30": [81, 86, 96, 100, 129, 332, 361, 364, 449, 471], "300": [86, 468], "3003003": 417, "301": 10, "30102999566": 209, "3012989": 436, "30258509": [82, 219], "308": 234, "308j": 234, "31": [60, 153], "312": 102, "316": 218, "32": [98, 100, 153, 242, 244, 452], "33": 417, "330": 86, "333": 197, "33333333": 234, "3333333e": 234, "33340275": 456, "33486982e": 113, "33836967": 365, "340": 468, "34074171": 365, "34132519": 218, "34846923": 198, "34960421": 218, "35": [100, 375], "35106603e": 198, "35355338": 429, "36": 81, "360": 468, "37": 427, "371139e": 77, "38": [167, 367], "380": 468, "382": 6, "38268343": 190, "38268343j": 190, "38629436": 82, "38885": 367, "389056099": [106, 109], "39": 6, "39295758": 365, "397": 6, "3e": [0, 84, 416], "3j": [95, 221, 439], "3rd": 69, "3x3": 220, "3x8000": 404, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 52, 54, 55, 57, 59, 61, 67, 68, 69, 72, 75, 77, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 128, 129, 130, 131, 135, 136, 139, 141, 142, 143, 147, 148, 149, 151, 153, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 170, 177, 181, 182, 185, 188, 193, 195, 196, 198, 201, 204, 205, 206, 211, 214, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 238, 240, 243, 245, 304, 307, 312, 320, 322, 331, 333, 341, 343, 346, 348, 350, 355, 356, 357, 359, 360, 364, 365, 366, 369, 389, 394, 410, 414, 415, 416, 419, 420, 421, 425, 426, 427, 428, 431, 433, 437, 438, 440, 443, 444, 445, 447, 448, 452, 453, 455, 456, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475], "40": [100, 129, 183, 361, 449], "40882036": 365, "4096": 0, "41421356": [187, 198], "42": 431, "420": 468, "429": 6, "44": [353, 360], "4400": [100, 452], "443469": 218, "44509285e": 113, "45": [20, 29, 50], "4532": [100, 452], "46": 100, "460": 468, "46394577": 365, "464": 218, "4664": [100, 452], "47": 6, "4730": [100, 452], "4796": [100, 452], "48": [6, 81], "48093112": 365, "4874": [100, 452], "48927254": 365, "49": 6, "4928": [100, 452], "49543509": 365, "49778714": 468, "499128": 95, "4d": 203, "4e": 416, "4j": [165, 415, 471], "4x4": [459, 463], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 51, 52, 55, 56, 57, 59, 60, 61, 65, 67, 69, 72, 75, 76, 79, 81, 83, 84, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 100, 101, 105, 110, 114, 115, 117, 125, 128, 129, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 153, 155, 158, 159, 160, 161, 162, 165, 166, 167, 170, 177, 181, 182, 183, 186, 190, 192, 193, 197, 198, 202, 206, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 240, 243, 299, 304, 332, 343, 346, 348, 349, 350, 355, 356, 359, 360, 364, 365, 366, 367, 369, 372, 384, 388, 389, 390, 391, 394, 397, 412, 414, 415, 416, 417, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 433, 437, 439, 443, 444, 446, 447, 448, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475], "50": [114, 128, 129, 153, 182, 212, 213, 218, 361, 449, 452, 456, 473], "500": [182, 468], "5018": [100, 452], "5091786": 78, "51": 6, "512": 0, "5162": [100, 452], "52069395e": 113, "52359878": 364, "52928804": 365, "5306": [100, 452], "5399045e": 139, "54": 365, "540": 468, "542": 6, "54288406": 365, "54465213": 365, "548739": 436, "54930614": [30, 51], "55": [353, 360, 431], "5555555555555554": 245, "56": 6, "562": 218, "5620499351813308": [11, 12], "56920387": 365, "5707963267948966": [26, 45], "57079633": [20, 29, 50, 364, 468], "58997253": 365, "591953": 78, "5e": [212, 213], "5j": [227, 348, 439], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 52, 55, 59, 60, 67, 69, 75, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 109, 110, 115, 118, 129, 136, 139, 152, 155, 161, 165, 166, 167, 181, 182, 198, 199, 200, 203, 204, 206, 218, 220, 237, 238, 242, 304, 314, 331, 343, 346, 350, 353, 355, 356, 359, 365, 382, 384, 389, 394, 414, 415, 421, 425, 426, 427, 428, 431, 437, 439, 443, 445, 446, 447, 448, 452, 454, 456, 458, 459, 460, 462, 463, 464, 465, 467, 468, 471, 472, 473, 475], "60": [81, 86, 100, 361, 449, 452, 468, 473], "600": 182, "60943791": 82, "61799388": 364, "62": 167, "6227766": 153, "62318272": 369, "62341325": 153, "624": 101, "63": 153, "63317787e": 450, "63522211": 365, "63836967": 365, "64": [0, 4, 100, 139, 153, 242, 244, 355, 356, 427], "64000": 100, "65745445": [14, 25], "66519143": 364, "6666666666666665": 240, "67": 100, "67305985": 146, "673174": 365, "67718303": 365, "69295758": 365, "69314718": [82, 201, 210], "6990877": 365, "6j": [165, 415, 471], "7": [15, 17, 22, 23, 52, 65, 67, 75, 79, 81, 84, 87, 88, 89, 91, 92, 94, 96, 99, 106, 110, 136, 140, 153, 155, 167, 169, 181, 182, 198, 203, 220, 225, 230, 233, 314, 346, 358, 359, 365, 389, 415, 419, 422, 424, 425, 445, 446, 447, 448, 452, 458, 459, 460, 462, 463, 464, 465, 466, 468, 471, 473], "70": [182, 471, 473], "700": 182, "700e": 101, "70710677": [96, 313, 326], "70710678": [187, 189], "70710678j": 189, "70882036": 365, "71238898": 364, "718281828": [106, 109], "72": 81, "720": [83, 468], "72075441": 218, "72538256": [27, 46], "74165739": 198, "742278e": 435, "74596669": 198, "74921661": 365, "75": [55, 105, 115, 155, 160, 193, 206], "754": 132, "75958653": 364, "76096244": 365, "76377462": 365, "77447665": 213, "78539816": [20, 28, 29, 49, 50, 468], "78927254": 365, "79175947": 82, "79769313e": 234, "7j": 358, "8": [4, 15, 17, 22, 52, 64, 67, 75, 81, 87, 88, 89, 91, 92, 96, 98, 100, 101, 110, 113, 115, 129, 130, 136, 139, 153, 155, 165, 169, 181, 188, 198, 201, 203, 204, 206, 218, 220, 331, 346, 355, 356, 357, 359, 365, 389, 408, 415, 425, 429, 435, 448, 452, 454, 456, 458, 459, 460, 462, 463, 464, 468, 469, 473], "80": [98, 100, 473], "8000": 404, "80226506": 365, "81715362": 365, "827941": [153, 218], "82842712": [190, 192], "84288406": 365, "84401099": 365, "84743374": 365, "84803548": 198, "85": 100, "86": 167, "87649168": 212, "88": 99, "88178420e": 113, "88997253": 365, "89920014": 369, "8f": 98, "8j": 471, "9": [4, 15, 22, 52, 67, 75, 81, 84, 87, 88, 89, 91, 94, 96, 100, 102, 110, 113, 116, 117, 122, 133, 139, 141, 149, 153, 155, 169, 181, 189, 194, 198, 199, 200, 203, 218, 220, 233, 234, 314, 346, 359, 365, 367, 369, 389, 415, 425, 440, 445, 452, 458, 459, 460, 462, 463, 464, 465, 468, 469, 473], "90": [20, 86, 363, 473], "917152": 451, "92387953": 190, "92387953j": 190, "94": 100, "94591015": 82, "95": 194, "95799250e": 113, "98": 221, "98024613": 218, "99": [99, 210, 361], "99322285": [14, 25], "99532227": 105, "996272": 451, "99822295": [27, 46], "99853728": 105, "999": 101, "9990000e": 234, "99959305": 105, "99989938": 105, "9999": 234, "99997791": 105, "999999e": 169, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 96, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 119, 120, 121, 125, 126, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 163, 165, 166, 168, 172, 173, 174, 175, 176, 183, 184, 185, 186, 190, 191, 192, 194, 196, 197, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 227, 229, 230, 233, 237, 238, 242, 244, 299, 304, 312, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 363, 364, 365, 367, 384, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 414, 417, 419, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 447, 448, 450, 451, 452, 453, 455, 457, 459, 461, 463, 465, 466, 469, 473, 474, 475, 491], "AND": [16, 57, 58, 59, 60, 168, 214, 215, 216, 217], "And": [4, 47, 48, 88, 96, 299, 459, 463], "As": 467, "Be": 189, "Being": 3, "But": [4, 98], "By": [31, 32, 41, 48, 81, 96, 114, 118, 120, 124, 126, 130, 153, 194, 206, 218, 221, 222, 224, 228, 235, 236, 239, 240, 241, 242, 243, 244, 245, 299, 414, 420, 425, 437, 444, 448, 457, 459, 461, 463, 470], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 312, 313, 314, 320, 326, 328, 331, 336, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483, 491], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 55, 67, 69, 79, 81, 82, 83, 84, 87, 91, 92, 95, 96, 98, 99, 100, 101, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 142, 143, 145, 150, 153, 155, 159, 160, 161, 165, 166, 167, 169, 175, 176, 177, 186, 194, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 218, 219, 222, 223, 224, 226, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 333, 353, 357, 360, 361, 365, 387, 409, 415, 416, 418, 420, 421, 425, 427, 428, 430, 438, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 455, 456, 467, 468, 469, 470, 471, 472, 473, 483, 491], "In": [4, 10, 31, 32, 83, 84, 100, 101, 119, 120, 121, 124, 126, 155, 186, 191, 197, 200, 213, 218, 237, 238, 240, 242, 244, 357, 360, 365, 409, 421, 446, 448, 466], "It": [4, 10, 16, 21, 22, 31, 32, 67, 83, 84, 93, 95, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 155, 190, 192, 213, 221, 224, 235, 236, 237, 238, 239, 240, 241, 243, 245, 357, 431, 444, 446, 448, 470, 491], "Its": [67, 204, 361, 454], "NOT": [58, 168, 214, 215, 216, 217], "No": [40, 41, 100, 186], "Not": [16, 21, 41, 172, 234, 237, 238, 239, 241, 242, 244, 357], "OR": [21, 57, 58, 59, 60, 168, 214, 215, 216, 217], "On": 4, "One": [52, 53, 54, 81, 97, 98, 124, 421], "Or": [155, 456], "That": 220, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 62, 64, 67, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 299, 304, 313, 320, 322, 326, 331, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 368, 370, 371, 381, 386, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 414, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 438, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 483, 487, 491], "Then": [10, 42, 44, 220], "There": [10, 206, 467], "These": [4, 22, 98, 100, 101, 108, 220, 232, 361, 449, 459, 463, 483, 487], "To": [4, 118, 124, 126, 139, 346, 468], "With": [31, 32, 55, 79, 198, 222, 228, 235, 236, 242, 244, 357, 446], "_": [0, 160, 443, 456], "__array_interface__": 98, "__bool__": 483, "__dlpack__": 145, "__dlpack_device__": 145, "__eq__": [96, 98, 134, 365], "__ge__": [96, 98, 134, 365], "__getitem__": [96, 98, 134], "__gt__": [96, 98, 134, 365], "__iter__": 134, "__le__": [96, 98, 134, 365], "__len__": [96, 98], "__lt__": [96, 98, 134, 365], "__main__": 0, "__name__": 0, "__ne__": [96, 98, 134, 365], "__next__": 134, "__setitem__": [96, 134], "__sycl_usm_array_interface__": 43, "_dtypes_list": 0, "a1": [37, 38], "a2": [37, 38], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 67, "a_min": 67, "a_resamp": 124, "ab": [6, 10, 12, 17, 169], "abc": 100, "abcd": 101, "about": [42, 44, 96, 132, 189, 310, 483], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 45, 46, 51, 82, 87, 90, 116, 121, 126, 130, 166, 200, 219, 234, 418, 457, 458, 462], "absolut": [6, 11, 17, 20, 112, 169, 201, 243, 245, 358, 416, 444, 468, 470, 491], "accept": [33, 100, 365, 438, 459, 463], "access": [10, 88, 89, 131, 220, 459, 463, 483], "accord": [16, 21, 55, 63, 98, 130, 132, 189, 190, 191, 192, 219, 224, 240, 243, 245, 418, 423, 444, 470], "accordingli": [239, 241], "account": 421, "accumul": [82, 83, 84, 100, 159, 237, 238, 242, 244, 357, 446, 454], "accur": [98, 109, 155, 210, 212], "accuraci": [119, 120, 121, 124, 126], "achiev": 100, "aco": 24, "acosh": 25, "across": [91, 160, 237, 238, 242, 244], "activ": 4, "actual": [98, 159, 160, 186, 197], "ad": [17, 98, 101, 108, 124, 169, 188, 201, 213, 468, 487], "add": [6, 98, 491], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [82, 186, 240, 467], "address": 98, "adjac": 468, "advanc": 100, "advers": 100, "advis": 4, "affect": [23, 91, 100, 131, 159, 160], "after": [97, 131, 345, 384, 425], "ag": 98, "against": [17, 31, 32, 61, 62, 67, 79, 154, 169, 198, 199, 222, 228, 235, 236, 242, 244, 357, 361, 446, 449], "ai": [3, 361, 449], "ai_max": 449, "ai_min": 449, "ainv": [193, 204], "al": 10, "algebra": [476, 487], "algorithm": [10, 100, 101, 113, 119, 127], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 58, 69, 94, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 168, 183, 230, 246, 355, 356, 365, 395, 398, 400, 419, 423, 428, 455, 465, 468, 472], "alias": [9, 118, 119, 124, 126], "align": 98, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 41, 48, 55, 68, 79, 86, 92, 96, 97, 98, 100, 101, 106, 107, 109, 111, 116, 117, 121, 122, 125, 126, 130, 131, 136, 137, 138, 146, 147, 149, 153, 155, 161, 163, 165, 181, 186, 196, 199, 206, 218, 222, 228, 235, 236, 239, 241, 299, 302, 309, 322, 357, 367, 415, 416, 425, 428, 431, 442, 446, 467, 472, 483, 491], "allclos": [6, 37, 169, 193, 199, 200, 202, 203, 205], "alloc": [3, 4, 22, 23, 36, 39, 40, 41, 42, 43, 44, 48, 55, 73, 82, 87, 88, 90, 96, 102, 103, 111, 115, 129, 133, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 175, 176, 206, 207, 218, 219, 220, 224, 227, 240, 243, 245, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 418, 442, 444, 457, 459, 463, 469, 470, 474, 475], "allow": [48, 96, 100, 159, 160, 213, 220, 299, 328, 448, 483], "alltru": 6, "almost": [34, 189, 459], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 55, 68, 69, 79, 82, 83, 84, 87, 88, 90, 91, 92, 96, 97, 99, 110, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 136, 137, 138, 142, 143, 148, 153, 155, 161, 166, 198, 200, 204, 205, 206, 218, 219, 222, 223, 224, 225, 226, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 296, 297, 298, 305, 306, 316, 318, 323, 324, 332, 335, 337, 339, 340, 342, 353, 357, 359, 360, 361, 418, 420, 425, 426, 428, 431, 437, 438, 443, 444, 446, 448, 449, 452, 453, 454, 456, 459, 460, 463, 464, 467, 468, 470, 472, 483], "alpha": [366, 371, 372, 388, 391], "alreadi": [4, 10, 40, 41, 52, 53, 54, 351, 467], "also": [3, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 57, 59, 60, 74, 94, 96, 98, 100, 104, 108, 116, 121, 125, 126, 127, 130, 139, 141, 142, 143, 144, 148, 150, 155, 156, 157, 158, 159, 162, 169, 183, 184, 185, 186, 212, 213, 220, 223, 229, 230, 232, 233, 331, 346, 347, 355, 356, 403, 419, 423, 445, 448, 465, 467, 483], "alter": 91, "altern": [3, 4, 16, 21, 83, 84, 95, 96, 221, 222, 224, 228, 237, 238, 240, 242, 243, 244, 245, 341, 357, 444, 446, 470], "although": [20, 98, 120, 121, 122, 453], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 39, 45, 46, 48, 49, 51, 91, 96, 99, 112, 139, 145, 190, 192, 243, 245, 299, 346, 421, 439, 444, 470], "amax": [6, 222], "ambigu": 483, "amin": [6, 228], "among": 99, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 178, 181, 183, 184, 185, 188, 191, 194, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 298, 299, 300, 301, 304, 314, 316, 320, 322, 324, 327, 328, 331, 332, 333, 334, 338, 339, 341, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 372, 373, 375, 384, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 483, 491], "anaconda": 3, "analog": [114, 116, 118, 120, 121, 123], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 85, 86, 165, 363, 364, 415, 416, 468, 491], "ani": [3, 6, 16, 17, 22, 36, 39, 40, 41, 42, 43, 44, 48, 61, 62, 73, 87, 90, 92, 96, 98, 100, 101, 114, 116, 120, 121, 126, 130, 131, 151, 152, 153, 155, 160, 161, 171, 178, 179, 195, 205, 206, 218, 220, 239, 241, 299, 320, 365, 409, 438, 469, 483], "anoth": [4, 75, 96, 110, 120, 121, 145, 304, 324, 353, 360, 426], "answer": 367, "anti": [91, 131], "anyth": 98, "ap": 194, "apart": 456, "api": [0, 2, 3, 6, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 98, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "appear": [108, 137, 138, 467], "append": [0, 6, 92, 99, 101, 108, 119, 120, 121, 183], "appli": [31, 32, 33, 55, 63, 100, 234, 422, 452, 456], "applic": [10, 98], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [96, 98, 119, 120, 121, 331], "appropri": [4, 31, 32, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 154, 205, 235, 236, 239, 241, 365, 393, 396, 448, 483], "approxim": [132, 456], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 91, 92, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 153, 155, 156, 157, 158, 159, 160, 162, 167, 168, 169, 172, 173, 174, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 321, 322, 331, 343, 344, 345, 346, 347, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 390, 391, 393, 396, 397, 399, 405, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 456, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 483, 491], "arang": [0, 6, 15, 31, 32, 34, 52, 53, 54, 55, 56, 67, 74, 86, 87, 88, 89, 91, 94, 95, 96, 100, 104, 106, 107, 109, 110, 113, 135, 136, 139, 144, 152, 153, 155, 159, 166, 167, 181, 182, 198, 206, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 226, 228, 230, 233, 307, 347, 350, 353, 355, 356, 360, 364, 389, 419, 422, 425, 431, 445, 452, 454, 456, 459, 460, 463, 464, 465, 473, 475], "arbitrari": [47, 95, 98, 100, 167, 221, 422, 459, 463], "arbitrarili": 100, "arc": [20, 26, 28, 45, 49], "arcco": [6, 13, 14, 25, 26, 28, 29, 45, 49, 50, 77], "arccosh": [6, 13, 14, 24, 27, 30, 46, 51, 78], "arcsin": [6, 13, 24, 27, 28, 29, 45, 46, 49, 50, 435], "arcsinh": [6, 14, 25, 26, 30, 45, 46, 51, 436], "arctan": [6, 13, 20, 24, 26, 29, 30, 45, 49, 50, 51, 450], "arctan2": [6, 20, 26, 28, 45, 49, 50], "arctanh": [6, 14, 25, 27, 28, 29, 46, 49, 50, 51, 451], "area": 456, "arg": [61, 181, 365], "arg1": 180, "arg2": 180, "argmax": [0, 6, 32, 96, 235, 361, 449, 483], "argmin": [6, 31, 96, 236, 449, 483], "argpartit": [6, 33, 361, 449, 483], "argsort": [6, 96, 361, 430, 438, 449, 455, 483], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 57, 58, 59, 60, 63, 64, 65, 67, 69, 74, 77, 78, 85, 86, 94, 95, 96, 98, 101, 105, 106, 107, 109, 139, 140, 141, 142, 143, 144, 158, 162, 165, 168, 179, 180, 183, 197, 198, 209, 210, 211, 212, 213, 220, 221, 223, 229, 230, 231, 233, 328, 341, 344, 345, 354, 355, 356, 358, 360, 363, 364, 415, 416, 417, 419, 422, 423, 424, 429, 433, 434, 435, 436, 443, 445, 450, 451, 452, 456, 465, 466, 483, 491], "argwher": [6, 346], "ari": [52, 53, 54, 99], "arithmet": [55, 153, 224, 225, 240, 243, 245, 354, 444, 446, 470, 476, 487], "around": [6, 96, 153, 360, 427], "arr": [22, 41, 89, 98, 160, 362, 389, 460, 464], "arr2": 98, "arr_t": [48, 96, 299], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 253, 296, 297, 298, 299, 300, 301, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 319, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 487, 491], "array2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 39, 40, 41, 42, 43, 44, 47, 55, 73, 75, 87, 90, 99, 110, 151, 152, 153, 171, 178, 206, 218, 343, 353, 360, 361, 365, 432, 437, 448, 452, 469], "array_of_diagon": 91, "array_repr": 6, "array_split": [6, 69], "array_str": 6, "arrays_and_dtyp": 422, "art": 10, "asanyarrai": [6, 40, 41, 44], "asarrai": [4, 6, 39, 41, 42, 44, 47, 343, 437], "asarray_chkfinit": [6, 39, 40], "ascend": [190, 192, 430], "ascii": 98, "ascontiguousarrai": [6, 39, 40, 41, 44], "asfarrai": [6, 39, 40], "asfortranarrai": [6, 39, 40, 41, 42], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 96, "aspect": 98, "assembl": [69, 97, 161, 428, 443, 472], "assign": [96, 309, 331, 459, 463], "associ": [55, 159, 160, 483], "assum": [10, 55, 101, 118, 124, 126, 196, 199, 203, 220, 456], "astyp": [6, 96, 153, 346], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 53, 54, 108], "atleast_2d": [6, 52, 54, 108], "atleast_3d": [6, 52, 53, 108], "atol": [17, 169], "attain": 0, "attempt": [95, 197], "attribut": [96, 98, 103, 132, 152, 164, 200, 350, 475, 476], "automat": [159, 160], "avail": [2, 3, 4, 10, 76, 80, 98, 105, 225, 231, 235, 236, 239, 241, 242, 476, 483], "averag": [6, 96, 224, 240, 317, 446, 487], "avg": 55, "avoid": [36, 40, 53, 54, 118, 124, 126], "aweight": 80, "ax": [16, 21, 31, 32, 55, 79, 82, 92, 95, 96, 100, 108, 114, 116, 117, 120, 121, 122, 125, 126, 128, 130, 136, 155, 167, 198, 202, 204, 205, 219, 221, 222, 224, 228, 232, 235, 236, 239, 240, 241, 242, 243, 244, 245, 338, 341, 351, 357, 418, 425, 426, 442, 444, 446, 447, 452, 453, 454, 455, 467, 470], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 55, 68, 69, 79, 81, 82, 83, 84, 91, 92, 96, 97, 99, 100, 108, 110, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 136, 137, 138, 142, 143, 148, 153, 155, 161, 166, 194, 198, 206, 218, 219, 221, 222, 223, 224, 225, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 298, 305, 306, 312, 316, 317, 318, 322, 323, 324, 327, 332, 333, 334, 335, 337, 339, 341, 342, 352, 353, 357, 359, 360, 361, 414, 418, 420, 421, 425, 426, 428, 431, 437, 438, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 455, 456, 467, 468, 470, 472, 483], "axis1": [91, 96, 307, 338, 340, 447, 454], "axis2": [91, 96, 307, 338, 340, 447, 454], "axisa": 81, "axisb": 81, "axisc": 81, "axiserror": [33, 438], "b": [10, 15, 17, 22, 31, 32, 37, 38, 57, 60, 68, 69, 75, 81, 84, 95, 96, 97, 98, 100, 101, 104, 146, 147, 156, 157, 161, 167, 169, 182, 184, 185, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 214, 216, 221, 222, 228, 345, 347, 351, 355, 356, 366, 422, 428, 443, 452, 453, 461, 471, 472, 491], "back": [96, 148, 312, 414, 421, 426, 461], "backend": [2, 154, 368, 370, 371, 381, 386, 402], "backward": [10, 48, 96, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 155, 299, 425, 426], "bad": 377, "bartlett": 6, "base": [0, 4, 98, 100, 107, 110, 139, 153, 159, 160, 203, 208, 209, 210, 211, 212, 213, 218, 219, 221, 353, 355, 356, 360, 362], "base_repr": 6, "basic": [63, 100, 483, 487], "bc": [188, 201], "bcde": 101, "becaus": [10, 16, 21, 118, 124, 126, 468, 483], "becom": [10, 96, 159, 341], "been": [97, 361, 426, 449], "befor": [4, 22, 33, 69, 82, 96, 99, 119, 120, 121, 137, 138, 205, 219, 222, 228, 243, 245, 322, 333, 357, 418, 425, 426, 438, 444, 446, 453, 470, 471], "begin": [99, 101, 153, 206, 218, 431], "behav": [207, 360], "behavior": [96, 128, 234, 304, 453], "behind": [96, 322], "being": [3, 98, 142, 143, 223, 229], "belong": [93, 159], "below": [0, 4, 9, 13, 24, 26, 27, 30, 45, 46, 51, 87, 90, 98, 124, 196, 457, 458, 462, 468, 483], "best": 101, "beta": [6, 376], "between": [17, 23, 63, 92, 99, 132, 147, 150, 155, 167, 169, 206, 218, 382, 396, 445, 456, 468], "beyond": [4, 425], "bia": 80, "big": 98, "bin": [93, 113, 115, 129, 159, 160, 403], "bin_edg": [159, 160], "binari": [57, 59, 60, 146, 147, 149, 150, 476, 487], "binary_repr": 6, "bincount": [6, 93, 159], "binomi": [6, 384], "bins_0": 160, "bins_1": 160, "bit": [57, 58, 59, 60, 98, 132, 164, 168, 183, 214, 216, 217, 242, 244, 423, 434, 487], "bitwis": [57, 59, 60], "bitwise_and": [6, 58, 59, 60, 168, 214], "bitwise_invert": [58, 168], "bitwise_left_shift": 183, "bitwise_not": 6, "bitwise_or": [6, 57, 58, 60, 168, 216], "bitwise_right_shift": 423, "bitwise_xor": [6, 57, 58, 59, 168, 217], "biufcmmosuv": 98, "blackman": 6, "block": [6, 69, 97, 131, 161, 182, 428, 443, 472], "bmat": 6, "bool": [9, 16, 17, 21, 31, 32, 36, 37, 38, 40, 43, 48, 55, 63, 75, 79, 82, 93, 96, 98, 101, 104, 131, 145, 153, 156, 157, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 196, 198, 199, 203, 206, 218, 219, 222, 224, 226, 228, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 299, 346, 347, 357, 418, 421, 431, 434, 444, 446, 448, 467, 469, 470, 483], "bool_": 9, "boolean": [57, 58, 59, 60, 75, 82, 98, 110, 139, 145, 166, 168, 169, 172, 173, 174, 175, 176, 177, 181, 214, 216, 219, 220, 224, 240, 242, 243, 245, 346, 353, 418, 421, 444, 448, 470], "boolean_sequ": 181, "both": [10, 15, 17, 22, 29, 37, 38, 50, 55, 57, 59, 60, 67, 74, 81, 94, 95, 104, 120, 127, 139, 141, 142, 143, 144, 156, 157, 158, 162, 167, 169, 182, 183, 184, 185, 198, 212, 213, 214, 216, 217, 221, 223, 229, 230, 233, 244, 345, 347, 355, 356, 419, 423, 445, 452, 454, 459, 461, 463, 465, 471, 473], "bound": [360, 430, 448, 449], "boundari": [155, 360], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51], "briefli": 483, "broadcast": [15, 16, 21, 31, 32, 38, 55, 61, 62, 67, 75, 79, 94, 100, 110, 139, 142, 143, 162, 175, 176, 198, 199, 217, 219, 221, 222, 223, 224, 228, 229, 233, 235, 236, 240, 242, 243, 244, 245, 355, 356, 357, 360, 361, 418, 420, 444, 445, 446, 449, 453, 465, 470, 473], "broadcast_arrai": [6, 62], "broadcast_shap": 6, "broadcast_to": [6, 61, 453], "brought": 10, "buffer": [43, 83, 84, 96, 145, 146, 147, 149, 150, 207, 222, 228, 237, 238, 421], "buffer_lik": 146, "buffererror": 145, "build": 487, "build_loc": 4, "built": 98, "busday_count": 6, "busday_offset": 6, "byte": [6, 48, 96, 98, 100, 146, 147, 207, 299, 315, 319], "byte_bound": 6, "byteord": 98, "byteswap": 6, "bz2": 207, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 81, 85, 86, 94, 95, 96, 98, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 133, 139, 140, 141, 142, 143, 144, 151, 152, 154, 156, 157, 158, 162, 165, 167, 168, 172, 173, 174, 182, 183, 184, 185, 188, 194, 197, 198, 201, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 229, 230, 233, 299, 304, 312, 325, 344, 345, 346, 347, 349, 350, 354, 355, 356, 358, 363, 364, 414, 417, 419, 421, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 452, 453, 465, 466, 467, 473, 474, 475, 491], "c_contigu": [42, 44, 96, 304], "ca": 72, "calcul": [10, 11, 12, 15, 20, 29, 50, 55, 82, 84, 92, 94, 99, 100, 104, 106, 107, 109, 113, 122, 139, 140, 141, 144, 155, 160, 162, 189, 190, 191, 192, 194, 199, 210, 212, 213, 219, 221, 224, 230, 233, 240, 243, 245, 347, 355, 356, 357, 418, 419, 444, 445, 465, 470, 471, 476, 491], "call": [10, 20, 22, 29, 31, 32, 33, 42, 44, 50, 98, 119, 120, 121, 124, 127, 148, 189, 191, 197, 220, 253, 346, 442, 448, 453, 456, 491], "callabl": [148, 220], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 55, 57, 58, 59, 60, 63, 73, 74, 81, 87, 88, 90, 91, 94, 95, 96, 98, 100, 101, 102, 103, 104, 111, 113, 114, 115, 116, 119, 120, 121, 124, 125, 126, 129, 131, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 171, 178, 179, 181, 182, 183, 184, 185, 186, 193, 194, 195, 205, 206, 207, 212, 213, 214, 216, 217, 218, 220, 221, 223, 227, 229, 230, 233, 242, 244, 299, 304, 331, 333, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 361, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 419, 421, 423, 438, 445, 448, 449, 452, 454, 456, 457, 459, 463, 464, 465, 467, 469, 471, 473, 474, 475, 483, 491], "can_cast": [6, 487], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 69, 235, 236, 442, 443], "capabl": [23, 36, 39, 40, 42, 44, 55, 112, 153, 206, 218, 221], "care": [23, 189], "cartesian": 226, "case": [4, 16, 21, 23, 31, 32, 36, 39, 40, 41, 42, 44, 55, 73, 83, 84, 87, 90, 92, 100, 101, 102, 103, 111, 115, 118, 123, 127, 129, 146, 147, 148, 149, 151, 152, 153, 155, 163, 189, 200, 203, 206, 207, 213, 218, 227, 237, 238, 242, 244, 348, 349, 350, 357, 421, 446, 452, 457, 468, 469, 474, 475, 483], "cast": [16, 21, 48, 63, 69, 75, 82, 83, 84, 96, 100, 139, 161, 189, 219, 221, 224, 234, 237, 238, 240, 242, 243, 244, 245, 299, 357, 418, 428, 443, 444, 446, 470, 472], "cat": [367, 384], "cauchi": 403, "cbrt": [6, 440], "cdef": 101, "cdot": 452, "cdoubl": 9, "ceil": [6, 35, 133, 140, 141, 424, 427, 466], "center": [114, 115, 116, 117, 121, 122, 129], "central": [155, 385, 386], "certain": [98, 220], "ch": 10, "chain": [95, 96, 100, 101], "chang": [48, 73, 81, 96, 98, 100, 110, 237, 238, 299, 312, 336, 341, 344, 353, 354, 360, 361, 362, 414, 421, 426, 468, 487], "char": 98, "charact": [98, 147], "check": [16, 21, 39, 40, 41, 63, 118, 171, 178, 186, 199, 202], "check_valid": 383, "chi": [369, 385], "chisquar": 6, "choic": [6, 66, 96, 113, 114, 116, 119, 120, 121, 125, 126, 128, 130, 190, 192, 300], "choicelist": 431, "choleski": 6, "choos": [6, 20, 26, 28, 45, 49, 96, 101, 431, 473, 483], "chosen": [34, 159, 467, 473], "circ": 491, "circl": [201, 456], "clamp": [360, 448, 449], "clariti": 131, "class": [3, 96, 98, 134, 146, 147, 148, 150, 166, 207, 365, 393, 457, 487], "classic": 100, "clear": [98, 483], "clip": [6, 96, 360, 448, 449, 483], "close": [13, 14, 20, 24, 25, 26, 28, 45, 47, 48, 49, 96, 100, 108, 165, 206, 299, 365, 393, 415, 416, 424, 427, 456], "closer": 466, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 45, 78, 191, 435, 450, 456], "code": [43, 98, 180], "coeffici": [194, 202, 205], "coerc": [43, 146, 147, 148, 149, 150, 207], "coin": 367, "col": 166, "collaps": [96, 312, 467], "column": [6, 39, 40, 41, 42, 44, 47, 48, 68, 69, 83, 84, 91, 96, 97, 111, 131, 137, 138, 155, 161, 163, 189, 190, 194, 197, 200, 203, 299, 414, 428, 443, 457, 459, 463, 469, 472], "column_stack": [6, 69, 97, 161, 428, 443, 472], "com": 4, "combin": [0, 98, 108, 116, 121, 126, 130, 155], "combinatori": 101, "come": 467, "comma": [98, 100], "command": 4, "common": [119, 120, 121, 346, 452], "common_typ": 6, "compani": [367, 384], "compar": [17, 37, 104, 142, 143, 160, 169, 223, 229], "compare_chararrai": 6, "comparison": [2, 104, 156, 157, 184, 185, 347, 476, 487], "compat": [3, 10, 16, 21, 48, 55, 96, 219, 224, 239, 240, 241, 243, 245, 299, 418, 421, 444, 470, 487], "compil": [4, 98, 154], "complement": 468, "complementari": [141, 468], "complet": [3, 4, 101, 147, 148, 200, 426, 483], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 37, 45, 46, 49, 50, 51, 63, 82, 95, 96, 98, 101, 105, 112, 113, 114, 116, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 139, 142, 143, 165, 170, 171, 177, 178, 189, 190, 191, 192, 200, 201, 203, 219, 221, 223, 229, 234, 243, 245, 302, 303, 358, 415, 416, 418, 439, 444, 467, 470, 471, 483, 487], "complex128": [9, 55, 422], "complex64": [9, 55, 96, 139, 332], "compliant": 96, "complic": [100, 491], "compon": [10, 37, 117, 122, 129, 132, 165, 234, 415], "compos": 74, "composit": [84, 182, 446, 456], "compress": [6, 110, 431, 448, 483], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 45, 46, 49, 50, 51, 55, 57, 58, 59, 60, 64, 70, 71, 77, 78, 82, 83, 84, 92, 93, 100, 106, 107, 108, 109, 112, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 140, 155, 156, 157, 158, 159, 160, 165, 166, 168, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 214, 215, 216, 217, 219, 221, 224, 225, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 344, 354, 358, 415, 417, 418, 419, 424, 427, 429, 433, 434, 435, 436, 440, 444, 446, 450, 451, 452, 456, 459, 463, 470], "compute_uv": [187, 203], "concat": 69, "concaten": [6, 68, 97, 161, 428, 443, 449, 472], "concept": [23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475, 483], "cond": [6, 193], "condit": [34, 48, 95, 96, 110, 187, 193, 197, 299, 346, 353, 360, 362, 431, 473], "condlist": 431, "confus": 144, "conj": [6, 71, 96, 118, 165, 186, 189, 358], "conjug": [6, 10, 70, 95, 96, 124, 127, 165, 186, 189, 190, 191, 192, 221, 302, 358, 471], "consecut": [92, 99, 155], "conserv": 226, "consid": [17, 23, 36, 37, 39, 40, 42, 44, 101, 129, 153, 169, 172, 190, 192, 196, 206, 218, 221, 365, 393, 467], "consist": [37, 38, 99, 113, 114, 116, 119, 120, 121, 125, 126, 128, 130, 147, 160, 205, 206, 449, 452], "constant": [9, 98, 155], "constraint": 55, "construct": [39, 40, 41, 66, 87, 90, 91, 96, 98, 111, 146, 147, 148, 149, 150, 163, 181, 207, 227, 300, 348, 431, 453, 454, 473, 476], "constructor": 483, "consum": [96, 319], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 41, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 74, 75, 77, 78, 81, 82, 91, 94, 96, 98, 104, 106, 107, 109, 114, 115, 116, 119, 124, 127, 129, 135, 139, 140, 141, 142, 143, 144, 145, 150, 154, 155, 156, 157, 159, 160, 162, 165, 166, 168, 183, 184, 185, 190, 200, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 224, 229, 230, 233, 235, 236, 239, 240, 241, 243, 245, 328, 344, 346, 347, 354, 355, 356, 358, 365, 415, 417, 418, 419, 423, 424, 427, 429, 433, 434, 435, 436, 440, 441, 444, 445, 450, 451, 455, 459, 460, 463, 464, 465, 466, 470, 483], "content": [42, 96, 402], "context": 10, "contigu": [39, 40, 41, 42, 44, 95, 96, 100, 197, 325, 414, 421], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 365, 397], "contourf": 226, "contract": [100, 101, 452], "contrast": [100, 360], "contribut": [10, 55, 159, 160], "control": [4, 48, 63, 69, 75, 96, 100, 161, 221, 299, 428, 443, 472], "conveni": [96, 341, 365], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 95, 100, 101, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 167, 205, 221, 351, 452], "convers": [48, 96, 100, 299, 476], "convert": [22, 31, 32, 36, 39, 40, 41, 42, 43, 44, 47, 52, 53, 54, 73, 85, 86, 87, 90, 98, 100, 101, 108, 151, 152, 153, 171, 178, 206, 218, 363, 364, 468, 469], "convolut": [10, 72, 76], "convolv": [6, 76], "coolei": 10, "coordin": [79, 148, 155, 166, 181, 226], "copi": [6, 22, 23, 33, 36, 37, 39, 40, 41, 42, 43, 44, 48, 52, 53, 54, 75, 87, 88, 90, 91, 96, 98, 102, 103, 110, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 226, 227, 234, 253, 299, 312, 314, 322, 328, 331, 348, 349, 350, 352, 353, 354, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 421, 430, 438, 442, 457, 458, 459, 462, 463, 469, 474, 475, 483], "copysign": [6, 344, 354], "copyto": [6, 96, 110, 304, 353], "core": [3, 98, 100, 483], "corner": [114, 116, 120, 121], "corrcoef": [6, 80], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 69, 70, 71, 74, 77, 78, 85, 86, 94, 104, 106, 107, 109, 112, 118, 124, 126, 133, 139, 140, 141, 142, 143, 144, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 229, 230, 233, 344, 345, 347, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 427, 429, 433, 434, 435, 436, 440, 441, 443, 445, 450, 451, 465, 466], "correctli": [20, 26, 28, 31, 32, 45, 49, 79, 198, 222, 228, 235, 236, 242, 244, 346, 357, 446], "correl": [6, 487], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 48, 67, 69, 73, 85, 86, 87, 88, 90, 91, 96, 102, 103, 111, 114, 115, 116, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 163, 166, 181, 189, 190, 206, 207, 218, 220, 221, 227, 299, 304, 308, 348, 349, 350, 363, 364, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 425, 431, 432, 444, 452, 455, 456, 457, 459, 463, 469, 470, 474, 475, 483], "correspondingli": 10, "cosh": [6, 14, 25, 77, 436, 451], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 435, 436, 450, 451], "cost": [100, 101], "costli": 101, "could": [96, 118, 124, 126, 333], "count": [16, 21, 56, 79, 93, 98, 101, 136, 146, 147, 149, 150, 155, 159, 160, 346, 357, 367, 437, 446, 467, 476, 487], "count_nonzero": [6, 346], "counterpart": [10, 118, 124, 126, 483], "cov": [6, 383], "covari": 80, "cover": [459, 463, 487], "cpu": [4, 23, 36, 39, 40, 41, 42, 44, 73, 76, 80, 87, 90, 102, 103, 105, 111, 115, 129, 146, 147, 148, 149, 151, 152, 153, 163, 206, 207, 218, 225, 227, 231, 242, 348, 349, 350, 457, 469, 474, 475], "creat": [3, 4, 23, 36, 38, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 89, 90, 91, 96, 98, 101, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 234, 299, 304, 348, 349, 350, 361, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 454, 457, 459, 460, 463, 464, 469, 474, 475, 483, 487], "creation": [98, 101, 476, 483, 487, 491], "crop": [113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130], "cross": [6, 76, 181], "csingl": 9, "ct": 10, "cube": [64, 139, 440], "cubic": 101, "cumprod": [6, 96, 237, 483], "cumproduct": 6, "cumsum": [6, 92, 96, 238, 446, 456, 483], "cumul": [82, 83, 84, 92, 96, 237, 238, 305, 306, 446, 456], "cupi": [2, 476], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 74, 77, 78, 85, 86, 94, 96, 98, 101, 106, 107, 109, 139, 140, 141, 142, 143, 144, 147, 158, 160, 162, 163, 168, 183, 209, 210, 211, 212, 213, 223, 229, 230, 231, 233, 331, 344, 345, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 445, 450, 451, 465, 466], "curv": 456, "custom": 483, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 194], "cutoff": 199, "cycl": [115, 129, 181], "cyclic": 360, "cython": 4, "d": [0, 16, 21, 23, 55, 68, 69, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 111, 115, 117, 122, 129, 131, 135, 137, 138, 150, 161, 163, 167, 181, 188, 190, 191, 197, 198, 201, 221, 226, 237, 238, 244, 312, 346, 355, 356, 357, 360, 370, 414, 421, 428, 430, 432, 443, 446, 448, 452, 453, 454, 461, 467, 469, 472, 483], "d0": [365, 392, 394], "d1": [365, 394], "d3": 88, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 90, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 118, 124, 126, 132, 133, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 178, 183, 184, 185, 194, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 245, 299, 328, 341, 343, 344, 345, 347, 349, 350, 353, 354, 355, 356, 358, 360, 361, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 449, 450, 451, 454, 457, 465, 466, 470, 472, 473, 474, 475, 476, 487], "datatyp": [98, 196], "date": 4, "datetim": 98, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [80, 96, 243, 245, 335, 342, 444, 470], "decai": 378, "decim": [35, 96, 132, 133, 329, 424, 427], "decomposit": [186, 193, 196, 199, 203, 487], "decompress": 207, "decreas": [93, 456], "decreasingli": [10, 114, 116, 120, 121], "deem": 145, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 190, 192, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 312, 344, 345, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 360, 363, 364, 365, 369, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 406, 409, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 483], "default_rng": 6, "defg": 101, "defici": 196, "defin": [10, 29, 50, 81, 98, 103, 113, 142, 143, 152, 158, 159, 160, 223, 229, 234, 350, 354, 416, 475, 483], "definit": [81, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 140, 186, 456], "deg": [20, 364], "deg2rad": [6, 363, 364, 468], "degre": [6, 20, 85, 243, 245, 363, 364, 407, 444, 468, 470, 491], "del": 491, "delet": [6, 22], "delta": [10, 243, 245, 444, 468, 470], "demonstr": [0, 4, 98], "dens": [166, 181, 227], "densiti": 159, "depend": [4, 34, 91, 112, 118, 124, 126, 190, 194, 200, 202, 203, 206, 242, 244, 431, 473], "deprec": 6, "deprecate_with_doc": 6, "depth": [68, 69, 97, 161, 428, 443, 472], "deriv": 155, "descend": 203, "descr": 98, "describ": [82, 98, 219, 418, 487], "descript": [82, 98, 119, 121, 159, 219, 418, 483], "design": 10, "desir": [23, 36, 39, 40, 42, 44, 47, 62, 102, 103, 111, 119, 120, 121, 151, 152, 153, 163, 206, 218, 349, 350, 453, 457, 474, 475], "destin": [69, 161, 232, 360, 361, 428, 443, 449, 472], "destruct": 491, "det": [6, 201], "detail": [35, 114, 116, 120, 121, 125, 126, 128, 130, 145, 427, 459, 460, 463, 464, 467, 483], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 57, 59, 60, 64, 74, 77, 78, 85, 86, 94, 106, 107, 109, 141, 142, 143, 144, 147, 148, 150, 162, 183, 188, 194, 200, 201, 208, 209, 210, 211, 212, 213, 221, 223, 229, 230, 233, 345, 355, 356, 363, 364, 417, 419, 423, 429, 431, 433, 435, 436, 440, 441, 445, 450, 451, 454, 465, 466], "devel": 4, "develop": [3, 4], "deviat": [96, 224, 240, 243, 245, 335, 365, 380, 387, 444, 470], "devic": [0, 2, 3, 23, 36, 39, 40, 41, 42, 43, 44, 48, 55, 73, 82, 87, 88, 90, 96, 100, 102, 103, 111, 112, 115, 129, 133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 219, 220, 221, 224, 227, 240, 243, 245, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 418, 442, 444, 457, 459, 463, 469, 470, 474, 475], "df": [369, 385, 407, 408], "dfden": [373, 386], "dfnum": [373, 386], "dft": [10, 113, 118, 119, 123, 124, 127], "di": [88, 89], "diag": [6, 90, 91, 100, 111, 137, 138, 163, 189, 191, 203, 431, 454], "diag_indic": [6, 89, 131], "diag_indices_from": [6, 88, 131], "diagflat": [6, 87, 91, 454], "diagon": [6, 87, 88, 89, 90, 96, 100, 111, 131, 163, 186, 190, 191, 192, 220, 340, 431, 454, 457, 458, 459, 460, 462, 463, 464, 483], "dice": 382, "dictionari": 98, "diff": [6, 84, 99, 155, 159], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 44, 55, 73, 82, 84, 87, 90, 92, 96, 98, 99, 102, 103, 111, 114, 115, 119, 120, 122, 125, 128, 129, 132, 137, 138, 139, 146, 147, 148, 149, 151, 152, 153, 155, 163, 169, 192, 206, 207, 218, 219, 221, 227, 304, 348, 349, 350, 353, 355, 356, 361, 418, 445, 449, 457, 459, 463, 468, 469, 474, 475, 487], "digit": [6, 10, 132, 159], "dim": 17, "dimens": [16, 21, 22, 31, 32, 36, 52, 53, 54, 55, 68, 69, 75, 79, 80, 81, 88, 91, 92, 96, 98, 108, 120, 121, 133, 137, 138, 155, 161, 166, 167, 181, 196, 198, 200, 219, 222, 224, 226, 227, 228, 232, 235, 236, 239, 240, 241, 242, 243, 244, 245, 312, 320, 331, 343, 346, 348, 357, 361, 365, 395, 397, 398, 400, 418, 421, 432, 442, 443, 444, 446, 447, 448, 449, 453, 454, 459, 460, 463, 464, 467, 470, 483, 487], "dimension": [2, 4, 33, 72, 76, 79, 82, 88, 89, 90, 91, 92, 93, 96, 99, 100, 113, 114, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 146, 147, 149, 155, 166, 181, 194, 200, 204, 205, 219, 222, 226, 227, 228, 235, 236, 239, 241, 243, 245, 334, 343, 348, 351, 357, 418, 438, 444, 446, 448, 453, 456, 467, 470, 471, 476], "direct": [10, 81, 92, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 137, 138, 155, 345], "directli": [98, 148, 166, 218, 346, 449], "directori": 154, "dirichlet": 6, "discard": 466, "discont": 468, "discontinu": 468, "discret": [3, 10, 72, 76, 84, 92, 99, 113, 114, 115, 116, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 155, 365, 476], "disp": 6, "dispers": 410, "displac": [96, 336], "distanc": 155, "distinct": [142, 143, 223, 229], "distinguish": 98, "distribut": [3, 4, 218, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 487], "divid": [6, 97, 141, 144, 230, 419, 465], "divis": [94, 141, 144, 230, 355, 356, 419, 465, 466], "divisor": [243, 245, 444, 470], "divmod": [6, 483], "dlpack": 145, "dmlc": 145, "dn": [365, 392, 394], "do": [3, 4, 98, 220, 367, 426, 456], "docstr": 483, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483], "doe": [22, 23, 63, 100, 110, 112, 127, 142, 143, 145, 200, 234, 237, 238, 353, 448], "domain": [10, 118, 123], "done": [3, 48, 96, 100, 205, 299, 467, 468], "dot": [6, 96, 100, 101, 167, 186, 191, 193, 197, 199, 200, 202, 203, 204, 205, 221, 452, 471], "doubl": [9, 378, 452], "down": 138, "dp": [94, 188, 190, 201, 202, 355, 356, 421, 422, 445, 465], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 235, 236, 239, 241, 242, 299, 304, 348, 349, 350, 359, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "dpnp": [0, 2, 3, 4, 10, 476, 483, 487, 488, 491], "dpnp_arrai": [23, 36, 39, 40, 41, 42, 44, 48, 73, 87, 88, 90, 102, 103, 111, 115, 129, 132, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 164, 166, 206, 207, 218, 220, 227, 246, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475, 476], "dpnp_iface_arraycr": [227, 348], "draw": [365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "drawn": [365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 390, 391, 393, 396, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 431], "drill": [367, 384], "driver": 2, "drop": [3, 98], "dsplit": [6, 69, 97], "dst": 75, "dstack": [6, 68, 69, 161, 428, 443, 472], "dt": [98, 456], "dt2": 98, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 57, 58, 59, 60, 63, 64, 65, 69, 70, 71, 74, 77, 78, 80, 82, 83, 84, 85, 86, 88, 94, 96, 100, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 175, 176, 183, 184, 185, 197, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 305, 306, 317, 323, 332, 335, 337, 340, 342, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 363, 364, 365, 387, 393, 409, 417, 418, 419, 422, 423, 424, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 448, 450, 451, 454, 457, 458, 462, 465, 466, 470, 472, 474, 475, 483], "due": [127, 491], "dump": 6, "dx": [155, 456], "dy": 155, "dz": 155, "e": [9, 10, 14, 25, 27, 46, 82, 83, 91, 98, 102, 103, 108, 111, 114, 118, 119, 120, 121, 124, 126, 127, 139, 147, 151, 152, 155, 163, 183, 189, 201, 204, 208, 349, 350, 365, 416, 420, 447, 457, 474, 475], "ea": 101, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 74, 77, 78, 83, 84, 88, 91, 93, 94, 96, 98, 101, 104, 106, 107, 109, 114, 116, 118, 120, 121, 124, 125, 126, 128, 130, 137, 138, 139, 140, 141, 144, 148, 155, 156, 157, 159, 160, 165, 168, 172, 173, 174, 181, 183, 184, 185, 189, 190, 191, 192, 194, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 230, 232, 233, 234, 329, 344, 346, 347, 354, 355, 356, 358, 361, 367, 384, 415, 417, 419, 420, 423, 424, 425, 427, 429, 433, 434, 435, 436, 440, 441, 443, 445, 449, 450, 451, 453, 456, 459, 460, 463, 464, 465, 466, 467, 483], "easier": 448, "easiest": 4, "easili": [0, 160], "edg": [67, 93, 159, 160], "edge_ord": 155, "ediff1d": [6, 92, 155], "effect": [101, 139, 142, 143, 223, 229, 355, 356, 468], "effici": [10, 113, 127, 147, 196, 199, 203], "efgh": 101, "eig": [6, 190, 191, 192], "eigenvalu": [189, 190, 191, 192, 487], "eigenvector": [189, 190, 191, 192], "eigh": [6, 189, 191, 192], "eigval": [6, 189, 190, 192], "eigvalsh": [6, 189, 190, 191], "einstein": [95, 100, 101, 167, 205, 221, 351, 452], "einsum": [6, 95, 101, 167, 205, 221, 351, 452], "einsum_path": [6, 100], "either": [37, 38, 44, 55, 82, 91, 98, 114, 116, 118, 120, 121, 124, 126, 128, 130, 131, 155, 167, 190, 192, 198, 200, 219, 235, 236, 239, 241, 242, 244, 418, 430, 431, 449, 456], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 41, 45, 46, 49, 50, 51, 55, 56, 57, 58, 59, 60, 64, 65, 67, 70, 71, 74, 75, 77, 78, 82, 83, 84, 89, 91, 92, 93, 94, 96, 98, 99, 101, 104, 106, 107, 109, 110, 111, 112, 114, 116, 120, 121, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 191, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 294, 295, 302, 303, 305, 306, 308, 309, 312, 314, 315, 317, 319, 321, 322, 327, 328, 329, 330, 332, 335, 336, 339, 342, 344, 345, 346, 347, 353, 354, 355, 356, 357, 358, 360, 362, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 458, 460, 462, 464, 465, 466, 467, 468, 470, 473, 483, 487, 491], "element_count": [96, 332, 437], "ellipsi": 100, "els": [0, 201, 251], "elsewher": [111, 163, 457, 473], "empti": [4, 6, 36, 96, 103, 114, 116, 120, 121, 125, 126, 128, 130, 147, 151, 152, 194, 309, 349, 350, 353, 474, 475], "empty_lik": [6, 36, 102, 152, 350, 475], "enabl": [131, 196, 199, 203], "encount": [237, 238, 239, 241, 431], "end": [22, 23, 91, 98, 99, 101, 119, 153, 206, 218], "end_tim": 0, "endian": 98, "endpoint": [23, 153, 206, 218, 456], "engin": 401, "enough": 159, "entir": [55, 82, 118, 159, 160, 219, 224, 239, 240, 241, 243, 245, 418, 444, 470], "entri": [96, 98, 102, 110, 118, 124, 126, 131, 136, 137, 138, 334, 442], "enumer": 145, "env": 4, "environ": 4, "ep": [132, 196, 345, 416], "epsilon": [196, 416], "epsneg": 132, "equal": [6, 16, 17, 21, 37, 38, 55, 69, 76, 80, 84, 96, 111, 153, 155, 156, 157, 159, 160, 161, 169, 171, 178, 180, 183, 184, 185, 195, 199, 200, 205, 206, 218, 230, 322, 347, 365, 375, 409, 419, 423, 424, 427, 428, 433, 442, 443, 457, 459, 463, 472], "equal_nan": [17, 37, 169, 467], "equat": [194, 202, 204, 205, 487], "equiv": [48, 63, 69, 75, 96, 100, 161, 195, 221, 299, 428, 443, 472], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 55, 73, 81, 82, 85, 86, 94, 95, 96, 97, 101, 108, 110, 135, 142, 143, 144, 181, 204, 219, 230, 233, 253, 294, 295, 307, 320, 328, 331, 341, 343, 346, 351, 354, 363, 364, 365, 393, 418, 419, 421, 427, 432, 438, 445, 446, 448, 452, 455, 465, 467, 483, 491], "error": [82, 100, 105, 118, 123, 189, 219, 418, 442, 476, 483], "essenti": 4, "estim": [80, 160, 367, 384, 456], "et": 10, "etc": [10, 36, 40, 98, 114, 116, 120, 121, 125, 126, 128, 130, 384], "euclidean": 194, "euler_gamma": 9, "evalu": [16, 17, 21, 96, 100, 101, 104, 171, 178, 205, 226, 294, 295, 351, 431, 452, 483], "even": [10, 98, 115, 117, 118, 119, 122, 123, 124, 126, 127, 129, 171, 178, 424, 427], "evenli": [23, 153, 206, 218, 424, 456], "event": 213, "everi": [126, 361, 449], "everywher": 124, "exact": [110, 197, 353], "exactli": [10, 47, 150, 365, 393, 431], "examin": 194, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 307, 309, 312, 313, 314, 320, 322, 326, 328, 331, 332, 333, 336, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 491], "exce": 213, "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 73, 74, 77, 78, 85, 86, 92, 93, 94, 95, 96, 102, 103, 104, 106, 107, 109, 111, 125, 126, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 161, 162, 163, 168, 172, 173, 174, 183, 184, 185, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 228, 229, 230, 233, 239, 240, 241, 242, 243, 244, 245, 299, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 363, 364, 417, 419, 420, 421, 423, 424, 429, 433, 434, 435, 436, 438, 440, 441, 444, 445, 446, 450, 451, 465, 466, 470, 474, 475], "exclud": [11, 12, 22, 206, 365, 409], "exclus": [365, 393], "execut": [3, 4, 39, 40, 41, 76, 80, 105, 148, 225, 231, 242, 368, 370, 371, 381, 386, 402, 491], "executor": 0, "exist": [10, 68, 69, 97, 98, 108, 145, 161, 421, 428, 443, 472, 487], "exp": [6, 10, 107, 109, 113, 201, 210, 212, 219], "exp2": [6, 106, 109], "expand": [92, 108], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 70, 71, 74, 77, 78, 79, 82, 83, 84, 85, 86, 94, 95, 98, 104, 106, 107, 109, 112, 124, 133, 139, 140, 141, 142, 143, 144, 156, 157, 158, 162, 165, 168, 169, 172, 173, 174, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 228, 229, 230, 233, 237, 238, 240, 242, 243, 244, 245, 344, 345, 347, 354, 355, 356, 357, 358, 363, 364, 415, 417, 418, 419, 423, 424, 427, 429, 433, 434, 435, 436, 440, 441, 444, 445, 446, 450, 451, 465, 466, 470, 473], "explain": [116, 121, 126, 130, 483], "explan": 98, "explicit": 100, "explicitli": [91, 114, 116, 120, 121, 125, 126, 128, 130], "exploit": [10, 127], "explor": [101, 367, 384], "expm1": [6, 106, 107, 210], "expon": [10, 106, 107, 109, 139, 195, 212, 213, 219, 355, 356, 391, 487], "exponenti": [6, 10, 101, 212, 213, 219, 378, 404], "expos": [146, 483], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 100, 101, 207, 491], "extend": [10, 98, 182, 483], "extens": [0, 1, 3, 4, 9, 154, 207, 476], "extobj": 221, "extra": [98, 124, 150], "extract": [6, 87, 90, 91, 100, 111, 135, 163, 166, 220, 353, 431, 448, 454], "extrema": 487, "ey": [6, 70, 71, 79, 96, 120, 121, 142, 143, 163, 167, 182, 193, 195, 196, 204, 205, 217, 223, 229, 432, 454], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 94, 96, 98, 100, 102, 103, 104, 106, 107, 109, 111, 112, 115, 127, 129, 133, 139, 140, 141, 142, 143, 144, 151, 152, 155, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 229, 230, 233, 299, 304, 312, 344, 345, 347, 349, 350, 354, 355, 356, 358, 363, 364, 386, 414, 417, 419, 421, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 461, 465, 466, 473, 474, 475], "f0": 98, "f1": 98, "f2": 98, "f4": 63, "f8": [63, 98], "f_contigu": [42, 44], "f_k": 10, "fab": [6, 11, 12], "fact": 191, "factor": [10, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 186, 200], "fail": [96, 331, 367], "fallback": [189, 191, 368, 370, 371, 381, 386, 402], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 36, 37, 38, 40, 42, 44, 48, 55, 57, 58, 60, 61, 62, 63, 73, 79, 80, 82, 84, 93, 96, 98, 100, 101, 103, 104, 110, 131, 145, 148, 152, 153, 156, 157, 159, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 196, 198, 199, 203, 206, 214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 228, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 251, 294, 295, 296, 297, 299, 316, 317, 318, 323, 335, 337, 342, 346, 347, 350, 357, 359, 418, 421, 431, 434, 444, 446, 467, 469, 470, 473, 475, 483], "famili": 10, "fanci": 448, "fashion": [213, 483], "fast": [10, 113, 114, 116, 120, 121, 126, 127, 130], "fastcopyandtranspos": 6, "faster": [10, 142, 143], "fastest": [96, 312, 414, 421], "fb": [101, 461], "featur": 98, "few": 131, "fft": [6, 476, 487], "fft2": [6, 113, 116, 120], "fftfreq": [6, 10, 113, 117, 122, 129], "fftn": [6, 113, 114, 121, 127, 130], "fftshift": [6, 10, 114, 116, 121, 122], "fh": 147, "field": [98, 226], "field1": 98, "file": [146, 147, 149, 150, 154, 207], "filenam": [147, 207], "fill": [6, 22, 36, 96, 102, 103, 131, 151, 152, 159, 160, 226, 234, 304, 349, 350, 457, 474, 475], "fill_diagon": 6, "fill_valu": [151, 152], "filt": 461, "filter": [10, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "final": [4, 10, 126, 127, 128, 130, 153, 218], "find": [34, 56, 93, 96, 112, 159, 196, 199, 203, 330, 345, 346, 420, 430, 438, 467, 487], "find_common_typ": 6, "fine": 4, "finfo": [345, 416], "finfo_object": 132, "finit": [41, 172, 173, 174, 175, 176, 234], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 50, 55, 57, 59, 60, 68, 69, 74, 81, 82, 91, 94, 95, 96, 98, 101, 104, 107, 114, 116, 118, 120, 121, 136, 139, 141, 142, 143, 144, 155, 156, 157, 159, 160, 162, 167, 169, 180, 182, 183, 184, 185, 197, 204, 207, 212, 213, 214, 216, 217, 220, 221, 222, 223, 226, 228, 229, 230, 233, 235, 236, 312, 347, 351, 353, 355, 356, 357, 414, 419, 421, 423, 425, 428, 430, 431, 438, 439, 441, 445, 446, 447, 449, 452, 454, 465, 467, 471, 472], "fit": [194, 420], "fix": [6, 35, 65, 91, 98, 140, 360, 424, 427, 466], "flag": [42, 44, 96, 98, 304], "flanneri": 10, "flat": [31, 32, 96, 99, 134, 312, 420], "flatnonzero": [6, 346], "flatten": [6, 22, 31, 32, 33, 69, 79, 83, 84, 87, 90, 91, 96, 99, 131, 135, 159, 160, 222, 228, 235, 236, 237, 238, 242, 244, 311, 325, 333, 346, 351, 361, 414, 420, 425, 438, 448, 449, 454, 467, 471], "flexibl": [95, 98, 147, 197], "flip": [6, 58, 91, 131, 137, 138, 168, 367], "fliplr": [6, 91, 131, 136, 138], "flipud": [6, 91, 131, 136, 137], "float": [11, 12, 20, 23, 29, 39, 40, 43, 50, 55, 63, 74, 82, 84, 98, 102, 103, 107, 111, 112, 115, 129, 132, 133, 139, 146, 147, 148, 149, 150, 151, 152, 155, 159, 160, 163, 165, 194, 195, 196, 198, 199, 206, 207, 212, 213, 218, 219, 222, 224, 228, 234, 240, 243, 245, 345, 349, 350, 355, 356, 365, 369, 394, 395, 397, 398, 400, 403, 404, 406, 409, 415, 416, 417, 418, 429, 444, 457, 468, 470, 474, 475, 483, 487], "float16": [9, 139], "float32": [0, 9, 41, 43, 48, 63, 83, 96, 98, 100, 139, 299, 345, 365, 387, 392, 394, 395, 397, 398, 400, 406, 409, 422], "float64": [0, 9, 43, 48, 55, 63, 84, 96, 98, 100, 299, 365, 366, 372, 373, 374, 376, 378, 379, 380, 387, 388, 391, 392, 394, 395, 397, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 422], "float_pow": [6, 355, 356], "floor": [6, 35, 65, 133, 141, 230, 419, 424, 427, 466], "floor_divid": [6, 230, 419], "flop": 101, "flush": 147, "fmax": [6, 143, 222, 223, 229, 239, 355, 356], "fmin": [6, 142, 223, 228, 229, 241, 355, 356], "fmod": [6, 230, 355, 356, 419], "fn": 148, "fname": 207, "follow": [4, 10, 55, 98, 108, 124, 132, 145, 164, 190, 192, 199, 452, 483, 487], "forc": [98, 100], "forg": 4, "form": [10, 22, 36, 39, 40, 41, 42, 43, 44, 68, 73, 87, 90, 96, 97, 100, 101, 120, 121, 124, 151, 152, 153, 171, 178, 181, 206, 218, 341, 428, 469, 472], "format": [98, 145, 147, 150, 487], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 45, 46, 49, 51, 361, 449], "forth": 452, "fortran": [44, 48, 96, 299, 312, 414, 421], "forward": [10, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 155], "found": [4, 430, 483], "four": [365, 394], "fourier": [10, 113, 114, 115, 116, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 476], "fourth": 114, "frac": [10, 456], "fraction": [231, 466], "free": [96, 328], "freedom": [243, 245, 407, 444, 470], "freq": [115, 117, 122, 129], "freq_spectrum": 118, "frequenc": [10, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129], "freshli": [175, 176], "frexp": 6, "fro": [187, 198], "frobeniu": 187, "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 61, 63, 66, 69, 73, 75, 82, 85, 86, 87, 88, 90, 91, 96, 97, 98, 100, 102, 103, 107, 110, 111, 115, 119, 128, 129, 130, 136, 139, 145, 146, 147, 148, 149, 150, 151, 152, 155, 159, 161, 163, 166, 181, 189, 191, 192, 196, 197, 207, 219, 220, 226, 227, 300, 304, 334, 339, 348, 349, 350, 353, 357, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 418, 421, 422, 428, 430, 431, 441, 442, 443, 446, 448, 449, 454, 457, 459, 461, 463, 464, 467, 468, 469, 472, 473, 474, 475, 487], "from_": 63, "from_dlpack": 6, "frombuff": [6, 147, 149, 150, 207], "fromfil": [6, 146, 149, 150], "fromfunct": [6, 39, 40, 41], "fromit": [6, 39, 40, 41, 146, 147, 150], "frompyfunc": 6, "fromregex": [6, 207], "fromstr": [6, 146, 147, 149, 207], "front": 461, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475], "full_lik": [6, 36, 103, 151, 350, 475], "full_matric": 203, "fulli": 98, "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 73, 76, 80, 82, 85, 86, 91, 94, 96, 100, 102, 103, 105, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 130, 131, 139, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 159, 160, 163, 181, 189, 191, 197, 207, 210, 212, 213, 219, 220, 225, 226, 230, 231, 242, 294, 295, 304, 307, 328, 331, 341, 349, 350, 355, 356, 361, 363, 364, 365, 368, 370, 371, 381, 386, 402, 418, 419, 427, 428, 433, 444, 448, 449, 453, 459, 460, 463, 464, 465, 470, 472, 473, 474, 475, 476, 483, 487], "fundament": [10, 98], "further": [459, 463], "futur": [98, 160], "fweight": 80, "g": [4, 10, 98, 102, 103, 111, 151, 152, 163, 349, 350, 365, 457, 474, 475, 491], "g2cfe377f5f7": 6, "gamma": [6, 405], "gauss": 10, "gaussian": [365, 387, 411], "gc": 101, "gcd": 6, "gen": 100, "gender": 98, "gener": [10, 33, 55, 98, 119, 124, 127, 130, 153, 167, 189, 190, 191, 192, 199, 200, 207, 218, 365, 367, 370, 401, 456, 459, 463, 469, 483, 487], "genfromtxt": [6, 207], "geometr": [6, 153, 206], "geomspac": [6, 206, 218], "get": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 89, 90, 96, 102, 103, 111, 115, 118, 124, 126, 129, 139, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 331, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 449, 457, 459, 460, 463, 464, 469, 474, 475, 483], "get_arrai": 96, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 365], "get_sycl_devic": 365, "get_sycl_queu": 365, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 98], "getter": [96, 331], "gid": 160, "github": 145, "give": [10, 90, 96, 139, 160, 341, 421, 432, 437, 467], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 39, 40, 42, 44, 48, 55, 68, 73, 79, 80, 83, 84, 92, 95, 96, 97, 98, 99, 101, 102, 103, 110, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 142, 143, 151, 152, 153, 155, 159, 160, 169, 193, 206, 218, 220, 222, 223, 226, 228, 229, 237, 238, 239, 241, 242, 243, 244, 245, 296, 297, 299, 305, 306, 318, 323, 324, 329, 332, 335, 337, 342, 346, 349, 350, 353, 357, 359, 360, 365, 370, 392, 409, 418, 420, 424, 425, 426, 428, 430, 431, 437, 444, 446, 448, 452, 453, 456, 457, 467, 470, 472, 474, 475, 483], "global": 0, "good": 377, "gpu": [0, 3, 4, 23, 36, 39, 40, 41, 42, 44, 73, 87, 90, 102, 103, 111, 115, 129, 146, 147, 148, 149, 151, 152, 153, 163, 206, 207, 218, 227, 348, 349, 350, 457, 469, 474, 475], "grade": 98, "gradient": [6, 92, 99, 194], "graphic": 4, "great": 10, "greater": [6, 96, 104, 141, 157, 183, 184, 185, 196, 200, 322, 347, 423, 431, 433, 442, 468], "greater_equ": [6, 104, 156, 184, 185, 347], "greatest": 141, "greedi": [100, 101], "grid": [39, 40, 41, 148, 166, 226, 227, 348], "group": [34, 346], "guarante": [98, 421], "guid": [2, 3], "gumbel": 6, "gz": 207, "h": [154, 186, 200, 226], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 45, 46, 49, 51, 55, 82, 83, 84, 93, 98, 104, 108, 118, 123, 124, 148, 155, 156, 157, 161, 165, 170, 171, 177, 178, 184, 185, 191, 201, 203, 219, 224, 230, 237, 238, 240, 242, 243, 244, 245, 347, 357, 415, 416, 417, 418, 419, 420, 426, 429, 431, 442, 443, 444, 446, 447, 448, 453, 454, 470, 483], "had": [361, 449], "hadamard": 101, "half": [14, 25, 114, 116, 117, 118, 120, 121, 206, 365, 395, 397, 398, 400, 409, 447], "ham": 6, "han": 6, "hand": [81, 205], "handl": [23, 98, 112, 207, 346, 448, 449, 487], "happen": [48, 55, 96, 299, 367, 456], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 98, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 74, 77, 78, 81, 82, 83, 84, 85, 86, 94, 95, 97, 98, 104, 106, 107, 109, 112, 120, 121, 130, 132, 133, 139, 140, 141, 142, 143, 144, 156, 157, 158, 161, 162, 165, 168, 169, 172, 173, 174, 175, 176, 183, 184, 185, 194, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 223, 224, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 344, 345, 347, 353, 354, 355, 356, 357, 358, 363, 364, 384, 415, 417, 418, 419, 420, 423, 424, 427, 428, 429, 433, 434, 435, 436, 440, 441, 443, 444, 445, 446, 450, 451, 453, 465, 466, 468, 470, 472, 483], "hd": 101, "header": 154, "heavisid": 6, "hello": 98, "help": 491, "helper": 487, "henc": [108, 155], "here": [6, 33, 98, 100, 118, 123, 124, 438, 459, 463], "hermit": [190, 192], "hermitian": [118, 123, 124, 126, 127, 186, 189, 190, 191, 192, 196, 199, 203, 487], "hfft": [6, 10, 123], "hierarchi": 180, "high": [124, 365, 393, 396, 409], "higher": [100, 471], "highest": 113, "highli": 147, "hist": [159, 403], "hist_0": 160, "hist_1": 160, "histogram": [6, 93, 160, 430, 487], "histogram2d": 6, "histogram_bin_edg": [6, 159], "histogramdd": [6, 159], "hold": [67, 83, 84, 159, 198, 237, 238, 242, 244, 454], "homogen": 98, "horizont": [68, 69, 91, 97, 131, 136, 161, 428, 443, 472], "host": [3, 4, 23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 457, 459, 463, 469, 474, 475], "household": 200, "how": [0, 4, 98, 124, 127, 155, 360, 448, 449, 459, 463], "howev": [96, 333, 448], "hsplit": [6, 69], "hstack": [6, 68, 69, 97, 428, 443, 472], "http": [4, 145], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 435, 436, 450, 451, 487], "hypergeometr": 6, "hypot": [6, 418], "hypotenus": [162, 418], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 299, 304, 322, 328, 331, 333, 336, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483, 491], "i0": 6, "i1": [96, 98, 336], "i2": [96, 98, 336], "i3": [96, 336], "i4": [63, 98], "i7": 100, "i8": [63, 98], "icpx": 4, "icx": 4, "id": [16, 21, 96, 314], "ident": [3, 6, 16, 21, 41, 82, 98, 111, 122, 131, 202, 404], "identifi": 98, "ieee": 132, "ifft": [6, 113, 120, 121, 123, 124, 129], "ifft2": [6, 114, 119, 121], "ifftn": [6, 116, 119, 120], "ifftshift": [6, 10, 117, 121], "ignor": [31, 32, 81, 98, 142, 143, 150, 159, 160, 222, 223, 224, 228, 229, 235, 236, 239, 240, 241, 243, 245, 444, 470], "ihfft": [6, 118], "ii": [100, 388], "iinfo": 382, "iinfo_object": 164, "ij": [100, 101, 226], "ijk": 100, "il": 101, "il1": 459, "il2": 459, "illustr": 191, "ilm": 100, "imag": [6, 10, 20, 37, 96, 415, 416, 483], "imaginari": [20, 37, 96, 124, 142, 143, 165, 170, 171, 177, 178, 189, 190, 192, 195, 223, 229, 234, 313, 415, 416, 439, 467], "implement": [3, 6, 43, 113, 145], "impli": 98, "implicit": 100, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 307, 312, 313, 320, 322, 326, 331, 332, 333, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 390, 399, 403, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "improv": 100, "in1d": 6, "in_array1": 105, "includ": [4, 10, 16, 21, 22, 23, 36, 39, 40, 41, 42, 43, 44, 55, 73, 82, 87, 90, 93, 100, 101, 112, 151, 152, 153, 154, 159, 160, 171, 178, 199, 206, 218, 219, 224, 239, 240, 241, 243, 245, 365, 409, 418, 444, 469, 470], "include_initi": 82, "inclus": [365, 393, 396, 431], "increas": [93, 98, 108, 119, 124, 159, 469], "ind": [33, 93, 204, 360, 361, 459, 460, 463, 464], "index": [22, 31, 32, 33, 34, 66, 96, 98, 101, 111, 114, 120, 128, 135, 145, 166, 181, 226, 235, 236, 300, 312, 336, 346, 360, 361, 414, 421, 430, 431, 448, 449, 459, 463, 467, 473, 476, 487], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 82, 88, 89, 93, 96, 98, 100, 101, 110, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 135, 145, 148, 159, 204, 205, 220, 221, 227, 235, 236, 296, 297, 298, 321, 324, 330, 339, 346, 360, 361, 421, 430, 433, 434, 438, 448, 449, 455, 459, 460, 463, 464, 467, 473], "indirect": [33, 438], "individu": 375, "inequ": 347, "inexact": [139, 234, 242, 244], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 39, 40, 41, 45, 50, 51, 74, 94, 169, 172, 173, 174, 175, 176, 187, 198, 208, 209, 211, 223, 229, 234, 235, 236, 239, 241, 244, 358, 440, 465], "infer": [41, 82, 219, 418, 421], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 41, 45, 46, 49, 51, 141, 172, 173, 174, 175, 176, 230, 234, 239, 241, 244, 419, 466, 487], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 187], "infj": [27, 28, 46, 49], "info": 6, "inform": [0, 42, 44, 96, 98, 118, 124, 126, 132, 310, 483, 487], "initi": [18, 19, 82, 96, 102, 150, 222, 228, 239, 241, 242, 244, 316, 318, 323, 337, 357, 365, 446], "inner": [6, 81, 100, 101, 197, 221, 351], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 196, 198, 200, 201, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 312, 320, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 387, 393, 409, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 465, 466, 467, 468, 469, 470, 471, 474, 475], "insert": [6, 22, 31, 32, 91, 93, 96, 100, 108, 153, 159, 206, 218, 235, 236, 239, 241, 330, 361, 430, 431, 487], "instal": 2, "instanc": [3, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 118, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 163, 166, 206, 207, 218, 220, 221, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "instead": [34, 48, 91, 95, 96, 100, 108, 140, 153, 159, 160, 166, 197, 206, 213, 218, 222, 228, 299, 346, 357, 446, 483], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 43, 55, 62, 69, 79, 81, 82, 83, 84, 87, 88, 90, 91, 92, 96, 98, 102, 103, 104, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 163, 164, 166, 194, 195, 198, 204, 205, 206, 218, 219, 220, 222, 224, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 320, 332, 341, 343, 349, 350, 352, 357, 360, 361, 365, 393, 396, 418, 420, 421, 425, 426, 427, 437, 438, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 467, 468, 469, 470, 474, 475, 483], "int16": 98, "int32": [0, 9, 43, 63, 98, 102, 103, 111, 146, 149, 151, 152, 163, 207, 242, 244, 349, 350, 365, 367, 375, 377, 382, 384, 390, 393, 409, 422, 446, 457, 474, 475], "int64": [0, 9, 63, 98, 242, 244, 422], "int8": [98, 357], "int_": 9, "int_0": 456, "int_t": 456, "intc": 9, "integ": [23, 35, 55, 56, 57, 58, 59, 60, 62, 65, 82, 83, 84, 93, 96, 98, 133, 136, 139, 140, 141, 145, 159, 164, 168, 181, 183, 195, 198, 204, 219, 222, 224, 228, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 333, 341, 355, 356, 357, 360, 365, 393, 396, 401, 418, 419, 420, 421, 423, 424, 425, 427, 430, 431, 432, 441, 444, 446, 448, 452, 454, 466, 467, 468, 470, 483], "integer_lik": 452, "integr": [3, 4, 55, 82, 84, 139, 159, 219, 224, 231, 240, 243, 245, 355, 356, 418, 444, 446, 456, 470], "intel": [3, 100], "intend": [96, 341], "intent": 139, "interchang": [96, 232, 338, 447], "interfac": [0, 146], "interior": 155, "intermedi": [83, 100, 101], "intern": 365, "interp": 6, "interpol": 124, "interpret": [2, 39, 40, 41, 47, 62, 73, 98, 118, 124, 126, 146, 181, 220, 346, 360, 483], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 45, 49, 93, 108, 153, 206, 218, 365, 393, 395, 397, 398, 400, 408, 409, 447], "intp": [242, 244], "intrins": 483, "introduc": 425, "introduct": 10, "introselect": [96, 322, 352], "inv": [6, 187, 199], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 193, 199, 204, 205, 210, 411, 435, 436, 450, 451, 467], "invert": [6, 58, 193, 199, 204], "invok": 483, "involv": 204, "io": [145, 207], "irfft": [6, 115, 118, 123, 125, 126, 127, 129], "irfft2": [6, 124, 126, 128], "irfftn": [6, 124, 125, 130], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 98, "isbuiltin": 98, "isclos": [6, 17], "iscomplex": [6, 171, 177], "iscomplexobj": [6, 170, 178], "isfinit": [6, 173, 174, 175, 176, 234, 239, 241, 244], "isfortran": 6, "isin": 6, "isinf": [6, 172, 174, 175, 176, 234], "isn": 98, "isnan": [6, 172, 173, 175, 176, 234, 237, 238, 239, 241, 242, 244], "isnat": [6, 174], "isneginf": [6, 172, 173, 174, 176, 234], "isposinf": [6, 172, 173, 174, 175, 234], "isreal": [6, 170, 178], "isrealobj": [6, 171, 177], "isscalar": 6, "issctyp": 6, "issu": 120, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 96, 146, 147, 149, 467, 476], "item_dtyp": 98, "item_hasobject": 98, "item_is_point": 98, "items": [96, 98], "itemset": 6, "iter": [6, 39, 40, 41, 96, 101, 134, 146, 147, 149, 150, 311, 312, 361, 449, 487], "its": [4, 6, 10, 11, 12, 16, 21, 33, 55, 87, 96, 118, 124, 126, 132, 159, 160, 163, 189, 190, 191, 192, 197, 199, 205, 224, 240, 243, 245, 341, 402, 414, 418, 421, 438, 444, 455, 456, 457, 470, 483], "itself": [48, 96, 98, 234, 299, 483], "iu": 220, "iu1": [220, 463], "iu2": 463, "ix_": 6, "ixgrid": 181, "j": [70, 71, 96, 100, 114, 116, 118, 119, 120, 121, 123, 124, 127, 128, 130, 139, 148, 165, 166, 182, 186, 189, 190, 211, 221, 234, 341, 351, 358, 361, 415, 439, 441, 449, 452], "j1": 182, "jame": 10, "ji": 100, "jil": 100, "jk": [100, 101], "jl": 101, "john": 10, "join": [68, 69, 97, 161, 428, 443, 472, 487], "jump": [85, 363], "just": [68, 91, 98, 114, 120, 125, 127, 128], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 87, 90, 94, 96, 100, 104, 106, 107, 109, 111, 112, 133, 139, 140, 141, 142, 143, 144, 156, 157, 158, 162, 165, 168, 172, 173, 174, 182, 183, 184, 185, 194, 200, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 229, 230, 233, 253, 299, 304, 344, 345, 347, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 452, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 473, 491], "kaiser": 6, "kappa": 410, "keep": [47, 48, 96, 299, 467], "keepdim": [16, 18, 19, 21, 31, 32, 55, 79, 96, 198, 219, 222, 224, 225, 228, 235, 236, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 316, 317, 318, 323, 335, 337, 342, 357, 359, 361, 418, 444, 446, 449, 470], "kei": [3, 33, 96, 98, 134, 258, 289, 438], "key2": 98, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 73, 74, 77, 78, 81, 85, 86, 87, 88, 90, 94, 96, 102, 103, 106, 107, 109, 111, 115, 129, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 158, 162, 163, 166, 168, 183, 207, 209, 210, 211, 212, 213, 220, 221, 223, 227, 229, 230, 231, 233, 234, 304, 344, 345, 348, 349, 350, 354, 355, 356, 358, 363, 364, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 417, 419, 423, 424, 429, 433, 434, 435, 436, 445, 450, 451, 457, 459, 463, 465, 466, 469, 473, 474, 475, 483], "ki": 100, "kind": [33, 48, 63, 69, 75, 82, 96, 98, 100, 132, 161, 197, 219, 221, 298, 299, 322, 333, 352, 418, 428, 438, 443, 472, 487], "kl": [10, 100, 101], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 147, 403], "kron": 6, "kroneck": 182, "kth": [96, 322, 352], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 74, 77, 78, 85, 86, 94, 96, 104, 106, 107, 109, 112, 133, 139, 140, 141, 142, 143, 144, 148, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 229, 230, 231, 233, 283, 301, 328, 344, 345, 347, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 465, 466], "l": [10, 98, 186, 190, 192], "la": [189, 191, 192], "label": 100, "laid": 44, "lam": 390, "lambda": 148, "lapack": [189, 191], "laplac": 6, "laptop": 4, "larg": [10, 85, 98, 159, 199, 234, 363, 468, 491], "larger": [100, 113, 114, 116, 119, 120, 121, 123, 125, 126, 127, 128, 130, 132, 454, 468, 483], "largest": [10, 101, 127, 132, 140, 164, 194, 230, 234, 419], "largest_singular_valu": 199, "last": [16, 21, 22, 33, 81, 91, 92, 96, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 136, 153, 155, 167, 197, 206, 218, 221, 312, 357, 414, 421, 425, 430, 438, 442, 446, 452, 468], "later": 491, "latest": [4, 145], "latter": [13, 24, 26, 27, 28, 30, 45, 46, 49, 51, 142, 143, 223, 229, 361, 449], "layout": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 94, 96, 100, 102, 103, 104, 106, 107, 109, 111, 112, 133, 139, 140, 141, 142, 143, 144, 151, 152, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 229, 230, 233, 304, 310, 344, 345, 347, 349, 350, 354, 355, 356, 358, 363, 364, 417, 419, 421, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 465, 466, 473, 474, 475, 476], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [119, 120, 121, 237, 238, 461], "learn": [3, 4, 213], "least": [52, 53, 54, 55, 89, 97, 98, 101, 108, 131, 137, 142, 143, 147, 171, 194, 200, 223, 229, 428, 472], "left": [10, 28, 31, 32, 35, 49, 79, 91, 93, 96, 137, 138, 183, 191, 198, 222, 228, 235, 236, 242, 244, 330, 357, 408, 423, 427, 430, 446, 456, 469], "left_shift": [6, 423], "leg": [162, 418], "legaci": 401, "len": [96, 98, 116, 117, 118, 121, 123, 124, 125, 126, 130, 166, 194, 222, 226, 227, 228, 275, 432, 469], "length": [23, 55, 83, 84, 92, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 150, 153, 155, 159, 161, 189, 203, 218, 222, 226, 228, 237, 238, 361, 368, 421, 422, 428, 430, 431, 432, 442, 449, 452, 453, 472], "less": [6, 83, 84, 104, 156, 157, 159, 160, 185, 194, 199, 237, 238, 242, 244, 347, 357, 431, 433, 446, 454], "less_equ": [6, 104, 156, 157, 184, 347], "let": 367, "level": [476, 483], "level_zero": [23, 36, 39, 40, 41, 42, 44, 73, 87, 90, 102, 103, 111, 115, 129, 146, 147, 148, 149, 151, 152, 153, 163, 206, 207, 218, 227, 348, 349, 350, 457, 469, 474, 475], "lexicograph": 467, "lexsort": [6, 33, 438], "li": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 425, 426], "librari": [3, 4, 483], "light": 10, "like": [23, 36, 39, 40, 42, 44, 48, 52, 53, 54, 68, 96, 97, 100, 102, 111, 126, 146, 147, 148, 149, 150, 151, 153, 163, 206, 207, 218, 220, 299, 312, 320, 343, 349, 361, 365, 409, 421, 449, 474, 487], "limit": [3, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 39, 40, 42, 44, 45, 46, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 73, 74, 76, 77, 78, 80, 85, 86, 94, 96, 98, 102, 103, 104, 105, 106, 107, 109, 111, 132, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 162, 163, 164, 168, 172, 173, 174, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 299, 301, 344, 345, 347, 349, 350, 352, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 390, 391, 393, 396, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 417, 419, 421, 423, 424, 429, 433, 434, 435, 436, 438, 440, 441, 444, 445, 446, 450, 451, 465, 466, 470, 474, 475], "linalg": [6, 95, 100, 101, 441], "line": [194, 207], "linear": [10, 72, 76, 194, 202, 218, 476, 487], "linspac": [0, 6, 23, 105, 153, 218, 226, 456, 468], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 44, 52, 53, 54, 61, 69, 73, 87, 90, 96, 97, 98, 100, 101, 117, 122, 131, 151, 152, 153, 155, 161, 171, 178, 206, 207, 218, 221, 341, 420, 422, 428, 431, 443, 452, 455, 469, 472, 473], "list_pickl": 98, "littl": 98, "ln": 218, "load": [6, 147, 207], "loadtxt": [6, 147], "loc": [365, 376, 378, 379, 387, 411], "local": 4, "locat": [0, 4, 154, 175, 176, 220, 351, 376, 378, 430], "log": [6, 109, 153, 201, 206, 209, 210, 211, 212, 218, 219, 380], "log10": [6, 208, 210, 211], "log1p": [6, 107, 109, 208, 209, 211], "log2": [6, 208, 209, 210, 213], "log_bas": 218, "logabsdet": 201, "logaddexp": [6, 82, 213, 219], "logaddexp2": [6, 212, 219], "logarithm": [82, 188, 201, 206, 208, 209, 210, 211, 212, 213, 219, 381, 487], "logic": [16, 21, 214, 215, 216, 217, 476, 487], "logical_and": [6, 57, 215, 216, 217], "logical_not": [6, 58, 168, 214, 216, 217], "logical_or": [6, 59, 214, 215, 217], "logical_xor": [6, 60, 214, 215, 216], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 153, 206], "logsumexp": [82, 212, 213], "lomax": 388, "long": [98, 195], "longer": [118, 124, 491], "look": [345, 449], "lookfor": 6, "loop": 100, "loos": 99, "lorentz": 403, "lose": [118, 124, 126], "low": [114, 116, 120, 121, 365, 393, 396, 409, 483], "lower": [87, 111, 159, 160, 180, 186, 190, 192, 220, 457, 458, 459, 460, 463, 464], "lowest": [55, 100, 101, 365, 393], "lstsq": 6, "m": [4, 10, 80, 97, 98, 100, 111, 114, 116, 118, 120, 121, 124, 125, 126, 130, 136, 137, 138, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 220, 221, 361, 431, 448, 449, 457, 458, 459, 460, 462, 463, 464], "machin": [4, 10, 132, 164, 194, 213, 416], "machineri": 98, "made": [36, 40, 52, 98, 145, 182, 234], "magnitud": [11, 12, 74, 112, 358], "mai": [16, 20, 21, 48, 63, 67, 69, 75, 84, 96, 98, 100, 101, 108, 114, 116, 118, 119, 120, 121, 123, 124, 127, 130, 155, 160, 161, 187, 189, 190, 194, 198, 200, 213, 218, 221, 234, 240, 243, 245, 299, 331, 361, 416, 428, 443, 453, 472, 483], "main": [87, 88, 89, 90, 91, 111, 131, 163, 192, 220, 454, 457, 458, 459, 462, 463], "mainstai": 10, "maintain": [93, 96, 98, 159, 330, 430, 449], "major": [4, 39, 40, 41, 42, 44, 47, 48, 96, 299, 346, 414], "make": [42, 44, 68, 98, 226, 467, 468], "manag": 0, "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 483], "manipul": [3, 88, 476, 487], "manual": [4, 98, 453], "mappingproxi": 98, "mask": [98, 181, 220, 346, 353, 362, 448, 459, 463], "mask_func": 220, "mask_indic": [6, 459, 463], "mass": 159, "mat": 6, "match": [11, 12, 40, 69, 75, 79, 82, 92, 98, 145, 147, 155, 167, 219, 221, 360, 361, 418, 443, 448, 449, 452, 473], "math": [10, 105], "mathemat": [476, 487], "matlab": 144, "matmul": [6, 95, 200, 203, 471], "matplotlib": [226, 403], "matric": [131, 148, 166, 181, 188, 189, 191, 193, 196, 198, 199, 200, 201, 203, 221, 226, 487], "matrix": [80, 95, 100, 167, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 221, 226, 441, 462, 469, 471, 476, 487], "matrix_pow": [6, 441], "matrix_rank": 6, "matter": 467, "max": [0, 6, 18, 31, 96, 132, 142, 143, 159, 160, 164, 194, 196, 223, 228, 229, 239, 301, 382, 449, 453, 468, 483], "max_arg": 0, "max_val": 0, "maxima": [142, 222, 223], "maximum": [0, 6, 18, 31, 32, 67, 96, 101, 142, 143, 222, 228, 229, 235, 236, 239, 241, 296, 316, 355, 356, 359, 361, 468], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 23, 36, 38, 39, 40, 41, 42, 43, 44, 48, 55, 73, 79, 87, 88, 90, 96, 100, 102, 103, 111, 114, 115, 116, 120, 121, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 155, 163, 166, 187, 198, 207, 220, 225, 227, 240, 243, 245, 299, 304, 312, 341, 348, 349, 350, 365, 378, 380, 383, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 410, 411, 414, 421, 444, 446, 457, 459, 463, 469, 470, 474, 475, 483], "meaningfulli": 483, "meant": 483, "median": [0, 6], "meet": 431, "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 94, 96, 98, 100, 102, 103, 104, 106, 107, 109, 111, 112, 133, 139, 140, 141, 142, 143, 144, 145, 151, 152, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 226, 229, 230, 233, 304, 310, 336, 344, 345, 347, 349, 350, 354, 355, 356, 358, 363, 364, 417, 419, 421, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 465, 466, 473, 474, 475, 476, 491], "mersenn": 365, "mesh": 181, "meshgrid": [6, 148, 166, 181, 227, 348], "met": [95, 197], "meta": 98, "metadata": 98, "method": [10, 16, 18, 19, 21, 33, 48, 73, 95, 96, 98, 134, 145, 147, 196, 199, 203, 299, 304, 320, 328, 331, 343, 346, 365, 421, 432, 446, 448, 455, 476], "mgrid": [114, 116, 125, 128, 166, 181], "mgridclass": 227, "middl": [10, 91, 114, 116, 120, 121, 191], "might": [100, 119, 120, 121], "min": [6, 19, 32, 67, 96, 132, 142, 143, 159, 160, 164, 187, 194, 200, 203, 222, 223, 229, 241, 301, 449, 483], "min_scalar_typ": 6, "minima": [143, 228, 229], "minimum": [6, 19, 31, 32, 67, 96, 139, 142, 143, 222, 223, 228, 235, 236, 239, 241, 297, 318, 355, 356, 359], "minlength": 56, "mintypecod": 6, "minu": [109, 141, 230, 419, 466], "miscellan": [2, 476, 487], "mise": 410, "miss": 207, "mix": 221, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 110, 419, 468], "mode": [66, 72, 76, 96, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 200, 300, 324, 339, 360, 403, 408, 430, 448, 449], "model": 367, "modf": 6, "modifi": [73, 91, 131, 402], "modul": [113, 154, 476], "modulu": [144, 230, 419], "monoton": [93, 159], "moor": 199, "more": [0, 3, 4, 33, 36, 52, 53, 54, 97, 98, 100, 101, 109, 125, 128, 137, 138, 145, 147, 160, 161, 166, 194, 195, 196, 197, 199, 203, 210, 212, 443, 452, 456, 467, 468, 483, 491], "most": [3, 4, 22, 91, 92, 98, 101, 113, 119, 234, 365, 401, 442], "move": [96, 232, 322, 425, 426, 455, 467], "moveaxi": [6, 425, 426, 455], "msg": 0, "msort": 6, "mt19937": 401, "mu": [376, 380, 387, 410], "multi": [2, 96, 166, 181, 227, 336, 348, 467, 476], "multi_dot": [6, 95, 100, 101], "multiarrai": 98, "multidimension": [159, 167, 473], "multinomi": 6, "multipl": [10, 31, 32, 33, 55, 69, 81, 82, 98, 100, 114, 116, 120, 121, 125, 126, 128, 130, 160, 161, 181, 189, 190, 191, 192, 193, 197, 219, 222, 224, 228, 239, 240, 241, 243, 245, 418, 428, 431, 438, 443, 444, 456, 467, 470, 472, 476], "multipli": [6, 83, 100, 191, 242, 357], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51], "multivari": 383, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 45, 46, 49, 50, 51, 55, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 74, 77, 78, 79, 82, 83, 84, 85, 86, 92, 94, 95, 97, 106, 107, 108, 109, 112, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 133, 137, 139, 140, 141, 142, 143, 144, 147, 150, 155, 156, 157, 158, 159, 160, 161, 162, 165, 168, 172, 173, 174, 175, 176, 183, 184, 185, 186, 197, 198, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 344, 345, 347, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 465, 466, 470, 472, 473], "mx": 194, "n": [0, 4, 10, 34, 84, 88, 89, 92, 93, 96, 97, 98, 99, 108, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 148, 155, 163, 181, 194, 195, 196, 199, 200, 203, 204, 205, 220, 221, 226, 243, 245, 341, 353, 360, 367, 382, 384, 394, 404, 430, 432, 441, 444, 447, 448, 449, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 469, 470, 483], "n1": 226, "n2": [207, 226], "n3": 226, "naiv": 101, "name": [0, 6, 98], "namedtupl": 200, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 39, 40, 41, 45, 46, 49, 51, 94, 139, 142, 143, 169, 172, 173, 174, 175, 176, 209, 222, 223, 224, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 355, 356, 357, 440, 444, 465, 467, 470, 487], "nan_to_num": 6, "nanargmax": [6, 31, 236], "nanargmin": [6, 32, 235], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 142, 143, 222, 223, 229, 241], "nanmean": [6, 224, 243, 245, 444, 470], "nanmedian": 6, "nanmin": [6, 142, 143, 223, 228, 229, 239], "nanpercentil": 6, "nanprod": [6, 357], "nanquantil": 6, "nanstd": [6, 224, 240, 245, 444, 470], "nansum": 6, "nanvar": [6, 224, 240, 243, 444, 470], "nat": 174, "nativ": 98, "native_cod": 98, "native_dt": 98, "natur": [201, 208, 209, 210, 211, 212, 213, 219], "nbad": 377, "nbyte": 96, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 488], "ndim": [6, 34, 36, 44, 52, 53, 54, 80, 88, 91, 96, 98, 131, 182, 203, 222, 228, 349, 453, 455, 474], "ndmin": 36, "nearest": [35, 65, 133, 140, 141, 230, 419, 424, 427, 466], "necessari": [4, 16, 21, 23, 36, 39, 40, 42, 44, 52, 75, 83, 84, 99, 110, 118, 124, 126, 131, 145, 153, 206, 218, 221, 224, 237, 238, 240, 242, 243, 244, 245, 357, 421, 444, 446, 470, 491], "necessarili": [189, 191], "need": [4, 36, 40, 91, 100, 154, 448, 449, 473], "needs_init": 98, "needs_pyapi": 98, "neg": [6, 10, 16, 21, 35, 56, 74, 90, 91, 93, 96, 108, 111, 114, 116, 119, 120, 121, 124, 127, 136, 139, 150, 155, 159, 172, 173, 174, 175, 176, 195, 234, 239, 241, 243, 244, 245, 331, 354, 355, 356, 357, 360, 384, 427, 444, 446, 448, 449, 454, 470], "negat": 431, "negative_binomi": 6, "neginf": 234, "neither": [95, 142, 143, 203, 221, 239, 241], "nest": [43, 97, 161, 428, 443, 472], "nested_it": 6, "net": [142, 143, 223, 229], "never": [421, 468], "new": [22, 36, 48, 61, 62, 68, 69, 79, 82, 83, 84, 91, 96, 97, 98, 99, 102, 103, 108, 142, 143, 145, 149, 150, 151, 152, 153, 161, 163, 206, 218, 219, 220, 223, 229, 232, 237, 238, 242, 244, 299, 328, 331, 341, 349, 350, 418, 421, 425, 426, 428, 443, 453, 455, 472, 473, 474, 475, 483], "new_dtyp": 98, "new_ord": 98, "newaxi": 108, "newbyteord": [6, 98], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 45, 46, 48, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 94, 96, 102, 103, 104, 106, 107, 109, 111, 112, 133, 139, 140, 141, 142, 143, 144, 151, 152, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 229, 230, 233, 299, 304, 344, 345, 347, 349, 350, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 465, 466, 474, 475], "newshap": 421, "next": [4, 132, 345], "nextaft": 6, "ngood": 377, "ni": [226, 361, 448, 449], "nine": 367, "ninja": 4, "nj": [361, 448, 449], "njm": 100, "nk": [361, 448, 449], "nl": 10, "nlk": 100, "nn": 226, "noisi": 194, "non": [23, 34, 36, 39, 40, 41, 42, 43, 44, 48, 55, 56, 73, 79, 87, 88, 90, 93, 96, 102, 103, 110, 111, 115, 124, 127, 129, 135, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 163, 166, 170, 172, 181, 206, 207, 218, 220, 227, 234, 235, 236, 239, 241, 243, 245, 299, 304, 321, 331, 346, 348, 349, 350, 353, 355, 356, 365, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 444, 452, 457, 459, 463, 469, 470, 473, 474, 475], "nonc": [385, 386], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 69, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 172, 173, 174, 175, 176, 183, 184, 185, 187, 194, 196, 197, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 314, 316, 317, 318, 322, 323, 324, 327, 329, 330, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 459, 463, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 483], "nonzero": [6, 34, 79, 96, 135, 181, 473, 483], "nor": [142, 143, 191, 239, 241], "norm": [6, 10, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 187, 191, 194, 487], "normal": [6, 80, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 159, 189, 190, 200, 213, 365, 380, 383, 394, 406], "not_equ": [6, 104, 156, 157, 184, 185], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 46, 47, 49, 50, 51, 58, 69, 73, 81, 85, 91, 93, 94, 96, 98, 100, 101, 108, 110, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 140, 142, 143, 146, 147, 148, 149, 150, 159, 166, 168, 172, 183, 189, 207, 218, 230, 233, 243, 244, 245, 304, 328, 346, 353, 355, 356, 360, 363, 368, 370, 371, 381, 386, 419, 421, 423, 438, 444, 445, 447, 452, 453, 455, 456, 465, 467, 468, 470, 471], "notic": [98, 124, 127], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 39, 40, 42, 44, 45, 46, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 94, 96, 102, 103, 104, 106, 107, 109, 111, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 162, 163, 168, 172, 173, 174, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 228, 229, 230, 233, 239, 240, 241, 243, 244, 245, 299, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 438, 440, 441, 444, 445, 446, 450, 451, 465, 466, 470, 474, 475], "now": [16, 21, 42, 44, 88, 191, 194, 220], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 307, 309, 312, 313, 314, 320, 322, 326, 331, 332, 333, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 358, 359, 360, 361, 363, 364, 390, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "nr": 10, "nsamp": 377, "nsampl": 377, "nth": 452, "nuc": 198, "num": [0, 98, 105, 153, 206, 218, 456, 468], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 41, 45, 46, 49, 51, 55, 56, 61, 62, 79, 88, 90, 92, 93, 96, 98, 99, 100, 101, 108, 111, 112, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 132, 133, 141, 146, 147, 149, 150, 153, 155, 159, 160, 163, 164, 169, 170, 171, 172, 178, 181, 187, 193, 196, 200, 201, 203, 204, 205, 206, 213, 218, 230, 234, 237, 238, 239, 241, 242, 243, 244, 245, 320, 329, 332, 343, 346, 353, 357, 358, 365, 367, 377, 401, 419, 420, 424, 425, 426, 427, 434, 437, 444, 447, 453, 455, 457, 466, 467, 469, 470, 483, 487], "number_of_dimens": [96, 320, 343], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 45, 46, 49, 51, 70, 71, 74, 77, 78, 94, 98, 104, 106, 109, 119, 120, 121, 124, 126, 141, 142, 143, 156, 157, 165, 169, 172, 173, 174, 184, 185, 208, 209, 210, 211, 223, 229, 233, 344, 347, 354, 355, 356, 358, 415, 424, 427, 433, 434, 435, 436, 445, 450, 451, 465, 487], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 308, 312, 313, 314, 320, 326, 331, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 487], "nx": 226, "ny": 226, "nyquist": [10, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 129], "o": [4, 16, 21, 98], "obj": [31, 32, 33, 98, 145, 159], "obj2sctyp": 6, "object": [23, 36, 39, 40, 41, 42, 43, 44, 47, 48, 73, 87, 88, 90, 96, 98, 102, 103, 108, 111, 115, 129, 132, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 164, 166, 187, 190, 198, 206, 207, 218, 220, 227, 299, 304, 328, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 421, 457, 459, 463, 469, 474, 475, 483], "obtain": [10, 91, 186, 346], "obviou": 10, "occupi": [132, 164], "occur": [22, 48, 63, 69, 75, 96, 100, 161, 189, 221, 234, 299, 428, 443, 472], "occurr": [31, 32, 56, 93, 159, 235, 236, 467], "odd": [10, 115, 118, 122, 123, 124, 126, 127, 129], "off": [23, 118, 123, 189, 194], "offset": [91, 96, 98, 146, 147, 220, 307, 340, 454, 459, 460, 463, 464], "often": 158, "ogrid": [166, 181, 473], "ogridclass": 348, "oil": [367, 384], "omit": [365, 393], "onc": 193, "one": [3, 4, 31, 32, 33, 36, 38, 43, 52, 53, 54, 55, 67, 72, 75, 76, 79, 96, 98, 102, 104, 108, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 137, 138, 139, 142, 143, 147, 151, 155, 160, 161, 163, 166, 171, 181, 191, 195, 198, 208, 209, 211, 220, 222, 223, 226, 227, 228, 229, 235, 236, 242, 244, 304, 312, 315, 346, 348, 350, 353, 357, 384, 426, 431, 438, 442, 443, 446, 448, 452, 456, 459, 460, 463, 464, 467, 474, 483], "oneapi": [23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "onedpl": 4, "onemkl": [4, 189, 191], "ones": [6, 36, 42, 44, 55, 82, 94, 96, 100, 102, 103, 104, 108, 111, 130, 151, 152, 162, 163, 182, 194, 196, 219, 220, 237, 242, 350, 357, 418, 422, 426, 455, 457, 465, 474, 475], "ones_lik": [6, 36, 103, 152, 349, 475], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 42, 44, 48, 52, 55, 67, 73, 76, 80, 96, 98, 100, 101, 102, 103, 111, 117, 127, 131, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 166, 186, 190, 192, 200, 203, 206, 207, 218, 220, 221, 222, 224, 225, 228, 234, 235, 236, 239, 240, 241, 242, 243, 245, 299, 331, 333, 349, 350, 352, 353, 354, 357, 365, 387, 393, 409, 421, 438, 444, 446, 449, 463, 467, 468, 470, 473, 474, 475, 483], "open": [147, 166, 181, 206, 348, 365, 395, 397, 398, 400, 409, 447], "opencl": [23, 36, 39, 40, 41, 42, 44, 73, 87, 90, 102, 103, 111, 115, 129, 146, 147, 148, 149, 151, 152, 153, 163, 206, 207, 218, 227, 348, 349, 350, 457, 469, 474, 475], "oper": [10, 15, 57, 58, 59, 60, 94, 98, 100, 101, 104, 108, 131, 141, 144, 156, 157, 168, 183, 184, 185, 186, 214, 216, 221, 222, 228, 230, 233, 234, 235, 236, 344, 347, 354, 355, 356, 360, 419, 423, 445, 453, 465, 467, 468, 476, 487], "operand": [100, 101, 205, 351, 452], "opposit": [10, 98, 110, 118, 123, 353], "optim": [4, 100, 101, 159, 160], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 57, 58, 59, 60, 63, 64, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 190, 192, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 312, 341, 344, 345, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 363, 364, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 491], "ord": 198, "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 85, 86, 91, 93, 94, 96, 98, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 114, 116, 119, 120, 121, 124, 126, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 155, 156, 157, 158, 159, 162, 165, 168, 172, 173, 174, 183, 184, 185, 187, 189, 190, 191, 192, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 226, 229, 230, 232, 233, 253, 298, 299, 304, 312, 322, 325, 330, 333, 341, 344, 345, 346, 347, 349, 350, 352, 354, 355, 356, 358, 363, 364, 414, 417, 419, 421, 423, 424, 429, 430, 433, 434, 435, 436, 438, 440, 441, 445, 450, 451, 452, 455, 465, 466, 467, 469, 473, 474, 475, 487], "ordin": [194, 202], "ordinari": [124, 167, 186], "orient": [81, 361, 449], "origin": [61, 91, 96, 118, 124, 126, 198, 226, 232, 242, 244, 421, 425, 467], "ortho": [10, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130], "orthogon": [191, 200], "orthonorm": 200, "other": [33, 38, 48, 61, 62, 92, 96, 98, 119, 120, 121, 124, 126, 140, 148, 163, 189, 191, 197, 232, 249, 250, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 286, 288, 291, 292, 293, 299, 365, 409, 426, 438, 467, 476, 487], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 76, 77, 78, 79, 80, 85, 86, 87, 92, 94, 96, 98, 100, 102, 103, 104, 105, 106, 107, 109, 111, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 162, 163, 167, 168, 172, 173, 174, 183, 184, 185, 194, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 299, 328, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 421, 423, 424, 429, 430, 433, 434, 435, 436, 438, 440, 441, 442, 444, 445, 446, 450, 451, 454, 465, 466, 470, 473, 474, 475], "otim": 452, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 193, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 300, 301, 304, 305, 306, 312, 316, 317, 318, 323, 329, 335, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475], "outer": [6, 81, 91, 100, 101, 182], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 96, 98, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 133, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 162, 163, 165, 166, 168, 169, 170, 172, 173, 174, 181, 183, 184, 185, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 236, 237, 238, 240, 242, 243, 244, 245, 299, 304, 344, 345, 347, 348, 349, 350, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 423, 424, 427, 429, 431, 433, 434, 435, 436, 438, 440, 441, 442, 444, 445, 446, 448, 450, 451, 453, 454, 457, 459, 463, 465, 466, 467, 468, 469, 470, 473, 474, 475, 487, 491], "outsid": [159, 160], "over": [10, 16, 21, 55, 82, 83, 84, 95, 96, 100, 101, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 134, 136, 148, 153, 159, 160, 167, 198, 206, 218, 219, 221, 222, 224, 226, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 312, 357, 361, 365, 392, 397, 408, 409, 418, 444, 446, 448, 449, 452, 456, 468, 470, 487], "overal": [114, 116, 120, 121, 125, 126, 128, 130], "overflow": 139, "overrid": [81, 103, 152, 350, 475], "overview": 2, "overwrite_input": 225, "p": [10, 187, 194, 195, 367, 370, 375, 381, 384, 468], "pack": [91, 414, 487], "packag": [0, 3], "packbit": 6, "pad": [6, 98, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130], "page": [3, 487], "pair": [10, 101, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 189], "parallel": [1, 3, 4, 9, 476], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 309, 312, 328, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "parameter": [365, 387, 409], "parametr": 456, "pareto": 6, "pars": [147, 207], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 96, 124, 142, 143, 165, 170, 171, 177, 178, 189, 190, 192, 220, 223, 229, 231, 313, 326, 415, 416, 439, 459, 463, 466, 467, 483], "partial": [33, 438], "particular": [98, 197], "particularli": 100, "partit": [6, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 438, 457, 459, 463, 469, 474, 475, 483], "pass": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 98, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 160, 163, 166, 181, 194, 207, 220, 227, 234, 304, 328, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 457, 459, 460, 463, 464, 469, 474, 475], "path": [4, 100, 101, 147, 207], "path_info": 101, "pathlib": 207, "pattern": 55, "penros": 199, "per": [100, 115, 129], "percentil": [6, 225], "perf_count": 0, "perform": [16, 21, 40, 41, 67, 92, 100, 114, 116, 119, 120, 121, 125, 126, 128, 130, 136, 186, 357, 446], "period": [10, 468], "permit": 147, "permut": [6, 96, 100, 232, 341, 455, 487], "permute_dim": 455, "phase": [10, 20, 468], "phase_deg": 468, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 85, 86, 113, 363, 435, 436, 450, 451, 456, 468, 491], "pickl": [147, 207], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 67, 69, 83, 84, 95, 96, 108, 110, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 145, 166, 169, 221, 222, 224, 228, 234, 237, 238, 240, 242, 243, 244, 245, 312, 331, 333, 341, 348, 357, 360, 361, 402, 421, 425, 427, 438, 443, 444, 446, 448, 454, 470, 483], "platform": [83, 84, 98, 237, 238, 242, 244, 357, 446], "pleas": [0, 3, 100, 159, 483], "plot": 403, "plt": [226, 403], "plu": [208, 209, 211], "point": [10, 11, 12, 20, 23, 29, 35, 39, 40, 50, 55, 74, 82, 98, 102, 103, 107, 111, 112, 113, 118, 119, 123, 124, 125, 126, 127, 132, 133, 139, 146, 147, 148, 150, 151, 152, 155, 163, 165, 194, 195, 206, 207, 212, 213, 219, 224, 234, 240, 243, 245, 345, 349, 350, 365, 394, 406, 415, 417, 418, 427, 429, 430, 444, 456, 457, 470, 474, 475, 487], "pointer": 98, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 70, 71, 74, 77, 78, 85, 86, 94, 96, 104, 106, 107, 109, 112, 133, 139, 140, 141, 142, 143, 144, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 229, 230, 233, 344, 345, 347, 354, 355, 356, 358, 363, 364, 365, 392, 417, 419, 423, 424, 427, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 465, 466], "portion": [159, 160], "posinf": 234, "posit": [6, 10, 16, 17, 21, 23, 35, 39, 40, 41, 64, 74, 90, 91, 96, 108, 111, 112, 114, 116, 119, 120, 121, 124, 127, 129, 132, 139, 147, 169, 172, 173, 174, 175, 176, 186, 195, 204, 232, 234, 239, 241, 244, 322, 336, 344, 367, 391, 425, 426, 427, 429, 431, 440, 441, 454, 455], "possess": 189, "possibl": [10, 47, 48, 53, 54, 96, 100, 101, 108, 142, 143, 155, 159, 220, 299, 328, 421, 442, 447, 448, 449, 455], "possibli": 43, "pow": [356, 483], "power": [6, 10, 107, 113, 139, 195, 355, 441, 469], "pre": 160, "precis": [11, 12, 55, 83, 84, 98, 100, 132, 139, 165, 194, 220, 237, 238, 242, 244, 357, 415, 446, 454], "predecessor": 468, "prefer": [66, 73, 96, 304, 331, 346], "prepend": [92, 99, 453], "present": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 98, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 163, 166, 207, 220, 227, 239, 241, 244, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 457, 459, 463, 469, 474, 475], "preserv": [48, 52, 53, 54, 67, 96, 98, 100, 136, 137, 138, 139, 190, 191, 192, 299, 454, 467], "press": 10, "prevent": 100, "previou": 55, "print": [0, 4, 41, 55, 56, 72, 93, 98, 101, 365, 384, 389], "print_device_info": 0, "printabl": 101, "printopt": 6, "prior": 92, "prob1": [212, 213], "prob12": [212, 213], "prob2": [212, 213], "probabl": [159, 213, 367, 375, 384], "proce": 483, "process": 10, "processor": 100, "prod": [6, 83, 96, 204, 205, 242, 483], "produc": [10, 34, 98, 207, 361, 430, 449], "product": [6, 81, 83, 95, 96, 100, 101, 167, 181, 182, 197, 202, 204, 205, 221, 233, 237, 242, 305, 351, 357, 452, 471, 487], "program": [4, 140], "progress": [153, 206], "project": [98, 358], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 42, 44, 45, 46, 49, 50, 51, 57, 59, 60, 63, 64, 74, 77, 78, 85, 86, 94, 106, 107, 109, 139, 141, 142, 143, 144, 153, 162, 183, 206, 208, 209, 210, 211, 212, 213, 218, 221, 223, 229, 230, 233, 345, 355, 356, 363, 364, 417, 419, 422, 423, 429, 433, 435, 436, 440, 441, 445, 450, 451, 453, 465, 466], "promote_typ": 6, "propag": [98, 142, 143, 222, 223, 228, 229, 237, 238, 239, 241, 242, 244], "proper": [142, 143, 189, 191], "properti": [10, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 190, 192, 200, 206, 207, 218, 220, 227, 247, 299, 304, 308, 310, 311, 313, 315, 319, 320, 326, 331, 332, 336, 341, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475, 483], "protocol": [43, 98, 145], "prototyp": 103, "provid": [0, 6, 10, 31, 32, 69, 75, 82, 96, 100, 101, 108, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 149, 159, 160, 161, 175, 176, 219, 235, 236, 239, 241, 242, 244, 365, 393, 396, 418, 428, 443, 448, 456, 467, 472, 473, 491], "pseudo": [199, 365], "ptp": 6, "pure": [10, 118, 124, 126, 127], "purpos": [34, 194], "put": [6, 10, 96, 110, 118, 124, 126, 353, 361, 449, 483], "put_along_axi": [6, 360, 449], "putmask": [6, 360], "pval": 382, "py": 4, "pyplot": [226, 403], "pytest": 4, "python": [0, 2, 3, 43, 96, 98, 144, 145, 230, 314, 419, 420, 483], "q": [191, 195, 200, 205, 225], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 45, 49, 114], "quantil": 6, "quaternion": 195, "question": 87, "queue": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "quick": [2, 3], "quickli": [181, 491], "quotient": [29, 50], "r": [86, 200], "r2": 200, "rad": 86, "rad2deg": [6, 85, 86, 468], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 45, 49, 50, 85, 86, 363, 468, 491], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 73, 74, 75, 77, 78, 82, 85, 86, 93, 94, 95, 96, 102, 103, 104, 106, 107, 109, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 162, 163, 168, 172, 173, 174, 183, 184, 185, 195, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 228, 229, 230, 233, 235, 236, 239, 240, 241, 243, 244, 245, 299, 300, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 363, 364, 417, 418, 419, 421, 423, 424, 429, 433, 434, 435, 436, 438, 440, 441, 442, 444, 445, 446, 450, 451, 465, 466, 470, 474, 475, 483], "rand": [6, 101, 365, 395, 397, 398, 400], "randint": [6, 96, 314, 365, 396], "randn": [6, 136, 137, 138, 199, 200, 203, 205, 365, 443], "random": [96, 101, 136, 137, 138, 191, 197, 199, 200, 203, 205, 314, 443, 476, 487], "random_integ": [6, 365, 393], "random_sampl": [6, 365, 392, 395, 398, 400], "randomli": 389, "randomst": 393, "ranf": 6, "rang": [0, 93, 149, 159, 160, 213, 359, 360, 384, 389, 420, 443, 452, 455, 468, 487], "rank": [108, 110, 148, 194, 196, 447], "rate": [115, 129], "rather": 346, "ratio": [0, 94, 141, 194, 465, 491], "ration": 487, "ravel": [6, 96, 110, 135, 198, 312, 351, 483], "ravel_multi_index": 6, "raw": 200, "rayleigh": 6, "rcond": [194, 199], "re": [31, 32, 56, 87, 124, 425], "read": [87, 91, 96, 98, 146, 147, 149, 150, 207, 312, 414, 421], "readonli": 98, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 45, 46, 49, 50, 51, 64, 65, 74, 82, 96, 113, 116, 118, 123, 124, 125, 126, 127, 128, 130, 132, 140, 142, 143, 144, 162, 165, 170, 177, 178, 186, 189, 190, 191, 192, 196, 199, 200, 201, 203, 212, 213, 219, 223, 229, 230, 234, 243, 245, 367, 384, 416, 417, 418, 419, 429, 439, 444, 466, 467, 470, 483, 487], "real_if_clos": [6, 20, 165, 415], "rearrang": [96, 322, 487], "reason": 126, "rebuild": 97, "recal": 98, "recent": [22, 442], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 429, 440], "recommend": [100, 346, 453], "reconstruct": [98, 203, 467], "recov": 10, "reduc": [16, 21, 31, 32, 55, 200, 203, 219, 222, 224, 226, 228, 235, 236, 239, 240, 241, 242, 243, 244, 245, 357, 418, 444, 446, 470], "reduce_hypot": 162, "reduct": [16, 21], "redund": 127, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483], "reflect": 483, "reflector": 200, "regardless": [98, 190, 192], "regular": 207, "rel": [17, 96, 169, 336, 425, 426], "relat": 98, "relev": [98, 153, 206, 218], "rem": 144, "remain": [16, 21, 55, 101, 128, 130, 159, 219, 224, 232, 240, 243, 245, 418, 421, 444, 470], "remaind": [6, 141, 144, 230, 355, 356], "remov": [31, 32, 85, 91, 96, 108, 124, 334, 357, 363, 442, 446, 487], "reorder": [100, 136, 205, 232], "rep": 453, "repeat": [6, 96, 114, 116, 120, 121, 125, 126, 128, 130, 131, 189, 190, 191, 192, 226, 353, 453, 456, 467, 483], "repeatedli": 100, "repetit": [0, 420, 453], "replac": [3, 10, 43, 67, 110, 234, 237, 238, 353, 361, 370, 431, 483], "replic": 453, "repo": 4, "repr": 287, "repres": [10, 23, 36, 39, 40, 42, 43, 44, 55, 98, 101, 119, 127, 145, 148, 153, 155, 166, 201, 206, 218, 226, 245, 365, 461, 467, 483], "represent": [57, 59, 60, 101, 132, 164, 166, 234, 345, 483], "request": 426, "requir": [4, 6, 36, 40, 41, 42, 44, 48, 96, 98, 100, 112, 166, 234, 299, 331], "res_cpu": 87, "res_host": 87, "rese": 401, "reset": 483, "reshap": [0, 6, 15, 31, 32, 34, 52, 54, 55, 87, 88, 89, 91, 94, 95, 96, 97, 100, 108, 110, 117, 122, 136, 144, 166, 167, 181, 182, 198, 220, 221, 222, 228, 233, 307, 312, 331, 341, 353, 389, 414, 425, 445, 452, 454, 456, 459, 460, 463, 464, 465, 467, 483], "resid": [108, 112, 145], "residu": 194, "resiz": [6, 108, 483], "resolut": 132, "resolv": [82, 108, 219, 418], "resourc": 0, "respect": [15, 29, 50, 57, 59, 60, 94, 96, 104, 139, 141, 144, 155, 156, 157, 183, 184, 185, 212, 213, 214, 216, 217, 230, 233, 336, 347, 355, 356, 419, 423, 445, 465, 468], "restor": 425, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 50, 55, 57, 58, 59, 60, 63, 67, 69, 74, 79, 82, 83, 84, 94, 95, 98, 101, 103, 104, 109, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 133, 139, 141, 146, 147, 148, 149, 150, 152, 153, 156, 157, 159, 160, 166, 168, 172, 173, 174, 175, 176, 183, 184, 185, 186, 189, 198, 200, 206, 207, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 228, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 346, 347, 350, 351, 355, 356, 357, 360, 365, 367, 397, 418, 421, 422, 423, 424, 426, 427, 430, 433, 434, 443, 444, 446, 448, 449, 452, 453, 456, 461, 465, 466, 467, 470, 473, 475, 483], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 63, 98, 487], "ret": 364, "retriev": [91, 98], "retstep": 206, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317, 318, 320, 321, 322, 323, 325, 328, 329, 332, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 368, 387, 389, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 483], "return_count": 467, "return_index": 467, "return_invers": 467, "reus": [145, 160, 421], "revers": [91, 96, 131, 136, 137, 138, 341, 455, 456, 469], "rewrit": 194, "rfft": [6, 10, 115, 118, 123, 124, 125, 126, 128, 129, 130], "rfft2": [6, 125], "rfftfreq": [6, 115], "rfftn": [6, 113, 116, 126, 127, 128], "right": [10, 28, 49, 67, 81, 91, 93, 137, 138, 162, 183, 189, 190, 191, 192, 197, 205, 220, 408, 418, 423, 430, 454, 456, 459, 463, 469], "right_shift": [6, 183], "rightmost": [159, 160, 205], "rint": [6, 35, 65, 133, 140, 427, 466], "roll": [6, 426], "rollaxi": [6, 425], "root": [6, 64, 162, 187, 417, 418, 429, 440, 441], "rot90": 6, "roughli": [98, 194], "round": [6, 23, 35, 65, 96, 118, 123, 133, 140, 141, 189, 230, 419, 424, 466, 483, 487], "round_": 6, "routin": [2, 476, 483], "row": [44, 48, 68, 69, 83, 84, 91, 96, 97, 111, 137, 138, 155, 161, 163, 166, 197, 203, 299, 346, 414, 428, 443, 457, 459, 467, 472], "row_stack": [6, 472], "rowvar": 80, "rsqrt": [417, 440], "rtol": [17, 169], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 42, 44, 45, 46, 49, 50, 51, 55, 57, 59, 60, 63, 64, 74, 75, 77, 78, 81, 84, 85, 86, 94, 106, 107, 109, 141, 142, 143, 144, 153, 162, 183, 206, 208, 209, 210, 211, 212, 213, 218, 219, 221, 223, 224, 229, 230, 233, 240, 243, 245, 345, 355, 356, 363, 364, 417, 418, 419, 422, 423, 429, 433, 435, 436, 440, 441, 444, 445, 446, 450, 451, 456, 465, 466, 470], "run": [0, 4], "runtim": 4, "runtimewarn": [239, 241], "s1": [96, 98, 182, 336], "s10": 98, "s16": 98, "s2": [96, 98, 336], "s25": 98, "s3": [96, 336], "safe": [48, 63, 69, 75, 96, 100, 161, 221, 299, 428, 443, 472], "safe_ev": 6, "said": 205, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 42, 44, 47, 48, 50, 55, 57, 58, 59, 60, 62, 68, 69, 74, 82, 83, 84, 91, 92, 93, 94, 95, 96, 97, 103, 104, 108, 110, 119, 120, 121, 126, 131, 133, 139, 141, 142, 143, 144, 145, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 175, 176, 177, 182, 183, 184, 185, 191, 195, 200, 212, 213, 214, 216, 217, 219, 222, 223, 224, 228, 229, 230, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 328, 341, 345, 347, 350, 353, 355, 356, 357, 361, 365, 387, 393, 409, 414, 415, 418, 419, 420, 423, 425, 426, 428, 430, 431, 438, 442, 443, 444, 445, 446, 448, 449, 452, 454, 458, 460, 462, 464, 465, 470, 471, 472, 475, 491], "same_kind": [48, 63, 69, 75, 96, 100, 161, 221, 299, 428, 443, 472], "sampl": [10, 115, 122, 124, 127, 129, 153, 155, 159, 206, 218, 361, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 449, 456, 459, 463, 476, 487], "sample_r": 129, "satisfi": [36, 40, 42, 44, 48, 96, 110, 193, 299, 353, 431], "save": [6, 147, 491], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 39, 40, 42, 43, 44, 50, 57, 59, 60, 63, 73, 74, 75, 81, 87, 90, 92, 94, 95, 96, 98, 100, 101, 104, 110, 115, 129, 131, 139, 141, 142, 143, 144, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 167, 169, 171, 178, 179, 182, 183, 184, 185, 202, 206, 212, 213, 214, 216, 217, 218, 220, 221, 223, 226, 229, 230, 233, 309, 314, 343, 345, 347, 353, 355, 356, 360, 361, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 387, 388, 390, 391, 393, 396, 399, 401, 405, 407, 408, 409, 410, 411, 412, 413, 416, 419, 423, 430, 431, 445, 448, 452, 456, 465, 466, 469, 471, 473, 483], "scale": [10, 101, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 153, 182, 200, 206, 218, 365, 372, 374, 376, 377, 378, 379, 387, 399, 404, 411], "scientif": 10, "scipi": 105, "scope": 4, "script": 4, "sctype2char": 6, "search": [101, 476, 487], "searchsort": [6, 93, 96, 159, 438, 483], "second": [15, 17, 29, 37, 38, 50, 55, 57, 59, 60, 74, 81, 91, 94, 95, 98, 101, 104, 107, 114, 115, 116, 117, 120, 121, 124, 127, 129, 139, 141, 142, 143, 144, 155, 156, 157, 159, 160, 161, 162, 167, 169, 182, 183, 184, 185, 212, 213, 214, 216, 217, 220, 221, 222, 223, 226, 228, 229, 230, 233, 347, 351, 355, 356, 419, 423, 441, 445, 447, 452, 454, 465, 471], "section": [4, 98, 116, 121, 126, 130, 483], "see": [3, 35, 98, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 145, 159, 194, 382, 427, 459, 460, 463, 464, 467, 483], "seed": [6, 96, 101, 314, 365], "seek": 147, "seldom": 139, "select": [6, 75, 110, 222, 228, 442, 448, 456, 476], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "self": [96, 98, 134, 248, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 311, 365], "semant": 159, "sens": 205, "sep": [147, 150], "separ": [10, 96, 98, 100, 147, 150, 160, 234, 328], "sequenc": [43, 52, 53, 54, 68, 69, 72, 76, 97, 100, 101, 102, 103, 114, 116, 120, 121, 124, 125, 126, 128, 130, 151, 152, 153, 159, 160, 161, 166, 181, 197, 206, 218, 232, 349, 350, 353, 389, 402, 420, 422, 428, 443, 452, 456, 472, 474, 475], "sequenti": [76, 80, 105, 225, 231, 242], "seri": [10, 124, 381], "set": [10, 31, 32, 36, 48, 66, 79, 87, 88, 90, 93, 96, 98, 100, 102, 151, 159, 160, 163, 166, 196, 198, 199, 206, 222, 228, 235, 236, 244, 289, 299, 300, 311, 331, 349, 350, 357, 431, 433, 434, 446, 459, 463, 474, 475, 483], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 98], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 193, "sh": [96, 328], "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 136, 139, 140, 141, 142, 143, 144, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 320, 328, 332, 334, 341, 343, 344, 345, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 374, 377, 382, 383, 388, 392, 393, 394, 395, 396, 397, 398, 400, 405, 406, 412, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 462, 463, 464, 465, 466, 470, 472, 473, 474, 475, 476, 487], "share": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 457, 459, 463, 469, 474, 475], "shared_bin": 160, "shares_memori": 6, "shift": [10, 114, 116, 117, 121, 122, 183, 423, 425], "short": [466, 483], "shorter": [118, 124], "shorthand": [11, 12, 15, 57, 58, 59, 60, 94, 104, 141, 156, 157, 168, 183, 184, 185, 214, 216, 221, 230, 233, 344, 347, 354, 355, 356, 419, 423, 445, 465, 473], "should": [31, 32, 48, 91, 93, 95, 96, 100, 101, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 144, 147, 154, 159, 181, 194, 195, 221, 232, 235, 236, 239, 241, 299, 330, 382, 421, 430, 448, 452, 454, 468, 483], "show": [9, 38, 98, 131, 162, 217, 226, 234, 237, 238, 239, 241, 244, 403], "show_config": 6, "shown": 4, "shuffl": 6, "side": [96, 155, 191, 330, 430], "sigma": [380, 387], "sign": [6, 10, 17, 74, 98, 169, 188, 201, 230, 344, 354, 357, 419, 434, 446, 466], "signal": [10, 115, 118, 123, 124, 126, 129, 468], "signatur": [220, 221], "signbit": [6, 433], "signific": 100, "signum": 433, "similar": [3, 39, 40, 96, 98, 153, 206, 218, 220, 304, 331, 353, 365, 393, 459, 460, 463, 464], "simpl": [4, 217, 487], "simpli": [89, 96, 147, 159, 160, 341], "sin": [0, 6, 26, 27, 45, 46, 77, 191, 226, 436, 450, 456], "sinc": [6, 96, 124, 189, 191, 333, 346], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 435, 436, 450, 451], "singl": [9, 10, 33, 62, 68, 96, 100, 101, 155, 197, 222, 228, 334, 357, 365, 384, 393, 394, 395, 396, 397, 398, 400, 406, 446, 456, 483], "singleton": [16, 21, 55, 108, 219, 224, 239, 240, 241, 243, 245, 418, 442, 444, 470], "singular": [193, 194, 196, 199, 203], "sinh": [6, 14, 25, 27, 46, 78, 435, 451], "size": [0, 6, 23, 31, 32, 36, 55, 69, 76, 79, 80, 83, 84, 88, 93, 96, 98, 101, 110, 113, 115, 119, 129, 147, 153, 155, 161, 198, 200, 203, 206, 218, 220, 222, 224, 228, 235, 236, 237, 238, 240, 242, 244, 314, 315, 331, 349, 353, 357, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 425, 428, 442, 443, 446, 452, 463, 468, 472, 474], "skip": 91, "slice": [110, 235, 236, 239, 240, 241, 243, 245, 360, 361, 431, 449, 456, 463, 464, 483], "slogdet": [6, 188], "slower": 452, "slowest": [96, 312, 414, 421], "small": [17, 109, 169, 194, 199, 210, 212, 213, 234, 463], "smaller": [92, 96, 113, 114, 116, 119, 120, 121, 123, 125, 126, 127, 128, 130, 132, 194, 230, 322, 353, 419, 468], "smallest": [132, 164, 467], "smallest_norm": 132, "smat": 203, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 55, 98, 104, 118, 123, 139, 159, 178, 206, 213, 219, 224, 226, 240, 243, 245, 403, 418, 444, 452, 453, 470], "softwar": 4, "solut": [194, 202], "solv": [6, 194, 204, 205, 487], "some": [23, 98, 108, 110, 140, 167, 194, 353, 468, 473, 483], "sometim": [158, 483], "sometru": 6, "somewhat": 195, "sophist": 195, "sort": [6, 33, 96, 203, 298, 322, 430, 439, 449, 455, 456, 467, 476, 483, 487], "sort_complex": 6, "sorter": [96, 330, 430], "sought": 187, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 52, 53, 54, 55, 56, 61, 62, 63, 66, 67, 68, 69, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 105, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 220, 221, 222, 224, 225, 226, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 343, 346, 349, 350, 351, 352, 353, 357, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 420, 421, 422, 425, 426, 430, 431, 432, 437, 438, 439, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475], "space": [6, 23, 115, 117, 129, 147, 153, 155, 206, 218, 456, 491], "spars": [166, 226], "special": [2, 98, 105, 476, 487], "specif": [0, 4, 98, 148], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 40, 41, 42, 44, 55, 62, 63, 69, 73, 82, 83, 84, 87, 90, 91, 96, 100, 101, 102, 103, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 136, 139, 146, 147, 148, 149, 151, 152, 153, 155, 163, 190, 192, 198, 204, 205, 206, 207, 218, 219, 224, 225, 227, 237, 238, 240, 242, 243, 244, 245, 298, 307, 348, 349, 350, 353, 357, 360, 361, 365, 378, 388, 406, 414, 418, 425, 426, 427, 431, 437, 443, 444, 446, 448, 449, 452, 454, 455, 456, 457, 467, 469, 470, 474, 475], "spectrum": [10, 117, 118, 122, 123], "speed": 100, "speedup": 101, "spell": 346, "split": [6, 69, 97, 161, 428, 443, 472, 487], "spreadsheet": 140, "sqrt": [6, 10, 64, 96, 313, 326, 418, 429, 441], "squar": [6, 64, 162, 163, 186, 187, 189, 190, 191, 193, 194, 195, 201, 204, 205, 220, 243, 245, 369, 385, 417, 418, 429, 431, 440, 444, 460, 464, 469, 470], "squeez": [6, 96, 108, 483], "src": 75, "stabl": [33, 438], "stack": [6, 68, 69, 97, 161, 188, 196, 199, 200, 201, 221, 346, 428, 449, 472], "stand": 155, "standard": [96, 132, 141, 144, 224, 230, 240, 243, 245, 314, 335, 365, 380, 387, 394, 403, 404, 405, 406, 407, 419, 444, 470, 483, 487], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 365, 394], "standard_t": 6, "start": [2, 3, 23, 42, 44, 101, 115, 119, 129, 146, 153, 206, 218, 220, 426, 459, 463], "start_tim": 0, "state": 365, "statist": [476, 487], "std": [6, 96, 224, 240, 243, 245, 470, 483], "stdev": [365, 406], "step": [4, 23, 101, 153, 158, 206, 218], "sticki": 98, "still": 55, "stop": [23, 153, 206, 218], "store": [133, 153, 175, 176, 206, 213, 218, 221, 351], "str": [41, 43, 69, 98, 100, 101, 147, 150, 161, 207, 290, 428, 443, 461, 472], "str_": 98, "straightforward": 166, "stride": [47, 48, 96, 299], "string": [23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 98, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 461, 463, 469, 474, 475, 483], "string_repr": 101, "stringio": 207, "strongli": [4, 453], "struct": 98, "structur": [98, 207], "student": 407, "style": [48, 96, 299, 346, 414], "sub": [69, 91, 98, 100, 161, 205, 428, 443, 454, 457, 472], "subarrai": [98, 166, 467], "subclass": 40, "subdivid": 98, "subdtyp": 98, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 45, 46, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 73, 74, 77, 78, 85, 86, 94, 96, 103, 104, 106, 107, 109, 112, 133, 139, 140, 141, 142, 143, 144, 152, 156, 157, 158, 162, 165, 168, 172, 173, 174, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 229, 230, 233, 299, 344, 345, 347, 350, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 440, 441, 445, 450, 451, 465, 466, 475], "subscript": [100, 101], "subset": [3, 155, 442, 487], "subtract": 6, "subtyp": 414, "succeed": 99, "success": [41, 367, 375, 384], "sugar": [89, 460, 464], "suggest": 91, "suit": 4, "suitabl": [34, 96, 341, 361, 430, 449], "sum": [0, 3, 4, 6, 10, 15, 55, 82, 84, 87, 90, 91, 92, 95, 96, 100, 119, 159, 162, 167, 187, 194, 204, 212, 213, 219, 221, 237, 238, 244, 306, 340, 367, 382, 384, 418, 452, 454, 456, 483, 487], "sum_": 10, "sum_along_diagon": 454, "sum_of_weight": 55, "summari": 476, "summat": [95, 100, 101, 167, 205, 221, 351, 452], "suppli": [118, 123, 197, 365, 394], "support": [3, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 39, 40, 42, 43, 44, 45, 46, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 73, 74, 76, 77, 78, 80, 85, 86, 94, 96, 98, 100, 102, 103, 104, 105, 106, 107, 109, 111, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 162, 163, 168, 172, 173, 174, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 299, 331, 344, 345, 347, 349, 350, 352, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 419, 421, 423, 429, 433, 434, 435, 438, 440, 441, 444, 445, 446, 450, 451, 465, 466, 470, 474, 475, 491], "surnam": 98, "surpris": [119, 120, 121], "svd": [6, 187, 193, 196, 199], "swap": [98, 114, 117, 447], "swapax": [6, 96, 232, 483], "swapped_cod": 98, "swapped_dt": 98, "sy": 98, "sycl": [0, 3, 23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "sycl_context": 96, "sycl_devic": 96, "sycl_queu": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "sycldevic": [23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "syclqueu": [23, 36, 39, 40, 41, 42, 43, 44, 48, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 299, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 457, 459, 463, 469, 474, 475], "symmetr": [118, 124, 126, 127, 186, 189, 190, 191, 192, 196, 199, 203], "symmetri": [10, 113, 118, 123, 124, 127], "syntact": [89, 460, 464], "syntax": 483, "sys_is_l": 98, "system": [3, 4, 202], "t": [10, 69, 80, 96, 98, 118, 186, 189, 191, 194, 341, 346, 407, 456], "t1": 491, "tabl": [2, 9, 476], "tack": 98, "take": [6, 68, 96, 110, 181, 220, 353, 361, 421, 430, 431, 449, 467, 468, 483, 491], "take_along_axi": [6, 31, 32, 33, 66, 361, 448], "taken": [55, 91, 92, 99, 101, 118, 124, 125, 126, 127, 128, 130, 158, 159, 221, 243, 245, 431, 444, 454, 457, 459, 463, 470, 471], "tall": 131, "tan": [6, 26, 28, 29, 30, 45, 49, 50, 51, 77, 435, 451], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 435, 436, 450, 451], "tanh": [6, 14, 25, 30, 51, 78, 436, 450], "target": [48, 63, 96, 299, 360], "target_devic": 96, "tau": 200, "tbb": 4, "tempfil": 147, "temporari": [147, 491], "temporaryfil": 147, "ten": 375, "tensor": [43, 96, 100, 101, 145, 204, 205, 235, 236, 239, 241, 242, 359, 452], "tensordot": [6, 95, 100, 167, 204, 205, 221, 351], "tensorinv": [6, 205], "tensorsolv": [6, 204], "term": [10, 15, 94, 101, 113, 114, 116, 119, 120, 121, 124, 127, 233, 445, 465], "test": [0, 2, 16, 17, 21, 104, 156, 157, 170, 172, 173, 174, 175, 176, 184, 185, 242, 346, 347, 367, 483, 487], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [146, 147, 149, 150, 207], "th": [84, 87, 90, 92, 96, 99, 111, 155, 166, 225, 341, 348, 431, 455, 458, 460, 462, 464], "than": [36, 83, 84, 96, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 137, 138, 141, 148, 156, 157, 159, 160, 161, 183, 184, 185, 194, 196, 199, 200, 237, 238, 242, 244, 322, 346, 353, 357, 423, 431, 433, 442, 443, 446, 452, 454, 466, 468, 483, 491], "thei": [17, 38, 98, 169, 191, 194, 428, 430, 452, 456, 459, 463, 468, 469, 472, 483], "them": [68, 483], "theor": 189, "theoret": 101, "therefor": [113, 127, 148, 190, 192], "theta": 456, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 50, 67, 69, 73, 79, 82, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 137, 138, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 171, 178, 181, 190, 192, 194, 197, 198, 201, 206, 207, 210, 212, 213, 218, 219, 220, 221, 222, 228, 230, 232, 234, 235, 236, 239, 241, 242, 244, 299, 304, 309, 312, 322, 328, 341, 346, 353, 357, 360, 361, 398, 400, 414, 418, 419, 421, 426, 428, 443, 446, 448, 449, 453, 456, 460, 464, 467, 468, 469, 472, 473], "thing": 448, "third": [68, 69, 97, 114, 161, 428, 443, 472], "those": [10, 67, 195, 361], "though": 119, "thousand": 375, "three": [52, 53, 54, 108, 195, 220, 365, 401, 452, 467], "threshold": 196, "through": [40, 98, 160, 181, 189, 191, 194, 220, 483], "throw": 382, "thu": [10, 118, 124, 126, 453], "tile": [6, 420, 487], "time": [0, 10, 15, 17, 29, 37, 38, 50, 57, 59, 60, 74, 92, 94, 95, 104, 114, 116, 118, 120, 121, 123, 125, 126, 128, 130, 139, 141, 142, 143, 144, 156, 157, 158, 162, 167, 169, 174, 182, 183, 184, 185, 194, 212, 213, 214, 216, 217, 223, 229, 230, 233, 345, 347, 355, 356, 367, 382, 419, 423, 445, 449, 452, 453, 465, 467, 471], "time_dpnp": 0, "time_numpi": 0, "timedelta": 98, "timeit": 100, "timestep": 115, "tini": 132, "titl": 98, "tm": 144, "to_begin": 99, "to_devic": 96, "to_end": 99, "tobyt": 6, "todo": 385, "tofil": [6, 147], "togeth": [17, 69, 98, 119, 169, 181, 443, 473], "tol": [196, 383, 416], "toler": [17, 37, 169, 416], "tolist": 6, "too": [4, 114, 116, 120, 121, 125, 126, 128, 130, 473], "toolkit": 3, "tostr": 6, "total": [6, 79, 83, 96, 319, 437, 444, 470], "toward": [35, 65, 133, 140, 141, 159, 160, 230, 345, 419, 424, 427, 466], "trace": [6, 87, 90, 91, 96, 100, 483], "traceback": [22, 442], "trail": 461, "transfer": 96, "transform": [101, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 476], "transpos": [6, 34, 96, 100, 186, 191, 232, 247, 483, 487], "trapezoid": [84, 446], "trapz": 6, "treat": [17, 118, 124, 126, 147, 155, 169, 190, 192, 194, 197, 207, 237, 238, 242, 244, 357, 361, 430, 449, 453, 467, 468, 483], "tri": 6, "trial": 367, "triangl": [87, 162, 220, 418, 457, 458, 459, 460, 462, 463, 464], "triangular": [6, 186, 190, 192, 200, 220, 459, 460, 463, 464], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 77, 78, 435, 436, 450, 451, 487], "tril": [6, 87, 220, 457, 459, 460, 463], "tril_indic": [6, 220, 460, 463], "tril_indices_from": [6, 464], "trili": 460, "trili1": 460, "trim": [114, 116, 120, 121, 125, 126, 128, 130, 461], "trim_zero": 6, "triu": [6, 87, 220, 457, 459, 463, 464], "triu_indic": [6, 220, 459, 464], "triu_indices_from": [6, 460], "triui": 464, "triuim1": 464, "trivial": [189, 449], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 63, 64, 65, 70, 71, 73, 74, 75, 77, 78, 79, 80, 84, 85, 86, 93, 94, 96, 98, 100, 101, 104, 106, 107, 108, 109, 110, 112, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 153, 156, 157, 158, 159, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 193, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 251, 294, 295, 299, 304, 316, 317, 318, 323, 335, 337, 342, 344, 345, 346, 347, 353, 354, 355, 356, 357, 358, 361, 363, 364, 370, 417, 418, 419, 421, 423, 424, 429, 431, 433, 434, 435, 436, 440, 441, 444, 445, 446, 449, 450, 451, 452, 456, 465, 466, 467, 469, 470, 473], "true_divid": [6, 94], "trunc": [6, 35, 65, 133, 140, 424, 427], "truncat": [35, 65, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 133, 140, 403, 424, 427, 466], "trust": [235, 236], "truth": [57, 58, 59, 60, 104, 156, 157, 168, 184, 185, 214, 215, 216, 217, 347, 483, 487], "try": [4, 41], "tukei": 10, "tup": [68, 97, 161, 428, 472], "tupl": [16, 21, 22, 31, 32, 36, 39, 40, 41, 42, 44, 55, 62, 73, 79, 82, 87, 88, 89, 90, 96, 98, 101, 108, 117, 122, 136, 145, 148, 151, 152, 153, 155, 159, 160, 166, 171, 178, 181, 182, 198, 200, 205, 206, 218, 219, 220, 221, 222, 224, 226, 227, 228, 239, 240, 241, 242, 243, 244, 245, 331, 341, 346, 348, 357, 418, 420, 421, 425, 432, 442, 444, 446, 453, 455, 459, 460, 463, 464, 469, 470, 483], "turn": 68, "twister": 365, "two": [10, 17, 37, 52, 53, 57, 58, 59, 60, 72, 76, 81, 90, 91, 92, 95, 96, 98, 100, 101, 108, 113, 114, 116, 119, 120, 121, 124, 125, 126, 128, 130, 142, 143, 155, 167, 168, 169, 182, 190, 194, 197, 202, 214, 216, 217, 221, 222, 223, 228, 229, 232, 239, 241, 322, 338, 351, 365, 394, 424, 427, 431, 447, 452, 454, 459, 460, 463, 464, 471], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 308, 312, 320, 328, 332, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 487], "type_nam": 0, "typeerror": [55, 75, 96, 145, 331], "typenam": 6, "typestr": 98, "typic": [17, 118, 169, 430, 483], "u": [98, 186, 190, 192, 203, 220, 242, 244, 467], "u1": [98, 146, 147], "u16": 98, "u4": 63, "u8": 98, "ufunc": [2, 476, 483], "uint64": 98, "uint8": [98, 146, 147], "uk": 10, "un": 98, "unari": 483, "unchang": 130, "undefin": [20, 96, 322], "underli": [57, 59, 60, 421], "undo": [10, 121], "undocu": 98, "unexpect": [242, 244], "unicod": 98, "uniform": [6, 98, 155, 159, 160, 218, 365, 392, 395, 397, 398, 400], "uniformli": [218, 365, 409], "uniniti": [36, 102, 103, 151, 349, 474], "union1d": 6, "uniqu": [6, 55, 56, 82, 93, 98, 219, 224, 232, 240, 243, 245, 418, 420, 444, 470], "unique_count": 467, "unique_indic": 467, "unique_invers": 467, "unit": [96, 115, 129, 181, 189, 195, 201, 336], "unitari": [10, 155, 200, 203], "uniti": 159, "univ": 10, "univers": [2, 476, 483], "unless": [16, 21, 48, 83, 84, 96, 100, 159, 189, 196, 198, 218, 237, 238, 242, 244, 299, 357, 446, 467], "unlik": [33, 96, 129, 328, 331, 438], "unmodifi": 160, "unpackbit": 6, "unravel_index": [6, 31, 32], "unsaf": [48, 63, 69, 75, 96, 100, 161, 221, 299, 428, 443, 472], "unscal": 10, "unsign": [98, 357, 446], "unspecifi": 421, "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 67, 74, 77, 78, 85, 86, 94, 106, 107, 109, 139, 140, 141, 142, 143, 144, 145, 158, 162, 168, 183, 209, 210, 211, 212, 213, 223, 229, 230, 231, 233, 344, 345, 354, 355, 356, 358, 363, 364, 417, 419, 423, 424, 429, 433, 434, 435, 436, 445, 450, 451, 465, 466], "until": [101, 425, 426], "unwrap": [6, 85, 363], "up": [4, 10, 98, 100, 138, 449, 460, 467], "updat": 4, "uplo": [190, 192], "upon": [96, 336], "upper": [87, 111, 159, 160, 186, 190, 192, 200, 220, 457, 459, 460, 462, 463, 464], "us": [4, 10, 15, 22, 23, 29, 34, 36, 39, 40, 41, 42, 43, 44, 47, 48, 50, 57, 58, 59, 60, 63, 67, 69, 73, 81, 83, 84, 87, 88, 90, 91, 94, 96, 98, 100, 101, 102, 103, 104, 108, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 168, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 196, 197, 198, 199, 206, 207, 213, 214, 216, 218, 220, 221, 222, 224, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 253, 299, 304, 312, 331, 344, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 361, 365, 368, 370, 371, 381, 386, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 406, 409, 414, 416, 419, 420, 421, 423, 425, 430, 431, 433, 439, 444, 445, 446, 448, 449, 452, 453, 454, 456, 457, 459, 460, 463, 464, 465, 467, 469, 470, 473, 474, 475, 483, 491], "usabl": 139, "usag": [3, 4, 115, 129], "use_getitem": 98, "use_setitem": 98, "user": [98, 234], "usm": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 442, 457, 459, 463, 469, 474, 475], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475], "usm_typ": [23, 36, 39, 40, 41, 42, 43, 44, 73, 87, 88, 90, 96, 102, 103, 111, 115, 129, 146, 147, 148, 149, 150, 151, 152, 153, 163, 166, 206, 207, 218, 220, 227, 304, 348, 349, 350, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 457, 459, 463, 469, 474, 475], "usual": [88, 96, 98, 221, 331], "util": 476, "v": [72, 87, 90, 96, 98, 189, 190, 330, 360, 430], "v0": 6, "v1": 6, "v10": 98, "v9": 6, "val": [96, 131, 134, 289, 324, 353], "valid": [76, 108, 220, 447, 459, 460, 463, 464], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 92, 93, 94, 96, 98, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 118, 119, 124, 126, 127, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 177, 178, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 249, 250, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 286, 288, 289, 291, 292, 293, 296, 297, 299, 301, 304, 309, 311, 322, 324, 331, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 375, 392, 393, 409, 415, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 433, 434, 435, 438, 440, 441, 444, 445, 446, 448, 449, 450, 451, 454, 456, 459, 463, 465, 466, 467, 468, 470, 473, 474, 475, 483, 487], "value2": 98, "valueerror": [22, 36, 40, 41, 145, 235, 236, 421, 442], "vander": 6, "vandermond": 469, "var": [6, 96, 224, 240, 243, 245, 444, 483], "vararg": 155, "vari": [10, 16, 20, 21, 91, 101, 114, 116, 118, 119, 120, 121, 123, 124, 127, 130, 148, 166, 187, 189, 190, 194, 198, 234, 240, 243, 245, 416], "variabl": [80, 194, 202], "varianc": [96, 224, 240, 243, 245, 342, 444, 470, 487], "variou": 491, "vdot": [6, 95, 221], "vector": [81, 100, 148, 166, 167, 181, 187, 196, 197, 198, 203, 221, 226, 351, 471, 487], "vendor": 4, "veri": [3, 10, 17, 169, 226, 234], "verif": 0, "verifi": 186, "version": [4, 79, 96, 98, 135, 311, 346], "vertic": [68, 69, 91, 97, 131, 136, 137, 161, 428, 443, 472], "vetterlin": 10, "vh": 203, "via": 124, "view": [6, 52, 53, 54, 61, 87, 91, 96, 108, 114, 116, 120, 121, 125, 126, 128, 130, 136, 137, 138, 226, 232, 247, 328, 341, 361, 421, 442, 447, 455], "violat": 75, "void": 98, "void640": 98, "von": 410, "vonmis": 6, "vsplit": [6, 69], "vstack": [6, 68, 69, 97, 161, 194, 428, 443], "w": [10, 55, 189, 190, 191, 192, 195], "wa": [10, 82, 98, 197, 219, 239, 241, 243, 245, 365, 406, 418, 444, 470], "wai": [3, 4, 10, 96, 101, 113, 119, 120, 121, 126, 147, 322, 452], "wald": 6, "walk": 98, "want": [4, 449], "warn": [98, 235, 236, 383], "we": [73, 88, 91, 101, 131, 194, 220, 361, 449, 456], "weibul": [6, 413], "weight": [55, 56, 80, 159, 160, 224, 240, 446], "well": [98, 100, 147, 159, 160, 357, 367, 384, 403], "were": [69, 148, 365, 394, 443, 468], "what": [10, 48, 63, 69, 75, 96, 98, 100, 104, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 161, 170, 221, 299, 367, 384, 428, 443, 472, 483], "when": [10, 22, 23, 36, 37, 39, 40, 42, 44, 47, 48, 55, 73, 75, 93, 96, 98, 100, 113, 124, 126, 127, 142, 143, 153, 158, 189, 198, 200, 206, 213, 218, 220, 221, 230, 237, 238, 239, 241, 242, 244, 299, 419, 424, 426, 427, 431, 448, 452, 456, 467, 473, 491], "whenev": [108, 447, 455], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 64, 65, 67, 70, 71, 73, 74, 75, 77, 78, 82, 85, 86, 87, 88, 90, 92, 93, 94, 96, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 118, 124, 125, 126, 129, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 183, 184, 185, 186, 194, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 233, 239, 240, 241, 242, 243, 244, 245, 294, 295, 299, 304, 316, 317, 318, 323, 330, 335, 337, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 363, 364, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 409, 417, 418, 419, 423, 424, 426, 429, 430, 431, 433, 434, 435, 436, 440, 441, 444, 445, 446, 450, 451, 454, 455, 457, 459, 463, 465, 466, 468, 469, 470, 474, 475], "wherev": 75, "whether": [16, 17, 21, 37, 82, 93, 98, 145, 169, 170, 186, 200, 206, 234, 242, 244, 421, 434, 467], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 48, 55, 61, 69, 73, 75, 79, 82, 83, 84, 87, 88, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 103, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 136, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 163, 166, 172, 173, 174, 175, 176, 186, 189, 196, 198, 205, 207, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 299, 304, 346, 348, 349, 350, 357, 360, 365, 387, 392, 393, 394, 395, 396, 397, 398, 400, 406, 409, 418, 420, 425, 431, 437, 438, 442, 443, 444, 446, 448, 454, 455, 456, 457, 458, 459, 462, 463, 466, 468, 469, 470, 473, 474, 475, 483, 491], "whichev": 167, "while": [10, 128, 130, 159, 160, 224, 240, 243, 245, 346, 353, 357, 425, 444, 446, 457, 470], "whitespac": [147, 150], "who": 6, "whole": [114, 116, 120, 121, 125, 126, 128, 130, 459, 463], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 91, 98, 110, 111, 131, 187, 190, 191, 192, 204, 220, 232, 425, 460, 464], "why": 124, "wide": 131, "width": [98, 159, 160], "wild": [367, 384], "window": [4, 115, 129], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 45, 46, 49, 50, 51, 57, 58, 59, 60, 64, 65, 68, 69, 70, 71, 74, 77, 78, 82, 94, 96, 97, 104, 106, 107, 109, 112, 133, 139, 140, 141, 142, 143, 144, 156, 157, 158, 161, 162, 165, 168, 169, 172, 173, 174, 175, 176, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 228, 229, 230, 231, 233, 239, 241, 242, 303, 344, 345, 347, 354, 355, 356, 358, 415, 417, 419, 423, 424, 427, 428, 429, 433, 434, 435, 436, 440, 441, 443, 445, 450, 451, 465, 466, 472, 483, 487, 491], "within": [17, 23, 37, 48, 96, 100, 118, 119, 120, 121, 123, 124, 126, 159, 160, 169, 299, 360, 365, 409], "without": [91, 96, 102, 131, 341, 414, 421, 483], "won": 98, "word": [119, 120, 121, 124, 126, 140, 191, 365, 409], "work": [4, 35, 47, 449, 483], "world": [98, 367, 384], "would": [33, 69, 96, 98, 148, 166, 197, 220, 221, 322, 365, 438, 443, 449, 455, 468], "wrap": [85, 96, 131, 324, 339, 360, 363, 430, 448, 449, 468], "wrapper": 96, "write": [87, 91, 96, 131, 147, 312, 421], "written": [79, 82, 131, 147, 219, 418, 473], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 58, 61, 62, 64, 65, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 85, 86, 87, 90, 92, 93, 96, 98, 99, 102, 103, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 120, 121, 122, 128, 129, 130, 133, 134, 135, 140, 146, 147, 148, 149, 151, 152, 153, 155, 163, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 187, 191, 194, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 226, 227, 231, 232, 234, 299, 304, 313, 314, 320, 326, 331, 332, 344, 346, 348, 349, 350, 354, 357, 358, 359, 363, 364, 383, 389, 414, 415, 417, 418, 420, 424, 425, 426, 427, 429, 431, 433, 434, 435, 436, 440, 441, 442, 447, 448, 450, 451, 456, 457, 466, 469, 473, 474, 475], "x0": [42, 44, 73, 90, 350, 469, 475], "x00": 147, "x01": [146, 147], "x02": [146, 147], "x03": [146, 147], "x04": [146, 147], "x05": 146, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 45, 48, 49, 50, 56, 57, 59, 60, 66, 74, 76, 94, 96, 104, 139, 141, 142, 143, 144, 156, 157, 158, 162, 181, 183, 184, 185, 212, 213, 214, 215, 216, 217, 221, 223, 225, 226, 229, 230, 231, 233, 299, 344, 345, 347, 352, 354, 355, 356, 362, 402, 419, 423, 425, 445, 465], "x1_i": [15, 29, 50, 57, 59, 60, 74, 94, 104, 139, 141, 144, 156, 157, 162, 183, 184, 185, 212, 213, 214, 216, 217, 230, 233, 347, 355, 356, 419, 423, 445, 465], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 45, 49, 50, 57, 59, 60, 74, 76, 94, 104, 139, 141, 142, 143, 144, 156, 157, 158, 162, 181, 183, 184, 185, 212, 213, 214, 215, 216, 217, 221, 223, 226, 229, 230, 233, 344, 345, 347, 354, 355, 356, 419, 423, 425, 440, 445, 465], "x2_i": [15, 29, 50, 57, 59, 60, 74, 94, 104, 139, 141, 144, 156, 157, 162, 183, 184, 185, 212, 213, 214, 216, 217, 230, 233, 347, 355, 356, 419, 423, 445, 465], "x3": [16, 21, 139], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 45, 46, 49, 51, 58, 64, 65, 70, 71, 77, 78, 106, 107, 109, 140, 165, 168, 208, 209, 210, 211, 215, 344, 354, 358, 415, 417, 424, 427, 429, 433, 434, 435, 436, 440, 441, 450, 451, 466], "xi": [211, 226], "xn": [181, 226], "xor": [57, 58, 59, 60, 168, 214, 215, 216, 217], "xv": 226, "xx": 226, "xy": 226, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 39, 40, 41, 42, 44, 45, 46, 49, 51, 52, 61, 73, 80, 81, 90, 96, 98, 99, 102, 103, 108, 111, 115, 129, 146, 147, 148, 149, 151, 152, 153, 155, 163, 175, 176, 187, 194, 206, 207, 218, 226, 227, 231, 234, 304, 320, 328, 331, 348, 349, 350, 456, 457, 469, 473, 474, 475], "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 45, 46, 49, 51, 242, 244, 346, 365, 473, 483], "you": [4, 91, 118, 123, 124, 220, 448, 449, 483, 491], "your": [4, 91, 491], "yv": 226, "yy": 226, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 39, 40, 41, 42, 44, 45, 46, 49, 51, 73, 90, 102, 103, 111, 115, 129, 146, 147, 148, 149, 151, 152, 153, 163, 206, 207, 218, 226, 227, 348, 349, 350, 375, 457, 469, 474, 475], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 65, 79, 82, 88, 92, 96, 102, 103, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 140, 147, 151, 152, 163, 165, 170, 171, 175, 176, 177, 178, 183, 189, 190, 192, 194, 195, 196, 199, 203, 219, 220, 222, 224, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 320, 321, 331, 332, 336, 343, 346, 349, 350, 357, 365, 367, 395, 397, 398, 400, 415, 416, 418, 424, 427, 433, 438, 444, 446, 452, 457, 458, 461, 462, 466, 470, 473, 475], "zeros_lik": [6, 36, 86, 103, 152, 350, 364, 474], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 248, "__add__": 249, "__and__": 250, "__bool__": 251, "__complex__": 252, "__copy__": 253, "__eq__": 254, "__float__": 255, "__floordiv__": 256, "__ge__": 257, "__getitem__": 258, "__gt__": 259, "__iadd__": 260, "__iand__": 261, "__ifloordiv__": 262, "__ilshift__": 263, "__imod__": 264, "__imul__": 265, "__int__": 266, "__invert__": 267, "__ior__": 268, "__ipow__": 269, "__irshift__": 270, "__isub__": 271, "__itruediv__": 272, "__ixor__": 273, "__le__": 274, "__len__": 275, "__lshift__": 276, "__lt__": 277, "__matmul__": 278, "__mod__": 279, "__mul__": 280, "__ne__": 281, "__neg__": 282, "__new__": 283, "__or__": 284, "__pos__": 285, "__pow__": 286, "__repr__": 287, "__rshift__": 288, "__setitem__": 289, "__str__": 290, "__sub__": 291, "__truediv__": 292, "__xor__": 293, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 480, "add": 15, "algebra": [6, 478], "all": [16, 294], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 295], "api": [1, 476], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 296], "argmin": [32, 297], "argsort": [33, 298], "argwher": 34, "arithmet": [481, 483, 485], "around": 35, "arrai": [6, 7, 9, 36, 477, 479, 480, 483], "array_equ": 37, "array_equiv": 38, "asanyarrai": 39, "asarrai": 40, "asarray_chkfinit": 41, "ascontiguousarrai": 42, "asfarrai": 43, "asfortranarrai": 44, "asin": 45, "asinh": 46, "asnumpi": 47, "astyp": [48, 299], "atan": 49, "atan2": 50, "atanh": 51, "atleast_1d": 52, "atleast_2d": 53, "atleast_3d": 54, "attribut": 483, "avail": [9, 491], "averag": [55, 490], "backend": 1, "background": 10, "basic": [480, 485], "beta": 366, "binari": 5, "bincount": 56, "binomi": 367, "bit": [5, 491], "bitwise_and": 57, "bitwise_not": 58, "bitwise_or": 59, "bitwise_xor": 60, "broadcast_arrai": 61, "broadcast_to": 62, "build": [4, 7], "byte": 368, "c": 1, "calcul": 483, "can_cast": 63, "cbrt": 64, "ceil": 65, "chang": 480, "channel": 4, "chisquar": 369, "choic": 370, "choleski": 186, "choos": [66, 300], "class": 7, "clip": [67, 301], "co": 77, "column_stack": 68, "comparison": [6, 479, 483, 491], "complex": 481, "concaten": 69, "cond": 187, "conda": 4, "conj": [70, 302], "conjug": [71, 303], "construct": 483, "control": 0, "convers": 483, "convolv": 72, "copi": [73, 304], "copysign": 74, "copyto": 75, "correl": [76, 490], "cosh": 78, "count": 488, "count_nonzero": 79, "cov": 80, "creat": 8, "creation": 7, "cross": 81, "cumlogsumexp": 82, "cumprod": [83, 305], "cumsum": [84, 306], "cupi": 6, "data": [0, 2, 7, 8, 9, 477, 483, 486], "decomposit": 478, "deg2rad": 85, "degre": 86, "det": 188, "detail": 10, "develop": 2, "devic": 4, "diag": 87, "diag_indic": 88, "diag_indices_from": 89, "diagflat": 90, "diagon": [91, 307], "diff": 92, "differ": 481, "digit": 93, "dimens": [10, 480], "dimension": [6, 483], "dirichlet": 371, "discret": 6, "distribut": 486, "divid": 94, "dot": 95, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 486], "dpnp_arrai": 96, "driver": 4, "dstack": 97, "dtype": [98, 308], "ediff1d": 99, "eig": 189, "eigenvalu": 478, "eigh": 190, "eigval": 191, "eigvalsh": 192, "einsum": 100, "einsum_path": 101, "element": [5, 480], "empti": 102, "empty_lik": 103, "equal": 104, "equat": 478, "erf": 105, "error": 489, "exampl": [0, 4], "exist": 7, "exp": 106, "exp2": 107, "expand_dim": 108, "expm1": 109, "expon": 481, "exponenti": 372, "extens": 2, "extract": 110, "extrema": 481, "ey": 111, "f": 373, "fab": 112, "fft": [10, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "fft2": 114, "fftfreq": 115, "fftn": 116, "fftshift": 117, "fill": 309, "fill_diagon": 131, "find": 481, "finfo": 132, "fix": 133, "flag": 310, "flat": 311, "flatit": 134, "flatnonzero": 135, "flatten": 312, "flip": 136, "fliplr": 137, "flipud": 138, "float": [481, 491], "float_pow": 139, "floor": 140, "floor_divid": 141, "fmax": 142, "fmin": 143, "fmod": 144, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 145, "frombuff": 146, "fromfil": 147, "fromfunct": 148, "fromit": 149, "fromstr": 150, "full": 151, "full_lik": 152, "function": [10, 479, 481, 489, 490, 491], "gamma": 374, "gener": [477, 486], "geometr": 375, "geomspac": 153, "get_includ": 154, "gradient": 155, "greater": 156, "greater_equ": 157, "guid": 4, "gumbel": 376, "handl": 481, "heavisid": 158, "helper": 10, "hermitian": 10, "hfft": 118, "higher": 10, "histogram": [159, 490], "histogram_bin_edg": 160, "hstack": 161, "hyperbol": 481, "hypergeometr": 377, "hypot": 162, "ident": 163, "ifft": 119, "ifft2": 120, "ifftn": 121, "ifftshift": 122, "ihfft": 123, "iinfo": 164, "imag": [165, 313], "implement": 10, "index": [477, 483], "indic": 166, "infin": 479, "inform": [2, 8, 10], "inner": 167, "insert": 477, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 193, "invert": 168, "irfft": 124, "irfft2": 125, "irfftn": 126, "isclos": 169, "iscomplex": 170, "iscomplexobj": 171, "isfinit": 172, "isinf": 173, "isnan": 174, "isneginf": 175, "isposinf": 176, "isreal": 177, "isrealobj": 178, "isscalar": 179, "issubdtyp": 180, "item": [314, 483], "items": 315, "iter": 477, "ix_": 181, "join": 480, "kind": 480, "kron": 182, "laplac": 378, "layout": 483, "left_shift": 183, "less": 184, "less_equ": 185, "level": 6, "librari": 0, "like": [477, 480], "linalg": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "linear": [6, 478], "linspac": 206, "loadtxt": 207, "log": 208, "log10": 209, "log1p": 210, "log2": 211, "logaddexp": 212, "logaddexp2": 213, "logarithm": 481, "logic": 479, "logical_and": 214, "logical_not": 215, "logical_or": 216, "logical_xor": 217, "logist": 379, "lognorm": 380, "logseri": 381, "logspac": 218, "logsumexp": 219, "lstsq": 194, "manipul": [480, 483], "mask_indic": 220, "math": 491, "mathemat": 481, "matmul": 221, "matric": 7, "matrix": [7, 478, 483], "matrix_pow": 195, "matrix_rank": 196, "max": [222, 316], "maximum": 223, "mean": [224, 317], "median": 225, "memori": 483, "meshgrid": 226, "method": 483, "mgrid": 227, "min": [228, 318], "minimum": 229, "miscellan": [8, 481, 482], "mod": 230, "modf": 231, "modul": [6, 485], "moveaxi": 232, "multi": [6, 483], "multi_dot": 197, "multinomi": 382, "multipl": 483, "multipli": 233, "multivariate_norm": 383, "nan": 479, "nan_to_num": 234, "nanargmax": 235, "nanargmin": 236, "nancumprod": 237, "nancumsum": 238, "nanmax": 239, "nanmean": 240, "nanmin": 241, "nanprod": 242, "nanstd": 243, "nansum": 244, "nanvar": 245, "nbyte": 319, "ndarrai": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 483], "ndim": [320, 343], "neg": 344, "negative_binomi": 384, "nextaft": 345, "noncentral_chisquar": 385, "noncentral_f": 386, "nonzero": [321, 346], "norm": [198, 478], "normal": [10, 387], "not_equ": 347, "number": [478, 480, 481], "numer": 7, "numpi": [2, 6], "ogrid": 348, "ones": 349, "ones_lik": 350, "oper": [5, 477, 479, 480, 481, 483, 491], "order": 490, "other": [478, 481, 483], "outer": 351, "output": 5, "over": 477, "overview": 3, "pack": 5, "packag": [4, 485], "pad": 484, "parallel": [0, 2], "pareto": 388, "partit": [322, 352], "permut": [389, 486], "pinv": 199, "place": 353, "point": 481, "poisson": 390, "poly1d": 485, "polynomi": 485, "polyutil": 485, "posit": 354, "pow": 355, "power": [356, 391], "prod": [323, 357], "product": [478, 481], "proj": 358, "ptp": 359, "put": [324, 360], "put_along_axi": 361, "putmask": 362, "python": 4, "qr": 200, "quick": 4, "r": 4, "rad2deg": 363, "radian": 364, "rand": 392, "randint": 393, "randn": 394, "random": [6, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 486], "random_integ": 396, "random_sampl": 397, "randomst": 365, "ranf": 398, "rang": 7, "ration": 481, "ravel": [325, 414], "rayleigh": 399, "real": [10, 326, 415], "real_if_clos": 416, "rearrang": 480, "reciproc": 417, "reduce_hypot": 418, "refer": [1, 476], "remaind": 419, "remov": 480, "repeat": [327, 420], "reshap": [328, 421], "result_typ": 422, "rfft": 127, "rfft2": 128, "rfftfreq": 129, "rfftn": 130, "right_shift": 423, "rint": 424, "roll": 425, "rollaxi": 426, "round": [329, 427, 481], "routin": [7, 8, 10, 477, 480, 481, 482, 487], "row_stack": 428, "rsqrt": 429, "sampl": [6, 400, 486], "scikit": 4, "search": 488, "searchsort": [330, 430], "seed": 401, "select": [431, 483], "shape": [7, 331, 432, 480, 483], "shuffl": 402, "sign": 433, "signbit": 434, "simpl": 486, "sin": 435, "sinh": 436, "size": [332, 437], "slogdet": 201, "solv": [202, 478], "sort": [333, 438, 488], "sort_complex": 439, "special": [481, 483, 489], "split": 480, "sqrt": 440, "squar": 441, "squeez": [334, 442], "stack": 443, "standard": 10, "standard_cauchi": 403, "standard_exponenti": 404, "standard_gamma": 405, "standard_norm": 406, "standard_t": 407, "start": 4, "statist": 490, "std": [335, 444], "stride": 336, "subtract": 445, "sum": [337, 446, 481], "summari": 6, "svd": 203, "swapax": [338, 447], "t": 247, "tabl": 6, "take": [339, 448], "take_along_axi": 449, "tan": 450, "tanh": 451, "tensordot": 452, "tensorinv": 204, "tensorsolv": 205, "test": [4, 8, 479], "tile": [453, 480], "trace": [340, 454], "transform": [6, 10], "transpos": [341, 455, 480], "trapezoid": 456, "tri": 457, "triangular": 408, "trigonometr": [481, 491], "tril": 458, "tril_indic": 459, "tril_indices_from": 460, "trim_zero": 461, "triu": 462, "triu_indic": 463, "triu_indices_from": 464, "true_divid": 465, "trunc": 466, "truth": 479, "twiddl": 491, "type": [8, 9, 479, 483], "ufunc": 491, "uniform": 409, "uniqu": 467, "univers": 491, "unwrap": 468, "util": 482, "valu": [7, 479], "vander": 469, "var": [342, 470], "varianc": 490, "vdot": 471, "vector": 478, "vonmis": 410, "vstack": 472, "wald": 411, "weibul": 412, "where": 473, "wise": 5, "zero": 474, "zeros_lik": 475, "zipf": 413}})