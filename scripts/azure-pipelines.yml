jobs:

- job: myCodeStyle
  displayName: Code style

  pool:
    vmImage: 'ubuntu-20.04'

  steps:

  - bash: |
      . ./scripts/set_ci_env.sh
      echo ========================= Conda ENV ===============================
      conda create -q -y -n CondaCodeStyle python=3.8 conda-build conda-verify \
                                                      numpy cython pytest \
                                                      pycodestyle autopep8 black
      . /usr/share/miniconda/etc/profile.d/conda.sh
      conda activate CondaCodeStyle
      echo ========================= Run style check ===============================
      # variables are not used but have to be installed for setuptools
      export ONEAPI_ROOT=/opt/intel
      export MKLROOT=/opt/intel
      python ./setup.py style
      echo ========================= style check finished ===============================

- job: test_valgrind
  displayName: Valgrind

  pool:
    vmImage: 'ubuntu-20.04'

  steps:

  - bash: |
      . ./scripts/set_ci_env.sh
      echo ========================= build DPNP ===============================
      ./0.build.sh
      echo ========================= run valgrind ===============================
      export PYTHONMALLOC=malloc
      valgrind --show-leak-kinds=definite --log-file=/tmp/valgrind-output            \
               python -m pytest tests/third_party/cupy/math_tests/test_arithmetic.py \
                                -vv --valgrind --valgrind-log=/tmp/valgrind-output

- job: mycodecoverage
  displayName: Code coverage
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - bash: |
      . ./scripts/set_ci_env.sh
      echo ========================= Conda ENV ===============================
      conda create -q -y -n CondaCodeStyle python=3.8 conda-build conda-verify \
                                                      numpy cython pytest \
                                                      pycodestyle autopep8 \
                                                      cython pytest pytest-cov
      . /usr/share/miniconda/etc/profile.d/conda.sh
      conda activate CondaCodeStyle
      echo ========================= build DPNP ===============================
      ./0.build.sh
      echo ========================= run code coverage ===============================
      pytest --cov-report xml:coverage.xml --cov-report term-missing --cov=dpnp
      export CODECOV_TOKEN="1158b545-b00a-4a84-a6f9-2bc2c4265d8b"
      bash <(curl -s https://codecov.io/bash) -f coverage.xml

- job: ubuntu2004
  displayName: Ubuntu 20.04
  pool:
    vmImage: 'ubuntu-20.04'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  - bash: |
      . ./scripts/set_ci_env.sh
      echo ========================= build DPNP ===============================
      ./0.build.sh
      echo ========================= run pytest ===============================
      pytest

- job: make_package
  displayName: conda-build
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - bash: |
      ./scripts/install_system_deps.sh
      sudo apt-get install intel-oneapi-python
      sudo chmod -R a+w /opt/intel/oneapi/intelpython
      . /opt/intel/oneapi/setvars.sh
      ./scripts/install_python_deps.sh
      ./scripts/build_deps_dpctl.sh
      echo ========================= DPCTL version ===============================
      python -c "import dpctl as sw; print(f\"sw.version={sw.version}\nsw.version.version={sw.version.version}\nsw.get_include={sw.get_include()}\")"
      conda list
      echo ========================= make DPNP package ===============================
      #conda init bash
      #conda info
      #cat /home/vsts/.bashrc
      #bash -c "conda activate; conda-build conda-recipe/"
      #. /usr/share/miniconda/etc/profile.d/conda.sh
      #export PATH=/usr/share/miniconda/bin:$PATH
      conda-build conda-recipe/
      echo ========================= list files ===============================
      ls -l
