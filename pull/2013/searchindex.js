Search.setIndex({"alltitles": {"API Reference": [[464, null]], "Adding and removing elements": [[468, "adding-and-removing-elements"]], "Arithmetic": [[473, "arithmetic"]], "Arithmetic operations": [[469, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[471, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[465, null]], "Array Manipulation Routines": [[468, null]], "Array attributes": [[471, "array-attributes"]], "Array conversion": [[471, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[471, "array-methods"]], "Array type testing": [[467, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[479, "available-ufuncs"]], "Averages and variances": [[478, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[468, "basic-operations"]], "Basics": [[473, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[479, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[471, "calculation"]], "Changing array shape": [[468, "changing-array-shape"]], "Changing kind of array": [[468, "changing-kind-of-array"]], "Changing number of dimensions": [[468, "changing-number-of-dimensions"]], "Comparison": [[467, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[479, "comparison-functions"]], "Constructing arrays": [[471, "constructing-arrays"]], "Correlations": [[478, "correlations"]], "Counting": [[476, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[471, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[466, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[474, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[477, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[469, "exponents-and-logarithms"]], "Extrema finding": [[469, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[479, "floating-functions"]], "Floating point routines": [[469, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[465, "generating-index-arrays"]], "Handling complex numbers": [[469, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[478, "histograms"]], "Hyperbolic functions": [[469, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[471, "indexing-arrays"]], "Indexing-like operations": [[465, "indexing-like-operations"]], "Infinities and NaNs": [[467, "infinities-and-nans"]], "Inserting data into arrays": [[465, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[471, "item-selection-and-manipulation"]], "Iterating over arrays": [[465, "iterating-over-arrays"]], "Joining arrays": [[468, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [466, null]], "Logic Functions": [[467, null]], "Logic operations": [[467, "logic-operations"]], "Math operations": [[479, "math-operations"]], "Mathematical functions": [[469, null]], "Matrix and vector products": [[466, "matrix-and-vector-products"]], "Matrix eigenvalues": [[466, "matrix-eigenvalues"]], "Memory layout": [[471, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [469, "miscellaneous"]], "Miscellaneous routines": [[470, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[471, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[466, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[478, "order-statistics"]], "Other attributes": [[471, "other-attributes"]], "Other special functions": [[469, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[472, null]], "Permutations": [[474, "permutations"]], "Poly1d": [[473, "poly1d"]], "Polynomial Module": [[473, "polynomial-module"]], "Polynomial Package": [[473, "polynomial-package"]], "Polynomials": [[473, null]], "Polyutils": [[473, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[474, null]], "Random generator": [[474, "random-generator"]], "Rational routines": [[469, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[468, "rearranging-elements"]], "Rounding": [[469, "rounding"]], "Routines": [[475, null]], "Searching": [[476, "searching"]], "Shape manipulation": [[471, "shape-manipulation"]], "Simple random data": [[474, "simple-random-data"]], "Solving linear equations": [[466, "solving-linear-equations"]], "Sorting": [[476, "sorting"]], "Sorting, Searching, and Counting": [[476, null]], "Special Functions": [[477, null]], "Special methods": [[471, "special-methods"]], "Splitting arrays": [[468, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[478, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[469, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[468, "tiling-arrays"]], "Transpose-like operations": [[468, "transpose-like-operations"]], "Trigonometric functions": [[469, "trigonometric-functions"], [479, "trigonometric-functions"]], "Truth value testing": [[467, "truth-value-testing"]], "Type Promotion": [[10, "type-promotion"]], "Universal Functions (ufunc)": [[479, null]], "Utility": [[470, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.add": [[13, null]], "dpnp.all": [[14, null]], "dpnp.allclose": [[15, null]], "dpnp.amax": [[16, null]], "dpnp.amin": [[17, null]], "dpnp.angle": [[18, null]], "dpnp.any": [[19, null]], "dpnp.arange": [[20, null]], "dpnp.arccos": [[21, null]], "dpnp.arccosh": [[22, null]], "dpnp.arcsin": [[23, null]], "dpnp.arcsinh": [[24, null]], "dpnp.arctan": [[25, null]], "dpnp.arctan2": [[26, null]], "dpnp.arctanh": [[27, null]], "dpnp.argmax": [[28, null]], "dpnp.argmin": [[29, null]], "dpnp.argsort": [[30, null]], "dpnp.argwhere": [[31, null]], "dpnp.around": [[32, null]], "dpnp.array": [[33, null]], "dpnp.array_equal": [[34, null]], "dpnp.array_equiv": [[35, null]], "dpnp.asanyarray": [[36, null]], "dpnp.asarray": [[37, null]], "dpnp.ascontiguousarray": [[38, null]], "dpnp.asfarray": [[39, null]], "dpnp.asfortranarray": [[40, null]], "dpnp.asnumpy": [[41, null]], "dpnp.astype": [[42, null]], "dpnp.atleast_1d": [[43, null]], "dpnp.atleast_2d": [[44, null]], "dpnp.atleast_3d": [[45, null]], "dpnp.average": [[46, null]], "dpnp.bincount": [[47, null]], "dpnp.bitwise_and": [[48, null]], "dpnp.bitwise_not": [[49, null]], "dpnp.bitwise_or": [[50, null]], "dpnp.bitwise_xor": [[51, null]], "dpnp.broadcast_arrays": [[52, null]], "dpnp.broadcast_to": [[53, null]], "dpnp.can_cast": [[54, null]], "dpnp.cbrt": [[55, null]], "dpnp.ceil": [[56, null]], "dpnp.choose": [[57, null]], "dpnp.clip": [[58, null]], "dpnp.column_stack": [[59, null]], "dpnp.concatenate": [[60, null]], "dpnp.conj": [[61, null]], "dpnp.conjugate": [[62, null]], "dpnp.convolve": [[63, null]], "dpnp.copy": [[64, null]], "dpnp.copysign": [[65, null]], "dpnp.copyto": [[66, null]], "dpnp.correlate": [[67, null]], "dpnp.cos": [[68, null]], "dpnp.cosh": [[69, null]], "dpnp.count_nonzero": [[70, null]], "dpnp.cov": [[71, null]], "dpnp.cross": [[72, null]], "dpnp.cumlogsumexp": [[73, null]], "dpnp.cumprod": [[74, null]], "dpnp.cumsum": [[75, null]], "dpnp.deg2rad": [[76, null]], "dpnp.degrees": [[77, null]], "dpnp.diag": [[78, null]], "dpnp.diag_indices": [[79, null]], "dpnp.diag_indices_from": [[80, null]], "dpnp.diagflat": [[81, null]], "dpnp.diagonal": [[82, null]], "dpnp.diff": [[83, null]], "dpnp.digitize": [[84, null]], "dpnp.divide": [[85, null]], "dpnp.dot": [[86, null]], "dpnp.dpnp_array.dpnp_array": [[87, null]], "dpnp.dstack": [[88, null]], "dpnp.dtype": [[89, null]], "dpnp.ediff1d": [[90, null]], "dpnp.einsum": [[91, null]], "dpnp.einsum_path": [[92, null]], "dpnp.empty": [[93, null]], "dpnp.empty_like": [[94, null]], "dpnp.equal": [[95, null]], "dpnp.erf": [[96, null]], "dpnp.exp": [[97, null]], "dpnp.exp2": [[98, null]], "dpnp.expand_dims": [[99, null]], "dpnp.expm1": [[100, null]], "dpnp.extract": [[101, null]], "dpnp.eye": [[102, null]], "dpnp.fabs": [[103, null]], "dpnp.fft.fft": [[104, null]], "dpnp.fft.fft2": [[105, null]], "dpnp.fft.fftfreq": [[106, null]], "dpnp.fft.fftn": [[107, null]], "dpnp.fft.fftshift": [[108, null]], "dpnp.fft.hfft": [[109, null]], "dpnp.fft.ifft": [[110, null]], "dpnp.fft.ifft2": [[111, null]], "dpnp.fft.ifftn": [[112, null]], "dpnp.fft.ifftshift": [[113, null]], "dpnp.fft.ihfft": [[114, null]], "dpnp.fft.irfft": [[115, null]], "dpnp.fft.irfft2": [[116, null]], "dpnp.fft.irfftn": [[117, null]], "dpnp.fft.rfft": [[118, null]], "dpnp.fft.rfft2": [[119, null]], "dpnp.fft.rfftfreq": [[120, null]], "dpnp.fft.rfftn": [[121, null]], "dpnp.fill_diagonal": [[122, null]], "dpnp.finfo": [[123, null]], "dpnp.fix": [[124, null]], "dpnp.flatiter": [[125, null]], "dpnp.flatnonzero": [[126, null]], "dpnp.flip": [[127, null]], "dpnp.fliplr": [[128, null]], "dpnp.flipud": [[129, null]], "dpnp.float_power": [[130, null]], "dpnp.floor": [[131, null]], "dpnp.floor_divide": [[132, null]], "dpnp.fmax": [[133, null]], "dpnp.fmin": [[134, null]], "dpnp.fmod": [[135, null]], "dpnp.from_dlpack": [[136, null]], "dpnp.frombuffer": [[137, null]], "dpnp.fromfile": [[138, null]], "dpnp.fromfunction": [[139, null]], "dpnp.fromiter": [[140, null]], "dpnp.fromstring": [[141, null]], "dpnp.full": [[142, null]], "dpnp.full_like": [[143, null]], "dpnp.geomspace": [[144, null]], "dpnp.get_include": [[145, null]], "dpnp.gradient": [[146, null]], "dpnp.greater": [[147, null]], "dpnp.greater_equal": [[148, null]], "dpnp.heaviside": [[149, null]], "dpnp.histogram": [[150, null]], "dpnp.histogram_bin_edges": [[151, null]], "dpnp.hstack": [[152, null]], "dpnp.hypot": [[153, null]], "dpnp.identity": [[154, null]], "dpnp.iinfo": [[155, null]], "dpnp.imag": [[156, null]], "dpnp.indices": [[157, null]], "dpnp.inner": [[158, null]], "dpnp.invert": [[159, null]], "dpnp.isclose": [[160, null]], "dpnp.iscomplex": [[161, null]], "dpnp.iscomplexobj": [[162, null]], "dpnp.isfinite": [[163, null]], "dpnp.isinf": [[164, null]], "dpnp.isnan": [[165, null]], "dpnp.isneginf": [[166, null]], "dpnp.isposinf": [[167, null]], "dpnp.isreal": [[168, null]], "dpnp.isrealobj": [[169, null]], "dpnp.isscalar": [[170, null]], "dpnp.issubdtype": [[171, null]], "dpnp.ix_": [[172, null]], "dpnp.kron": [[173, null]], "dpnp.left_shift": [[174, null]], "dpnp.less": [[175, null]], "dpnp.less_equal": [[176, null]], "dpnp.linalg.cholesky": [[177, null]], "dpnp.linalg.cond": [[178, null]], "dpnp.linalg.det": [[179, null]], "dpnp.linalg.eig": [[180, null]], "dpnp.linalg.eigh": [[181, null]], "dpnp.linalg.eigvals": [[182, null]], "dpnp.linalg.eigvalsh": [[183, null]], "dpnp.linalg.inv": [[184, null]], "dpnp.linalg.lstsq": [[185, null]], "dpnp.linalg.matrix_power": [[186, null]], "dpnp.linalg.matrix_rank": [[187, null]], "dpnp.linalg.multi_dot": [[188, null]], "dpnp.linalg.norm": [[189, null]], "dpnp.linalg.pinv": [[190, null]], "dpnp.linalg.qr": [[191, null]], "dpnp.linalg.slogdet": [[192, null]], "dpnp.linalg.solve": [[193, null]], "dpnp.linalg.svd": [[194, null]], "dpnp.linalg.tensorinv": [[195, null]], "dpnp.linalg.tensorsolve": [[196, null]], "dpnp.linspace": [[197, null]], "dpnp.loadtxt": [[198, null]], "dpnp.log": [[199, null]], "dpnp.log10": [[200, null]], "dpnp.log1p": [[201, null]], "dpnp.log2": [[202, null]], "dpnp.logaddexp": [[203, null]], "dpnp.logaddexp2": [[204, null]], "dpnp.logical_and": [[205, null]], "dpnp.logical_not": [[206, null]], "dpnp.logical_or": [[207, null]], "dpnp.logical_xor": [[208, null]], "dpnp.logspace": [[209, null]], "dpnp.logsumexp": [[210, null]], "dpnp.mask_indices": [[211, null]], "dpnp.matmul": [[212, null]], "dpnp.max": [[213, null]], "dpnp.maximum": [[214, null]], "dpnp.mean": [[215, null]], "dpnp.median": [[216, null]], "dpnp.meshgrid": [[217, null]], "dpnp.mgrid": [[218, null]], "dpnp.min": [[219, null]], "dpnp.minimum": [[220, null]], "dpnp.mod": [[221, null]], "dpnp.modf": [[222, null]], "dpnp.moveaxis": [[223, null]], "dpnp.multiply": [[224, null]], "dpnp.nan_to_num": [[225, null]], "dpnp.nanargmax": [[226, null]], "dpnp.nanargmin": [[227, null]], "dpnp.nancumprod": [[228, null]], "dpnp.nancumsum": [[229, null]], "dpnp.nanmax": [[230, null]], "dpnp.nanmean": [[231, null]], "dpnp.nanmin": [[232, null]], "dpnp.nanprod": [[233, null]], "dpnp.nanstd": [[234, null]], "dpnp.nansum": [[235, null]], "dpnp.nanvar": [[236, null]], "dpnp.ndarray": [[237, null]], "dpnp.ndarray.T": [[238, null]], "dpnp.ndarray.__abs__": [[239, null]], "dpnp.ndarray.__add__": [[240, null]], "dpnp.ndarray.__and__": [[241, null]], "dpnp.ndarray.__bool__": [[242, null]], "dpnp.ndarray.__complex__": [[243, null]], "dpnp.ndarray.__copy__": [[244, null]], "dpnp.ndarray.__eq__": [[245, null]], "dpnp.ndarray.__float__": [[246, null]], "dpnp.ndarray.__floordiv__": [[247, null]], "dpnp.ndarray.__ge__": [[248, null]], "dpnp.ndarray.__getitem__": [[249, null]], "dpnp.ndarray.__gt__": [[250, null]], "dpnp.ndarray.__iadd__": [[251, null]], "dpnp.ndarray.__iand__": [[252, null]], "dpnp.ndarray.__ifloordiv__": [[253, null]], "dpnp.ndarray.__ilshift__": [[254, null]], "dpnp.ndarray.__imod__": [[255, null]], "dpnp.ndarray.__imul__": [[256, null]], "dpnp.ndarray.__int__": [[257, null]], "dpnp.ndarray.__invert__": [[258, null]], "dpnp.ndarray.__ior__": [[259, null]], "dpnp.ndarray.__ipow__": [[260, null]], "dpnp.ndarray.__irshift__": [[261, null]], "dpnp.ndarray.__isub__": [[262, null]], "dpnp.ndarray.__itruediv__": [[263, null]], "dpnp.ndarray.__ixor__": [[264, null]], "dpnp.ndarray.__le__": [[265, null]], "dpnp.ndarray.__len__": [[266, null]], "dpnp.ndarray.__lshift__": [[267, null]], "dpnp.ndarray.__lt__": [[268, null]], "dpnp.ndarray.__matmul__": [[269, null]], "dpnp.ndarray.__mod__": [[270, null]], "dpnp.ndarray.__mul__": [[271, null]], "dpnp.ndarray.__ne__": [[272, null]], "dpnp.ndarray.__neg__": [[273, null]], "dpnp.ndarray.__new__": [[274, null]], "dpnp.ndarray.__or__": [[275, null]], "dpnp.ndarray.__pos__": [[276, null]], "dpnp.ndarray.__pow__": [[277, null]], "dpnp.ndarray.__repr__": [[278, null]], "dpnp.ndarray.__rshift__": [[279, null]], "dpnp.ndarray.__setitem__": [[280, null]], "dpnp.ndarray.__str__": [[281, null]], "dpnp.ndarray.__sub__": [[282, null]], "dpnp.ndarray.__truediv__": [[283, null]], "dpnp.ndarray.__xor__": [[284, null]], "dpnp.ndarray.all": [[285, null]], "dpnp.ndarray.any": [[286, null]], "dpnp.ndarray.argmax": [[287, null]], "dpnp.ndarray.argmin": [[288, null]], "dpnp.ndarray.argsort": [[289, null]], "dpnp.ndarray.astype": [[290, null]], "dpnp.ndarray.choose": [[291, null]], "dpnp.ndarray.clip": [[292, null]], "dpnp.ndarray.conj": [[293, null]], "dpnp.ndarray.conjugate": [[294, null]], "dpnp.ndarray.copy": [[295, null]], "dpnp.ndarray.cumprod": [[296, null]], "dpnp.ndarray.cumsum": [[297, null]], "dpnp.ndarray.diagonal": [[298, null]], "dpnp.ndarray.dtype": [[299, null]], "dpnp.ndarray.fill": [[300, null]], "dpnp.ndarray.flags": [[301, null]], "dpnp.ndarray.flat": [[302, null]], "dpnp.ndarray.flatten": [[303, null]], "dpnp.ndarray.imag": [[304, null]], "dpnp.ndarray.item": [[305, null]], "dpnp.ndarray.itemsize": [[306, null]], "dpnp.ndarray.max": [[307, null]], "dpnp.ndarray.mean": [[308, null]], "dpnp.ndarray.min": [[309, null]], "dpnp.ndarray.nbytes": [[310, null]], "dpnp.ndarray.ndim": [[311, null]], "dpnp.ndarray.nonzero": [[312, null]], "dpnp.ndarray.partition": [[313, null]], "dpnp.ndarray.prod": [[314, null]], "dpnp.ndarray.put": [[315, null]], "dpnp.ndarray.ravel": [[316, null]], "dpnp.ndarray.real": [[317, null]], "dpnp.ndarray.repeat": [[318, null]], "dpnp.ndarray.reshape": [[319, null]], "dpnp.ndarray.round": [[320, null]], "dpnp.ndarray.searchsorted": [[321, null]], "dpnp.ndarray.shape": [[322, null]], "dpnp.ndarray.size": [[323, null]], "dpnp.ndarray.sort": [[324, null]], "dpnp.ndarray.squeeze": [[325, null]], "dpnp.ndarray.std": [[326, null]], "dpnp.ndarray.strides": [[327, null]], "dpnp.ndarray.sum": [[328, null]], "dpnp.ndarray.swapaxes": [[329, null]], "dpnp.ndarray.take": [[330, null]], "dpnp.ndarray.trace": [[331, null]], "dpnp.ndarray.transpose": [[332, null]], "dpnp.ndarray.var": [[333, null]], "dpnp.negative": [[334, null]], "dpnp.nextafter": [[335, null]], "dpnp.nonzero": [[336, null]], "dpnp.not_equal": [[337, null]], "dpnp.ogrid": [[338, null]], "dpnp.ones": [[339, null]], "dpnp.ones_like": [[340, null]], "dpnp.outer": [[341, null]], "dpnp.partition": [[342, null]], "dpnp.place": [[343, null]], "dpnp.positive": [[344, null]], "dpnp.power": [[345, null]], "dpnp.prod": [[346, null]], "dpnp.proj": [[347, null]], "dpnp.ptp": [[348, null]], "dpnp.put": [[349, null]], "dpnp.put_along_axis": [[350, null]], "dpnp.putmask": [[351, null]], "dpnp.rad2deg": [[352, null]], "dpnp.radians": [[353, null]], "dpnp.random.RandomState": [[354, null]], "dpnp.random.beta": [[355, null]], "dpnp.random.binomial": [[356, null]], "dpnp.random.bytes": [[357, null]], "dpnp.random.chisquare": [[358, null]], "dpnp.random.choice": [[359, null]], "dpnp.random.dirichlet": [[360, null]], "dpnp.random.exponential": [[361, null]], "dpnp.random.f": [[362, null]], "dpnp.random.gamma": [[363, null]], "dpnp.random.geometric": [[364, null]], "dpnp.random.gumbel": [[365, null]], "dpnp.random.hypergeometric": [[366, null]], "dpnp.random.laplace": [[367, null]], "dpnp.random.logistic": [[368, null]], "dpnp.random.lognormal": [[369, null]], "dpnp.random.logseries": [[370, null]], "dpnp.random.multinomial": [[371, null]], "dpnp.random.multivariate_normal": [[372, null]], "dpnp.random.negative_binomial": [[373, null]], "dpnp.random.noncentral_chisquare": [[374, null]], "dpnp.random.noncentral_f": [[375, null]], "dpnp.random.normal": [[376, null]], "dpnp.random.pareto": [[377, null]], "dpnp.random.permutation": [[378, null]], "dpnp.random.poisson": [[379, null]], "dpnp.random.power": [[380, null]], "dpnp.random.rand": [[381, null]], "dpnp.random.randint": [[382, null]], "dpnp.random.randn": [[383, null]], "dpnp.random.random": [[384, null]], "dpnp.random.random_integers": [[385, null]], "dpnp.random.random_sample": [[386, null]], "dpnp.random.ranf": [[387, null]], "dpnp.random.rayleigh": [[388, null]], "dpnp.random.sample": [[389, null]], "dpnp.random.seed": [[390, null]], "dpnp.random.shuffle": [[391, null]], "dpnp.random.standard_cauchy": [[392, null]], "dpnp.random.standard_exponential": [[393, null]], "dpnp.random.standard_gamma": [[394, null]], "dpnp.random.standard_normal": [[395, null]], "dpnp.random.standard_t": [[396, null]], "dpnp.random.triangular": [[397, null]], "dpnp.random.uniform": [[398, null]], "dpnp.random.vonmises": [[399, null]], "dpnp.random.wald": [[400, null]], "dpnp.random.weibull": [[401, null]], "dpnp.random.zipf": [[402, null]], "dpnp.ravel": [[403, null]], "dpnp.real": [[404, null]], "dpnp.real_if_close": [[405, null]], "dpnp.reciprocal": [[406, null]], "dpnp.reduce_hypot": [[407, null]], "dpnp.remainder": [[408, null]], "dpnp.repeat": [[409, null]], "dpnp.reshape": [[410, null]], "dpnp.result_type": [[411, null]], "dpnp.right_shift": [[412, null]], "dpnp.rint": [[413, null]], "dpnp.roll": [[414, null]], "dpnp.rollaxis": [[415, null]], "dpnp.round": [[416, null]], "dpnp.row_stack": [[417, null]], "dpnp.rsqrt": [[418, null]], "dpnp.searchsorted": [[419, null]], "dpnp.select": [[420, null]], "dpnp.shape": [[421, null]], "dpnp.sign": [[422, null]], "dpnp.signbit": [[423, null]], "dpnp.sin": [[424, null]], "dpnp.sinh": [[425, null]], "dpnp.sort": [[426, null]], "dpnp.sort_complex": [[427, null]], "dpnp.sqrt": [[428, null]], "dpnp.square": [[429, null]], "dpnp.squeeze": [[430, null]], "dpnp.stack": [[431, null]], "dpnp.std": [[432, null]], "dpnp.subtract": [[433, null]], "dpnp.sum": [[434, null]], "dpnp.swapaxes": [[435, null]], "dpnp.take": [[436, null]], "dpnp.take_along_axis": [[437, null]], "dpnp.tan": [[438, null]], "dpnp.tanh": [[439, null]], "dpnp.tensordot": [[440, null]], "dpnp.tile": [[441, null]], "dpnp.trace": [[442, null]], "dpnp.transpose": [[443, null]], "dpnp.trapezoid": [[444, null]], "dpnp.tri": [[445, null]], "dpnp.tril": [[446, null]], "dpnp.tril_indices": [[447, null]], "dpnp.tril_indices_from": [[448, null]], "dpnp.trim_zeros": [[449, null]], "dpnp.triu": [[450, null]], "dpnp.triu_indices": [[451, null]], "dpnp.triu_indices_from": [[452, null]], "dpnp.true_divide": [[453, null]], "dpnp.trunc": [[454, null]], "dpnp.unique": [[455, null]], "dpnp.unwrap": [[456, null]], "dpnp.vander": [[457, null]], "dpnp.var": [[458, null]], "dpnp.vdot": [[459, null]], "dpnp.vstack": [[460, null]], "dpnp.where": [[461, null]], "dpnp.zeros": [[462, null]], "dpnp.zeros_like": [[463, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[89, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[89, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[89, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[89, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[89, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[89, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[89, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[89, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[125, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[89, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[285, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[286, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "arange() (in module dpnp)": [[20, "dpnp.arange", false]], "arccos() (in module dpnp)": [[21, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[22, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[23, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[24, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[25, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[26, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[27, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[287, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[28, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[288, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[29, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[289, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[30, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[31, "dpnp.argwhere", false]], "around() (in module dpnp)": [[32, "dpnp.around", false]], "array() (in module dpnp)": [[33, "dpnp.array", false]], "array_equal() (in module dpnp)": [[34, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[35, "dpnp.array_equiv", false]], "asanyarray() (in module dpnp)": [[36, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[37, "dpnp.asarray", false]], "ascontiguousarray() (in module dpnp)": [[38, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[39, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[40, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[41, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[290, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[42, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[43, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[44, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[45, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[46, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[89, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[355, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[47, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[356, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[48, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[49, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[50, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[51, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[52, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[53, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[89, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[357, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[54, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[55, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[56, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[89, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[358, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[359, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[177, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[291, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[57, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[292, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[58, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[59, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[60, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[178, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[293, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[61, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[294, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[62, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[63, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[295, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[64, "dpnp.copy", false]], "copysign() (in module dpnp)": [[65, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[66, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[67, "dpnp.correlate", false]], "cos() (in module dpnp)": [[68, "dpnp.cos", false]], "cosh() (in module dpnp)": [[69, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[70, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[71, "dpnp.cov", false]], "cross() (in module dpnp)": [[72, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[73, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[296, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[74, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[297, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[75, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[76, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[77, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[89, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[179, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[78, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[79, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[80, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[81, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[298, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[82, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[83, "dpnp.diff", false]], "digitize() (in module dpnp)": [[84, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[360, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[85, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[86, "dpnp.dot", false]], "dpnp": [[2, "module-dpnp", false], [3, "module-dpnp", false]], "dpnp.fft": [[10, "module-0", false], [10, "module-dpnp.fft", false]], "dpnp.random": [[474, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[87, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[88, "dpnp.dstack", false]], "dtype (class in dpnp)": [[89, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[299, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[90, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[180, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[181, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[182, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[183, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[91, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[92, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[93, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[94, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[95, "dpnp.equal", false]], "erf() (in module dpnp)": [[96, "dpnp.erf", false]], "exp() (in module dpnp)": [[97, "dpnp.exp", false]], "exp2() (in module dpnp)": [[98, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[99, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[100, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[361, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[101, "dpnp.extract", false]], "eye() (in module dpnp)": [[102, "dpnp.eye", false]], "f() (in module dpnp.random)": [[362, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[103, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[104, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[105, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[106, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[107, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[108, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[89, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[300, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[122, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[123, "dpnp.finfo", false]], "fix() (in module dpnp)": [[124, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[89, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[301, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[302, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[125, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[126, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[303, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[127, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[128, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[129, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[130, "dpnp.float_power", false]], "floor() (in module dpnp)": [[131, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[132, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[133, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[134, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[135, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[136, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[137, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[138, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[139, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[140, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[141, "dpnp.fromstring", false]], "full() (in module dpnp)": [[142, "dpnp.full", false]], "full_like() (in module dpnp)": [[143, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[363, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[364, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[144, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[145, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[146, "dpnp.gradient", false]], "greater() (in module dpnp)": [[147, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[148, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[365, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[89, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[149, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[109, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[150, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[151, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[152, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[366, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[153, "dpnp.hypot", false]], "identity() (in module dpnp)": [[154, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[110, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[111, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[112, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[113, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[114, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[155, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[304, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[156, "dpnp.imag", false]], "indices() (in module dpnp)": [[157, "dpnp.indices", false]], "inner() (in module dpnp)": [[158, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[184, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[159, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[115, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[116, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[117, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[89, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[89, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[160, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[161, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[162, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[163, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[164, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[165, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[89, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[166, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[167, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[168, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[169, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[170, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[171, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[305, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[89, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[306, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[172, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[89, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[173, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[367, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[174, "dpnp.left_shift", false]], "less() (in module dpnp)": [[175, "dpnp.less", false]], "less_equal() (in module dpnp)": [[176, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[197, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[198, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[199, "dpnp.log", false]], "log10() (in module dpnp)": [[200, "dpnp.log10", false]], "log1p() (in module dpnp)": [[201, "dpnp.log1p", false]], "log2() (in module dpnp)": [[202, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[203, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[204, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[205, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[206, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[207, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[208, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[368, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[369, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[370, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[209, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[210, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[185, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[211, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[212, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[186, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[187, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[307, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[213, "dpnp.max", false]], "maximum() (in module dpnp)": [[214, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[308, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[215, "dpnp.mean", false]], "median() (in module dpnp)": [[216, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[217, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[89, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[218, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[309, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[219, "dpnp.min", false]], "minimum() (in module dpnp)": [[220, "dpnp.minimum", false]], "mod() (in module dpnp)": [[221, "dpnp.mod", false]], "modf() (in module dpnp)": [[222, "dpnp.modf", false]], "module": [[2, "module-dpnp", false], [3, "module-dpnp", false], [10, "module-0", false], [10, "module-dpnp.fft", false], [474, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[223, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[188, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[371, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[224, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[372, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[89, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[89, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[225, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[226, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[227, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[228, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[229, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[230, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[231, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[232, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[233, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[234, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[235, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[236, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[310, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[237, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[89, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[311, "dpnp.ndarray.ndim", false]], "negative() (in module dpnp)": [[334, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[373, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[89, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[335, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[374, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[375, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[312, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[336, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[189, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[376, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[337, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[89, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[338, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[339, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[340, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[341, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[377, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[313, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[342, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[378, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[190, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[343, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[379, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[344, "dpnp.positive", false]], "power() (in module dpnp)": [[345, "dpnp.power", false]], "power() (in module dpnp.random)": [[380, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[314, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[346, "dpnp.prod", false]], "proj() (in module dpnp)": [[347, "dpnp.proj", false]], "ptp() (in module dpnp)": [[348, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[315, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[349, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[350, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[351, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[191, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[352, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[353, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[381, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[382, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[383, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[384, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[385, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[386, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[354, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[387, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[316, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[403, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[388, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[317, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[404, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[405, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[406, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[407, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[408, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[318, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[409, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[319, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[410, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[411, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[118, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[119, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[120, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[121, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[412, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[413, "dpnp.rint", false]], "roll() (in module dpnp)": [[414, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[415, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[320, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[416, "dpnp.round", false]], "row_stack() (in module dpnp)": [[417, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[418, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[389, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[321, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[419, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[390, "dpnp.random.seed", false]], "select() (in module dpnp)": [[420, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[89, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[322, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[421, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[391, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[422, "dpnp.sign", false]], "signbit() (in module dpnp)": [[423, "dpnp.signbit", false]], "sin() (in module dpnp)": [[424, "dpnp.sin", false]], "sinh() (in module dpnp)": [[425, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[323, "dpnp.ndarray.size", false]], "slogdet() (in module dpnp.linalg)": [[192, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[193, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[324, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[426, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[427, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[428, "dpnp.sqrt", false]], "square() (in module dpnp)": [[429, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[325, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[430, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[431, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[392, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[393, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[394, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[395, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[396, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[326, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[432, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[89, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[327, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[89, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[433, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[328, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[434, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[194, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[329, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[435, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[238, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[330, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[436, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[437, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[438, "dpnp.tan", false]], "tanh() (in module dpnp)": [[439, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[440, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[195, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[196, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[441, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[331, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[442, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[332, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[443, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[444, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[445, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[397, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[446, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[447, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[448, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[449, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[450, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[451, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[452, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[453, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[454, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[89, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[354, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[398, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[455, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[456, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[87, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[457, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[87, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[333, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[458, "dpnp.var", false]], "vdot() (in module dpnp)": [[459, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[399, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[460, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[400, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[401, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[461, "dpnp.where", false]], "zeros() (in module dpnp)": [[462, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[463, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[402, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "arange"], [21, 1, 1, "", "arccos"], [22, 1, 1, "", "arccosh"], [23, 1, 1, "", "arcsin"], [24, 1, 1, "", "arcsinh"], [25, 1, 1, "", "arctan"], [26, 1, 1, "", "arctan2"], [27, 1, 1, "", "arctanh"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "argmin"], [30, 1, 1, "", "argsort"], [31, 1, 1, "", "argwhere"], [32, 1, 1, "", "around"], [33, 1, 1, "", "array"], [34, 1, 1, "", "array_equal"], [35, 1, 1, "", "array_equiv"], [36, 1, 1, "", "asanyarray"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "ascontiguousarray"], [39, 1, 1, "", "asfarray"], [40, 1, 1, "", "asfortranarray"], [41, 1, 1, "", "asnumpy"], [42, 1, 1, "", "astype"], [43, 1, 1, "", "atleast_1d"], [44, 1, 1, "", "atleast_2d"], [45, 1, 1, "", "atleast_3d"], [46, 1, 1, "", "average"], [47, 1, 1, "", "bincount"], [48, 1, 1, "", "bitwise_and"], [49, 1, 1, "", "bitwise_not"], [50, 1, 1, "", "bitwise_or"], [51, 1, 1, "", "bitwise_xor"], [52, 1, 1, "", "broadcast_arrays"], [53, 1, 1, "", "broadcast_to"], [54, 1, 1, "", "can_cast"], [55, 1, 1, "", "cbrt"], [56, 1, 1, "", "ceil"], [57, 1, 1, "", "choose"], [58, 1, 1, "", "clip"], [59, 1, 1, "", "column_stack"], [60, 1, 1, "", "concatenate"], [61, 1, 1, "", "conj"], [62, 1, 1, "", "conjugate"], [63, 1, 1, "", "convolve"], [64, 1, 1, "", "copy"], [65, 1, 1, "", "copysign"], [66, 1, 1, "", "copyto"], [67, 1, 1, "", "correlate"], [68, 1, 1, "", "cos"], [69, 1, 1, "", "cosh"], [70, 1, 1, "", "count_nonzero"], [71, 1, 1, "", "cov"], [72, 1, 1, "", "cross"], [73, 1, 1, "", "cumlogsumexp"], [74, 1, 1, "", "cumprod"], [75, 1, 1, "", "cumsum"], [76, 1, 1, "", "deg2rad"], [77, 1, 1, "", "degrees"], [78, 1, 1, "", "diag"], [79, 1, 1, "", "diag_indices"], [80, 1, 1, "", "diag_indices_from"], [81, 1, 1, "", "diagflat"], [82, 1, 1, "", "diagonal"], [83, 1, 1, "", "diff"], [84, 1, 1, "", "digitize"], [85, 1, 1, "", "divide"], [86, 1, 1, "", "dot"], [88, 1, 1, "", "dstack"], [89, 2, 1, "", "dtype"], [90, 1, 1, "", "ediff1d"], [91, 1, 1, "", "einsum"], [92, 1, 1, "", "einsum_path"], [93, 1, 1, "", "empty"], [94, 1, 1, "", "empty_like"], [95, 1, 1, "", "equal"], [96, 1, 1, "", "erf"], [97, 1, 1, "", "exp"], [98, 1, 1, "", "exp2"], [99, 1, 1, "", "expand_dims"], [100, 1, 1, "", "expm1"], [101, 1, 1, "", "extract"], [102, 1, 1, "", "eye"], [103, 1, 1, "", "fabs"], [10, 0, 0, "module-0", "fft"], [122, 1, 1, "", "fill_diagonal"], [123, 1, 1, "", "finfo"], [124, 1, 1, "", "fix"], [125, 2, 1, "", "flatiter"], [126, 1, 1, "", "flatnonzero"], [127, 1, 1, "", "flip"], [128, 1, 1, "", "fliplr"], [129, 1, 1, "", "flipud"], [130, 1, 1, "", "float_power"], [131, 1, 1, "", "floor"], [132, 1, 1, "", "floor_divide"], [133, 1, 1, "", "fmax"], [134, 1, 1, "", "fmin"], [135, 1, 1, "", "fmod"], [136, 1, 1, "", "from_dlpack"], [137, 1, 1, "", "frombuffer"], [138, 1, 1, "", "fromfile"], [139, 1, 1, "", "fromfunction"], [140, 1, 1, "", "fromiter"], [141, 1, 1, "", "fromstring"], [142, 1, 1, "", "full"], [143, 1, 1, "", "full_like"], [144, 1, 1, "", "geomspace"], [145, 1, 1, "", "get_include"], [146, 1, 1, "", "gradient"], [147, 1, 1, "", "greater"], [148, 1, 1, "", "greater_equal"], [149, 1, 1, "", "heaviside"], [150, 1, 1, "", "histogram"], [151, 1, 1, "", "histogram_bin_edges"], [152, 1, 1, "", "hstack"], [153, 1, 1, "", "hypot"], [154, 1, 1, "", "identity"], [155, 1, 1, "", "iinfo"], [156, 1, 1, "", "imag"], [157, 1, 1, "", "indices"], [158, 1, 1, "", "inner"], [159, 1, 1, "", "invert"], [160, 1, 1, "", "isclose"], [161, 1, 1, "", "iscomplex"], [162, 1, 1, "", "iscomplexobj"], [163, 1, 1, "", "isfinite"], [164, 1, 1, "", "isinf"], [165, 1, 1, "", "isnan"], [166, 1, 1, "", "isneginf"], [167, 1, 1, "", "isposinf"], [168, 1, 1, "", "isreal"], [169, 1, 1, "", "isrealobj"], [170, 1, 1, "", "isscalar"], [171, 1, 1, "", "issubdtype"], [172, 1, 1, "", "ix_"], [173, 1, 1, "", "kron"], [174, 1, 1, "", "left_shift"], [175, 1, 1, "", "less"], [176, 1, 1, "", "less_equal"], [197, 1, 1, "", "linspace"], [198, 1, 1, "", "loadtxt"], [199, 1, 1, "", "log"], [200, 1, 1, "", "log10"], [201, 1, 1, "", "log1p"], [202, 1, 1, "", "log2"], [203, 1, 1, "", "logaddexp"], [204, 1, 1, "", "logaddexp2"], [205, 1, 1, "", "logical_and"], [206, 1, 1, "", "logical_not"], [207, 1, 1, "", "logical_or"], [208, 1, 1, "", "logical_xor"], [209, 1, 1, "", "logspace"], [210, 1, 1, "", "logsumexp"], [211, 1, 1, "", "mask_indices"], [212, 1, 1, "", "matmul"], [213, 1, 1, "", "max"], [214, 1, 1, "", "maximum"], [215, 1, 1, "", "mean"], [216, 1, 1, "", "median"], [217, 1, 1, "", "meshgrid"], [218, 5, 1, "", "mgrid"], [219, 1, 1, "", "min"], [220, 1, 1, "", "minimum"], [221, 1, 1, "", "mod"], [222, 1, 1, "", "modf"], [223, 1, 1, "", "moveaxis"], [224, 1, 1, "", "multiply"], [225, 1, 1, "", "nan_to_num"], [226, 1, 1, "", "nanargmax"], [227, 1, 1, "", "nanargmin"], [228, 1, 1, "", "nancumprod"], [229, 1, 1, "", "nancumsum"], [230, 1, 1, "", "nanmax"], [231, 1, 1, "", "nanmean"], [232, 1, 1, "", "nanmin"], [233, 1, 1, "", "nanprod"], [234, 1, 1, "", "nanstd"], [235, 1, 1, "", "nansum"], [236, 1, 1, "", "nanvar"], [237, 3, 1, "", "ndarray"], [334, 1, 1, "", "negative"], [335, 1, 1, "", "nextafter"], [336, 1, 1, "", "nonzero"], [337, 1, 1, "", "not_equal"], [338, 5, 1, "", "ogrid"], [339, 1, 1, "", "ones"], [340, 1, 1, "", "ones_like"], [341, 1, 1, "", "outer"], [342, 1, 1, "", "partition"], [343, 1, 1, "", "place"], [344, 1, 1, "", "positive"], [345, 1, 1, "", "power"], [346, 1, 1, "", "prod"], [347, 1, 1, "", "proj"], [348, 1, 1, "", "ptp"], [349, 1, 1, "", "put"], [350, 1, 1, "", "put_along_axis"], [351, 1, 1, "", "putmask"], [352, 1, 1, "", "rad2deg"], [353, 1, 1, "", "radians"], [474, 0, 0, "-", "random"], [403, 1, 1, "", "ravel"], [404, 1, 1, "", "real"], [405, 1, 1, "", "real_if_close"], [406, 1, 1, "", "reciprocal"], [407, 1, 1, "", "reduce_hypot"], [408, 1, 1, "", "remainder"], [409, 1, 1, "", "repeat"], [410, 1, 1, "", "reshape"], [411, 1, 1, "", "result_type"], [412, 1, 1, "", "right_shift"], [413, 1, 1, "", "rint"], [414, 1, 1, "", "roll"], [415, 1, 1, "", "rollaxis"], [416, 1, 1, "", "round"], [417, 1, 1, "", "row_stack"], [418, 1, 1, "", "rsqrt"], [419, 1, 1, "", "searchsorted"], [420, 1, 1, "", "select"], [421, 1, 1, "", "shape"], [422, 1, 1, "", "sign"], [423, 1, 1, "", "signbit"], [424, 1, 1, "", "sin"], [425, 1, 1, "", "sinh"], [426, 1, 1, "", "sort"], [427, 1, 1, "", "sort_complex"], [428, 1, 1, "", "sqrt"], [429, 1, 1, "", "square"], [430, 1, 1, "", "squeeze"], [431, 1, 1, "", "stack"], [432, 1, 1, "", "std"], [433, 1, 1, "", "subtract"], [434, 1, 1, "", "sum"], [435, 1, 1, "", "swapaxes"], [436, 1, 1, "", "take"], [437, 1, 1, "", "take_along_axis"], [438, 1, 1, "", "tan"], [439, 1, 1, "", "tanh"], [440, 1, 1, "", "tensordot"], [441, 1, 1, "", "tile"], [442, 1, 1, "", "trace"], [443, 1, 1, "", "transpose"], [444, 1, 1, "", "trapezoid"], [445, 1, 1, "", "tri"], [446, 1, 1, "", "tril"], [447, 1, 1, "", "tril_indices"], [448, 1, 1, "", "tril_indices_from"], [449, 1, 1, "", "trim_zeros"], [450, 1, 1, "", "triu"], [451, 1, 1, "", "triu_indices"], [452, 1, 1, "", "triu_indices_from"], [453, 1, 1, "", "true_divide"], [454, 1, 1, "", "trunc"], [455, 1, 1, "", "unique"], [456, 1, 1, "", "unwrap"], [457, 1, 1, "", "vander"], [458, 1, 1, "", "var"], [459, 1, 1, "", "vdot"], [460, 1, 1, "", "vstack"], [461, 1, 1, "", "where"], [462, 1, 1, "", "zeros"], [463, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[87, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[87, 3, 1, "", "T"], [87, 4, 1, "", "__eq__"], [87, 4, 1, "", "__ge__"], [87, 4, 1, "", "__getitem__"], [87, 4, 1, "", "__gt__"], [87, 4, 1, "", "__le__"], [87, 4, 1, "", "__len__"], [87, 4, 1, "", "__lt__"], [87, 4, 1, "", "__ne__"], [87, 4, 1, "", "__setitem__"], [87, 4, 1, "", "all"], [87, 4, 1, "", "any"], [87, 4, 1, "", "argmax"], [87, 4, 1, "", "argmin"], [87, 4, 1, "", "argsort"], [87, 4, 1, "", "asnumpy"], [87, 4, 1, "", "astype"], [87, 4, 1, "", "choose"], [87, 4, 1, "", "clip"], [87, 4, 1, "", "conj"], [87, 4, 1, "", "conjugate"], [87, 4, 1, "", "copy"], [87, 4, 1, "", "cumprod"], [87, 4, 1, "", "cumsum"], [87, 3, 1, "", "device"], [87, 4, 1, "", "diagonal"], [87, 4, 1, "", "dot"], [87, 3, 1, "", "dtype"], [87, 4, 1, "", "fill"], [87, 3, 1, "", "flags"], [87, 3, 1, "", "flat"], [87, 4, 1, "", "flatten"], [87, 4, 1, "", "get_array"], [87, 3, 1, "", "imag"], [87, 4, 1, "", "item"], [87, 3, 1, "", "itemsize"], [87, 4, 1, "", "max"], [87, 4, 1, "", "mean"], [87, 4, 1, "", "min"], [87, 3, 1, "", "nbytes"], [87, 3, 1, "", "ndim"], [87, 4, 1, "", "nonzero"], [87, 4, 1, "", "partition"], [87, 4, 1, "", "prod"], [87, 4, 1, "", "put"], [87, 4, 1, "", "ravel"], [87, 3, 1, "", "real"], [87, 4, 1, "", "repeat"], [87, 4, 1, "", "reshape"], [87, 4, 1, "", "round"], [87, 4, 1, "", "searchsorted"], [87, 3, 1, "", "shape"], [87, 3, 1, "", "size"], [87, 4, 1, "", "sort"], [87, 4, 1, "", "squeeze"], [87, 4, 1, "", "std"], [87, 3, 1, "", "strides"], [87, 4, 1, "", "sum"], [87, 4, 1, "", "swapaxes"], [87, 3, 1, "", "sycl_context"], [87, 3, 1, "", "sycl_device"], [87, 3, 1, "", "sycl_queue"], [87, 4, 1, "", "take"], [87, 4, 1, "", "to_device"], [87, 4, 1, "", "trace"], [87, 4, 1, "", "transpose"], [87, 3, 1, "", "usm_type"], [87, 4, 1, "", "var"]], "dpnp.dtype": [[89, 4, 1, "", "__eq__"], [89, 4, 1, "", "__ge__"], [89, 4, 1, "", "__getitem__"], [89, 4, 1, "", "__gt__"], [89, 4, 1, "", "__le__"], [89, 4, 1, "", "__len__"], [89, 4, 1, "", "__lt__"], [89, 4, 1, "", "__ne__"], [89, 3, 1, "", "alignment"], [89, 3, 1, "", "base"], [89, 3, 1, "", "byteorder"], [89, 3, 1, "", "char"], [89, 3, 1, "", "descr"], [89, 3, 1, "", "fields"], [89, 3, 1, "", "flags"], [89, 3, 1, "", "hasobject"], [89, 3, 1, "", "isalignedstruct"], [89, 3, 1, "", "isbuiltin"], [89, 3, 1, "", "isnative"], [89, 3, 1, "", "itemsize"], [89, 3, 1, "", "kind"], [89, 3, 1, "", "metadata"], [89, 3, 1, "", "name"], [89, 3, 1, "", "names"], [89, 3, 1, "", "ndim"], [89, 4, 1, "", "newbyteorder"], [89, 3, 1, "", "num"], [89, 3, 1, "", "shape"], [89, 3, 1, "", "str"], [89, 3, 1, "", "subdtype"], [89, 3, 1, "", "type"]], "dpnp.fft": [[104, 1, 1, "", "fft"], [105, 1, 1, "", "fft2"], [106, 1, 1, "", "fftfreq"], [107, 1, 1, "", "fftn"], [108, 1, 1, "", "fftshift"], [109, 1, 1, "", "hfft"], [110, 1, 1, "", "ifft"], [111, 1, 1, "", "ifft2"], [112, 1, 1, "", "ifftn"], [113, 1, 1, "", "ifftshift"], [114, 1, 1, "", "ihfft"], [115, 1, 1, "", "irfft"], [116, 1, 1, "", "irfft2"], [117, 1, 1, "", "irfftn"], [118, 1, 1, "", "rfft"], [119, 1, 1, "", "rfft2"], [120, 1, 1, "", "rfftfreq"], [121, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[125, 4, 1, "", "__eq__"], [125, 4, 1, "", "__ge__"], [125, 4, 1, "", "__getitem__"], [125, 4, 1, "", "__gt__"], [125, 4, 1, "", "__iter__"], [125, 4, 1, "", "__le__"], [125, 4, 1, "", "__lt__"], [125, 4, 1, "", "__ne__"], [125, 4, 1, "", "__next__"], [125, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[177, 1, 1, "", "cholesky"], [178, 1, 1, "", "cond"], [179, 1, 1, "", "det"], [180, 1, 1, "", "eig"], [181, 1, 1, "", "eigh"], [182, 1, 1, "", "eigvals"], [183, 1, 1, "", "eigvalsh"], [184, 1, 1, "", "inv"], [185, 1, 1, "", "lstsq"], [186, 1, 1, "", "matrix_power"], [187, 1, 1, "", "matrix_rank"], [188, 1, 1, "", "multi_dot"], [189, 1, 1, "", "norm"], [190, 1, 1, "", "pinv"], [191, 1, 1, "", "qr"], [192, 1, 1, "", "slogdet"], [193, 1, 1, "", "solve"], [194, 1, 1, "", "svd"], [195, 1, 1, "", "tensorinv"], [196, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[238, 6, 1, "", "T"], [239, 4, 1, "", "__abs__"], [240, 4, 1, "", "__add__"], [241, 4, 1, "", "__and__"], [242, 4, 1, "", "__bool__"], [243, 4, 1, "", "__complex__"], [244, 4, 1, "", "__copy__"], [245, 4, 1, "", "__eq__"], [246, 4, 1, "", "__float__"], [247, 4, 1, "", "__floordiv__"], [248, 4, 1, "", "__ge__"], [249, 4, 1, "", "__getitem__"], [250, 4, 1, "", "__gt__"], [251, 4, 1, "", "__iadd__"], [252, 4, 1, "", "__iand__"], [253, 4, 1, "", "__ifloordiv__"], [254, 4, 1, "", "__ilshift__"], [255, 4, 1, "", "__imod__"], [256, 4, 1, "", "__imul__"], [257, 4, 1, "", "__int__"], [258, 4, 1, "", "__invert__"], [259, 4, 1, "", "__ior__"], [260, 4, 1, "", "__ipow__"], [261, 4, 1, "", "__irshift__"], [262, 4, 1, "", "__isub__"], [263, 4, 1, "", "__itruediv__"], [264, 4, 1, "", "__ixor__"], [265, 4, 1, "", "__le__"], [266, 4, 1, "", "__len__"], [267, 4, 1, "", "__lshift__"], [268, 4, 1, "", "__lt__"], [269, 4, 1, "", "__matmul__"], [270, 4, 1, "", "__mod__"], [271, 4, 1, "", "__mul__"], [272, 4, 1, "", "__ne__"], [273, 4, 1, "", "__neg__"], [274, 4, 1, "", "__new__"], [275, 4, 1, "", "__or__"], [276, 4, 1, "", "__pos__"], [277, 4, 1, "", "__pow__"], [278, 4, 1, "", "__repr__"], [279, 4, 1, "", "__rshift__"], [280, 4, 1, "", "__setitem__"], [281, 4, 1, "", "__str__"], [282, 4, 1, "", "__sub__"], [283, 4, 1, "", "__truediv__"], [284, 4, 1, "", "__xor__"], [285, 4, 1, "", "all"], [286, 4, 1, "", "any"], [287, 4, 1, "", "argmax"], [288, 4, 1, "", "argmin"], [289, 4, 1, "", "argsort"], [290, 4, 1, "", "astype"], [291, 4, 1, "", "choose"], [292, 4, 1, "", "clip"], [293, 4, 1, "", "conj"], [294, 4, 1, "", "conjugate"], [295, 4, 1, "", "copy"], [296, 4, 1, "", "cumprod"], [297, 4, 1, "", "cumsum"], [298, 4, 1, "", "diagonal"], [299, 6, 1, "", "dtype"], [300, 4, 1, "", "fill"], [301, 6, 1, "", "flags"], [302, 6, 1, "", "flat"], [303, 4, 1, "", "flatten"], [304, 6, 1, "", "imag"], [305, 4, 1, "", "item"], [306, 6, 1, "", "itemsize"], [307, 4, 1, "", "max"], [308, 4, 1, "", "mean"], [309, 4, 1, "", "min"], [310, 6, 1, "", "nbytes"], [311, 6, 1, "", "ndim"], [312, 4, 1, "", "nonzero"], [313, 4, 1, "", "partition"], [314, 4, 1, "", "prod"], [315, 4, 1, "", "put"], [316, 4, 1, "", "ravel"], [317, 6, 1, "", "real"], [318, 4, 1, "", "repeat"], [319, 4, 1, "", "reshape"], [320, 4, 1, "", "round"], [321, 4, 1, "", "searchsorted"], [322, 6, 1, "", "shape"], [323, 6, 1, "", "size"], [324, 4, 1, "", "sort"], [325, 4, 1, "", "squeeze"], [326, 4, 1, "", "std"], [327, 6, 1, "", "strides"], [328, 4, 1, "", "sum"], [329, 4, 1, "", "swapaxes"], [330, 4, 1, "", "take"], [331, 4, 1, "", "trace"], [332, 4, 1, "", "transpose"], [333, 4, 1, "", "var"]], "dpnp.random": [[354, 2, 1, "", "RandomState"], [355, 1, 1, "", "beta"], [356, 1, 1, "", "binomial"], [357, 1, 1, "", "bytes"], [358, 1, 1, "", "chisquare"], [359, 1, 1, "", "choice"], [360, 1, 1, "", "dirichlet"], [361, 1, 1, "", "exponential"], [362, 1, 1, "", "f"], [363, 1, 1, "", "gamma"], [364, 1, 1, "", "geometric"], [365, 1, 1, "", "gumbel"], [366, 1, 1, "", "hypergeometric"], [367, 1, 1, "", "laplace"], [368, 1, 1, "", "logistic"], [369, 1, 1, "", "lognormal"], [370, 1, 1, "", "logseries"], [371, 1, 1, "", "multinomial"], [372, 1, 1, "", "multivariate_normal"], [373, 1, 1, "", "negative_binomial"], [374, 1, 1, "", "noncentral_chisquare"], [375, 1, 1, "", "noncentral_f"], [376, 1, 1, "", "normal"], [377, 1, 1, "", "pareto"], [378, 1, 1, "", "permutation"], [379, 1, 1, "", "poisson"], [380, 1, 1, "", "power"], [381, 1, 1, "", "rand"], [382, 1, 1, "", "randint"], [383, 1, 1, "", "randn"], [384, 1, 1, "", "random"], [385, 1, 1, "", "random_integers"], [386, 1, 1, "", "random_sample"], [387, 1, 1, "", "ranf"], [388, 1, 1, "", "rayleigh"], [389, 1, 1, "", "sample"], [390, 1, 1, "", "seed"], [391, 1, 1, "", "shuffle"], [392, 1, 1, "", "standard_cauchy"], [393, 1, 1, "", "standard_exponential"], [394, 1, 1, "", "standard_gamma"], [395, 1, 1, "", "standard_normal"], [396, 1, 1, "", "standard_t"], [397, 1, 1, "", "triangular"], [398, 1, 1, "", "uniform"], [399, 1, 1, "", "vonmises"], [400, 1, 1, "", "wald"], [401, 1, 1, "", "weibull"], [402, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[354, 4, 1, "", "__eq__"], [354, 4, 1, "", "__ge__"], [354, 4, 1, "", "__gt__"], [354, 4, 1, "", "__le__"], [354, 4, 1, "", "__lt__"], [354, 4, 1, "", "__ne__"], [354, 4, 1, "", "get_state"], [354, 4, 1, "", "get_sycl_device"], [354, 4, 1, "", "get_sycl_queue"], [354, 4, 1, "", "normal"], [354, 4, 1, "", "rand"], [354, 4, 1, "", "randint"], [354, 4, 1, "", "randn"], [354, 4, 1, "", "random_sample"], [354, 4, 1, "", "standard_normal"], [354, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 72, 75, 87, 89, 90, 105, 107, 109, 111, 112, 114, 116, 117, 119, 121, 122, 137, 138, 185, 187, 189, 194, 299, 332, 354, 355, 356, 361, 362, 363, 365, 366, 367, 368, 369, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 441, 471], "0": [0, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 43, 44, 45, 46, 47, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 146, 149, 150, 151, 154, 157, 158, 160, 163, 164, 165, 166, 167, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 197, 198, 199, 200, 201, 202, 206, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 295, 298, 300, 304, 305, 317, 320, 322, 324, 326, 331, 332, 333, 336, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 353, 354, 356, 361, 363, 364, 365, 367, 368, 369, 371, 372, 373, 376, 378, 379, 380, 381, 384, 386, 387, 388, 389, 392, 395, 397, 398, 399, 406, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 471], "00": [68, 92, 104, 424], "000": [225, 356], "00000000005e": 100, "00000000e": [104, 225], "000000082740371e": 100, "000000e": [68, 424], "00001e10": [15, 160], "0001e10": 160, "000e": 92, "000j": 225, "002": 225, "00867716": 358, "01": 92, "02": [92, 225], "03": 225, "03088525e": 93, "0396842": 209, "04": 92, "04719755": 353, "04921661": 354, "05": [15, 92, 160], "0614962j": [105, 119], "06310682": 354, "07": 225, "07944154": [73, 192], "08": [15, 68, 92, 130, 160, 372, 424], "08156915": 354, "0943951": 353, "09640474": 204, "09861229": [73, 192, 201], "0d": 31, "0dev0": 6, "0j": [18, 86, 87, 161, 162, 168, 169, 212, 304, 317, 422], "0th": 440, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 289, 290, 295, 298, 300, 303, 304, 305, 311, 313, 317, 322, 324, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 358, 359, 361, 363, 365, 367, 368, 369, 371, 372, 373, 376, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 393, 395, 398, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 471], "10": [0, 4, 13, 22, 24, 28, 29, 46, 58, 64, 73, 74, 75, 79, 80, 83, 84, 87, 89, 91, 92, 100, 101, 108, 120, 142, 144, 150, 151, 156, 160, 172, 173, 174, 199, 200, 201, 202, 209, 210, 216, 224, 319, 348, 350, 354, 356, 366, 378, 407, 411, 412, 414, 416, 419, 431, 437, 446, 447, 448, 450, 451, 452, 461], "100": [79, 120, 144, 160, 173, 188, 209, 366, 392, 405, 456], "1000": [54, 144, 188, 209, 355, 356, 361, 363, 365, 366, 367, 368, 369, 376, 377, 380, 382, 384, 387, 389, 395, 399, 400, 401, 402, 405, 444], "10000": [75, 188, 364, 379, 388, 398], "100000": 373, "1000000": [392, 394, 396, 397], "1024": 0, "105": 92, "11": [28, 29, 46, 69, 79, 80, 87, 101, 146, 189, 319, 373, 382, 416, 419, 425, 446, 447, 448, 450, 451, 452, 461], "110": [91, 158], "111111": 225, "113": 203, "11570901": 354, "1179187": 354, "118033988749895": 432, "119": 91, "1196081": 354, "12": [10, 28, 29, 45, 72, 77, 79, 80, 84, 89, 91, 101, 105, 119, 156, 209, 346, 348, 353, 378, 419, 446, 447, 448, 450, 451, 452, 461], "120": [74, 77], "123": [87, 92, 305], "125": [130, 345, 457], "127": 144, "128": [0, 144, 225], "12th": 91, "13": [10, 28, 29, 49, 79, 80, 86, 89, 91, 159, 212, 419, 447, 448, 451, 452], "130": 91, "134": 158, "13436424": 354, "135": 26, "13710533": 358, "139884456208480": 14, "13j": 405, "14": [28, 29, 48, 49, 79, 80, 86, 124, 158, 159, 419, 440, 447, 448, 451, 452], "140": 456, "140053638309840": 19, "14157194": 444, "14159265": [21, 26, 76, 353], "14423775e": 104, "14j": 405, "15": [28, 29, 75, 79, 80, 84, 91, 109, 114, 190, 200, 378, 419, 447, 448, 451, 452], "150": 77, "15888336": 209, "15j": 405, "16": [6, 48, 79, 80, 89, 104, 130, 140, 144, 146, 224, 345, 405, 438, 447, 448, 451, 452], "16227766": [178, 407], "16394577": 354, "164": 204, "166": 204, "167": 6, "16j": 104, "17": [104, 105, 119], "17157288": [181, 183], "17281316e": 104, "177": [144, 209], "17j": 104, "18": [6, 74, 89, 90, 91, 107, 189, 209], "180": [26, 76, 77, 91, 352, 456, 479], "1805": 10, "18236388": 354, "18557831": 354, "1887902": 353, "19": [10, 70, 89, 456], "1923875335537315": 383, "19245009": 418, "1924881e": 130, "1965": 10, "19722458": 73, "1d": [90, 349, 350, 437, 444], "1e": [15, 100, 160, 180, 190, 200, 201, 203, 204, 372], "1e10": [15, 160], "1j": [11, 12, 18, 34, 61, 62, 87, 115, 156, 161, 168, 180, 194, 304, 317, 404, 427, 429], "1th": 440, "2": [0, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 48, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 161, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 290, 295, 298, 300, 303, 305, 311, 313, 322, 323, 332, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 352, 353, 354, 358, 362, 366, 372, 378, 381, 383, 394, 396, 397, 400, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "20": [6, 74, 84, 91, 120, 157, 160, 173, 174, 189, 350, 356, 371, 419, 437, 456], "20000": 356, "2007": 10, "200e": 92, "20477401j": [105, 119], "2048": 0, "21": [75, 89], "210": 77, "215": 209, "21941987": 354, "21968665": 354, "22": 349, "220": 456, "220446049250313e": 405, "222222": 225, "22460635e": 438, "22464680e": 104, "22497216": 189, "22776602": 209, "23": [6, 354], "230": 91, "23598776": 353, "23606798": 189, "24": [28, 29, 72, 74, 87, 90, 91, 158, 173, 195, 322, 346, 440, 442], "240": 77, "24264069": 189, "24544512": 354, "247219128924647": 234, "25": [89, 91, 96, 106, 146, 150, 151, 184, 197, 224, 236, 383, 392, 457, 458], "255": [6, 48, 50], "25506903": 354, "256": [0, 144], "26": [51, 91], "260": 456, "26618007j": 202, "27": [55, 130, 209, 345, 418, 457], "270": 77, "28": 91, "28000000e": 225, "2800000e": 225, "283185307179586": 456, "28318531": 456, "28352814": 354, "28904982": 204, "297": 10, "299": 6, "2d": [194, 212, 455], "2e": 75, "2f": 0, "2j": [61, 62, 86, 104, 156, 161, 168, 181, 183, 212, 404, 422, 427, 459], "2k": 456, "3": [0, 3, 4, 13, 20, 21, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 48, 51, 52, 53, 55, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 109, 113, 114, 116, 117, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 144, 146, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 168, 169, 170, 172, 173, 174, 178, 179, 180, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 295, 298, 303, 305, 311, 313, 322, 323, 324, 332, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 349, 353, 354, 358, 362, 369, 372, 378, 381, 382, 383, 393, 397, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 421, 423, 426, 427, 428, 430, 431, 432, 433, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463], "30": [72, 77, 87, 91, 120, 323, 350, 353, 437, 459], "300": [77, 456], "3003003": 406, "301": 10, "30102999566": 200, "3012989": 425, "30258509": [73, 210], "308": 225, "308j": 225, "31": [51, 144], "312": 93, "316": 209, "32": [89, 91, 144, 233, 235, 440], "33": 406, "330": 77, "333": 188, "33333333": 225, "3333333e": 225, "33340275": 444, "33486982e": 104, "33836967": 354, "340": 456, "34074171": 354, "34132519": 209, "34846923": 189, "34960421": 209, "35": [91, 364], "35106603e": 189, "35355338": 418, "36": 72, "360": 456, "37": 416, "371139e": 68, "38": [158, 356], "380": [6, 456], "38268343": 181, "38268343j": 181, "38629436": 73, "38885": 356, "389056099": [97, 100], "39": 6, "39295758": 354, "397": 6, "3e": [0, 75, 405], "3j": [86, 212, 427], "3rd": 60, "3x3": 211, "3x8000": 393, "4": [0, 13, 14, 20, 28, 29, 31, 33, 34, 43, 45, 46, 48, 50, 52, 58, 59, 60, 63, 66, 68, 70, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 101, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 126, 127, 130, 132, 133, 134, 138, 139, 140, 142, 144, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 161, 168, 172, 173, 176, 179, 184, 186, 187, 189, 192, 195, 196, 197, 202, 205, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 226, 227, 229, 231, 234, 236, 295, 298, 303, 311, 313, 322, 324, 332, 336, 338, 340, 345, 346, 348, 349, 353, 354, 355, 358, 378, 383, 399, 403, 404, 405, 408, 409, 410, 414, 415, 416, 417, 422, 426, 428, 431, 432, 433, 435, 436, 440, 441, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463], "40": [91, 120, 174, 350, 437], "40882036": 354, "4096": 0, "41421356": [178, 189], "420": 456, "429": 6, "44": [343, 349], "4400": [91, 440], "443469": 209, "44509285e": 104, "45": [18, 26], "4532": [91, 440], "46": 91, "460": 456, "46394577": 354, "464": 209, "4664": [91, 440], "47": 6, "4730": [91, 440], "4796": [91, 440], "48": [6, 72], "48093112": 354, "4874": [91, 440], "48927254": 354, "49": 6, "4928": [91, 440], "49543509": 354, "49778714": 456, "499128": 86, "4d": 194, "4e": 405, "4j": [156, 404, 459], "4x4": [447, 451], "5": [0, 6, 13, 14, 19, 20, 27, 28, 31, 43, 46, 47, 48, 50, 51, 52, 56, 58, 60, 63, 66, 67, 70, 72, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 92, 96, 101, 105, 106, 108, 116, 119, 120, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 144, 146, 149, 150, 151, 152, 153, 156, 157, 158, 161, 168, 172, 173, 174, 177, 181, 183, 184, 188, 189, 193, 197, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 231, 234, 290, 295, 323, 336, 338, 339, 340, 345, 348, 349, 353, 354, 355, 356, 358, 361, 373, 377, 378, 379, 380, 383, 386, 401, 403, 404, 405, 406, 408, 410, 412, 413, 414, 415, 416, 417, 419, 422, 427, 431, 432, 434, 435, 436, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463], "50": [105, 119, 120, 144, 173, 203, 204, 209, 350, 437, 440, 444, 461], "500": [173, 456], "5018": [91, 440], "5091786": 69, "51": 6, "512": 0, "5162": [91, 440], "52069395e": 104, "52359878": 353, "52928804": 354, "5306": [91, 440], "5399045e": 130, "54": 354, "540": 456, "542": 6, "54288406": 354, "54465213": 354, "548739": 425, "54930614": 27, "55": [343, 349], "5555555555555554": 236, "56": 6, "562": 209, "5620499351813308": [11, 12], "56920387": 354, "5707963267948966": 23, "57079633": [18, 26, 353, 456], "58997253": 354, "591953": 69, "5e": [203, 204], "5j": [218, 338, 427], "6": [0, 4, 6, 13, 20, 28, 29, 31, 43, 46, 50, 51, 58, 60, 66, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 100, 101, 106, 109, 120, 127, 130, 143, 146, 152, 156, 157, 158, 172, 173, 189, 190, 191, 194, 195, 197, 209, 211, 228, 229, 233, 295, 305, 322, 336, 340, 343, 345, 348, 354, 371, 373, 378, 383, 403, 404, 410, 414, 415, 416, 417, 427, 431, 433, 434, 435, 436, 440, 442, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 459, 460, 461, 463], "60": [72, 77, 91, 350, 437, 440, 456, 461], "600": 173, "60943791": 73, "61799388": 353, "62": 158, "6227766": 144, "62318272": 358, "62341325": 144, "624": 92, "63": 144, "63317787e": 438, "63522211": 354, "63836967": 354, "64": [0, 4, 91, 130, 144, 233, 235, 345, 416], "64000": 91, "65745445": 22, "66519143": 353, "6666666666666665": 231, "67": 91, "67305985": 137, "673174": 354, "67718303": 354, "69295758": 354, "69314718": [73, 192, 201], "6990877": 354, "6j": [156, 404, 459], "7": [13, 15, 20, 43, 56, 58, 66, 70, 72, 75, 78, 79, 80, 82, 83, 85, 87, 90, 97, 101, 127, 131, 144, 146, 158, 160, 172, 173, 189, 194, 211, 216, 221, 224, 305, 336, 347, 348, 354, 378, 404, 408, 411, 413, 414, 433, 434, 435, 436, 440, 446, 447, 448, 450, 451, 452, 453, 454, 456, 459, 461], "70": [173, 459, 461], "700": 173, "700e": 92, "70710677": [87, 304, 317], "70710678": [178, 180], "70710678j": 180, "70882036": 354, "71238898": 353, "718281828": [97, 100], "72": 72, "720": [74, 456], "72075441": 209, "72538256": 24, "74165739": 189, "742278e": 424, "74596669": 189, "74921661": 354, "75": [46, 96, 106, 146, 151, 184, 197], "754": 123, "75958653": 353, "76096244": 354, "76377462": 354, "77447665": 204, "78539816": [18, 25, 26, 456], "78927254": 354, "79175947": 73, "79769313e": 225, "7j": 347, "8": [4, 13, 15, 43, 55, 58, 66, 72, 78, 79, 80, 82, 83, 87, 89, 91, 92, 101, 104, 106, 120, 121, 127, 130, 144, 146, 156, 160, 172, 179, 189, 192, 194, 195, 197, 209, 211, 322, 336, 345, 346, 348, 354, 378, 397, 404, 414, 418, 424, 436, 440, 442, 444, 446, 447, 448, 450, 451, 452, 456, 457, 461], "80": [89, 91, 461], "8000": 393, "80226506": 354, "81715362": 354, "827941": [144, 209], "82842712": [181, 183], "84288406": 354, "84401099": 354, "84743374": 354, "84803548": 189, "85": 91, "86": 158, "87649168": 203, "88": 90, "88178420e": 104, "88997253": 354, "89920014": 358, "8f": 89, "8j": 459, "9": [4, 13, 43, 58, 66, 72, 75, 78, 79, 80, 82, 85, 87, 91, 93, 101, 104, 107, 108, 113, 124, 130, 132, 140, 144, 146, 160, 172, 180, 185, 189, 190, 191, 194, 209, 211, 224, 225, 305, 336, 348, 354, 356, 358, 378, 404, 414, 428, 433, 440, 446, 447, 448, 450, 451, 452, 453, 456, 457, 461], "90": [18, 77, 352, 461], "917152": 439, "92387953": 181, "92387953j": 181, "94": 91, "94591015": 73, "95": 185, "95799250e": 104, "98": 212, "98024613": 209, "99": [90, 201, 350], "99322285": 22, "99532227": 96, "996272": 439, "99822295": 24, "99853728": 96, "999": 92, "9990000e": 225, "99959305": 96, "99989938": 96, "9999": 225, "99997791": 96, "999999e": 160, "A": [10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 87, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 110, 111, 112, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 156, 157, 159, 163, 164, 165, 166, 167, 174, 175, 176, 177, 181, 182, 183, 185, 187, 188, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 218, 220, 221, 224, 228, 229, 233, 235, 290, 295, 303, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 347, 352, 353, 354, 356, 373, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 403, 406, 408, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 435, 436, 438, 439, 440, 441, 443, 445, 447, 449, 451, 453, 454, 457, 461, 462, 463, 479], "AND": [14, 48, 49, 50, 51, 159, 205, 206, 207, 208], "And": [4, 41, 42, 79, 87, 290, 447, 451], "As": 455, "Be": 180, "Being": 3, "But": [4, 89], "By": [28, 29, 42, 72, 87, 105, 109, 111, 115, 117, 121, 144, 185, 197, 209, 212, 213, 215, 219, 226, 227, 230, 231, 232, 233, 234, 235, 236, 290, 403, 409, 414, 432, 436, 445, 447, 449, 451, 458], "For": [0, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 303, 304, 305, 311, 317, 319, 322, 327, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 471, 479], "If": [4, 10, 11, 12, 14, 15, 19, 20, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 46, 58, 60, 70, 72, 73, 74, 75, 78, 82, 83, 86, 87, 89, 90, 91, 92, 99, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 133, 134, 136, 141, 144, 146, 150, 151, 152, 156, 157, 158, 160, 166, 167, 168, 177, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 209, 210, 213, 214, 215, 217, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 324, 343, 346, 349, 350, 354, 376, 398, 404, 405, 407, 409, 410, 414, 416, 417, 419, 426, 430, 431, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 455, 456, 457, 458, 459, 460, 461, 471, 479], "In": [4, 10, 28, 29, 74, 75, 91, 92, 110, 111, 112, 115, 117, 146, 177, 182, 188, 191, 204, 209, 228, 229, 231, 233, 235, 346, 349, 354, 398, 410, 434, 436, 454], "It": [4, 10, 14, 19, 28, 29, 58, 74, 75, 84, 86, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 146, 181, 183, 204, 212, 215, 226, 227, 228, 229, 230, 231, 232, 234, 236, 346, 432, 434, 436, 458, 479], "Its": [58, 195, 350, 442], "NOT": [49, 159, 205, 206, 207, 208], "No": [37, 91, 177], "Not": [14, 19, 163, 225, 228, 229, 230, 232, 233, 235, 346], "OR": [19, 48, 49, 50, 51, 159, 205, 206, 207, 208], "On": 4, "One": [43, 44, 45, 72, 88, 89, 115, 410], "Or": [146, 444], "That": 211, "The": [3, 4, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 53, 55, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 162, 163, 164, 165, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 290, 295, 304, 311, 313, 317, 322, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 348, 349, 350, 352, 353, 354, 357, 359, 360, 370, 375, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 403, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 471, 475, 479], "Then": [10, 38, 40, 211], "There": [10, 197, 455], "These": [4, 89, 91, 92, 99, 211, 223, 350, 437, 447, 451, 471, 475], "To": [4, 109, 115, 117, 130, 336, 456], "With": [28, 29, 46, 70, 189, 213, 219, 226, 227, 233, 235, 346, 434], "_": [0, 151, 431, 444], "__array_interface__": 89, "__bool__": 471, "__dlpack__": 136, "__dlpack_device__": 136, "__eq__": [87, 89, 125, 354], "__ge__": [87, 89, 125, 354], "__getitem__": [87, 89, 125], "__gt__": [87, 89, 125, 354], "__iter__": 125, "__le__": [87, 89, 125, 354], "__len__": [87, 89], "__lt__": [87, 89, 125, 354], "__main__": 0, "__name__": 0, "__ne__": [87, 89, 125, 354], "__next__": 125, "__setitem__": [87, 125], "__sycl_usm_array_interface__": 39, "_dtypes_list": 0, "a1": [34, 35], "a2": [34, 35], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 58, "a_min": 58, "a_resamp": 115, "ab": [6, 10, 12, 15, 160], "abc": 91, "abcd": 92, "about": [38, 40, 87, 123, 180, 301, 471], "abov": [3, 73, 78, 81, 107, 112, 117, 121, 157, 191, 210, 225, 407, 445, 446, 450], "absolut": [6, 11, 15, 18, 103, 160, 192, 234, 236, 347, 405, 432, 456, 458, 479], "accept": [30, 91, 354, 426, 447, 451], "access": [10, 79, 80, 122, 211, 447, 451, 471], "accord": [14, 19, 46, 54, 89, 121, 123, 180, 181, 182, 183, 210, 215, 231, 234, 236, 407, 412, 432, 458], "accordingli": [230, 232], "account": 410, "accumul": [73, 74, 75, 91, 150, 228, 229, 233, 235, 346, 434, 442], "accur": [89, 100, 146, 201, 203], "accuraci": [110, 111, 112, 115, 117], "achiev": 91, "across": [82, 151, 228, 229, 233, 235], "activ": 4, "actual": [89, 150, 151, 177, 188], "ad": [15, 89, 92, 99, 115, 160, 179, 192, 204, 456, 475], "add": [6, 89, 479], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [73, 177, 231, 455], "address": 89, "adjac": 456, "advanc": 91, "advers": 91, "advis": 4, "affect": [20, 82, 91, 122, 150, 151], "after": [88, 122, 335, 373, 414], "ag": 89, "against": [15, 28, 29, 52, 53, 58, 70, 145, 160, 189, 190, 213, 219, 226, 227, 233, 235, 346, 350, 434, 437], "ai": [3, 350, 437], "ai_max": 437, "ai_min": 437, "ainv": [184, 195], "al": 10, "algebra": [464, 475], "algorithm": [10, 91, 92, 104, 110, 118], "alia": [10, 16, 17, 85, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 221, 237, 354, 384, 387, 389, 408, 417, 453, 456, 460], "alias": [9, 109, 110, 115, 117], "align": 89, "all": [4, 6, 9, 15, 18, 19, 34, 35, 42, 46, 59, 70, 77, 83, 87, 88, 89, 91, 92, 97, 98, 100, 102, 107, 108, 112, 113, 116, 117, 121, 122, 127, 128, 129, 137, 138, 140, 144, 146, 152, 154, 156, 172, 177, 187, 190, 197, 209, 213, 219, 226, 227, 230, 232, 290, 293, 300, 313, 346, 356, 404, 405, 414, 417, 430, 434, 455, 460, 471, 479], "allclos": [6, 34, 160, 184, 190, 191, 193, 194, 196], "alloc": [3, 4, 20, 33, 36, 37, 38, 39, 40, 42, 46, 64, 73, 78, 79, 81, 87, 93, 94, 102, 106, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 166, 167, 197, 198, 209, 210, 211, 215, 218, 231, 234, 236, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 407, 430, 432, 445, 447, 451, 457, 458, 462, 463], "allow": [42, 87, 91, 150, 151, 204, 211, 290, 319, 436, 471], "alltru": 6, "almost": [31, 180, 447], "along": [3, 4, 14, 16, 17, 19, 28, 29, 30, 46, 59, 60, 70, 73, 74, 75, 78, 79, 81, 82, 83, 87, 88, 90, 101, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 127, 128, 129, 133, 134, 139, 144, 146, 152, 157, 189, 191, 195, 196, 197, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 287, 288, 289, 296, 297, 307, 309, 314, 315, 323, 326, 328, 330, 331, 333, 343, 346, 348, 349, 350, 407, 409, 414, 415, 417, 426, 431, 432, 434, 436, 437, 440, 441, 442, 444, 447, 448, 451, 452, 455, 456, 458, 460, 471], "alpha": [355, 360, 361, 377, 380], "alreadi": [4, 10, 37, 43, 44, 45, 341, 455], "also": [3, 10, 13, 15, 18, 20, 26, 48, 50, 51, 65, 85, 87, 89, 91, 95, 99, 107, 112, 116, 117, 118, 121, 130, 132, 133, 134, 135, 139, 141, 146, 147, 148, 149, 150, 153, 160, 174, 175, 176, 177, 203, 204, 211, 214, 220, 221, 223, 224, 322, 336, 337, 345, 392, 408, 412, 433, 436, 453, 455, 471], "alter": 82, "altern": [3, 4, 14, 19, 74, 75, 86, 87, 212, 213, 215, 219, 228, 229, 231, 233, 234, 235, 236, 332, 346, 432, 434, 458], "although": [18, 89, 111, 112, 113, 441], "alwai": [4, 10, 30, 36, 42, 82, 87, 90, 103, 130, 136, 181, 183, 234, 236, 290, 336, 410, 427, 432, 458], "amax": [6, 213], "ambigu": 471, "amin": [6, 219], "among": 90, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 169, 172, 174, 175, 176, 179, 182, 185, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 289, 290, 291, 292, 295, 305, 307, 311, 313, 315, 318, 319, 322, 323, 324, 325, 329, 330, 332, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 361, 362, 364, 373, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 471, 479], "anaconda": [3, 4], "analog": [105, 107, 109, 111, 112, 114], "analysi": 10, "analyt": 3, "angl": [6, 10, 25, 26, 76, 77, 156, 352, 353, 404, 405, 456, 479], "ani": [3, 6, 14, 15, 33, 36, 37, 38, 39, 40, 42, 52, 53, 64, 78, 81, 83, 87, 89, 91, 92, 105, 107, 111, 112, 117, 121, 122, 142, 143, 144, 146, 151, 152, 162, 169, 170, 186, 196, 197, 209, 211, 230, 232, 290, 311, 354, 398, 426, 457, 471], "anoth": [4, 66, 87, 101, 111, 112, 136, 295, 315, 343, 349, 415], "answer": 356, "anti": [82, 122], "anyth": 89, "ap": 185, "apart": 444, "api": [0, 2, 3, 6, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 89, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "appear": [99, 128, 129, 455], "append": [0, 6, 83, 90, 92, 99, 110, 111, 112, 174], "appli": [28, 29, 30, 46, 54, 91, 225, 411, 440, 444], "applic": [10, 89], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [87, 89, 110, 111, 112, 322], "appropri": [4, 28, 29, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 145, 196, 226, 227, 230, 232, 354, 382, 385, 436, 471], "approxim": [123, 444], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 144, 146, 147, 148, 149, 150, 151, 153, 158, 159, 160, 163, 164, 165, 174, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 312, 313, 322, 334, 335, 336, 337, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 379, 380, 382, 385, 386, 388, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 426, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 444, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 471, 479], "arang": [0, 6, 13, 28, 29, 31, 43, 44, 45, 46, 47, 58, 65, 77, 78, 79, 80, 82, 85, 86, 87, 91, 95, 97, 98, 100, 101, 104, 126, 127, 130, 135, 143, 144, 146, 150, 157, 158, 172, 173, 189, 197, 200, 201, 205, 206, 207, 208, 209, 211, 212, 213, 217, 219, 221, 224, 298, 337, 340, 343, 345, 349, 353, 378, 408, 411, 414, 433, 440, 442, 444, 447, 448, 451, 452, 453, 461, 463], "arbitrari": [41, 86, 89, 91, 158, 212, 411, 447, 451], "arbitrarili": 91, "arc": [18, 25], "arcco": [6, 22, 23, 25, 26, 68], "arccosh": [6, 21, 24, 27, 69], "arcsin": [6, 21, 24, 25, 26, 424], "arcsinh": [6, 22, 23, 27, 425], "arctan": [6, 18, 21, 23, 26, 27, 438], "arctan2": [6, 18, 25], "arctanh": [6, 22, 24, 25, 26, 439], "area": 444, "arg": [52, 172, 354], "arg1": 171, "arg2": 171, "argmax": [0, 6, 29, 87, 226, 350, 437, 471], "argmin": [6, 28, 87, 227, 437, 471], "argpartit": [6, 30, 350, 437, 471], "argsort": [6, 87, 350, 419, 426, 437, 443, 471], "argument": [0, 10, 11, 12, 13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 48, 49, 50, 51, 54, 55, 56, 58, 60, 65, 68, 69, 76, 77, 85, 86, 87, 89, 92, 96, 97, 98, 100, 130, 131, 132, 133, 134, 135, 149, 153, 156, 159, 170, 171, 174, 188, 189, 200, 201, 202, 203, 204, 211, 212, 214, 220, 221, 222, 224, 319, 332, 334, 335, 344, 345, 347, 349, 352, 353, 404, 405, 406, 408, 411, 412, 413, 418, 422, 423, 424, 425, 431, 433, 438, 439, 440, 444, 453, 454, 471, 479], "argwher": [6, 336], "ari": [43, 44, 45, 90], "arithmet": [46, 144, 215, 216, 231, 234, 236, 344, 432, 434, 458, 464, 475], "around": [6, 87, 144, 349, 416], "arr": [80, 89, 151, 351, 378, 448, 452], "arr2": 89, "arr_t": [42, 87, 290], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 303, 304, 305, 306, 308, 310, 311, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 475, 479], "array2str": 6, "array_equ": 6, "array_equiv": [6, 34], "array_lik": [33, 36, 37, 38, 39, 40, 41, 46, 64, 66, 78, 81, 90, 101, 142, 143, 144, 162, 169, 197, 209, 343, 349, 350, 354, 421, 436, 440, 457], "array_of_diagon": 82, "array_repr": 6, "array_split": [6, 60], "array_str": 6, "arrays_and_dtyp": 411, "art": 10, "asanyarrai": [6, 37, 40], "asarrai": [4, 6, 36, 38, 40, 41], "asarray_chkfinit": [6, 36, 37], "ascend": [181, 183, 419], "ascii": 89, "ascontiguousarrai": [6, 36, 37, 40], "asfarrai": [6, 36, 37], "asfortranarrai": [6, 36, 37, 38], "asmatrix": 6, "asnumpi": 87, "aspect": 89, "assembl": [60, 88, 152, 417, 431, 460], "assign": [87, 300, 322, 447, 451], "associ": [46, 150, 151, 471], "assum": [10, 46, 92, 109, 115, 117, 187, 190, 194, 211, 444], "astyp": [6, 87, 144, 336], "atleast_1d": [6, 44, 45, 99], "atleast_2d": [6, 43, 45, 99], "atleast_3d": [6, 43, 44, 99], "atol": [15, 160], "attain": 0, "attempt": [86, 188], "attribut": [87, 89, 94, 123, 143, 155, 191, 340, 463, 464], "automat": [150, 151], "avail": [2, 3, 4, 10, 67, 71, 89, 96, 216, 222, 226, 227, 230, 232, 233, 464, 471], "averag": [6, 87, 215, 231, 308, 434, 475], "avg": 46, "avoid": [33, 37, 44, 45, 109, 115, 117], "aweight": 71, "ax": [14, 19, 28, 29, 46, 70, 73, 83, 86, 87, 91, 99, 105, 107, 108, 111, 112, 113, 116, 117, 119, 121, 127, 146, 158, 189, 193, 195, 196, 210, 212, 213, 215, 219, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 329, 332, 341, 346, 407, 414, 415, 430, 432, 434, 435, 440, 441, 442, 443, 455, 458], "axi": [14, 16, 17, 19, 28, 29, 30, 46, 59, 60, 70, 72, 73, 74, 75, 82, 83, 87, 88, 90, 91, 99, 101, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 127, 128, 129, 133, 134, 139, 144, 146, 152, 157, 185, 189, 197, 209, 210, 212, 213, 214, 215, 216, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 289, 296, 297, 303, 307, 308, 309, 313, 314, 315, 318, 323, 324, 325, 326, 328, 330, 332, 333, 342, 343, 346, 348, 349, 350, 403, 407, 409, 410, 414, 415, 417, 426, 430, 431, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 455, 456, 458, 460, 471], "axis1": [82, 87, 298, 329, 331, 435, 442], "axis2": [82, 87, 298, 329, 331, 435, 442], "axisa": 72, "axisb": 72, "axisc": 72, "axiserror": [30, 426], "b": [10, 13, 15, 28, 29, 34, 35, 48, 51, 59, 60, 66, 72, 75, 86, 87, 88, 89, 91, 92, 95, 137, 138, 147, 148, 152, 158, 160, 173, 175, 176, 179, 185, 188, 189, 190, 192, 193, 194, 195, 196, 205, 207, 212, 213, 219, 335, 337, 341, 345, 355, 411, 417, 431, 440, 441, 449, 459, 460, 479], "back": [87, 139, 303, 403, 410, 415, 449], "backend": [2, 145, 357, 359, 360, 370, 375, 391], "backward": [10, 42, 87, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 146, 290, 414, 415], "bad": 366, "bartlett": 6, "base": [0, 4, 89, 91, 98, 101, 130, 144, 150, 151, 194, 199, 200, 201, 202, 203, 204, 209, 210, 212, 343, 345, 349, 351], "base_repr": 6, "basic": [54, 91, 471, 475], "bc": [179, 192], "bcde": 92, "becaus": [10, 14, 19, 109, 115, 117, 456, 471], "becom": [10, 87, 150, 332], "been": [88, 350, 415, 437], "befor": [4, 30, 60, 73, 87, 90, 110, 111, 112, 128, 129, 196, 210, 213, 219, 234, 236, 313, 324, 346, 407, 414, 415, 426, 432, 434, 441, 458, 459], "begin": [90, 92, 144, 197, 209], "behav": [198, 349], "behavior": [87, 119, 295, 441], "behaviour": 225, "behind": [87, 313], "being": [3, 89, 133, 134, 214, 220], "belong": [84, 150], "below": [0, 4, 9, 78, 81, 89, 115, 187, 445, 446, 450, 456, 471], "best": 92, "beta": [6, 365], "between": [15, 20, 54, 83, 90, 123, 138, 141, 146, 158, 160, 197, 209, 371, 385, 433, 444, 456], "beyond": [4, 414], "bia": 71, "big": 89, "bin": [84, 104, 106, 120, 150, 151, 392], "bin_edg": [150, 151], "binari": [48, 50, 51, 137, 138, 140, 141, 464, 475], "binary_repr": 6, "bincount": [6, 84, 150], "binomi": [6, 373], "bins_0": 151, "bins_1": 151, "bit": [48, 49, 50, 51, 89, 123, 155, 159, 174, 205, 207, 208, 233, 235, 412, 423, 475], "bitwis": [48, 50, 51], "bitwise_and": [6, 49, 50, 51, 159, 205], "bitwise_not": 6, "bitwise_or": [6, 48, 49, 51, 159, 207], "bitwise_xor": [6, 48, 49, 50, 159, 208], "biufcmmosuv": 89, "blackman": 6, "block": [6, 60, 88, 122, 152, 173, 417, 431, 460], "bmat": 6, "bool": [9, 14, 15, 19, 28, 29, 33, 34, 35, 37, 39, 42, 46, 54, 66, 70, 73, 84, 87, 89, 92, 95, 122, 136, 144, 147, 148, 150, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 187, 189, 190, 194, 197, 209, 210, 213, 215, 217, 219, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 290, 336, 337, 346, 407, 410, 423, 432, 434, 436, 455, 457, 458, 471], "bool_": 9, "boolean": [48, 49, 50, 51, 66, 73, 89, 101, 130, 136, 157, 159, 160, 163, 164, 165, 166, 167, 168, 172, 205, 207, 210, 211, 215, 231, 233, 234, 236, 336, 343, 407, 410, 432, 436, 458], "boolean_sequ": 172, "both": [10, 13, 15, 26, 34, 35, 46, 48, 50, 51, 58, 65, 72, 85, 86, 95, 111, 118, 130, 132, 133, 134, 135, 147, 148, 149, 153, 158, 160, 173, 174, 175, 176, 189, 203, 204, 205, 207, 208, 212, 214, 220, 221, 224, 235, 335, 337, 345, 408, 412, 433, 440, 442, 447, 449, 451, 453, 459, 461], "bound": [349, 419, 436, 437], "boundari": [146, 349], "briefli": 471, "broadcast": [13, 14, 19, 28, 29, 35, 46, 52, 53, 58, 66, 70, 85, 91, 101, 130, 133, 134, 153, 166, 167, 189, 190, 208, 210, 212, 213, 214, 215, 219, 220, 224, 226, 227, 231, 233, 234, 235, 236, 345, 346, 349, 350, 407, 409, 432, 433, 434, 437, 441, 453, 458, 461], "broadcast_arrai": [6, 53], "broadcast_shap": 6, "broadcast_to": [6, 52, 441], "brought": 10, "buffer": [39, 74, 75, 87, 136, 137, 138, 140, 141, 198, 213, 219, 228, 229, 410], "buffer_lik": 137, "buffererror": 136, "build": 475, "build_loc": 4, "built": 89, "busday_count": 6, "busday_offset": 6, "byte": [6, 42, 87, 89, 91, 137, 138, 198, 290, 306, 310], "byte_bound": 6, "byteord": 89, "byteswap": 6, "bz2": 198, "c": [2, 4, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 72, 76, 77, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 124, 130, 131, 132, 133, 134, 135, 142, 143, 145, 147, 148, 149, 153, 156, 158, 159, 163, 164, 165, 173, 174, 175, 176, 179, 185, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 220, 221, 224, 290, 295, 303, 316, 334, 335, 336, 337, 339, 340, 344, 345, 347, 352, 353, 403, 406, 408, 410, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 440, 441, 453, 454, 455, 461, 462, 463, 479], "c_contigu": [38, 40, 87, 295], "ca": 63, "calcul": [10, 11, 12, 13, 18, 26, 46, 73, 75, 83, 85, 90, 91, 95, 97, 98, 100, 104, 113, 130, 131, 132, 135, 146, 151, 153, 180, 181, 182, 183, 185, 190, 201, 203, 204, 210, 212, 215, 221, 224, 231, 234, 236, 337, 345, 346, 407, 408, 432, 433, 453, 458, 459, 464, 479], "call": [10, 18, 28, 29, 30, 38, 40, 89, 110, 111, 112, 115, 118, 139, 180, 182, 188, 211, 244, 336, 430, 436, 441, 444, 479], "callabl": [139, 211], "cambridg": 10, "can": [0, 3, 4, 10, 13, 15, 20, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 54, 64, 65, 72, 78, 79, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 102, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 120, 122, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 157, 158, 159, 160, 162, 169, 170, 172, 173, 174, 175, 176, 177, 184, 185, 186, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 214, 218, 220, 221, 224, 233, 235, 290, 295, 322, 324, 334, 335, 336, 337, 338, 339, 340, 344, 345, 350, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 408, 410, 412, 426, 433, 436, 437, 440, 442, 444, 445, 447, 451, 452, 453, 455, 457, 459, 461, 462, 463, 471, 479], "can_cast": [6, 475], "cannot": [60, 226, 227, 430, 431], "capabl": [20, 33, 36, 37, 38, 40, 46, 103, 144, 197, 209, 212], "care": [20, 180], "cartesian": 217, "case": [4, 14, 19, 20, 28, 29, 33, 36, 37, 38, 40, 46, 64, 74, 75, 78, 81, 83, 91, 92, 93, 94, 102, 106, 109, 114, 118, 120, 137, 138, 139, 140, 142, 143, 144, 146, 154, 180, 191, 194, 197, 198, 204, 209, 218, 228, 229, 233, 235, 338, 339, 340, 346, 410, 434, 440, 445, 456, 457, 462, 463, 471], "cast": [14, 19, 42, 54, 60, 66, 73, 74, 75, 87, 91, 130, 152, 180, 210, 212, 215, 225, 228, 229, 231, 233, 234, 235, 236, 290, 346, 407, 417, 431, 432, 434, 458, 460], "cat": [356, 373], "cauchi": 392, "cbrt": [6, 428], "cdef": 92, "cdot": 440, "cdoubl": 9, "ceil": [6, 32, 124, 131, 132, 413, 416, 454], "center": [105, 106, 107, 108, 112, 113, 120], "central": [146, 374, 375], "certain": [89, 211], "ch": 10, "chain": [86, 87, 91, 92], "chang": [42, 64, 72, 87, 89, 91, 101, 228, 229, 290, 303, 327, 332, 334, 343, 344, 349, 350, 351, 403, 410, 415, 456, 475], "char": 89, "charact": [89, 138], "check": [14, 19, 36, 37, 54, 109, 162, 169, 177, 190, 193], "check_valid": 372, "chi": [358, 374], "chisquar": 6, "choic": [6, 57, 87, 104, 105, 107, 110, 111, 112, 116, 117, 119, 121, 181, 183, 291], "choicelist": 420, "choleski": 6, "choos": [6, 18, 25, 87, 92, 461, 471], "chosen": [31, 150, 455, 461], "circ": 479, "circl": [192, 444], "clamp": [349, 436, 437], "clariti": 122, "class": [3, 87, 89, 125, 137, 138, 139, 141, 157, 198, 354, 382, 445, 475], "classic": 91, "clear": [89, 471], "clip": [6, 87, 349, 436, 437, 471], "close": [18, 21, 22, 23, 25, 41, 42, 87, 91, 99, 156, 197, 290, 354, 382, 404, 405, 413, 416, 444], "closer": 454, "cloud": 3, "cmake": 4, "co": [6, 21, 69, 182, 424, 438, 444], "code": [39, 89, 171], "coeffici": [185, 193, 196], "coerc": [39, 137, 138, 139, 140, 141, 198], "coin": 356, "col": 157, "collaps": [87, 303, 455], "column": [6, 36, 37, 38, 40, 41, 42, 59, 60, 74, 75, 82, 87, 88, 102, 122, 128, 129, 146, 152, 154, 180, 181, 185, 188, 191, 194, 290, 403, 417, 431, 445, 447, 451, 457, 460], "column_stack": [6, 60, 88, 152, 417, 431, 460], "com": 4, "combin": [0, 89, 99, 107, 112, 117, 121, 146], "combinatori": 92, "come": 455, "comma": [89, 91], "command": 4, "common": [110, 111, 112, 336, 440], "common_typ": 6, "compani": [356, 373], "compar": [15, 34, 95, 133, 134, 151, 160, 214, 220], "compare_chararrai": 6, "comparison": [2, 95, 147, 148, 175, 176, 337, 464, 475], "compat": [3, 10, 14, 19, 42, 46, 87, 210, 215, 230, 231, 232, 234, 236, 290, 407, 410, 432, 458, 475], "compil": [4, 89, 145], "complement": 456, "complementari": [132, 456], "complet": [3, 4, 92, 138, 139, 191, 415, 471], "complex": [10, 11, 12, 18, 25, 26, 34, 54, 73, 86, 87, 89, 92, 96, 103, 104, 105, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 130, 133, 134, 156, 161, 162, 168, 169, 180, 181, 182, 183, 191, 192, 194, 210, 212, 214, 220, 225, 234, 236, 293, 294, 347, 404, 405, 407, 427, 432, 455, 458, 459, 471, 475], "complex128": [9, 10, 46, 411], "complex64": [9, 10, 46, 87, 130, 323], "compliant": 87, "complic": [91, 479], "compon": [10, 34, 108, 113, 120, 123, 156, 225, 404], "compos": 65, "composit": [75, 173, 434, 444], "compress": [6, 101, 436, 471], "comput": [4, 10, 18, 21, 22, 23, 24, 25, 26, 27, 32, 46, 48, 49, 50, 51, 55, 61, 62, 68, 69, 73, 74, 75, 83, 84, 91, 97, 98, 99, 100, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 131, 146, 147, 148, 149, 150, 151, 156, 157, 159, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 194, 195, 196, 199, 200, 201, 202, 205, 206, 207, 208, 210, 212, 215, 216, 221, 228, 229, 230, 231, 232, 233, 234, 235, 236, 334, 344, 347, 404, 406, 407, 408, 413, 416, 418, 422, 423, 424, 425, 428, 432, 434, 438, 439, 440, 444, 447, 451, 458], "compute_uv": [178, 194], "concaten": [6, 59, 88, 152, 417, 431, 437, 460], "concept": [20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463, 471], "cond": [6, 184], "condit": [31, 42, 86, 87, 101, 178, 184, 188, 290, 336, 343, 349, 351, 420, 461], "condlist": 420, "confus": 135, "conj": [6, 62, 87, 109, 156, 177, 180, 347], "conjug": [6, 10, 61, 86, 87, 115, 118, 156, 177, 180, 181, 182, 183, 212, 293, 347, 459], "consecut": [83, 90, 146], "conserv": 217, "consid": [15, 20, 33, 34, 36, 37, 38, 40, 92, 120, 144, 160, 163, 181, 183, 187, 197, 209, 212, 354, 382, 455], "consist": [34, 35, 90, 104, 105, 107, 110, 111, 112, 116, 117, 119, 121, 138, 151, 196, 197, 437, 440], "constant": [9, 89, 146], "constraint": 46, "construct": [36, 37, 57, 78, 81, 82, 87, 89, 102, 137, 138, 139, 140, 141, 154, 172, 198, 218, 291, 338, 441, 442, 461, 464], "constructor": 471, "consum": [87, 310], "contain": [10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 48, 49, 50, 51, 55, 56, 58, 61, 62, 65, 66, 68, 69, 72, 73, 82, 85, 87, 89, 95, 97, 98, 100, 105, 106, 107, 110, 115, 118, 120, 126, 130, 131, 132, 133, 134, 135, 136, 141, 145, 146, 147, 148, 150, 151, 153, 156, 157, 159, 174, 175, 176, 181, 191, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 215, 220, 221, 224, 226, 227, 230, 231, 232, 234, 236, 319, 334, 336, 337, 344, 345, 347, 354, 404, 406, 407, 408, 412, 413, 416, 418, 422, 423, 424, 425, 428, 429, 432, 433, 438, 439, 443, 447, 448, 451, 452, 453, 454, 458, 471], "content": [38, 87, 391], "context": 10, "contigu": [36, 37, 38, 40, 86, 87, 91, 188, 316, 403, 410], "continu": [354, 386], "contourf": 217, "contract": [91, 92, 440], "contrast": [91, 349], "contribut": [10, 46, 150, 151], "control": [4, 42, 54, 60, 66, 87, 91, 152, 212, 290, 417, 431, 460], "conveni": [87, 332, 354], "convent": [86, 91, 92, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 158, 196, 212, 341, 440], "convers": [42, 87, 91, 290, 464], "convert": [28, 29, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 64, 76, 77, 78, 81, 89, 91, 92, 99, 142, 143, 144, 162, 169, 197, 209, 352, 353, 456, 457], "convolut": [10, 63, 67], "convolv": [6, 67], "coolei": 10, "coordin": [70, 139, 146, 157, 172, 217], "copi": [6, 20, 30, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 66, 78, 79, 81, 82, 87, 89, 93, 94, 101, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 217, 218, 225, 244, 290, 303, 305, 313, 319, 322, 338, 339, 340, 342, 343, 344, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 410, 419, 426, 430, 445, 446, 447, 450, 451, 457, 462, 463, 471], "copysign": [6, 334, 344], "copyto": [6, 87, 101, 295, 343], "core": [3, 89, 91, 471], "corner": [105, 107, 111, 112], "corrcoef": [6, 71], "correct": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 32, 48, 49, 50, 51, 55, 56, 60, 61, 62, 65, 68, 69, 76, 77, 85, 95, 97, 98, 100, 103, 109, 115, 117, 124, 130, 131, 132, 133, 134, 135, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 221, 224, 334, 335, 337, 344, 345, 347, 352, 353, 406, 408, 412, 413, 416, 418, 422, 423, 424, 425, 428, 429, 431, 433, 438, 439, 453, 454], "correctli": [18, 25, 28, 29, 70, 189, 213, 219, 226, 227, 233, 235, 336, 346, 434], "correl": [6, 475], "correspond": [6, 10, 20, 28, 29, 33, 36, 37, 38, 39, 40, 42, 58, 60, 64, 76, 77, 78, 79, 81, 82, 87, 93, 94, 102, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 154, 157, 172, 180, 181, 197, 198, 209, 211, 212, 218, 290, 295, 299, 338, 339, 340, 352, 353, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 414, 421, 432, 440, 443, 444, 445, 447, 451, 457, 458, 462, 463, 471], "correspondingli": 10, "cosh": [6, 22, 68, 425, 439], "cosin": [21, 22, 23, 24, 25, 26, 27, 68, 69, 424, 425, 438, 439], "cost": [91, 92], "costli": 92, "could": [87, 109, 115, 117, 324], "count": [14, 19, 47, 70, 84, 89, 92, 127, 137, 138, 140, 141, 146, 150, 151, 336, 346, 356, 434, 455, 464, 475], "count_nonzero": [6, 336], "counterpart": [10, 109, 115, 117, 471], "cov": [6, 372], "covari": 71, "cover": [447, 451, 475], "cpu": [4, 20, 33, 36, 37, 38, 40, 64, 67, 71, 78, 81, 93, 94, 96, 102, 106, 120, 137, 138, 139, 140, 142, 143, 144, 154, 197, 198, 209, 216, 218, 222, 233, 338, 339, 340, 445, 457, 462, 463], "creat": [3, 4, 20, 33, 35, 36, 37, 38, 39, 40, 42, 64, 78, 79, 80, 81, 82, 87, 89, 92, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 225, 290, 295, 338, 339, 340, 350, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 442, 445, 447, 448, 451, 452, 457, 462, 463, 471, 475], "creation": [89, 92, 464, 471, 475, 479], "crop": [104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121], "cross": [6, 67, 172], "csingl": 9, "ct": 10, "cube": [55, 130, 428], "cubic": 92, "cumprod": [6, 87, 228, 471], "cumproduct": 6, "cumsum": [6, 83, 87, 229, 434, 444, 471], "cumul": [73, 74, 75, 83, 87, 228, 229, 296, 297, 434, 444], "cupi": [2, 464], "current": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 48, 49, 50, 51, 55, 56, 58, 65, 68, 69, 76, 77, 85, 87, 89, 92, 97, 98, 100, 130, 131, 132, 133, 134, 135, 138, 149, 151, 153, 154, 159, 174, 200, 201, 202, 203, 204, 214, 220, 221, 222, 224, 322, 334, 335, 344, 345, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 433, 438, 439, 453, 454], "curv": 444, "custom": 471, "customarili": 10, "cut": 185, "cutoff": 190, "cycl": [106, 120, 172], "cyclic": 349, "cython": 4, "d": [0, 14, 19, 20, 46, 59, 60, 74, 75, 78, 79, 80, 81, 82, 86, 87, 88, 89, 102, 106, 108, 113, 120, 122, 126, 128, 129, 141, 152, 154, 158, 172, 179, 181, 182, 188, 189, 192, 212, 217, 228, 229, 235, 303, 336, 345, 346, 349, 359, 403, 410, 417, 419, 421, 431, 434, 436, 440, 441, 442, 449, 455, 457, 460, 471], "d0": [354, 381, 383], "d1": [354, 383], "d3": 79, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 81, 84, 85, 86, 87, 89, 91, 93, 94, 95, 96, 97, 98, 100, 102, 103, 109, 115, 117, 123, 124, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 169, 174, 175, 176, 185, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 236, 290, 319, 332, 334, 335, 337, 339, 340, 343, 344, 345, 347, 349, 350, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 437, 438, 439, 442, 445, 453, 454, 458, 460, 461, 462, 463, 464, 475], "datatyp": [89, 187], "date": 4, "datetim": 89, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [71, 87, 234, 236, 326, 333, 432, 458], "decai": 367, "decim": [32, 87, 123, 124, 320, 413, 416], "decomposit": [177, 184, 187, 190, 194, 475], "decompress": 198, "decreas": [84, 444], "decreasingli": [10, 105, 107, 111, 112], "deem": 136, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 46, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 181, 183, 185, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 303, 334, 335, 337, 338, 339, 340, 342, 344, 345, 346, 347, 349, 352, 353, 354, 358, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 395, 398, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 471], "default_rng": 6, "defg": 92, "defici": 187, "defin": [10, 72, 89, 94, 104, 133, 134, 143, 149, 150, 151, 214, 220, 225, 340, 344, 405, 463, 471], "definit": [72, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 131, 177, 444], "deg": [18, 353], "deg2rad": [6, 352, 353, 456], "degre": [6, 18, 76, 234, 236, 352, 353, 396, 432, 456, 458, 479], "del": 479, "delet": 6, "delta": [10, 234, 236, 432, 456, 458], "demonstr": [0, 4, 89], "dens": [157, 172, 218], "densiti": 150, "depend": [4, 31, 82, 103, 109, 115, 117, 181, 185, 191, 193, 194, 197, 233, 235, 420, 461], "deprec": 6, "deprecate_with_doc": 6, "depth": [59, 60, 88, 152, 417, 431, 460], "deriv": 146, "descend": 194, "descr": 89, "describ": [73, 89, 210, 407, 475], "descript": [73, 89, 110, 112, 150, 210, 407, 471], "design": 10, "desir": [20, 33, 36, 37, 38, 40, 41, 53, 93, 94, 102, 110, 111, 112, 142, 143, 144, 154, 197, 209, 339, 340, 441, 445, 462, 463], "destin": [60, 152, 223, 349, 350, 417, 431, 437, 460], "destruct": 479, "det": [6, 192], "detail": [32, 105, 107, 111, 112, 116, 117, 119, 121, 136, 416, 447, 448, 451, 452, 455, 471], "determin": [13, 18, 21, 22, 23, 24, 25, 26, 27, 48, 50, 51, 55, 65, 68, 69, 76, 77, 85, 97, 98, 100, 132, 133, 134, 135, 138, 139, 141, 153, 174, 179, 185, 191, 192, 199, 200, 201, 202, 203, 204, 212, 214, 220, 221, 224, 335, 345, 352, 353, 406, 408, 412, 418, 422, 424, 425, 428, 429, 433, 438, 439, 442, 453, 454], "devel": 4, "develop": [3, 4], "deviat": [87, 215, 231, 234, 236, 326, 354, 369, 376, 432, 458], "devic": [0, 2, 3, 20, 33, 36, 37, 38, 39, 40, 42, 46, 64, 73, 78, 79, 81, 87, 91, 93, 94, 102, 103, 106, 120, 124, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 210, 211, 212, 215, 218, 231, 234, 236, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 407, 430, 432, 445, 447, 451, 457, 458, 462, 463], "df": [358, 374, 396, 397], "dfden": [362, 375], "dfnum": [362, 375], "dft": [10, 104, 109, 110, 114, 115, 118], "di": [79, 80], "diag": [6, 81, 82, 91, 102, 128, 129, 154, 180, 182, 194, 442], "diag_indic": [6, 80, 122], "diag_indices_from": [6, 79, 122], "diagflat": [6, 78, 82, 442], "diagon": [6, 78, 79, 80, 81, 87, 91, 102, 122, 154, 177, 181, 182, 183, 211, 331, 442, 445, 446, 447, 448, 450, 451, 452, 471], "dice": 371, "dictionari": 89, "diff": [6, 75, 90, 146, 150], "differ": [3, 10, 15, 20, 33, 36, 37, 38, 40, 46, 64, 73, 75, 78, 81, 83, 87, 89, 90, 93, 94, 102, 105, 106, 110, 111, 113, 116, 119, 120, 123, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 146, 154, 160, 183, 197, 198, 209, 210, 212, 218, 295, 338, 339, 340, 343, 345, 350, 407, 433, 437, 445, 447, 451, 456, 457, 462, 463, 475], "digit": [6, 10, 123, 150], "dim": 15, "dimens": [14, 19, 28, 29, 33, 43, 44, 45, 46, 59, 60, 66, 70, 71, 72, 79, 82, 83, 87, 89, 99, 111, 112, 124, 128, 129, 146, 152, 157, 158, 172, 187, 189, 191, 210, 213, 215, 217, 218, 219, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 303, 311, 322, 336, 338, 346, 350, 354, 384, 386, 387, 389, 407, 410, 421, 430, 431, 432, 434, 435, 436, 437, 441, 442, 447, 448, 451, 452, 455, 458, 471, 475], "dimension": [2, 4, 30, 63, 67, 70, 73, 79, 80, 81, 82, 83, 84, 87, 90, 91, 104, 105, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 137, 138, 140, 146, 157, 172, 185, 191, 195, 196, 210, 213, 217, 218, 219, 226, 227, 230, 232, 234, 236, 325, 338, 341, 346, 407, 426, 432, 434, 436, 441, 444, 455, 458, 459, 464], "direct": [10, 72, 83, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 128, 129, 146, 335], "directli": [89, 139, 157, 209, 336, 437], "directori": 145, "dirichlet": 6, "discard": 454, "discont": 456, "discontinu": 456, "discret": [3, 10, 63, 67, 75, 83, 90, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 146, 354, 464], "disp": 6, "dispers": 399, "displac": [87, 327], "distanc": 146, "distinct": [133, 134, 214, 220], "distinguish": 89, "distribut": [3, 4, 209, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 475], "divid": [6, 88, 132, 135, 221, 408, 453], "divis": [85, 132, 135, 221, 345, 408, 453, 454], "divisor": [234, 236, 432, 458], "divmod": [6, 471], "dlpack": 136, "dmlc": 136, "dn": [354, 381, 383], "do": [3, 4, 89, 211, 356, 415, 444], "docstr": 471, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 471], "doe": [20, 54, 91, 101, 103, 118, 133, 134, 136, 191, 225, 228, 229, 343, 436], "domain": [10, 109, 114], "done": [3, 42, 87, 91, 196, 290, 455, 456], "dot": [6, 87, 91, 92, 158, 177, 182, 184, 188, 190, 191, 193, 194, 195, 196, 212, 440, 459], "doubl": [9, 367, 440], "down": 129, "dp": [85, 179, 181, 192, 193, 345, 410, 411, 433, 453], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 226, 227, 230, 232, 233, 290, 295, 338, 339, 340, 348, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "dpnp": [0, 2, 3, 4, 10, 464, 471, 475, 476, 479], "dpnp_arrai": [20, 33, 36, 37, 38, 40, 42, 64, 78, 79, 81, 93, 94, 102, 106, 120, 123, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 155, 157, 197, 198, 209, 211, 218, 237, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463, 464], "dpnp_iface_arraycr": [218, 338], "draw": [354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "drawn": [354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 379, 380, 382, 385, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 420], "drill": [356, 373], "driver": 2, "drop": [3, 89], "dsplit": [6, 60, 88], "dst": 66, "dstack": [6, 59, 60, 152, 417, 431, 460], "dt": [89, 444], "dt2": 89, "dtype": [0, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 42, 46, 48, 49, 50, 51, 54, 55, 56, 60, 61, 62, 65, 68, 69, 71, 73, 74, 75, 76, 77, 79, 85, 87, 91, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 174, 175, 176, 188, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 296, 297, 308, 314, 323, 326, 328, 331, 333, 334, 335, 337, 339, 340, 344, 345, 346, 347, 352, 353, 354, 376, 382, 398, 406, 407, 408, 411, 412, 413, 416, 417, 418, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 436, 438, 439, 442, 445, 446, 450, 453, 454, 458, 460, 462, 463, 471], "due": [118, 479], "dump": 6, "dx": [146, 444], "dy": 146, "dz": 146, "e": [9, 10, 22, 24, 73, 74, 82, 89, 93, 94, 99, 102, 105, 109, 110, 111, 112, 115, 117, 118, 130, 138, 142, 143, 146, 154, 174, 180, 192, 195, 199, 339, 340, 354, 405, 409, 435, 445, 462, 463], "ea": 92, "each": [0, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 61, 62, 65, 68, 69, 74, 75, 79, 82, 84, 85, 87, 89, 92, 95, 97, 98, 100, 105, 107, 109, 111, 112, 115, 116, 117, 119, 121, 128, 129, 130, 131, 132, 135, 139, 146, 147, 148, 150, 151, 156, 159, 163, 164, 165, 172, 174, 175, 176, 180, 181, 182, 183, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 221, 223, 224, 225, 320, 334, 336, 337, 344, 345, 347, 350, 356, 373, 404, 406, 408, 409, 412, 413, 414, 416, 418, 422, 423, 424, 425, 428, 429, 431, 433, 437, 438, 439, 441, 444, 447, 448, 451, 452, 453, 454, 455, 471], "easier": 436, "easiest": 4, "easili": [0, 151], "edg": [58, 84, 150, 151], "edge_ord": 146, "ediff1d": [6, 83, 146], "effect": [92, 130, 133, 134, 214, 220, 345, 456], "effici": [10, 104, 118, 138, 187, 190, 194], "efgh": 92, "eig": [6, 181, 182, 183], "eigenvalu": [180, 181, 182, 183, 475], "eigenvector": [180, 181, 182, 183], "eigh": [6, 180, 182, 183], "eigval": [6, 180, 181, 183], "eigvalsh": [6, 180, 181, 182], "einstein": [86, 91, 92, 158, 196, 212, 341, 440], "einsum": [6, 86, 92, 158, 196, 212, 341, 440], "einsum_path": [6, 91], "either": [34, 35, 40, 46, 73, 82, 89, 105, 107, 109, 111, 112, 115, 117, 119, 121, 122, 146, 158, 181, 183, 189, 191, 210, 226, 227, 230, 232, 233, 235, 407, 419, 437, 444], "element": [4, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 46, 47, 48, 49, 50, 51, 55, 56, 58, 61, 62, 65, 66, 68, 69, 73, 74, 75, 80, 82, 83, 84, 85, 87, 89, 90, 92, 95, 97, 98, 100, 101, 102, 103, 105, 107, 111, 112, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 182, 186, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 285, 286, 293, 294, 296, 297, 299, 300, 303, 305, 306, 308, 310, 312, 313, 318, 319, 320, 321, 323, 326, 327, 330, 333, 334, 335, 336, 337, 343, 344, 345, 346, 347, 349, 351, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 436, 438, 439, 440, 441, 442, 444, 446, 448, 450, 452, 453, 454, 455, 456, 458, 461, 471, 475, 479], "element_count": [87, 323], "ellipsi": 91, "els": [0, 192, 242], "elsewher": [102, 154, 445, 461], "empti": [4, 6, 33, 87, 94, 105, 107, 111, 112, 116, 117, 119, 121, 138, 142, 143, 185, 300, 339, 340, 343, 462, 463], "empty_lik": [6, 33, 93, 143, 340, 463], "enabl": [122, 187, 190, 194], "encount": [228, 229, 230, 232], "end": [20, 82, 89, 90, 92, 110, 144, 197, 209], "end_tim": 0, "endian": 89, "endpoint": [20, 144, 197, 209, 444], "engin": 390, "enough": 150, "entir": [46, 73, 109, 150, 151, 210, 215, 230, 231, 232, 234, 236, 407, 432, 458], "entri": [87, 89, 93, 101, 109, 115, 117, 122, 127, 128, 129, 325, 430], "enumer": 136, "env": 4, "environ": 4, "ep": [123, 187, 335, 405], "epsilon": [187, 405], "epsneg": 123, "equal": [6, 14, 15, 19, 34, 35, 46, 60, 67, 71, 75, 87, 102, 144, 146, 147, 148, 150, 151, 152, 160, 162, 169, 171, 174, 175, 176, 186, 190, 191, 196, 197, 209, 221, 313, 337, 354, 364, 398, 408, 412, 413, 416, 417, 422, 430, 431, 445, 447, 451, 460], "equal_nan": [15, 34, 160, 455], "equat": [185, 193, 195, 196, 475], "equiv": [42, 54, 60, 66, 87, 91, 152, 186, 212, 290, 417, 431, 460], "equival": [10, 13, 14, 16, 17, 19, 28, 29, 30, 32, 35, 46, 64, 72, 73, 76, 77, 85, 86, 87, 88, 92, 99, 101, 126, 133, 134, 135, 172, 195, 210, 221, 224, 244, 285, 286, 298, 311, 319, 322, 332, 336, 341, 344, 352, 353, 354, 382, 407, 408, 410, 416, 421, 426, 433, 434, 436, 440, 443, 453, 455, 471, 479], "error": [73, 91, 96, 109, 114, 180, 210, 407, 430, 464, 471], "essenti": 4, "estim": [71, 151, 356, 373, 444], "et": 10, "etc": [10, 33, 37, 89, 105, 107, 111, 112, 116, 117, 119, 121, 373], "eturn": 101, "euclidean": 185, "euler_gamma": 9, "evalu": [14, 15, 19, 87, 91, 92, 95, 162, 169, 196, 217, 285, 286, 341, 440, 471], "even": [10, 89, 106, 108, 109, 110, 113, 114, 115, 117, 118, 120, 162, 169, 413, 416], "evenli": [20, 144, 197, 209, 413, 444], "event": 204, "everi": [117, 350, 437], "everywher": 115, "exact": [101, 188, 343], "exactli": [10, 41, 141, 354, 382], "examin": 185, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 298, 300, 303, 304, 305, 311, 313, 317, 319, 322, 323, 324, 327, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 479], "exce": 204, "except": [4, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36, 37, 38, 40, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 68, 69, 76, 77, 83, 84, 85, 86, 87, 93, 94, 95, 97, 98, 100, 102, 116, 117, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 152, 153, 154, 159, 163, 164, 165, 174, 175, 176, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 221, 224, 230, 231, 232, 233, 234, 235, 236, 290, 334, 335, 337, 339, 340, 344, 345, 346, 347, 352, 353, 406, 408, 409, 410, 412, 413, 418, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 438, 439, 453, 454, 458, 462, 463], "exclud": [11, 12, 197, 354, 398], "exclus": [354, 382], "execut": [3, 4, 36, 37, 67, 71, 96, 139, 216, 222, 233, 357, 359, 360, 370, 375, 391, 479], "executor": 0, "exist": [10, 59, 60, 88, 89, 99, 136, 152, 410, 417, 431, 460, 475], "exp": [6, 10, 98, 100, 104, 192, 201, 203, 210], "exp2": [6, 97, 100], "expand": [83, 99], "expand_dim": [6, 28, 29], "expect": [4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 32, 48, 49, 50, 51, 55, 56, 61, 62, 65, 68, 69, 70, 73, 74, 75, 76, 77, 85, 86, 89, 95, 97, 98, 100, 103, 115, 124, 130, 131, 132, 133, 134, 135, 147, 148, 149, 153, 156, 159, 160, 163, 164, 165, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 219, 220, 221, 224, 228, 229, 231, 233, 234, 235, 236, 334, 335, 337, 344, 345, 346, 347, 352, 353, 404, 406, 407, 408, 412, 413, 416, 418, 422, 423, 424, 425, 428, 429, 432, 433, 434, 438, 439, 453, 454, 458, 461], "explain": [107, 112, 117, 121, 471], "explan": 89, "explicit": 91, "explicitli": [82, 105, 107, 111, 112, 116, 117, 119, 121], "exploit": [10, 118], "explor": [92, 356, 373], "expm1": [6, 97, 98, 201], "expon": [10, 97, 98, 100, 130, 186, 203, 204, 210, 345, 380, 475], "exponenti": [6, 10, 92, 203, 204, 210, 367, 393], "expos": [137, 471], "express": [10, 26, 91, 92, 198, 479], "extend": [10, 89, 173, 471], "extens": [0, 1, 3, 4, 9, 145, 198, 464], "extobj": 212, "extra": [89, 115, 141], "extract": [6, 78, 81, 82, 91, 102, 126, 154, 157, 211, 343, 436, 442], "extrema": 475, "ey": [6, 61, 62, 70, 87, 111, 112, 133, 134, 154, 158, 173, 184, 186, 187, 195, 196, 208, 214, 220, 421, 442], "f": [0, 6, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 85, 87, 89, 91, 93, 94, 95, 97, 98, 100, 102, 103, 106, 118, 120, 124, 130, 131, 132, 133, 134, 135, 142, 143, 146, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 186, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 220, 221, 224, 290, 295, 303, 334, 335, 337, 339, 340, 344, 345, 347, 352, 353, 375, 403, 406, 408, 410, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 449, 453, 454, 461, 462, 463], "f0": 89, "f1": 89, "f2": 89, "f4": 54, "f8": [54, 89], "f_contigu": [38, 40], "f_k": 10, "fab": [6, 11, 12], "fact": 182, "factor": [10, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 177, 191], "fail": [87, 322, 356], "fallback": [180, 182, 357, 359, 360, 370, 375, 391], "fals": [14, 15, 16, 17, 18, 19, 28, 29, 33, 34, 35, 37, 38, 40, 42, 46, 48, 49, 51, 52, 53, 54, 64, 70, 71, 73, 75, 84, 87, 89, 91, 92, 94, 95, 101, 122, 136, 139, 143, 144, 147, 148, 150, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 187, 189, 190, 194, 197, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 242, 285, 286, 287, 288, 290, 307, 308, 309, 314, 326, 328, 333, 336, 337, 340, 346, 348, 407, 410, 423, 432, 434, 455, 457, 458, 461, 463, 471], "famili": 10, "fanci": 436, "fashion": [204, 471], "fast": [10, 104, 105, 107, 111, 112, 117, 118, 121], "fastcopyandtranspos": 6, "faster": [10, 133, 134], "fastest": [87, 303, 403, 410], "fb": [92, 449], "featur": 89, "few": 122, "fft": [6, 464, 475], "fft2": [6, 104, 107, 111], "fftfreq": [6, 10, 104, 108, 113, 120], "fftn": [6, 104, 105, 112, 118, 121], "fftshift": [6, 10, 105, 107, 112, 113], "fh": 138, "field": [89, 217], "field1": 89, "file": [137, 138, 140, 141, 145, 198], "filenam": [138, 198], "fill": [6, 33, 87, 93, 94, 122, 142, 143, 150, 151, 217, 225, 295, 339, 340, 445, 462, 463], "fill_diagon": 6, "fill_valu": [142, 143], "filt": 449, "filter": [10, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "final": [4, 10, 117, 118, 119, 121, 144, 209], "find": [31, 47, 84, 87, 103, 150, 187, 190, 194, 321, 335, 336, 409, 419, 426, 455, 475], "find_common_typ": 6, "fine": 4, "finfo": [335, 405], "finfo_object": 123, "finit": [163, 164, 165, 166, 167, 225], "first": [13, 14, 15, 19, 26, 28, 29, 30, 34, 35, 46, 48, 50, 51, 59, 60, 65, 72, 73, 82, 85, 86, 87, 89, 92, 95, 98, 105, 107, 109, 111, 112, 127, 130, 132, 133, 134, 135, 146, 147, 148, 150, 151, 153, 158, 160, 171, 173, 174, 175, 176, 188, 195, 198, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 220, 221, 224, 226, 227, 303, 337, 341, 343, 345, 346, 403, 408, 410, 412, 414, 417, 419, 426, 427, 429, 433, 434, 435, 437, 440, 442, 453, 455, 459, 460], "fit": [185, 409], "fix": [6, 32, 56, 82, 89, 131, 349, 413, 416, 454], "flag": [38, 40, 87, 89, 295], "flanneri": 10, "flat": [28, 29, 87, 90, 125, 303, 409], "flatnonzero": [6, 336], "flatten": [6, 28, 29, 30, 60, 70, 74, 75, 78, 81, 82, 87, 90, 122, 126, 150, 151, 213, 219, 226, 227, 228, 229, 233, 235, 302, 316, 324, 336, 341, 350, 403, 409, 414, 426, 436, 437, 442, 455, 459], "flexibl": [86, 89, 138, 188], "flip": [6, 49, 82, 122, 128, 129, 159, 356], "fliplr": [6, 82, 122, 127, 129], "flipud": [6, 82, 122, 127, 128], "float": [11, 12, 18, 20, 26, 36, 37, 39, 46, 54, 65, 73, 75, 89, 93, 94, 98, 102, 103, 106, 120, 123, 124, 130, 137, 138, 139, 140, 141, 142, 143, 146, 150, 151, 154, 156, 185, 186, 187, 189, 190, 197, 198, 203, 204, 209, 210, 213, 215, 219, 225, 231, 234, 236, 335, 339, 340, 345, 354, 358, 383, 384, 386, 387, 389, 392, 393, 395, 398, 404, 405, 406, 407, 418, 432, 445, 456, 458, 462, 463, 471, 475], "float16": [9, 130], "float32": [0, 9, 10, 39, 42, 54, 74, 87, 89, 91, 130, 290, 335, 354, 376, 381, 383, 384, 386, 387, 389, 395, 398, 411], "float64": [0, 9, 10, 39, 42, 46, 54, 75, 87, 89, 91, 290, 354, 355, 361, 362, 363, 365, 367, 368, 369, 376, 377, 380, 381, 383, 384, 386, 387, 388, 389, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 411], "float_pow": [6, 345], "floor": [6, 32, 56, 124, 132, 221, 408, 413, 416, 454], "floor_divid": [6, 221, 408], "flop": 92, "flush": 138, "fmax": [6, 134, 213, 214, 220, 230, 345], "fmin": [6, 133, 214, 219, 220, 232, 345], "fmod": [6, 221, 345, 408], "fn": 139, "fname": 198, "follow": [4, 10, 46, 89, 99, 115, 123, 136, 155, 181, 183, 190, 440, 471, 475], "forc": [89, 91], "forg": 4, "form": [10, 33, 36, 37, 38, 39, 40, 59, 64, 78, 81, 87, 88, 91, 92, 111, 112, 115, 142, 143, 144, 162, 169, 172, 197, 209, 332, 417, 457, 460], "format": [89, 136, 138, 141, 475], "format_float_posit": 6, "format_float_scientif": 6, "former": [350, 437], "forth": 440, "fortran": [40, 42, 87, 290, 303, 403, 410], "forward": [10, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 146], "found": [4, 419, 471], "four": [354, 383], "fourier": [10, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 464], "fourth": 105, "frac": [10, 444], "fraction": [222, 454], "free": [87, 319], "freedom": [234, 236, 396, 432, 458], "freq": [106, 108, 113, 120], "freq_spectrum": 109, "frequenc": [10, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120], "freshli": [166, 167], "frexp": 6, "fro": [178, 189], "frobeniu": 178, "from": [3, 10, 14, 19, 20, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 52, 54, 57, 60, 64, 66, 73, 76, 77, 78, 79, 81, 82, 87, 88, 89, 91, 93, 94, 98, 101, 102, 106, 110, 119, 120, 121, 127, 130, 136, 137, 138, 139, 140, 141, 142, 143, 146, 150, 152, 154, 157, 172, 180, 182, 183, 187, 188, 198, 210, 211, 217, 218, 291, 295, 325, 330, 338, 339, 340, 343, 346, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 410, 411, 417, 419, 420, 429, 430, 431, 434, 436, 437, 442, 445, 447, 449, 451, 452, 455, 456, 457, 460, 461, 462, 463, 475], "from_": 54, "from_dlpack": 6, "frombuff": [6, 138, 140, 141, 198], "fromfil": [6, 137, 140, 141], "fromfunct": [6, 36, 37], "fromit": [6, 36, 37, 137, 138, 141], "frompyfunc": 6, "fromregex": [6, 198], "fromstr": [6, 137, 138, 140, 198], "front": 449, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463], "full_lik": [6, 33, 94, 142, 340, 463], "full_matric": 194, "fulli": 89, "function": [0, 2, 3, 11, 12, 16, 17, 20, 28, 29, 32, 33, 36, 37, 38, 40, 41, 64, 67, 71, 73, 76, 77, 82, 85, 87, 91, 93, 94, 96, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 121, 122, 130, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 154, 172, 180, 182, 188, 198, 201, 203, 204, 210, 211, 216, 217, 221, 222, 233, 285, 286, 295, 298, 319, 322, 332, 339, 340, 345, 350, 352, 353, 354, 357, 359, 360, 370, 375, 391, 407, 408, 416, 417, 422, 432, 436, 437, 441, 447, 448, 451, 452, 453, 458, 460, 461, 462, 463, 464, 471, 475], "fundament": [10, 89], "further": [447, 451], "futur": [89, 151], "fweight": 71, "g": [4, 10, 89, 93, 94, 102, 142, 143, 154, 339, 340, 354, 445, 462, 463, 479], "g360fa48393c": 6, "gamma": [6, 394], "gauss": 10, "gaussian": [354, 376, 400], "gc": 92, "gcd": 6, "gen": 91, "gender": 89, "gener": [10, 30, 46, 89, 110, 115, 118, 121, 144, 158, 180, 181, 182, 183, 190, 191, 198, 209, 354, 356, 359, 390, 444, 447, 451, 457, 471, 475], "genfromtxt": [6, 198], "geometr": [6, 144, 197], "geomspac": [6, 197, 209], "get": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 80, 81, 87, 93, 94, 102, 106, 109, 115, 117, 120, 130, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 322, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 437, 445, 447, 448, 451, 452, 457, 462, 463, 471], "get_arrai": 87, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 354], "get_sycl_devic": 354, "get_sycl_queu": 354, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 89], "getter": [87, 322], "gid": 151, "github": 136, "give": [10, 81, 87, 130, 151, 332, 410, 421, 455], "given": [14, 15, 19, 20, 28, 29, 32, 33, 34, 36, 37, 38, 40, 42, 46, 59, 64, 70, 71, 74, 75, 83, 86, 87, 88, 89, 90, 92, 93, 94, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 133, 134, 142, 143, 144, 146, 150, 151, 160, 184, 197, 209, 211, 213, 214, 217, 219, 220, 228, 229, 230, 232, 233, 234, 235, 236, 287, 288, 290, 296, 297, 309, 314, 315, 320, 323, 326, 328, 333, 336, 339, 340, 343, 346, 348, 349, 354, 359, 381, 398, 407, 409, 413, 414, 415, 417, 419, 432, 434, 436, 440, 441, 444, 445, 455, 458, 460, 462, 463, 471], "global": 0, "good": 366, "gpu": [0, 3, 4, 20, 33, 36, 37, 38, 40, 64, 78, 81, 93, 94, 102, 106, 120, 137, 138, 139, 140, 142, 143, 144, 154, 197, 198, 209, 218, 338, 339, 340, 445, 457, 462, 463], "grade": 89, "gradient": [6, 83, 90, 185], "graphic": 4, "great": 10, "greater": [6, 87, 95, 132, 148, 174, 175, 176, 187, 191, 313, 337, 412, 422, 430, 456], "greater_equ": [6, 95, 147, 175, 176, 337], "greatest": 132, "greedi": [91, 92], "grid": [36, 37, 139, 157, 217, 218, 338], "group": [31, 336], "guarante": [89, 410], "guid": [2, 3], "gumbel": 6, "gz": 198, "h": [145, 177, 191, 217], "ha": [4, 10, 11, 12, 14, 18, 19, 28, 29, 30, 46, 73, 74, 75, 84, 89, 95, 99, 109, 114, 115, 139, 146, 147, 148, 152, 156, 161, 162, 168, 169, 175, 176, 182, 192, 194, 210, 215, 221, 228, 229, 231, 233, 234, 235, 236, 337, 346, 404, 405, 406, 407, 408, 409, 415, 418, 430, 431, 432, 434, 435, 436, 441, 442, 458, 471], "had": [350, 437], "hadamard": 92, "half": [22, 105, 107, 108, 109, 111, 112, 197, 354, 384, 386, 387, 389, 398, 435], "ham": 6, "han": 6, "hand": [72, 196], "handl": [20, 89, 103, 198, 336, 436, 437, 475], "happen": [42, 46, 87, 290, 356, 444], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 89, "have": [3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 59, 60, 61, 62, 65, 68, 69, 72, 73, 74, 75, 76, 77, 85, 86, 88, 89, 95, 97, 98, 100, 103, 111, 112, 121, 123, 124, 130, 131, 132, 133, 134, 135, 147, 148, 149, 152, 153, 156, 159, 160, 163, 164, 165, 166, 167, 174, 175, 176, 185, 188, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 215, 220, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 334, 335, 337, 343, 344, 345, 346, 347, 352, 353, 373, 404, 406, 407, 408, 409, 412, 413, 416, 417, 418, 422, 423, 424, 425, 428, 429, 431, 432, 433, 434, 438, 439, 441, 453, 454, 456, 458, 460, 471], "hd": 92, "header": 145, "heavisid": 6, "hello": 89, "help": 479, "helper": 475, "henc": [99, 146], "here": [6, 30, 89, 91, 109, 114, 115, 426, 447, 451], "hermit": [181, 183], "hermitian": [109, 114, 115, 117, 118, 177, 180, 181, 182, 183, 187, 190, 194, 475], "hfft": [6, 10, 114], "hierarchi": 171, "high": [115, 354, 382, 385, 398], "higher": [91, 459], "highest": 104, "highli": 138, "hist": [150, 392], "hist_0": 151, "hist_1": 151, "histogram": [6, 84, 151, 419, 475], "histogram2d": 6, "histogram_bin_edg": [6, 150], "histogramdd": [6, 150], "hold": [58, 74, 75, 150, 189, 228, 229, 233, 235, 442], "homogen": 89, "horizont": [59, 60, 82, 88, 122, 127, 152, 417, 431, 460], "host": [3, 4, 20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 445, 447, 451, 457, 462, 463], "household": 191, "how": [0, 4, 89, 115, 118, 146, 349, 436, 437, 447, 451], "howev": [87, 324, 436], "hsplit": [6, 60], "hstack": [6, 59, 60, 88, 417, 431, 460], "http": [4, 136], "hyperbol": [21, 22, 23, 24, 25, 26, 27, 68, 69, 424, 425, 438, 439, 475], "hypergeometr": 6, "hypot": [6, 407], "hypotenus": [153, 407], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 290, 295, 313, 319, 322, 324, 327, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 471, 479], "i0": 6, "i1": [87, 89, 327], "i2": [87, 89, 327], "i3": [87, 327], "i4": [54, 89], "i7": 91, "i8": [54, 89], "icpx": 4, "icx": 4, "id": [14, 19, 87, 305], "ident": [3, 6, 14, 19, 73, 89, 102, 113, 122, 193, 393], "identifi": 89, "ieee": 123, "ifft": [6, 104, 111, 112, 114, 115, 120], "ifft2": [6, 105, 110, 112], "ifftn": [6, 107, 110, 111], "ifftshift": [6, 10, 108, 112], "ignor": [28, 29, 72, 89, 133, 134, 141, 150, 151, 213, 214, 215, 219, 220, 226, 227, 230, 231, 232, 234, 236, 432, 458], "ihfft": [6, 109], "ii": [91, 377], "iinfo": 371, "iinfo_object": 155, "ij": [91, 92, 217], "ijk": 91, "il": 92, "il1": 447, "il2": 447, "illustr": 182, "ilm": 91, "imag": [6, 10, 18, 34, 87, 404, 405, 471], "imaginari": [18, 34, 87, 115, 133, 134, 156, 161, 162, 168, 169, 180, 181, 183, 186, 214, 220, 225, 304, 404, 405, 427, 455], "implement": [3, 6, 39, 104, 136], "impli": 89, "implicit": 91, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 298, 303, 304, 311, 313, 317, 322, 323, 324, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 379, 388, 392, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "improv": 91, "in1d": 6, "in_array1": 96, "includ": [4, 10, 14, 19, 20, 33, 36, 37, 38, 39, 40, 46, 64, 73, 78, 81, 84, 91, 92, 103, 142, 143, 144, 145, 150, 151, 162, 169, 190, 197, 209, 210, 215, 230, 231, 232, 234, 236, 354, 398, 407, 432, 457, 458], "include_initi": 73, "inclus": [354, 382, 385], "increas": [84, 89, 99, 110, 115, 150, 457], "ind": [30, 84, 195, 349, 350, 447, 448, 451, 452], "index": [4, 28, 29, 30, 31, 57, 87, 89, 92, 102, 105, 111, 119, 126, 136, 157, 172, 217, 226, 227, 291, 303, 327, 336, 349, 350, 403, 410, 419, 436, 437, 447, 451, 455, 461, 464, 475], "index_arrai": [28, 29, 30], "indic": [6, 10, 28, 29, 30, 31, 73, 79, 80, 84, 87, 89, 91, 92, 101, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 126, 136, 139, 150, 195, 196, 211, 212, 218, 226, 227, 287, 288, 289, 312, 315, 321, 330, 336, 349, 350, 410, 419, 422, 423, 426, 436, 437, 443, 447, 448, 451, 452, 455, 461], "indirect": [30, 426], "individu": 364, "inequ": 337, "inexact": [130, 225, 233, 235], "inf": [9, 15, 22, 26, 36, 37, 65, 85, 160, 163, 164, 165, 166, 167, 178, 189, 199, 200, 202, 214, 220, 225, 226, 227, 230, 232, 235, 347, 428, 453], "infer": [73, 210, 407, 410], "infin": [14, 19, 132, 163, 164, 165, 166, 167, 221, 225, 230, 232, 235, 408, 454, 475], "infinit": 178, "info": 6, "inform": [0, 38, 40, 87, 89, 109, 115, 117, 123, 301, 471, 475], "initi": [16, 17, 73, 87, 93, 141, 213, 219, 230, 232, 233, 235, 307, 309, 314, 328, 346, 354, 434], "inner": [6, 72, 91, 92, 188, 212, 341], "input": [10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 187, 189, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 303, 311, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 376, 382, 398, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 453, 454, 455, 456, 457, 458, 459, 462, 463], "insert": [6, 28, 29, 82, 84, 87, 91, 99, 144, 150, 197, 209, 226, 227, 230, 232, 321, 350, 419, 475], "instal": 2, "instanc": [3, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 109, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 154, 157, 197, 198, 209, 211, 212, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "instead": [31, 42, 82, 86, 87, 91, 99, 131, 144, 150, 151, 157, 188, 197, 204, 209, 213, 219, 290, 336, 346, 434, 471], "instruct": 4, "int": [9, 14, 19, 20, 28, 29, 30, 32, 39, 46, 53, 60, 70, 72, 73, 74, 75, 78, 79, 81, 82, 83, 87, 89, 93, 94, 95, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 154, 155, 157, 185, 186, 189, 195, 196, 197, 209, 210, 211, 213, 215, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 311, 323, 332, 339, 340, 342, 346, 349, 350, 354, 382, 385, 407, 409, 410, 414, 415, 416, 426, 430, 431, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 455, 456, 457, 458, 462, 463, 471], "int16": 89, "int32": [0, 9, 39, 54, 89, 93, 94, 102, 137, 140, 142, 143, 154, 198, 233, 235, 339, 340, 354, 356, 364, 366, 371, 373, 379, 382, 398, 411, 434, 445, 462, 463], "int64": [0, 9, 54, 89, 233, 235, 411], "int8": [89, 346], "int_": 9, "int_0": 444, "int_t": 444, "intc": 9, "integ": [20, 32, 46, 47, 48, 49, 50, 51, 53, 56, 73, 74, 75, 84, 87, 89, 124, 127, 130, 131, 132, 136, 150, 155, 159, 172, 174, 186, 189, 195, 210, 213, 215, 219, 221, 228, 229, 230, 231, 232, 233, 234, 235, 236, 324, 332, 345, 346, 349, 354, 382, 385, 390, 407, 408, 409, 410, 412, 413, 414, 416, 419, 421, 429, 432, 434, 436, 440, 442, 454, 455, 456, 458, 471], "integer_lik": 440, "integr": [3, 4, 46, 73, 75, 130, 150, 210, 215, 222, 231, 234, 236, 345, 407, 432, 434, 444, 458], "intel": [3, 91], "intend": [87, 332], "intent": 130, "interchang": [87, 223, 329, 435], "interfac": [0, 137], "interior": 146, "intermedi": [74, 91, 92], "intern": 354, "interp": 6, "interpol": 115, "interpret": [2, 36, 37, 41, 53, 64, 89, 109, 115, 117, 137, 172, 211, 336, 349, 471], "intersect1d": 6, "interv": [10, 20, 21, 22, 23, 25, 84, 99, 144, 197, 209, 354, 382, 384, 386, 387, 389, 397, 398, 435], "intp": [233, 235], "intrins": 471, "introduc": 414, "introduct": 10, "introselect": [87, 313, 342], "inv": [6, 178, 190], "invers": [10, 18, 21, 22, 23, 24, 25, 26, 27, 68, 69, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 184, 190, 195, 196, 201, 400, 424, 425, 438, 439, 455], "invert": [6, 49, 184, 190, 195], "invok": 471, "involv": 195, "io": [136, 198], "irfft": [6, 106, 109, 114, 116, 117, 118, 120], "irfft2": [6, 115, 117, 119], "irfftn": [6, 115, 116, 121], "irrespect": 30, "is_busdai": 6, "isalignedstruct": 89, "isbuiltin": 89, "isclos": [6, 15], "iscomplex": [6, 162, 168], "iscomplexobj": [6, 161, 169], "isfinit": [6, 164, 165, 166, 167, 225, 230, 232, 235], "isfortran": 6, "isin": 6, "isinf": [6, 163, 165, 166, 167, 225], "isn": 89, "isnan": [6, 163, 164, 166, 167, 225, 228, 229, 230, 232, 233, 235], "isnat": [6, 165], "isneginf": [6, 163, 164, 165, 167, 225], "isposinf": [6, 163, 164, 165, 166, 225], "isreal": [6, 161, 169], "isrealobj": [6, 162, 168], "isscalar": 6, "issctyp": 6, "issu": 111, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 31, 87, 137, 138, 140, 455, 464], "item_dtyp": 89, "item_hasobject": 89, "item_is_point": 89, "items": [87, 89], "itemset": 6, "iter": [6, 36, 37, 87, 92, 125, 137, 138, 140, 141, 302, 303, 350, 437, 475], "its": [4, 6, 10, 11, 12, 14, 19, 30, 46, 78, 87, 109, 115, 117, 123, 150, 151, 154, 180, 181, 182, 183, 188, 190, 196, 215, 231, 234, 236, 332, 391, 403, 407, 410, 426, 432, 443, 444, 445, 458, 471], "itself": [42, 87, 89, 225, 290, 471], "iu": 211, "iu1": [211, 451], "iu2": 451, "ix_": 6, "ixgrid": 172, "j": [61, 62, 87, 91, 105, 107, 109, 110, 111, 112, 114, 115, 118, 119, 121, 130, 139, 156, 157, 173, 177, 180, 181, 202, 212, 225, 332, 341, 347, 350, 404, 427, 429, 437, 440], "j1": 173, "jame": 10, "ji": 91, "jil": 91, "jk": [91, 92], "jl": 92, "john": 10, "join": [59, 60, 88, 152, 417, 431, 460, 475], "jump": [76, 352], "just": [59, 82, 89, 105, 111, 116, 118, 119], "k": [10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 41, 42, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 78, 81, 85, 87, 91, 95, 97, 98, 100, 102, 103, 124, 130, 131, 132, 133, 134, 135, 147, 148, 149, 153, 156, 159, 163, 164, 165, 173, 174, 175, 176, 185, 191, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 220, 221, 224, 244, 290, 295, 334, 335, 337, 344, 345, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 440, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 461, 479], "kaiser": 6, "kappa": 399, "keep": [41, 42, 87, 290, 455], "keepdim": [14, 16, 17, 19, 28, 29, 46, 70, 87, 189, 210, 213, 215, 216, 219, 226, 227, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 307, 308, 309, 314, 326, 328, 333, 346, 348, 350, 407, 432, 434, 437, 458], "kei": [3, 30, 87, 89, 125, 249, 280, 426], "key2": 89, "keyword": [10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 39, 40, 48, 49, 50, 51, 55, 56, 58, 64, 65, 68, 69, 72, 76, 77, 78, 79, 81, 85, 87, 93, 94, 97, 98, 100, 102, 106, 120, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 149, 153, 154, 157, 159, 174, 198, 200, 201, 202, 203, 204, 211, 212, 214, 218, 220, 221, 222, 224, 225, 295, 334, 335, 338, 339, 340, 344, 345, 347, 352, 353, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 406, 408, 412, 413, 418, 422, 423, 424, 425, 433, 438, 439, 445, 447, 451, 453, 454, 457, 461, 462, 463, 471], "ki": 91, "kind": [30, 42, 54, 60, 66, 73, 87, 89, 91, 123, 152, 188, 210, 212, 289, 290, 313, 324, 342, 407, 417, 426, 431, 460, 475], "kl": [10, 91, 92], "known": [10, 138, 392], "kron": 6, "kroneck": 173, "kth": [87, 313, 342], "kwarg": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 48, 49, 50, 51, 55, 56, 58, 61, 62, 65, 68, 69, 76, 77, 85, 87, 95, 97, 98, 100, 103, 124, 130, 131, 132, 133, 134, 135, 139, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 221, 222, 224, 274, 292, 319, 334, 335, 337, 344, 345, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 453, 454], "l": [10, 89, 177, 181, 183], "la": [180, 182, 183], "label": 91, "laid": 40, "lam": 379, "lambda": 139, "lapack": [180, 182], "laplac": 6, "laptop": 4, "larg": [10, 76, 89, 150, 190, 225, 352, 456, 479], "larger": [91, 104, 105, 107, 110, 111, 112, 114, 116, 117, 118, 119, 121, 123, 442, 456, 471], "largest": [10, 92, 118, 123, 131, 155, 185, 221, 225, 408], "largest_singular_valu": 190, "last": [14, 19, 30, 72, 82, 83, 87, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 127, 144, 146, 158, 188, 197, 209, 212, 303, 346, 403, 410, 414, 419, 426, 430, 434, 440, 456], "later": 479, "latest": [4, 136], "latter": [133, 134, 214, 220, 350, 437], "layout": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 40, 41, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 85, 87, 91, 93, 94, 95, 97, 98, 100, 102, 103, 124, 130, 131, 132, 133, 134, 135, 142, 143, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 220, 221, 224, 295, 301, 334, 335, 337, 339, 340, 344, 345, 347, 352, 353, 406, 408, 410, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 453, 454, 461, 462, 463, 464], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [110, 111, 112, 228, 229, 449], "learn": [3, 4, 204], "least": [43, 44, 45, 46, 80, 88, 89, 92, 99, 122, 128, 133, 134, 138, 162, 185, 191, 214, 220, 417, 460], "left": [10, 28, 29, 32, 70, 82, 84, 87, 128, 129, 174, 182, 189, 213, 219, 226, 227, 233, 235, 321, 346, 397, 412, 416, 419, 434, 444, 457], "left_shift": [6, 412], "leg": [153, 407], "legaci": 390, "len": [87, 89, 107, 108, 109, 112, 114, 115, 116, 117, 121, 157, 185, 213, 217, 218, 219, 266, 421, 457], "length": [20, 46, 74, 75, 83, 95, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 141, 144, 146, 150, 152, 180, 194, 209, 213, 217, 219, 228, 229, 350, 357, 410, 411, 417, 419, 421, 430, 437, 440, 441, 460], "less": [6, 74, 75, 95, 147, 148, 150, 151, 176, 185, 190, 228, 229, 233, 235, 337, 346, 422, 434, 442], "less_equ": [6, 95, 147, 148, 175, 337], "let": 356, "level": [464, 471], "level_zero": [20, 33, 36, 37, 38, 40, 64, 78, 81, 93, 94, 102, 106, 120, 137, 138, 139, 140, 142, 143, 144, 154, 197, 198, 209, 218, 338, 339, 340, 445, 457, 462, 463], "lexicograph": 455, "lexsort": [6, 30, 426], "li": [414, 415], "librari": [3, 4, 471], "light": 10, "like": [20, 33, 36, 37, 38, 40, 42, 43, 44, 45, 59, 87, 88, 91, 93, 102, 117, 137, 138, 139, 140, 141, 142, 144, 154, 197, 198, 209, 211, 290, 303, 311, 339, 350, 354, 398, 410, 437, 462, 475], "limit": [3, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36, 37, 38, 40, 48, 49, 50, 51, 52, 53, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 71, 76, 77, 85, 87, 89, 93, 94, 95, 96, 97, 98, 100, 102, 123, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 153, 154, 155, 159, 163, 164, 165, 174, 175, 176, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 290, 292, 334, 335, 337, 339, 340, 342, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 379, 380, 382, 385, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 412, 413, 418, 420, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 438, 439, 453, 454, 458, 462, 463], "linalg": [6, 86, 91, 92, 429], "line": [185, 198], "linear": [10, 63, 67, 185, 193, 209, 464, 475], "linspac": [0, 6, 20, 96, 144, 209, 217, 444, 456], "linux": 4, "list": [3, 6, 9, 33, 36, 37, 38, 40, 43, 44, 45, 52, 60, 64, 78, 81, 87, 88, 89, 91, 92, 108, 113, 122, 142, 143, 144, 146, 152, 162, 169, 197, 198, 209, 212, 332, 409, 411, 417, 420, 431, 440, 443, 457, 460, 461], "list_pickl": 89, "littl": 89, "ln": 209, "load": [6, 138, 198], "loadtxt": [6, 138], "loc": [354, 365, 367, 368, 376, 400], "local": 4, "locat": [0, 4, 145, 166, 167, 211, 341, 365, 367, 419], "log": [6, 100, 144, 192, 197, 200, 201, 202, 203, 209, 210, 369], "log10": [6, 199, 201, 202], "log1p": [6, 98, 100, 199, 200, 202], "log2": [6, 199, 200, 201, 204], "log_bas": 209, "logabsdet": 192, "logaddexp": [6, 73, 204, 210], "logaddexp2": [6, 203, 210], "logarithm": [73, 179, 192, 197, 199, 200, 201, 202, 203, 204, 210, 370, 475], "logic": [14, 19, 205, 206, 207, 208, 464, 475], "logical_and": [6, 48, 206, 207, 208], "logical_not": [6, 49, 159, 205, 207, 208], "logical_or": [6, 50, 205, 206, 208], "logical_xor": [6, 51, 205, 206, 207], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 144, 197], "logsumexp": [73, 203, 204], "lomax": 377, "long": [89, 186], "longer": [109, 115, 479], "look": [335, 437], "lookfor": 6, "loop": 91, "loos": 90, "lorentz": 392, "lose": [109, 115, 117], "low": [105, 107, 111, 112, 354, 382, 385, 398, 471], "lower": [78, 102, 150, 151, 171, 177, 181, 183, 211, 445, 446, 447, 448, 451, 452], "lowest": [46, 91, 92, 354, 382], "lstsq": 6, "m": [4, 10, 71, 88, 89, 91, 102, 105, 107, 109, 111, 112, 115, 116, 117, 121, 127, 128, 129, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 211, 212, 350, 436, 437, 445, 446, 447, 448, 450, 451, 452], "machin": [4, 10, 123, 155, 185, 204, 405], "machineri": 89, "made": [33, 37, 43, 89, 136, 173, 225], "magnitud": [11, 12, 65, 103, 347], "mai": [14, 18, 19, 42, 54, 58, 60, 66, 75, 87, 89, 91, 92, 99, 105, 107, 109, 110, 111, 112, 114, 115, 118, 121, 146, 151, 152, 178, 180, 181, 185, 189, 191, 204, 209, 212, 225, 231, 234, 236, 290, 322, 350, 405, 417, 431, 441, 460, 471], "main": [78, 79, 80, 81, 82, 102, 122, 154, 183, 211, 442, 445, 446, 447, 450, 451], "mainstai": 10, "maintain": [84, 87, 89, 150, 321, 419, 437], "major": [4, 36, 37, 38, 40, 41, 42, 87, 290, 336, 403], "make": [38, 40, 59, 89, 217, 455, 456], "manag": 0, "mani": [10, 471], "manipul": [3, 79, 464, 475], "manual": [4, 89, 441], "mappingproxi": 89, "mask": [89, 172, 211, 336, 343, 351, 436, 447, 451], "mask_func": 211, "mask_indic": [6, 447, 451], "mass": 150, "mat": 6, "match": [11, 12, 37, 60, 66, 70, 73, 83, 89, 136, 138, 146, 158, 210, 212, 349, 350, 407, 431, 436, 437, 440, 461], "math": [10, 96], "mathemat": [464, 475], "matlab": 135, "matmul": [6, 86, 191, 194, 459], "matplotlib": [217, 392], "matric": [122, 139, 157, 172, 179, 180, 182, 184, 187, 189, 190, 191, 192, 194, 212, 217, 475], "matrix": [71, 86, 91, 158, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 212, 217, 429, 450, 457, 459, 464, 475], "matrix_pow": [6, 429], "matrix_rank": 6, "matter": 455, "max": [0, 6, 16, 28, 87, 123, 133, 134, 150, 151, 155, 185, 187, 214, 219, 220, 230, 292, 371, 437, 441, 456, 471], "max_arg": 0, "max_val": 0, "maxima": [133, 213, 214], "maximum": [0, 6, 16, 28, 29, 58, 87, 92, 133, 134, 213, 219, 220, 226, 227, 230, 232, 287, 307, 345, 348, 350, 456], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 20, 33, 35, 36, 37, 38, 39, 40, 42, 46, 64, 70, 78, 79, 81, 87, 91, 93, 94, 102, 105, 106, 107, 111, 112, 116, 117, 118, 119, 120, 121, 137, 138, 139, 140, 141, 142, 143, 146, 154, 157, 178, 189, 198, 211, 216, 218, 231, 234, 236, 290, 295, 303, 332, 338, 339, 340, 354, 367, 369, 372, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 399, 400, 403, 410, 432, 434, 445, 447, 451, 457, 458, 462, 463, 471], "meaningfulli": 471, "meant": 471, "median": [0, 6], "memori": [3, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 40, 41, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 85, 87, 89, 91, 93, 94, 95, 97, 98, 100, 102, 103, 124, 130, 131, 132, 133, 134, 135, 136, 142, 143, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 217, 220, 221, 224, 295, 301, 327, 334, 335, 337, 339, 340, 344, 345, 347, 352, 353, 406, 408, 410, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 453, 454, 461, 462, 463, 464, 479], "mersenn": 354, "mesh": 172, "meshgrid": [6, 139, 157, 172, 218, 338], "met": [86, 188], "meta": 89, "metadata": 89, "method": [10, 14, 16, 17, 19, 30, 42, 64, 86, 87, 89, 125, 136, 138, 187, 190, 194, 290, 295, 311, 319, 322, 336, 354, 410, 421, 434, 436, 443, 464], "mgrid": [105, 107, 116, 119, 157, 172], "mgridclass": 218, "middl": [10, 82, 105, 107, 111, 112, 182], "might": [91, 110, 111, 112], "min": [6, 17, 29, 58, 87, 123, 133, 134, 150, 151, 155, 178, 185, 191, 194, 213, 214, 220, 232, 292, 437, 471], "min_scalar_typ": 6, "minima": [134, 219, 220], "minimum": [6, 17, 28, 29, 58, 87, 130, 133, 134, 213, 214, 219, 226, 227, 230, 232, 288, 309, 345, 348], "minlength": 47, "mintypecod": 6, "minu": [100, 132, 221, 408, 454], "miscellan": [2, 464, 475], "mise": 399, "miss": 198, "mix": 212, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 101, 408, 456], "mode": [57, 63, 67, 87, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 191, 291, 315, 330, 349, 392, 397, 419, 436, 437], "model": 356, "modf": 6, "modifi": [64, 82, 122, 391], "modul": [104, 145, 464], "modulu": [135, 221, 408], "monoton": [84, 150], "moor": 190, "more": [0, 3, 4, 30, 33, 43, 44, 45, 88, 89, 91, 92, 100, 116, 119, 128, 129, 136, 138, 151, 152, 157, 185, 186, 187, 188, 190, 194, 201, 203, 431, 440, 444, 455, 456, 471, 479], "most": [3, 4, 82, 83, 89, 92, 104, 110, 225, 354, 390, 430], "move": [87, 223, 313, 414, 415, 443, 455], "moveaxi": [6, 414, 415, 443], "msg": 0, "msort": 6, "mt19937": 390, "mu": [365, 369, 376, 399], "multi": [2, 87, 157, 172, 218, 327, 338, 455, 464], "multi_dot": [6, 86, 91, 92], "multiarrai": 89, "multidimension": [150, 158, 461], "multinomi": 6, "multipl": [10, 28, 29, 30, 46, 60, 72, 73, 89, 91, 105, 107, 111, 112, 116, 117, 119, 121, 151, 152, 172, 180, 181, 182, 183, 184, 188, 210, 213, 215, 219, 230, 231, 232, 234, 236, 407, 417, 426, 431, 432, 444, 455, 458, 460, 464], "multipli": [6, 74, 91, 182, 233, 346], "multivari": 372, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 46, 48, 49, 50, 51, 53, 55, 56, 58, 59, 60, 61, 62, 65, 68, 69, 70, 73, 74, 75, 76, 77, 83, 85, 86, 88, 97, 98, 99, 100, 103, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 124, 128, 130, 131, 132, 133, 134, 135, 138, 141, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 163, 164, 165, 166, 167, 174, 175, 176, 177, 188, 189, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 334, 335, 337, 343, 344, 345, 346, 347, 349, 350, 352, 353, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 422, 423, 424, 425, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 453, 454, 458, 460, 461], "mx": 185, "n": [0, 4, 10, 31, 75, 79, 80, 83, 84, 87, 88, 89, 90, 99, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 139, 146, 154, 172, 185, 186, 187, 190, 191, 194, 195, 196, 211, 212, 217, 234, 236, 332, 343, 349, 356, 371, 373, 383, 393, 419, 421, 429, 432, 435, 436, 437, 440, 443, 444, 445, 446, 447, 448, 450, 451, 452, 457, 458, 471], "n1": 217, "n2": [198, 217], "n3": 217, "naiv": 92, "name": [0, 6, 89], "namedtupl": 191, "nan": [9, 14, 15, 19, 28, 29, 34, 36, 37, 85, 130, 133, 134, 160, 163, 164, 165, 166, 167, 200, 213, 214, 215, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 345, 346, 428, 432, 453, 455, 458, 475], "nan_to_num": 6, "nanargmax": [6, 28, 227], "nanargmin": [6, 29, 226], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 133, 134, 213, 214, 220, 232], "nanmean": [6, 215, 234, 236, 432, 458], "nanmedian": 6, "nanmin": [6, 133, 134, 214, 219, 220, 230], "nanpercentil": 6, "nanprod": [6, 346], "nanquantil": 6, "nanstd": [6, 215, 231, 236, 432, 458], "nansum": 6, "nanvar": [6, 215, 231, 234, 432, 458], "nat": 165, "nativ": 89, "native_cod": 89, "native_dt": 89, "natur": [192, 199, 200, 201, 202, 203, 204, 210], "nbad": 366, "nbyte": 87, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 476], "ndim": [6, 31, 33, 40, 43, 44, 45, 71, 79, 82, 87, 89, 122, 173, 194, 213, 219, 339, 441, 443, 462], "ndmin": 33, "nearest": [32, 56, 124, 131, 132, 221, 408, 413, 416, 454], "necessari": [4, 14, 19, 20, 33, 36, 37, 38, 40, 43, 66, 74, 75, 90, 101, 109, 115, 117, 122, 136, 144, 197, 209, 212, 215, 228, 229, 231, 233, 234, 235, 236, 346, 410, 432, 434, 458, 479], "necessarili": [180, 182], "need": [4, 33, 37, 82, 91, 145, 436, 437, 461], "needs_init": 89, "needs_pyapi": 89, "neg": [6, 10, 14, 19, 32, 47, 65, 81, 82, 84, 87, 99, 102, 105, 107, 110, 111, 112, 115, 118, 127, 130, 141, 146, 150, 163, 164, 165, 166, 167, 186, 225, 230, 232, 234, 235, 236, 322, 344, 345, 346, 349, 373, 416, 432, 434, 436, 437, 442, 458], "negative_binomi": 6, "neginf": 225, "neither": [86, 133, 134, 194, 212, 230, 232], "nest": [39, 88, 152, 417, 431, 460], "nested_it": 6, "net": [133, 134, 214, 220], "never": [410, 456], "new": [33, 42, 52, 53, 59, 60, 70, 73, 74, 75, 82, 87, 88, 89, 90, 93, 94, 99, 133, 134, 136, 140, 141, 142, 143, 144, 152, 154, 197, 209, 210, 211, 214, 220, 223, 228, 229, 233, 235, 290, 319, 322, 332, 339, 340, 407, 410, 414, 415, 417, 431, 441, 443, 460, 461, 462, 463, 471], "new_dtyp": 89, "new_ord": 89, "newaxi": 99, "newbyteord": [6, 89], "newli": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 42, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 85, 87, 93, 94, 95, 97, 98, 100, 102, 103, 124, 130, 131, 132, 133, 134, 135, 142, 143, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 220, 221, 224, 290, 295, 334, 335, 337, 339, 340, 344, 345, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 453, 454, 462, 463], "newshap": 410, "next": [4, 123, 335], "nextaft": 6, "ngood": 366, "ni": [217, 350, 436, 437], "nine": 356, "ninja": 4, "nj": [350, 436, 437], "njm": 91, "nk": [350, 436, 437], "nl": 10, "nlk": 91, "nn": 217, "noisi": 185, "non": [20, 31, 33, 36, 37, 38, 39, 40, 42, 46, 47, 64, 70, 78, 79, 81, 84, 87, 93, 94, 101, 102, 106, 115, 118, 120, 126, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 154, 157, 161, 163, 172, 197, 198, 209, 211, 218, 225, 226, 227, 230, 232, 234, 236, 290, 295, 312, 322, 336, 338, 339, 340, 343, 345, 354, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 432, 440, 445, 447, 451, 457, 458, 461, 462, 463], "nonc": [374, 375], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 163, 164, 165, 166, 167, 174, 175, 176, 178, 185, 187, 188, 189, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 305, 307, 308, 309, 313, 314, 315, 318, 320, 321, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 442, 443, 444, 445, 447, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 471], "nonzero": [6, 31, 70, 87, 126, 172, 461, 471], "nor": [133, 134, 182, 230, 232], "norm": [6, 10, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 178, 182, 185, 475], "normal": [6, 71, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 150, 180, 181, 191, 204, 354, 369, 372, 383, 395], "not_equ": [6, 95, 147, 148, 175, 176], "note": [11, 12, 13, 14, 18, 19, 28, 29, 30, 31, 32, 41, 64, 72, 76, 82, 84, 85, 87, 89, 91, 92, 99, 101, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 131, 133, 134, 137, 138, 139, 140, 141, 150, 157, 163, 180, 198, 209, 221, 224, 234, 235, 236, 295, 319, 336, 343, 349, 352, 357, 359, 360, 370, 375, 408, 410, 426, 432, 433, 435, 440, 441, 444, 453, 455, 456, 458, 459], "notic": [89, 115, 118], "notimplementederror": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36, 37, 38, 40, 48, 49, 50, 51, 52, 53, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 85, 87, 93, 94, 95, 97, 98, 100, 102, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 153, 154, 159, 163, 164, 165, 174, 175, 176, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 221, 224, 230, 231, 232, 234, 235, 236, 290, 334, 335, 337, 339, 340, 344, 345, 346, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 438, 439, 453, 454, 458, 462, 463], "now": [14, 19, 38, 40, 79, 182, 185, 211], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 298, 300, 303, 304, 305, 311, 313, 317, 322, 323, 324, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 352, 353, 379, 388, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "nr": 10, "nsamp": 366, "nsampl": 366, "nth": 440, "nuc": 189, "num": [0, 89, 96, 144, 197, 209, 444, 456], "number": [10, 14, 15, 18, 19, 20, 31, 32, 46, 47, 52, 53, 70, 79, 81, 83, 84, 87, 89, 90, 91, 92, 99, 102, 103, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 123, 124, 132, 137, 138, 140, 141, 144, 146, 150, 151, 154, 155, 160, 161, 162, 163, 169, 172, 178, 184, 187, 191, 192, 194, 195, 196, 197, 204, 209, 221, 225, 228, 229, 230, 232, 233, 234, 235, 236, 311, 320, 323, 336, 343, 346, 347, 354, 356, 366, 390, 408, 409, 413, 414, 415, 416, 423, 432, 435, 441, 443, 445, 454, 455, 457, 458, 471, 475], "number_of_dimens": [87, 311], "numer": [3, 4, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 27, 32, 61, 62, 65, 68, 69, 85, 89, 95, 97, 100, 110, 111, 112, 115, 117, 132, 133, 134, 147, 148, 156, 160, 163, 164, 165, 175, 176, 199, 200, 201, 202, 214, 220, 224, 334, 337, 344, 345, 347, 404, 413, 416, 422, 423, 424, 425, 433, 438, 439, 453, 475], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 299, 303, 304, 305, 311, 317, 322, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 471, 475], "nx": 217, "ny": 217, "nyquist": [10, 105, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120], "o": [4, 14, 19, 89], "obj": [28, 29, 30, 89, 136, 150], "obj2sctyp": 6, "object": [20, 33, 36, 37, 38, 39, 40, 41, 42, 64, 78, 79, 81, 87, 89, 93, 94, 99, 102, 106, 120, 123, 125, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 155, 157, 178, 181, 189, 197, 198, 209, 211, 218, 290, 295, 319, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 410, 445, 447, 451, 457, 462, 463, 471], "obtain": [10, 82, 177, 336], "obviou": 10, "occupi": [123, 155], "occur": [42, 54, 60, 66, 87, 91, 152, 180, 212, 225, 290, 417, 431, 460], "occurr": [28, 29, 47, 84, 150, 226, 227, 455], "odd": [10, 106, 109, 113, 114, 115, 117, 118, 120], "off": [20, 180, 185], "offset": [82, 87, 89, 137, 138, 211, 298, 331, 442, 447, 448, 451, 452], "often": 149, "ogrid": [157, 172, 461], "ogridclass": 338, "oil": [356, 373], "omit": [354, 382], "onc": 184, "one": [3, 4, 28, 29, 30, 33, 35, 39, 43, 44, 45, 46, 58, 63, 66, 67, 70, 87, 89, 93, 95, 99, 101, 102, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 128, 129, 130, 133, 134, 138, 142, 146, 151, 152, 154, 157, 162, 172, 182, 186, 189, 199, 200, 202, 211, 213, 214, 217, 218, 219, 220, 226, 227, 233, 235, 295, 303, 306, 336, 338, 340, 343, 346, 373, 415, 426, 430, 431, 434, 436, 440, 444, 447, 448, 451, 452, 455, 462, 471], "oneapi": [20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "onedpl": 4, "onemkl": [4, 180, 182], "ones": [6, 33, 38, 40, 46, 73, 85, 87, 91, 93, 94, 95, 99, 102, 121, 142, 143, 153, 154, 173, 185, 187, 210, 211, 228, 233, 340, 346, 407, 411, 415, 443, 445, 453, 462, 463], "ones_lik": [6, 33, 94, 143, 339, 463], "onli": [10, 14, 19, 20, 28, 29, 30, 33, 36, 37, 38, 40, 42, 43, 46, 58, 64, 67, 71, 87, 89, 91, 92, 93, 94, 102, 108, 118, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 157, 177, 181, 183, 191, 194, 197, 198, 209, 211, 212, 213, 215, 216, 219, 225, 226, 227, 230, 231, 232, 233, 234, 236, 290, 322, 324, 339, 340, 342, 343, 344, 346, 354, 376, 382, 398, 410, 420, 426, 432, 434, 437, 451, 455, 456, 458, 461, 462, 463, 471], "open": [138, 157, 172, 197, 338, 354, 384, 386, 387, 389, 398, 435], "opencl": [20, 33, 36, 37, 38, 40, 64, 78, 81, 93, 94, 102, 106, 120, 137, 138, 139, 140, 142, 143, 144, 154, 197, 198, 209, 218, 338, 339, 340, 445, 457, 462, 463], "oper": [10, 13, 48, 49, 50, 51, 85, 89, 91, 92, 95, 99, 122, 132, 135, 147, 148, 159, 174, 175, 176, 177, 205, 207, 212, 213, 219, 221, 224, 225, 226, 227, 334, 337, 344, 345, 349, 408, 412, 433, 441, 453, 455, 456, 464, 475], "operand": [91, 92, 196, 341, 440], "opposit": [10, 89, 101, 109, 114, 343], "optim": [4, 91, 92, 150, 151], "option": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 46, 48, 49, 50, 51, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 181, 183, 185, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 303, 332, 334, 335, 337, 338, 339, 340, 341, 344, 345, 346, 347, 349, 352, 353, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 479], "ord": 189, "order": [10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 76, 77, 82, 84, 85, 87, 89, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 105, 107, 110, 111, 112, 115, 117, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 142, 143, 146, 147, 148, 149, 150, 153, 156, 159, 163, 164, 165, 174, 175, 176, 178, 180, 181, 182, 183, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 217, 220, 221, 223, 224, 244, 289, 290, 295, 303, 313, 316, 321, 324, 332, 334, 335, 336, 337, 339, 340, 342, 344, 345, 347, 352, 353, 403, 406, 408, 410, 412, 413, 418, 419, 422, 423, 424, 425, 426, 428, 429, 433, 438, 439, 440, 443, 453, 454, 455, 457, 461, 462, 463, 475], "ordin": [185, 193], "ordinari": [115, 158, 177], "org": 4, "orient": [72, 350, 437], "origin": [52, 82, 87, 109, 115, 117, 189, 217, 223, 233, 235, 410, 414, 455], "ortho": [10, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121], "orthogon": [182, 191], "orthonorm": 191, "other": [30, 35, 42, 52, 53, 83, 87, 89, 110, 111, 112, 115, 117, 131, 139, 154, 180, 182, 188, 223, 240, 241, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 277, 279, 282, 283, 284, 290, 354, 398, 415, 426, 455, 464, 475], "otherwis": [3, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 83, 85, 87, 89, 91, 93, 94, 95, 96, 97, 98, 100, 102, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 158, 159, 163, 164, 165, 174, 175, 176, 185, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 290, 319, 334, 335, 337, 339, 340, 344, 345, 346, 347, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 412, 413, 418, 419, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 438, 439, 442, 453, 454, 458, 461, 462, 463], "otim": 440, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 184, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 291, 292, 295, 296, 297, 303, 307, 308, 309, 314, 320, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 352, 353, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463], "outer": [6, 72, 82, 91, 92, 173], "output": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 124, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 153, 154, 156, 157, 159, 160, 161, 163, 164, 165, 172, 174, 175, 176, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 227, 228, 229, 231, 233, 234, 235, 236, 290, 295, 334, 335, 337, 338, 339, 340, 344, 345, 346, 347, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 412, 413, 416, 418, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 438, 439, 441, 442, 445, 447, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 475, 479], "outsid": [150, 151], "over": [10, 14, 19, 46, 73, 74, 75, 86, 87, 91, 92, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 127, 139, 144, 150, 151, 158, 189, 197, 209, 210, 212, 213, 215, 217, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 303, 346, 350, 354, 381, 386, 397, 398, 407, 432, 434, 436, 437, 440, 444, 456, 458, 475], "overal": [105, 107, 111, 112, 116, 117, 119, 121], "overflow": 130, "overrid": [72, 94, 143, 340, 463], "overview": 2, "overwrite_input": 216, "p": [10, 178, 185, 186, 356, 359, 364, 370, 373, 456], "pack": [82, 403, 475], "packag": [0, 3], "packbit": 6, "pad": [6, 89, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121], "page": [3, 475], "pair": [10, 92, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 180], "parallel": [1, 3, 4, 9, 464], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 300, 303, 319, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "parameter": [354, 376, 398], "parametr": 444, "pareto": 6, "pars": [138, 198], "part": [3, 10, 18, 87, 115, 133, 134, 156, 161, 162, 168, 169, 180, 181, 183, 211, 214, 220, 222, 304, 317, 404, 405, 427, 447, 451, 454, 455, 471], "partial": [30, 426], "particular": [89, 188], "particularli": 91, "partit": [6, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 426, 445, 447, 451, 457, 462, 463, 471], "pass": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 89, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 151, 154, 157, 172, 185, 198, 211, 218, 225, 295, 319, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 445, 447, 448, 451, 452, 457, 462, 463], "path": [4, 91, 92, 138, 198], "path_info": 92, "pathlib": 198, "pattern": 46, "penros": 190, "per": [91, 106, 120], "percentil": [6, 216], "perf_count": 0, "perform": [14, 19, 37, 58, 83, 91, 105, 107, 110, 111, 112, 116, 117, 119, 121, 127, 177, 346, 434], "period": [10, 456], "permit": 138, "permut": [6, 87, 91, 223, 332, 443, 475], "phase": [10, 18, 456], "phase_deg": 456, "pi": [0, 9, 10, 21, 23, 25, 26, 68, 69, 76, 77, 104, 352, 424, 425, 438, 439, 444, 456, 479], "pickl": [138, 198], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 32, 58, 60, 74, 75, 86, 87, 99, 101, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 136, 157, 160, 212, 213, 215, 219, 225, 228, 229, 231, 233, 234, 235, 236, 303, 322, 324, 332, 338, 346, 349, 350, 391, 410, 414, 416, 426, 431, 432, 434, 436, 442, 458, 471], "platform": [74, 75, 89, 228, 229, 233, 235, 346, 434], "pleas": [0, 3, 91, 150, 471], "plot": 392, "plt": [217, 392], "plu": [199, 200, 202], "point": [10, 11, 12, 18, 20, 26, 32, 36, 37, 46, 65, 73, 89, 93, 94, 98, 102, 103, 104, 109, 110, 114, 115, 116, 117, 118, 123, 124, 130, 137, 138, 139, 141, 142, 143, 146, 154, 156, 185, 186, 197, 198, 203, 204, 210, 215, 225, 231, 234, 236, 335, 339, 340, 354, 383, 395, 404, 406, 407, 416, 418, 419, 432, 444, 445, 458, 462, 463, 475], "pointer": 89, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 48, 49, 50, 51, 55, 56, 61, 62, 65, 68, 69, 76, 77, 85, 87, 95, 97, 98, 100, 103, 124, 130, 131, 132, 133, 134, 135, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 221, 224, 334, 335, 337, 344, 345, 347, 352, 353, 354, 381, 406, 408, 412, 413, 416, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 453, 454], "portion": [150, 151], "posinf": 225, "posit": [6, 10, 14, 15, 19, 20, 32, 36, 37, 55, 65, 81, 82, 87, 99, 102, 103, 105, 107, 110, 111, 112, 115, 118, 120, 123, 130, 138, 160, 163, 164, 165, 166, 167, 177, 186, 195, 223, 225, 230, 232, 235, 313, 327, 334, 356, 380, 414, 415, 416, 418, 428, 429, 442, 443], "possess": 180, "possibl": [10, 41, 42, 44, 45, 87, 91, 92, 99, 133, 134, 146, 150, 211, 290, 319, 410, 430, 435, 436, 437, 443], "possibli": 39, "pow": 471, "power": [6, 10, 98, 104, 130, 186, 429, 457], "pre": 151, "precis": [11, 12, 46, 74, 75, 89, 91, 123, 130, 156, 185, 211, 228, 229, 233, 235, 346, 404, 434, 442], "predecessor": 456, "prefer": [57, 64, 87, 295, 322, 336], "prepend": [83, 90, 441], "present": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 89, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 154, 157, 198, 211, 218, 230, 232, 235, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 445, 447, 451, 457, 462, 463], "preserv": [42, 43, 44, 45, 58, 87, 89, 91, 127, 128, 129, 130, 181, 182, 183, 290, 442, 455], "press": 10, "prevent": 91, "previou": 46, "print": [0, 4, 46, 47, 63, 84, 89, 92, 354, 373, 378], "print_device_info": 0, "printabl": 92, "printopt": 6, "prior": 83, "prob1": [203, 204], "prob12": [203, 204], "prob2": [203, 204], "probabl": [150, 204, 356, 364, 373], "proce": 471, "process": 10, "processor": 91, "prod": [6, 74, 87, 195, 196, 233, 471], "produc": [10, 31, 89, 198, 350, 419, 437], "product": [6, 72, 74, 86, 87, 91, 92, 158, 172, 173, 188, 193, 195, 196, 212, 224, 228, 233, 296, 341, 346, 440, 459, 475], "program": [4, 131], "progress": [144, 197], "project": [89, 347], "promot": [13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 40, 48, 50, 51, 54, 55, 65, 68, 69, 76, 77, 85, 97, 98, 100, 130, 132, 133, 134, 135, 144, 153, 174, 197, 199, 200, 201, 202, 203, 204, 209, 212, 214, 220, 221, 224, 335, 345, 352, 353, 406, 408, 411, 412, 418, 422, 424, 425, 428, 429, 433, 438, 439, 441, 453, 454], "promote_typ": 6, "propag": [89, 133, 134, 213, 214, 219, 220, 228, 229, 230, 232, 233, 235], "proper": [133, 134, 180, 182], "properti": [10, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 181, 183, 191, 197, 198, 209, 211, 218, 238, 290, 295, 299, 301, 302, 304, 306, 310, 311, 317, 322, 323, 327, 332, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463, 471], "protocol": [39, 89, 136], "prototyp": 94, "provid": [0, 6, 10, 28, 29, 60, 66, 73, 87, 91, 92, 99, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 140, 150, 151, 152, 166, 167, 210, 226, 227, 230, 232, 233, 235, 354, 382, 385, 407, 417, 431, 436, 444, 455, 460, 461, 479], "pseudo": [190, 354], "ptp": 6, "pure": [10, 109, 115, 117, 118], "purpos": [31, 185], "put": [6, 10, 87, 101, 109, 115, 117, 343, 350, 437, 471], "put_along_axi": [6, 349, 437], "putmask": [6, 349], "pval": 371, "py": 4, "pypi": 4, "pyplot": [217, 392], "pytest": 4, "python": [0, 2, 3, 39, 87, 89, 135, 136, 221, 305, 408, 409, 471], "q": [182, 186, 191, 196, 216], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [18, 25, 105], "quantil": 6, "quaternion": 186, "question": 78, "queue": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "quick": [2, 3], "quickli": [172, 479], "quotient": 26, "r": [77, 191], "r2": 191, "rad": 77, "rad2deg": [6, 76, 77, 456], "radian": [6, 18, 21, 22, 23, 25, 26, 76, 77, 352, 456, 479], "rais": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36, 37, 38, 40, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 64, 65, 66, 68, 69, 73, 76, 77, 84, 85, 86, 87, 93, 94, 95, 97, 98, 100, 102, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 153, 154, 159, 163, 164, 165, 174, 175, 176, 186, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 219, 220, 221, 224, 226, 227, 230, 231, 232, 234, 235, 236, 290, 291, 334, 335, 337, 339, 340, 344, 345, 346, 347, 352, 353, 406, 407, 408, 410, 412, 413, 418, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 438, 439, 453, 454, 458, 462, 463, 471], "rand": [6, 92, 354, 384, 386, 387, 389], "randint": [6, 87, 305, 354, 385], "randn": [6, 127, 128, 129, 190, 191, 194, 196, 354, 431], "random": [87, 92, 127, 128, 129, 182, 188, 190, 191, 194, 196, 305, 431, 464, 475], "random_integ": [6, 354, 382], "random_sampl": [6, 354, 381, 384, 387, 389], "randomli": 378, "randomst": 382, "ranf": 6, "rang": [0, 84, 140, 150, 151, 204, 348, 349, 373, 378, 409, 431, 440, 443, 456, 475], "rank": [99, 101, 139, 185, 187, 435], "rate": [106, 120], "rather": 336, "ratio": [0, 85, 132, 185, 453, 479], "ration": 475, "ravel": [6, 87, 101, 126, 189, 303, 341, 471], "ravel_multi_index": 6, "raw": 191, "rayleigh": 6, "rcond": [185, 190], "re": [28, 29, 47, 78, 414], "read": [78, 82, 87, 89, 137, 138, 140, 141, 198, 303, 403, 410], "readonli": 89, "real": [6, 11, 12, 18, 20, 26, 34, 55, 56, 65, 73, 87, 104, 107, 109, 114, 115, 116, 117, 118, 119, 121, 123, 131, 133, 134, 135, 153, 156, 161, 168, 169, 177, 180, 181, 182, 183, 187, 190, 191, 192, 194, 203, 204, 210, 214, 220, 221, 225, 234, 236, 356, 373, 405, 406, 407, 408, 418, 427, 432, 454, 455, 458, 471, 475], "real_if_clos": [6, 18, 156, 404], "rearrang": [87, 313, 475], "reason": 117, "rebuild": 88, "recal": 89, "recent": 430, "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 418, 428], "recommend": [91, 336, 441], "reconstruct": [89, 194, 455], "recov": 10, "reduc": [14, 19, 28, 29, 46, 191, 194, 210, 213, 215, 217, 219, 226, 227, 230, 231, 232, 233, 234, 235, 236, 346, 407, 432, 434, 458], "reduce_hypot": 153, "reduct": [14, 19], "redund": 118, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 471], "reflect": 471, "reflector": 191, "regardless": [89, 181, 183], "regular": 198, "rel": [15, 87, 160, 327, 414, 415], "relat": 89, "relev": [89, 144, 197, 209], "rem": 135, "remain": [14, 19, 46, 92, 119, 121, 150, 210, 215, 223, 231, 234, 236, 407, 410, 432, 458], "remaind": [6, 132, 135, 221, 345], "remov": [28, 29, 76, 82, 87, 99, 115, 325, 346, 352, 430, 434, 475], "reorder": [91, 127, 196, 223], "rep": 441, "repeat": [6, 87, 105, 107, 111, 112, 116, 117, 119, 121, 122, 180, 181, 182, 183, 217, 343, 441, 444, 455, 471], "repeatedli": 91, "repetit": [0, 409, 441], "replac": [3, 10, 39, 58, 101, 225, 228, 229, 343, 350, 359, 471], "replic": 441, "repo": 4, "repr": 278, "repres": [10, 20, 33, 36, 37, 38, 39, 40, 46, 89, 92, 110, 118, 136, 139, 144, 146, 157, 192, 197, 209, 217, 236, 354, 449, 471], "represent": [48, 50, 51, 92, 123, 155, 157, 225, 335, 455, 471], "request": 415, "requir": [4, 6, 33, 37, 38, 40, 42, 87, 89, 91, 103, 157, 225, 290, 322], "res_cpu": 78, "res_host": 78, "resampl": 115, "rese": 390, "reset": 471, "reshap": [0, 6, 13, 28, 29, 31, 43, 45, 46, 78, 79, 80, 82, 85, 86, 87, 88, 91, 99, 101, 108, 113, 127, 135, 157, 158, 172, 173, 189, 211, 212, 213, 219, 224, 298, 303, 322, 332, 343, 378, 403, 414, 433, 440, 442, 444, 447, 448, 451, 452, 453, 455, 471], "resid": [99, 103, 136], "residu": 185, "resiz": [6, 99, 471], "resolut": 123, "resolv": [73, 99, 210, 407], "resourc": 0, "respect": [10, 13, 26, 48, 50, 51, 85, 87, 95, 130, 132, 135, 146, 147, 148, 174, 175, 176, 203, 204, 205, 207, 208, 221, 224, 327, 337, 345, 408, 412, 433, 453, 456], "restor": 414, "result": [0, 4, 10, 14, 19, 26, 28, 29, 31, 46, 48, 49, 50, 51, 54, 58, 60, 65, 70, 73, 74, 75, 85, 86, 89, 92, 94, 95, 100, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 124, 130, 132, 137, 138, 139, 140, 141, 143, 144, 147, 148, 150, 151, 157, 159, 163, 164, 165, 166, 167, 174, 175, 176, 177, 180, 189, 191, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 336, 337, 340, 341, 345, 346, 349, 354, 356, 386, 407, 410, 411, 412, 413, 415, 416, 419, 422, 423, 431, 432, 434, 436, 437, 440, 441, 444, 449, 453, 454, 455, 458, 461, 463, 471], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 54, 89, 475], "ret": 353, "retriev": [82, 89], "retstep": 197, "returnreturn_count": 455, "return_index": 455, "return_invers": 455, "reus": [136, 151, 410], "revers": [82, 87, 122, 127, 128, 129, 332, 443, 444, 457], "rewrit": 185, "rfft": [6, 10, 106, 109, 114, 115, 116, 117, 119, 120, 121], "rfft2": [6, 116], "rfftfreq": [6, 106], "rfftn": [6, 104, 107, 117, 118, 119], "right": [10, 58, 72, 82, 84, 128, 129, 153, 174, 180, 181, 182, 183, 188, 196, 211, 397, 407, 412, 419, 442, 444, 447, 451, 457], "right_shift": [6, 174], "rightmost": [150, 151, 196], "rint": [6, 32, 56, 124, 131, 416, 454], "roll": [6, 415], "rollaxi": [6, 414], "root": [6, 55, 153, 178, 406, 407, 418, 428, 429], "rot90": 6, "roughli": [89, 185], "round": [6, 20, 32, 56, 87, 124, 131, 132, 180, 221, 408, 413, 454, 471, 475], "round_": 6, "roundoff": [109, 114], "routin": [2, 464, 471], "row": [40, 42, 59, 60, 74, 75, 82, 87, 88, 102, 128, 129, 146, 152, 154, 157, 188, 194, 290, 336, 403, 417, 431, 445, 447, 455, 460], "row_stack": [6, 460], "rowvar": 71, "rsqrt": [406, 428], "rtol": [15, 160], "rule": [13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 37, 38, 40, 46, 48, 50, 51, 54, 55, 65, 66, 68, 69, 72, 75, 76, 77, 85, 97, 98, 100, 132, 133, 134, 135, 144, 153, 174, 197, 199, 200, 201, 202, 203, 204, 209, 210, 212, 214, 215, 220, 221, 224, 231, 234, 236, 335, 345, 352, 353, 406, 407, 408, 411, 412, 418, 422, 424, 425, 428, 429, 432, 433, 434, 438, 439, 444, 453, 454, 458], "run": [0, 4], "runtim": 4, "runtimewarn": [230, 232], "s1": [87, 89, 173, 327], "s10": 89, "s16": 89, "s2": [87, 89, 327], "s25": 89, "s3": [87, 327], "safe": [42, 54, 60, 66, 87, 91, 152, 212, 290, 417, 431, 460], "safe_ev": 6, "said": 196, "same": [4, 10, 11, 12, 13, 14, 15, 19, 26, 28, 29, 30, 31, 32, 34, 35, 38, 40, 41, 42, 46, 48, 49, 50, 51, 53, 59, 60, 65, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 94, 95, 99, 101, 110, 111, 112, 117, 122, 124, 130, 132, 133, 134, 135, 136, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 166, 167, 168, 173, 174, 175, 176, 182, 186, 191, 203, 204, 205, 207, 208, 210, 213, 214, 215, 219, 220, 221, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 319, 332, 335, 337, 340, 343, 345, 346, 350, 354, 376, 382, 398, 403, 404, 407, 408, 409, 412, 414, 415, 417, 419, 426, 430, 431, 432, 433, 434, 436, 437, 440, 442, 446, 448, 450, 452, 453, 458, 459, 460, 463, 479], "same_kind": [42, 54, 60, 66, 87, 91, 152, 212, 290, 417, 431, 460], "sampl": [10, 106, 113, 118, 120, 144, 146, 150, 197, 209, 350, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 437, 444, 447, 451, 464, 475], "sample_r": 120, "satisfi": [33, 37, 38, 40, 42, 87, 101, 184, 290, 343], "save": [6, 138, 479], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 26, 33, 34, 35, 36, 37, 38, 39, 40, 48, 50, 51, 54, 64, 65, 66, 72, 78, 81, 83, 85, 86, 87, 89, 91, 92, 95, 101, 106, 120, 122, 130, 132, 133, 134, 135, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 158, 160, 162, 169, 170, 173, 174, 175, 176, 193, 197, 203, 204, 205, 207, 208, 209, 211, 212, 214, 217, 220, 221, 224, 300, 305, 335, 337, 343, 345, 349, 350, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 382, 385, 388, 390, 394, 396, 397, 398, 399, 400, 401, 402, 405, 408, 412, 419, 433, 436, 440, 444, 453, 454, 457, 459, 461, 471], "scale": [10, 92, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 144, 173, 191, 197, 209, 354, 361, 363, 365, 366, 367, 368, 376, 388, 393, 400], "scientif": 10, "scipi": 96, "scope": 4, "script": 4, "sctype2char": 6, "search": [92, 464, 475], "searchsort": [6, 84, 87, 150, 426, 471], "second": [13, 15, 26, 34, 35, 46, 48, 50, 51, 65, 72, 82, 85, 86, 89, 92, 95, 98, 105, 106, 107, 108, 111, 112, 115, 118, 120, 130, 132, 133, 134, 135, 146, 147, 148, 150, 151, 152, 153, 158, 160, 173, 174, 175, 176, 203, 204, 205, 207, 208, 211, 212, 213, 214, 217, 219, 220, 221, 224, 337, 341, 345, 408, 412, 429, 433, 435, 440, 442, 453, 459], "section": [4, 89, 107, 112, 117, 121, 471], "see": [3, 32, 89, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 136, 150, 185, 371, 416, 447, 448, 451, 452, 455, 471], "seed": [6, 87, 92, 305, 354], "seek": 138, "seldom": 130, "select": [6, 66, 101, 213, 219, 430, 436, 444, 464], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "self": [87, 89, 125, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 302, 354], "semant": 150, "sens": 196, "sep": [138, 141], "separ": [10, 87, 89, 91, 138, 141, 151, 225, 319], "sequenc": [39, 43, 44, 45, 59, 60, 63, 67, 88, 91, 92, 93, 94, 105, 107, 111, 112, 115, 116, 117, 119, 121, 142, 143, 144, 150, 151, 152, 157, 172, 188, 197, 209, 223, 339, 340, 343, 378, 391, 409, 411, 417, 431, 440, 444, 460, 462, 463], "sequenti": [67, 71, 96, 216, 222, 233], "seri": [10, 115, 370], "set": [10, 28, 29, 33, 42, 57, 70, 78, 79, 81, 84, 87, 89, 91, 93, 142, 150, 151, 154, 157, 187, 189, 190, 197, 213, 219, 226, 227, 235, 280, 290, 291, 302, 322, 339, 340, 346, 422, 423, 434, 447, 451, 462, 463, 471], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 89], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 184, "sh": [87, 319], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 42, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 130, 131, 132, 133, 134, 135, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 179, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 311, 319, 323, 325, 332, 334, 335, 337, 338, 339, 340, 344, 345, 346, 347, 349, 350, 352, 353, 354, 363, 366, 371, 372, 377, 381, 382, 383, 384, 385, 386, 387, 389, 394, 395, 401, 403, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 445, 446, 448, 450, 451, 452, 453, 454, 458, 460, 461, 462, 463, 464, 475], "share": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 445, 447, 451, 457, 462, 463], "shared_bin": 151, "shares_memori": 6, "shift": [10, 105, 107, 108, 112, 113, 174, 412, 414], "short": [454, 471], "shorter": [109, 115], "shorthand": [11, 12, 13, 48, 49, 50, 51, 85, 95, 132, 147, 148, 159, 174, 175, 176, 205, 207, 212, 221, 224, 334, 337, 344, 345, 408, 412, 433, 453, 461], "should": [28, 29, 42, 82, 84, 86, 87, 91, 92, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 135, 138, 145, 150, 172, 185, 186, 212, 223, 226, 227, 230, 232, 290, 321, 371, 410, 419, 436, 440, 442, 456, 471], "show": [9, 35, 89, 122, 153, 208, 217, 225, 228, 229, 230, 232, 235, 392], "show_config": 6, "shown": 4, "shuffl": 6, "side": [87, 146, 182, 321, 419], "sigma": [369, 376], "sign": [6, 10, 15, 65, 89, 160, 179, 192, 221, 334, 344, 346, 408, 423, 434, 454], "signal": [10, 106, 109, 114, 115, 117, 120, 456], "signatur": [211, 212], "signbit": [6, 422], "signific": 91, "signum": 422, "similar": [3, 36, 37, 87, 89, 144, 197, 209, 211, 295, 322, 343, 354, 382, 447, 448, 451, 452], "simpl": [4, 208, 475], "simpli": [80, 87, 138, 150, 151, 332], "sin": [0, 6, 23, 68, 182, 217, 425, 438, 444], "sinc": [6, 87, 115, 180, 182, 324, 336], "sine": [21, 22, 23, 24, 25, 26, 27, 68, 69, 424, 425, 438, 439], "singl": [9, 10, 30, 53, 59, 87, 91, 92, 146, 188, 213, 219, 325, 346, 354, 373, 382, 383, 384, 385, 386, 387, 389, 395, 434, 444, 471], "singleton": [14, 19, 46, 99, 210, 215, 230, 231, 232, 234, 236, 407, 430, 432, 458], "singular": [184, 185, 187, 190, 194], "sinh": [6, 24, 69, 424, 439], "size": [0, 6, 20, 28, 29, 33, 46, 60, 67, 70, 71, 74, 75, 79, 84, 87, 89, 92, 101, 104, 106, 110, 120, 138, 144, 146, 152, 189, 191, 194, 197, 209, 211, 213, 215, 219, 226, 227, 228, 229, 231, 233, 235, 305, 306, 322, 339, 343, 346, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 414, 417, 430, 431, 434, 440, 451, 456, 460, 462], "skip": 82, "slice": [101, 226, 227, 230, 231, 232, 234, 236, 349, 350, 437, 444, 451, 452, 471], "slogdet": [6, 179], "slower": 440, "slowest": [87, 303, 403, 410], "small": [15, 100, 160, 185, 190, 201, 203, 204, 225, 451], "smaller": [83, 87, 104, 105, 107, 110, 111, 112, 114, 116, 117, 118, 119, 121, 123, 185, 221, 313, 343, 408, 456], "smallest": [123, 155, 455], "smallest_norm": 123, "smat": 194, "so": [10, 14, 19, 46, 89, 95, 109, 114, 130, 150, 169, 197, 204, 210, 215, 217, 231, 234, 236, 392, 407, 432, 440, 441, 458], "softwar": 4, "solut": [185, 193], "solv": [6, 185, 195, 196, 475], "some": [20, 89, 99, 101, 131, 158, 185, 343, 456, 461, 471], "sometim": [149, 471], "sometru": 6, "somewhat": 186, "sophist": 186, "sort": [6, 30, 87, 194, 289, 313, 419, 427, 437, 443, 444, 455, 464, 471, 475], "sort_complex": 6, "sorter": [87, 321, 419], "sought": 178, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 57, 58, 59, 60, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 210, 211, 212, 213, 215, 216, 217, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 336, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 410, 411, 414, 415, 419, 420, 421, 426, 427, 430, 431, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463], "space": [6, 20, 106, 108, 120, 138, 144, 146, 197, 209, 444, 479], "spars": [157, 217], "special": [2, 89, 96, 464, 475], "specif": [0, 4, 89, 139], "specifi": [14, 19, 20, 28, 29, 30, 32, 33, 36, 37, 38, 40, 46, 53, 54, 60, 64, 73, 74, 75, 78, 81, 82, 87, 91, 92, 93, 94, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 127, 130, 137, 138, 139, 140, 142, 143, 144, 146, 154, 181, 183, 189, 195, 196, 197, 198, 209, 210, 215, 216, 218, 228, 229, 231, 233, 234, 235, 236, 289, 298, 338, 339, 340, 343, 346, 349, 350, 354, 367, 377, 395, 403, 407, 414, 415, 416, 431, 432, 434, 436, 437, 440, 442, 443, 444, 445, 455, 457, 458, 462, 463], "spectrum": [10, 108, 109, 113, 114], "speed": 91, "speedup": 92, "spell": 336, "split": [6, 60, 88, 152, 417, 431, 460, 475], "spreadsheet": 131, "sqrt": [6, 10, 55, 87, 304, 317, 407, 418, 429], "squar": [6, 55, 153, 154, 177, 178, 180, 181, 182, 184, 185, 186, 192, 195, 196, 211, 234, 236, 358, 374, 406, 407, 418, 428, 432, 448, 452, 457, 458], "squeez": [6, 87, 99, 471], "src": 66, "stabl": [30, 426], "stack": [6, 59, 60, 88, 152, 179, 187, 190, 191, 192, 212, 336, 417, 437, 460], "stand": 146, "standard": [87, 123, 132, 135, 215, 221, 231, 234, 236, 305, 326, 354, 369, 376, 383, 392, 393, 394, 395, 396, 408, 432, 458, 471, 475], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 354, 383], "standard_t": 6, "start": [2, 3, 20, 38, 40, 92, 106, 110, 120, 137, 144, 197, 209, 211, 415, 447, 451], "start_tim": 0, "state": 354, "statist": [464, 475], "std": [6, 87, 215, 231, 234, 236, 458, 471], "stdev": [354, 395], "step": [4, 20, 92, 144, 149, 197, 209], "sticki": 89, "still": 46, "stop": [20, 144, 197, 209], "store": [124, 144, 166, 167, 197, 204, 209, 212, 341], "str": [39, 60, 89, 91, 92, 138, 141, 152, 198, 281, 417, 431, 449, 460], "str_": 89, "straightforward": 157, "stride": [41, 42, 87, 290], "string": [20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 89, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 449, 451, 457, 462, 463, 471], "string_repr": 92, "stringio": 198, "strongli": [4, 441], "struct": 89, "structur": [89, 198], "student": 396, "style": [42, 87, 290, 336, 403], "sub": [60, 82, 89, 91, 152, 196, 417, 431, 442, 445, 460], "subarrai": [89, 157, 455], "subclass": 37, "subdivid": 89, "subdtyp": 89, "subok": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 33, 42, 48, 49, 50, 51, 52, 53, 55, 56, 61, 62, 64, 65, 68, 69, 76, 77, 85, 87, 94, 95, 97, 98, 100, 103, 124, 130, 131, 132, 133, 134, 135, 143, 147, 148, 149, 153, 156, 159, 163, 164, 165, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 220, 221, 224, 290, 334, 335, 337, 340, 344, 345, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 428, 429, 433, 438, 439, 453, 454, 463], "subscript": [91, 92], "subset": [3, 146, 430, 475], "subtract": 6, "subtyp": 403, "succeed": 90, "success": [356, 364, 373], "sugar": [80, 448, 452], "suggest": 82, "suit": 4, "suitabl": [31, 87, 332, 350, 419, 437], "sum": [0, 3, 4, 6, 10, 13, 46, 73, 75, 78, 81, 82, 83, 86, 87, 91, 110, 150, 153, 158, 178, 185, 195, 203, 204, 210, 212, 228, 229, 235, 297, 331, 356, 371, 373, 407, 440, 442, 444, 471, 475], "sum_": 10, "sum_along_diagon": 442, "sum_of_weight": 46, "summari": 464, "summat": [86, 91, 92, 158, 196, 212, 341, 440], "suppli": [109, 114, 188, 354, 383], "support": [3, 9, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 55, 56, 61, 62, 64, 65, 67, 68, 69, 71, 76, 77, 85, 87, 89, 91, 93, 94, 95, 96, 97, 98, 100, 102, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 153, 154, 159, 163, 164, 165, 174, 175, 176, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 290, 322, 334, 335, 337, 339, 340, 342, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 412, 418, 420, 422, 423, 424, 426, 428, 429, 432, 433, 434, 438, 439, 453, 454, 458, 462, 463, 479], "surnam": 89, "surpris": [110, 111, 112], "svd": [6, 178, 184, 187, 190], "swap": [89, 105, 108, 435], "swapax": [6, 87, 223, 471], "swapped_cod": 89, "swapped_dt": 89, "sy": 89, "sycl": [0, 3, 20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "sycl_context": 87, "sycl_devic": 87, "sycl_queu": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "sycldevic": [20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "syclqueu": [20, 33, 36, 37, 38, 39, 40, 42, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 290, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 445, 447, 451, 457, 462, 463], "symmetr": [109, 115, 117, 118, 177, 180, 181, 182, 183, 187, 190, 194], "symmetri": [10, 104, 109, 114, 115, 118], "syntact": [80, 448, 452], "syntax": 471, "sys_is_l": 89, "system": [3, 4, 193], "t": [10, 60, 71, 87, 89, 109, 177, 180, 182, 185, 332, 336, 396, 444], "t1": 479, "tabl": [2, 9, 464], "tack": 89, "take": [6, 59, 87, 101, 172, 211, 343, 350, 410, 419, 437, 455, 456, 471, 479], "take_along_axi": [6, 28, 29, 30, 57, 350, 436], "taken": [46, 82, 83, 90, 92, 109, 115, 116, 117, 118, 119, 121, 149, 150, 212, 234, 236, 432, 442, 445, 447, 451, 458, 459], "tall": 122, "tan": [6, 25, 26, 68, 424, 439], "tangent": [18, 21, 22, 23, 24, 25, 26, 27, 68, 69, 424, 425, 438, 439], "tanh": [6, 27, 69, 425, 438], "target": [42, 54, 87, 290, 349], "target_devic": 87, "tau": 191, "tbb": 4, "tempfil": 138, "temporari": [138, 479], "temporaryfil": 138, "ten": 364, "tensor": [39, 87, 91, 92, 136, 195, 196, 226, 227, 230, 232, 233, 348, 440], "tensordot": [6, 86, 91, 158, 195, 196, 212, 341], "tensorinv": [6, 196], "tensorsolv": [6, 195], "term": [10, 13, 85, 92, 104, 105, 107, 110, 111, 112, 115, 118, 224, 433, 453], "test": [0, 2, 14, 15, 19, 95, 147, 148, 161, 163, 164, 165, 166, 167, 175, 176, 233, 336, 337, 356, 471, 475], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [137, 138, 140, 141, 198], "th": [75, 78, 81, 83, 87, 90, 102, 146, 157, 216, 332, 338, 443, 446, 448, 450, 452], "than": [33, 74, 75, 87, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 128, 129, 132, 139, 147, 148, 150, 151, 152, 174, 175, 176, 185, 187, 190, 191, 228, 229, 233, 235, 313, 336, 343, 346, 412, 422, 430, 431, 434, 440, 442, 454, 456, 471, 479], "thei": [15, 35, 89, 160, 182, 185, 417, 419, 440, 444, 447, 451, 456, 457, 460, 471], "them": [59, 471], "theor": 180, "theoret": 92, "therefor": [104, 118, 139, 181, 183], "theta": 444, "thi": [10, 11, 12, 16, 17, 20, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 58, 60, 64, 70, 73, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 129, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 162, 169, 172, 181, 183, 185, 188, 189, 192, 197, 198, 201, 203, 204, 209, 210, 211, 212, 213, 219, 221, 223, 225, 226, 227, 230, 232, 233, 235, 290, 295, 300, 303, 313, 319, 332, 336, 343, 346, 349, 350, 387, 389, 403, 407, 408, 410, 415, 417, 431, 434, 436, 437, 441, 444, 448, 452, 455, 456, 457, 460, 461], "thing": 436, "third": [59, 60, 88, 105, 152, 417, 431, 460], "those": [10, 58, 186, 350], "though": 110, "thousand": 364, "three": [43, 44, 45, 99, 186, 211, 354, 390, 440, 455], "threshold": 187, "through": [37, 89, 151, 172, 180, 182, 185, 211, 471], "throw": 371, "thu": [10, 109, 115, 117, 441], "tile": [6, 409, 475], "time": [0, 10, 13, 15, 26, 34, 35, 48, 50, 51, 65, 83, 85, 86, 95, 105, 107, 109, 111, 112, 114, 116, 117, 119, 121, 130, 132, 133, 134, 135, 147, 148, 149, 153, 158, 160, 165, 173, 174, 175, 176, 185, 203, 204, 205, 207, 208, 214, 220, 221, 224, 335, 337, 345, 356, 371, 408, 412, 433, 437, 440, 441, 453, 455, 459], "time_dpnp": 0, "time_numpi": 0, "timedelta": 89, "timeit": 91, "timestep": 106, "tini": 123, "titl": 89, "tm": 135, "to_begin": 90, "to_devic": 87, "to_end": 90, "tobyt": 6, "todo": 374, "tofil": [6, 138], "togeth": [15, 60, 89, 110, 160, 172, 431, 461], "tol": [187, 372, 405], "toler": [15, 34, 160, 405], "tolist": 6, "too": [4, 105, 107, 111, 112, 116, 117, 119, 121, 461], "toolkit": 3, "tostr": 6, "total": [6, 70, 74, 87, 310, 432, 458], "toward": [32, 56, 124, 131, 132, 150, 151, 221, 335, 408, 413, 416, 454], "trace": [6, 78, 81, 82, 87, 91, 471], "traceback": 430, "trail": 449, "transfer": 87, "transform": [92, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 464], "transpos": [6, 31, 87, 91, 177, 182, 223, 238, 471, 475], "trapezoid": [75, 434], "trapz": 6, "treat": [15, 109, 115, 117, 138, 146, 160, 181, 183, 185, 188, 198, 228, 229, 233, 235, 346, 350, 419, 437, 441, 455, 456, 471], "tri": 6, "trial": 356, "triangl": [78, 153, 211, 407, 445, 446, 447, 448, 450, 451, 452], "triangular": [6, 177, 181, 183, 191, 211, 447, 448, 451, 452], "trigonometr": [18, 21, 22, 23, 24, 25, 26, 27, 68, 69, 424, 425, 438, 439, 475], "tril": [6, 78, 211, 445, 447, 448, 451], "tril_indic": [6, 211, 448, 451], "tril_indices_from": [6, 452], "trili": 448, "trili1": 448, "trim": [105, 107, 111, 112, 116, 117, 119, 121, 449], "trim_zero": 6, "triu": [6, 78, 211, 445, 447, 451, 452], "triu_indic": [6, 211, 447, 452], "triu_indices_from": [6, 448], "triui": 452, "triuim1": 452, "trivial": [180, 437], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 37, 38, 40, 42, 43, 46, 48, 49, 50, 51, 54, 55, 56, 61, 62, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 84, 85, 87, 89, 91, 92, 95, 97, 98, 99, 100, 101, 103, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 144, 147, 148, 149, 150, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 187, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 242, 285, 286, 290, 295, 307, 308, 309, 314, 326, 328, 333, 334, 335, 336, 337, 343, 344, 345, 346, 347, 350, 352, 353, 359, 406, 407, 408, 410, 412, 413, 418, 422, 423, 424, 425, 428, 429, 432, 433, 434, 437, 438, 439, 440, 444, 453, 454, 455, 457, 458, 461], "true_divid": [6, 85], "trunc": [6, 32, 56, 124, 131, 413, 416], "truncat": [32, 56, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 124, 131, 392, 413, 416, 454], "trust": [226, 227], "truth": [48, 49, 50, 51, 95, 147, 148, 159, 175, 176, 205, 206, 207, 208, 337, 471, 475], "try": 4, "tukei": 10, "tup": [59, 88, 152, 417, 460], "tupl": [14, 19, 28, 29, 33, 36, 37, 38, 40, 46, 53, 64, 70, 73, 78, 79, 80, 81, 87, 89, 92, 99, 108, 113, 127, 136, 139, 142, 143, 144, 146, 150, 151, 157, 162, 169, 172, 173, 189, 191, 196, 197, 209, 210, 211, 212, 213, 215, 217, 218, 219, 230, 231, 232, 233, 234, 235, 236, 322, 332, 336, 338, 346, 407, 409, 410, 414, 421, 430, 432, 434, 441, 443, 447, 448, 451, 452, 457, 458, 471], "turn": 59, "twister": 354, "two": [10, 15, 34, 43, 44, 48, 49, 50, 51, 63, 67, 72, 81, 82, 83, 86, 87, 89, 91, 92, 99, 104, 105, 107, 110, 111, 112, 115, 116, 117, 119, 121, 133, 134, 146, 158, 159, 160, 173, 181, 185, 188, 193, 205, 207, 208, 212, 213, 214, 219, 220, 223, 230, 232, 313, 329, 341, 354, 383, 413, 416, 435, 440, 442, 447, 448, 451, 452, 459], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 299, 303, 311, 319, 323, 332, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 475], "type_nam": 0, "typeerror": [46, 66, 87, 136, 322], "typenam": 6, "typestr": 89, "typic": [15, 109, 160, 419, 471], "u": [89, 177, 181, 183, 194, 211, 233, 235, 455], "u1": [89, 137, 138], "u16": 89, "u4": 54, "u8": 89, "ufunc": [2, 464, 471], "uint64": 89, "uint8": [89, 137, 138], "uk": 10, "un": 89, "unari": 471, "unchang": 121, "undefin": [18, 87, 313], "underli": [48, 50, 51, 410], "undo": [10, 112], "undocu": 89, "unexpect": [233, 235], "unicod": 89, "uniform": [6, 89, 146, 150, 151, 209, 354, 381, 384, 386, 387, 389], "uniformli": [209, 354, 398], "uniniti": [33, 93, 94, 142, 339, 462], "union1d": 6, "uniqu": [6, 46, 47, 73, 84, 89, 210, 215, 223, 231, 234, 236, 407, 409, 432, 458], "unique_count": 455, "unique_indic": 455, "unique_invers": 455, "unit": [87, 106, 120, 172, 180, 186, 192, 327], "unitari": [10, 146, 191, 194], "uniti": 150, "univ": 10, "univers": [2, 464, 471], "unless": [14, 19, 42, 74, 75, 87, 91, 150, 180, 187, 189, 209, 228, 229, 233, 235, 290, 346, 434, 455], "unlik": [30, 87, 120, 319, 322, 426], "unmodifi": 151, "unpackbit": 6, "unravel_index": [6, 28, 29], "unsaf": [42, 54, 60, 66, 87, 91, 152, 212, 290, 417, 431, 460], "unscal": 10, "unsign": [89, 346, 434], "unspecifi": 410, "unsupport": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 48, 49, 50, 51, 55, 56, 58, 65, 68, 69, 76, 77, 85, 97, 98, 100, 130, 131, 132, 133, 134, 135, 136, 149, 153, 159, 174, 200, 201, 202, 203, 204, 214, 220, 221, 222, 224, 334, 335, 344, 345, 347, 352, 353, 406, 408, 412, 413, 418, 422, 423, 424, 425, 433, 438, 439, 453, 454], "until": [92, 414, 415], "unwrap": [6, 76, 352], "up": [4, 10, 89, 91, 129, 437, 448, 455], "updat": 4, "uplo": [181, 183], "upon": [87, 327], "upper": [78, 102, 150, 151, 177, 181, 183, 191, 211, 445, 447, 448, 450, 451, 452], "url": 4, "us": [4, 10, 13, 20, 31, 33, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 54, 58, 60, 64, 72, 74, 75, 78, 79, 81, 82, 85, 87, 89, 91, 92, 93, 94, 95, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 172, 174, 175, 176, 177, 178, 181, 182, 183, 185, 187, 188, 189, 190, 197, 198, 204, 205, 207, 209, 211, 212, 213, 215, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 244, 290, 295, 303, 322, 334, 336, 337, 338, 339, 340, 343, 344, 345, 346, 350, 354, 357, 359, 360, 370, 375, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 395, 398, 403, 405, 408, 409, 410, 412, 414, 419, 422, 427, 432, 433, 434, 436, 437, 440, 441, 442, 444, 445, 447, 448, 451, 452, 453, 455, 457, 458, 461, 462, 463, 471, 479], "usabl": 130, "usag": [3, 4, 106, 120], "use_getitem": 89, "use_setitem": 89, "user": [89, 225], "usm": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 430, 445, 447, 451, 457, 462, 463], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 334, 335, 336, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463], "usm_typ": [20, 33, 36, 37, 38, 39, 40, 64, 78, 79, 81, 87, 93, 94, 102, 106, 120, 137, 138, 139, 140, 141, 142, 143, 144, 154, 157, 197, 198, 209, 211, 218, 295, 338, 339, 340, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 445, 447, 451, 457, 462, 463], "usual": [79, 87, 89, 212, 322], "util": 464, "v": [63, 78, 81, 87, 89, 180, 181, 321, 349, 419], "v0": 6, "v1": 6, "v10": 89, "v9": 6, "val": [87, 122, 125, 280, 315, 343], "valid": [67, 99, 211, 435, 447, 448, 451, 452], "valu": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 83, 84, 85, 87, 89, 91, 93, 94, 95, 97, 98, 100, 101, 102, 103, 109, 110, 115, 117, 118, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 168, 169, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 240, 241, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 277, 279, 280, 282, 283, 284, 287, 288, 290, 292, 295, 300, 302, 313, 315, 322, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 364, 381, 382, 398, 404, 406, 407, 408, 409, 410, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 426, 428, 429, 432, 433, 434, 436, 437, 438, 439, 442, 444, 447, 451, 453, 454, 455, 456, 458, 461, 462, 463, 471, 475], "value2": 89, "valueerror": [33, 37, 136, 226, 227, 410, 430], "vander": 6, "vandermond": 457, "var": [6, 87, 215, 231, 234, 236, 432, 471], "vararg": 146, "vari": [10, 14, 18, 19, 82, 92, 105, 107, 109, 110, 111, 112, 114, 115, 118, 121, 139, 157, 178, 180, 181, 185, 189, 225, 231, 234, 236, 405], "variabl": [71, 185, 193], "varianc": [87, 215, 231, 234, 236, 333, 432, 458, 475], "variou": 479, "vdot": [6, 86, 212], "vector": [72, 91, 139, 157, 158, 172, 178, 187, 188, 189, 194, 212, 217, 341, 459, 475], "vendor": 4, "veri": [3, 10, 15, 160, 217, 225], "verif": 0, "verifi": 177, "version": [4, 70, 87, 89, 126, 302, 336], "vertic": [59, 60, 82, 88, 122, 127, 128, 152, 417, 431, 460], "vetterlin": 10, "vh": 194, "via": 115, "view": [6, 43, 44, 45, 52, 78, 82, 87, 99, 105, 107, 111, 112, 116, 117, 119, 121, 127, 128, 129, 217, 223, 238, 319, 332, 350, 410, 430, 435, 443], "violat": 66, "void": 89, "void640": 89, "von": 399, "vonmis": 6, "vsplit": [6, 60], "vstack": [6, 59, 60, 88, 152, 185, 417, 431], "w": [10, 46, 180, 181, 182, 183, 186], "wa": [10, 73, 89, 188, 210, 230, 232, 234, 236, 354, 395, 407, 432, 458], "wai": [3, 4, 10, 87, 92, 104, 110, 111, 112, 117, 138, 313, 440], "wald": 6, "walk": 89, "want": [4, 437], "warn": [89, 226, 227, 372], "we": [64, 79, 82, 92, 122, 185, 211, 350, 437, 444], "weibul": [6, 402], "weight": [46, 47, 71, 150, 151, 215, 231, 434], "well": [89, 91, 138, 150, 151, 346, 356, 373, 392], "were": [60, 139, 354, 383, 431, 456], "what": [10, 42, 54, 60, 66, 87, 89, 91, 95, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 152, 161, 212, 290, 356, 373, 417, 431, 460, 471], "when": [10, 20, 33, 34, 36, 37, 38, 40, 41, 42, 46, 64, 66, 84, 87, 89, 91, 104, 115, 117, 118, 133, 134, 144, 149, 180, 189, 191, 197, 204, 209, 211, 212, 221, 228, 229, 230, 232, 233, 235, 290, 408, 413, 415, 416, 436, 440, 444, 455, 461, 479], "whenev": [99, 435, 443], "where": [0, 6, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 55, 56, 58, 61, 62, 64, 65, 66, 68, 69, 73, 76, 77, 78, 79, 81, 83, 84, 85, 87, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 109, 115, 116, 117, 120, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 174, 175, 176, 177, 185, 191, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 221, 224, 230, 231, 232, 233, 234, 235, 236, 285, 286, 290, 295, 307, 308, 309, 314, 321, 326, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 352, 353, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 398, 406, 407, 408, 412, 413, 415, 418, 419, 422, 423, 424, 425, 428, 429, 432, 433, 434, 438, 439, 442, 443, 445, 447, 451, 453, 454, 456, 457, 458, 462, 463], "wherev": 66, "whether": [14, 15, 19, 34, 73, 84, 89, 136, 160, 161, 177, 191, 197, 225, 233, 235, 410, 423, 455], "which": [3, 4, 10, 14, 19, 20, 28, 29, 30, 33, 36, 37, 38, 39, 40, 42, 46, 52, 60, 64, 66, 70, 73, 74, 75, 78, 79, 81, 82, 83, 84, 86, 87, 89, 91, 92, 93, 94, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 152, 154, 157, 163, 164, 165, 166, 167, 177, 180, 187, 189, 196, 198, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 290, 295, 336, 338, 339, 340, 346, 349, 354, 376, 381, 382, 383, 384, 385, 386, 387, 389, 395, 398, 407, 409, 414, 426, 430, 431, 432, 434, 436, 442, 443, 444, 445, 446, 447, 450, 451, 454, 456, 457, 458, 461, 462, 463, 471, 479], "whichev": 158, "while": [10, 119, 121, 150, 151, 215, 231, 234, 236, 336, 343, 346, 414, 432, 434, 445, 458], "whitespac": [138, 141], "who": 6, "whole": [105, 107, 111, 112, 116, 117, 119, 121, 447, 451], "whose": [11, 12, 82, 89, 101, 102, 122, 178, 181, 182, 183, 195, 211, 223, 414, 448, 452], "why": 115, "wide": 122, "width": [89, 150, 151], "wild": [356, 373], "window": [4, 106, 120], "wise": [11, 12, 13, 15, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 48, 49, 50, 51, 55, 56, 59, 60, 61, 62, 65, 68, 69, 73, 85, 87, 88, 95, 97, 98, 100, 103, 124, 130, 131, 132, 133, 134, 135, 147, 148, 149, 152, 153, 156, 159, 160, 163, 164, 165, 166, 167, 174, 175, 176, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 219, 220, 221, 222, 224, 230, 232, 233, 294, 334, 335, 337, 344, 345, 347, 404, 406, 408, 412, 413, 416, 417, 418, 422, 423, 424, 425, 428, 429, 431, 433, 438, 439, 453, 454, 460, 471, 475, 479], "within": [15, 20, 34, 42, 87, 91, 109, 110, 111, 112, 114, 115, 117, 150, 151, 160, 290, 349, 354, 398], "without": [82, 87, 93, 122, 332, 403, 410, 471], "won": 89, "word": [110, 111, 112, 115, 117, 131, 182, 354, 398], "work": [4, 32, 41, 437, 471], "world": [89, 356, 373], "would": [30, 60, 87, 89, 139, 157, 188, 211, 212, 313, 354, 426, 431, 437, 443, 456], "wrap": [76, 87, 122, 315, 330, 349, 352, 419, 436, 437, 456], "wrapper": 87, "write": [78, 82, 87, 122, 138, 303, 410], "written": [70, 73, 122, 138, 210, 407, 461], "x": [0, 3, 4, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 43, 44, 45, 49, 52, 53, 55, 56, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 76, 77, 78, 81, 83, 84, 87, 89, 90, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 111, 112, 113, 119, 120, 121, 124, 125, 126, 131, 137, 138, 139, 140, 142, 143, 144, 146, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 182, 185, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 217, 218, 222, 223, 225, 290, 295, 304, 305, 311, 317, 322, 323, 334, 336, 338, 339, 340, 344, 346, 347, 348, 352, 353, 372, 378, 403, 404, 406, 407, 409, 413, 414, 415, 416, 418, 422, 423, 424, 425, 428, 429, 430, 435, 436, 438, 439, 444, 445, 454, 457, 461, 462, 463], "x0": [38, 40, 64, 81, 340, 457, 463], "x00": 138, "x01": [137, 138], "x02": [137, 138], "x03": [137, 138], "x04": [137, 138], "x05": 137, "x1": [13, 15, 18, 25, 26, 34, 35, 42, 47, 48, 50, 51, 57, 65, 67, 85, 87, 95, 130, 132, 133, 134, 135, 147, 148, 149, 153, 172, 174, 175, 176, 203, 204, 205, 206, 207, 208, 212, 214, 216, 217, 220, 221, 222, 224, 290, 334, 335, 337, 342, 344, 345, 351, 391, 408, 412, 414, 433, 453], "x1_i": [13, 26, 48, 50, 51, 65, 85, 95, 130, 132, 135, 147, 148, 153, 174, 175, 176, 203, 204, 205, 207, 208, 221, 224, 337, 345, 408, 412, 433, 453], "x2": [13, 14, 15, 18, 19, 25, 26, 33, 34, 35, 48, 50, 51, 65, 67, 85, 95, 130, 132, 133, 134, 135, 147, 148, 149, 153, 172, 174, 175, 176, 203, 204, 205, 206, 207, 208, 212, 214, 217, 220, 221, 224, 334, 335, 337, 344, 345, 408, 412, 414, 428, 433, 453], "x2_i": [13, 26, 48, 50, 51, 65, 85, 95, 130, 132, 135, 147, 148, 153, 174, 175, 176, 203, 204, 205, 207, 208, 221, 224, 337, 345, 408, 412, 433, 453], "x3": [14, 19, 130], "x_i": [11, 12, 18, 21, 22, 23, 24, 25, 27, 49, 55, 56, 61, 62, 68, 69, 97, 98, 100, 131, 156, 159, 199, 200, 201, 202, 206, 334, 344, 347, 404, 406, 413, 416, 418, 422, 423, 424, 425, 428, 429, 438, 439, 454], "xi": [202, 217], "xn": [172, 217], "xor": [48, 49, 50, 51, 159, 205, 206, 207, 208], "xv": 217, "xx": 217, "xy": 217, "y": [0, 4, 20, 33, 36, 37, 38, 40, 43, 52, 64, 71, 72, 81, 87, 89, 90, 93, 94, 99, 102, 106, 120, 137, 138, 139, 140, 142, 143, 144, 146, 154, 166, 167, 178, 185, 197, 198, 209, 217, 218, 222, 225, 295, 311, 319, 322, 338, 339, 340, 444, 445, 457, 461, 462, 463], "yet": [4, 6], "yield": [30, 233, 235, 336, 354, 461, 471], "you": [4, 82, 109, 114, 115, 211, 436, 437, 471, 479], "your": [4, 82, 479], "yv": 217, "yy": 217, "z": [14, 19, 20, 33, 36, 37, 38, 40, 64, 81, 93, 94, 102, 106, 120, 137, 138, 139, 140, 142, 143, 144, 154, 197, 198, 209, 217, 218, 338, 339, 340, 364, 445, 457, 462, 463], "zero": [6, 10, 14, 18, 19, 30, 31, 32, 33, 56, 70, 73, 79, 83, 87, 93, 94, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 131, 138, 142, 143, 154, 156, 161, 162, 166, 167, 168, 169, 174, 180, 181, 183, 185, 186, 187, 190, 194, 210, 211, 213, 215, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 311, 312, 322, 323, 327, 336, 339, 340, 346, 354, 356, 384, 386, 387, 389, 404, 405, 407, 413, 416, 422, 426, 432, 434, 440, 445, 446, 449, 450, 454, 458, 461, 463], "zeros_lik": [6, 33, 77, 94, 143, 340, 353, 462], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 239, "__add__": 240, "__and__": 241, "__bool__": 242, "__complex__": 243, "__copy__": 244, "__eq__": 245, "__float__": 246, "__floordiv__": 247, "__ge__": 248, "__getitem__": 249, "__gt__": 250, "__iadd__": 251, "__iand__": 252, "__ifloordiv__": 253, "__ilshift__": 254, "__imod__": 255, "__imul__": 256, "__int__": 257, "__invert__": 258, "__ior__": 259, "__ipow__": 260, "__irshift__": 261, "__isub__": 262, "__itruediv__": 263, "__ixor__": 264, "__le__": 265, "__len__": 266, "__lshift__": 267, "__lt__": 268, "__matmul__": 269, "__mod__": 270, "__mul__": 271, "__ne__": 272, "__neg__": 273, "__new__": 274, "__or__": 275, "__pos__": 276, "__pow__": 277, "__repr__": 278, "__rshift__": 279, "__setitem__": 280, "__str__": 281, "__sub__": 282, "__truediv__": 283, "__xor__": 284, "ab": 11, "absolut": 12, "ad": 468, "add": 13, "algebra": [6, 466], "all": [14, 285], "allclos": 15, "amax": 16, "amin": 17, "angl": 18, "ani": [19, 286], "api": [1, 464], "arang": 20, "arcco": 21, "arccosh": 22, "arcsin": 23, "arcsinh": 24, "arctan": 25, "arctan2": 26, "arctanh": 27, "argmax": [28, 287], "argmin": [29, 288], "argsort": [30, 289], "argwher": 31, "arithmet": [469, 471, 473], "around": 32, "arrai": [6, 7, 9, 33, 465, 467, 468, 471], "array_equ": 34, "array_equiv": 35, "asanyarrai": 36, "asarrai": 37, "ascontiguousarrai": 38, "asfarrai": 39, "asfortranarrai": 40, "asnumpi": 41, "astyp": [42, 290], "atleast_1d": 43, "atleast_2d": 44, "atleast_3d": 45, "attribut": 471, "avail": [9, 479], "averag": [46, 478], "backend": 1, "background": 10, "basic": [468, 473], "beta": 355, "binari": 5, "bincount": 47, "binomi": 356, "bit": [5, 479], "bitwise_and": 48, "bitwise_not": 49, "bitwise_or": 50, "bitwise_xor": 51, "broadcast_arrai": 52, "broadcast_to": 53, "build": [4, 7], "byte": 357, "c": 1, "calcul": 471, "can_cast": 54, "cbrt": 55, "ceil": 56, "chang": 468, "channel": 4, "chisquar": 358, "choic": 359, "choleski": 177, "choos": [57, 291], "class": 7, "clip": [58, 292], "co": 68, "column_stack": 59, "comparison": [6, 467, 471, 479], "complex": 469, "concaten": 60, "cond": 178, "conda": 4, "conj": [61, 293], "conjug": [62, 294], "construct": 471, "control": 0, "convers": 471, "convolv": 63, "copi": [64, 295], "copysign": 65, "copyto": 66, "correl": [67, 478], "cosh": 69, "count": 476, "count_nonzero": 70, "cov": 71, "creat": 8, "creation": 7, "cross": 72, "cumlogsumexp": 73, "cumprod": [74, 296], "cumsum": [75, 297], "cupi": 6, "data": [0, 2, 7, 8, 9, 465, 471, 474], "decomposit": 466, "deg2rad": 76, "degre": 77, "det": 179, "detail": 10, "develop": 2, "devic": 4, "diag": 78, "diag_indic": 79, "diag_indices_from": 80, "diagflat": 81, "diagon": [82, 298], "diff": 83, "differ": 469, "digit": 84, "dimens": [10, 468], "dimension": [6, 471], "dirichlet": 360, "discret": 6, "distribut": 474, "divid": 85, "dot": 86, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 474], "dpnp_arrai": 87, "driver": 4, "dstack": 88, "dtype": [89, 299], "ediff1d": 90, "eig": 180, "eigenvalu": 466, "eigh": 181, "eigval": 182, "eigvalsh": 183, "einsum": 91, "einsum_path": 92, "element": [5, 468], "empti": 93, "empty_lik": 94, "equal": 95, "equat": 466, "erf": 96, "error": 477, "exampl": [0, 4], "exist": 7, "exp": 97, "exp2": 98, "expand_dim": 99, "expm1": 100, "expon": 469, "exponenti": 361, "extens": 2, "extract": 101, "extrema": 469, "ey": 102, "f": 362, "fab": 103, "fft": [10, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "fft2": 105, "fftfreq": 106, "fftn": 107, "fftshift": 108, "fill": 300, "fill_diagon": 122, "find": 469, "finfo": 123, "fix": 124, "flag": 301, "flat": 302, "flatit": 125, "flatnonzero": 126, "flatten": 303, "flip": 127, "fliplr": 128, "flipud": 129, "float": [469, 479], "float_pow": 130, "floor": 131, "floor_divid": 132, "fmax": 133, "fmin": 134, "fmod": 135, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 136, "frombuff": 137, "fromfil": 138, "fromfunct": 139, "fromit": 140, "fromstr": 141, "full": 142, "full_lik": 143, "function": [10, 467, 469, 477, 478, 479], "gamma": 363, "gener": [465, 474], "geometr": 364, "geomspac": 144, "get_includ": 145, "gradient": 146, "greater": 147, "greater_equ": 148, "guid": 4, "gumbel": 365, "handl": 469, "heavisid": 149, "helper": 10, "hermitian": 10, "hfft": 109, "higher": 10, "histogram": [150, 478], "histogram_bin_edg": 151, "hstack": 152, "hyperbol": 469, "hypergeometr": 366, "hypot": 153, "ident": 154, "ifft": 110, "ifft2": 111, "ifftn": 112, "ifftshift": 113, "ihfft": 114, "iinfo": 155, "imag": [156, 304], "implement": 10, "index": [465, 471], "indic": 157, "infin": 467, "inform": [2, 8, 10], "inner": 158, "insert": 465, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 184, "invert": 159, "irfft": 115, "irfft2": 116, "irfftn": 117, "isclos": 160, "iscomplex": 161, "iscomplexobj": 162, "isfinit": 163, "isinf": 164, "isnan": 165, "isneginf": 166, "isposinf": 167, "isreal": 168, "isrealobj": 169, "isscalar": 170, "issubdtyp": 171, "item": [305, 471], "items": 306, "iter": 465, "ix_": 172, "join": 468, "kind": 468, "kron": 173, "laplac": 367, "layout": 471, "left_shift": 174, "less": 175, "less_equ": 176, "level": 6, "librari": 0, "like": [465, 468], "linalg": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "linear": [6, 466], "linspac": 197, "loadtxt": 198, "log": 199, "log10": 200, "log1p": 201, "log2": 202, "logaddexp": 203, "logaddexp2": 204, "logarithm": 469, "logic": 467, "logical_and": 205, "logical_not": 206, "logical_or": 207, "logical_xor": 208, "logist": 368, "lognorm": 369, "logseri": 370, "logspac": 209, "logsumexp": 210, "lstsq": 185, "manipul": [468, 471], "mask_indic": 211, "math": 479, "mathemat": 469, "matmul": 212, "matric": 7, "matrix": [7, 466, 471], "matrix_pow": 186, "matrix_rank": 187, "max": [213, 307], "maximum": 214, "mean": [215, 308], "median": 216, "memori": 471, "meshgrid": 217, "method": 471, "mgrid": 218, "min": [219, 309], "minimum": 220, "miscellan": [8, 469, 470], "mod": 221, "modf": 222, "modul": [6, 473], "moveaxi": 223, "multi": [6, 471], "multi_dot": 188, "multinomi": 371, "multipl": 471, "multipli": 224, "multivariate_norm": 372, "nan": 467, "nan_to_num": 225, "nanargmax": 226, "nanargmin": 227, "nancumprod": 228, "nancumsum": 229, "nanmax": 230, "nanmean": 231, "nanmin": 232, "nanprod": 233, "nanstd": 234, "nansum": 235, "nanvar": 236, "nbyte": 310, "ndarrai": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 471], "ndim": 311, "neg": 334, "negative_binomi": 373, "nextaft": 335, "noncentral_chisquar": 374, "noncentral_f": 375, "nonzero": [312, 336], "norm": [189, 466], "normal": [10, 376], "not_equ": 337, "number": [466, 468, 469], "numer": 7, "numpi": [2, 6], "ogrid": 338, "ones": 339, "ones_lik": 340, "oper": [5, 465, 467, 468, 469, 471, 479], "order": 478, "other": [466, 469, 471], "outer": 341, "output": 5, "over": 465, "overview": 3, "pack": 5, "packag": [4, 473], "pad": 472, "parallel": [0, 2], "pareto": 377, "partit": [313, 342], "permut": [378, 474], "pinv": 190, "place": 343, "point": 469, "poisson": 379, "poly1d": 473, "polynomi": 473, "polyutil": 473, "posit": 344, "power": [345, 380], "prod": [314, 346], "product": [466, 469], "proj": 347, "promot": 10, "ptp": 348, "put": [315, 349], "put_along_axi": 350, "putmask": 351, "python": 4, "qr": 191, "quick": 4, "r": 4, "rad2deg": 352, "radian": 353, "rand": 381, "randint": 382, "randn": 383, "random": [6, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 474], "random_integ": 385, "random_sampl": 386, "randomst": 354, "ranf": 387, "rang": 7, "ration": 469, "ravel": [316, 403], "rayleigh": 388, "real": [10, 317, 404], "real_if_clos": 405, "rearrang": 468, "reciproc": 406, "reduce_hypot": 407, "refer": [1, 464], "remaind": 408, "remov": 468, "repeat": [318, 409], "reshap": [319, 410], "result_typ": 411, "rfft": 118, "rfft2": 119, "rfftfreq": 120, "rfftn": 121, "right_shift": 412, "rint": 413, "roll": 414, "rollaxi": 415, "round": [320, 416, 469], "routin": [7, 8, 10, 465, 468, 469, 470, 475], "row_stack": 417, "rsqrt": 418, "sampl": [6, 389, 474], "scikit": 4, "search": 476, "searchsort": [321, 419], "seed": 390, "select": [420, 471], "shape": [7, 322, 421, 468, 471], "shuffl": 391, "sign": 422, "signbit": 423, "simpl": 474, "sin": 424, "sinh": 425, "size": 323, "slogdet": 192, "solv": [193, 466], "sort": [324, 426, 476], "sort_complex": 427, "special": [469, 471, 477], "split": 468, "sqrt": 428, "squar": 429, "squeez": [325, 430], "stack": 431, "standard": 10, "standard_cauchi": 392, "standard_exponenti": 393, "standard_gamma": 394, "standard_norm": 395, "standard_t": 396, "start": 4, "statist": 478, "std": [326, 432], "stride": 327, "subtract": 433, "sum": [328, 434, 469], "summari": 6, "svd": 194, "swapax": [329, 435], "t": 238, "tabl": 6, "take": [330, 436], "take_along_axi": 437, "tan": 438, "tanh": 439, "tensordot": 440, "tensorinv": 195, "tensorsolv": 196, "test": [4, 8, 467], "tile": [441, 468], "trace": [331, 442], "transform": [6, 10], "transpos": [332, 443, 468], "trapezoid": 444, "tri": 445, "triangular": 397, "trigonometr": [469, 479], "tril": 446, "tril_indic": 447, "tril_indices_from": 448, "trim_zero": 449, "triu": 450, "triu_indic": 451, "triu_indices_from": 452, "true_divid": 453, "trunc": 454, "truth": 467, "twiddl": 479, "type": [8, 9, 10, 467, 471], "ufunc": 479, "uniform": 398, "uniqu": 455, "univers": 479, "unwrap": 456, "util": 470, "valu": [7, 467], "vander": 457, "var": [333, 458], "varianc": 478, "vdot": 459, "vector": 466, "vonmis": 399, "vstack": 460, "wald": 400, "weibul": 401, "where": 461, "wise": 5, "zero": 462, "zeros_lik": 463, "zipf": 402}})