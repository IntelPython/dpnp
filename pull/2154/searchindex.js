Search.setIndex({"alltitles": {"API Reference": [[527, null]], "Adding and removing elements": [[531, "adding-and-removing-elements"]], "Arithmetic": [[535, "arithmetic"]], "Arithmetic operations": [[532, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[534, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[531, null]], "Array attributes": [[534, "array-attributes"]], "Array conversion": [[534, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[534, "array-methods"]], "Array type testing": [[530, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[541, "available-ufuncs"]], "Averages and variances": [[540, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[531, "basic-operations"]], "Basics": [[535, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[541, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[534, "calculation"]], "Changing array shape": [[531, "changing-array-shape"]], "Changing kind of array": [[531, "changing-kind-of-array"]], "Changing number of dimensions": [[531, "changing-number-of-dimensions"]], "Comparison": [[530, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[541, "comparison-functions"]], "Constructing arrays": [[534, "constructing-arrays"]], "Correlations": [[540, "correlations"]], "Counting": [[538, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[534, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[529, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[536, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[539, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[529, "exceptions"]], "Exponents and logarithms": [[532, "exponents-and-logarithms"]], "Extrema finding": [[532, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[541, "floating-functions"]], "Floating point routines": [[532, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[528, "generating-index-arrays"]], "Handling complex numbers": [[532, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[540, "histograms"]], "Hyperbolic functions": [[532, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[534, "indexing-arrays"]], "Indexing routines": [[528, null]], "Indexing-like operations": [[528, "indexing-like-operations"]], "Infinities and NaNs": [[530, "infinities-and-nans"]], "Inserting data into arrays": [[528, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[534, "item-selection-and-manipulation"]], "Iterating over arrays": [[528, "iterating-over-arrays"]], "Joining arrays": [[531, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [529, null]], "Logic Functions": [[530, null]], "Logic operations": [[530, "logic-operations"]], "Math operations": [[541, "math-operations"]], "Mathematical functions": [[532, null]], "Matrix and vector products": [[529, "matrix-and-vector-products"]], "Matrix eigenvalues": [[529, "matrix-eigenvalues"]], "Memory layout": [[534, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [532, "miscellaneous"]], "Miscellaneous routines": [[533, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[534, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[529, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[540, "order-statistics"]], "Other attributes": [[534, "other-attributes"]], "Other matrix operations": [[529, "other-matrix-operations"]], "Other special functions": [[532, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[536, "permutations"]], "Poly1d": [[535, "poly1d"]], "Polynomial Module": [[535, "polynomial-module"]], "Polynomial Package": [[535, "polynomial-package"]], "Polynomials": [[535, null]], "Polyutils": [[535, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[536, null]], "Random generator": [[536, "random-generator"]], "Rational routines": [[532, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[531, "rearranging-elements"]], "Rounding": [[532, "rounding"]], "Routines": [[537, null]], "Searching": [[538, "searching"]], "Shape manipulation": [[534, "shape-manipulation"]], "Simple random data": [[536, "simple-random-data"]], "Solving linear equations": [[529, "solving-linear-equations"]], "Sorting": [[538, "sorting"]], "Sorting, Searching, and Counting": [[538, null]], "Special Functions": [[539, null]], "Special methods": [[534, "special-methods"]], "Splitting arrays": [[531, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[540, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[532, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[531, "tiling-arrays"]], "Transpose-like operations": [[531, "transpose-like-operations"]], "Trigonometric functions": [[532, "trigonometric-functions"], [541, "trigonometric-functions"]], "Truth value testing": [[530, "truth-value-testing"]], "Universal Functions (ufunc)": [[541, null]], "Utility": [[533, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_invert": [[59, null]], "dpnp.bitwise_left_shift": [[60, null]], "dpnp.bitwise_not": [[61, null]], "dpnp.bitwise_or": [[62, null]], "dpnp.bitwise_right_shift": [[63, null]], "dpnp.bitwise_xor": [[64, null]], "dpnp.broadcast_arrays": [[65, null]], "dpnp.broadcast_to": [[66, null]], "dpnp.can_cast": [[67, null]], "dpnp.cbrt": [[68, null]], "dpnp.ceil": [[69, null]], "dpnp.choose": [[70, null]], "dpnp.clip": [[71, null]], "dpnp.column_stack": [[72, null]], "dpnp.concat": [[73, null]], "dpnp.concatenate": [[74, null]], "dpnp.conj": [[75, null]], "dpnp.conjugate": [[76, null]], "dpnp.convolve": [[77, null]], "dpnp.copy": [[78, null]], "dpnp.copysign": [[79, null]], "dpnp.copyto": [[80, null]], "dpnp.correlate": [[81, null]], "dpnp.cos": [[82, null]], "dpnp.cosh": [[83, null]], "dpnp.count_nonzero": [[84, null]], "dpnp.cov": [[85, null]], "dpnp.cross": [[86, null]], "dpnp.cumlogsumexp": [[87, null]], "dpnp.cumprod": [[88, null]], "dpnp.cumsum": [[89, null]], "dpnp.deg2rad": [[90, null]], "dpnp.degrees": [[91, null]], "dpnp.delete": [[92, null]], "dpnp.diag": [[93, null]], "dpnp.diag_indices": [[94, null]], "dpnp.diag_indices_from": [[95, null]], "dpnp.diagflat": [[96, null]], "dpnp.diagonal": [[97, null]], "dpnp.diff": [[98, null]], "dpnp.digitize": [[99, null]], "dpnp.divide": [[100, null]], "dpnp.dot": [[101, null]], "dpnp.dpnp_array.dpnp_array": [[102, null]], "dpnp.dsplit": [[103, null]], "dpnp.dstack": [[104, null]], "dpnp.dtype": [[105, null]], "dpnp.ediff1d": [[106, null]], "dpnp.einsum": [[107, null]], "dpnp.einsum_path": [[108, null]], "dpnp.empty": [[109, null]], "dpnp.empty_like": [[110, null]], "dpnp.equal": [[111, null]], "dpnp.erf": [[112, null]], "dpnp.exp": [[113, null]], "dpnp.exp2": [[114, null]], "dpnp.expand_dims": [[115, null]], "dpnp.expm1": [[116, null]], "dpnp.extract": [[117, null]], "dpnp.eye": [[118, null]], "dpnp.fabs": [[119, null]], "dpnp.fft.fft": [[120, null]], "dpnp.fft.fft2": [[121, null]], "dpnp.fft.fftfreq": [[122, null]], "dpnp.fft.fftn": [[123, null]], "dpnp.fft.fftshift": [[124, null]], "dpnp.fft.hfft": [[125, null]], "dpnp.fft.ifft": [[126, null]], "dpnp.fft.ifft2": [[127, null]], "dpnp.fft.ifftn": [[128, null]], "dpnp.fft.ifftshift": [[129, null]], "dpnp.fft.ihfft": [[130, null]], "dpnp.fft.irfft": [[131, null]], "dpnp.fft.irfft2": [[132, null]], "dpnp.fft.irfftn": [[133, null]], "dpnp.fft.rfft": [[134, null]], "dpnp.fft.rfft2": [[135, null]], "dpnp.fft.rfftfreq": [[136, null]], "dpnp.fft.rfftn": [[137, null]], "dpnp.fill_diagonal": [[138, null]], "dpnp.finfo": [[139, null]], "dpnp.fix": [[140, null]], "dpnp.flatiter": [[141, null]], "dpnp.flatnonzero": [[142, null]], "dpnp.flip": [[143, null]], "dpnp.fliplr": [[144, null]], "dpnp.flipud": [[145, null]], "dpnp.float_power": [[146, null]], "dpnp.floor": [[147, null]], "dpnp.floor_divide": [[148, null]], "dpnp.fmax": [[149, null]], "dpnp.fmin": [[150, null]], "dpnp.fmod": [[151, null]], "dpnp.from_dlpack": [[152, null]], "dpnp.frombuffer": [[153, null]], "dpnp.fromfile": [[154, null]], "dpnp.fromfunction": [[155, null]], "dpnp.fromiter": [[156, null]], "dpnp.fromstring": [[157, null]], "dpnp.full": [[158, null]], "dpnp.full_like": [[159, null]], "dpnp.gcd": [[160, null]], "dpnp.geomspace": [[161, null]], "dpnp.get_include": [[162, null]], "dpnp.gradient": [[163, null]], "dpnp.greater": [[164, null]], "dpnp.greater_equal": [[165, null]], "dpnp.heaviside": [[166, null]], "dpnp.histogram": [[167, null]], "dpnp.histogram_bin_edges": [[168, null]], "dpnp.hsplit": [[169, null]], "dpnp.hstack": [[170, null]], "dpnp.hypot": [[171, null]], "dpnp.identity": [[172, null]], "dpnp.iinfo": [[173, null]], "dpnp.imag": [[174, null]], "dpnp.indices": [[175, null]], "dpnp.inner": [[176, null]], "dpnp.invert": [[177, null]], "dpnp.isclose": [[178, null]], "dpnp.iscomplex": [[179, null]], "dpnp.iscomplexobj": [[180, null]], "dpnp.isfinite": [[181, null]], "dpnp.isfortran": [[182, null]], "dpnp.isinf": [[183, null]], "dpnp.isnan": [[184, null]], "dpnp.isneginf": [[185, null]], "dpnp.isposinf": [[186, null]], "dpnp.isreal": [[187, null]], "dpnp.isrealobj": [[188, null]], "dpnp.isscalar": [[189, null]], "dpnp.issubdtype": [[190, null]], "dpnp.ix_": [[191, null]], "dpnp.kron": [[192, null]], "dpnp.lcm": [[193, null]], "dpnp.ldexp": [[194, null]], "dpnp.left_shift": [[195, null]], "dpnp.less": [[196, null]], "dpnp.less_equal": [[197, null]], "dpnp.linalg.cholesky": [[198, null]], "dpnp.linalg.cond": [[199, null]], "dpnp.linalg.cross": [[200, null]], "dpnp.linalg.det": [[201, null]], "dpnp.linalg.diagonal": [[202, null]], "dpnp.linalg.eig": [[203, null]], "dpnp.linalg.eigh": [[204, null]], "dpnp.linalg.eigvals": [[205, null]], "dpnp.linalg.eigvalsh": [[206, null]], "dpnp.linalg.inv": [[207, null]], "dpnp.linalg.lstsq": [[208, null]], "dpnp.linalg.matmul": [[209, null]], "dpnp.linalg.matrix_norm": [[210, null]], "dpnp.linalg.matrix_power": [[211, null]], "dpnp.linalg.matrix_rank": [[212, null]], "dpnp.linalg.multi_dot": [[213, null]], "dpnp.linalg.norm": [[214, null]], "dpnp.linalg.outer": [[215, null]], "dpnp.linalg.pinv": [[216, null]], "dpnp.linalg.qr": [[217, null]], "dpnp.linalg.slogdet": [[218, null]], "dpnp.linalg.solve": [[219, null]], "dpnp.linalg.svd": [[220, null]], "dpnp.linalg.svdvals": [[221, null]], "dpnp.linalg.tensordot": [[222, null]], "dpnp.linalg.tensorinv": [[223, null]], "dpnp.linalg.tensorsolve": [[224, null]], "dpnp.linalg.trace": [[225, null]], "dpnp.linalg.vecdot": [[226, null]], "dpnp.linalg.vector_norm": [[227, null]], "dpnp.linspace": [[228, null]], "dpnp.loadtxt": [[229, null]], "dpnp.log": [[230, null]], "dpnp.log10": [[231, null]], "dpnp.log1p": [[232, null]], "dpnp.log2": [[233, null]], "dpnp.logaddexp": [[234, null]], "dpnp.logaddexp2": [[235, null]], "dpnp.logical_and": [[236, null]], "dpnp.logical_not": [[237, null]], "dpnp.logical_or": [[238, null]], "dpnp.logical_xor": [[239, null]], "dpnp.logspace": [[240, null]], "dpnp.logsumexp": [[241, null]], "dpnp.mask_indices": [[242, null]], "dpnp.matmul": [[243, null]], "dpnp.matrix_transpose": [[244, null]], "dpnp.max": [[245, null]], "dpnp.maximum": [[246, null]], "dpnp.mean": [[247, null]], "dpnp.median": [[248, null]], "dpnp.meshgrid": [[249, null]], "dpnp.mgrid": [[250, null]], "dpnp.min": [[251, null]], "dpnp.minimum": [[252, null]], "dpnp.mod": [[253, null]], "dpnp.modf": [[254, null]], "dpnp.moveaxis": [[255, null]], "dpnp.multiply": [[256, null]], "dpnp.nan_to_num": [[257, null]], "dpnp.nanargmax": [[258, null]], "dpnp.nanargmin": [[259, null]], "dpnp.nancumprod": [[260, null]], "dpnp.nancumsum": [[261, null]], "dpnp.nanmax": [[262, null]], "dpnp.nanmean": [[263, null]], "dpnp.nanmin": [[264, null]], "dpnp.nanprod": [[265, null]], "dpnp.nanstd": [[266, null]], "dpnp.nansum": [[267, null]], "dpnp.nanvar": [[268, null]], "dpnp.ndarray": [[269, null]], "dpnp.ndarray.T": [[270, null]], "dpnp.ndarray.__abs__": [[271, null]], "dpnp.ndarray.__add__": [[272, null]], "dpnp.ndarray.__and__": [[273, null]], "dpnp.ndarray.__bool__": [[274, null]], "dpnp.ndarray.__complex__": [[275, null]], "dpnp.ndarray.__copy__": [[276, null]], "dpnp.ndarray.__eq__": [[277, null]], "dpnp.ndarray.__float__": [[278, null]], "dpnp.ndarray.__floordiv__": [[279, null]], "dpnp.ndarray.__ge__": [[280, null]], "dpnp.ndarray.__getitem__": [[281, null]], "dpnp.ndarray.__gt__": [[282, null]], "dpnp.ndarray.__iadd__": [[283, null]], "dpnp.ndarray.__iand__": [[284, null]], "dpnp.ndarray.__ifloordiv__": [[285, null]], "dpnp.ndarray.__ilshift__": [[286, null]], "dpnp.ndarray.__imatmul__": [[287, null]], "dpnp.ndarray.__imod__": [[288, null]], "dpnp.ndarray.__imul__": [[289, null]], "dpnp.ndarray.__int__": [[290, null]], "dpnp.ndarray.__invert__": [[291, null]], "dpnp.ndarray.__ior__": [[292, null]], "dpnp.ndarray.__ipow__": [[293, null]], "dpnp.ndarray.__irshift__": [[294, null]], "dpnp.ndarray.__isub__": [[295, null]], "dpnp.ndarray.__itruediv__": [[296, null]], "dpnp.ndarray.__ixor__": [[297, null]], "dpnp.ndarray.__le__": [[298, null]], "dpnp.ndarray.__len__": [[299, null]], "dpnp.ndarray.__lshift__": [[300, null]], "dpnp.ndarray.__lt__": [[301, null]], "dpnp.ndarray.__matmul__": [[302, null]], "dpnp.ndarray.__mod__": [[303, null]], "dpnp.ndarray.__mul__": [[304, null]], "dpnp.ndarray.__ne__": [[305, null]], "dpnp.ndarray.__neg__": [[306, null]], "dpnp.ndarray.__new__": [[307, null]], "dpnp.ndarray.__or__": [[308, null]], "dpnp.ndarray.__pos__": [[309, null]], "dpnp.ndarray.__pow__": [[310, null]], "dpnp.ndarray.__radd__": [[311, null]], "dpnp.ndarray.__rand__": [[312, null]], "dpnp.ndarray.__repr__": [[313, null]], "dpnp.ndarray.__rfloordiv__": [[314, null]], "dpnp.ndarray.__rlshift__": [[315, null]], "dpnp.ndarray.__rmatmul__": [[316, null]], "dpnp.ndarray.__rmod__": [[317, null]], "dpnp.ndarray.__rmul__": [[318, null]], "dpnp.ndarray.__ror__": [[319, null]], "dpnp.ndarray.__rpow__": [[320, null]], "dpnp.ndarray.__rrshift__": [[321, null]], "dpnp.ndarray.__rshift__": [[322, null]], "dpnp.ndarray.__rsub__": [[323, null]], "dpnp.ndarray.__rtruediv__": [[324, null]], "dpnp.ndarray.__rxor__": [[325, null]], "dpnp.ndarray.__setitem__": [[326, null]], "dpnp.ndarray.__str__": [[327, null]], "dpnp.ndarray.__sub__": [[328, null]], "dpnp.ndarray.__truediv__": [[329, null]], "dpnp.ndarray.__xor__": [[330, null]], "dpnp.ndarray.all": [[331, null]], "dpnp.ndarray.any": [[332, null]], "dpnp.ndarray.argmax": [[333, null]], "dpnp.ndarray.argmin": [[334, null]], "dpnp.ndarray.argsort": [[335, null]], "dpnp.ndarray.astype": [[336, null]], "dpnp.ndarray.choose": [[337, null]], "dpnp.ndarray.clip": [[338, null]], "dpnp.ndarray.conj": [[339, null]], "dpnp.ndarray.conjugate": [[340, null]], "dpnp.ndarray.copy": [[341, null]], "dpnp.ndarray.cumprod": [[342, null]], "dpnp.ndarray.cumsum": [[343, null]], "dpnp.ndarray.diagonal": [[344, null]], "dpnp.ndarray.dtype": [[345, null]], "dpnp.ndarray.fill": [[346, null]], "dpnp.ndarray.flags": [[347, null]], "dpnp.ndarray.flat": [[348, null]], "dpnp.ndarray.flatten": [[349, null]], "dpnp.ndarray.imag": [[350, null]], "dpnp.ndarray.item": [[351, null]], "dpnp.ndarray.itemsize": [[352, null]], "dpnp.ndarray.mT": [[353, null]], "dpnp.ndarray.max": [[354, null]], "dpnp.ndarray.mean": [[355, null]], "dpnp.ndarray.min": [[356, null]], "dpnp.ndarray.nbytes": [[357, null]], "dpnp.ndarray.ndim": [[358, null]], "dpnp.ndarray.nonzero": [[359, null]], "dpnp.ndarray.partition": [[360, null]], "dpnp.ndarray.prod": [[361, null]], "dpnp.ndarray.put": [[362, null]], "dpnp.ndarray.ravel": [[363, null]], "dpnp.ndarray.real": [[364, null]], "dpnp.ndarray.repeat": [[365, null]], "dpnp.ndarray.reshape": [[366, null]], "dpnp.ndarray.round": [[367, null]], "dpnp.ndarray.searchsorted": [[368, null]], "dpnp.ndarray.shape": [[369, null]], "dpnp.ndarray.size": [[370, null]], "dpnp.ndarray.sort": [[371, null]], "dpnp.ndarray.squeeze": [[372, null]], "dpnp.ndarray.std": [[373, null]], "dpnp.ndarray.strides": [[374, null]], "dpnp.ndarray.sum": [[375, null]], "dpnp.ndarray.swapaxes": [[376, null]], "dpnp.ndarray.take": [[377, null]], "dpnp.ndarray.trace": [[378, null]], "dpnp.ndarray.transpose": [[379, null]], "dpnp.ndarray.var": [[380, null]], "dpnp.ndim": [[381, null]], "dpnp.negative": [[382, null]], "dpnp.nextafter": [[383, null]], "dpnp.nonzero": [[384, null]], "dpnp.not_equal": [[385, null]], "dpnp.ogrid": [[386, null]], "dpnp.ones": [[387, null]], "dpnp.ones_like": [[388, null]], "dpnp.outer": [[389, null]], "dpnp.pad": [[390, null]], "dpnp.partition": [[391, null]], "dpnp.permute_dims": [[392, null]], "dpnp.place": [[393, null]], "dpnp.positive": [[394, null]], "dpnp.pow": [[395, null]], "dpnp.power": [[396, null]], "dpnp.prod": [[397, null]], "dpnp.proj": [[398, null]], "dpnp.ptp": [[399, null]], "dpnp.put": [[400, null]], "dpnp.put_along_axis": [[401, null]], "dpnp.putmask": [[402, null]], "dpnp.rad2deg": [[403, null]], "dpnp.radians": [[404, null]], "dpnp.random.RandomState": [[405, null]], "dpnp.random.beta": [[406, null]], "dpnp.random.binomial": [[407, null]], "dpnp.random.bytes": [[408, null]], "dpnp.random.chisquare": [[409, null]], "dpnp.random.choice": [[410, null]], "dpnp.random.dirichlet": [[411, null]], "dpnp.random.exponential": [[412, null]], "dpnp.random.f": [[413, null]], "dpnp.random.gamma": [[414, null]], "dpnp.random.geometric": [[415, null]], "dpnp.random.gumbel": [[416, null]], "dpnp.random.hypergeometric": [[417, null]], "dpnp.random.laplace": [[418, null]], "dpnp.random.logistic": [[419, null]], "dpnp.random.lognormal": [[420, null]], "dpnp.random.logseries": [[421, null]], "dpnp.random.multinomial": [[422, null]], "dpnp.random.multivariate_normal": [[423, null]], "dpnp.random.negative_binomial": [[424, null]], "dpnp.random.noncentral_chisquare": [[425, null]], "dpnp.random.noncentral_f": [[426, null]], "dpnp.random.normal": [[427, null]], "dpnp.random.pareto": [[428, null]], "dpnp.random.permutation": [[429, null]], "dpnp.random.poisson": [[430, null]], "dpnp.random.power": [[431, null]], "dpnp.random.rand": [[432, null]], "dpnp.random.randint": [[433, null]], "dpnp.random.randn": [[434, null]], "dpnp.random.random": [[435, null]], "dpnp.random.random_integers": [[436, null]], "dpnp.random.random_sample": [[437, null]], "dpnp.random.ranf": [[438, null]], "dpnp.random.rayleigh": [[439, null]], "dpnp.random.sample": [[440, null]], "dpnp.random.seed": [[441, null]], "dpnp.random.shuffle": [[442, null]], "dpnp.random.standard_cauchy": [[443, null]], "dpnp.random.standard_exponential": [[444, null]], "dpnp.random.standard_gamma": [[445, null]], "dpnp.random.standard_normal": [[446, null]], "dpnp.random.standard_t": [[447, null]], "dpnp.random.triangular": [[448, null]], "dpnp.random.uniform": [[449, null]], "dpnp.random.vonmises": [[450, null]], "dpnp.random.wald": [[451, null]], "dpnp.random.weibull": [[452, null]], "dpnp.random.zipf": [[453, null]], "dpnp.ravel": [[454, null]], "dpnp.ravel_multi_index": [[455, null]], "dpnp.real": [[456, null]], "dpnp.real_if_close": [[457, null]], "dpnp.reciprocal": [[458, null]], "dpnp.reduce_hypot": [[459, null]], "dpnp.remainder": [[460, null]], "dpnp.repeat": [[461, null]], "dpnp.require": [[462, null]], "dpnp.reshape": [[463, null]], "dpnp.resize": [[464, null]], "dpnp.result_type": [[465, null]], "dpnp.right_shift": [[466, null]], "dpnp.rint": [[467, null]], "dpnp.roll": [[468, null]], "dpnp.rollaxis": [[469, null]], "dpnp.rot90": [[470, null]], "dpnp.round": [[471, null]], "dpnp.row_stack": [[472, null]], "dpnp.rsqrt": [[473, null]], "dpnp.searchsorted": [[474, null]], "dpnp.select": [[475, null]], "dpnp.shape": [[476, null]], "dpnp.sign": [[477, null]], "dpnp.signbit": [[478, null]], "dpnp.sin": [[479, null]], "dpnp.sinc": [[480, null]], "dpnp.sinh": [[481, null]], "dpnp.size": [[482, null]], "dpnp.sort": [[483, null]], "dpnp.sort_complex": [[484, null]], "dpnp.spacing": [[485, null]], "dpnp.split": [[486, null]], "dpnp.sqrt": [[487, null]], "dpnp.square": [[488, null]], "dpnp.squeeze": [[489, null]], "dpnp.stack": [[490, null]], "dpnp.std": [[491, null]], "dpnp.subtract": [[492, null]], "dpnp.sum": [[493, null]], "dpnp.swapaxes": [[494, null]], "dpnp.take": [[495, null]], "dpnp.take_along_axis": [[496, null]], "dpnp.tan": [[497, null]], "dpnp.tanh": [[498, null]], "dpnp.tensordot": [[499, null]], "dpnp.tile": [[500, null]], "dpnp.trace": [[501, null]], "dpnp.transpose": [[502, null]], "dpnp.trapezoid": [[503, null]], "dpnp.tri": [[504, null]], "dpnp.tril": [[505, null]], "dpnp.tril_indices": [[506, null]], "dpnp.tril_indices_from": [[507, null]], "dpnp.trim_zeros": [[508, null]], "dpnp.triu": [[509, null]], "dpnp.triu_indices": [[510, null]], "dpnp.triu_indices_from": [[511, null]], "dpnp.true_divide": [[512, null]], "dpnp.trunc": [[513, null]], "dpnp.unique": [[514, null]], "dpnp.unravel_index": [[515, null]], "dpnp.unstack": [[516, null]], "dpnp.unwrap": [[517, null]], "dpnp.vander": [[518, null]], "dpnp.var": [[519, null]], "dpnp.vdot": [[520, null]], "dpnp.vecdot": [[521, null]], "dpnp.vsplit": [[522, null]], "dpnp.vstack": [[523, null]], "dpnp.where": [[524, null]], "dpnp.zeros": [[525, null]], "dpnp.zeros_like": [[526, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[105, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[105, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[105, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[105, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[105, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[105, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[105, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[105, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[141, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[105, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[331, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[332, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[333, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[334, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[335, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[336, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[105, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[406, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[407, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[59, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[60, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[61, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[62, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[63, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[64, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[65, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[66, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[105, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[408, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[67, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[68, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[69, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[105, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[409, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[410, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[198, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[337, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[70, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[338, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[71, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[72, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[73, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[74, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[199, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[339, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[75, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[340, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[76, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[77, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[341, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[78, "dpnp.copy", false]], "copysign() (in module dpnp)": [[79, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[80, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[81, "dpnp.correlate", false]], "cos() (in module dpnp)": [[82, "dpnp.cos", false]], "cosh() (in module dpnp)": [[83, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[84, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[85, "dpnp.cov", false]], "cross() (in module dpnp)": [[86, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[200, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[87, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[342, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[88, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[343, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[89, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[90, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[91, "dpnp.degrees", false]], "delete() (in module dpnp)": [[92, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[105, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[201, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[93, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[94, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[95, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[96, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[344, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[97, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[202, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[98, "dpnp.diff", false]], "digitize() (in module dpnp)": [[99, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[411, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[100, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[101, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[102, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[103, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[104, "dpnp.dstack", false]], "dtype (class in dpnp)": [[105, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[345, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[106, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[203, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[204, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[205, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[206, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[107, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[108, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[109, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[110, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[111, "dpnp.equal", false]], "erf() (in module dpnp)": [[112, "dpnp.erf", false]], "exp() (in module dpnp)": [[113, "dpnp.exp", false]], "exp2() (in module dpnp)": [[114, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[115, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[116, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[412, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[117, "dpnp.extract", false]], "eye() (in module dpnp)": [[118, "dpnp.eye", false]], "f() (in module dpnp.random)": [[413, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[119, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[120, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[121, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[122, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[123, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[124, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[105, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[346, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[138, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[139, "dpnp.finfo", false]], "fix() (in module dpnp)": [[140, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[105, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[347, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[348, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[141, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[142, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[349, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[143, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[144, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[145, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[146, "dpnp.float_power", false]], "floor() (in module dpnp)": [[147, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[148, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[149, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[150, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[151, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[152, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[153, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[154, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[155, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[156, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[157, "dpnp.fromstring", false]], "full() (in module dpnp)": [[158, "dpnp.full", false]], "full_like() (in module dpnp)": [[159, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[414, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[160, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[415, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[161, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[162, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[163, "dpnp.gradient", false]], "greater() (in module dpnp)": [[164, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[165, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[416, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[105, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[166, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[125, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[167, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[168, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[169, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[170, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[417, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[171, "dpnp.hypot", false]], "identity() (in module dpnp)": [[172, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[126, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[127, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[128, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[129, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[130, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[173, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[350, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[174, "dpnp.imag", false]], "indices() (in module dpnp)": [[175, "dpnp.indices", false]], "inner() (in module dpnp)": [[176, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[207, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[177, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[131, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[132, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[133, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[105, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[105, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[178, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[179, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[180, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[181, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[182, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[183, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[184, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[105, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[185, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[186, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[187, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[188, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[189, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[190, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[351, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[105, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[352, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[191, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[105, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[192, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[418, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[193, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[194, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[195, "dpnp.left_shift", false]], "less() (in module dpnp)": [[196, "dpnp.less", false]], "less_equal() (in module dpnp)": [[197, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[228, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[229, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[230, "dpnp.log", false]], "log10() (in module dpnp)": [[231, "dpnp.log10", false]], "log1p() (in module dpnp)": [[232, "dpnp.log1p", false]], "log2() (in module dpnp)": [[233, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[234, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[235, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[236, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[237, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[238, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[239, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[419, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[420, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[421, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[240, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[241, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[208, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[242, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[243, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[209, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[210, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[211, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[212, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[244, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[354, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[245, "dpnp.max", false]], "maximum() (in module dpnp)": [[246, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[355, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[247, "dpnp.mean", false]], "median() (in module dpnp)": [[248, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[249, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[105, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[250, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[356, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[251, "dpnp.min", false]], "minimum() (in module dpnp)": [[252, "dpnp.minimum", false]], "mod() (in module dpnp)": [[253, "dpnp.mod", false]], "modf() (in module dpnp)": [[254, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[255, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[353, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[213, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[422, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[256, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[423, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[105, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[105, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[257, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[258, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[259, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[260, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[261, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[262, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[263, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[264, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[265, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[266, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[267, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[268, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[357, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[269, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[105, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[358, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[381, "dpnp.ndim", false]], "negative() (in module dpnp)": [[382, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[424, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[105, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[383, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[425, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[426, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[359, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[384, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[214, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[427, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[385, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[105, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[386, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[387, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[388, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[389, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[215, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[390, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[428, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[360, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[391, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[429, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[392, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[216, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[393, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[430, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[394, "dpnp.positive", false]], "pow() (in module dpnp)": [[395, "dpnp.pow", false]], "power() (in module dpnp)": [[396, "dpnp.power", false]], "power() (in module dpnp.random)": [[431, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[361, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[397, "dpnp.prod", false]], "proj() (in module dpnp)": [[398, "dpnp.proj", false]], "ptp() (in module dpnp)": [[399, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[362, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[400, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[401, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[402, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[217, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[403, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[404, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[432, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[433, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[434, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[435, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[436, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[437, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[405, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[438, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[363, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[454, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[455, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[439, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[364, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[456, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[457, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[458, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[459, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[460, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[365, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[461, "dpnp.repeat", false]], "require() (in module dpnp)": [[462, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[366, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[463, "dpnp.reshape", false]], "resize() (in module dpnp)": [[464, "dpnp.resize", false]], "result_type() (in module dpnp)": [[465, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[134, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[135, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[136, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[137, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[466, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[467, "dpnp.rint", false]], "roll() (in module dpnp)": [[468, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[469, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[470, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[367, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[471, "dpnp.round", false]], "row_stack() (in module dpnp)": [[472, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[473, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[440, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[368, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[474, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[441, "dpnp.random.seed", false]], "select() (in module dpnp)": [[475, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[105, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[369, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[476, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[442, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[477, "dpnp.sign", false]], "signbit() (in module dpnp)": [[478, "dpnp.signbit", false]], "sin() (in module dpnp)": [[479, "dpnp.sin", false]], "sinc() (in module dpnp)": [[480, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[481, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[370, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[482, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[218, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[219, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[371, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[483, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[484, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[485, "dpnp.spacing", false]], "split() (in module dpnp)": [[486, "dpnp.split", false]], "sqrt() (in module dpnp)": [[487, "dpnp.sqrt", false]], "square() (in module dpnp)": [[488, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[372, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[489, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[490, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[443, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[444, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[445, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[446, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[447, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[373, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[491, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[105, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[374, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[105, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[492, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[375, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[493, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[220, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[221, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[376, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[494, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[270, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[377, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[495, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[496, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[497, "dpnp.tan", false]], "tanh() (in module dpnp)": [[498, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[499, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[222, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[223, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[224, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[500, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[378, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[501, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[225, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[379, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[502, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[503, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[504, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[448, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[505, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[506, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[507, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[508, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[509, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[510, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[511, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[512, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[513, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[105, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[405, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[449, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[514, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[515, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[516, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[517, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[102, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[518, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[102, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[380, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[519, "dpnp.var", false]], "vdot() (in module dpnp)": [[520, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[521, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[226, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[227, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[450, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[522, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[523, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[451, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[452, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[524, "dpnp.where", false]], "zeros() (in module dpnp)": [[525, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[526, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[453, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_invert"], [60, 1, 1, "", "bitwise_left_shift"], [61, 1, 1, "", "bitwise_not"], [62, 1, 1, "", "bitwise_or"], [63, 1, 1, "", "bitwise_right_shift"], [64, 1, 1, "", "bitwise_xor"], [65, 1, 1, "", "broadcast_arrays"], [66, 1, 1, "", "broadcast_to"], [67, 1, 1, "", "can_cast"], [68, 1, 1, "", "cbrt"], [69, 1, 1, "", "ceil"], [70, 1, 1, "", "choose"], [71, 1, 1, "", "clip"], [72, 1, 1, "", "column_stack"], [73, 1, 1, "", "concat"], [74, 1, 1, "", "concatenate"], [75, 1, 1, "", "conj"], [76, 1, 1, "", "conjugate"], [77, 1, 1, "", "convolve"], [78, 1, 1, "", "copy"], [79, 1, 1, "", "copysign"], [80, 1, 1, "", "copyto"], [81, 1, 1, "", "correlate"], [82, 1, 1, "", "cos"], [83, 1, 1, "", "cosh"], [84, 1, 1, "", "count_nonzero"], [85, 1, 1, "", "cov"], [86, 1, 1, "", "cross"], [87, 1, 1, "", "cumlogsumexp"], [88, 1, 1, "", "cumprod"], [89, 1, 1, "", "cumsum"], [90, 1, 1, "", "deg2rad"], [91, 1, 1, "", "degrees"], [92, 1, 1, "", "delete"], [93, 1, 1, "", "diag"], [94, 1, 1, "", "diag_indices"], [95, 1, 1, "", "diag_indices_from"], [96, 1, 1, "", "diagflat"], [97, 1, 1, "", "diagonal"], [98, 1, 1, "", "diff"], [99, 1, 1, "", "digitize"], [100, 1, 1, "", "divide"], [101, 1, 1, "", "dot"], [103, 1, 1, "", "dsplit"], [104, 1, 1, "", "dstack"], [105, 2, 1, "", "dtype"], [106, 1, 1, "", "ediff1d"], [107, 1, 1, "", "einsum"], [108, 1, 1, "", "einsum_path"], [109, 1, 1, "", "empty"], [110, 1, 1, "", "empty_like"], [111, 1, 1, "", "equal"], [112, 1, 1, "", "erf"], [113, 1, 1, "", "exp"], [114, 1, 1, "", "exp2"], [115, 1, 1, "", "expand_dims"], [116, 1, 1, "", "expm1"], [117, 1, 1, "", "extract"], [118, 1, 1, "", "eye"], [119, 1, 1, "", "fabs"], [138, 1, 1, "", "fill_diagonal"], [139, 1, 1, "", "finfo"], [140, 1, 1, "", "fix"], [141, 2, 1, "", "flatiter"], [142, 1, 1, "", "flatnonzero"], [143, 1, 1, "", "flip"], [144, 1, 1, "", "fliplr"], [145, 1, 1, "", "flipud"], [146, 1, 1, "", "float_power"], [147, 1, 1, "", "floor"], [148, 1, 1, "", "floor_divide"], [149, 1, 1, "", "fmax"], [150, 1, 1, "", "fmin"], [151, 1, 1, "", "fmod"], [152, 1, 1, "", "from_dlpack"], [153, 1, 1, "", "frombuffer"], [154, 1, 1, "", "fromfile"], [155, 1, 1, "", "fromfunction"], [156, 1, 1, "", "fromiter"], [157, 1, 1, "", "fromstring"], [158, 1, 1, "", "full"], [159, 1, 1, "", "full_like"], [160, 1, 1, "", "gcd"], [161, 1, 1, "", "geomspace"], [162, 1, 1, "", "get_include"], [163, 1, 1, "", "gradient"], [164, 1, 1, "", "greater"], [165, 1, 1, "", "greater_equal"], [166, 1, 1, "", "heaviside"], [167, 1, 1, "", "histogram"], [168, 1, 1, "", "histogram_bin_edges"], [169, 1, 1, "", "hsplit"], [170, 1, 1, "", "hstack"], [171, 1, 1, "", "hypot"], [172, 1, 1, "", "identity"], [173, 1, 1, "", "iinfo"], [174, 1, 1, "", "imag"], [175, 1, 1, "", "indices"], [176, 1, 1, "", "inner"], [177, 1, 1, "", "invert"], [178, 1, 1, "", "isclose"], [179, 1, 1, "", "iscomplex"], [180, 1, 1, "", "iscomplexobj"], [181, 1, 1, "", "isfinite"], [182, 1, 1, "", "isfortran"], [183, 1, 1, "", "isinf"], [184, 1, 1, "", "isnan"], [185, 1, 1, "", "isneginf"], [186, 1, 1, "", "isposinf"], [187, 1, 1, "", "isreal"], [188, 1, 1, "", "isrealobj"], [189, 1, 1, "", "isscalar"], [190, 1, 1, "", "issubdtype"], [191, 1, 1, "", "ix_"], [192, 1, 1, "", "kron"], [193, 1, 1, "", "lcm"], [194, 1, 1, "", "ldexp"], [195, 1, 1, "", "left_shift"], [196, 1, 1, "", "less"], [197, 1, 1, "", "less_equal"], [228, 1, 1, "", "linspace"], [229, 1, 1, "", "loadtxt"], [230, 1, 1, "", "log"], [231, 1, 1, "", "log10"], [232, 1, 1, "", "log1p"], [233, 1, 1, "", "log2"], [234, 1, 1, "", "logaddexp"], [235, 1, 1, "", "logaddexp2"], [236, 1, 1, "", "logical_and"], [237, 1, 1, "", "logical_not"], [238, 1, 1, "", "logical_or"], [239, 1, 1, "", "logical_xor"], [240, 1, 1, "", "logspace"], [241, 1, 1, "", "logsumexp"], [242, 1, 1, "", "mask_indices"], [243, 1, 1, "", "matmul"], [244, 1, 1, "", "matrix_transpose"], [245, 1, 1, "", "max"], [246, 1, 1, "", "maximum"], [247, 1, 1, "", "mean"], [248, 1, 1, "", "median"], [249, 1, 1, "", "meshgrid"], [250, 5, 1, "", "mgrid"], [251, 1, 1, "", "min"], [252, 1, 1, "", "minimum"], [253, 1, 1, "", "mod"], [254, 1, 1, "", "modf"], [255, 1, 1, "", "moveaxis"], [256, 1, 1, "", "multiply"], [257, 1, 1, "", "nan_to_num"], [258, 1, 1, "", "nanargmax"], [259, 1, 1, "", "nanargmin"], [260, 1, 1, "", "nancumprod"], [261, 1, 1, "", "nancumsum"], [262, 1, 1, "", "nanmax"], [263, 1, 1, "", "nanmean"], [264, 1, 1, "", "nanmin"], [265, 1, 1, "", "nanprod"], [266, 1, 1, "", "nanstd"], [267, 1, 1, "", "nansum"], [268, 1, 1, "", "nanvar"], [269, 3, 1, "", "ndarray"], [381, 1, 1, "", "ndim"], [382, 1, 1, "", "negative"], [383, 1, 1, "", "nextafter"], [384, 1, 1, "", "nonzero"], [385, 1, 1, "", "not_equal"], [386, 5, 1, "", "ogrid"], [387, 1, 1, "", "ones"], [388, 1, 1, "", "ones_like"], [389, 1, 1, "", "outer"], [390, 1, 1, "", "pad"], [391, 1, 1, "", "partition"], [392, 1, 1, "", "permute_dims"], [393, 1, 1, "", "place"], [394, 1, 1, "", "positive"], [395, 1, 1, "", "pow"], [396, 1, 1, "", "power"], [397, 1, 1, "", "prod"], [398, 1, 1, "", "proj"], [399, 1, 1, "", "ptp"], [400, 1, 1, "", "put"], [401, 1, 1, "", "put_along_axis"], [402, 1, 1, "", "putmask"], [403, 1, 1, "", "rad2deg"], [404, 1, 1, "", "radians"], [454, 1, 1, "", "ravel"], [455, 1, 1, "", "ravel_multi_index"], [456, 1, 1, "", "real"], [457, 1, 1, "", "real_if_close"], [458, 1, 1, "", "reciprocal"], [459, 1, 1, "", "reduce_hypot"], [460, 1, 1, "", "remainder"], [461, 1, 1, "", "repeat"], [462, 1, 1, "", "require"], [463, 1, 1, "", "reshape"], [464, 1, 1, "", "resize"], [465, 1, 1, "", "result_type"], [466, 1, 1, "", "right_shift"], [467, 1, 1, "", "rint"], [468, 1, 1, "", "roll"], [469, 1, 1, "", "rollaxis"], [470, 1, 1, "", "rot90"], [471, 1, 1, "", "round"], [472, 1, 1, "", "row_stack"], [473, 1, 1, "", "rsqrt"], [474, 1, 1, "", "searchsorted"], [475, 1, 1, "", "select"], [476, 1, 1, "", "shape"], [477, 1, 1, "", "sign"], [478, 1, 1, "", "signbit"], [479, 1, 1, "", "sin"], [480, 1, 1, "", "sinc"], [481, 1, 1, "", "sinh"], [482, 1, 1, "", "size"], [483, 1, 1, "", "sort"], [484, 1, 1, "", "sort_complex"], [485, 1, 1, "", "spacing"], [486, 1, 1, "", "split"], [487, 1, 1, "", "sqrt"], [488, 1, 1, "", "square"], [489, 1, 1, "", "squeeze"], [490, 1, 1, "", "stack"], [491, 1, 1, "", "std"], [492, 1, 1, "", "subtract"], [493, 1, 1, "", "sum"], [494, 1, 1, "", "swapaxes"], [495, 1, 1, "", "take"], [496, 1, 1, "", "take_along_axis"], [497, 1, 1, "", "tan"], [498, 1, 1, "", "tanh"], [499, 1, 1, "", "tensordot"], [500, 1, 1, "", "tile"], [501, 1, 1, "", "trace"], [502, 1, 1, "", "transpose"], [503, 1, 1, "", "trapezoid"], [504, 1, 1, "", "tri"], [505, 1, 1, "", "tril"], [506, 1, 1, "", "tril_indices"], [507, 1, 1, "", "tril_indices_from"], [508, 1, 1, "", "trim_zeros"], [509, 1, 1, "", "triu"], [510, 1, 1, "", "triu_indices"], [511, 1, 1, "", "triu_indices_from"], [512, 1, 1, "", "true_divide"], [513, 1, 1, "", "trunc"], [514, 1, 1, "", "unique"], [515, 1, 1, "", "unravel_index"], [516, 1, 1, "", "unstack"], [517, 1, 1, "", "unwrap"], [518, 1, 1, "", "vander"], [519, 1, 1, "", "var"], [520, 1, 1, "", "vdot"], [521, 1, 1, "", "vecdot"], [522, 1, 1, "", "vsplit"], [523, 1, 1, "", "vstack"], [524, 1, 1, "", "where"], [525, 1, 1, "", "zeros"], [526, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[102, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[102, 3, 1, "", "T"], [102, 4, 1, "", "__eq__"], [102, 4, 1, "", "__ge__"], [102, 4, 1, "", "__getitem__"], [102, 4, 1, "", "__gt__"], [102, 4, 1, "", "__le__"], [102, 4, 1, "", "__len__"], [102, 4, 1, "", "__lt__"], [102, 4, 1, "", "__ne__"], [102, 4, 1, "", "__setitem__"], [102, 4, 1, "", "all"], [102, 4, 1, "", "any"], [102, 4, 1, "", "argmax"], [102, 4, 1, "", "argmin"], [102, 4, 1, "", "argsort"], [102, 4, 1, "", "asnumpy"], [102, 4, 1, "", "astype"], [102, 4, 1, "", "choose"], [102, 4, 1, "", "clip"], [102, 4, 1, "", "conj"], [102, 4, 1, "", "conjugate"], [102, 4, 1, "", "copy"], [102, 4, 1, "", "cumprod"], [102, 4, 1, "", "cumsum"], [102, 3, 1, "", "device"], [102, 4, 1, "", "diagonal"], [102, 4, 1, "", "dot"], [102, 3, 1, "", "dtype"], [102, 4, 1, "", "fill"], [102, 3, 1, "", "flags"], [102, 3, 1, "", "flat"], [102, 4, 1, "", "flatten"], [102, 4, 1, "", "get_array"], [102, 3, 1, "", "imag"], [102, 4, 1, "", "item"], [102, 3, 1, "", "itemsize"], [102, 3, 1, "", "mT"], [102, 4, 1, "", "max"], [102, 4, 1, "", "mean"], [102, 4, 1, "", "min"], [102, 3, 1, "", "nbytes"], [102, 3, 1, "", "ndim"], [102, 4, 1, "", "nonzero"], [102, 4, 1, "", "partition"], [102, 4, 1, "", "prod"], [102, 4, 1, "", "put"], [102, 4, 1, "", "ravel"], [102, 3, 1, "", "real"], [102, 4, 1, "", "repeat"], [102, 4, 1, "", "reshape"], [102, 4, 1, "", "round"], [102, 4, 1, "", "searchsorted"], [102, 3, 1, "", "shape"], [102, 3, 1, "", "size"], [102, 4, 1, "", "sort"], [102, 4, 1, "", "squeeze"], [102, 4, 1, "", "std"], [102, 3, 1, "", "strides"], [102, 4, 1, "", "sum"], [102, 4, 1, "", "swapaxes"], [102, 3, 1, "", "sycl_context"], [102, 3, 1, "", "sycl_device"], [102, 3, 1, "", "sycl_queue"], [102, 4, 1, "", "take"], [102, 4, 1, "", "to_device"], [102, 4, 1, "", "trace"], [102, 4, 1, "", "transpose"], [102, 3, 1, "", "usm_type"], [102, 4, 1, "", "var"]], "dpnp.dtype": [[105, 4, 1, "", "__eq__"], [105, 4, 1, "", "__ge__"], [105, 4, 1, "", "__getitem__"], [105, 4, 1, "", "__gt__"], [105, 4, 1, "", "__le__"], [105, 4, 1, "", "__len__"], [105, 4, 1, "", "__lt__"], [105, 4, 1, "", "__ne__"], [105, 3, 1, "", "alignment"], [105, 3, 1, "", "base"], [105, 3, 1, "", "byteorder"], [105, 3, 1, "", "char"], [105, 3, 1, "", "descr"], [105, 3, 1, "", "fields"], [105, 3, 1, "", "flags"], [105, 3, 1, "", "hasobject"], [105, 3, 1, "", "isalignedstruct"], [105, 3, 1, "", "isbuiltin"], [105, 3, 1, "", "isnative"], [105, 3, 1, "", "itemsize"], [105, 3, 1, "", "kind"], [105, 3, 1, "", "metadata"], [105, 3, 1, "", "name"], [105, 3, 1, "", "names"], [105, 3, 1, "", "ndim"], [105, 4, 1, "", "newbyteorder"], [105, 3, 1, "", "num"], [105, 3, 1, "", "shape"], [105, 3, 1, "", "str"], [105, 3, 1, "", "subdtype"], [105, 3, 1, "", "type"]], "dpnp.fft": [[120, 1, 1, "", "fft"], [121, 1, 1, "", "fft2"], [122, 1, 1, "", "fftfreq"], [123, 1, 1, "", "fftn"], [124, 1, 1, "", "fftshift"], [125, 1, 1, "", "hfft"], [126, 1, 1, "", "ifft"], [127, 1, 1, "", "ifft2"], [128, 1, 1, "", "ifftn"], [129, 1, 1, "", "ifftshift"], [130, 1, 1, "", "ihfft"], [131, 1, 1, "", "irfft"], [132, 1, 1, "", "irfft2"], [133, 1, 1, "", "irfftn"], [134, 1, 1, "", "rfft"], [135, 1, 1, "", "rfft2"], [136, 1, 1, "", "rfftfreq"], [137, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[141, 4, 1, "", "__eq__"], [141, 4, 1, "", "__ge__"], [141, 4, 1, "", "__getitem__"], [141, 4, 1, "", "__gt__"], [141, 4, 1, "", "__iter__"], [141, 4, 1, "", "__le__"], [141, 4, 1, "", "__lt__"], [141, 4, 1, "", "__ne__"], [141, 4, 1, "", "__next__"], [141, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[198, 1, 1, "", "cholesky"], [199, 1, 1, "", "cond"], [200, 1, 1, "", "cross"], [201, 1, 1, "", "det"], [202, 1, 1, "", "diagonal"], [203, 1, 1, "", "eig"], [204, 1, 1, "", "eigh"], [205, 1, 1, "", "eigvals"], [206, 1, 1, "", "eigvalsh"], [207, 1, 1, "", "inv"], [208, 1, 1, "", "lstsq"], [209, 1, 1, "", "matmul"], [210, 1, 1, "", "matrix_norm"], [211, 1, 1, "", "matrix_power"], [212, 1, 1, "", "matrix_rank"], [213, 1, 1, "", "multi_dot"], [214, 1, 1, "", "norm"], [215, 1, 1, "", "outer"], [216, 1, 1, "", "pinv"], [217, 1, 1, "", "qr"], [218, 1, 1, "", "slogdet"], [219, 1, 1, "", "solve"], [220, 1, 1, "", "svd"], [221, 1, 1, "", "svdvals"], [222, 1, 1, "", "tensordot"], [223, 1, 1, "", "tensorinv"], [224, 1, 1, "", "tensorsolve"], [225, 1, 1, "", "trace"], [226, 1, 1, "", "vecdot"], [227, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[270, 6, 1, "", "T"], [271, 4, 1, "", "__abs__"], [272, 4, 1, "", "__add__"], [273, 4, 1, "", "__and__"], [274, 4, 1, "", "__bool__"], [275, 4, 1, "", "__complex__"], [276, 4, 1, "", "__copy__"], [277, 4, 1, "", "__eq__"], [278, 4, 1, "", "__float__"], [279, 4, 1, "", "__floordiv__"], [280, 4, 1, "", "__ge__"], [281, 4, 1, "", "__getitem__"], [282, 4, 1, "", "__gt__"], [283, 4, 1, "", "__iadd__"], [284, 4, 1, "", "__iand__"], [285, 4, 1, "", "__ifloordiv__"], [286, 4, 1, "", "__ilshift__"], [287, 4, 1, "", "__imatmul__"], [288, 4, 1, "", "__imod__"], [289, 4, 1, "", "__imul__"], [290, 4, 1, "", "__int__"], [291, 4, 1, "", "__invert__"], [292, 4, 1, "", "__ior__"], [293, 4, 1, "", "__ipow__"], [294, 4, 1, "", "__irshift__"], [295, 4, 1, "", "__isub__"], [296, 4, 1, "", "__itruediv__"], [297, 4, 1, "", "__ixor__"], [298, 4, 1, "", "__le__"], [299, 4, 1, "", "__len__"], [300, 4, 1, "", "__lshift__"], [301, 4, 1, "", "__lt__"], [302, 4, 1, "", "__matmul__"], [303, 4, 1, "", "__mod__"], [304, 4, 1, "", "__mul__"], [305, 4, 1, "", "__ne__"], [306, 4, 1, "", "__neg__"], [307, 4, 1, "", "__new__"], [308, 4, 1, "", "__or__"], [309, 4, 1, "", "__pos__"], [310, 4, 1, "", "__pow__"], [311, 4, 1, "", "__radd__"], [312, 4, 1, "", "__rand__"], [313, 4, 1, "", "__repr__"], [314, 4, 1, "", "__rfloordiv__"], [315, 4, 1, "", "__rlshift__"], [316, 4, 1, "", "__rmatmul__"], [317, 4, 1, "", "__rmod__"], [318, 4, 1, "", "__rmul__"], [319, 4, 1, "", "__ror__"], [320, 4, 1, "", "__rpow__"], [321, 4, 1, "", "__rrshift__"], [322, 4, 1, "", "__rshift__"], [323, 4, 1, "", "__rsub__"], [324, 4, 1, "", "__rtruediv__"], [325, 4, 1, "", "__rxor__"], [326, 4, 1, "", "__setitem__"], [327, 4, 1, "", "__str__"], [328, 4, 1, "", "__sub__"], [329, 4, 1, "", "__truediv__"], [330, 4, 1, "", "__xor__"], [331, 4, 1, "", "all"], [332, 4, 1, "", "any"], [333, 4, 1, "", "argmax"], [334, 4, 1, "", "argmin"], [335, 4, 1, "", "argsort"], [336, 4, 1, "", "astype"], [337, 4, 1, "", "choose"], [338, 4, 1, "", "clip"], [339, 4, 1, "", "conj"], [340, 4, 1, "", "conjugate"], [341, 4, 1, "", "copy"], [342, 4, 1, "", "cumprod"], [343, 4, 1, "", "cumsum"], [344, 4, 1, "", "diagonal"], [345, 6, 1, "", "dtype"], [346, 4, 1, "", "fill"], [347, 6, 1, "", "flags"], [348, 6, 1, "", "flat"], [349, 4, 1, "", "flatten"], [350, 6, 1, "", "imag"], [351, 4, 1, "", "item"], [352, 6, 1, "", "itemsize"], [353, 6, 1, "", "mT"], [354, 4, 1, "", "max"], [355, 4, 1, "", "mean"], [356, 4, 1, "", "min"], [357, 6, 1, "", "nbytes"], [358, 6, 1, "", "ndim"], [359, 4, 1, "", "nonzero"], [360, 4, 1, "", "partition"], [361, 4, 1, "", "prod"], [362, 4, 1, "", "put"], [363, 4, 1, "", "ravel"], [364, 6, 1, "", "real"], [365, 4, 1, "", "repeat"], [366, 4, 1, "", "reshape"], [367, 4, 1, "", "round"], [368, 4, 1, "", "searchsorted"], [369, 6, 1, "", "shape"], [370, 6, 1, "", "size"], [371, 4, 1, "", "sort"], [372, 4, 1, "", "squeeze"], [373, 4, 1, "", "std"], [374, 6, 1, "", "strides"], [375, 4, 1, "", "sum"], [376, 4, 1, "", "swapaxes"], [377, 4, 1, "", "take"], [378, 4, 1, "", "trace"], [379, 4, 1, "", "transpose"], [380, 4, 1, "", "var"]], "dpnp.random": [[405, 2, 1, "", "RandomState"], [406, 1, 1, "", "beta"], [407, 1, 1, "", "binomial"], [408, 1, 1, "", "bytes"], [409, 1, 1, "", "chisquare"], [410, 1, 1, "", "choice"], [411, 1, 1, "", "dirichlet"], [412, 1, 1, "", "exponential"], [413, 1, 1, "", "f"], [414, 1, 1, "", "gamma"], [415, 1, 1, "", "geometric"], [416, 1, 1, "", "gumbel"], [417, 1, 1, "", "hypergeometric"], [418, 1, 1, "", "laplace"], [419, 1, 1, "", "logistic"], [420, 1, 1, "", "lognormal"], [421, 1, 1, "", "logseries"], [422, 1, 1, "", "multinomial"], [423, 1, 1, "", "multivariate_normal"], [424, 1, 1, "", "negative_binomial"], [425, 1, 1, "", "noncentral_chisquare"], [426, 1, 1, "", "noncentral_f"], [427, 1, 1, "", "normal"], [428, 1, 1, "", "pareto"], [429, 1, 1, "", "permutation"], [430, 1, 1, "", "poisson"], [431, 1, 1, "", "power"], [432, 1, 1, "", "rand"], [433, 1, 1, "", "randint"], [434, 1, 1, "", "randn"], [435, 1, 1, "", "random"], [436, 1, 1, "", "random_integers"], [437, 1, 1, "", "random_sample"], [438, 1, 1, "", "ranf"], [439, 1, 1, "", "rayleigh"], [440, 1, 1, "", "sample"], [441, 1, 1, "", "seed"], [442, 1, 1, "", "shuffle"], [443, 1, 1, "", "standard_cauchy"], [444, 1, 1, "", "standard_exponential"], [445, 1, 1, "", "standard_gamma"], [446, 1, 1, "", "standard_normal"], [447, 1, 1, "", "standard_t"], [448, 1, 1, "", "triangular"], [449, 1, 1, "", "uniform"], [450, 1, 1, "", "vonmises"], [451, 1, 1, "", "wald"], [452, 1, 1, "", "weibull"], [453, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[405, 4, 1, "", "__eq__"], [405, 4, 1, "", "__ge__"], [405, 4, 1, "", "__gt__"], [405, 4, 1, "", "__le__"], [405, 4, 1, "", "__lt__"], [405, 4, 1, "", "__ne__"], [405, 4, 1, "", "get_state"], [405, 4, 1, "", "get_sycl_device"], [405, 4, 1, "", "get_sycl_queue"], [405, 4, 1, "", "normal"], [405, 4, 1, "", "rand"], [405, 4, 1, "", "randint"], [405, 4, 1, "", "randn"], [405, 4, 1, "", "random_sample"], [405, 4, 1, "", "standard_normal"], [405, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 86, 89, 102, 105, 106, 121, 123, 125, 127, 128, 130, 132, 133, 135, 137, 138, 153, 154, 208, 212, 214, 216, 220, 221, 222, 345, 379, 405, 406, 407, 412, 413, 414, 416, 417, 418, 419, 420, 422, 424, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 463, 499, 500, 534], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 161, 163, 166, 167, 168, 169, 172, 175, 176, 178, 181, 183, 184, 185, 186, 191, 192, 193, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 341, 344, 346, 350, 351, 353, 364, 367, 369, 371, 373, 378, 379, 380, 381, 384, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 412, 414, 415, 416, 418, 419, 420, 422, 423, 424, 427, 429, 430, 431, 432, 435, 437, 438, 439, 440, 443, 446, 448, 449, 450, 455, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 524, 525, 526, 534], "00": [82, 108, 120, 479], "000": [257, 407], "00000000005e": 116, "00000000e": [120, 257], "000000082740371e": 116, "000000e": [82, 479], "00001e10": [17, 178], "0001e10": 178, "000e": 108, "000j": 257, "002": 257, "00867716": 409, "01": 108, "02": [108, 257], "03": 257, "03088525e": 109, "0396842": 240, "04": 108, "04719755": 404, "04921661": 405, "04923628": 480, "05": [17, 108, 178], "05846808": 480, "0614962j": [121, 135], "06310682": 405, "06682066": 480, "07": 257, "07944154": [87, 218], "08": [17, 82, 108, 146, 178, 423, 479], "08156915": 405, "08409186": 480, "08504448": 480, "08903844": 480, "0943951": 404, "09640474": 235, "09861229": [87, 218, 232], "0d": 34, "0dev1": 6, "0j": [20, 101, 102, 179, 180, 187, 188, 209, 243, 350, 364, 477], "0th": [222, 499], "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 179, 180, 182, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 335, 336, 341, 344, 346, 349, 350, 351, 353, 358, 360, 364, 369, 371, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 409, 410, 412, 414, 416, 418, 419, 420, 422, 423, 424, 427, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 444, 446, 449, 454, 455, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 534], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 60, 63, 71, 78, 87, 88, 89, 92, 94, 95, 98, 99, 102, 103, 105, 107, 108, 116, 117, 124, 136, 158, 161, 167, 168, 169, 174, 178, 191, 192, 194, 195, 225, 226, 230, 231, 232, 233, 240, 241, 248, 256, 366, 390, 399, 401, 405, 407, 417, 429, 459, 465, 466, 468, 471, 474, 486, 490, 496, 505, 506, 507, 509, 510, 511, 516, 521, 522, 524], "100": [94, 136, 161, 178, 192, 213, 240, 390, 417, 443, 457, 517], "1000": [67, 161, 213, 240, 406, 407, 412, 414, 416, 417, 418, 419, 420, 427, 428, 431, 433, 435, 438, 440, 446, 450, 451, 452, 453, 457, 503], "10000": [89, 213, 415, 430, 439, 449], "100000": 424, "1000000": [443, 445, 447, 448], "1024": 0, "10394325": 480, "105": 108, "11": [31, 32, 56, 83, 92, 94, 95, 102, 103, 117, 163, 169, 214, 225, 366, 424, 433, 471, 474, 481, 505, 506, 507, 509, 510, 511, 516, 522, 524], "110": [107, 176], "111111": 257, "113": 234, "11570901": 405, "11643488": 480, "1179187": 405, "118033988749895": 491, "119": 107, "1196081": 405, "12": [10, 31, 32, 55, 86, 91, 92, 94, 95, 99, 103, 105, 107, 117, 121, 135, 160, 169, 174, 193, 221, 240, 397, 399, 404, 429, 455, 474, 505, 506, 507, 509, 510, 511, 516, 522, 524], "120": [88, 91], "123": [102, 108, 351], "125": [146, 395, 396, 518], "12613779": 480, "127": 161, "128": [0, 161, 257], "12th": 107, "13": [10, 31, 32, 59, 61, 94, 95, 101, 103, 105, 107, 169, 177, 209, 243, 455, 474, 506, 507, 510, 511, 515, 516, 522], "130": 107, "134": 176, "13436424": 405, "135": [29, 51], "13710533": 409, "139884456208480": 16, "13j": 457, "14": [31, 32, 58, 59, 61, 94, 95, 101, 103, 140, 169, 176, 177, 222, 474, 499, 506, 507, 510, 511, 516, 522], "140": 517, "140053638309840": 21, "14157194": 503, "14159265": [13, 24, 29, 51, 90, 404], "14423775e": 120, "14j": 457, "15": [31, 32, 89, 94, 95, 99, 103, 107, 125, 130, 169, 214, 231, 429, 474, 506, 507, 510, 511, 516, 522], "150": 91, "15591488": 480, "15888336": 240, "15j": 457, "16": [6, 58, 94, 95, 103, 105, 120, 146, 156, 161, 163, 169, 227, 256, 395, 396, 457, 475, 497, 506, 507, 510, 511, 516, 522], "1621": [455, 515], "16227766": [199, 459], "16394577": 405, "164": 235, "166": 235, "16j": 120, "17": [6, 120, 121, 135, 516], "17157288": [204, 206], "17281316e": 120, "177": [161, 240], "17j": 120, "18": [6, 88, 105, 106, 107, 123, 200, 210, 214, 240, 516], "180": [29, 51, 90, 91, 107, 403, 517, 541], "1805": 10, "18236388": 405, "18557831": 405, "1887902": 404, "18920668": 480, "19": [10, 84, 105, 455, 516, 517], "1923875335537315": 434, "19245009": 473, "1924881e": 146, "1965": 10, "19722458": 87, "1985": 214, "1d": [106, 400, 401, 496, 503], "1e": [17, 116, 178, 203, 231, 232, 234, 235, 423], "1e10": [17, 178], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 75, 76, 102, 131, 174, 179, 187, 203, 215, 220, 350, 364, 389, 456, 484, 488], "1th": [222, 499], "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 179, 182, 187, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 336, 341, 344, 346, 349, 351, 353, 358, 360, 369, 370, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 409, 413, 417, 423, 429, 432, 434, 445, 447, 448, 451, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481, 482, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526], "20": [6, 60, 88, 99, 107, 136, 160, 175, 178, 192, 193, 194, 195, 214, 401, 407, 422, 474, 496, 516, 517], "20000": 407, "2007": 10, "200e": 108, "20477401j": [121, 135], "2048": 0, "21": [89, 105, 516], "210": 91, "215": 240, "21623621": 480, "21941987": 405, "21968665": 405, "22": [400, 455, 515, 516], "220": 517, "220446049250313e": 457, "222222": 257, "22460635e": 497, "22464680e": 120, "22497216": 214, "22776602": 240, "23": [6, 405, 455, 516], "230": 107, "23387232": 480, "23598776": 404, "23606798": 214, "24": [31, 32, 86, 88, 102, 106, 107, 176, 192, 200, 222, 223, 225, 369, 397, 499, 501, 516], "240": 91, "24264069": 214, "24544512": 405, "247219128924647": 266, "25": [105, 107, 112, 122, 163, 167, 168, 207, 228, 256, 268, 434, 443, 475, 518, 519], "255": [58, 62], "25506903": 405, "256": [0, 161], "26": [64, 107], "260": 517, "26618007j": 233, "27": [68, 146, 240, 395, 396, 473, 518], "270": 91, "275": 6, "28": 107, "28000000e": 257, "2800000e": 257, "283185307179586": 517, "28318531": 517, "28352814": 405, "28904982": 235, "297": 10, "299": 6, "2d": [220, 243, 470, 514], "2e": 89, "2f": 0, "2j": [75, 76, 101, 120, 174, 179, 187, 204, 206, 209, 243, 456, 477, 484, 520], "2k": 517, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 129, 130, 132, 133, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 161, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 182, 187, 188, 189, 191, 192, 195, 199, 200, 201, 202, 203, 207, 208, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 341, 344, 349, 351, 353, 358, 360, 369, 370, 371, 379, 381, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 400, 404, 405, 409, 413, 420, 423, 429, 432, 433, 434, 444, 448, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 478, 482, 483, 484, 486, 487, 489, 490, 491, 492, 494, 495, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "30": [86, 91, 102, 107, 136, 370, 401, 404, 496, 520], "300": [91, 517], "3003003": 458, "301": 10, "30102999566": 231, "3012989": 481, "30258509": [87, 241], "308": 257, "308j": 257, "31": [64, 161, 455, 515], "312": 109, "316": 240, "32": [105, 107, 161, 222, 265, 267, 499], "33": 458, "330": 91, "333": 213, "33333333": 257, "3333333e": 257, "33340275": 503, "33486982e": 120, "33836967": 405, "340": 517, "34074171": 405, "34132519": 240, "34846923": [210, 214], "34960421": 240, "35": [107, 415], "35106603e": [210, 214], "35348576": 227, "35355338": 473, "36": 86, "360": 517, "37": [455, 471, 515], "371139e": 82, "38": [176, 407], "380": 517, "38268343": 204, "38268343j": 204, "38629436": 87, "38885": 407, "389056099": [113, 116], "39": 6, "39295758": 405, "397": 6, "3e": [0, 89, 457], "3j": [101, 209, 243, 484], "3rd": [73, 74, 103, 486], "3x3": 242, "3x8000": 444, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 62, 65, 71, 72, 73, 74, 77, 80, 82, 84, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 117, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 142, 143, 146, 148, 149, 150, 154, 155, 156, 158, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 179, 182, 187, 191, 192, 194, 197, 200, 201, 202, 207, 209, 210, 211, 212, 214, 218, 221, 222, 223, 224, 225, 227, 228, 233, 236, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 258, 259, 261, 263, 266, 268, 341, 344, 349, 353, 358, 360, 369, 371, 379, 381, 384, 386, 388, 390, 392, 395, 396, 397, 399, 400, 404, 405, 406, 409, 429, 434, 450, 454, 455, 456, 457, 460, 461, 463, 464, 468, 469, 470, 471, 472, 475, 477, 480, 482, 483, 486, 487, 490, 491, 492, 494, 495, 499, 500, 502, 503, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 526], "40": [60, 107, 136, 194, 195, 401, 496], "400": 6, "40882036": 405, "4096": 0, "41": [455, 480, 515], "41421356": [199, 214], "42": 475, "420": 517, "429": 6, "44": [393, 400], "4400": [107, 222, 499], "443469": 240, "44509285e": 120, "45": [20, 29, 51, 227], "4532": [107, 222, 499], "46": 107, "460": 517, "46394577": 405, "464": 240, "4664": [107, 222, 499], "47": 6, "4730": [107, 222, 499], "4796": [107, 222, 499], "48": [6, 86], "48093112": 405, "4874": [107, 222, 499], "48927254": 405, "49": 6, "4928": [107, 222, 499], "49543509": 405, "49778714": 517, "499128": 101, "4d": 220, "4e": 457, "4j": [174, 456, 520], "4x4": [506, 510], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 69, 71, 73, 74, 77, 80, 81, 84, 86, 88, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 112, 117, 121, 122, 124, 132, 135, 136, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 160, 161, 163, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 182, 187, 191, 192, 194, 195, 198, 200, 202, 204, 206, 207, 213, 214, 215, 219, 222, 225, 226, 227, 228, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 263, 266, 336, 341, 351, 353, 370, 381, 384, 386, 387, 388, 389, 390, 392, 395, 396, 399, 400, 404, 405, 406, 407, 409, 412, 424, 428, 429, 430, 431, 434, 437, 452, 454, 455, 456, 457, 458, 460, 463, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 482, 484, 486, 490, 491, 493, 494, 495, 499, 500, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526], "50": [121, 135, 136, 161, 192, 222, 234, 235, 240, 401, 496, 499, 503, 524], "500": [192, 517], "5018": [107, 222, 499], "50455115": 480, "5091786": 83, "51": 6, "512": 0, "5162": [107, 222, 499], "52069395e": 120, "52359878": 404, "52928804": 405, "5306": [107, 222, 499], "5399045e": 146, "54": 405, "540": 517, "542": 6, "54288406": 405, "54465213": 405, "548739": 481, "54930614": [30, 52], "55": [393, 400, 475], "5555555555555554": 268, "56": 6, "562": 240, "5620499351813308": [11, 12], "56920387": 405, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 404, 517], "58997253": 405, "591953": 83, "5e": [234, 235], "5j": [250, 386, 484], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 39, 53, 56, 62, 64, 71, 73, 74, 80, 86, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 116, 117, 122, 125, 136, 143, 146, 159, 160, 163, 169, 170, 174, 175, 176, 182, 191, 192, 193, 200, 202, 210, 214, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 240, 242, 244, 248, 260, 261, 265, 341, 351, 353, 369, 381, 384, 388, 390, 393, 395, 396, 399, 405, 422, 424, 429, 434, 454, 455, 456, 462, 463, 468, 469, 470, 471, 472, 475, 482, 484, 486, 490, 492, 493, 494, 495, 499, 501, 503, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 520, 521, 522, 523, 524, 526], "60": [86, 91, 107, 193, 222, 401, 496, 499, 517, 524], "600": 192, "60943791": 87, "61799388": 404, "62": 176, "6227766": 161, "62318272": 409, "62341325": 161, "624": 108, "63": 161, "63317787e": 497, "63522211": 405, "63836967": 405, "64": [0, 4, 107, 146, 161, 265, 267, 395, 396, 471], "64000": 107, "65745445": [14, 25], "66519143": 404, "6666666666666665": 263, "67": 107, "67305985": 153, "673174": 405, "67718303": 405, "69295758": 405, "69314718": [87, 218, 232], "6990877": 405, "6j": [174, 456, 520], "7": [15, 17, 22, 23, 39, 53, 69, 71, 80, 84, 86, 89, 92, 93, 94, 95, 97, 98, 100, 102, 103, 106, 113, 117, 143, 147, 161, 163, 169, 176, 178, 191, 192, 202, 210, 214, 220, 222, 225, 227, 242, 244, 248, 253, 256, 351, 353, 384, 390, 398, 399, 405, 429, 455, 456, 460, 465, 467, 468, 470, 486, 492, 493, 494, 495, 499, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 520, 522, 524], "70": [192, 520, 524], "700": 192, "700e": 108, "70710677": [102, 350, 364], "70710678": [199, 203], "70710678j": 203, "70882036": 405, "71238898": 404, "718281828": [113, 116], "72": 86, "720": [88, 517], "72075441": 240, "72538256": [27, 47], "74165739": 214, "742278e": 479, "74596669": [210, 214], "74921661": 405, "75": [56, 112, 122, 163, 168, 207, 228], "754": 139, "75682673": 480, "75958653": 404, "76096244": 405, "76377462": 405, "77447665": 235, "78539816": [20, 28, 29, 50, 51, 517], "78927254": 405, "79175947": 87, "79769313e": 257, "7j": 398, "8": [4, 15, 17, 22, 39, 53, 68, 71, 80, 86, 92, 93, 94, 95, 97, 98, 102, 103, 105, 107, 108, 117, 120, 122, 136, 137, 143, 146, 161, 163, 169, 174, 178, 191, 201, 202, 214, 218, 220, 221, 222, 223, 225, 226, 227, 228, 240, 242, 244, 353, 369, 384, 390, 395, 396, 397, 399, 405, 429, 448, 455, 456, 468, 470, 473, 479, 486, 495, 499, 501, 503, 505, 506, 507, 509, 510, 511, 515, 516, 517, 518, 521, 522, 524], "80": [105, 107, 524], "8000": 444, "80226506": 405, "8058837395885292": 227, "81715362": 405, "827941": [161, 240], "82842712": [204, 206], "84288406": 405, "84401099": 405, "84743374": 405, "84803548": 214, "85": 107, "86": 176, "87649168": 234, "88": 106, "88178420e": 120, "881943016134134": 227, "88194302": 227, "88997253": 405, "89920014": 409, "8f": 105, "8j": 520, "9": [4, 15, 22, 39, 53, 71, 80, 86, 89, 92, 93, 94, 95, 97, 100, 102, 103, 107, 109, 117, 120, 123, 124, 129, 140, 146, 148, 156, 161, 163, 169, 178, 191, 202, 203, 208, 210, 214, 216, 217, 220, 221, 222, 225, 227, 240, 242, 256, 257, 351, 384, 399, 405, 407, 409, 429, 455, 456, 468, 486, 487, 492, 499, 505, 506, 507, 509, 510, 511, 512, 515, 516, 517, 518, 522, 524], "90": [20, 91, 403, 470, 524], "917152": 498, "92387953": 204, "92387953j": 204, "93548928": 480, "94": 107, "94591015": 87, "95": 208, "95799250e": 120, "98": [209, 243], "98024613": 240, "99": [106, 232, 401], "99322285": [14, 25], "99532227": 112, "996272": 498, "99822295": [27, 47], "99853728": 112, "999": 108, "9990000e": 257, "99959305": 112, "99989938": 112, "9999": 257, "99997791": 112, "999999e": 178, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 75, 76, 78, 79, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 121, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 172, 174, 175, 177, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 198, 202, 204, 205, 206, 208, 212, 213, 214, 217, 218, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 248, 250, 252, 253, 256, 260, 261, 265, 267, 336, 341, 349, 351, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 398, 403, 404, 405, 407, 424, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 454, 455, 456, 458, 460, 463, 466, 467, 470, 473, 477, 478, 479, 480, 481, 485, 486, 487, 488, 492, 494, 495, 497, 498, 499, 500, 502, 504, 506, 508, 510, 512, 513, 518, 521, 522, 524, 525, 526, 541], "AND": [16, 58, 59, 61, 62, 64, 177, 236, 237, 238, 239], "And": [4, 48, 49, 94, 102, 336, 506, 510], "As": 514, "Be": 203, "Being": 3, "But": [4, 105], "By": [31, 32, 42, 49, 86, 102, 121, 125, 127, 131, 133, 137, 161, 208, 228, 240, 243, 245, 247, 251, 258, 259, 262, 263, 264, 265, 266, 267, 268, 336, 461, 468, 482, 491, 495, 504, 506, 508, 510, 519, 521], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 346, 349, 350, 351, 358, 364, 366, 369, 374, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 534, 541], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 71, 73, 74, 84, 86, 87, 88, 89, 92, 93, 97, 98, 101, 102, 103, 105, 106, 107, 108, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 149, 150, 152, 157, 161, 163, 167, 168, 169, 170, 174, 175, 176, 178, 182, 185, 186, 187, 198, 200, 208, 210, 211, 212, 213, 214, 216, 217, 220, 222, 224, 225, 227, 228, 229, 240, 241, 245, 246, 247, 248, 249, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 353, 371, 392, 393, 397, 400, 401, 405, 427, 449, 456, 457, 459, 461, 462, 463, 464, 468, 471, 472, 474, 483, 486, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 502, 503, 514, 517, 518, 519, 520, 521, 522, 523, 524, 534, 541], "In": [4, 10, 31, 32, 86, 88, 89, 107, 108, 126, 127, 128, 131, 133, 163, 198, 205, 213, 217, 235, 240, 260, 261, 263, 265, 267, 397, 400, 405, 449, 454, 455, 463, 464, 493, 495, 513], "It": [4, 10, 16, 21, 22, 31, 32, 71, 88, 89, 99, 101, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 163, 204, 206, 235, 243, 247, 248, 258, 259, 260, 261, 262, 263, 264, 266, 268, 390, 397, 463, 464, 475, 485, 491, 493, 495, 519, 541], "Its": [71, 223, 401, 501], "NOT": [59, 61, 177, 236, 237, 238, 239], "No": [41, 42, 107, 198], "Not": [16, 21, 42, 181, 257, 260, 261, 262, 264, 265, 267, 397], "OR": [21, 58, 59, 61, 62, 64, 177, 236, 237, 238, 239], "On": 4, "One": [53, 54, 55, 86, 104, 105, 131, 215, 390, 463], "Ones": 36, "Or": [163, 503], "That": 242, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 177, 178, 180, 181, 182, 183, 184, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 336, 341, 350, 353, 358, 360, 364, 369, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 408, 410, 411, 421, 426, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 523, 524, 525, 526, 534, 537, 541], "Then": [10, 43, 45, 242], "There": [10, 228, 514], "These": [4, 22, 105, 107, 108, 115, 242, 255, 401, 496, 506, 510, 534, 537], "To": [4, 125, 131, 133, 146, 384, 517], "With": [31, 32, 56, 84, 169, 210, 214, 227, 245, 251, 258, 259, 265, 267, 397, 493, 522], "_": [0, 168, 490, 503], "__array_interface__": 105, "__bool__": 534, "__dlpack__": 152, "__dlpack_device__": 152, "__eq__": [102, 105, 141, 405], "__ge__": [102, 105, 141, 405], "__getitem__": [102, 105, 141], "__gt__": [102, 105, 141, 405], "__iter__": 141, "__le__": [102, 105, 141, 405], "__len__": [102, 105], "__lt__": [102, 105, 141, 405], "__main__": 0, "__name__": 0, "__ne__": [102, 105, 141, 405], "__next__": 141, "__setitem__": [102, 141], "__sycl_usm_array_interface__": 44, "_dtypes_list": 0, "_f": 214, "a1": [37, 38], "a2": [37, 38], "a_": [10, 214], "a_ax": [222, 499], "a_i": [226, 521], "a_k": 10, "a_m": 10, "a_resamp": 131, "ab": [6, 10, 12, 17, 178, 214], "abc": 107, "abcd": 108, "abl": 214, "about": [43, 45, 102, 139, 203, 347, 390, 462, 534], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 87, 93, 96, 123, 128, 133, 137, 175, 202, 217, 225, 241, 257, 459, 504, 505, 509], "absolut": [6, 11, 17, 20, 119, 160, 178, 193, 218, 266, 268, 398, 457, 491, 517, 519, 541], "accept": [33, 107, 215, 405, 483, 506, 510], "access": [10, 94, 95, 138, 242, 506, 510, 534], "accord": [16, 21, 56, 63, 67, 105, 137, 139, 203, 204, 205, 206, 241, 247, 248, 263, 266, 268, 390, 459, 466, 491, 519], "accordingli": [86, 262, 264], "account": [454, 463], "accumul": [87, 88, 89, 107, 167, 225, 260, 261, 265, 267, 397, 493, 501], "accur": [105, 116, 163, 232, 234], "accuraci": [126, 127, 128, 131, 133], "achiev": 107, "aco": 24, "acosh": 25, "across": [97, 168, 260, 261, 265, 267], "activ": 4, "actual": [105, 167, 168, 198, 213], "ad": [17, 105, 108, 115, 131, 178, 201, 218, 235, 517, 537], "add": [6, 105, 541], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [87, 198, 263, 514], "address": 105, "adjac": [202, 225, 485, 517], "advanc": 107, "advers": 107, "advis": 4, "affect": [23, 97, 107, 138, 167, 168], "after": [104, 138, 383, 390, 424, 468], "after_1": 390, "after_n": 390, "ag": 105, "against": [17, 31, 32, 65, 66, 71, 84, 162, 178, 210, 214, 216, 227, 245, 251, 258, 259, 265, 267, 397, 401, 493, 496], "ai": [3, 401, 496], "ai_max": 496, "ai_min": 496, "ainv": [207, 223], "al": 10, "algebra": [527, 537], "algorithm": [10, 33, 107, 108, 120, 126, 134, 483], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 60, 61, 63, 73, 74, 100, 110, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 159, 177, 195, 253, 269, 388, 392, 395, 396, 405, 435, 438, 440, 454, 460, 463, 466, 472, 502, 512, 517, 523, 526], "alias": [9, 125, 126, 131, 133, 480], "align": 105, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 72, 84, 91, 98, 102, 104, 105, 107, 108, 113, 114, 116, 118, 123, 124, 128, 129, 132, 133, 137, 138, 143, 144, 145, 153, 154, 156, 161, 163, 170, 172, 174, 191, 198, 200, 212, 216, 227, 228, 240, 245, 248, 251, 258, 259, 262, 264, 336, 339, 346, 360, 390, 397, 407, 456, 457, 468, 472, 475, 489, 493, 514, 516, 521, 523, 534, 541], "allclos": [6, 37, 178, 207, 216, 217, 219, 220, 224], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 78, 87, 93, 94, 96, 102, 109, 110, 118, 122, 136, 140, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 185, 186, 228, 229, 240, 241, 242, 247, 248, 250, 263, 266, 268, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 459, 489, 491, 504, 506, 510, 518, 519, 521, 525, 526], "allow": [39, 49, 92, 102, 107, 167, 168, 182, 235, 242, 248, 336, 366, 495, 534], "alltru": 6, "almost": [34, 203, 506], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 72, 73, 74, 84, 87, 88, 89, 92, 93, 94, 96, 97, 98, 102, 103, 104, 106, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 143, 144, 145, 149, 150, 155, 161, 163, 169, 170, 175, 214, 217, 222, 223, 224, 225, 226, 227, 228, 240, 241, 245, 246, 247, 248, 249, 251, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 333, 334, 335, 342, 343, 354, 356, 361, 362, 370, 373, 375, 377, 378, 380, 390, 393, 397, 399, 400, 401, 454, 459, 461, 468, 469, 470, 472, 475, 482, 483, 486, 490, 491, 493, 495, 496, 499, 500, 501, 503, 506, 507, 510, 511, 514, 516, 517, 519, 521, 522, 523, 534], "alpha": [406, 411, 412, 428, 431], "alreadi": [4, 10, 41, 42, 53, 54, 55, 389, 390, 514], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 79, 100, 102, 105, 107, 111, 115, 123, 128, 132, 133, 134, 137, 146, 148, 149, 150, 151, 155, 157, 160, 163, 164, 165, 166, 167, 171, 178, 182, 193, 195, 196, 197, 198, 234, 235, 242, 246, 252, 253, 255, 256, 369, 384, 385, 395, 396, 443, 460, 466, 480, 492, 495, 512, 514, 534], "alter": 97, "altern": [3, 4, 16, 21, 88, 89, 101, 102, 243, 245, 247, 248, 251, 260, 261, 263, 265, 266, 267, 268, 379, 397, 491, 493, 519], "although": [20, 105, 127, 128, 129, 500], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 97, 102, 103, 106, 119, 146, 152, 169, 204, 206, 266, 268, 336, 384, 463, 484, 491, 519, 522], "amax": [6, 245], "ambigu": 534, "amin": [6, 251], "among": 106, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 188, 191, 193, 194, 195, 196, 197, 200, 201, 202, 205, 208, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 335, 336, 337, 338, 341, 351, 354, 358, 360, 362, 365, 366, 369, 370, 371, 372, 376, 377, 379, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 412, 413, 415, 424, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 534, 541], "anaconda": 3, "analog": [121, 123, 125, 127, 128, 130], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 90, 91, 174, 403, 404, 456, 457, 517, 541], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 65, 66, 78, 93, 96, 98, 102, 105, 107, 108, 121, 123, 127, 128, 133, 137, 138, 158, 159, 161, 163, 168, 170, 180, 188, 189, 211, 224, 228, 240, 242, 262, 264, 336, 358, 390, 405, 449, 462, 480, 485, 518, 534], "anoth": [4, 80, 102, 117, 127, 128, 152, 341, 362, 393, 400, 469], "answer": 407, "anti": [97, 138, 202, 480], "anyth": 105, "ap": 208, "apart": 503, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 86, 93, 94, 96, 97, 102, 105, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 200, 202, 209, 210, 215, 216, 225, 226, 227, 228, 229, 240, 242, 243, 250, 336, 341, 386, 387, 388, 389, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 501, 504, 506, 510, 518, 520, 521, 525, 526], "appear": [115, 144, 145, 514], "append": [0, 6, 60, 92, 98, 106, 108, 115, 126, 127, 128, 195, 202], "appli": [31, 32, 33, 56, 67, 92, 107, 222, 257, 455, 464, 465, 483, 499, 503], "applic": [10, 105, 480], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [102, 105, 126, 127, 128, 369], "appropri": [4, 31, 32, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 162, 224, 258, 259, 262, 264, 405, 433, 436, 464, 495, 534], "approxim": [139, 503], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 100, 101, 102, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 160, 161, 163, 164, 165, 166, 167, 168, 171, 176, 177, 178, 181, 182, 183, 184, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 359, 360, 369, 381, 382, 383, 384, 385, 390, 391, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 431, 433, 436, 437, 439, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 464, 466, 467, 468, 471, 472, 473, 474, 475, 477, 478, 479, 482, 483, 485, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 501, 503, 507, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 534, 541], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 71, 79, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 107, 111, 113, 114, 116, 117, 120, 142, 143, 146, 151, 159, 160, 161, 163, 167, 169, 175, 176, 191, 192, 193, 194, 202, 209, 210, 214, 222, 225, 227, 228, 231, 232, 236, 237, 238, 239, 240, 242, 243, 245, 249, 251, 253, 256, 344, 353, 385, 388, 390, 393, 395, 396, 400, 404, 429, 460, 462, 463, 465, 468, 470, 475, 486, 492, 499, 501, 503, 506, 507, 510, 511, 512, 516, 522, 524, 526], "arbitrari": [48, 101, 105, 107, 176, 243, 465, 506, 510], "arbitrarili": 107, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 82], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 83], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 479], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 481], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 497], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 498], "area": 503, "arg": [65, 102, 191, 351, 405], "arg1": 190, "arg2": 190, "argmax": [0, 6, 32, 102, 258, 401, 496, 534], "argmin": [6, 31, 102, 259, 496, 534], "argpartit": [6, 33, 401, 496, 534], "argsort": [6, 102, 392, 401, 474, 483, 496, 502, 534], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 79, 82, 83, 90, 91, 100, 101, 102, 105, 108, 112, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 160, 166, 171, 174, 177, 189, 190, 193, 194, 195, 200, 202, 209, 213, 214, 215, 222, 225, 226, 231, 232, 233, 234, 235, 242, 243, 246, 252, 253, 254, 256, 351, 366, 379, 382, 383, 390, 394, 395, 396, 398, 400, 403, 404, 456, 457, 458, 460, 463, 465, 466, 467, 473, 477, 478, 479, 480, 481, 485, 490, 492, 497, 498, 499, 503, 512, 513, 521, 534, 541], "argwher": [6, 384], "ari": [39, 53, 54, 55, 103, 106, 169, 486, 522], "arithmet": [56, 161, 247, 248, 263, 266, 268, 394, 491, 493, 519, 527, 537], "around": [6, 102, 161, 390, 400, 455, 471], "arr": [22, 42, 92, 95, 105, 168, 402, 429, 454, 455, 507, 511, 516], "arr2": [105, 516], "arr_t": [49, 102, 336], "arraiarray2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 78, 80, 93, 96, 106, 117, 158, 159, 161, 180, 188, 222, 228, 240, 381, 390, 393, 400, 401, 405, 470, 476, 482, 495, 499, 518], "array_of_diagon": 97, "array_repr": 6, "array_split": [6, 73, 74, 486], "array_str": 6, "arrays_and_dtyp": 465, "art": 10, "asanyarrai": [6, 41, 42, 45, 462], "asarrai": [4, 6, 40, 42, 43, 45, 48, 381, 462, 482], "asarray_chkfinit": [6, 40, 41], "ascend": [204, 206, 474], "ascii": 105, "ascontiguousarrai": [6, 40, 41, 42, 45, 462], "asfarrai": [6, 40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 462], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 102, "aspect": 105, "assembl": [73, 74, 104, 170, 472, 490, 516, 523], "assert": 248, "assign": [102, 346, 369, 506, 510], "associ": [56, 167, 168, 534], "assum": [10, 56, 86, 108, 125, 131, 133, 202, 212, 216, 220, 242, 503], "astyp": [6, 102, 161, 384], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 54, 55, 115], "atleast_2d": [6, 53, 55, 115], "atleast_3d": [6, 53, 54, 115], "atol": [17, 178], "attain": 0, "attempt": [101, 213], "attribut": [102, 105, 110, 139, 159, 173, 217, 388, 526, 527], "automat": [167, 168], "avail": [2, 3, 4, 10, 81, 85, 105, 112, 254, 258, 259, 262, 264, 265, 527, 534], "averag": [6, 102, 247, 248, 263, 355, 493, 537], "avg": 56, "avoid": [36, 41, 54, 55, 125, 131, 133, 463], "aweight": 85, "ax": [16, 21, 31, 32, 56, 84, 86, 87, 98, 101, 102, 107, 115, 121, 123, 124, 127, 128, 129, 132, 133, 135, 137, 143, 163, 176, 200, 210, 214, 219, 222, 223, 224, 225, 227, 241, 243, 244, 245, 247, 248, 251, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 376, 379, 389, 390, 392, 397, 459, 464, 468, 469, 470, 489, 491, 493, 494, 499, 500, 501, 502, 514, 519, 521], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 72, 73, 74, 84, 86, 87, 88, 89, 92, 97, 98, 102, 103, 104, 106, 107, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 143, 144, 145, 149, 150, 155, 161, 163, 169, 170, 175, 200, 208, 214, 222, 226, 227, 228, 240, 241, 243, 245, 246, 247, 248, 251, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 331, 332, 333, 334, 335, 342, 343, 349, 354, 355, 356, 360, 361, 362, 365, 370, 371, 372, 373, 375, 377, 379, 380, 390, 391, 392, 393, 397, 399, 400, 401, 454, 459, 461, 463, 464, 468, 469, 470, 472, 475, 482, 483, 486, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 502, 503, 514, 516, 517, 519, 521, 522, 523, 534], "axis1": [97, 102, 344, 376, 378, 494, 501], "axis2": [97, 102, 344, 376, 378, 494, 501], "axisa": 86, "axisb": 86, "axisc": 86, "axiserror": [33, 483], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 64, 72, 73, 74, 80, 86, 89, 101, 102, 104, 105, 107, 108, 111, 153, 154, 164, 165, 170, 176, 178, 182, 192, 196, 197, 200, 201, 208, 209, 210, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 236, 238, 243, 244, 245, 248, 251, 383, 385, 389, 395, 396, 406, 465, 472, 485, 490, 499, 500, 508, 520, 521, 523, 541], "b_ax": [222, 499], "b_i": [226, 521], "back": [102, 155, 349, 454, 463, 464, 469, 508], "backend": [2, 162, 408, 410, 411, 421, 426, 442], "backward": [10, 49, 102, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 163, 336, 463, 468, 469], "bad": 417, "baltimor": 214, "bandlimit": 480, "bartlett": 6, "base": [0, 4, 105, 107, 114, 117, 146, 161, 167, 168, 220, 230, 231, 232, 233, 234, 235, 240, 241, 243, 393, 395, 396, 400, 402, 521], "base_repr": 6, "basic": [67, 107, 534, 537], "batch": 227, "bc": [201, 218], "bcde": 108, "becaus": [10, 16, 21, 125, 131, 133, 517, 534], "becom": [10, 102, 167, 379], "been": [104, 401, 469, 496], "befor": [4, 22, 33, 73, 74, 87, 102, 106, 126, 127, 128, 144, 145, 224, 241, 245, 251, 266, 268, 360, 371, 390, 397, 459, 468, 469, 483, 491, 493, 500, 519, 520], "before_1": 390, "before_n": 390, "begin": [106, 108, 161, 228, 240, 390, 475], "behav": [229, 400], "behavior": [33, 102, 135, 225, 257, 341, 464, 483, 500], "behind": [102, 360], "being": [3, 105, 149, 150, 246, 252, 390], "belong": [99, 167], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 93, 96, 105, 131, 202, 212, 214, 225, 504, 505, 509, 517, 534], "best": 108, "beta": [6, 416], "between": [17, 23, 39, 67, 98, 106, 139, 154, 157, 163, 176, 178, 228, 240, 390, 422, 436, 485, 492, 503, 517], "beyond": [4, 468], "bia": 85, "big": 105, "bin": [99, 120, 122, 136, 167, 168, 443], "bin_edg": [167, 168], "binari": [58, 62, 64, 153, 154, 156, 157], "binary_repr": 6, "bincount": [6, 99, 167], "binomi": [6, 424], "bins_0": 168, "bins_1": 168, "bit": [58, 59, 60, 61, 62, 63, 64, 105, 139, 173, 177, 195, 236, 238, 239, 265, 267, 466, 478, 527, 537], "bitwis": [58, 62, 64], "bitwise_and": [6, 59, 61, 62, 64, 177, 236], "bitwise_invert": [61, 177], "bitwise_left_shift": 195, "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 64, 177, 238], "bitwise_right_shift": 466, "bitwise_xor": [6, 58, 59, 61, 62, 177, 239], "biufcmmosuv": 105, "blackman": 6, "block": [6, 73, 74, 104, 138, 170, 192, 472, 490, 516, 523], "bmat": 6, "bool": [9, 16, 17, 20, 21, 31, 32, 33, 36, 37, 38, 41, 44, 49, 56, 67, 80, 84, 87, 92, 99, 102, 105, 108, 111, 138, 152, 161, 164, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 210, 212, 214, 216, 220, 227, 228, 240, 241, 245, 247, 248, 249, 251, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 336, 384, 385, 397, 459, 463, 475, 478, 483, 491, 493, 495, 514, 518, 519, 534], "bool_": 9, "boolean": [58, 59, 61, 62, 64, 80, 87, 92, 105, 117, 146, 152, 175, 177, 178, 181, 183, 184, 185, 186, 187, 191, 236, 238, 241, 242, 247, 248, 263, 265, 266, 268, 384, 393, 459, 491, 495, 519], "boolean_sequ": 191, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 71, 79, 86, 100, 101, 111, 127, 134, 146, 148, 149, 150, 151, 160, 164, 165, 166, 171, 176, 178, 192, 193, 194, 195, 196, 197, 209, 214, 222, 234, 235, 236, 238, 239, 243, 246, 252, 253, 256, 267, 383, 385, 395, 396, 460, 463, 466, 492, 499, 501, 506, 508, 510, 512, 520, 521, 524], "bound": [400, 401, 455, 474, 495, 496], "boundari": [163, 400, 455], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 534, "broadcast": [15, 16, 21, 31, 32, 38, 56, 65, 66, 71, 80, 84, 100, 107, 117, 146, 149, 150, 171, 185, 186, 209, 210, 214, 216, 227, 239, 241, 243, 245, 246, 247, 248, 251, 252, 256, 258, 259, 263, 265, 266, 267, 268, 395, 396, 397, 400, 401, 459, 461, 491, 492, 493, 496, 500, 512, 519, 521, 524], "broadcast_arrai": [6, 66], "broadcast_shap": 6, "broadcast_to": [6, 65, 500], "brought": 10, "buffer": [44, 88, 89, 102, 152, 153, 154, 156, 157, 229, 245, 251, 260, 261], "buffer_lik": 153, "buffererror": 152, "build": 537, "build_loc": 4, "built": 105, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 102, 105, 107, 153, 154, 229, 336, 352, 357], "byte_bound": 6, "byteord": 105, "byteswap": 6, "bz2": 229, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 86, 90, 91, 100, 101, 102, 105, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 158, 159, 160, 162, 164, 165, 166, 171, 174, 176, 177, 181, 182, 183, 184, 192, 193, 194, 195, 196, 197, 201, 208, 213, 214, 218, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 252, 253, 256, 336, 341, 349, 363, 366, 382, 383, 384, 385, 387, 388, 394, 395, 396, 398, 403, 404, 454, 455, 456, 458, 460, 462, 463, 464, 466, 467, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 499, 500, 512, 513, 514, 515, 521, 524, 525, 526, 541], "c_contigu": [43, 45, 102, 341, 462], "ca": 77, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 86, 87, 89, 98, 100, 106, 107, 111, 113, 114, 116, 120, 129, 146, 147, 148, 151, 163, 168, 171, 203, 204, 205, 206, 208, 214, 216, 232, 234, 235, 241, 243, 247, 248, 253, 256, 263, 266, 268, 385, 390, 395, 396, 397, 459, 460, 491, 492, 512, 519, 520, 527, 541], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 105, 126, 127, 128, 131, 134, 155, 203, 205, 213, 221, 242, 248, 276, 384, 489, 495, 500, 503, 541], "callabl": [155, 242], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 78, 79, 86, 93, 94, 96, 97, 100, 101, 102, 105, 107, 108, 109, 110, 111, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 170, 171, 172, 175, 176, 177, 178, 180, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 207, 208, 211, 212, 214, 216, 222, 224, 225, 228, 229, 234, 235, 236, 238, 239, 240, 242, 243, 246, 250, 252, 253, 256, 265, 267, 336, 341, 369, 371, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 401, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 454, 455, 460, 462, 463, 466, 483, 485, 492, 495, 496, 499, 501, 503, 504, 506, 510, 511, 512, 514, 518, 520, 524, 525, 526, 534, 541], "can_cast": [6, 537], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 73, 74, 258, 259, 463, 486, 489, 490], "capabl": [23, 36, 40, 41, 43, 45, 56, 119, 161, 228, 240, 243, 521], "cardin": 480, "cardinali": 480, "care": [23, 203], "cartesian": 249, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 78, 86, 88, 89, 93, 96, 98, 102, 107, 108, 109, 110, 118, 122, 125, 130, 134, 136, 153, 154, 155, 156, 158, 159, 161, 163, 172, 203, 217, 220, 222, 228, 229, 235, 240, 250, 260, 261, 265, 267, 351, 386, 387, 388, 397, 454, 463, 464, 493, 499, 504, 517, 518, 525, 526, 534], "cast": [16, 21, 49, 67, 73, 74, 80, 87, 88, 89, 102, 107, 146, 170, 203, 241, 243, 247, 248, 257, 260, 261, 263, 265, 266, 267, 268, 336, 397, 459, 472, 490, 491, 493, 519, 521, 523], "cat": [407, 424], "cauchi": 443, "cbrt": [6, 487], "cdef": 108, "cdot": [222, 226, 499, 521], "cdoubl": 9, "ceil": [6, 35, 140, 147, 148, 467, 471, 513], "center": [121, 122, 123, 124, 128, 129, 136], "central": [163, 425, 426], "certain": [105, 242], "ch": 10, "chain": [101, 102, 107, 108], "chang": [49, 78, 86, 102, 105, 107, 117, 260, 261, 336, 349, 374, 379, 382, 393, 394, 400, 401, 402, 454, 463, 464, 469, 517, 537], "char": 105, "charact": [105, 154], "check": [16, 21, 40, 41, 42, 67, 125, 180, 182, 188, 198, 216, 219, 534], "check_valid": 423, "chi": [409, 425], "chisquar": 6, "choic": [6, 70, 102, 120, 121, 123, 126, 127, 128, 132, 133, 135, 137, 204, 206, 337], "choicelist": 475, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 102, 108, 475, 524, 534], "chosen": [34, 167, 514, 524], "circ": 541, "circl": [218, 503], "clamp": [400, 401, 495, 496], "clariti": 138, "class": [3, 4, 102, 105, 141, 153, 154, 155, 157, 175, 229, 405, 433, 504, 537], "classic": 107, "clear": [105, 194, 534], "clip": [6, 102, 400, 401, 455, 495, 496, 534], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 102, 107, 115, 174, 228, 336, 405, 433, 456, 457, 467, 471, 503], "closer": 513, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 83, 205, 479, 497, 503], "coars": [215, 389], "code": [44, 105, 190, 462], "codeplai": 4, "coeffici": [208, 219, 224], "coerc": [44, 153, 154, 155, 156, 157, 229], "coin": 407, "col": 175, "collaps": [102, 349, 514], "column": [6, 40, 41, 42, 43, 45, 48, 49, 72, 73, 74, 88, 89, 97, 102, 104, 118, 138, 144, 145, 163, 169, 170, 172, 203, 204, 208, 213, 217, 220, 336, 454, 455, 462, 472, 486, 490, 504, 506, 510, 515, 518, 523], "column_stack": [6, 73, 74, 104, 170, 472, 490, 523], "com": 4, "combin": [0, 105, 115, 123, 128, 133, 137, 163], "combinatori": 108, "come": 514, "comma": [105, 107], "command": 4, "common": [126, 127, 128, 160, 193, 222, 384, 499], "common_typ": 6, "compani": [407, 424], "compar": [17, 33, 37, 111, 149, 150, 168, 178, 215, 246, 252, 483], "compare_chararrai": 6, "comparison": [2, 111, 164, 165, 196, 197, 385, 527, 537], "compat": [3, 4, 10, 16, 21, 49, 56, 86, 97, 102, 200, 202, 209, 210, 215, 216, 225, 226, 227, 241, 243, 247, 248, 262, 263, 264, 266, 268, 336, 389, 459, 463, 491, 501, 519, 520, 521, 537], "compil": [4, 105, 162, 462], "complement": 517, "complementari": [148, 517], "complet": [3, 4, 108, 154, 155, 217, 469, 534], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 46, 47, 50, 51, 52, 67, 87, 101, 102, 105, 108, 112, 119, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 146, 149, 150, 174, 179, 180, 187, 188, 194, 203, 204, 205, 206, 209, 217, 218, 220, 226, 241, 243, 246, 252, 257, 266, 268, 339, 340, 398, 456, 457, 459, 484, 491, 514, 519, 520, 521, 534, 537], "complex128": [9, 56, 465], "complex64": [9, 56, 102, 146, 370], "compliant": 102, "complic": [107, 541], "compon": [10, 37, 86, 124, 129, 136, 139, 174, 212, 222, 257, 456, 499], "compos": 79, "composit": [89, 192, 493, 503], "compress": [6, 117, 475, 495, 534], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 64, 68, 75, 76, 82, 83, 87, 88, 89, 98, 99, 107, 113, 114, 115, 116, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 147, 163, 164, 165, 166, 167, 168, 174, 175, 177, 192, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 236, 237, 238, 239, 241, 243, 247, 248, 253, 260, 261, 262, 263, 264, 265, 266, 267, 268, 382, 389, 394, 398, 456, 458, 459, 460, 467, 471, 473, 477, 478, 479, 481, 487, 491, 493, 497, 498, 499, 503, 506, 510, 519, 521], "compute_uv": [199, 220, 221], "concat": 74, "concaten": [6, 72, 73, 104, 170, 472, 486, 490, 496, 516, 523], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526, 534], "cond": [6, 207], "condit": [34, 49, 101, 102, 117, 199, 207, 213, 336, 384, 393, 400, 402, 475, 524], "condlist": 475, "confus": 151, "conj": [6, 76, 102, 125, 174, 198, 203, 398], "conjug": [6, 10, 75, 101, 102, 131, 134, 174, 198, 203, 204, 205, 206, 209, 226, 243, 339, 398, 520, 521], "consecut": [98, 106, 163], "conserv": 249, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 108, 136, 161, 178, 181, 204, 206, 212, 228, 240, 243, 405, 433, 464, 485, 514, 521], "consist": [37, 38, 106, 120, 121, 123, 126, 127, 128, 132, 133, 135, 137, 154, 168, 222, 224, 228, 496, 499], "constant": [9, 105, 163, 390], "constant_valu": 390, "constraint": 56, "construct": [40, 41, 42, 70, 93, 96, 97, 102, 105, 118, 153, 154, 155, 156, 157, 172, 191, 194, 229, 250, 337, 386, 475, 480, 500, 501, 524, 527], "constructor": 534, "consum": [102, 357], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 79, 80, 82, 83, 86, 87, 97, 100, 102, 105, 111, 113, 114, 116, 121, 122, 123, 126, 131, 134, 136, 142, 146, 147, 148, 149, 150, 151, 152, 157, 162, 163, 164, 165, 167, 168, 171, 174, 175, 177, 195, 196, 197, 200, 202, 204, 217, 220, 222, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 246, 247, 252, 253, 256, 258, 259, 262, 263, 264, 266, 268, 366, 382, 384, 385, 392, 394, 395, 396, 398, 405, 456, 458, 459, 460, 466, 467, 471, 473, 477, 478, 479, 480, 481, 487, 488, 491, 492, 497, 498, 499, 502, 506, 507, 510, 511, 512, 513, 519, 534], "content": [43, 102, 248, 442], "context": 10, "contigu": [40, 41, 42, 43, 45, 101, 102, 107, 182, 213, 363, 454, 462, 463], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 405, 437, 480], "contourf": 249, "contract": [107, 108, 222, 499], "contrari": [200, 202, 209, 225, 226], "contrast": [107, 400], "contribut": [10, 56, 167, 168], "control": [4, 49, 67, 73, 74, 80, 102, 107, 170, 243, 336, 472, 490, 521, 523], "conveni": [102, 379, 405], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 101, 107, 108, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 176, 209, 222, 224, 243, 389, 499, 521], "convers": [49, 102, 107, 336, 527], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 78, 90, 91, 93, 96, 105, 107, 108, 115, 158, 159, 161, 180, 188, 228, 240, 403, 404, 455, 462, 515, 517, 518], "convolut": [10, 77, 81], "convolv": [6, 81], "coolei": 10, "coordin": [84, 155, 163, 175, 191, 249, 455, 515], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 80, 92, 93, 94, 96, 97, 102, 105, 109, 110, 117, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 248, 249, 250, 257, 276, 336, 349, 351, 360, 366, 369, 386, 387, 388, 391, 393, 394, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 454, 462, 463, 464, 474, 483, 489, 504, 505, 506, 509, 510, 518, 525, 526, 534], "copysign": [6, 382, 394], "copyto": [6, 102, 117, 341, 393], "core": [3, 105, 107, 521, 534], "corner": [121, 123, 127, 128, 390], "corrcoef": [6, 85], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 73, 74, 75, 76, 79, 82, 83, 90, 91, 100, 111, 113, 114, 116, 119, 125, 131, 133, 140, 146, 147, 148, 149, 150, 151, 160, 164, 165, 166, 171, 174, 177, 181, 183, 184, 193, 194, 195, 196, 197, 219, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 252, 253, 256, 382, 383, 385, 394, 395, 396, 398, 403, 404, 456, 458, 460, 462, 466, 467, 471, 473, 477, 478, 479, 480, 481, 485, 487, 488, 490, 492, 497, 498, 512, 513], "correctli": [20, 26, 28, 31, 32, 46, 50, 84, 210, 214, 227, 245, 251, 258, 259, 265, 267, 384, 397, 493], "correl": [6, 537], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 71, 73, 74, 78, 90, 91, 93, 94, 96, 97, 102, 103, 109, 110, 118, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 169, 172, 175, 191, 200, 203, 204, 222, 226, 228, 229, 240, 242, 243, 250, 336, 341, 345, 386, 387, 388, 392, 403, 404, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 468, 475, 476, 486, 491, 499, 502, 503, 504, 506, 510, 518, 519, 521, 522, 525, 526, 534], "correspondingli": [10, 486], "cosh": [6, 14, 25, 82, 481, 498], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 479, 481, 497, 498], "cost": [107, 108], "costli": 108, "could": [102, 125, 131, 133, 371], "count": [16, 21, 57, 84, 99, 105, 108, 143, 153, 154, 156, 157, 163, 167, 168, 384, 397, 407, 482, 493, 514, 527, 537], "count_nonzero": [6, 384], "counterclockwis": [144, 145, 470], "counterpart": [10, 125, 131, 133, 534], "cov": [6, 423], "covari": 85, "cover": [506, 510, 537], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 78, 81, 85, 93, 96, 109, 110, 112, 118, 122, 136, 153, 154, 155, 156, 158, 159, 161, 172, 228, 229, 240, 250, 254, 265, 386, 387, 388, 504, 518, 525, 526], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 95, 96, 97, 102, 105, 108, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 257, 336, 341, 386, 387, 388, 390, 401, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 501, 504, 506, 507, 510, 511, 518, 525, 526, 534, 537], "creation": [105, 108, 527, 534, 537, 541], "crop": [120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137], "cross": [6, 81, 191], "csingl": 9, "ct": 10, "ctype": 462, "cube": [68, 146, 487], "cubic": 108, "cuda": 4, "cumprod": [6, 102, 260, 534], "cumproduct": 6, "cumsum": [6, 98, 102, 261, 493, 503, 534], "cumul": [87, 88, 89, 98, 102, 260, 261, 342, 343, 493, 503], "cupi": [2, 527], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 79, 82, 83, 90, 91, 100, 102, 105, 108, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 154, 160, 166, 168, 171, 172, 177, 193, 194, 195, 231, 232, 233, 234, 235, 246, 252, 253, 254, 256, 369, 382, 383, 390, 394, 395, 396, 398, 403, 404, 458, 460, 462, 466, 467, 473, 477, 478, 479, 481, 485, 492, 497, 498, 512, 513], "curv": 503, "custom": 534, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 208, 521], "cutoff": 216, "cycl": [122, 136, 191, 464], "cyclic": 400, "cython": 4, "d": [0, 16, 21, 23, 56, 72, 73, 74, 88, 89, 93, 94, 95, 96, 97, 101, 102, 104, 105, 118, 122, 124, 129, 136, 138, 142, 144, 145, 157, 169, 170, 172, 176, 191, 201, 202, 204, 205, 209, 213, 214, 218, 222, 225, 243, 249, 260, 261, 267, 349, 384, 395, 396, 397, 400, 410, 454, 463, 472, 474, 476, 490, 493, 495, 499, 500, 501, 508, 514, 518, 521, 523, 534], "d0": [405, 432, 434], "d1": [405, 434], "d3": 94, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 93, 96, 99, 100, 101, 102, 105, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 125, 131, 133, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 184, 185, 186, 188, 193, 194, 195, 196, 197, 202, 208, 215, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 268, 336, 366, 379, 381, 382, 383, 385, 387, 388, 393, 394, 395, 396, 398, 400, 401, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 485, 487, 488, 489, 490, 491, 492, 496, 497, 498, 501, 504, 512, 513, 519, 521, 523, 524, 525, 526, 527, 537], "datatyp": [105, 212], "date": 4, "datetim": 105, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [85, 102, 266, 268, 373, 380, 491, 519], "decai": 418, "decim": [35, 102, 139, 140, 367, 467, 471], "decomposit": [198, 207, 212, 216, 220, 221, 537], "decompress": 229, "decreas": [99, 503], "decreasingli": [10, 121, 123, 127, 128], "deem": 152, "def": [0, 390], "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 178, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 208, 210, 212, 213, 214, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 349, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 409, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 446, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 534], "default_rng": 6, "defg": 108, "defici": 212, "defin": [10, 29, 51, 86, 92, 105, 110, 120, 149, 150, 159, 166, 167, 168, 200, 202, 214, 226, 246, 252, 257, 388, 394, 457, 470, 521, 526, 534], "definit": [86, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 147, 198, 503], "deg": [20, 404], "deg2rad": [6, 403, 404, 517], "degre": [6, 20, 90, 266, 268, 403, 404, 447, 470, 491, 517, 519, 541], "del": 541, "delet": [6, 22], "delta": [10, 266, 268, 491, 517, 519], "demonstr": [0, 4, 105], "denot": [226, 521], "dens": [175, 191, 250], "densiti": 167, "depend": [4, 34, 97, 119, 125, 131, 133, 202, 204, 208, 214, 217, 219, 220, 228, 265, 267, 475, 524], "deprec": 6, "deprecate_with_doc": 6, "depth": [72, 73, 74, 103, 104, 170, 472, 486, 490, 523], "deriv": 163, "descend": 220, "descr": 105, "describ": [87, 105, 214, 225, 241, 459, 537], "descript": [87, 105, 126, 128, 167, 241, 459, 534], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 66, 109, 110, 118, 126, 127, 128, 158, 159, 161, 172, 228, 240, 387, 388, 454, 500, 504, 525, 526], "destin": [73, 74, 170, 255, 400, 401, 472, 490, 496, 523], "destruct": 541, "det": [6, 218], "detail": [35, 121, 123, 127, 128, 132, 133, 135, 137, 152, 210, 227, 471, 506, 507, 510, 511, 514, 534], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 68, 79, 82, 83, 90, 91, 100, 113, 114, 116, 148, 149, 150, 151, 154, 155, 157, 171, 195, 201, 202, 208, 217, 218, 225, 230, 231, 232, 233, 234, 235, 243, 246, 252, 253, 256, 383, 395, 396, 403, 404, 455, 458, 460, 466, 473, 475, 477, 479, 480, 481, 485, 487, 488, 492, 497, 498, 501, 512, 513, 515, 521], "devel": 4, "develop": [3, 4], "deviat": [102, 247, 263, 266, 268, 373, 405, 420, 427, 491, 519], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 78, 87, 93, 94, 96, 102, 107, 109, 110, 118, 119, 122, 136, 140, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 241, 242, 243, 247, 248, 250, 263, 266, 268, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 459, 489, 491, 504, 506, 510, 518, 519, 521, 525, 526], "df": [409, 425, 447, 448], "dfden": [413, 426], "dfnum": [413, 426], "dft": [10, 120, 125, 126, 130, 131, 134], "di": [94, 95], "diag": [6, 96, 97, 107, 118, 144, 145, 172, 203, 205, 220, 475, 501], "diag_indic": [6, 95, 138], "diag_indices_from": [6, 94, 138], "diagflat": [6, 93, 97, 501], "diagon": [6, 93, 94, 95, 96, 102, 107, 118, 138, 172, 198, 204, 205, 206, 225, 242, 378, 475, 501, 504, 505, 506, 507, 509, 510, 511, 534], "dice": 422, "dict": 390, "dictionari": 105, "diff": [6, 89, 106, 163, 167], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 78, 87, 89, 93, 96, 98, 102, 105, 106, 109, 110, 118, 121, 122, 126, 127, 129, 132, 135, 136, 139, 144, 145, 146, 153, 154, 155, 156, 158, 159, 161, 163, 172, 178, 206, 214, 225, 228, 229, 240, 241, 243, 250, 341, 386, 387, 388, 393, 395, 396, 401, 459, 464, 470, 492, 496, 504, 506, 510, 517, 518, 525, 526, 537], "differenti": 480, "digit": [6, 10, 139, 167], "dim": [17, 455], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 72, 73, 74, 80, 84, 85, 86, 94, 97, 98, 102, 103, 105, 115, 127, 128, 140, 144, 145, 163, 170, 175, 176, 191, 200, 202, 210, 212, 214, 217, 221, 222, 225, 226, 227, 241, 244, 245, 247, 248, 249, 250, 251, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 349, 353, 358, 369, 381, 384, 386, 397, 401, 405, 435, 437, 438, 440, 454, 455, 459, 463, 470, 476, 486, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 506, 507, 510, 511, 514, 515, 516, 519, 521, 522, 534, 537], "dimension": [2, 4, 33, 77, 81, 84, 87, 92, 94, 95, 96, 97, 98, 99, 102, 106, 107, 120, 121, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 138, 153, 154, 156, 163, 169, 175, 191, 200, 208, 215, 217, 223, 224, 241, 245, 249, 250, 251, 258, 259, 262, 264, 266, 268, 372, 381, 386, 389, 397, 459, 483, 491, 493, 495, 500, 503, 514, 519, 520, 522, 527], "direct": [10, 86, 98, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 144, 145, 163, 200, 383, 470], "directli": [105, 155, 175, 240, 384, 496], "directori": 162, "dirichlet": 6, "discard": 513, "discont": 517, "discontinu": 517, "discret": [3, 10, 77, 81, 89, 98, 106, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 163, 405, 480, 527], "disp": 6, "dispers": 450, "displac": [102, 374], "disregard": 464, "distanc": [163, 485], "distinct": [149, 150, 246, 252, 464], "distinguish": 105, "distribut": [3, 4, 240, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 537], "divid": [6, 39, 103, 104, 148, 151, 169, 253, 460, 486, 512, 522], "divis": [100, 148, 151, 253, 395, 396, 460, 486, 512, 513], "divisor": [160, 193, 266, 268, 491, 519], "divmod": [6, 534], "dlpack": 152, "dmlc": 152, "dn": [405, 432, 434], "do": [3, 4, 105, 242, 248, 407, 469, 503], "docstr": 534, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 534], "doe": [22, 23, 39, 67, 92, 102, 107, 117, 119, 134, 149, 150, 152, 217, 257, 260, 261, 351, 393, 464, 486, 495], "domain": [10, 125, 130], "done": [3, 49, 102, 107, 224, 336, 514, 517], "dot": [6, 102, 107, 108, 176, 198, 205, 207, 213, 216, 217, 219, 220, 222, 223, 224, 226, 243, 499, 520, 521], "doubl": [9, 222, 418, 499], "down": 145, "dp": [100, 201, 204, 218, 219, 395, 396, 492, 512], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 258, 259, 262, 264, 265, 336, 341, 386, 387, 388, 399, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "dpnp": [0, 2, 3, 4, 10, 527, 534, 537, 538, 541], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 78, 93, 94, 96, 109, 110, 118, 122, 136, 139, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 173, 175, 228, 229, 240, 242, 250, 269, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526, 527], "dpnp_iface_arraycr": [250, 386], "draw": [405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "drawn": [405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 431, 433, 436, 439, 445, 446, 447, 448, 449, 450, 451, 452, 453, 475], "drill": [407, 424], "driver": 2, "drop": [3, 105], "dsplit": [6, 73, 74, 104, 486], "dst": 80, "dstack": [6, 72, 73, 74, 170, 472, 486, 490, 523], "dt": [105, 503], "dt2": 105, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 100, 102, 107, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 177, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 213, 216, 220, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 342, 343, 355, 361, 370, 373, 375, 378, 380, 382, 383, 385, 387, 388, 394, 395, 396, 397, 398, 403, 404, 405, 427, 433, 449, 458, 459, 460, 462, 465, 466, 467, 471, 472, 473, 477, 478, 479, 480, 481, 484, 485, 487, 488, 490, 491, 492, 493, 495, 497, 498, 501, 504, 505, 509, 512, 513, 519, 521, 522, 523, 525, 526, 534], "due": [134, 541], "dump": 6, "dx": [163, 503], "dy": 163, "dz": 163, "e": [9, 10, 14, 25, 27, 47, 60, 87, 88, 97, 105, 109, 110, 115, 118, 121, 125, 126, 127, 128, 131, 133, 134, 146, 154, 158, 159, 163, 172, 195, 203, 218, 223, 227, 230, 248, 387, 388, 405, 457, 461, 464, 494, 504, 516, 525, 526], "ea": 108, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 79, 82, 83, 88, 89, 94, 97, 99, 100, 102, 103, 105, 108, 111, 113, 114, 116, 121, 123, 125, 127, 128, 131, 132, 133, 135, 137, 144, 145, 146, 147, 148, 151, 155, 163, 164, 165, 167, 168, 169, 174, 177, 181, 183, 184, 191, 195, 196, 197, 200, 203, 204, 205, 206, 208, 221, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 253, 255, 256, 257, 367, 382, 384, 385, 390, 394, 395, 396, 398, 401, 407, 424, 455, 456, 458, 460, 461, 464, 466, 467, 468, 471, 473, 477, 478, 479, 481, 486, 487, 488, 490, 492, 496, 497, 498, 500, 503, 506, 507, 510, 511, 512, 513, 514, 515, 521, 522, 534], "easier": 495, "easiest": [4, 390], "easili": [0, 168], "edg": [71, 99, 167, 168, 390], "edge_ord": 163, "ediff1d": [6, 98, 163], "effect": [108, 146, 149, 150, 246, 252, 395, 396, 517], "effici": [10, 120, 134, 154, 212, 216, 220], "efgh": 108, "eig": [6, 204, 205, 206], "eigenvalu": [203, 204, 205, 206, 537], "eigenvector": [203, 204, 205, 206], "eigh": [6, 203, 205, 206], "eight": 214, "eigval": [6, 203, 204, 206], "eigvalsh": [6, 203, 204, 205], "einstein": [101, 107, 108, 176, 222, 224, 243, 389, 499, 521], "einsum": [6, 101, 108, 176, 222, 224, 243, 389, 499, 521], "einsum_path": [6, 107], "either": [37, 38, 45, 56, 86, 87, 97, 105, 121, 123, 125, 127, 128, 131, 133, 135, 137, 138, 163, 176, 202, 204, 206, 214, 217, 241, 258, 259, 262, 264, 265, 267, 455, 459, 464, 474, 475, 496, 503], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 79, 80, 82, 83, 87, 88, 89, 92, 95, 97, 98, 99, 100, 102, 105, 106, 108, 111, 113, 114, 116, 117, 118, 119, 121, 123, 127, 128, 132, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 198, 200, 202, 205, 211, 222, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 251, 252, 253, 254, 256, 257, 260, 261, 262, 264, 265, 266, 267, 268, 331, 332, 339, 340, 342, 343, 345, 346, 349, 351, 352, 355, 357, 359, 360, 365, 366, 367, 368, 370, 373, 374, 377, 380, 382, 383, 384, 385, 393, 394, 395, 396, 397, 398, 400, 402, 454, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 505, 507, 509, 511, 512, 513, 514, 515, 517, 519, 521, 524, 534, 537, 541], "element_count": [102, 370, 482], "ellipsi": 107, "els": [0, 218, 274], "elsewher": [118, 172, 504, 524], "empti": [4, 6, 36, 102, 110, 121, 123, 127, 128, 132, 133, 135, 137, 154, 158, 159, 208, 346, 387, 388, 390, 393, 486, 525, 526, 534], "empty_lik": [6, 36, 109, 159, 388, 526], "enabl": [138, 212, 216, 220], "encount": [260, 261, 262, 264, 475], "end": [22, 23, 92, 97, 105, 106, 108, 126, 161, 228, 240, 390], "end_tim": 0, "end_valu": 390, "endian": 105, "endpoint": [23, 161, 228, 240, 503], "engin": 441, "enlarg": 464, "enough": 167, "ensur": 462, "entir": [56, 87, 125, 167, 168, 241, 247, 262, 263, 264, 266, 268, 390, 459, 491, 519], "entiti": 464, "entri": [39, 92, 102, 103, 105, 109, 117, 125, 131, 133, 138, 143, 144, 145, 169, 372, 486, 489, 521, 522], "enumer": 152, "env": 4, "environ": 4, "ep": [139, 212, 216, 383, 457, 485], "epsilon": [212, 457], "epsneg": 139, "equal": [6, 16, 17, 21, 33, 37, 38, 39, 56, 60, 63, 73, 74, 81, 85, 89, 102, 103, 118, 161, 163, 164, 165, 167, 168, 169, 170, 178, 180, 188, 190, 195, 196, 197, 202, 211, 216, 217, 224, 228, 240, 253, 360, 385, 390, 405, 415, 449, 460, 466, 467, 471, 472, 477, 480, 483, 486, 489, 490, 504, 506, 510, 516, 522, 523], "equal_nan": [17, 37, 178, 514], "equat": [208, 219, 223, 224, 537], "equiv": [49, 67, 73, 74, 80, 102, 107, 170, 211, 243, 336, 472, 490, 521, 523], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 78, 86, 87, 90, 91, 92, 100, 101, 102, 103, 104, 108, 115, 117, 142, 149, 150, 151, 169, 191, 221, 222, 223, 227, 241, 244, 253, 256, 276, 331, 332, 344, 358, 366, 369, 379, 381, 384, 389, 392, 394, 403, 404, 405, 433, 459, 460, 463, 470, 471, 476, 483, 492, 493, 495, 499, 502, 512, 514, 516, 521, 522, 534, 541], "error": [87, 103, 107, 112, 125, 130, 169, 203, 241, 455, 459, 486, 489, 522, 527, 534], "essenti": 4, "estim": [85, 168, 407, 424, 503], "et": 10, "etc": [10, 36, 41, 105, 121, 123, 127, 128, 132, 133, 135, 137, 424], "euclidean": 208, "euler_gamma": 9, "evalu": [16, 17, 21, 102, 107, 108, 111, 180, 182, 188, 222, 224, 249, 331, 332, 389, 475, 499], "even": [10, 102, 105, 122, 124, 125, 126, 129, 130, 131, 133, 134, 136, 180, 182, 188, 248, 353, 390, 467, 471], "evenli": [23, 161, 228, 240, 467, 503], "event": 235, "everi": [133, 401, 496], "everywher": [131, 480], "exact": [117, 213, 393], "exactli": [10, 48, 157, 405, 433, 475], "examin": 208, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 344, 346, 349, 350, 351, 353, 358, 360, 364, 366, 369, 370, 371, 374, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 534, 541], "exce": [235, 486], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 82, 83, 90, 91, 98, 99, 100, 101, 102, 109, 110, 111, 113, 114, 116, 118, 119, 132, 133, 140, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 169, 170, 171, 172, 177, 181, 183, 184, 193, 194, 195, 196, 197, 213, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 247, 251, 252, 253, 256, 262, 263, 264, 265, 266, 267, 268, 336, 351, 382, 383, 385, 387, 388, 394, 395, 396, 397, 398, 403, 404, 454, 458, 460, 461, 462, 466, 467, 473, 477, 478, 479, 481, 483, 485, 486, 487, 488, 491, 492, 493, 497, 498, 512, 513, 519, 521, 525, 526, 537], "exclud": [11, 12, 22, 228, 405, 449], "exclus": [405, 433], "execut": [3, 4, 40, 41, 42, 81, 85, 112, 155, 254, 265, 408, 410, 411, 421, 426, 442, 541], "executor": 0, "exist": [10, 72, 73, 74, 104, 105, 115, 152, 170, 472, 486, 490, 516, 523, 537], "exp": [6, 10, 114, 116, 120, 218, 232, 234, 241], "exp2": [6, 113, 116], "expand": [98, 115], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 100, 101, 105, 111, 113, 114, 116, 119, 131, 140, 146, 147, 148, 149, 150, 151, 160, 164, 165, 166, 171, 174, 177, 178, 181, 183, 184, 193, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 246, 247, 248, 251, 252, 253, 256, 260, 261, 263, 265, 266, 267, 268, 382, 383, 385, 394, 395, 396, 397, 398, 403, 404, 456, 458, 459, 460, 466, 467, 471, 473, 477, 478, 479, 480, 481, 485, 487, 488, 491, 492, 493, 497, 498, 512, 513, 519, 524], "explain": [123, 128, 133, 137, 534], "explan": 105, "explicit": 107, "explicitli": [97, 121, 123, 127, 128, 132, 133, 135, 137], "exploit": [10, 134], "explor": [108, 407, 424], "expm1": [6, 113, 114, 232], "expon": [10, 113, 114, 116, 146, 194, 211, 234, 235, 241, 395, 396, 431, 537], "exponenti": [6, 10, 108, 234, 235, 241, 418, 444], "expos": [153, 534], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 107, 108, 194, 229, 541], "extend": [10, 105, 192, 390, 534], "extens": [0, 1, 3, 4, 9, 162, 229, 527], "extra": [105, 131, 157], "extract": [6, 93, 96, 97, 107, 118, 142, 172, 175, 242, 393, 475, 495, 501], "extrapol": 464, "extrema": 537, "ey": [6, 75, 76, 84, 102, 127, 128, 149, 150, 172, 176, 192, 207, 211, 212, 223, 224, 225, 239, 246, 252, 476, 501], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 100, 102, 105, 107, 109, 110, 111, 113, 114, 116, 118, 119, 122, 134, 136, 140, 146, 147, 148, 149, 150, 151, 158, 159, 160, 163, 164, 165, 166, 171, 174, 177, 181, 182, 183, 184, 193, 194, 195, 196, 197, 211, 214, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 252, 253, 256, 336, 341, 349, 382, 383, 385, 387, 388, 394, 395, 396, 398, 403, 404, 426, 454, 455, 456, 458, 460, 462, 463, 466, 467, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 508, 512, 513, 515, 521, 524, 525, 526], "f0": 105, "f1": 105, "f2": 105, "f4": 67, "f8": [67, 105], "f_contigu": [43, 45, 182, 462], "f_k": 10, "fab": [6, 11, 12], "fact": 205, "factor": [10, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 198, 217], "fail": [102, 369, 407], "fallback": [203, 205, 408, 410, 411, 421, 426, 442], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 33, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 64, 65, 66, 67, 78, 84, 85, 87, 89, 92, 99, 102, 105, 107, 108, 110, 111, 117, 138, 152, 155, 159, 161, 164, 165, 167, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 196, 197, 198, 199, 210, 212, 214, 216, 220, 221, 227, 228, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 251, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 274, 331, 332, 333, 334, 336, 354, 355, 356, 361, 373, 375, 380, 384, 385, 388, 397, 399, 459, 462, 463, 475, 478, 483, 491, 493, 514, 518, 519, 524, 526], "famili": 10, "fanci": 495, "fashion": [235, 534], "fast": [10, 120, 121, 123, 127, 128, 133, 134, 137], "fastcopyandtranspos": 6, "faster": [10, 149, 150], "fastest": [102, 182, 349, 454, 463], "fb": [108, 508], "featur": 105, "fetch": 463, "few": 138, "fft": [6, 527, 537], "fft2": [6, 120, 123, 127], "fftfreq": [6, 10, 120, 124, 129, 136], "fftn": [6, 120, 121, 128, 134, 137], "fftshift": [6, 10, 121, 123, 128, 129], "fh": 154, "field": [105, 249], "field1": 105, "file": [153, 154, 156, 157, 162, 229], "filenam": [154, 229], "fill": [6, 22, 36, 102, 109, 110, 138, 158, 159, 167, 168, 249, 257, 341, 387, 388, 464, 504, 525, 526], "fill_diagon": 6, "fill_valu": [158, 159], "filt": 508, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 480, 504, 506, 510, 518, 525, 526], "final": [4, 10, 133, 134, 135, 137, 161, 240], "find": [34, 57, 99, 102, 119, 167, 212, 216, 220, 368, 383, 384, 461, 474, 483, 485, 514, 537], "find_common_typ": 6, "fine": 4, "finfo": [216, 383, 457, 485], "finfo_object": 139, "finit": [42, 181, 183, 184, 185, 186, 257, 485], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 62, 63, 64, 72, 73, 74, 79, 86, 87, 97, 100, 101, 102, 105, 108, 111, 114, 121, 123, 125, 127, 128, 143, 146, 148, 149, 150, 151, 160, 163, 164, 165, 167, 168, 169, 171, 176, 178, 182, 190, 192, 193, 195, 196, 197, 200, 202, 209, 213, 222, 223, 225, 226, 229, 234, 235, 236, 238, 239, 242, 243, 245, 246, 248, 249, 251, 252, 253, 256, 258, 259, 349, 385, 389, 390, 393, 395, 396, 397, 454, 460, 463, 466, 468, 470, 472, 474, 475, 483, 484, 488, 492, 493, 494, 496, 499, 501, 512, 514, 516, 520, 521, 522, 523], "fit": [208, 461], "fix": [6, 35, 69, 97, 105, 147, 400, 467, 471, 513], "flag": [43, 45, 102, 105, 182, 341, 462], "flanneri": 10, "flat": [31, 32, 102, 106, 141, 349, 351, 454, 455, 461, 515], "flatnonzero": [6, 384], "flatten": [6, 22, 31, 32, 33, 73, 74, 84, 88, 89, 92, 93, 96, 97, 102, 106, 138, 142, 167, 168, 227, 245, 248, 251, 258, 259, 260, 261, 265, 267, 348, 363, 371, 384, 389, 401, 454, 455, 461, 468, 483, 495, 496, 501, 514, 515, 520], "flexibl": [101, 105, 154, 213], "flip": [6, 59, 61, 97, 138, 144, 145, 177, 202, 407, 470], "fliplr": [6, 97, 138, 143, 145, 202, 470], "flipud": [6, 97, 138, 143, 144, 202, 470], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 67, 79, 87, 89, 105, 109, 110, 114, 118, 119, 122, 136, 139, 140, 146, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 172, 174, 194, 208, 211, 212, 214, 216, 227, 228, 229, 234, 235, 240, 241, 245, 247, 248, 251, 257, 263, 266, 268, 383, 387, 388, 395, 396, 405, 409, 434, 435, 437, 438, 440, 443, 444, 446, 449, 456, 457, 458, 459, 473, 480, 491, 504, 517, 519, 525, 526, 534, 537], "float16": [9, 146], "float32": [0, 9, 42, 44, 49, 67, 88, 102, 105, 107, 146, 336, 383, 405, 427, 432, 434, 435, 437, 438, 440, 446, 449, 462, 465], "float64": [0, 9, 44, 49, 56, 67, 89, 102, 105, 107, 336, 405, 406, 412, 413, 414, 416, 418, 419, 420, 427, 428, 431, 432, 434, 435, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 465, 480, 485, 522], "float_pow": [6, 395, 396], "floor": [6, 35, 69, 140, 148, 253, 460, 467, 471, 513], "floor_divid": [6, 253, 460], "flop": 108, "flush": 154, "fmax": [6, 150, 245, 246, 252, 262, 395, 396], "fmin": [6, 149, 246, 251, 252, 264, 395, 396], "fmod": [6, 253, 395, 396, 460], "fn": 155, "fname": 229, "follow": [4, 10, 56, 105, 115, 131, 139, 152, 173, 204, 206, 214, 216, 222, 390, 462, 499, 534, 537], "forc": [105, 107], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 72, 78, 93, 96, 102, 104, 107, 108, 127, 128, 131, 158, 159, 161, 180, 188, 191, 202, 210, 221, 225, 228, 240, 244, 379, 390, 464, 472, 518, 523], "format": [105, 152, 154, 157, 537], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 401, 496], "forth": [222, 499], "fortran": [45, 49, 102, 182, 336, 349, 454, 455, 462, 463, 515], "forward": [10, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 163], "found": [4, 474, 534], "four": [405, 434], "fourier": [10, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 527], "fourth": 121, "frac": [10, 503], "fraction": [254, 513], "free": [102, 366], "freedom": [266, 268, 447, 491, 519], "freq": [122, 124, 129, 136], "freq_spectrum": 125, "frequenc": [10, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136], "freshli": [185, 186, 521], "frexp": [6, 194], "fro": [199, 210, 214, 227], "frobeniu": [199, 214], "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 67, 70, 73, 74, 78, 80, 87, 90, 91, 93, 94, 96, 97, 102, 104, 105, 107, 109, 110, 114, 117, 118, 122, 126, 135, 136, 137, 143, 146, 152, 153, 154, 155, 156, 157, 158, 159, 163, 167, 170, 172, 175, 191, 194, 203, 205, 206, 212, 213, 225, 229, 241, 242, 249, 250, 337, 341, 372, 377, 386, 387, 388, 390, 393, 397, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 459, 463, 464, 465, 470, 472, 474, 475, 488, 489, 490, 493, 495, 496, 501, 504, 506, 508, 510, 511, 514, 516, 517, 518, 523, 524, 525, 526, 537], "from_": 67, "from_dlpack": 6, "frombuff": [6, 154, 156, 157, 229], "fromfil": [6, 153, 156, 157], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 153, 154, 157], "frompyfunc": 6, "fromregex": [6, 229], "fromstr": [6, 153, 154, 156, 229], "front": 508, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "full_lik": [6, 36, 110, 158, 388, 526], "full_matric": 220, "fulli": [105, 248], "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 78, 81, 85, 87, 90, 91, 97, 100, 102, 107, 109, 110, 112, 116, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 133, 134, 137, 138, 146, 151, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 167, 168, 172, 182, 191, 200, 202, 203, 205, 209, 210, 213, 214, 215, 221, 222, 225, 226, 227, 229, 232, 234, 235, 241, 242, 244, 249, 253, 254, 265, 331, 332, 341, 344, 351, 366, 369, 379, 387, 388, 390, 395, 396, 401, 403, 404, 405, 408, 410, 411, 421, 426, 442, 454, 459, 460, 462, 464, 471, 472, 477, 480, 491, 495, 496, 499, 500, 506, 507, 510, 511, 512, 516, 519, 523, 524, 525, 526, 527, 534, 537], "fundament": [10, 105], "further": [92, 506, 510], "futur": [105, 168], "fweight": 85, "g": [4, 10, 105, 109, 110, 118, 158, 159, 172, 214, 387, 388, 405, 504, 525, 526, 541], "gamma": [6, 445], "gauss": 10, "gaussian": [405, 427, 451], "gc": 108, "gc623f241d09": 6, "gcd": [6, 193], "gen": 107, "gender": 105, "gener": [4, 10, 33, 56, 105, 126, 131, 134, 137, 161, 176, 203, 204, 205, 206, 210, 216, 217, 227, 229, 240, 405, 407, 410, 441, 454, 485, 503, 506, 510, 518, 534, 537], "genfromtxt": [6, 229], "geometr": [6, 161, 228], "geomspac": [6, 228, 240], "get": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 95, 96, 102, 109, 110, 118, 122, 125, 131, 133, 136, 146, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 221, 226, 228, 229, 240, 242, 250, 341, 369, 386, 387, 388, 390, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 496, 504, 506, 507, 510, 511, 518, 521, 525, 526, 534], "get_arrai": 102, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 405], "get_sycl_devic": 405, "get_sycl_queu": 405, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 105], "getter": [102, 369], "gid": 168, "github": 152, "give": [10, 96, 102, 146, 168, 379, 463, 476, 482, 514], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 72, 78, 84, 85, 88, 89, 98, 101, 102, 104, 105, 106, 108, 109, 110, 117, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 149, 150, 158, 159, 161, 163, 167, 168, 178, 207, 214, 222, 226, 228, 240, 242, 245, 246, 248, 249, 251, 252, 260, 261, 262, 264, 265, 266, 267, 268, 333, 334, 336, 342, 343, 356, 361, 362, 367, 370, 373, 375, 380, 384, 387, 388, 393, 397, 399, 400, 405, 410, 432, 449, 459, 461, 462, 463, 467, 468, 469, 470, 472, 474, 475, 482, 486, 491, 493, 495, 499, 500, 503, 504, 514, 516, 519, 521, 523, 525, 526, 534], "global": 0, "golub": 214, "good": 417, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 78, 93, 96, 109, 110, 118, 122, 136, 153, 154, 155, 156, 158, 159, 161, 172, 228, 229, 240, 250, 386, 387, 388, 504, 518, 525, 526], "grade": 105, "gradient": [6, 98, 106, 208], "graphic": 4, "great": 10, "greater": [6, 60, 63, 102, 103, 111, 148, 165, 195, 196, 197, 212, 217, 360, 385, 390, 466, 475, 477, 489, 517], "greater_equ": [6, 111, 164, 196, 197, 385], "greatest": [148, 160, 193], "greedi": [107, 108], "grid": [40, 41, 42, 155, 175, 215, 249, 250, 386, 389], "group": [34, 384], "guarante": [105, 462, 463], "guid": [2, 3], "gumbel": 6, "gz": 229, "h": [162, 198, 214, 217, 249], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 87, 88, 89, 99, 105, 111, 115, 125, 130, 131, 155, 163, 164, 165, 170, 174, 179, 180, 187, 188, 196, 197, 205, 218, 220, 225, 241, 247, 248, 253, 260, 261, 263, 265, 266, 267, 268, 385, 390, 397, 456, 457, 458, 459, 460, 461, 469, 473, 475, 489, 490, 491, 493, 494, 495, 500, 501, 515, 519, 534], "had": [401, 496], "hadamard": 108, "half": [14, 25, 121, 123, 124, 125, 127, 128, 228, 405, 435, 437, 438, 440, 449, 494], "ham": 6, "han": 6, "hand": [86, 200, 224], "handl": [23, 105, 119, 229, 384, 401, 455, 495, 496, 537], "happen": [49, 56, 102, 336, 407, 503], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 105, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 74, 75, 76, 79, 82, 83, 86, 87, 88, 89, 90, 91, 100, 101, 104, 105, 111, 113, 114, 116, 119, 127, 128, 137, 139, 140, 146, 147, 148, 149, 150, 151, 160, 164, 165, 166, 170, 171, 174, 177, 178, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 202, 208, 210, 213, 215, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 246, 247, 248, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 382, 383, 385, 393, 394, 395, 396, 397, 398, 403, 404, 424, 456, 458, 459, 460, 461, 462, 463, 466, 467, 471, 472, 473, 477, 478, 479, 480, 481, 485, 487, 488, 490, 491, 492, 493, 497, 498, 500, 512, 513, 517, 519, 521, 523, 534], "hd": 108, "header": 162, "heavisid": 6, "hello": 105, "help": 541, "helper": 537, "henc": [115, 163], "here": [6, 33, 105, 107, 125, 130, 131, 483, 506, 510], "hermit": [204, 206], "hermitian": [125, 130, 131, 133, 134, 198, 203, 204, 205, 206, 212, 216, 220, 221, 537], "hfft": [6, 10, 130], "hierarchi": 190, "high": [131, 405, 433, 436, 449], "higher": [102, 107, 169, 353, 520, 522], "highest": 120, "highli": 154, "hist": [167, 443], "hist_0": 168, "hist_1": 168, "histogram": [6, 99, 168, 474, 537], "histogram2d": 6, "histogram_bin_edg": [6, 167], "histogramdd": [6, 167], "hold": [71, 88, 89, 167, 214, 248, 260, 261, 265, 267, 454, 501], "homogen": 105, "hopkin": 214, "horizont": [72, 73, 74, 97, 104, 138, 143, 169, 170, 202, 470, 472, 486, 490, 523], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 504, 506, 510, 518, 525, 526], "household": 217, "how": [0, 4, 105, 131, 134, 163, 400, 401, 455, 495, 496, 506, 510], "howev": [102, 371, 495], "hsplit": [6, 73, 74, 486], "hstack": [6, 72, 73, 74, 104, 472, 486, 490, 523], "http": [4, 152], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 479, 481, 497, 498, 537], "hypergeometr": 6, "hypot": [6, 459], "hypotenus": [171, 459], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 336, 341, 351, 353, 360, 366, 369, 371, 374, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 534, 541], "i0": 6, "i1": [102, 105, 374], "i2": [102, 105, 374], "i3": [102, 374], "i4": [67, 105], "i7": 107, "i8": [67, 105], "iaxi": 390, "iaxis_pad_width": 390, "icpx": 4, "icx": 4, "id": [16, 21], "ideal": 480, "ident": [3, 6, 16, 21, 42, 87, 105, 118, 129, 138, 219, 226, 444, 521], "identifi": 105, "ieee": 139, "ifft": [6, 120, 127, 128, 130, 131, 136], "ifft2": [6, 121, 126, 128], "ifftn": [6, 123, 126, 127], "ifftshift": [6, 10, 124, 128], "ignor": [31, 32, 86, 105, 149, 150, 157, 167, 168, 245, 246, 247, 251, 252, 258, 259, 262, 263, 264, 266, 268, 491, 519], "ihfft": [6, 125], "ii": [107, 428], "iinfo": 422, "iinfo_object": 173, "ij": [107, 108, 249], "ijk": 107, "il": 108, "il1": 506, "il2": 506, "illustr": 205, "ilm": 107, "im": [215, 389], "imag": [6, 10, 20, 37, 102, 456, 457, 464, 534], "imaginari": [20, 37, 102, 131, 149, 150, 174, 179, 180, 187, 188, 203, 204, 206, 211, 246, 252, 257, 350, 456, 457, 484, 514], "implement": [3, 4, 6, 44, 120, 152], "impli": [105, 454], "implicit": 107, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 344, 346, 349, 350, 351, 353, 358, 360, 364, 369, 370, 371, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 430, 439, 443, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "improv": 107, "in1d": 6, "in_array1": 112, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 78, 87, 93, 96, 99, 107, 108, 119, 158, 159, 161, 162, 167, 168, 180, 188, 216, 228, 240, 241, 247, 248, 262, 263, 264, 266, 268, 405, 449, 459, 480, 491, 518, 519], "include_initi": 87, "inclus": [405, 433, 436, 475], "increas": [99, 105, 115, 126, 131, 167, 390, 464, 518], "ind": [33, 99, 223, 400, 401, 506, 507, 510, 511], "independ": 200, "index": [4, 22, 31, 32, 33, 34, 70, 102, 105, 108, 118, 121, 127, 135, 142, 152, 175, 182, 191, 249, 258, 259, 337, 349, 351, 374, 384, 400, 401, 454, 455, 463, 464, 474, 475, 486, 495, 496, 506, 510, 514, 515, 524, 527, 537], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 87, 92, 94, 95, 99, 102, 103, 105, 107, 108, 117, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 142, 152, 155, 167, 169, 223, 224, 242, 243, 250, 258, 259, 333, 334, 335, 359, 362, 368, 377, 384, 392, 400, 401, 455, 474, 477, 478, 483, 486, 495, 496, 502, 506, 507, 510, 511, 514, 515, 521, 522, 524], "indices_or_sect": [39, 103, 169, 486, 522], "indirect": [33, 483], "individu": 415, "inequ": 385, "inexact": [146, 257, 265, 267], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 79, 100, 178, 181, 183, 184, 185, 186, 199, 210, 214, 227, 230, 231, 233, 246, 252, 257, 258, 259, 262, 264, 267, 398, 485, 487, 512], "infer": [42, 87, 241, 459, 463], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 148, 181, 183, 184, 185, 186, 253, 257, 262, 264, 267, 460, 513, 537], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 199, 214, 480], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 102, 105, 125, 131, 133, 139, 347, 462, 534, 537], "initi": [18, 19, 87, 102, 109, 157, 245, 251, 262, 264, 265, 267, 354, 356, 361, 375, 397, 405, 493], "inner": [6, 86, 107, 108, 209, 213, 243, 389], "innermost": [202, 210, 225, 244], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 349, 358, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 427, 433, 449, 454, 456, 457, 458, 459, 460, 461, 462, 466, 467, 468, 469, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 512, 513, 514, 517, 518, 519, 520, 521, 522, 525, 526], "insert": [6, 22, 31, 32, 92, 97, 99, 102, 107, 115, 161, 167, 228, 240, 258, 259, 262, 264, 368, 401, 463, 474, 475, 537], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 125, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 172, 175, 228, 229, 240, 242, 243, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 521, 525, 526], "instead": [34, 49, 97, 101, 102, 107, 115, 147, 161, 167, 168, 175, 182, 213, 228, 235, 240, 245, 251, 336, 384, 397, 455, 464, 493, 534], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 44, 56, 66, 73, 74, 84, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 102, 103, 105, 109, 110, 111, 115, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 168, 169, 172, 173, 175, 200, 202, 208, 211, 214, 222, 223, 224, 225, 226, 227, 228, 240, 241, 242, 245, 247, 248, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 351, 358, 370, 379, 381, 387, 388, 390, 391, 392, 397, 400, 401, 405, 433, 436, 455, 459, 461, 463, 464, 468, 469, 470, 471, 482, 483, 486, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 514, 515, 516, 517, 518, 519, 521, 522, 525, 526, 534], "int16": 105, "int32": [0, 9, 44, 67, 105, 109, 110, 118, 153, 156, 158, 159, 172, 229, 265, 267, 387, 388, 405, 407, 415, 417, 422, 424, 430, 433, 449, 465, 493, 504, 525, 526], "int64": [0, 9, 67, 105, 265, 267, 465], "int8": [105, 397], "int_": 9, "int_0": 503, "int_t": 503, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 87, 88, 89, 99, 102, 103, 105, 140, 143, 146, 147, 148, 152, 160, 167, 169, 173, 177, 191, 193, 194, 195, 211, 214, 222, 223, 225, 227, 241, 245, 247, 251, 253, 260, 261, 262, 263, 264, 265, 266, 267, 268, 371, 379, 395, 396, 397, 400, 405, 433, 436, 441, 455, 459, 460, 461, 463, 466, 467, 468, 470, 471, 474, 475, 476, 486, 488, 491, 493, 495, 499, 501, 513, 514, 515, 517, 519, 522, 534], "integer_lik": [222, 499], "integr": [3, 4, 56, 87, 89, 146, 167, 241, 247, 248, 254, 263, 266, 268, 395, 396, 459, 491, 493, 503, 519], "intel": [3, 107], "intend": [102, 379], "intent": 146, "interchang": [102, 255, 376, 494], "interfac": [0, 153], "interior": 163, "intermedi": [88, 107, 108], "intern": [33, 405, 483], "interp": 6, "interpol": [131, 464, 480], "interpret": [2, 40, 41, 42, 48, 66, 78, 102, 105, 125, 131, 133, 153, 191, 242, 351, 384, 400, 534], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 99, 115, 161, 228, 240, 405, 433, 435, 437, 438, 440, 448, 449, 494], "intp": [265, 267], "intrins": 534, "introduc": 468, "introduct": 10, "introselect": [102, 360, 391], "inv": [6, 199, 216], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 194, 207, 216, 223, 224, 232, 451, 479, 481, 497, 498, 514], "invert": [6, 59, 61, 207, 216, 223], "invok": 534, "involv": 223, "io": [152, 229], "irfft": [6, 122, 125, 130, 132, 133, 134, 136], "irfft2": [6, 131, 133, 135], "irfftn": [6, 131, 132, 137], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 105, "isbuiltin": 105, "isclos": [6, 17], "iscomplex": [6, 180, 187], "iscomplexobj": [6, 179, 188], "isfinit": [6, 183, 184, 185, 186, 257, 262, 264, 267], "isfortran": 6, "isin": 6, "isinf": [6, 181, 184, 185, 186, 257], "isn": 105, "isnan": [6, 181, 183, 185, 186, 257, 260, 261, 262, 264, 265, 267], "isnat": [6, 184], "isneginf": [6, 181, 183, 184, 186, 257], "isposinf": [6, 181, 183, 184, 185, 257], "isreal": [6, 179, 188], "isrealobj": [6, 180, 187], "isscalar": 6, "issctyp": 6, "issu": 127, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 102, 153, 154, 156, 514, 527], "item_dtyp": 105, "item_hasobject": 105, "item_is_point": 105, "items": [102, 105], "itemset": 6, "iter": [6, 40, 41, 42, 102, 108, 141, 153, 154, 156, 157, 348, 349, 401, 454, 464, 496, 516, 537], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 93, 102, 125, 131, 133, 139, 167, 168, 172, 203, 204, 205, 206, 213, 216, 224, 247, 263, 266, 268, 379, 392, 442, 454, 459, 463, 483, 491, 502, 503, 504, 519, 534], "itself": [49, 102, 105, 194, 257, 336, 534], "iu": 242, "iu1": [242, 510], "iu2": 510, "ix_": 6, "ixgrid": 191, "j": [36, 75, 76, 102, 107, 121, 123, 125, 126, 127, 128, 130, 131, 134, 135, 137, 146, 155, 174, 175, 192, 198, 203, 204, 214, 215, 222, 225, 233, 243, 257, 379, 389, 398, 401, 456, 484, 488, 496, 499], "j1": 192, "jame": 10, "ji": 107, "jil": 107, "jk": [107, 108], "jl": 108, "john": [10, 214], "join": [72, 73, 74, 104, 170, 472, 486, 490, 516, 523, 537], "jump": [90, 403], "just": [72, 97, 105, 121, 127, 132, 134, 135], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 93, 96, 100, 102, 107, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 159, 160, 164, 165, 166, 171, 174, 177, 181, 183, 184, 192, 193, 194, 195, 196, 197, 208, 217, 219, 220, 221, 222, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 246, 252, 253, 256, 276, 336, 341, 382, 383, 385, 388, 394, 395, 396, 398, 403, 404, 454, 456, 458, 460, 466, 467, 470, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 499, 504, 505, 506, 507, 509, 510, 511, 512, 513, 517, 521, 524, 526, 541], "kaiser": 6, "kappa": 450, "keep": [48, 49, 102, 336, 514], "keepdim": [16, 18, 19, 21, 31, 32, 56, 84, 102, 210, 214, 227, 241, 245, 247, 248, 251, 258, 259, 262, 263, 264, 265, 266, 267, 268, 331, 332, 333, 334, 354, 355, 356, 361, 373, 375, 380, 397, 399, 401, 459, 491, 493, 496, 519], "kei": [3, 33, 102, 105, 141, 281, 326, 483], "kernel": 480, "key2": 105, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 78, 79, 82, 83, 86, 90, 91, 93, 94, 96, 100, 102, 109, 110, 113, 114, 116, 118, 119, 122, 136, 140, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 171, 172, 175, 177, 193, 194, 195, 200, 202, 209, 215, 225, 226, 229, 231, 232, 233, 234, 235, 242, 243, 246, 250, 252, 253, 254, 256, 257, 341, 382, 383, 386, 387, 388, 390, 394, 395, 396, 398, 403, 404, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 458, 460, 463, 466, 467, 473, 477, 478, 479, 481, 485, 492, 497, 498, 504, 506, 510, 512, 513, 518, 521, 524, 525, 526, 534], "ki": 107, "kind": [33, 49, 67, 73, 74, 80, 87, 102, 105, 107, 139, 170, 213, 241, 243, 335, 336, 360, 371, 391, 459, 463, 472, 483, 490, 521, 523, 537], "kl": [10, 107, 108], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 154, 443], "kron": 6, "kroneck": 192, "kth": [102, 360, 391], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 79, 82, 83, 90, 91, 100, 102, 111, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 155, 160, 164, 165, 166, 171, 177, 181, 183, 184, 193, 194, 195, 196, 197, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 252, 253, 254, 256, 307, 338, 382, 383, 385, 390, 394, 395, 396, 398, 403, 404, 458, 460, 466, 467, 473, 477, 478, 479, 481, 485, 487, 488, 492, 497, 498, 512, 513], "l": [10, 39, 105, 198, 204, 206, 225], "la": [203, 205, 206], "label": 107, "laid": 45, "lam": 430, "lambda": 155, "lanczo": 480, "lapack": [203, 205], "laplac": 6, "laptop": 4, "larg": [10, 90, 105, 167, 216, 257, 403, 517, 541], "larger": [107, 120, 121, 123, 126, 127, 128, 130, 132, 133, 134, 135, 137, 139, 464, 501, 517], "largest": [10, 108, 134, 139, 147, 173, 208, 214, 253, 257, 460], "largest_singular_valu": 216, "last": [16, 21, 22, 33, 86, 97, 98, 102, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 143, 161, 163, 176, 182, 202, 213, 221, 222, 225, 228, 240, 243, 349, 353, 390, 397, 454, 463, 468, 474, 483, 489, 493, 499, 516, 517, 521], "later": [390, 541], "latest": [4, 152], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 149, 150, 246, 252, 401, 496], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 100, 102, 107, 109, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 158, 159, 160, 164, 165, 166, 171, 174, 177, 181, 183, 184, 193, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 252, 253, 256, 341, 347, 382, 383, 385, 387, 388, 394, 395, 396, 398, 403, 404, 454, 456, 458, 460, 462, 463, 466, 467, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 512, 513, 521, 524, 525, 526, 527], "lcm": [6, 160], "ldexp": 6, "ldot": 10, "lead": [126, 127, 128, 260, 261, 508], "learn": [3, 4, 235], "least": [53, 54, 55, 56, 95, 104, 105, 108, 115, 138, 144, 149, 150, 154, 180, 208, 217, 246, 252, 472, 523], "left": [10, 28, 31, 32, 35, 50, 60, 63, 84, 97, 99, 102, 144, 145, 195, 205, 210, 214, 227, 245, 251, 258, 259, 265, 267, 368, 397, 448, 466, 471, 474, 493, 503, 518], "left_shift": [6, 60, 63, 466], "leg": [171, 459], "legaci": 441, "len": [92, 102, 105, 123, 124, 125, 128, 130, 131, 132, 133, 137, 175, 208, 245, 249, 250, 251, 299, 476, 518], "length": [23, 39, 56, 88, 89, 98, 111, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 157, 161, 163, 167, 170, 203, 220, 221, 222, 240, 245, 248, 249, 251, 260, 261, 390, 401, 408, 463, 465, 472, 474, 475, 476, 489, 496, 499, 500, 523], "less": [6, 88, 89, 102, 111, 164, 165, 167, 168, 197, 208, 216, 225, 260, 261, 265, 267, 353, 385, 397, 475, 477, 493, 501], "less_equ": [6, 111, 164, 165, 196, 385], "let": [226, 407, 463, 521], "level": [527, 534], "level_zero": [23, 36, 40, 41, 42, 43, 45, 78, 93, 96, 109, 110, 118, 122, 136, 153, 154, 155, 156, 158, 159, 161, 172, 228, 229, 240, 250, 386, 387, 388, 504, 518, 525, 526], "lexicograph": 514, "lexsort": [6, 33, 483], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 468, 469], "librari": [3, 4, 534], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 72, 92, 102, 104, 107, 109, 118, 133, 153, 154, 155, 156, 157, 158, 161, 172, 228, 229, 240, 242, 336, 349, 358, 381, 387, 401, 405, 449, 454, 462, 463, 496, 525, 537], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 75, 76, 78, 79, 81, 82, 83, 85, 90, 91, 100, 102, 105, 109, 110, 111, 112, 113, 114, 116, 118, 119, 139, 140, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 171, 172, 173, 177, 181, 183, 184, 193, 194, 195, 196, 197, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 247, 251, 252, 253, 254, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 336, 338, 382, 383, 385, 387, 388, 391, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 431, 433, 436, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 458, 460, 462, 466, 467, 473, 477, 478, 479, 480, 481, 483, 485, 487, 488, 491, 492, 493, 497, 498, 512, 513, 519, 521, 525, 526], "linalg": [6, 86, 97, 101, 107, 108, 243, 244, 389, 488, 499, 501, 520, 521], "line": [208, 229], "linear": [10, 77, 81, 208, 219, 240, 390, 527, 537], "linear_ramp": 390, "linspac": [0, 6, 23, 112, 161, 215, 240, 249, 389, 480, 503, 517], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 65, 73, 74, 78, 93, 96, 102, 103, 104, 105, 107, 108, 124, 129, 138, 158, 159, 161, 163, 169, 170, 180, 188, 222, 228, 229, 240, 243, 248, 379, 392, 455, 461, 462, 464, 465, 472, 475, 486, 490, 499, 502, 515, 516, 518, 521, 522, 523, 524], "list_pickl": 105, "littl": 105, "ln": 240, "load": [6, 154, 229], "loadtxt": [6, 154], "loan": 214, "loc": [405, 416, 418, 419, 427, 451], "local": 4, "locat": [0, 4, 162, 185, 186, 242, 389, 416, 418, 474, 521], "log": [6, 116, 161, 218, 228, 231, 232, 233, 234, 240, 241, 420], "log10": [6, 230, 232, 233], "log1p": [6, 114, 116, 230, 231, 233], "log2": [6, 230, 231, 232, 235], "log_bas": 240, "logabsdet": 218, "logaddexp": [6, 87, 235, 241], "logaddexp2": [6, 234, 241], "logarithm": [87, 201, 218, 228, 230, 231, 232, 233, 234, 235, 241, 421, 537], "logic": [16, 21, 236, 237, 238, 239, 527, 537], "logical_and": [6, 58, 237, 238, 239], "logical_not": [6, 59, 61, 177, 236, 238, 239], "logical_or": [6, 62, 236, 237, 239], "logical_xor": [6, 64, 236, 237, 238], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 161, 228], "logsumexp": [87, 234, 235], "lomax": 428, "long": [105, 211], "longer": [125, 131, 541], "look": [383, 496], "lookfor": 6, "loop": 107, "loos": 106, "lorentz": 443, "lose": [125, 131, 133], "low": [121, 123, 127, 128, 405, 433, 436, 449, 534], "lower": [93, 118, 167, 168, 190, 198, 204, 206, 242, 504, 505, 506, 507, 510, 511], "lowest": [56, 107, 108, 160, 193, 405, 433], "lstsq": 6, "m": [4, 10, 85, 104, 105, 107, 118, 121, 123, 125, 127, 128, 131, 132, 133, 137, 143, 144, 145, 198, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 225, 242, 243, 244, 248, 401, 470, 475, 495, 496, 504, 505, 506, 507, 509, 510, 511], "machin": [4, 10, 139, 173, 208, 235, 457], "machineri": 105, "made": [36, 41, 53, 105, 152, 192, 257, 463, 486], "magnitud": [11, 12, 79, 119, 398], "mai": [16, 20, 21, 49, 67, 71, 73, 74, 80, 89, 102, 105, 107, 108, 115, 121, 123, 125, 126, 127, 128, 130, 131, 134, 137, 163, 168, 170, 199, 203, 204, 208, 210, 214, 217, 235, 240, 243, 257, 263, 266, 268, 336, 369, 401, 454, 457, 464, 472, 480, 490, 500, 521, 523, 534], "main": [93, 94, 95, 96, 97, 118, 138, 172, 202, 206, 225, 242, 501, 504, 505, 506, 509, 510], "mainstai": 10, "maintain": [33, 99, 102, 105, 167, 368, 474, 483, 496], "major": [4, 40, 41, 42, 43, 45, 48, 49, 102, 336, 384, 454, 455, 462, 515], "make": [43, 45, 72, 105, 215, 249, 389, 462, 480, 514, 517], "manag": 0, "mandelbrot": [215, 389], "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 454, 534], "manipul": [3, 94, 527, 537], "mantissa": 194, "manual": [4, 105, 500], "mappingproxi": 105, "mask": [92, 105, 191, 242, 384, 393, 402, 495, 506, 510], "mask_func": 242, "mask_indic": [6, 506, 510], "mass": 167, "mat": 6, "match": [11, 12, 41, 73, 74, 80, 84, 87, 98, 105, 152, 154, 163, 176, 222, 241, 243, 400, 401, 459, 490, 495, 496, 499, 524], "math": [10, 112], "mathbf": [226, 521], "mathemat": [214, 527, 537], "matlab": 151, "matmul": [6, 101, 217, 220, 520], "matplotlib": [249, 443], "matric": [138, 155, 175, 191, 201, 202, 203, 205, 207, 210, 212, 214, 216, 217, 218, 220, 221, 225, 243, 244, 249, 537], "matrix": [85, 101, 102, 107, 176, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 225, 243, 244, 249, 353, 488, 509, 518, 520, 521, 527, 537], "matrix_norm": 214, "matrix_pow": [6, 488], "matrix_rank": 6, "matter": 514, "max": [0, 6, 18, 31, 71, 102, 139, 149, 150, 167, 168, 173, 208, 212, 214, 216, 246, 251, 252, 262, 338, 422, 496, 500, 517, 534], "max_arg": 0, "max_val": 0, "maxima": [149, 245, 246], "maximum": [0, 6, 18, 31, 32, 71, 102, 108, 149, 150, 245, 251, 252, 258, 259, 262, 264, 333, 354, 390, 395, 396, 399, 401, 517], "maximum_sctyp": 6, "may_share_memori": 6, "md": 214, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 78, 84, 93, 94, 96, 102, 107, 109, 110, 118, 121, 122, 123, 127, 128, 132, 133, 134, 135, 136, 137, 153, 154, 155, 156, 157, 158, 159, 163, 172, 175, 199, 214, 229, 242, 248, 250, 263, 266, 268, 336, 341, 349, 379, 386, 387, 388, 390, 405, 418, 420, 423, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 450, 451, 454, 463, 470, 491, 493, 504, 506, 510, 518, 519, 525, 526, 534], "meaningfulli": 534, "meant": 534, "median": [0, 6, 390], "meet": [36, 475], "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 100, 102, 105, 107, 109, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 152, 158, 159, 160, 164, 165, 166, 171, 174, 177, 181, 182, 183, 184, 193, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 248, 249, 252, 253, 256, 341, 347, 374, 382, 383, 385, 387, 388, 394, 395, 396, 398, 403, 404, 454, 456, 458, 460, 462, 463, 466, 467, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 512, 513, 521, 524, 525, 526, 527, 541], "mersenn": 405, "mesh": 191, "meshgrid": [6, 155, 175, 191, 250, 386], "met": [101, 213], "meta": 105, "metadata": 105, "method": [10, 16, 18, 19, 21, 33, 49, 78, 101, 102, 105, 141, 152, 154, 212, 216, 220, 244, 336, 341, 351, 358, 366, 369, 381, 384, 392, 405, 463, 476, 493, 495, 502, 527], "mgrid": [121, 123, 132, 135, 175, 191], "mgridclass": 250, "middl": [10, 97, 121, 123, 127, 128, 205, 248], "might": [107, 126, 127, 128], "min": [6, 19, 32, 71, 102, 139, 149, 150, 167, 168, 173, 199, 202, 208, 214, 217, 220, 221, 245, 246, 252, 264, 338, 496, 534], "min_scalar_typ": 6, "minima": [150, 251, 252], "minimum": [6, 19, 31, 32, 36, 71, 102, 146, 149, 150, 245, 246, 251, 258, 259, 262, 264, 334, 356, 390, 395, 396, 399], "minlength": 57, "mintypecod": 6, "minu": [116, 148, 253, 460, 513], "mirror": 390, "miscellan": [2, 527, 537], "mise": 450, "miss": 229, "mix": [209, 243], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 117, 460, 517], "mode": [70, 77, 81, 102, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 217, 337, 362, 377, 390, 400, 401, 443, 448, 455, 474, 495, 496], "model": [4, 407], "modf": 6, "modifi": [78, 97, 138, 248, 390, 442], "modul": [120, 162, 527], "modulu": [151, 253, 460], "monoton": [99, 167], "moor": 216, "more": [0, 3, 4, 33, 36, 53, 54, 55, 104, 105, 107, 108, 116, 132, 135, 144, 145, 152, 154, 168, 170, 175, 194, 200, 202, 208, 209, 211, 212, 213, 215, 216, 220, 222, 225, 226, 232, 234, 464, 470, 490, 499, 503, 514, 517, 534, 541], "most": [3, 4, 22, 97, 98, 105, 108, 120, 126, 257, 405, 441, 464, 489], "move": [102, 255, 360, 392, 468, 469, 502, 514], "moveaxi": [6, 392, 468, 469, 502, 516], "msg": 0, "msort": 6, "mt": [102, 244], "mt19937": 441, "mu": [416, 420, 427, 450], "multi": [2, 102, 175, 191, 200, 250, 374, 386, 455, 514, 527], "multi_dot": [6, 101, 107, 108], "multi_index": 455, "multiarrai": 105, "multidimension": [167, 176, 524], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 73, 74, 86, 87, 103, 105, 107, 121, 123, 127, 128, 132, 133, 135, 137, 160, 168, 169, 170, 191, 193, 200, 203, 204, 205, 206, 207, 213, 241, 245, 247, 251, 262, 263, 264, 266, 268, 454, 459, 472, 475, 483, 486, 490, 491, 503, 514, 516, 519, 522, 523, 527], "multipli": [6, 88, 107, 194, 205, 265, 397], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 423, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 98, 100, 101, 104, 113, 114, 115, 116, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 154, 157, 160, 163, 164, 165, 166, 167, 168, 170, 171, 174, 177, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 198, 200, 202, 213, 214, 215, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 248, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 382, 383, 385, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 456, 458, 459, 460, 461, 466, 467, 468, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 485, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 512, 513, 519, 521, 523, 524], "mx": 208, "mxn": [202, 210, 225, 244], "n": [0, 4, 10, 34, 39, 89, 94, 95, 98, 99, 102, 103, 104, 105, 106, 115, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 155, 163, 169, 172, 191, 202, 208, 210, 211, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 242, 243, 244, 248, 249, 266, 268, 379, 390, 392, 393, 400, 401, 407, 422, 424, 434, 444, 474, 476, 486, 488, 491, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 509, 510, 511, 518, 519, 521, 522, 534], "n1": 249, "n2": [229, 249], "n3": 249, "naiv": 108, "name": [0, 6, 105, 216, 480], "namedtupl": 217, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 100, 146, 149, 150, 178, 181, 183, 184, 185, 186, 231, 245, 246, 247, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 395, 396, 397, 485, 487, 491, 512, 514, 519, 537], "nan_to_num": 6, "nanargmax": [6, 31, 259], "nanargmin": [6, 32, 258], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 149, 150, 245, 246, 252, 264], "nanmean": [6, 247, 266, 268, 491, 519], "nanmedian": 6, "nanmin": [6, 149, 150, 246, 251, 252, 262], "nanpercentil": 6, "nanprod": [6, 397], "nanquantil": 6, "nanstd": [6, 247, 263, 268, 491, 519], "nansum": 6, "nanvar": [6, 247, 263, 266, 491, 519], "nat": 184, "nativ": 105, "native_cod": 105, "native_dt": 105, "natur": [218, 230, 231, 232, 233, 234, 235, 241], "nbad": 417, "nbyte": 102, "nd": [102, 351], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 538], "ndim": [6, 34, 36, 43, 45, 53, 54, 55, 85, 94, 97, 102, 105, 138, 192, 214, 220, 221, 244, 245, 251, 387, 392, 500, 502, 525], "ndmin": 36, "ne": 480, "nearest": [35, 69, 140, 147, 148, 253, 460, 467, 471, 485, 513], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 80, 88, 89, 106, 117, 125, 131, 133, 138, 152, 161, 228, 240, 243, 247, 248, 260, 261, 263, 265, 266, 267, 268, 397, 464, 491, 493, 519, 541], "necessarili": [203, 205], "need": [4, 36, 41, 97, 107, 162, 248, 462, 495, 496, 524], "needs_init": 105, "needs_pyapi": 105, "neg": [6, 10, 16, 21, 35, 57, 79, 96, 97, 99, 102, 115, 118, 121, 123, 126, 127, 128, 131, 134, 143, 146, 157, 163, 167, 181, 183, 184, 185, 186, 211, 222, 257, 262, 264, 266, 267, 268, 369, 394, 395, 396, 397, 400, 401, 424, 455, 471, 491, 493, 495, 496, 499, 501, 519], "negat": 475, "negative_binomi": 6, "neginf": 257, "neither": [101, 149, 150, 209, 220, 243, 262, 264], "nest": [44, 104, 170, 472, 490, 516, 523], "nested_it": 6, "net": [149, 150, 246, 252], "never": 517, "new": [22, 36, 49, 65, 66, 72, 73, 74, 84, 87, 88, 89, 92, 97, 102, 104, 105, 106, 109, 110, 115, 149, 150, 152, 156, 157, 158, 159, 161, 170, 172, 228, 240, 241, 242, 246, 248, 252, 255, 260, 261, 265, 267, 336, 366, 369, 379, 387, 388, 392, 459, 463, 464, 468, 469, 472, 486, 490, 500, 502, 516, 523, 524, 525, 526, 534], "new_dtyp": 105, "new_ord": 105, "new_shap": 464, "newaxi": 115, "newbyteord": [6, 105], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 100, 102, 109, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 158, 159, 160, 164, 165, 166, 171, 174, 177, 181, 183, 184, 193, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 252, 253, 256, 336, 341, 382, 383, 385, 387, 388, 394, 395, 396, 398, 403, 404, 456, 458, 460, 466, 467, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 512, 513, 521, 525, 526], "newshap": 463, "next": [4, 139, 383], "nextaft": 6, "ngood": 417, "ni": [249, 401, 495, 496], "nine": 407, "ninja": 4, "nj": [401, 495, 496], "njm": 107, "nk": [401, 495, 496], "nl": 10, "nlk": 107, "nn": 249, "noisi": 208, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 78, 84, 93, 94, 96, 99, 102, 109, 110, 117, 118, 122, 131, 134, 136, 142, 146, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 168, 172, 175, 179, 181, 191, 200, 222, 228, 229, 240, 242, 250, 257, 258, 259, 262, 264, 266, 268, 336, 341, 359, 369, 384, 386, 387, 388, 393, 395, 396, 405, 425, 426, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 491, 499, 504, 506, 510, 518, 519, 524, 525, 526], "nonc": [425, 426], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 199, 208, 210, 212, 213, 214, 216, 220, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 351, 354, 355, 356, 360, 361, 362, 365, 366, 367, 368, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 467, 468, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 506, 510, 512, 513, 514, 515, 517, 518, 519, 521, 523, 524, 525, 526, 534], "nonzero": [6, 34, 84, 102, 142, 191, 524, 534], "nor": [149, 150, 205, 262, 264], "norm": [6, 10, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 199, 205, 208, 210, 227, 537], "normal": [6, 85, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 167, 203, 204, 217, 226, 235, 405, 420, 423, 434, 446, 455, 480, 521], "not_equ": [6, 111, 164, 165, 196, 197], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 60, 61, 63, 73, 74, 78, 86, 90, 92, 97, 99, 100, 102, 105, 107, 108, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 147, 149, 150, 153, 154, 155, 156, 157, 167, 175, 177, 181, 194, 195, 200, 202, 203, 210, 214, 222, 227, 229, 240, 248, 253, 256, 266, 267, 268, 341, 366, 384, 390, 392, 393, 395, 396, 400, 403, 408, 410, 411, 421, 426, 454, 460, 462, 463, 464, 466, 470, 480, 483, 485, 491, 492, 494, 499, 500, 502, 503, 512, 514, 516, 517, 519, 520], "notic": [105, 131, 134], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 100, 102, 109, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 171, 172, 177, 181, 183, 184, 193, 194, 195, 196, 197, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 247, 251, 252, 253, 256, 262, 263, 264, 266, 267, 268, 336, 382, 383, 385, 387, 388, 394, 395, 396, 397, 398, 403, 404, 454, 458, 460, 462, 466, 467, 473, 477, 478, 479, 481, 483, 485, 487, 488, 491, 492, 493, 497, 498, 512, 513, 519, 521, 525, 526], "now": [16, 21, 43, 45, 94, 205, 208, 242], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 344, 346, 349, 350, 351, 353, 358, 360, 364, 369, 370, 371, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 398, 399, 400, 401, 403, 404, 430, 439, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "nr": 10, "nsamp": 417, "nsampl": 417, "nth": [222, 499], "nuc": [210, 214, 227], "nuclear": 214, "num": [0, 105, 112, 161, 228, 240, 503, 517], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 42, 46, 47, 50, 52, 56, 57, 65, 66, 84, 94, 96, 98, 99, 102, 105, 106, 107, 108, 115, 118, 119, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 148, 153, 154, 156, 157, 161, 163, 167, 168, 172, 173, 178, 179, 180, 181, 188, 191, 194, 199, 207, 212, 214, 217, 218, 220, 223, 224, 228, 235, 240, 253, 257, 260, 261, 262, 264, 265, 266, 267, 268, 358, 367, 370, 381, 384, 390, 392, 393, 397, 398, 405, 407, 417, 441, 460, 461, 464, 467, 468, 469, 470, 471, 478, 482, 485, 491, 494, 500, 502, 504, 513, 514, 518, 519, 534, 537], "number_of_dimens": [102, 358, 381], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 75, 76, 79, 82, 83, 100, 105, 111, 113, 116, 126, 127, 128, 131, 133, 148, 149, 150, 164, 165, 174, 178, 181, 183, 184, 196, 197, 214, 215, 230, 231, 232, 233, 246, 252, 256, 382, 385, 394, 395, 396, 398, 456, 467, 471, 477, 478, 479, 481, 492, 497, 498, 512, 537], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 345, 346, 349, 350, 351, 358, 364, 369, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 534, 537], "nvidia": 4, "nx": 249, "ny": 249, "nyquist": [10, 121, 123, 124, 125, 126, 127, 128, 131, 133, 134, 136], "o": [4, 16, 21, 105], "obj": [31, 32, 33, 92, 105, 152, 167], "obj2sctyp": 6, "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 78, 93, 94, 96, 102, 105, 109, 110, 115, 118, 122, 136, 139, 141, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 173, 175, 199, 204, 214, 222, 228, 229, 240, 242, 250, 336, 341, 351, 366, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 463, 499, 504, 506, 510, 518, 525, 526, 534], "obsolet": 182, "obtain": [10, 97, 198, 202, 225, 384], "obviou": 10, "occupi": [139, 173], "occur": [22, 49, 67, 73, 74, 80, 92, 102, 107, 170, 203, 243, 257, 336, 472, 490, 521, 523], "occurr": [31, 32, 57, 99, 167, 258, 259, 514], "odd": [10, 122, 125, 129, 130, 131, 133, 134, 136, 248, 390], "off": [23, 125, 130, 202, 203, 208, 225], "offset": [97, 102, 105, 153, 154, 202, 225, 242, 344, 378, 501, 506, 507, 510, 511], "often": [92, 166], "ogrid": [175, 191, 524], "ogridclass": 386, "oil": [407, 424], "old": 464, "omit": [405, 433], "onc": 207, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 77, 80, 81, 84, 92, 102, 105, 109, 111, 115, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 144, 145, 146, 149, 150, 154, 158, 163, 168, 170, 172, 175, 180, 191, 205, 210, 211, 214, 222, 227, 230, 231, 233, 242, 245, 246, 249, 250, 251, 252, 258, 259, 265, 267, 341, 349, 351, 352, 384, 386, 388, 393, 397, 424, 455, 469, 475, 483, 489, 490, 493, 495, 499, 503, 506, 507, 510, 511, 514, 525, 534], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "onedpl": 4, "onemkl": [4, 203, 205], "ones": [6, 36, 43, 45, 56, 87, 92, 100, 102, 107, 109, 110, 111, 115, 118, 137, 158, 159, 171, 172, 192, 208, 212, 215, 241, 242, 260, 265, 388, 389, 392, 397, 459, 465, 469, 502, 504, 512, 525, 526], "ones_lik": [6, 36, 110, 159, 387, 526], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 78, 81, 85, 102, 105, 107, 108, 109, 110, 118, 124, 134, 138, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 168, 175, 182, 198, 204, 206, 209, 212, 214, 215, 216, 217, 220, 228, 229, 240, 242, 243, 245, 247, 251, 257, 258, 259, 262, 263, 264, 265, 266, 268, 336, 351, 369, 371, 387, 388, 391, 393, 394, 397, 405, 427, 433, 449, 454, 462, 463, 480, 483, 491, 493, 496, 510, 514, 517, 519, 521, 524, 525, 526, 534], "open": [154, 175, 191, 228, 386, 405, 435, 437, 438, 440, 449, 494], "opencl": [23, 36, 40, 41, 42, 43, 45, 78, 93, 96, 109, 110, 118, 122, 136, 153, 154, 155, 156, 158, 159, 161, 172, 228, 229, 240, 250, 386, 387, 388, 504, 518, 525, 526], "oper": [10, 15, 58, 59, 60, 61, 62, 63, 64, 100, 105, 107, 108, 111, 115, 138, 148, 151, 164, 165, 177, 195, 196, 197, 198, 236, 238, 243, 245, 251, 253, 256, 257, 258, 259, 382, 385, 394, 395, 396, 400, 460, 466, 492, 500, 512, 514, 516, 517, 521, 527, 537], "operand": [107, 108, 222, 224, 389, 499], "opposit": [10, 105, 117, 125, 130, 393, 454], "optim": [4, 107, 108, 167, 168], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 178, 181, 183, 184, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 208, 210, 212, 213, 214, 216, 217, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 349, 379, 382, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 541], "ord": [210, 214, 227], "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 97, 99, 100, 102, 105, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 121, 123, 126, 127, 128, 131, 133, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 158, 159, 160, 163, 164, 165, 166, 167, 171, 174, 177, 181, 182, 183, 184, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 210, 214, 220, 222, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 249, 252, 253, 255, 256, 276, 335, 336, 341, 349, 360, 363, 366, 368, 371, 379, 382, 383, 384, 385, 387, 388, 391, 392, 394, 395, 396, 398, 403, 404, 454, 455, 456, 458, 460, 462, 463, 464, 466, 467, 470, 473, 474, 477, 478, 479, 480, 481, 483, 485, 487, 488, 492, 497, 498, 499, 502, 512, 513, 514, 515, 518, 521, 524, 525, 526, 537], "ordin": [208, 219], "ordinari": [131, 176, 198], "orient": [86, 401, 496], "origin": [65, 97, 102, 125, 131, 133, 210, 214, 227, 249, 255, 265, 267, 463, 464, 468, 514], "ortho": [10, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137], "orthogon": [205, 217], "orthonorm": 217, "other": [33, 38, 49, 65, 66, 98, 102, 105, 126, 127, 128, 131, 133, 147, 155, 172, 203, 205, 213, 214, 255, 272, 273, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 336, 405, 449, 464, 469, 483, 514, 521, 527, 537], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 82, 83, 84, 85, 90, 91, 93, 98, 100, 102, 105, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 171, 172, 176, 177, 181, 183, 184, 193, 194, 195, 196, 197, 208, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 336, 366, 382, 383, 385, 387, 388, 394, 395, 396, 397, 398, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 466, 467, 473, 474, 477, 478, 479, 481, 483, 485, 487, 488, 489, 491, 492, 493, 497, 498, 501, 512, 513, 519, 521, 524, 525, 526], "otim": [222, 499], "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 207, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 331, 332, 333, 334, 337, 338, 341, 342, 343, 349, 351, 354, 355, 356, 361, 367, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 512, 513, 517, 518, 519, 520, 521, 523, 524, 525, 526], "outer": [6, 86, 97, 107, 108, 192], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 101, 102, 105, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 136, 137, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 171, 172, 174, 175, 177, 178, 179, 181, 183, 184, 191, 193, 194, 195, 196, 197, 213, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 260, 261, 263, 265, 266, 267, 268, 336, 341, 382, 383, 385, 386, 387, 388, 394, 395, 396, 397, 398, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 460, 461, 463, 466, 467, 471, 473, 475, 477, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 492, 493, 495, 497, 498, 500, 501, 504, 506, 510, 512, 513, 514, 517, 518, 519, 521, 524, 525, 526, 537, 541], "outsid": [167, 168], "over": [10, 16, 21, 56, 87, 88, 89, 101, 102, 107, 108, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 143, 155, 161, 167, 168, 176, 200, 210, 214, 222, 226, 227, 228, 240, 241, 243, 245, 247, 249, 251, 260, 261, 262, 263, 264, 265, 266, 267, 268, 349, 397, 401, 405, 432, 437, 448, 449, 454, 459, 464, 491, 493, 495, 496, 499, 503, 517, 519, 521, 537], "overal": [121, 123, 127, 128, 132, 133, 135, 137], "overflow": 146, "overlin": [226, 521], "overrid": [86, 110, 159, 388, 526], "overview": 2, "overwrite_input": 248, "p": [10, 199, 208, 211, 407, 410, 415, 421, 424, 517], "pack": [97, 454, 537], "packag": [0, 3], "packbit": 6, "pad": [6, 105, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 464], "pad_valu": 390, "pad_width": 390, "padder": 390, "padding_func": 390, "page": [3, 537], "pair": [10, 108, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 200, 203], "parallel": [1, 3, 4, 9, 527], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 346, 349, 351, 366, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "parameter": [405, 427, 449], "parametr": 503, "pareto": 6, "pars": [154, 229], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 102, 131, 149, 150, 174, 179, 180, 187, 188, 203, 204, 206, 242, 246, 252, 254, 350, 364, 390, 456, 457, 484, 506, 510, 513, 514, 534], "partial": [33, 248, 483], "particular": [105, 213], "particularli": 107, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 483, 504, 506, 510, 518, 525, 526, 534], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 105, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 168, 172, 175, 191, 208, 229, 242, 250, 257, 341, 366, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 462, 504, 506, 507, 510, 511, 518, 521, 525, 526], "path": [4, 107, 108, 154, 229], "path_info": 108, "pathlib": 229, "pattern": 56, "penros": 216, "per": [107, 122, 136, 455], "percentil": [6, 248], "perf_count": 0, "perform": [16, 21, 41, 42, 71, 98, 107, 121, 123, 126, 127, 128, 132, 133, 135, 137, 143, 198, 221, 397, 493], "perhap": 462, "period": [10, 517], "permit": 154, "permut": [6, 102, 107, 255, 379, 392, 502, 537], "permute_dim": 502, "perpendicular": 86, "pg": 214, "phase": [10, 20, 517], "phase_deg": 517, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 90, 91, 120, 403, 479, 480, 481, 497, 498, 503, 517, 541], "pickl": [154, 229], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 71, 73, 74, 88, 89, 92, 101, 102, 115, 117, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 152, 175, 178, 243, 245, 247, 248, 251, 257, 260, 261, 263, 265, 266, 267, 268, 349, 369, 371, 379, 386, 390, 397, 400, 401, 442, 463, 464, 468, 471, 483, 490, 491, 493, 495, 501, 519, 534], "plane": 470, "platform": [88, 89, 105, 260, 261, 265, 267, 397, 493], "pleas": [0, 3, 39, 103, 107, 167, 169, 522, 534], "plot": 443, "plt": [249, 443], "plu": [230, 231, 233], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 79, 87, 105, 109, 110, 114, 118, 119, 120, 125, 126, 130, 131, 132, 133, 134, 139, 140, 146, 153, 154, 155, 157, 158, 159, 163, 172, 174, 194, 208, 211, 228, 229, 234, 235, 241, 247, 248, 257, 263, 266, 268, 383, 387, 388, 405, 434, 446, 456, 458, 459, 471, 473, 474, 480, 491, 503, 504, 519, 525, 526, 537], "pointer": 105, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 75, 76, 79, 82, 83, 90, 91, 100, 102, 111, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 160, 164, 165, 166, 171, 174, 177, 181, 183, 184, 193, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 252, 253, 256, 382, 383, 385, 394, 395, 396, 398, 403, 404, 405, 432, 456, 458, 460, 466, 467, 471, 473, 477, 478, 479, 480, 481, 485, 487, 488, 492, 497, 498, 512, 513], "portion": [167, 168], "posinf": 257, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 68, 79, 96, 97, 102, 115, 118, 119, 121, 123, 126, 127, 128, 131, 134, 136, 139, 146, 154, 178, 181, 183, 184, 185, 186, 198, 211, 223, 255, 257, 262, 264, 267, 360, 374, 382, 392, 407, 431, 468, 469, 471, 473, 475, 487, 488, 501, 502], "possess": 203, "possibl": [10, 48, 49, 54, 55, 102, 103, 107, 108, 115, 149, 150, 163, 167, 169, 242, 336, 366, 392, 401, 454, 463, 486, 489, 494, 495, 496, 502, 522], "possibli": 44, "pow": [396, 534], "power": [6, 10, 114, 120, 146, 211, 395, 488, 518], "pre": 168, "precis": [11, 12, 56, 88, 89, 105, 107, 139, 146, 174, 208, 225, 242, 260, 261, 265, 267, 397, 456, 493, 501], "predecessor": 517, "prefer": [70, 78, 92, 102, 341, 369, 384, 454], "prepend": [36, 98, 106, 500], "present": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 105, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 172, 175, 229, 242, 250, 262, 264, 267, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 504, 506, 510, 518, 525, 526], "preserv": [49, 53, 54, 55, 71, 102, 105, 107, 143, 144, 145, 146, 204, 205, 206, 248, 336, 454, 462, 501, 514], "press": [10, 214], "prevent": 107, "previou": [56, 390], "print": [0, 4, 42, 56, 57, 77, 99, 105, 108, 405, 424, 429], "print_device_info": 0, "printabl": 108, "printopt": 6, "prior": 98, "prob1": [234, 235], "prob12": [234, 235], "prob2": [234, 235], "probabl": [167, 235, 248, 407, 415, 424], "proce": 534, "process": [10, 480], "processor": 107, "prod": [6, 88, 102, 223, 224, 265, 534], "produc": [10, 34, 105, 229, 401, 474, 496], "product": [6, 86, 88, 101, 102, 107, 108, 176, 191, 192, 200, 209, 213, 215, 219, 222, 223, 224, 226, 243, 256, 260, 265, 342, 389, 397, 499, 520, 521, 537], "program": [4, 147], "progress": [161, 228], "project": [4, 105, 226, 398, 521], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 67, 68, 79, 82, 83, 90, 91, 100, 113, 114, 116, 146, 148, 149, 150, 151, 161, 171, 195, 228, 230, 231, 232, 233, 234, 235, 240, 243, 246, 252, 253, 256, 383, 395, 396, 403, 404, 458, 460, 465, 466, 473, 477, 479, 480, 481, 485, 487, 488, 492, 497, 498, 500, 512, 513, 521], "promote_typ": 6, "propag": [105, 149, 150, 245, 246, 251, 252, 260, 261, 262, 264, 265, 267], "proper": [149, 150, 203, 205], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 204, 206, 217, 228, 229, 240, 242, 250, 270, 336, 341, 345, 347, 348, 350, 352, 353, 357, 358, 364, 369, 370, 374, 379, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526, 534], "proport": 480, "protocol": [44, 105, 152], "prototyp": 110, "provid": [0, 6, 10, 31, 32, 36, 73, 74, 80, 87, 102, 103, 107, 108, 115, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 156, 167, 168, 170, 185, 186, 212, 216, 241, 258, 259, 262, 264, 265, 267, 405, 433, 436, 459, 462, 472, 490, 495, 503, 514, 521, 523, 524, 541], "pseudo": [216, 405], "ptp": 6, "pure": [10, 125, 131, 133, 134], "purpos": [34, 208, 214], "put": [6, 10, 102, 117, 125, 131, 133, 393, 401, 496, 534], "put_along_axi": [6, 400, 496], "putmask": [6, 400], "pval": 422, "py": 4, "pypi": 4, "pyplot": [249, 443], "pytest": 4, "python": [0, 2, 3, 44, 102, 105, 151, 152, 253, 351, 460, 461, 534], "q": [205, 211, 217, 224, 248], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 121], "quantil": 6, "quaternion": 211, "question": 93, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "quick": [2, 3], "quickest": 454, "quickli": [191, 541], "quotient": [29, 51], "r": [86, 91, 217], "r2": 217, "rad": 91, "rad2deg": [6, 90, 91, 517], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 90, 91, 403, 517, 541], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 78, 79, 80, 82, 83, 87, 90, 91, 99, 100, 101, 102, 103, 109, 110, 111, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 169, 171, 172, 177, 181, 183, 184, 193, 194, 195, 196, 197, 211, 213, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 251, 252, 253, 256, 258, 259, 262, 263, 264, 266, 267, 268, 336, 337, 353, 382, 383, 385, 387, 388, 394, 395, 396, 397, 398, 403, 404, 454, 455, 458, 459, 460, 462, 463, 466, 467, 473, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 491, 492, 493, 497, 498, 512, 513, 519, 521, 522, 525, 526, 534], "ramp": 390, "rand": [6, 108, 405, 435, 437, 438, 440], "randint": [6, 102, 351, 405, 436], "randn": [6, 143, 144, 145, 216, 217, 220, 224, 405, 490], "random": [102, 108, 143, 144, 145, 205, 213, 216, 217, 220, 224, 351, 490, 527, 537], "random_integ": [6, 405, 433], "random_sampl": [6, 405, 432, 435, 438, 440], "randomli": 429, "randomst": 433, "ranf": 6, "rang": [0, 99, 156, 167, 168, 222, 235, 392, 399, 400, 424, 429, 455, 461, 490, 499, 502, 517, 537], "rank": [115, 117, 155, 208, 212, 225, 390, 494], "rate": [122, 136], "rather": 384, "ratio": [0, 100, 148, 208, 512, 541], "ration": 537, "ravel": [6, 102, 117, 142, 214, 349, 389, 463, 534], "ravel_multi_index": [6, 515], "raveled_indic": 455, "raw": 217, "rayleigh": 6, "rcond": [208, 216], "re": [31, 32, 57, 93, 131, 468], "read": [93, 97, 102, 105, 153, 154, 156, 157, 229, 349, 454, 463], "readonli": 105, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 68, 69, 79, 87, 102, 120, 123, 125, 130, 131, 132, 133, 134, 135, 137, 139, 147, 149, 150, 151, 171, 174, 179, 187, 188, 198, 203, 204, 205, 206, 212, 216, 217, 218, 220, 234, 235, 241, 246, 252, 253, 257, 266, 268, 407, 424, 457, 458, 459, 460, 473, 484, 485, 491, 513, 514, 519, 534, 537], "real_if_clos": [6, 20, 174, 456], "rearrang": [102, 360, 537], "reason": 133, "rebuild": 104, "recal": 105, "recent": [22, 489], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 473, 487], "recommend": [107, 384, 500], "reconstruct": [105, 220, 514], "recov": 10, "reduc": [16, 21, 31, 32, 56, 217, 220, 241, 245, 247, 248, 249, 251, 258, 259, 262, 263, 264, 265, 266, 267, 268, 397, 459, 464, 491, 493, 519], "reduce_hypot": 171, "reduct": [16, 21], "redund": 134, "referreflect": [390, 534], "reflect_typ": 390, "reflector": 217, "regardless": [105, 204, 206, 522], "regular": 229, "rel": [17, 33, 102, 178, 202, 212, 225, 374, 468, 469, 483], "relat": 105, "relev": [105, 161, 228, 240], "rem": 151, "remain": [16, 21, 56, 108, 135, 137, 167, 241, 247, 248, 255, 263, 266, 268, 459, 463, 491, 519], "remaind": [6, 148, 151, 253, 395, 396], "remov": [31, 32, 90, 92, 97, 102, 115, 131, 202, 225, 372, 397, 403, 489, 493, 521, 537], "reorder": [107, 143, 224, 255], "rep": 500, "repeat": [6, 102, 121, 123, 127, 128, 132, 133, 135, 137, 138, 203, 204, 205, 206, 249, 393, 464, 500, 503, 514, 534], "repeatedli": 107, "repetit": [0, 461, 500], "replac": [3, 10, 44, 71, 117, 257, 260, 261, 393, 401, 410, 463, 475, 534], "replic": 500, "repo": 4, "repr": 313, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 105, 108, 126, 134, 152, 155, 161, 163, 175, 218, 228, 240, 249, 268, 390, 405, 464, 508, 514, 534], "represent": [58, 62, 64, 108, 139, 173, 175, 257, 383, 485, 534], "request": 469, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 102, 105, 107, 119, 175, 257, 336, 369, 390, 463, 464], "res_cpu": 93, "res_host": 93, "resampl": 480, "rese": 441, "reset": 534, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 93, 94, 95, 97, 100, 101, 102, 103, 104, 107, 115, 117, 124, 129, 143, 151, 169, 175, 176, 191, 192, 202, 209, 210, 214, 222, 225, 227, 242, 243, 245, 251, 256, 344, 349, 353, 369, 379, 390, 393, 429, 454, 462, 464, 468, 470, 492, 499, 501, 503, 506, 507, 510, 511, 512, 514, 516, 522, 534], "resid": [115, 119, 152], "residu": 208, "resiz": [6, 115, 534], "resolut": 139, "resolv": [87, 115, 241, 459], "resourc": 0, "respect": [15, 29, 51, 58, 60, 62, 63, 64, 100, 102, 111, 146, 148, 151, 163, 164, 165, 195, 196, 197, 200, 234, 235, 236, 238, 239, 253, 256, 374, 385, 395, 396, 460, 466, 492, 512, 517], "rest": 39, "restor": 468, "restrict": 226, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 36, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 71, 73, 74, 79, 84, 87, 88, 89, 92, 100, 101, 105, 108, 110, 111, 116, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 146, 148, 153, 154, 155, 156, 157, 159, 161, 164, 165, 167, 168, 175, 177, 181, 183, 184, 185, 186, 194, 195, 196, 197, 198, 202, 203, 209, 210, 214, 217, 222, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 251, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 384, 385, 388, 389, 395, 396, 397, 400, 405, 407, 437, 459, 463, 465, 466, 467, 469, 471, 474, 477, 478, 480, 486, 490, 491, 493, 495, 496, 499, 500, 503, 508, 512, 513, 514, 516, 519, 521, 524, 526, 534], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 67, 105, 537], "ret": 404, "retain": 463, "retriev": [97, 105, 202], "retstep": 228, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 354, 355, 356, 358, 359, 360, 361, 363, 366, 367, 370, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 408, 427, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 534], "return_count": 514, "return_index": 514, "return_invers": 514, "reus": [152, 168], "revers": [97, 102, 138, 143, 144, 145, 202, 379, 392, 470, 502, 503, 516, 518], "rewrit": 208, "rfft": [6, 10, 122, 125, 130, 131, 132, 133, 135, 136, 137], "rfft2": [6, 132], "rfftfreq": [6, 122], "rfftn": [6, 120, 123, 133, 134, 135], "right": [10, 28, 50, 60, 63, 71, 86, 97, 99, 144, 145, 171, 195, 200, 203, 204, 205, 206, 213, 224, 242, 448, 459, 466, 474, 501, 503, 506, 510, 518], "right_shift": [6, 60, 63, 195], "rightmost": [167, 168, 224], "rint": [6, 35, 69, 140, 147, 471, 513], "rl": [215, 389], "roll": [6, 469], "rollaxi": [6, 468], "root": [6, 68, 171, 199, 458, 459, 473, 487, 488], "rot90": [6, 144, 145], "rotat": [144, 145, 470], "roughli": [105, 208], "round": [6, 23, 35, 69, 102, 125, 130, 140, 147, 148, 160, 203, 253, 460, 467, 513, 534, 537], "round_": 6, "routin": [2, 527, 534], "row": [45, 49, 72, 73, 74, 88, 89, 97, 102, 104, 118, 144, 145, 163, 170, 172, 175, 213, 220, 336, 384, 454, 455, 472, 486, 490, 504, 506, 514, 515, 522, 523], "row_stack": [6, 523], "rowvar": 85, "rsqrt": [458, 487], "rtol": [17, 178, 212, 216], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 62, 63, 64, 67, 68, 79, 80, 82, 83, 86, 89, 90, 91, 100, 113, 114, 116, 148, 149, 150, 151, 161, 171, 195, 200, 228, 230, 231, 232, 233, 234, 235, 240, 241, 243, 246, 247, 248, 252, 253, 256, 263, 266, 268, 383, 395, 396, 403, 404, 458, 459, 460, 465, 466, 473, 477, 479, 480, 481, 485, 487, 488, 491, 492, 493, 497, 498, 503, 512, 513, 519, 521], "run": [0, 4], "runtim": 4, "runtimewarn": [262, 264], "s1": [102, 105, 192, 374], "s10": 105, "s16": 105, "s2": [102, 105, 374], "s25": 105, "s3": [102, 374], "safe": [49, 67, 73, 74, 80, 102, 107, 170, 243, 336, 472, 490, 521, 523], "safe_ev": 6, "sai": 463, "said": 224, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 79, 87, 88, 89, 97, 98, 99, 100, 101, 102, 104, 110, 111, 115, 117, 126, 127, 128, 133, 138, 140, 146, 148, 149, 150, 151, 152, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 174, 176, 177, 178, 185, 186, 187, 192, 193, 194, 195, 196, 197, 200, 202, 205, 211, 216, 217, 221, 222, 225, 234, 235, 236, 238, 239, 241, 245, 246, 247, 248, 251, 252, 253, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 366, 379, 383, 385, 388, 390, 393, 395, 396, 397, 401, 405, 427, 433, 449, 454, 456, 459, 460, 461, 463, 466, 468, 469, 472, 474, 475, 483, 489, 490, 491, 492, 493, 495, 496, 499, 501, 505, 507, 509, 511, 512, 515, 519, 520, 523, 526, 541], "same_kind": [49, 67, 73, 74, 80, 102, 107, 170, 243, 336, 472, 490, 521, 523], "sampl": [10, 122, 129, 131, 134, 136, 161, 163, 167, 228, 240, 401, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 496, 503, 506, 510, 527, 537], "sample_r": 136, "satisfi": [36, 41, 43, 45, 49, 102, 117, 207, 336, 393, 462, 475], "save": [6, 154, 248, 541], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 62, 63, 64, 67, 78, 79, 80, 86, 93, 96, 98, 100, 101, 102, 105, 107, 108, 111, 117, 122, 136, 138, 146, 148, 149, 150, 151, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 176, 178, 180, 188, 189, 192, 193, 194, 195, 196, 197, 209, 219, 222, 228, 234, 235, 236, 238, 239, 240, 242, 243, 246, 249, 252, 253, 256, 346, 351, 381, 383, 385, 390, 393, 395, 396, 400, 401, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 433, 436, 439, 441, 445, 447, 448, 449, 450, 451, 452, 453, 457, 460, 466, 474, 475, 492, 495, 499, 503, 512, 513, 518, 520, 524, 534], "scale": [10, 108, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 161, 192, 217, 228, 240, 405, 412, 414, 416, 417, 418, 419, 427, 439, 444, 451], "scientif": 10, "scipi": 112, "scope": 4, "script": 4, "sctype2char": 6, "search": [108, 527, 537], "searchsort": [6, 99, 102, 167, 483, 534], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 79, 86, 97, 100, 101, 105, 108, 111, 114, 121, 122, 123, 124, 127, 128, 131, 134, 136, 146, 148, 149, 150, 151, 160, 163, 164, 165, 167, 168, 169, 170, 171, 176, 178, 192, 193, 195, 196, 197, 200, 202, 209, 222, 225, 226, 234, 235, 236, 238, 239, 242, 243, 245, 246, 249, 251, 252, 253, 256, 385, 389, 395, 396, 460, 466, 470, 488, 492, 494, 499, 501, 512, 520, 521], "section": [4, 39, 105, 123, 128, 133, 137, 210, 227, 534], "see": [3, 35, 105, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 152, 167, 208, 210, 227, 390, 422, 471, 506, 507, 510, 511, 514, 534], "seed": [6, 102, 108, 351, 405], "seek": 154, "seldom": 146, "select": [6, 33, 80, 117, 245, 251, 483, 489, 495, 503, 527], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "self": [102, 105, 141, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 348, 405], "semant": 167, "sens": 224, "sep": [154, 157], "separ": [10, 102, 105, 107, 154, 157, 168, 257, 366, 464], "sequenc": [39, 44, 53, 54, 55, 72, 73, 74, 77, 81, 103, 104, 107, 108, 109, 110, 121, 123, 127, 128, 131, 132, 133, 135, 137, 158, 159, 161, 167, 168, 169, 170, 175, 191, 213, 222, 228, 240, 248, 255, 387, 388, 390, 393, 429, 442, 461, 462, 465, 472, 486, 490, 499, 503, 516, 522, 523, 525, 526], "sequenti": [81, 85, 112, 254, 265], "seri": [10, 131, 421], "serv": 516, "set": [10, 31, 32, 33, 36, 49, 70, 84, 93, 94, 96, 99, 102, 105, 107, 109, 158, 167, 168, 172, 175, 210, 212, 214, 215, 216, 227, 228, 245, 251, 258, 259, 267, 326, 336, 337, 348, 369, 387, 388, 389, 390, 397, 475, 477, 478, 483, 493, 506, 510, 525, 526, 534], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 105], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 207, "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 104, 105, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 181, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 201, 202, 207, 208, 209, 210, 211, 213, 217, 218, 219, 220, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 358, 366, 370, 372, 379, 381, 382, 383, 385, 386, 387, 388, 390, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 414, 417, 422, 423, 428, 432, 433, 434, 435, 436, 437, 438, 440, 445, 446, 452, 454, 455, 456, 458, 459, 460, 461, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 507, 509, 510, 511, 512, 513, 515, 516, 519, 521, 522, 523, 524, 525, 526, 527, 537], "share": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 504, 506, 510, 518, 525, 526], "shared_bin": 168, "shares_memori": 6, "shift": [10, 60, 63, 121, 123, 124, 128, 129, 195, 466, 468], "short": [480, 513, 521, 534], "shortcut": 390, "shorter": [125, 131], "shorthand": [11, 12, 15, 58, 59, 60, 61, 62, 63, 64, 100, 111, 148, 164, 165, 177, 195, 196, 197, 236, 238, 243, 253, 256, 382, 385, 394, 395, 396, 460, 466, 492, 512, 524], "should": [31, 32, 36, 39, 49, 97, 99, 101, 102, 107, 108, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 151, 154, 162, 167, 191, 208, 211, 222, 243, 255, 258, 259, 262, 264, 336, 368, 390, 422, 455, 463, 464, 474, 485, 495, 499, 501, 515, 517, 521, 534], "show": [9, 38, 105, 138, 171, 239, 249, 257, 260, 261, 262, 264, 267, 443], "show_config": 6, "shown": 4, "shuffl": 6, "side": [102, 163, 205, 368, 474], "sigma": [420, 427], "sign": [6, 10, 17, 79, 105, 178, 201, 218, 253, 382, 394, 397, 460, 478, 493, 513], "signal": [10, 122, 125, 130, 131, 133, 136, 480, 517], "signatur": [242, 243, 390, 521], "signbit": [6, 477], "signific": 107, "signum": 477, "similar": [3, 40, 41, 102, 105, 161, 200, 202, 209, 215, 225, 226, 228, 240, 242, 341, 369, 393, 405, 433, 506, 507, 510, 511], "simpl": [4, 239, 537], "simpli": [95, 102, 154, 167, 168, 194, 379], "sin": [0, 6, 26, 27, 46, 47, 82, 205, 249, 480, 481, 497, 503], "sinc": [6, 102, 131, 203, 205, 371, 384, 516], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 479, 480, 481, 497, 498], "sing": 214, "singl": [9, 10, 33, 66, 72, 102, 107, 108, 163, 213, 222, 245, 251, 351, 372, 397, 405, 424, 433, 434, 435, 436, 437, 438, 440, 446, 493, 499, 503, 521, 534], "singleton": [16, 21, 56, 115, 241, 247, 248, 262, 263, 264, 266, 268, 459, 489, 491, 519], "singular": [207, 208, 212, 214, 216, 220, 221], "sinh": [6, 14, 25, 27, 47, 83, 479, 498], "sinu": 480, "size": [0, 6, 23, 31, 32, 36, 39, 56, 73, 74, 81, 84, 85, 88, 89, 94, 99, 102, 103, 105, 108, 117, 120, 122, 126, 136, 154, 161, 163, 169, 170, 200, 202, 210, 214, 215, 217, 220, 222, 226, 227, 228, 240, 242, 245, 247, 251, 258, 259, 260, 261, 263, 265, 267, 351, 352, 369, 387, 393, 397, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 464, 468, 472, 486, 489, 490, 493, 499, 510, 516, 517, 521, 522, 523, 525, 534], "skip": 97, "slice": [92, 117, 258, 259, 262, 263, 264, 266, 268, 400, 401, 475, 496, 503, 510, 511, 534], "slogdet": [6, 201], "slower": [222, 499], "slowest": [102, 349, 454, 463], "small": [17, 116, 178, 208, 216, 232, 234, 235, 257, 510], "smaller": [98, 102, 120, 121, 123, 126, 127, 128, 130, 132, 133, 134, 135, 137, 139, 208, 253, 360, 393, 460, 517], "smallest": [139, 173, 214, 514], "smallest_norm": 139, "smat": 220, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 105, 111, 125, 130, 146, 167, 188, 222, 228, 235, 241, 247, 248, 249, 263, 266, 268, 443, 459, 491, 499, 500, 519], "softwar": 4, "solut": [208, 219, 464], "solv": [6, 208, 223, 224, 537], "some": [23, 105, 115, 117, 147, 176, 208, 390, 393, 517, 524, 534], "sometim": [166, 534], "sometru": 6, "somewhat": 211, "sophist": 211, "sort": [6, 33, 39, 102, 103, 169, 220, 248, 335, 360, 392, 474, 484, 486, 496, 502, 503, 514, 522, 527, 534, 537], "sort_complex": 6, "sorter": [102, 368, 474], "sought": 199, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 65, 66, 67, 70, 71, 72, 74, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 167, 168, 169, 170, 172, 173, 175, 176, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 381, 384, 387, 388, 389, 390, 391, 393, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 468, 469, 470, 474, 475, 476, 482, 483, 484, 486, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "space": [6, 23, 122, 124, 136, 154, 161, 163, 228, 240, 503, 541], "spars": [175, 249], "speak": 214, "special": [2, 105, 112, 527, 537], "specif": [0, 4, 105, 155], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 66, 67, 73, 74, 78, 87, 88, 89, 92, 93, 96, 97, 102, 107, 108, 109, 110, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 143, 146, 153, 154, 155, 156, 158, 159, 161, 163, 172, 182, 202, 204, 206, 214, 222, 223, 224, 225, 226, 227, 228, 229, 240, 241, 247, 248, 250, 260, 261, 263, 265, 266, 267, 268, 335, 344, 351, 386, 387, 388, 392, 393, 397, 400, 401, 405, 418, 428, 446, 454, 455, 459, 462, 464, 468, 469, 470, 471, 475, 482, 490, 491, 493, 495, 496, 499, 501, 502, 503, 504, 514, 516, 518, 519, 521, 525, 526], "spectrum": [10, 124, 125, 129, 130], "speed": 107, "speedup": 108, "spell": 384, "split": [6, 39, 73, 74, 103, 104, 169, 170, 472, 490, 516, 522, 523, 537], "spreadsheet": 147, "sqrt": [6, 10, 68, 102, 350, 364, 459, 473, 488], "squar": [6, 68, 171, 172, 198, 199, 203, 204, 205, 207, 208, 211, 218, 223, 224, 242, 266, 268, 409, 425, 458, 459, 473, 475, 487, 491, 507, 511, 518, 519], "squeez": [6, 102, 115, 534], "src": 80, "stabil": [33, 483], "stabl": [33, 483], "stack": [6, 72, 73, 74, 104, 170, 201, 202, 209, 210, 212, 216, 217, 218, 221, 225, 243, 244, 384, 472, 486, 496, 516, 523], "stai": 71, "stand": 163, "standard": [102, 139, 148, 151, 247, 253, 263, 266, 268, 351, 373, 405, 420, 427, 434, 443, 444, 445, 446, 447, 460, 491, 519, 534, 537], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 405, 434], "standard_t": 6, "start": [2, 3, 23, 43, 45, 108, 122, 126, 136, 153, 161, 228, 240, 242, 464, 469, 506, 510], "start_tim": 0, "stat_length": 390, "state": 405, "statist": [390, 527, 537], "std": [6, 102, 247, 263, 266, 268, 519, 534], "stdev": [405, 446], "step": [4, 23, 108, 161, 166, 228, 240], "sticki": 105, "still": [56, 169, 214, 522], "stop": [23, 161, 228, 240], "store": [140, 161, 185, 186, 225, 228, 235, 240, 243, 389, 521], "str": [42, 44, 73, 74, 105, 107, 108, 154, 157, 170, 229, 327, 390, 462, 472, 490, 508, 523], "str_": 105, "straightforward": 175, "strictli": 214, "stride": [48, 49, 102, 336], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 105, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 390, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 508, 510, 518, 525, 526, 534], "string_repr": 108, "stringio": 229, "strongli": [4, 500], "struct": 105, "structur": [105, 229], "student": 447, "style": [49, 102, 336, 384, 390, 454, 455, 515], "sub": [39, 73, 74, 92, 97, 103, 105, 107, 169, 170, 224, 225, 472, 486, 490, 501, 504, 516, 522, 523], "subarrai": [92, 105, 175, 514], "subclass": [41, 462], "subdiagon": [202, 225], "subdivid": 105, "subdtyp": 105, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 78, 79, 82, 83, 90, 91, 100, 102, 110, 111, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 159, 160, 164, 165, 166, 171, 177, 181, 183, 184, 193, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 252, 253, 256, 336, 382, 383, 385, 388, 394, 395, 396, 398, 403, 404, 458, 460, 466, 467, 473, 477, 478, 479, 481, 485, 487, 488, 492, 497, 498, 512, 513, 521, 526], "subscript": [107, 108], "subset": [3, 163, 489, 537], "subtract": [6, 390], "subtyp": 454, "succeed": 106, "success": [42, 407, 415, 424], "sugar": [95, 507, 511], "suggest": 97, "suit": 4, "suitabl": [34, 102, 351, 379, 401, 464, 474, 496], "sum": [0, 3, 4, 6, 10, 15, 56, 87, 89, 93, 96, 97, 98, 101, 102, 107, 126, 167, 171, 176, 199, 208, 209, 214, 222, 223, 225, 234, 235, 241, 243, 260, 261, 267, 343, 378, 407, 422, 424, 459, 499, 501, 503, 521, 534, 537], "sum_": [10, 214, 226, 521], "sum_along_diagon": 501, "sum_of_weight": 56, "summari": 527, "summat": [101, 107, 108, 176, 222, 224, 243, 389, 499, 521], "superdiagon": [202, 225], "suppli": [125, 130, 213, 390, 405, 434], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 78, 79, 81, 82, 83, 85, 90, 91, 100, 102, 105, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 140, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 171, 172, 177, 181, 183, 184, 193, 194, 195, 196, 197, 200, 202, 209, 215, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 247, 251, 252, 253, 254, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 336, 369, 382, 383, 385, 387, 388, 391, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 460, 462, 466, 467, 473, 477, 478, 479, 483, 485, 487, 488, 491, 492, 493, 497, 498, 512, 513, 519, 521, 525, 526, 541], "sure": 462, "surnam": 105, "surpris": [126, 127, 128], "svd": [6, 199, 207, 212, 216, 221], "swap": [105, 121, 124, 494], "swapax": [6, 102, 255, 534], "swapped_cod": 105, "swapped_dt": 105, "sy": 105, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "sycl_context": 102, "sycl_devic": 102, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 336, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 504, 506, 510, 518, 525, 526], "symmetr": [125, 131, 133, 134, 198, 203, 204, 205, 206, 212, 216, 220, 390], "symmetri": [10, 120, 125, 130, 131, 134], "syntact": [95, 507, 511], "syntax": 534, "sys_is_l": 105, "system": [3, 4, 219], "t": [10, 73, 74, 85, 102, 105, 125, 182, 198, 203, 205, 208, 379, 384, 447, 454, 503], "t1": 541, "tabl": [2, 9, 210, 227, 527], "tack": 105, "take": [6, 72, 102, 117, 191, 242, 393, 401, 454, 463, 474, 475, 480, 496, 514, 517, 534, 541], "take_along_axi": [6, 31, 32, 33, 70, 401, 495], "taken": [56, 97, 98, 106, 108, 125, 131, 132, 133, 134, 135, 137, 166, 167, 243, 266, 268, 475, 491, 501, 504, 506, 510, 519, 520, 521], "tall": 138, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 82, 479, 498], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 479, 481, 497, 498], "tanh": [6, 14, 25, 30, 52, 83, 481, 497], "target": [49, 67, 102, 336, 400], "target_devic": 102, "tau": 217, "tbb": 4, "tempfil": 154, "temporari": [154, 541], "temporaryfil": 154, "ten": 415, "tensor": [44, 102, 107, 108, 152, 222, 223, 224, 258, 259, 262, 264, 265, 399, 499], "tensordot": [6, 101, 107, 176, 223, 224, 243, 389], "tensorinv": [6, 224], "tensorsolv": [6, 223], "term": [10, 15, 100, 108, 120, 121, 123, 126, 127, 128, 131, 134, 256, 492, 512], "test": [0, 2, 16, 17, 21, 111, 164, 165, 179, 181, 183, 184, 185, 186, 196, 197, 265, 384, 385, 407, 534, 537], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [153, 154, 156, 157, 229], "th": [89, 93, 96, 98, 102, 106, 118, 163, 175, 248, 379, 386, 392, 475, 502, 505, 507, 509, 511], "than": [36, 60, 63, 88, 89, 102, 103, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 144, 145, 148, 155, 164, 165, 167, 168, 170, 195, 196, 197, 208, 212, 216, 217, 222, 225, 260, 261, 265, 267, 353, 360, 384, 390, 393, 397, 464, 466, 475, 477, 489, 490, 493, 499, 501, 513, 517, 541], "thei": [17, 38, 105, 178, 182, 194, 205, 208, 222, 472, 474, 499, 503, 506, 510, 517, 518, 523, 534], "them": [72, 212, 216, 534], "theor": 203, "theoret": 108, "therefor": [120, 134, 155, 204, 206, 464], "theta": 503, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 71, 73, 74, 78, 84, 87, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 144, 145, 146, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 168, 170, 180, 182, 188, 191, 200, 202, 204, 206, 208, 209, 210, 213, 214, 215, 218, 221, 225, 226, 227, 228, 229, 232, 234, 235, 240, 241, 242, 243, 245, 248, 251, 253, 255, 257, 258, 259, 262, 264, 265, 267, 336, 341, 346, 349, 351, 360, 366, 379, 384, 390, 393, 397, 400, 401, 438, 440, 454, 459, 460, 462, 463, 464, 469, 470, 472, 483, 490, 493, 495, 496, 500, 503, 507, 511, 514, 516, 517, 518, 521, 523, 524], "thing": 495, "think": [390, 463], "third": [72, 73, 74, 86, 103, 104, 121, 170, 222, 472, 486, 490, 499, 523], "those": [10, 71, 92, 211, 401], "though": 126, "thousand": 415, "three": [53, 54, 55, 115, 211, 222, 242, 405, 441, 499, 514], "threshold": 212, "through": [41, 105, 168, 191, 203, 205, 208, 242, 462, 534], "throw": 422, "thu": [10, 125, 131, 133, 500], "tile": [6, 461, 537], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 62, 63, 64, 79, 98, 100, 101, 111, 121, 123, 125, 127, 128, 130, 132, 133, 135, 137, 146, 148, 149, 150, 151, 160, 164, 165, 166, 171, 176, 178, 184, 192, 193, 194, 195, 196, 197, 208, 212, 216, 222, 234, 235, 236, 238, 239, 246, 252, 253, 256, 383, 385, 390, 395, 396, 407, 422, 460, 466, 470, 480, 492, 496, 499, 500, 512, 514, 520], "time_dpnp": 0, "time_numpi": 0, "timedelta": 105, "timeit": 107, "timestep": 122, "tini": 139, "titl": 105, "tm": 151, "to_begin": 106, "to_devic": 102, "to_end": 106, "tobyt": 6, "todo": 425, "tofil": [6, 154], "togeth": [17, 73, 74, 105, 126, 178, 191, 490, 524], "tol": [212, 423, 457], "toler": [17, 37, 178, 212, 457], "tolist": 6, "too": [4, 121, 123, 127, 128, 132, 133, 135, 137, 524], "toolkit": 3, "tostr": 6, "total": [6, 84, 88, 102, 357, 464, 482, 491, 519], "toward": [35, 69, 140, 147, 148, 167, 168, 253, 383, 460, 467, 470, 471, 513], "trace": [6, 93, 96, 97, 102, 107, 534], "traceback": [22, 489], "trail": 508, "transfer": 102, "transform": [108, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 527], "transpos": [6, 34, 102, 107, 182, 198, 205, 244, 255, 270, 353, 392, 534, 537], "trapezoid": [89, 493], "trapz": 6, "treat": [17, 92, 125, 131, 133, 154, 163, 178, 204, 206, 208, 213, 229, 248, 260, 261, 265, 267, 397, 401, 474, 496, 500, 514, 517, 534], "tri": 6, "trial": 407, "triangl": [93, 171, 242, 459, 504, 505, 506, 507, 509, 510, 511], "triangular": [6, 198, 204, 206, 217, 242, 506, 507, 510, 511], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 479, 481, 497, 498, 537], "tril": [6, 93, 242, 504, 506, 507, 510], "tril_indic": [6, 242, 507, 510], "tril_indices_from": [6, 511], "trili": 507, "trili1": 507, "trim": [121, 123, 127, 128, 132, 133, 135, 137, 508], "trim_zero": 6, "triu": [6, 93, 242, 504, 506, 510, 511], "triu_indic": [6, 242, 506, 511], "triu_indices_from": [6, 507], "triui": 511, "triuim1": 511, "trivial": [203, 496], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 75, 76, 78, 79, 80, 82, 83, 84, 85, 89, 90, 91, 99, 100, 102, 105, 107, 108, 111, 113, 114, 115, 116, 117, 119, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 160, 161, 164, 165, 166, 167, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 274, 331, 332, 336, 341, 354, 355, 356, 361, 373, 375, 380, 382, 383, 384, 385, 393, 394, 395, 396, 397, 398, 401, 403, 404, 410, 458, 459, 460, 462, 463, 466, 467, 473, 475, 477, 478, 479, 481, 483, 485, 487, 488, 491, 492, 493, 496, 497, 498, 499, 503, 512, 513, 514, 516, 518, 519, 521, 524], "true_divid": [6, 100], "trunc": [6, 35, 69, 140, 147, 467, 471], "truncat": [35, 69, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 147, 443, 467, 471, 513], "trust": [258, 259], "truth": [58, 59, 61, 62, 64, 111, 164, 165, 177, 196, 197, 236, 237, 238, 239, 385, 534, 537], "try": [4, 42], "tukei": 10, "tup": [72, 104, 170, 472, 523], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 66, 78, 84, 87, 93, 94, 95, 96, 102, 105, 108, 115, 124, 129, 143, 152, 155, 158, 159, 161, 163, 167, 168, 170, 175, 180, 188, 191, 192, 214, 217, 224, 227, 228, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 262, 263, 264, 265, 266, 267, 268, 351, 369, 379, 384, 386, 390, 392, 397, 455, 459, 461, 463, 464, 468, 472, 476, 489, 490, 491, 493, 500, 502, 506, 507, 510, 511, 515, 516, 518, 519, 521, 523, 534], "turn": 72, "twister": 405, "two": [10, 17, 37, 53, 54, 58, 59, 61, 62, 64, 77, 81, 86, 96, 97, 98, 101, 102, 105, 107, 108, 115, 120, 121, 123, 126, 127, 128, 131, 132, 133, 135, 137, 149, 150, 163, 176, 177, 178, 192, 194, 202, 204, 208, 210, 213, 215, 219, 221, 222, 225, 236, 238, 239, 243, 244, 245, 246, 248, 251, 252, 255, 262, 264, 353, 360, 376, 389, 390, 405, 434, 454, 467, 470, 471, 475, 494, 499, 501, 506, 507, 510, 511, 520], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 345, 349, 351, 358, 366, 370, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 537], "type_nam": 0, "typeerror": [56, 80, 102, 152, 194, 369], "typenam": 6, "typestr": 105, "typic": [17, 125, 178, 474, 534], "u": [105, 198, 204, 206, 220, 242, 265, 267, 514], "u1": [105, 153, 154], "u16": 105, "u4": 67, "u8": 105, "ufunc": [2, 527, 534], "uint64": 105, "uint8": [105, 153, 154], "uk": 10, "un": 105, "unalt": 390, "unari": 534, "unchang": 137, "undefin": [20, 102, 248, 360, 390], "under": [210, 227], "underli": [58, 62, 64, 454, 463], "undo": [10, 128], "undocu": 105, "unexpect": [265, 267], "unicod": 105, "uniform": [6, 105, 163, 167, 168, 240, 405, 432, 435, 437, 438, 440], "uniformli": [240, 405, 449], "uniniti": [36, 109, 110, 158, 387, 525], "union1d": 6, "uniqu": [6, 56, 57, 87, 99, 105, 241, 247, 255, 263, 266, 268, 390, 459, 461, 491, 519], "unique_count": 514, "unique_indic": 514, "unique_invers": 514, "unit": [102, 122, 136, 191, 203, 211, 218, 374], "unitari": [10, 163, 217, 220], "uniti": 167, "univ": 10, "univers": [2, 214, 527, 534], "unless": [16, 21, 49, 88, 89, 102, 107, 167, 203, 212, 214, 240, 260, 261, 265, 267, 336, 397, 493, 514, 521], "unlik": [33, 102, 136, 366, 369, 483], "unmodifi": 168, "unpackbit": 6, "unravel": 515, "unravel_index": [6, 31, 32, 455], "unraveled_coord": 515, "unsaf": [49, 67, 73, 74, 80, 102, 107, 170, 243, 336, 472, 490, 521, 523], "unscal": 10, "unsign": [105, 397, 493], "unspecifi": 463, "unstack": [170, 472, 490, 523], "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 79, 82, 83, 90, 91, 100, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 152, 160, 166, 171, 177, 193, 194, 195, 231, 232, 233, 234, 235, 246, 252, 253, 254, 256, 382, 383, 394, 395, 396, 398, 403, 404, 458, 460, 466, 467, 473, 477, 478, 479, 481, 485, 492, 497, 498, 512, 513], "until": [108, 468, 469], "unwrap": [6, 90, 403], "up": [4, 10, 105, 107, 145, 496, 507, 514], "upcast": 36, "updat": 4, "uplo": [204, 206], "upon": [102, 374], "upper": [93, 118, 167, 168, 198, 204, 206, 217, 242, 504, 506, 507, 509, 510, 511], "url": 4, "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 67, 71, 73, 74, 78, 86, 88, 89, 92, 93, 94, 96, 97, 100, 102, 105, 107, 108, 109, 110, 111, 115, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 147, 148, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 177, 182, 191, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 208, 212, 213, 214, 216, 222, 225, 228, 229, 235, 236, 238, 240, 242, 243, 245, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 276, 336, 341, 349, 369, 382, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 397, 401, 405, 408, 410, 411, 421, 426, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 446, 449, 454, 457, 460, 461, 462, 463, 464, 466, 468, 474, 475, 477, 480, 484, 491, 492, 493, 495, 496, 499, 500, 501, 503, 504, 506, 507, 510, 511, 512, 514, 515, 518, 519, 521, 524, 525, 526, 534, 541], "usabl": 146, "usag": [3, 4, 122, 136], "use_getitem": 105, "use_setitem": 105, "user": [105, 257, 390], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 489, 504, 506, 510, 518, 525, 526], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 346, 381, 382, 383, 384, 385, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 526], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 78, 93, 94, 96, 102, 109, 110, 118, 122, 136, 153, 154, 155, 156, 157, 158, 159, 161, 172, 175, 228, 229, 240, 242, 250, 341, 386, 387, 388, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 504, 506, 510, 518, 525, 526], "usual": [94, 102, 105, 209, 243, 369], "util": 527, "v": [77, 93, 96, 102, 105, 203, 204, 226, 248, 368, 400, 474, 521], "v0": 6, "v1": 6, "v10": 105, "v9": 6, "v_sort": 248, "val": [102, 138, 141, 326, 362, 393], "valid": [81, 115, 242, 494, 506, 507, 510, 511], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 98, 99, 100, 102, 105, 107, 109, 110, 111, 113, 114, 116, 117, 118, 119, 125, 126, 131, 133, 134, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 177, 178, 180, 181, 183, 184, 187, 188, 191, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 211, 212, 214, 216, 218, 219, 220, 221, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 272, 273, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 336, 338, 341, 346, 348, 360, 362, 369, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 415, 432, 433, 449, 456, 458, 459, 460, 461, 462, 463, 466, 467, 468, 471, 473, 474, 475, 477, 478, 479, 480, 483, 485, 487, 488, 491, 492, 493, 495, 496, 497, 498, 501, 503, 506, 510, 512, 513, 514, 517, 519, 521, 524, 525, 526, 534, 537], "value2": 105, "valueerror": [22, 36, 41, 42, 102, 152, 214, 258, 259, 353, 463, 486, 489], "van": 214, "vander": 6, "vandermond": 518, "var": [6, 102, 247, 263, 266, 268, 491, 534], "vararg": 163, "vari": [10, 16, 20, 21, 97, 108, 121, 123, 125, 126, 127, 128, 130, 131, 134, 137, 155, 175, 182, 199, 202, 203, 204, 208, 210, 214, 257, 263, 266, 268, 454, 457, 480], "variabl": [85, 208, 219], "varianc": [102, 247, 263, 266, 268, 380, 491, 519, 537], "variou": [214, 480, 541], "vdot": [6, 101, 226, 243, 521], "vecdot": 520, "vector": [86, 107, 155, 175, 176, 191, 199, 200, 209, 212, 213, 214, 215, 220, 221, 226, 227, 243, 248, 249, 389, 390, 520, 521, 537], "vector_norm": 214, "vendor": 4, "veri": [3, 10, 17, 178, 215, 249, 257, 389], "verif": 0, "verifi": 198, "version": [4, 84, 86, 97, 102, 105, 142, 243, 248, 348, 384, 389, 455, 501, 515, 520, 521], "vertic": [72, 73, 74, 97, 104, 138, 143, 144, 170, 202, 470, 472, 486, 490, 522, 523], "vetterlin": 10, "vh": 220, "via": 131, "view": [6, 39, 53, 54, 55, 65, 93, 97, 102, 103, 115, 121, 123, 127, 128, 132, 133, 135, 137, 143, 144, 145, 169, 249, 255, 270, 353, 366, 379, 392, 401, 454, 455, 463, 470, 486, 489, 494, 502, 515, 522], "violat": 80, "void": 105, "void640": 105, "von": 450, "vonmis": 6, "vsplit": [6, 73, 74, 486], "vstack": [6, 72, 73, 74, 104, 170, 208, 472, 486, 490], "w": [10, 56, 203, 204, 205, 206, 211, 462], "wa": [10, 87, 105, 213, 241, 262, 264, 266, 268, 405, 446, 459, 463, 491, 519], "wai": [3, 4, 10, 102, 108, 120, 126, 127, 128, 133, 154, 222, 360, 499], "wald": 6, "walk": 105, "want": [4, 182, 496], "warn": [105, 258, 259, 423, 464], "we": [78, 94, 97, 108, 138, 208, 242, 401, 496, 503], "weibul": [6, 453], "weight": [56, 57, 85, 167, 168, 247, 263, 493], "well": [105, 107, 154, 167, 168, 397, 407, 424, 443], "were": [73, 74, 155, 405, 434, 490, 517], "what": [10, 49, 67, 73, 74, 80, 102, 105, 107, 111, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 170, 179, 243, 336, 407, 424, 472, 490, 521, 523, 534], "when": [10, 22, 23, 33, 36, 37, 40, 41, 43, 45, 48, 49, 56, 78, 80, 99, 102, 105, 107, 120, 131, 133, 134, 149, 150, 161, 166, 203, 209, 214, 217, 221, 222, 228, 235, 240, 242, 243, 248, 253, 260, 261, 262, 264, 265, 267, 336, 454, 460, 464, 467, 469, 471, 475, 483, 495, 499, 503, 514, 521, 524, 541], "whenev": [115, 392, 494, 502], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 80, 82, 83, 86, 87, 90, 91, 93, 94, 96, 98, 99, 100, 102, 103, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 132, 133, 136, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 193, 194, 195, 196, 197, 198, 202, 208, 212, 217, 220, 221, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 250, 251, 252, 253, 256, 262, 263, 264, 265, 266, 267, 268, 331, 332, 336, 341, 354, 355, 356, 361, 368, 373, 375, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 449, 454, 458, 459, 460, 464, 466, 467, 469, 473, 474, 475, 477, 478, 479, 481, 485, 486, 487, 488, 491, 492, 493, 497, 498, 501, 502, 504, 506, 510, 512, 513, 517, 518, 519, 521, 522, 525, 526], "wherev": 80, "whether": [16, 17, 21, 37, 87, 99, 105, 152, 178, 179, 182, 198, 217, 228, 257, 265, 267, 455, 478, 514, 515, 534], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 65, 73, 74, 78, 80, 84, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 101, 102, 105, 107, 108, 109, 110, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 168, 170, 172, 175, 181, 183, 184, 185, 186, 198, 200, 202, 203, 210, 212, 214, 221, 224, 225, 226, 227, 229, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 341, 351, 384, 386, 387, 388, 392, 397, 400, 405, 427, 432, 433, 434, 435, 436, 437, 438, 440, 446, 449, 455, 459, 461, 464, 468, 475, 482, 483, 486, 489, 490, 491, 493, 495, 501, 502, 503, 504, 505, 506, 509, 510, 513, 516, 517, 518, 519, 521, 524, 525, 526, 534, 541], "whichev": 176, "while": [10, 135, 137, 167, 168, 247, 263, 266, 268, 384, 393, 397, 468, 491, 493, 504, 519], "whitespac": [154, 157], "who": 6, "whole": [121, 123, 127, 128, 132, 133, 135, 137, 506, 510], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 97, 105, 117, 118, 138, 199, 202, 204, 205, 206, 210, 221, 223, 225, 242, 244, 255, 468, 507, 511, 515], "why": 131, "wide": 138, "width": [105, 167, 168, 390], "wild": [407, 424], "window": [4, 122, 136], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 72, 73, 74, 75, 76, 79, 82, 83, 87, 100, 102, 104, 111, 113, 114, 116, 119, 140, 146, 147, 148, 149, 150, 151, 164, 165, 166, 169, 170, 171, 174, 177, 178, 181, 183, 184, 185, 186, 194, 195, 196, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 246, 251, 252, 253, 254, 256, 262, 264, 265, 340, 382, 383, 385, 394, 395, 396, 398, 456, 458, 460, 466, 467, 471, 472, 473, 477, 478, 479, 480, 481, 486, 487, 488, 490, 492, 497, 498, 512, 513, 522, 523, 527, 534, 537, 541], "wish": 534, "within": [17, 23, 37, 49, 102, 107, 125, 126, 127, 128, 130, 131, 133, 167, 168, 178, 336, 400, 405, 449], "without": [97, 102, 109, 138, 379, 454, 463, 464, 534], "won": 105, "word": [126, 127, 128, 131, 133, 147, 205, 405, 449], "work": [4, 35, 48, 102, 351, 496, 534], "world": [105, 407, 424], "would": [33, 73, 74, 102, 105, 155, 175, 213, 242, 243, 360, 392, 405, 455, 483, 486, 490, 496, 502, 517, 521], "wrap": [90, 102, 138, 362, 377, 390, 400, 401, 403, 455, 474, 495, 496, 517], "wrapper": 102, "writabl": 462, "write": [93, 97, 102, 138, 154, 349, 463], "writeabl": 462, "written": [4, 84, 87, 138, 154, 182, 241, 459, 524], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 65, 66, 68, 69, 75, 76, 78, 79, 81, 82, 83, 85, 86, 87, 90, 91, 93, 96, 98, 99, 102, 103, 105, 106, 109, 110, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 127, 128, 129, 135, 136, 137, 140, 141, 142, 147, 153, 154, 155, 156, 158, 159, 160, 161, 163, 169, 172, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 194, 199, 200, 202, 205, 208, 210, 214, 217, 219, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 249, 250, 254, 255, 257, 336, 341, 350, 351, 358, 364, 369, 370, 382, 384, 386, 387, 388, 394, 397, 398, 399, 403, 404, 423, 429, 454, 456, 458, 459, 461, 462, 467, 468, 469, 471, 473, 475, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 494, 495, 497, 498, 503, 504, 513, 516, 518, 522, 524, 525, 526], "x0": [43, 45, 78, 96, 388, 518, 526], "x00": 154, "x01": [153, 154], "x02": [153, 154], "x03": [153, 154], "x04": [153, 154], "x05": 153, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 62, 63, 64, 70, 79, 81, 100, 102, 111, 146, 148, 149, 150, 151, 160, 164, 165, 166, 171, 191, 193, 194, 195, 196, 197, 200, 209, 215, 226, 234, 235, 236, 237, 238, 239, 243, 246, 249, 252, 253, 254, 256, 336, 382, 383, 385, 391, 394, 395, 396, 402, 442, 460, 466, 468, 492, 512, 521], "x1_i": [15, 29, 51, 58, 60, 62, 63, 64, 79, 100, 111, 146, 148, 151, 164, 165, 171, 195, 196, 197, 234, 235, 236, 238, 239, 253, 256, 385, 395, 396, 460, 466, 492, 512], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 62, 63, 64, 79, 81, 100, 111, 146, 148, 149, 150, 151, 160, 164, 165, 166, 171, 191, 193, 194, 195, 196, 197, 200, 209, 215, 226, 234, 235, 236, 237, 238, 239, 243, 246, 249, 252, 253, 256, 382, 383, 385, 394, 395, 396, 460, 466, 468, 487, 492, 512, 521], "x2_i": [15, 29, 51, 58, 60, 62, 63, 64, 79, 100, 111, 146, 148, 151, 164, 165, 171, 195, 196, 197, 234, 235, 236, 238, 239, 253, 256, 385, 395, 396, 460, 466, 492, 512], "x3": [16, 21, 146], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 61, 68, 69, 75, 76, 82, 83, 113, 114, 116, 147, 174, 177, 230, 231, 232, 233, 237, 382, 394, 398, 456, 458, 467, 471, 473, 477, 478, 479, 481, 487, 488, 497, 498, 513], "xi": [233, 249], "xn": [191, 249], "xor": [58, 59, 61, 62, 64, 177, 236, 237, 238, 239], "xv": 249, "xx": 249, "xy": 249, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 65, 78, 85, 86, 96, 102, 105, 106, 109, 110, 115, 118, 122, 136, 153, 154, 155, 156, 158, 159, 161, 163, 172, 185, 186, 199, 200, 208, 228, 229, 240, 249, 250, 254, 257, 341, 358, 366, 369, 386, 387, 388, 462, 503, 504, 518, 524, 525, 526], "y1": 194, "y2": 194, "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 265, 267, 384, 390, 405, 524, 534], "you": [4, 97, 125, 130, 131, 182, 242, 248, 463, 495, 496, 534, 541], "your": [4, 97, 541], "yv": 249, "yy": 249, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 78, 86, 96, 109, 110, 118, 122, 136, 153, 154, 155, 156, 158, 159, 161, 172, 228, 229, 240, 249, 250, 386, 387, 388, 415, 504, 518, 525, 526], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 60, 69, 84, 86, 87, 94, 98, 102, 109, 110, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 147, 154, 158, 159, 172, 174, 179, 180, 185, 186, 187, 188, 195, 203, 204, 206, 208, 211, 212, 216, 220, 222, 241, 242, 245, 247, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 358, 359, 369, 370, 374, 381, 384, 387, 388, 390, 397, 405, 407, 435, 437, 438, 440, 456, 457, 459, 464, 467, 471, 477, 483, 491, 493, 499, 504, 505, 508, 509, 513, 519, 524, 526], "zeros_lik": [6, 36, 91, 110, 159, 248, 388, 404, 525], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 271, "__add__": 272, "__and__": 273, "__bool__": 274, "__complex__": 275, "__copy__": 276, "__eq__": 277, "__float__": 278, "__floordiv__": 279, "__ge__": 280, "__getitem__": 281, "__gt__": 282, "__iadd__": 283, "__iand__": 284, "__ifloordiv__": 285, "__ilshift__": 286, "__imatmul__": 287, "__imod__": 288, "__imul__": 289, "__int__": 290, "__invert__": 291, "__ior__": 292, "__ipow__": 293, "__irshift__": 294, "__isub__": 295, "__itruediv__": 296, "__ixor__": 297, "__le__": 298, "__len__": 299, "__lshift__": 300, "__lt__": 301, "__matmul__": 302, "__mod__": 303, "__mul__": 304, "__ne__": 305, "__neg__": 306, "__new__": 307, "__or__": 308, "__pos__": 309, "__pow__": 310, "__radd__": 311, "__rand__": 312, "__repr__": 313, "__rfloordiv__": 314, "__rlshift__": 315, "__rmatmul__": 316, "__rmod__": 317, "__rmul__": 318, "__ror__": 319, "__rpow__": 320, "__rrshift__": 321, "__rshift__": 322, "__rsub__": 323, "__rtruediv__": 324, "__rxor__": 325, "__setitem__": 326, "__str__": 327, "__sub__": 328, "__truediv__": 329, "__xor__": 330, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 531, "add": 15, "algebra": [6, 529], "all": [16, 331], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 332], "api": [1, 527], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 333], "argmin": [32, 334], "argsort": [33, 335], "argwher": 34, "arithmet": [532, 534, 535], "around": 35, "arrai": [6, 7, 9, 36, 528, 530, 531, 534], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 336], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 534, "avail": [9, 541], "averag": [56, 540], "backend": 1, "background": 10, "basic": [531, 535], "beta": 406, "bincount": 57, "binomi": 407, "bit": [5, 541], "bitwise_and": 58, "bitwise_invert": 59, "bitwise_left_shift": 60, "bitwise_not": 61, "bitwise_or": 62, "bitwise_right_shift": 63, "bitwise_xor": 64, "broadcast_arrai": 65, "broadcast_to": 66, "build": [4, 7], "byte": 408, "c": 1, "calcul": 534, "can_cast": 67, "cbrt": 68, "ceil": 69, "chang": 531, "channel": 4, "chisquar": 409, "choic": 410, "choleski": 198, "choos": [70, 337], "class": 7, "clip": [71, 338], "co": 82, "column_stack": 72, "comparison": [6, 530, 534, 541], "complex": 532, "concat": 73, "concaten": 74, "cond": 199, "conda": 4, "conj": [75, 339], "conjug": [76, 340], "construct": 534, "control": 0, "convers": 534, "convolv": 77, "copi": [78, 341], "copysign": 79, "copyto": 80, "correl": [81, 540], "cosh": 83, "count": 538, "count_nonzero": 84, "cov": 85, "creat": 8, "creation": 7, "cross": [86, 200], "cumlogsumexp": 87, "cumprod": [88, 342], "cumsum": [89, 343], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 528, 534, 536], "decomposit": 529, "deg2rad": 90, "degre": 91, "delet": 92, "det": 201, "detail": 10, "develop": 2, "devic": 4, "diag": 93, "diag_indic": 94, "diag_indices_from": 95, "diagflat": 96, "diagon": [97, 202, 344], "diff": 98, "differ": 532, "digit": 99, "dimens": [10, 531], "dimension": [6, 534], "dirichlet": 411, "discret": 6, "distribut": 536, "divid": 100, "dot": 101, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 536], "dpnp_arrai": 102, "driver": 4, "dsplit": 103, "dstack": 104, "dtype": [105, 345], "ediff1d": 106, "eig": 203, "eigenvalu": 529, "eigh": 204, "eigval": 205, "eigvalsh": 206, "einsum": 107, "einsum_path": 108, "element": [5, 531], "empti": 109, "empty_lik": 110, "equal": 111, "equat": 529, "erf": 112, "error": 539, "exampl": [0, 4], "except": 529, "exist": 7, "exp": 113, "exp2": 114, "expand_dim": 115, "expm1": 116, "expon": 532, "exponenti": 412, "extens": 2, "extract": 117, "extrema": 532, "ey": 118, "f": 413, "fab": 119, "fft": [10, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "fft2": 121, "fftfreq": 122, "fftn": 123, "fftshift": 124, "fill": 346, "fill_diagon": 138, "find": 532, "finfo": 139, "fix": 140, "flag": 347, "flat": 348, "flatit": 141, "flatnonzero": 142, "flatten": 349, "flip": 143, "fliplr": 144, "flipud": 145, "float": [532, 541], "float_pow": 146, "floor": 147, "floor_divid": 148, "fmax": 149, "fmin": 150, "fmod": 151, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 152, "frombuff": 153, "fromfil": 154, "fromfunct": 155, "fromit": 156, "fromstr": 157, "full": 158, "full_lik": 159, "function": [10, 530, 532, 539, 540, 541], "gamma": 414, "gcd": 160, "gener": [528, 536], "geometr": 415, "geomspac": 161, "get_includ": 162, "gradient": 163, "greater": 164, "greater_equ": 165, "guid": 4, "gumbel": 416, "handl": 532, "heavisid": 166, "helper": 10, "hermitian": 10, "hfft": 125, "higher": 10, "histogram": [167, 540], "histogram_bin_edg": 168, "hsplit": 169, "hstack": 170, "hyperbol": 532, "hypergeometr": 417, "hypot": 171, "ident": 172, "ifft": 126, "ifft2": 127, "ifftn": 128, "ifftshift": 129, "ihfft": 130, "iinfo": 173, "imag": [174, 350], "implement": 10, "index": [528, 534], "indic": 175, "infin": 530, "inform": [2, 8, 10], "inner": 176, "insert": 528, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 207, "invert": 177, "irfft": 131, "irfft2": 132, "irfftn": 133, "isclos": 178, "iscomplex": 179, "iscomplexobj": 180, "isfinit": 181, "isfortran": 182, "isinf": 183, "isnan": 184, "isneginf": 185, "isposinf": 186, "isreal": 187, "isrealobj": 188, "isscalar": 189, "issubdtyp": 190, "item": [351, 534], "items": 352, "iter": 528, "ix_": 191, "join": 531, "kind": 531, "kron": 192, "laplac": 418, "layout": 534, "lcm": 193, "ldexp": 194, "left_shift": 195, "less": 196, "less_equ": 197, "level": 6, "librari": 0, "like": [528, 531], "linalg": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "linear": [6, 529], "linspac": 228, "loadtxt": 229, "log": 230, "log10": 231, "log1p": 232, "log2": 233, "logaddexp": 234, "logaddexp2": 235, "logarithm": 532, "logic": 530, "logical_and": 236, "logical_not": 237, "logical_or": 238, "logical_xor": 239, "logist": 419, "lognorm": 420, "logseri": 421, "logspac": 240, "logsumexp": 241, "lstsq": 208, "manipul": [531, 534], "mask_indic": 242, "math": 541, "mathemat": 532, "matmul": [209, 243], "matric": 7, "matrix": [7, 529, 534], "matrix_norm": 210, "matrix_pow": 211, "matrix_rank": 212, "matrix_transpos": 244, "max": [245, 354], "maximum": 246, "mean": [247, 355], "median": 248, "memori": 534, "meshgrid": 249, "method": 534, "mgrid": 250, "min": [251, 356], "minimum": 252, "miscellan": [8, 532, 533], "mod": 253, "modf": 254, "modul": [6, 535], "moveaxi": 255, "mt": 353, "multi": [6, 534], "multi_dot": 213, "multinomi": 422, "multipl": 534, "multipli": 256, "multivariate_norm": 423, "nan": 530, "nan_to_num": 257, "nanargmax": 258, "nanargmin": 259, "nancumprod": 260, "nancumsum": 261, "nanmax": 262, "nanmean": 263, "nanmin": 264, "nanprod": 265, "nanstd": 266, "nansum": 267, "nanvar": 268, "nbyte": 357, "ndarrai": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 534], "ndim": [358, 381], "neg": 382, "negative_binomi": 424, "nextaft": 383, "noncentral_chisquar": 425, "noncentral_f": 426, "nonzero": [359, 384], "norm": [214, 529], "normal": [10, 427], "not_equ": 385, "number": [529, 531, 532], "numer": 7, "numpi": [2, 6], "ogrid": 386, "ones": 387, "ones_lik": 388, "oper": [5, 528, 529, 530, 531, 532, 534, 541], "order": 540, "other": [529, 532, 534], "outer": [215, 389], "output": 5, "over": 528, "overview": 3, "pack": 5, "packag": [4, 535], "pad": 390, "parallel": [0, 2], "pareto": 428, "partit": [360, 391], "permut": [429, 536], "permute_dim": 392, "pinv": 216, "place": 393, "point": 532, "poisson": 430, "poly1d": 535, "polynomi": 535, "polyutil": 535, "posit": 394, "pow": 395, "power": [396, 431], "prod": [361, 397], "product": [529, 532], "proj": 398, "ptp": 399, "put": [362, 400], "put_along_axi": 401, "putmask": 402, "python": 4, "qr": 217, "quick": 4, "r": 4, "rad2deg": 403, "radian": 404, "rand": 432, "randint": 433, "randn": 434, "random": [6, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 536], "random_integ": 436, "random_sampl": 437, "randomst": 405, "ranf": 438, "rang": 7, "ration": 532, "ravel": [363, 454], "ravel_multi_index": 455, "rayleigh": 439, "real": [10, 364, 456], "real_if_clos": 457, "rearrang": 531, "reciproc": 458, "reduce_hypot": 459, "refer": [1, 527], "remaind": 460, "remov": 531, "repeat": [365, 461], "requir": 462, "reshap": [366, 463], "resiz": 464, "result_typ": 465, "rfft": 134, "rfft2": 135, "rfftfreq": 136, "rfftn": 137, "right_shift": 466, "rint": 467, "roll": 468, "rollaxi": 469, "rot90": 470, "round": [367, 471, 532], "routin": [7, 8, 10, 528, 531, 532, 533, 537], "row_stack": 472, "rsqrt": 473, "sampl": [6, 440, 536], "scikit": 4, "search": 538, "searchsort": [368, 474], "seed": 441, "select": [475, 534], "shape": [7, 369, 476, 531, 534], "shuffl": 442, "sign": 477, "signbit": 478, "simpl": 536, "sin": 479, "sinc": 480, "sinh": 481, "size": [370, 482], "slogdet": 218, "solv": [219, 529], "sort": [371, 483, 538], "sort_complex": 484, "space": 485, "special": [532, 534, 539], "split": [486, 531], "sqrt": 487, "squar": 488, "squeez": [372, 489], "stack": 490, "standard": 10, "standard_cauchi": 443, "standard_exponenti": 444, "standard_gamma": 445, "standard_norm": 446, "standard_t": 447, "start": 4, "statist": 540, "std": [373, 491], "stride": 374, "subtract": 492, "sum": [375, 493, 532], "summari": 6, "svd": 220, "svdval": 221, "swapax": [376, 494], "sycl": 4, "t": 270, "tabl": 6, "take": [377, 495], "take_along_axi": 496, "tan": 497, "tanh": 498, "target": 4, "tensordot": [222, 499], "tensorinv": 223, "tensorsolv": 224, "test": [4, 8, 530], "tile": [500, 531], "trace": [225, 378, 501], "transform": [6, 10], "transpos": [379, 502, 531], "trapezoid": 503, "tri": 504, "triangular": 448, "trigonometr": [532, 541], "tril": 505, "tril_indic": 506, "tril_indices_from": 507, "trim_zero": 508, "triu": 509, "triu_indic": 510, "triu_indices_from": 511, "true_divid": 512, "trunc": 513, "truth": 530, "twiddl": 541, "type": [8, 9, 530, 534], "ufunc": 541, "uniform": 449, "uniqu": 514, "univers": 541, "unravel_index": 515, "unstack": 516, "unwrap": 517, "util": 533, "valu": [7, 530], "vander": 518, "var": [380, 519], "varianc": 540, "vdot": 520, "vecdot": [226, 521], "vector": 529, "vector_norm": 227, "vonmis": 450, "vsplit": 522, "vstack": 523, "wald": 451, "weibul": 452, "where": 524, "wise": 5, "zero": 525, "zeros_lik": 526, "zipf": 453}})