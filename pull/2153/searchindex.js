Search.setIndex({"alltitles": {"API Reference": [[528, null]], "Adding and removing elements": [[532, "adding-and-removing-elements"]], "Arithmetic": [[536, "arithmetic"]], "Arithmetic operations": [[533, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[535, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[532, null]], "Array attributes": [[535, "array-attributes"]], "Array conversion": [[535, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[535, "array-methods"]], "Array type testing": [[531, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[542, "available-ufuncs"]], "Averages and variances": [[541, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[532, "basic-operations"]], "Basics": [[536, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[542, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[535, "calculation"]], "Changing array shape": [[532, "changing-array-shape"]], "Changing kind of array": [[532, "changing-kind-of-array"]], "Changing number of dimensions": [[532, "changing-number-of-dimensions"]], "Comparison": [[531, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[542, "comparison-functions"]], "Constructing arrays": [[535, "constructing-arrays"]], "Correlations": [[541, "correlations"]], "Counting": [[539, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[535, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[530, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[537, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[540, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[530, "exceptions"]], "Exponents and logarithms": [[533, "exponents-and-logarithms"]], "Extrema finding": [[533, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[542, "floating-functions"]], "Floating point routines": [[533, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[529, "generating-index-arrays"]], "Handling complex numbers": [[533, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[541, "histograms"]], "Hyperbolic functions": [[533, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[535, "indexing-arrays"]], "Indexing routines": [[529, null]], "Indexing-like operations": [[529, "indexing-like-operations"]], "Infinities and NaNs": [[531, "infinities-and-nans"]], "Inserting data into arrays": [[529, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[535, "item-selection-and-manipulation"]], "Iterating over arrays": [[529, "iterating-over-arrays"]], "Joining arrays": [[532, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [530, null]], "Logic Functions": [[531, null]], "Logic operations": [[531, "logic-operations"]], "Math operations": [[542, "math-operations"]], "Mathematical functions": [[533, null]], "Matrix and vector products": [[530, "matrix-and-vector-products"]], "Matrix eigenvalues": [[530, "matrix-eigenvalues"]], "Memory layout": [[535, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [533, "miscellaneous"]], "Miscellaneous routines": [[534, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[535, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[530, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[541, "order-statistics"]], "Other attributes": [[535, "other-attributes"]], "Other matrix operations": [[530, "other-matrix-operations"]], "Other special functions": [[533, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[537, "permutations"]], "Poly1d": [[536, "poly1d"]], "Polynomial Module": [[536, "polynomial-module"]], "Polynomial Package": [[536, "polynomial-package"]], "Polynomials": [[536, null]], "Polyutils": [[536, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[537, null]], "Random generator": [[537, "random-generator"]], "Rational routines": [[533, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[532, "rearranging-elements"]], "Rounding": [[533, "rounding"]], "Routines": [[538, null]], "Searching": [[539, "searching"]], "Shape manipulation": [[535, "shape-manipulation"]], "Simple random data": [[537, "simple-random-data"]], "Solving linear equations": [[530, "solving-linear-equations"]], "Sorting": [[539, "sorting"]], "Sorting, Searching, and Counting": [[539, null]], "Special Functions": [[540, null]], "Special methods": [[535, "special-methods"]], "Splitting arrays": [[532, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[541, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[533, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[532, "tiling-arrays"]], "Transpose-like operations": [[532, "transpose-like-operations"]], "Trigonometric functions": [[533, "trigonometric-functions"], [542, "trigonometric-functions"]], "Truth value testing": [[531, "truth-value-testing"]], "Universal Functions (ufunc)": [[542, null]], "Utility": [[534, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_invert": [[59, null]], "dpnp.bitwise_left_shift": [[60, null]], "dpnp.bitwise_not": [[61, null]], "dpnp.bitwise_or": [[62, null]], "dpnp.bitwise_right_shift": [[63, null]], "dpnp.bitwise_xor": [[64, null]], "dpnp.broadcast_arrays": [[65, null]], "dpnp.broadcast_shapes": [[66, null]], "dpnp.broadcast_to": [[67, null]], "dpnp.can_cast": [[68, null]], "dpnp.cbrt": [[69, null]], "dpnp.ceil": [[70, null]], "dpnp.choose": [[71, null]], "dpnp.clip": [[72, null]], "dpnp.column_stack": [[73, null]], "dpnp.concat": [[74, null]], "dpnp.concatenate": [[75, null]], "dpnp.conj": [[76, null]], "dpnp.conjugate": [[77, null]], "dpnp.convolve": [[78, null]], "dpnp.copy": [[79, null]], "dpnp.copysign": [[80, null]], "dpnp.copyto": [[81, null]], "dpnp.correlate": [[82, null]], "dpnp.cos": [[83, null]], "dpnp.cosh": [[84, null]], "dpnp.count_nonzero": [[85, null]], "dpnp.cov": [[86, null]], "dpnp.cross": [[87, null]], "dpnp.cumlogsumexp": [[88, null]], "dpnp.cumprod": [[89, null]], "dpnp.cumsum": [[90, null]], "dpnp.deg2rad": [[91, null]], "dpnp.degrees": [[92, null]], "dpnp.delete": [[93, null]], "dpnp.diag": [[94, null]], "dpnp.diag_indices": [[95, null]], "dpnp.diag_indices_from": [[96, null]], "dpnp.diagflat": [[97, null]], "dpnp.diagonal": [[98, null]], "dpnp.diff": [[99, null]], "dpnp.digitize": [[100, null]], "dpnp.divide": [[101, null]], "dpnp.dot": [[102, null]], "dpnp.dpnp_array.dpnp_array": [[103, null]], "dpnp.dsplit": [[104, null]], "dpnp.dstack": [[105, null]], "dpnp.dtype": [[106, null]], "dpnp.ediff1d": [[107, null]], "dpnp.einsum": [[108, null]], "dpnp.einsum_path": [[109, null]], "dpnp.empty": [[110, null]], "dpnp.empty_like": [[111, null]], "dpnp.equal": [[112, null]], "dpnp.erf": [[113, null]], "dpnp.exp": [[114, null]], "dpnp.exp2": [[115, null]], "dpnp.expand_dims": [[116, null]], "dpnp.expm1": [[117, null]], "dpnp.extract": [[118, null]], "dpnp.eye": [[119, null]], "dpnp.fabs": [[120, null]], "dpnp.fft.fft": [[121, null]], "dpnp.fft.fft2": [[122, null]], "dpnp.fft.fftfreq": [[123, null]], "dpnp.fft.fftn": [[124, null]], "dpnp.fft.fftshift": [[125, null]], "dpnp.fft.hfft": [[126, null]], "dpnp.fft.ifft": [[127, null]], "dpnp.fft.ifft2": [[128, null]], "dpnp.fft.ifftn": [[129, null]], "dpnp.fft.ifftshift": [[130, null]], "dpnp.fft.ihfft": [[131, null]], "dpnp.fft.irfft": [[132, null]], "dpnp.fft.irfft2": [[133, null]], "dpnp.fft.irfftn": [[134, null]], "dpnp.fft.rfft": [[135, null]], "dpnp.fft.rfft2": [[136, null]], "dpnp.fft.rfftfreq": [[137, null]], "dpnp.fft.rfftn": [[138, null]], "dpnp.fill_diagonal": [[139, null]], "dpnp.finfo": [[140, null]], "dpnp.fix": [[141, null]], "dpnp.flatiter": [[142, null]], "dpnp.flatnonzero": [[143, null]], "dpnp.flip": [[144, null]], "dpnp.fliplr": [[145, null]], "dpnp.flipud": [[146, null]], "dpnp.float_power": [[147, null]], "dpnp.floor": [[148, null]], "dpnp.floor_divide": [[149, null]], "dpnp.fmax": [[150, null]], "dpnp.fmin": [[151, null]], "dpnp.fmod": [[152, null]], "dpnp.from_dlpack": [[153, null]], "dpnp.frombuffer": [[154, null]], "dpnp.fromfile": [[155, null]], "dpnp.fromfunction": [[156, null]], "dpnp.fromiter": [[157, null]], "dpnp.fromstring": [[158, null]], "dpnp.full": [[159, null]], "dpnp.full_like": [[160, null]], "dpnp.gcd": [[161, null]], "dpnp.geomspace": [[162, null]], "dpnp.get_include": [[163, null]], "dpnp.gradient": [[164, null]], "dpnp.greater": [[165, null]], "dpnp.greater_equal": [[166, null]], "dpnp.heaviside": [[167, null]], "dpnp.histogram": [[168, null]], "dpnp.histogram_bin_edges": [[169, null]], "dpnp.hsplit": [[170, null]], "dpnp.hstack": [[171, null]], "dpnp.hypot": [[172, null]], "dpnp.identity": [[173, null]], "dpnp.iinfo": [[174, null]], "dpnp.imag": [[175, null]], "dpnp.indices": [[176, null]], "dpnp.inner": [[177, null]], "dpnp.invert": [[178, null]], "dpnp.isclose": [[179, null]], "dpnp.iscomplex": [[180, null]], "dpnp.iscomplexobj": [[181, null]], "dpnp.isfinite": [[182, null]], "dpnp.isfortran": [[183, null]], "dpnp.isinf": [[184, null]], "dpnp.isnan": [[185, null]], "dpnp.isneginf": [[186, null]], "dpnp.isposinf": [[187, null]], "dpnp.isreal": [[188, null]], "dpnp.isrealobj": [[189, null]], "dpnp.isscalar": [[190, null]], "dpnp.issubdtype": [[191, null]], "dpnp.ix_": [[192, null]], "dpnp.kron": [[193, null]], "dpnp.lcm": [[194, null]], "dpnp.ldexp": [[195, null]], "dpnp.left_shift": [[196, null]], "dpnp.less": [[197, null]], "dpnp.less_equal": [[198, null]], "dpnp.linalg.cholesky": [[199, null]], "dpnp.linalg.cond": [[200, null]], "dpnp.linalg.cross": [[201, null]], "dpnp.linalg.det": [[202, null]], "dpnp.linalg.diagonal": [[203, null]], "dpnp.linalg.eig": [[204, null]], "dpnp.linalg.eigh": [[205, null]], "dpnp.linalg.eigvals": [[206, null]], "dpnp.linalg.eigvalsh": [[207, null]], "dpnp.linalg.inv": [[208, null]], "dpnp.linalg.lstsq": [[209, null]], "dpnp.linalg.matmul": [[210, null]], "dpnp.linalg.matrix_norm": [[211, null]], "dpnp.linalg.matrix_power": [[212, null]], "dpnp.linalg.matrix_rank": [[213, null]], "dpnp.linalg.multi_dot": [[214, null]], "dpnp.linalg.norm": [[215, null]], "dpnp.linalg.outer": [[216, null]], "dpnp.linalg.pinv": [[217, null]], "dpnp.linalg.qr": [[218, null]], "dpnp.linalg.slogdet": [[219, null]], "dpnp.linalg.solve": [[220, null]], "dpnp.linalg.svd": [[221, null]], "dpnp.linalg.svdvals": [[222, null]], "dpnp.linalg.tensordot": [[223, null]], "dpnp.linalg.tensorinv": [[224, null]], "dpnp.linalg.tensorsolve": [[225, null]], "dpnp.linalg.trace": [[226, null]], "dpnp.linalg.vecdot": [[227, null]], "dpnp.linalg.vector_norm": [[228, null]], "dpnp.linspace": [[229, null]], "dpnp.loadtxt": [[230, null]], "dpnp.log": [[231, null]], "dpnp.log10": [[232, null]], "dpnp.log1p": [[233, null]], "dpnp.log2": [[234, null]], "dpnp.logaddexp": [[235, null]], "dpnp.logaddexp2": [[236, null]], "dpnp.logical_and": [[237, null]], "dpnp.logical_not": [[238, null]], "dpnp.logical_or": [[239, null]], "dpnp.logical_xor": [[240, null]], "dpnp.logspace": [[241, null]], "dpnp.logsumexp": [[242, null]], "dpnp.mask_indices": [[243, null]], "dpnp.matmul": [[244, null]], "dpnp.matrix_transpose": [[245, null]], "dpnp.max": [[246, null]], "dpnp.maximum": [[247, null]], "dpnp.mean": [[248, null]], "dpnp.median": [[249, null]], "dpnp.meshgrid": [[250, null]], "dpnp.mgrid": [[251, null]], "dpnp.min": [[252, null]], "dpnp.minimum": [[253, null]], "dpnp.mod": [[254, null]], "dpnp.modf": [[255, null]], "dpnp.moveaxis": [[256, null]], "dpnp.multiply": [[257, null]], "dpnp.nan_to_num": [[258, null]], "dpnp.nanargmax": [[259, null]], "dpnp.nanargmin": [[260, null]], "dpnp.nancumprod": [[261, null]], "dpnp.nancumsum": [[262, null]], "dpnp.nanmax": [[263, null]], "dpnp.nanmean": [[264, null]], "dpnp.nanmin": [[265, null]], "dpnp.nanprod": [[266, null]], "dpnp.nanstd": [[267, null]], "dpnp.nansum": [[268, null]], "dpnp.nanvar": [[269, null]], "dpnp.ndarray": [[270, null]], "dpnp.ndarray.T": [[271, null]], "dpnp.ndarray.__abs__": [[272, null]], "dpnp.ndarray.__add__": [[273, null]], "dpnp.ndarray.__and__": [[274, null]], "dpnp.ndarray.__bool__": [[275, null]], "dpnp.ndarray.__complex__": [[276, null]], "dpnp.ndarray.__copy__": [[277, null]], "dpnp.ndarray.__eq__": [[278, null]], "dpnp.ndarray.__float__": [[279, null]], "dpnp.ndarray.__floordiv__": [[280, null]], "dpnp.ndarray.__ge__": [[281, null]], "dpnp.ndarray.__getitem__": [[282, null]], "dpnp.ndarray.__gt__": [[283, null]], "dpnp.ndarray.__iadd__": [[284, null]], "dpnp.ndarray.__iand__": [[285, null]], "dpnp.ndarray.__ifloordiv__": [[286, null]], "dpnp.ndarray.__ilshift__": [[287, null]], "dpnp.ndarray.__imatmul__": [[288, null]], "dpnp.ndarray.__imod__": [[289, null]], "dpnp.ndarray.__imul__": [[290, null]], "dpnp.ndarray.__int__": [[291, null]], "dpnp.ndarray.__invert__": [[292, null]], "dpnp.ndarray.__ior__": [[293, null]], "dpnp.ndarray.__ipow__": [[294, null]], "dpnp.ndarray.__irshift__": [[295, null]], "dpnp.ndarray.__isub__": [[296, null]], "dpnp.ndarray.__itruediv__": [[297, null]], "dpnp.ndarray.__ixor__": [[298, null]], "dpnp.ndarray.__le__": [[299, null]], "dpnp.ndarray.__len__": [[300, null]], "dpnp.ndarray.__lshift__": [[301, null]], "dpnp.ndarray.__lt__": [[302, null]], "dpnp.ndarray.__matmul__": [[303, null]], "dpnp.ndarray.__mod__": [[304, null]], "dpnp.ndarray.__mul__": [[305, null]], "dpnp.ndarray.__ne__": [[306, null]], "dpnp.ndarray.__neg__": [[307, null]], "dpnp.ndarray.__new__": [[308, null]], "dpnp.ndarray.__or__": [[309, null]], "dpnp.ndarray.__pos__": [[310, null]], "dpnp.ndarray.__pow__": [[311, null]], "dpnp.ndarray.__radd__": [[312, null]], "dpnp.ndarray.__rand__": [[313, null]], "dpnp.ndarray.__repr__": [[314, null]], "dpnp.ndarray.__rfloordiv__": [[315, null]], "dpnp.ndarray.__rlshift__": [[316, null]], "dpnp.ndarray.__rmatmul__": [[317, null]], "dpnp.ndarray.__rmod__": [[318, null]], "dpnp.ndarray.__rmul__": [[319, null]], "dpnp.ndarray.__ror__": [[320, null]], "dpnp.ndarray.__rpow__": [[321, null]], "dpnp.ndarray.__rrshift__": [[322, null]], "dpnp.ndarray.__rshift__": [[323, null]], "dpnp.ndarray.__rsub__": [[324, null]], "dpnp.ndarray.__rtruediv__": [[325, null]], "dpnp.ndarray.__rxor__": [[326, null]], "dpnp.ndarray.__setitem__": [[327, null]], "dpnp.ndarray.__str__": [[328, null]], "dpnp.ndarray.__sub__": [[329, null]], "dpnp.ndarray.__truediv__": [[330, null]], "dpnp.ndarray.__xor__": [[331, null]], "dpnp.ndarray.all": [[332, null]], "dpnp.ndarray.any": [[333, null]], "dpnp.ndarray.argmax": [[334, null]], "dpnp.ndarray.argmin": [[335, null]], "dpnp.ndarray.argsort": [[336, null]], "dpnp.ndarray.astype": [[337, null]], "dpnp.ndarray.choose": [[338, null]], "dpnp.ndarray.clip": [[339, null]], "dpnp.ndarray.conj": [[340, null]], "dpnp.ndarray.conjugate": [[341, null]], "dpnp.ndarray.copy": [[342, null]], "dpnp.ndarray.cumprod": [[343, null]], "dpnp.ndarray.cumsum": [[344, null]], "dpnp.ndarray.diagonal": [[345, null]], "dpnp.ndarray.dtype": [[346, null]], "dpnp.ndarray.fill": [[347, null]], "dpnp.ndarray.flags": [[348, null]], "dpnp.ndarray.flat": [[349, null]], "dpnp.ndarray.flatten": [[350, null]], "dpnp.ndarray.imag": [[351, null]], "dpnp.ndarray.item": [[352, null]], "dpnp.ndarray.itemsize": [[353, null]], "dpnp.ndarray.mT": [[354, null]], "dpnp.ndarray.max": [[355, null]], "dpnp.ndarray.mean": [[356, null]], "dpnp.ndarray.min": [[357, null]], "dpnp.ndarray.nbytes": [[358, null]], "dpnp.ndarray.ndim": [[359, null]], "dpnp.ndarray.nonzero": [[360, null]], "dpnp.ndarray.partition": [[361, null]], "dpnp.ndarray.prod": [[362, null]], "dpnp.ndarray.put": [[363, null]], "dpnp.ndarray.ravel": [[364, null]], "dpnp.ndarray.real": [[365, null]], "dpnp.ndarray.repeat": [[366, null]], "dpnp.ndarray.reshape": [[367, null]], "dpnp.ndarray.round": [[368, null]], "dpnp.ndarray.searchsorted": [[369, null]], "dpnp.ndarray.shape": [[370, null]], "dpnp.ndarray.size": [[371, null]], "dpnp.ndarray.sort": [[372, null]], "dpnp.ndarray.squeeze": [[373, null]], "dpnp.ndarray.std": [[374, null]], "dpnp.ndarray.strides": [[375, null]], "dpnp.ndarray.sum": [[376, null]], "dpnp.ndarray.swapaxes": [[377, null]], "dpnp.ndarray.take": [[378, null]], "dpnp.ndarray.trace": [[379, null]], "dpnp.ndarray.transpose": [[380, null]], "dpnp.ndarray.var": [[381, null]], "dpnp.ndim": [[382, null]], "dpnp.negative": [[383, null]], "dpnp.nextafter": [[384, null]], "dpnp.nonzero": [[385, null]], "dpnp.not_equal": [[386, null]], "dpnp.ogrid": [[387, null]], "dpnp.ones": [[388, null]], "dpnp.ones_like": [[389, null]], "dpnp.outer": [[390, null]], "dpnp.pad": [[391, null]], "dpnp.partition": [[392, null]], "dpnp.permute_dims": [[393, null]], "dpnp.place": [[394, null]], "dpnp.positive": [[395, null]], "dpnp.pow": [[396, null]], "dpnp.power": [[397, null]], "dpnp.prod": [[398, null]], "dpnp.proj": [[399, null]], "dpnp.ptp": [[400, null]], "dpnp.put": [[401, null]], "dpnp.put_along_axis": [[402, null]], "dpnp.putmask": [[403, null]], "dpnp.rad2deg": [[404, null]], "dpnp.radians": [[405, null]], "dpnp.random.RandomState": [[406, null]], "dpnp.random.beta": [[407, null]], "dpnp.random.binomial": [[408, null]], "dpnp.random.bytes": [[409, null]], "dpnp.random.chisquare": [[410, null]], "dpnp.random.choice": [[411, null]], "dpnp.random.dirichlet": [[412, null]], "dpnp.random.exponential": [[413, null]], "dpnp.random.f": [[414, null]], "dpnp.random.gamma": [[415, null]], "dpnp.random.geometric": [[416, null]], "dpnp.random.gumbel": [[417, null]], "dpnp.random.hypergeometric": [[418, null]], "dpnp.random.laplace": [[419, null]], "dpnp.random.logistic": [[420, null]], "dpnp.random.lognormal": [[421, null]], "dpnp.random.logseries": [[422, null]], "dpnp.random.multinomial": [[423, null]], "dpnp.random.multivariate_normal": [[424, null]], "dpnp.random.negative_binomial": [[425, null]], "dpnp.random.noncentral_chisquare": [[426, null]], "dpnp.random.noncentral_f": [[427, null]], "dpnp.random.normal": [[428, null]], "dpnp.random.pareto": [[429, null]], "dpnp.random.permutation": [[430, null]], "dpnp.random.poisson": [[431, null]], "dpnp.random.power": [[432, null]], "dpnp.random.rand": [[433, null]], "dpnp.random.randint": [[434, null]], "dpnp.random.randn": [[435, null]], "dpnp.random.random": [[436, null]], "dpnp.random.random_integers": [[437, null]], "dpnp.random.random_sample": [[438, null]], "dpnp.random.ranf": [[439, null]], "dpnp.random.rayleigh": [[440, null]], "dpnp.random.sample": [[441, null]], "dpnp.random.seed": [[442, null]], "dpnp.random.shuffle": [[443, null]], "dpnp.random.standard_cauchy": [[444, null]], "dpnp.random.standard_exponential": [[445, null]], "dpnp.random.standard_gamma": [[446, null]], "dpnp.random.standard_normal": [[447, null]], "dpnp.random.standard_t": [[448, null]], "dpnp.random.triangular": [[449, null]], "dpnp.random.uniform": [[450, null]], "dpnp.random.vonmises": [[451, null]], "dpnp.random.wald": [[452, null]], "dpnp.random.weibull": [[453, null]], "dpnp.random.zipf": [[454, null]], "dpnp.ravel": [[455, null]], "dpnp.ravel_multi_index": [[456, null]], "dpnp.real": [[457, null]], "dpnp.real_if_close": [[458, null]], "dpnp.reciprocal": [[459, null]], "dpnp.reduce_hypot": [[460, null]], "dpnp.remainder": [[461, null]], "dpnp.repeat": [[462, null]], "dpnp.require": [[463, null]], "dpnp.reshape": [[464, null]], "dpnp.resize": [[465, null]], "dpnp.result_type": [[466, null]], "dpnp.right_shift": [[467, null]], "dpnp.rint": [[468, null]], "dpnp.roll": [[469, null]], "dpnp.rollaxis": [[470, null]], "dpnp.rot90": [[471, null]], "dpnp.round": [[472, null]], "dpnp.row_stack": [[473, null]], "dpnp.rsqrt": [[474, null]], "dpnp.searchsorted": [[475, null]], "dpnp.select": [[476, null]], "dpnp.shape": [[477, null]], "dpnp.sign": [[478, null]], "dpnp.signbit": [[479, null]], "dpnp.sin": [[480, null]], "dpnp.sinc": [[481, null]], "dpnp.sinh": [[482, null]], "dpnp.size": [[483, null]], "dpnp.sort": [[484, null]], "dpnp.sort_complex": [[485, null]], "dpnp.spacing": [[486, null]], "dpnp.split": [[487, null]], "dpnp.sqrt": [[488, null]], "dpnp.square": [[489, null]], "dpnp.squeeze": [[490, null]], "dpnp.stack": [[491, null]], "dpnp.std": [[492, null]], "dpnp.subtract": [[493, null]], "dpnp.sum": [[494, null]], "dpnp.swapaxes": [[495, null]], "dpnp.take": [[496, null]], "dpnp.take_along_axis": [[497, null]], "dpnp.tan": [[498, null]], "dpnp.tanh": [[499, null]], "dpnp.tensordot": [[500, null]], "dpnp.tile": [[501, null]], "dpnp.trace": [[502, null]], "dpnp.transpose": [[503, null]], "dpnp.trapezoid": [[504, null]], "dpnp.tri": [[505, null]], "dpnp.tril": [[506, null]], "dpnp.tril_indices": [[507, null]], "dpnp.tril_indices_from": [[508, null]], "dpnp.trim_zeros": [[509, null]], "dpnp.triu": [[510, null]], "dpnp.triu_indices": [[511, null]], "dpnp.triu_indices_from": [[512, null]], "dpnp.true_divide": [[513, null]], "dpnp.trunc": [[514, null]], "dpnp.unique": [[515, null]], "dpnp.unravel_index": [[516, null]], "dpnp.unstack": [[517, null]], "dpnp.unwrap": [[518, null]], "dpnp.vander": [[519, null]], "dpnp.var": [[520, null]], "dpnp.vdot": [[521, null]], "dpnp.vecdot": [[522, null]], "dpnp.vsplit": [[523, null]], "dpnp.vstack": [[524, null]], "dpnp.where": [[525, null]], "dpnp.zeros": [[526, null]], "dpnp.zeros_like": [[527, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[106, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[106, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[106, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[106, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[106, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[106, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[106, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[106, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[106, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[332, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[333, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[334, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[335, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[336, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[337, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[106, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[407, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[408, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[59, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[60, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[61, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[62, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[63, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[64, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[65, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[66, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[67, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[106, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[409, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[68, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[69, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[70, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[106, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[410, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[411, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[199, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[338, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[71, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[339, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[72, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[73, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[74, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[75, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[200, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[340, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[76, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[341, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[77, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[78, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[342, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[79, "dpnp.copy", false]], "copysign() (in module dpnp)": [[80, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[81, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[82, "dpnp.correlate", false]], "cos() (in module dpnp)": [[83, "dpnp.cos", false]], "cosh() (in module dpnp)": [[84, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[85, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[86, "dpnp.cov", false]], "cross() (in module dpnp)": [[87, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[201, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[88, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[343, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[89, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[344, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[90, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[91, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[92, "dpnp.degrees", false]], "delete() (in module dpnp)": [[93, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[106, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[202, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[94, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[95, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[96, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[97, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[345, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[98, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[203, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[99, "dpnp.diff", false]], "digitize() (in module dpnp)": [[100, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[412, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[101, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[102, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[103, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[104, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[105, "dpnp.dstack", false]], "dtype (class in dpnp)": [[106, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[346, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[107, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[204, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[205, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[206, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[207, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[108, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[109, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[110, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[111, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[112, "dpnp.equal", false]], "erf() (in module dpnp)": [[113, "dpnp.erf", false]], "exp() (in module dpnp)": [[114, "dpnp.exp", false]], "exp2() (in module dpnp)": [[115, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[116, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[117, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[413, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[118, "dpnp.extract", false]], "eye() (in module dpnp)": [[119, "dpnp.eye", false]], "f() (in module dpnp.random)": [[414, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[120, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[121, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[122, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[123, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[124, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[125, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[106, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[347, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[139, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[140, "dpnp.finfo", false]], "fix() (in module dpnp)": [[141, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[106, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[348, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[349, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[142, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[143, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[350, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[144, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[145, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[146, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[147, "dpnp.float_power", false]], "floor() (in module dpnp)": [[148, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[149, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[150, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[151, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[152, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[153, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[154, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[155, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[156, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[157, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[158, "dpnp.fromstring", false]], "full() (in module dpnp)": [[159, "dpnp.full", false]], "full_like() (in module dpnp)": [[160, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[415, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[161, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[416, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[162, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[163, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[164, "dpnp.gradient", false]], "greater() (in module dpnp)": [[165, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[166, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[417, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[106, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[167, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[126, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[168, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[169, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[170, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[171, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[418, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[172, "dpnp.hypot", false]], "identity() (in module dpnp)": [[173, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[127, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[128, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[129, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[130, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[131, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[174, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[351, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[175, "dpnp.imag", false]], "indices() (in module dpnp)": [[176, "dpnp.indices", false]], "inner() (in module dpnp)": [[177, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[208, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[178, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[132, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[133, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[134, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[106, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[106, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[179, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[180, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[181, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[182, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[183, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[184, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[185, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[106, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[186, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[187, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[188, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[189, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[190, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[191, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[352, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[106, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[353, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[192, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[106, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[193, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[419, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[194, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[195, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[196, "dpnp.left_shift", false]], "less() (in module dpnp)": [[197, "dpnp.less", false]], "less_equal() (in module dpnp)": [[198, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[229, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[230, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[231, "dpnp.log", false]], "log10() (in module dpnp)": [[232, "dpnp.log10", false]], "log1p() (in module dpnp)": [[233, "dpnp.log1p", false]], "log2() (in module dpnp)": [[234, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[235, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[236, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[237, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[238, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[239, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[240, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[420, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[421, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[422, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[241, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[242, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[209, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[243, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[244, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[210, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[211, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[212, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[213, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[245, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[355, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[246, "dpnp.max", false]], "maximum() (in module dpnp)": [[247, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[356, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[248, "dpnp.mean", false]], "median() (in module dpnp)": [[249, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[250, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[106, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[251, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[357, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[252, "dpnp.min", false]], "minimum() (in module dpnp)": [[253, "dpnp.minimum", false]], "mod() (in module dpnp)": [[254, "dpnp.mod", false]], "modf() (in module dpnp)": [[255, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[256, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[354, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[214, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[423, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[257, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[424, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[106, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[106, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[258, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[259, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[260, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[261, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[262, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[263, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[264, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[265, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[266, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[267, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[268, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[269, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[358, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[270, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[106, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[359, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[382, "dpnp.ndim", false]], "negative() (in module dpnp)": [[383, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[425, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[106, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[384, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[426, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[427, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[360, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[385, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[215, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[428, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[386, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[106, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[387, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[388, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[389, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[390, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[216, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[391, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[429, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[361, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[392, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[430, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[393, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[217, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[394, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[431, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[395, "dpnp.positive", false]], "pow() (in module dpnp)": [[396, "dpnp.pow", false]], "power() (in module dpnp)": [[397, "dpnp.power", false]], "power() (in module dpnp.random)": [[432, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[362, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[398, "dpnp.prod", false]], "proj() (in module dpnp)": [[399, "dpnp.proj", false]], "ptp() (in module dpnp)": [[400, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[363, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[401, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[402, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[403, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[218, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[404, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[405, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[433, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[434, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[435, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[436, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[437, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[438, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[406, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[439, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[364, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[455, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[456, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[440, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[365, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[457, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[458, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[459, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[460, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[461, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[366, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[462, "dpnp.repeat", false]], "require() (in module dpnp)": [[463, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[367, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[464, "dpnp.reshape", false]], "resize() (in module dpnp)": [[465, "dpnp.resize", false]], "result_type() (in module dpnp)": [[466, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[135, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[136, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[137, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[138, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[467, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[468, "dpnp.rint", false]], "roll() (in module dpnp)": [[469, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[470, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[471, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[368, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[472, "dpnp.round", false]], "row_stack() (in module dpnp)": [[473, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[474, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[441, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[369, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[475, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[442, "dpnp.random.seed", false]], "select() (in module dpnp)": [[476, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[106, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[370, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[477, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[443, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[478, "dpnp.sign", false]], "signbit() (in module dpnp)": [[479, "dpnp.signbit", false]], "sin() (in module dpnp)": [[480, "dpnp.sin", false]], "sinc() (in module dpnp)": [[481, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[482, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[371, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[483, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[219, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[220, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[372, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[484, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[485, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[486, "dpnp.spacing", false]], "split() (in module dpnp)": [[487, "dpnp.split", false]], "sqrt() (in module dpnp)": [[488, "dpnp.sqrt", false]], "square() (in module dpnp)": [[489, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[373, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[490, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[491, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[444, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[445, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[446, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[447, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[448, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[374, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[492, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[106, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[375, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[106, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[493, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[376, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[494, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[221, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[222, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[377, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[495, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[271, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[378, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[496, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[497, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[498, "dpnp.tan", false]], "tanh() (in module dpnp)": [[499, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[500, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[223, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[224, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[225, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[501, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[379, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[502, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[226, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[380, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[503, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[504, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[505, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[449, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[506, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[507, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[508, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[509, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[510, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[511, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[512, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[513, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[514, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[106, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[406, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[450, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[515, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[516, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[517, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[518, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[519, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[381, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[520, "dpnp.var", false]], "vdot() (in module dpnp)": [[521, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[522, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[227, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[228, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[451, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[523, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[524, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[452, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[453, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[525, "dpnp.where", false]], "zeros() (in module dpnp)": [[526, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[527, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[454, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_invert"], [60, 1, 1, "", "bitwise_left_shift"], [61, 1, 1, "", "bitwise_not"], [62, 1, 1, "", "bitwise_or"], [63, 1, 1, "", "bitwise_right_shift"], [64, 1, 1, "", "bitwise_xor"], [65, 1, 1, "", "broadcast_arrays"], [66, 1, 1, "", "broadcast_shapes"], [67, 1, 1, "", "broadcast_to"], [68, 1, 1, "", "can_cast"], [69, 1, 1, "", "cbrt"], [70, 1, 1, "", "ceil"], [71, 1, 1, "", "choose"], [72, 1, 1, "", "clip"], [73, 1, 1, "", "column_stack"], [74, 1, 1, "", "concat"], [75, 1, 1, "", "concatenate"], [76, 1, 1, "", "conj"], [77, 1, 1, "", "conjugate"], [78, 1, 1, "", "convolve"], [79, 1, 1, "", "copy"], [80, 1, 1, "", "copysign"], [81, 1, 1, "", "copyto"], [82, 1, 1, "", "correlate"], [83, 1, 1, "", "cos"], [84, 1, 1, "", "cosh"], [85, 1, 1, "", "count_nonzero"], [86, 1, 1, "", "cov"], [87, 1, 1, "", "cross"], [88, 1, 1, "", "cumlogsumexp"], [89, 1, 1, "", "cumprod"], [90, 1, 1, "", "cumsum"], [91, 1, 1, "", "deg2rad"], [92, 1, 1, "", "degrees"], [93, 1, 1, "", "delete"], [94, 1, 1, "", "diag"], [95, 1, 1, "", "diag_indices"], [96, 1, 1, "", "diag_indices_from"], [97, 1, 1, "", "diagflat"], [98, 1, 1, "", "diagonal"], [99, 1, 1, "", "diff"], [100, 1, 1, "", "digitize"], [101, 1, 1, "", "divide"], [102, 1, 1, "", "dot"], [104, 1, 1, "", "dsplit"], [105, 1, 1, "", "dstack"], [106, 2, 1, "", "dtype"], [107, 1, 1, "", "ediff1d"], [108, 1, 1, "", "einsum"], [109, 1, 1, "", "einsum_path"], [110, 1, 1, "", "empty"], [111, 1, 1, "", "empty_like"], [112, 1, 1, "", "equal"], [113, 1, 1, "", "erf"], [114, 1, 1, "", "exp"], [115, 1, 1, "", "exp2"], [116, 1, 1, "", "expand_dims"], [117, 1, 1, "", "expm1"], [118, 1, 1, "", "extract"], [119, 1, 1, "", "eye"], [120, 1, 1, "", "fabs"], [139, 1, 1, "", "fill_diagonal"], [140, 1, 1, "", "finfo"], [141, 1, 1, "", "fix"], [142, 2, 1, "", "flatiter"], [143, 1, 1, "", "flatnonzero"], [144, 1, 1, "", "flip"], [145, 1, 1, "", "fliplr"], [146, 1, 1, "", "flipud"], [147, 1, 1, "", "float_power"], [148, 1, 1, "", "floor"], [149, 1, 1, "", "floor_divide"], [150, 1, 1, "", "fmax"], [151, 1, 1, "", "fmin"], [152, 1, 1, "", "fmod"], [153, 1, 1, "", "from_dlpack"], [154, 1, 1, "", "frombuffer"], [155, 1, 1, "", "fromfile"], [156, 1, 1, "", "fromfunction"], [157, 1, 1, "", "fromiter"], [158, 1, 1, "", "fromstring"], [159, 1, 1, "", "full"], [160, 1, 1, "", "full_like"], [161, 1, 1, "", "gcd"], [162, 1, 1, "", "geomspace"], [163, 1, 1, "", "get_include"], [164, 1, 1, "", "gradient"], [165, 1, 1, "", "greater"], [166, 1, 1, "", "greater_equal"], [167, 1, 1, "", "heaviside"], [168, 1, 1, "", "histogram"], [169, 1, 1, "", "histogram_bin_edges"], [170, 1, 1, "", "hsplit"], [171, 1, 1, "", "hstack"], [172, 1, 1, "", "hypot"], [173, 1, 1, "", "identity"], [174, 1, 1, "", "iinfo"], [175, 1, 1, "", "imag"], [176, 1, 1, "", "indices"], [177, 1, 1, "", "inner"], [178, 1, 1, "", "invert"], [179, 1, 1, "", "isclose"], [180, 1, 1, "", "iscomplex"], [181, 1, 1, "", "iscomplexobj"], [182, 1, 1, "", "isfinite"], [183, 1, 1, "", "isfortran"], [184, 1, 1, "", "isinf"], [185, 1, 1, "", "isnan"], [186, 1, 1, "", "isneginf"], [187, 1, 1, "", "isposinf"], [188, 1, 1, "", "isreal"], [189, 1, 1, "", "isrealobj"], [190, 1, 1, "", "isscalar"], [191, 1, 1, "", "issubdtype"], [192, 1, 1, "", "ix_"], [193, 1, 1, "", "kron"], [194, 1, 1, "", "lcm"], [195, 1, 1, "", "ldexp"], [196, 1, 1, "", "left_shift"], [197, 1, 1, "", "less"], [198, 1, 1, "", "less_equal"], [229, 1, 1, "", "linspace"], [230, 1, 1, "", "loadtxt"], [231, 1, 1, "", "log"], [232, 1, 1, "", "log10"], [233, 1, 1, "", "log1p"], [234, 1, 1, "", "log2"], [235, 1, 1, "", "logaddexp"], [236, 1, 1, "", "logaddexp2"], [237, 1, 1, "", "logical_and"], [238, 1, 1, "", "logical_not"], [239, 1, 1, "", "logical_or"], [240, 1, 1, "", "logical_xor"], [241, 1, 1, "", "logspace"], [242, 1, 1, "", "logsumexp"], [243, 1, 1, "", "mask_indices"], [244, 1, 1, "", "matmul"], [245, 1, 1, "", "matrix_transpose"], [246, 1, 1, "", "max"], [247, 1, 1, "", "maximum"], [248, 1, 1, "", "mean"], [249, 1, 1, "", "median"], [250, 1, 1, "", "meshgrid"], [251, 5, 1, "", "mgrid"], [252, 1, 1, "", "min"], [253, 1, 1, "", "minimum"], [254, 1, 1, "", "mod"], [255, 1, 1, "", "modf"], [256, 1, 1, "", "moveaxis"], [257, 1, 1, "", "multiply"], [258, 1, 1, "", "nan_to_num"], [259, 1, 1, "", "nanargmax"], [260, 1, 1, "", "nanargmin"], [261, 1, 1, "", "nancumprod"], [262, 1, 1, "", "nancumsum"], [263, 1, 1, "", "nanmax"], [264, 1, 1, "", "nanmean"], [265, 1, 1, "", "nanmin"], [266, 1, 1, "", "nanprod"], [267, 1, 1, "", "nanstd"], [268, 1, 1, "", "nansum"], [269, 1, 1, "", "nanvar"], [270, 3, 1, "", "ndarray"], [382, 1, 1, "", "ndim"], [383, 1, 1, "", "negative"], [384, 1, 1, "", "nextafter"], [385, 1, 1, "", "nonzero"], [386, 1, 1, "", "not_equal"], [387, 5, 1, "", "ogrid"], [388, 1, 1, "", "ones"], [389, 1, 1, "", "ones_like"], [390, 1, 1, "", "outer"], [391, 1, 1, "", "pad"], [392, 1, 1, "", "partition"], [393, 1, 1, "", "permute_dims"], [394, 1, 1, "", "place"], [395, 1, 1, "", "positive"], [396, 1, 1, "", "pow"], [397, 1, 1, "", "power"], [398, 1, 1, "", "prod"], [399, 1, 1, "", "proj"], [400, 1, 1, "", "ptp"], [401, 1, 1, "", "put"], [402, 1, 1, "", "put_along_axis"], [403, 1, 1, "", "putmask"], [404, 1, 1, "", "rad2deg"], [405, 1, 1, "", "radians"], [455, 1, 1, "", "ravel"], [456, 1, 1, "", "ravel_multi_index"], [457, 1, 1, "", "real"], [458, 1, 1, "", "real_if_close"], [459, 1, 1, "", "reciprocal"], [460, 1, 1, "", "reduce_hypot"], [461, 1, 1, "", "remainder"], [462, 1, 1, "", "repeat"], [463, 1, 1, "", "require"], [464, 1, 1, "", "reshape"], [465, 1, 1, "", "resize"], [466, 1, 1, "", "result_type"], [467, 1, 1, "", "right_shift"], [468, 1, 1, "", "rint"], [469, 1, 1, "", "roll"], [470, 1, 1, "", "rollaxis"], [471, 1, 1, "", "rot90"], [472, 1, 1, "", "round"], [473, 1, 1, "", "row_stack"], [474, 1, 1, "", "rsqrt"], [475, 1, 1, "", "searchsorted"], [476, 1, 1, "", "select"], [477, 1, 1, "", "shape"], [478, 1, 1, "", "sign"], [479, 1, 1, "", "signbit"], [480, 1, 1, "", "sin"], [481, 1, 1, "", "sinc"], [482, 1, 1, "", "sinh"], [483, 1, 1, "", "size"], [484, 1, 1, "", "sort"], [485, 1, 1, "", "sort_complex"], [486, 1, 1, "", "spacing"], [487, 1, 1, "", "split"], [488, 1, 1, "", "sqrt"], [489, 1, 1, "", "square"], [490, 1, 1, "", "squeeze"], [491, 1, 1, "", "stack"], [492, 1, 1, "", "std"], [493, 1, 1, "", "subtract"], [494, 1, 1, "", "sum"], [495, 1, 1, "", "swapaxes"], [496, 1, 1, "", "take"], [497, 1, 1, "", "take_along_axis"], [498, 1, 1, "", "tan"], [499, 1, 1, "", "tanh"], [500, 1, 1, "", "tensordot"], [501, 1, 1, "", "tile"], [502, 1, 1, "", "trace"], [503, 1, 1, "", "transpose"], [504, 1, 1, "", "trapezoid"], [505, 1, 1, "", "tri"], [506, 1, 1, "", "tril"], [507, 1, 1, "", "tril_indices"], [508, 1, 1, "", "tril_indices_from"], [509, 1, 1, "", "trim_zeros"], [510, 1, 1, "", "triu"], [511, 1, 1, "", "triu_indices"], [512, 1, 1, "", "triu_indices_from"], [513, 1, 1, "", "true_divide"], [514, 1, 1, "", "trunc"], [515, 1, 1, "", "unique"], [516, 1, 1, "", "unravel_index"], [517, 1, 1, "", "unstack"], [518, 1, 1, "", "unwrap"], [519, 1, 1, "", "vander"], [520, 1, 1, "", "var"], [521, 1, 1, "", "vdot"], [522, 1, 1, "", "vecdot"], [523, 1, 1, "", "vsplit"], [524, 1, 1, "", "vstack"], [525, 1, 1, "", "where"], [526, 1, 1, "", "zeros"], [527, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[103, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[103, 3, 1, "", "T"], [103, 4, 1, "", "__eq__"], [103, 4, 1, "", "__ge__"], [103, 4, 1, "", "__getitem__"], [103, 4, 1, "", "__gt__"], [103, 4, 1, "", "__le__"], [103, 4, 1, "", "__len__"], [103, 4, 1, "", "__lt__"], [103, 4, 1, "", "__ne__"], [103, 4, 1, "", "__setitem__"], [103, 4, 1, "", "all"], [103, 4, 1, "", "any"], [103, 4, 1, "", "argmax"], [103, 4, 1, "", "argmin"], [103, 4, 1, "", "argsort"], [103, 4, 1, "", "asnumpy"], [103, 4, 1, "", "astype"], [103, 4, 1, "", "choose"], [103, 4, 1, "", "clip"], [103, 4, 1, "", "conj"], [103, 4, 1, "", "conjugate"], [103, 4, 1, "", "copy"], [103, 4, 1, "", "cumprod"], [103, 4, 1, "", "cumsum"], [103, 3, 1, "", "device"], [103, 4, 1, "", "diagonal"], [103, 4, 1, "", "dot"], [103, 3, 1, "", "dtype"], [103, 4, 1, "", "fill"], [103, 3, 1, "", "flags"], [103, 3, 1, "", "flat"], [103, 4, 1, "", "flatten"], [103, 4, 1, "", "get_array"], [103, 3, 1, "", "imag"], [103, 4, 1, "", "item"], [103, 3, 1, "", "itemsize"], [103, 3, 1, "", "mT"], [103, 4, 1, "", "max"], [103, 4, 1, "", "mean"], [103, 4, 1, "", "min"], [103, 3, 1, "", "nbytes"], [103, 3, 1, "", "ndim"], [103, 4, 1, "", "nonzero"], [103, 4, 1, "", "partition"], [103, 4, 1, "", "prod"], [103, 4, 1, "", "put"], [103, 4, 1, "", "ravel"], [103, 3, 1, "", "real"], [103, 4, 1, "", "repeat"], [103, 4, 1, "", "reshape"], [103, 4, 1, "", "round"], [103, 4, 1, "", "searchsorted"], [103, 3, 1, "", "shape"], [103, 3, 1, "", "size"], [103, 4, 1, "", "sort"], [103, 4, 1, "", "squeeze"], [103, 4, 1, "", "std"], [103, 3, 1, "", "strides"], [103, 4, 1, "", "sum"], [103, 4, 1, "", "swapaxes"], [103, 3, 1, "", "sycl_context"], [103, 3, 1, "", "sycl_device"], [103, 3, 1, "", "sycl_queue"], [103, 4, 1, "", "take"], [103, 4, 1, "", "to_device"], [103, 4, 1, "", "trace"], [103, 4, 1, "", "transpose"], [103, 3, 1, "", "usm_type"], [103, 4, 1, "", "var"]], "dpnp.dtype": [[106, 4, 1, "", "__eq__"], [106, 4, 1, "", "__ge__"], [106, 4, 1, "", "__getitem__"], [106, 4, 1, "", "__gt__"], [106, 4, 1, "", "__le__"], [106, 4, 1, "", "__len__"], [106, 4, 1, "", "__lt__"], [106, 4, 1, "", "__ne__"], [106, 3, 1, "", "alignment"], [106, 3, 1, "", "base"], [106, 3, 1, "", "byteorder"], [106, 3, 1, "", "char"], [106, 3, 1, "", "descr"], [106, 3, 1, "", "fields"], [106, 3, 1, "", "flags"], [106, 3, 1, "", "hasobject"], [106, 3, 1, "", "isalignedstruct"], [106, 3, 1, "", "isbuiltin"], [106, 3, 1, "", "isnative"], [106, 3, 1, "", "itemsize"], [106, 3, 1, "", "kind"], [106, 3, 1, "", "metadata"], [106, 3, 1, "", "name"], [106, 3, 1, "", "names"], [106, 3, 1, "", "ndim"], [106, 4, 1, "", "newbyteorder"], [106, 3, 1, "", "num"], [106, 3, 1, "", "shape"], [106, 3, 1, "", "str"], [106, 3, 1, "", "subdtype"], [106, 3, 1, "", "type"]], "dpnp.fft": [[121, 1, 1, "", "fft"], [122, 1, 1, "", "fft2"], [123, 1, 1, "", "fftfreq"], [124, 1, 1, "", "fftn"], [125, 1, 1, "", "fftshift"], [126, 1, 1, "", "hfft"], [127, 1, 1, "", "ifft"], [128, 1, 1, "", "ifft2"], [129, 1, 1, "", "ifftn"], [130, 1, 1, "", "ifftshift"], [131, 1, 1, "", "ihfft"], [132, 1, 1, "", "irfft"], [133, 1, 1, "", "irfft2"], [134, 1, 1, "", "irfftn"], [135, 1, 1, "", "rfft"], [136, 1, 1, "", "rfft2"], [137, 1, 1, "", "rfftfreq"], [138, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[142, 4, 1, "", "__eq__"], [142, 4, 1, "", "__ge__"], [142, 4, 1, "", "__getitem__"], [142, 4, 1, "", "__gt__"], [142, 4, 1, "", "__iter__"], [142, 4, 1, "", "__le__"], [142, 4, 1, "", "__lt__"], [142, 4, 1, "", "__ne__"], [142, 4, 1, "", "__next__"], [142, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[199, 1, 1, "", "cholesky"], [200, 1, 1, "", "cond"], [201, 1, 1, "", "cross"], [202, 1, 1, "", "det"], [203, 1, 1, "", "diagonal"], [204, 1, 1, "", "eig"], [205, 1, 1, "", "eigh"], [206, 1, 1, "", "eigvals"], [207, 1, 1, "", "eigvalsh"], [208, 1, 1, "", "inv"], [209, 1, 1, "", "lstsq"], [210, 1, 1, "", "matmul"], [211, 1, 1, "", "matrix_norm"], [212, 1, 1, "", "matrix_power"], [213, 1, 1, "", "matrix_rank"], [214, 1, 1, "", "multi_dot"], [215, 1, 1, "", "norm"], [216, 1, 1, "", "outer"], [217, 1, 1, "", "pinv"], [218, 1, 1, "", "qr"], [219, 1, 1, "", "slogdet"], [220, 1, 1, "", "solve"], [221, 1, 1, "", "svd"], [222, 1, 1, "", "svdvals"], [223, 1, 1, "", "tensordot"], [224, 1, 1, "", "tensorinv"], [225, 1, 1, "", "tensorsolve"], [226, 1, 1, "", "trace"], [227, 1, 1, "", "vecdot"], [228, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[271, 6, 1, "", "T"], [272, 4, 1, "", "__abs__"], [273, 4, 1, "", "__add__"], [274, 4, 1, "", "__and__"], [275, 4, 1, "", "__bool__"], [276, 4, 1, "", "__complex__"], [277, 4, 1, "", "__copy__"], [278, 4, 1, "", "__eq__"], [279, 4, 1, "", "__float__"], [280, 4, 1, "", "__floordiv__"], [281, 4, 1, "", "__ge__"], [282, 4, 1, "", "__getitem__"], [283, 4, 1, "", "__gt__"], [284, 4, 1, "", "__iadd__"], [285, 4, 1, "", "__iand__"], [286, 4, 1, "", "__ifloordiv__"], [287, 4, 1, "", "__ilshift__"], [288, 4, 1, "", "__imatmul__"], [289, 4, 1, "", "__imod__"], [290, 4, 1, "", "__imul__"], [291, 4, 1, "", "__int__"], [292, 4, 1, "", "__invert__"], [293, 4, 1, "", "__ior__"], [294, 4, 1, "", "__ipow__"], [295, 4, 1, "", "__irshift__"], [296, 4, 1, "", "__isub__"], [297, 4, 1, "", "__itruediv__"], [298, 4, 1, "", "__ixor__"], [299, 4, 1, "", "__le__"], [300, 4, 1, "", "__len__"], [301, 4, 1, "", "__lshift__"], [302, 4, 1, "", "__lt__"], [303, 4, 1, "", "__matmul__"], [304, 4, 1, "", "__mod__"], [305, 4, 1, "", "__mul__"], [306, 4, 1, "", "__ne__"], [307, 4, 1, "", "__neg__"], [308, 4, 1, "", "__new__"], [309, 4, 1, "", "__or__"], [310, 4, 1, "", "__pos__"], [311, 4, 1, "", "__pow__"], [312, 4, 1, "", "__radd__"], [313, 4, 1, "", "__rand__"], [314, 4, 1, "", "__repr__"], [315, 4, 1, "", "__rfloordiv__"], [316, 4, 1, "", "__rlshift__"], [317, 4, 1, "", "__rmatmul__"], [318, 4, 1, "", "__rmod__"], [319, 4, 1, "", "__rmul__"], [320, 4, 1, "", "__ror__"], [321, 4, 1, "", "__rpow__"], [322, 4, 1, "", "__rrshift__"], [323, 4, 1, "", "__rshift__"], [324, 4, 1, "", "__rsub__"], [325, 4, 1, "", "__rtruediv__"], [326, 4, 1, "", "__rxor__"], [327, 4, 1, "", "__setitem__"], [328, 4, 1, "", "__str__"], [329, 4, 1, "", "__sub__"], [330, 4, 1, "", "__truediv__"], [331, 4, 1, "", "__xor__"], [332, 4, 1, "", "all"], [333, 4, 1, "", "any"], [334, 4, 1, "", "argmax"], [335, 4, 1, "", "argmin"], [336, 4, 1, "", "argsort"], [337, 4, 1, "", "astype"], [338, 4, 1, "", "choose"], [339, 4, 1, "", "clip"], [340, 4, 1, "", "conj"], [341, 4, 1, "", "conjugate"], [342, 4, 1, "", "copy"], [343, 4, 1, "", "cumprod"], [344, 4, 1, "", "cumsum"], [345, 4, 1, "", "diagonal"], [346, 6, 1, "", "dtype"], [347, 4, 1, "", "fill"], [348, 6, 1, "", "flags"], [349, 6, 1, "", "flat"], [350, 4, 1, "", "flatten"], [351, 6, 1, "", "imag"], [352, 4, 1, "", "item"], [353, 6, 1, "", "itemsize"], [354, 6, 1, "", "mT"], [355, 4, 1, "", "max"], [356, 4, 1, "", "mean"], [357, 4, 1, "", "min"], [358, 6, 1, "", "nbytes"], [359, 6, 1, "", "ndim"], [360, 4, 1, "", "nonzero"], [361, 4, 1, "", "partition"], [362, 4, 1, "", "prod"], [363, 4, 1, "", "put"], [364, 4, 1, "", "ravel"], [365, 6, 1, "", "real"], [366, 4, 1, "", "repeat"], [367, 4, 1, "", "reshape"], [368, 4, 1, "", "round"], [369, 4, 1, "", "searchsorted"], [370, 6, 1, "", "shape"], [371, 6, 1, "", "size"], [372, 4, 1, "", "sort"], [373, 4, 1, "", "squeeze"], [374, 4, 1, "", "std"], [375, 6, 1, "", "strides"], [376, 4, 1, "", "sum"], [377, 4, 1, "", "swapaxes"], [378, 4, 1, "", "take"], [379, 4, 1, "", "trace"], [380, 4, 1, "", "transpose"], [381, 4, 1, "", "var"]], "dpnp.random": [[406, 2, 1, "", "RandomState"], [407, 1, 1, "", "beta"], [408, 1, 1, "", "binomial"], [409, 1, 1, "", "bytes"], [410, 1, 1, "", "chisquare"], [411, 1, 1, "", "choice"], [412, 1, 1, "", "dirichlet"], [413, 1, 1, "", "exponential"], [414, 1, 1, "", "f"], [415, 1, 1, "", "gamma"], [416, 1, 1, "", "geometric"], [417, 1, 1, "", "gumbel"], [418, 1, 1, "", "hypergeometric"], [419, 1, 1, "", "laplace"], [420, 1, 1, "", "logistic"], [421, 1, 1, "", "lognormal"], [422, 1, 1, "", "logseries"], [423, 1, 1, "", "multinomial"], [424, 1, 1, "", "multivariate_normal"], [425, 1, 1, "", "negative_binomial"], [426, 1, 1, "", "noncentral_chisquare"], [427, 1, 1, "", "noncentral_f"], [428, 1, 1, "", "normal"], [429, 1, 1, "", "pareto"], [430, 1, 1, "", "permutation"], [431, 1, 1, "", "poisson"], [432, 1, 1, "", "power"], [433, 1, 1, "", "rand"], [434, 1, 1, "", "randint"], [435, 1, 1, "", "randn"], [436, 1, 1, "", "random"], [437, 1, 1, "", "random_integers"], [438, 1, 1, "", "random_sample"], [439, 1, 1, "", "ranf"], [440, 1, 1, "", "rayleigh"], [441, 1, 1, "", "sample"], [442, 1, 1, "", "seed"], [443, 1, 1, "", "shuffle"], [444, 1, 1, "", "standard_cauchy"], [445, 1, 1, "", "standard_exponential"], [446, 1, 1, "", "standard_gamma"], [447, 1, 1, "", "standard_normal"], [448, 1, 1, "", "standard_t"], [449, 1, 1, "", "triangular"], [450, 1, 1, "", "uniform"], [451, 1, 1, "", "vonmises"], [452, 1, 1, "", "wald"], [453, 1, 1, "", "weibull"], [454, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[406, 4, 1, "", "__eq__"], [406, 4, 1, "", "__ge__"], [406, 4, 1, "", "__gt__"], [406, 4, 1, "", "__le__"], [406, 4, 1, "", "__lt__"], [406, 4, 1, "", "__ne__"], [406, 4, 1, "", "get_state"], [406, 4, 1, "", "get_sycl_device"], [406, 4, 1, "", "get_sycl_queue"], [406, 4, 1, "", "normal"], [406, 4, 1, "", "rand"], [406, 4, 1, "", "randint"], [406, 4, 1, "", "randn"], [406, 4, 1, "", "random_sample"], [406, 4, 1, "", "standard_normal"], [406, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 87, 90, 103, 106, 107, 122, 124, 126, 128, 129, 131, 133, 134, 136, 138, 139, 154, 155, 209, 213, 215, 217, 221, 222, 223, 346, 380, 406, 407, 408, 413, 414, 415, 417, 418, 419, 420, 421, 423, 425, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 464, 500, 501, 535], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 164, 167, 168, 169, 170, 173, 176, 177, 179, 182, 184, 185, 186, 187, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 342, 345, 347, 351, 352, 354, 365, 368, 370, 372, 374, 379, 380, 381, 382, 385, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 413, 415, 416, 417, 419, 420, 421, 423, 424, 425, 428, 430, 431, 432, 433, 436, 438, 439, 440, 441, 444, 447, 449, 450, 451, 456, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 525, 526, 527, 535], "00": [83, 109, 121, 480], "000": [258, 408], "00000000005e": 117, "00000000e": [121, 258], "000000082740371e": 117, "000000e": [83, 480], "00001e10": [17, 179], "0001e10": 179, "000e": 109, "000j": 258, "002": 258, "00867716": 410, "01": 109, "02": [109, 258], "03": 258, "03088525e": 110, "0396842": 241, "04": 109, "04719755": 405, "04921661": 406, "04923628": 481, "05": [17, 109, 179], "05846808": 481, "0614962j": [122, 136], "06310682": 406, "06682066": 481, "07": 258, "07944154": [88, 219], "08": [17, 83, 109, 147, 179, 424, 480], "08156915": 406, "08409186": 481, "08504448": 481, "08903844": 481, "0943951": 405, "09640474": 236, "09861229": [88, 219, 233], "0d": 34, "0dev1": 6, "0j": [20, 102, 103, 180, 181, 188, 189, 210, 244, 351, 365, 478], "0th": [223, 500], "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 181, 183, 188, 189, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 336, 337, 342, 345, 347, 350, 351, 352, 354, 359, 361, 365, 370, 372, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 410, 411, 413, 415, 417, 419, 420, 421, 423, 424, 425, 428, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 445, 447, 450, 455, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 535], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 60, 63, 72, 79, 88, 89, 90, 93, 95, 96, 99, 100, 103, 104, 106, 108, 109, 117, 118, 125, 137, 159, 162, 168, 169, 170, 175, 179, 192, 193, 195, 196, 226, 227, 231, 232, 233, 234, 241, 242, 249, 257, 367, 391, 400, 402, 406, 408, 418, 430, 460, 466, 467, 469, 472, 475, 487, 491, 497, 506, 507, 508, 510, 511, 512, 517, 522, 523, 525], "100": [95, 137, 162, 179, 193, 214, 241, 391, 418, 444, 458, 518], "1000": [68, 162, 214, 241, 407, 408, 413, 415, 417, 418, 419, 420, 421, 428, 429, 432, 434, 436, 439, 441, 447, 451, 452, 453, 454, 458, 504], "10000": [90, 214, 416, 431, 440, 450], "100000": 425, "1000000": [444, 446, 448, 449], "1024": 0, "10394325": 481, "105": 109, "11": [31, 32, 56, 84, 93, 95, 96, 103, 104, 118, 164, 170, 215, 226, 367, 425, 434, 472, 475, 482, 506, 507, 508, 510, 511, 512, 517, 523, 525], "110": [108, 177], "111111": 258, "113": 235, "11570901": 406, "11643488": 481, "1179187": 406, "118033988749895": 492, "119": 108, "1196081": 406, "12": [10, 31, 32, 55, 87, 92, 93, 95, 96, 100, 104, 106, 108, 118, 122, 136, 161, 170, 175, 194, 222, 241, 398, 400, 405, 430, 456, 475, 506, 507, 508, 510, 511, 512, 517, 523, 525], "120": [89, 92], "123": [103, 109, 352], "125": [147, 396, 397, 519], "12613779": 481, "127": 162, "128": [0, 162, 258], "12th": 108, "13": [10, 31, 32, 59, 61, 95, 96, 102, 104, 106, 108, 170, 178, 210, 244, 456, 475, 507, 508, 511, 512, 516, 517, 523], "130": 108, "134": 177, "13436424": 406, "135": [29, 51], "13710533": 410, "139884456208480": 16, "13j": 458, "14": [31, 32, 58, 59, 61, 95, 96, 102, 104, 141, 170, 177, 178, 223, 475, 500, 507, 508, 511, 512, 517, 523], "140": 518, "140053638309840": 21, "14157194": 504, "14159265": [13, 24, 29, 51, 91, 405], "14423775e": 121, "14j": 458, "15": [31, 32, 90, 95, 96, 100, 104, 108, 126, 131, 170, 215, 232, 430, 475, 507, 508, 511, 512, 517, 523], "150": 92, "15591488": 481, "15888336": 241, "15j": 458, "16": [6, 58, 95, 96, 104, 106, 121, 147, 157, 162, 164, 170, 228, 257, 396, 397, 458, 476, 498, 507, 508, 511, 512, 517, 523], "1621": [456, 516], "16227766": [200, 460], "16394577": 406, "164": 236, "166": 236, "16j": 121, "17": [6, 121, 122, 136, 517], "17157288": [205, 207], "17281316e": 121, "177": [162, 241], "17j": 121, "18": [6, 89, 106, 107, 108, 124, 201, 211, 215, 241, 517], "180": [29, 51, 91, 92, 108, 404, 518, 542], "1805": 10, "18236388": 406, "18557831": 406, "1887902": 405, "18920668": 481, "19": [10, 85, 106, 456, 517, 518], "1923875335537315": 435, "19245009": 474, "1924881e": 147, "1965": 10, "19722458": 88, "1985": 215, "1d": [107, 401, 402, 497, 504], "1e": [17, 117, 179, 204, 232, 233, 235, 236, 424], "1e10": [17, 179], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 76, 77, 103, 132, 175, 180, 188, 204, 216, 221, 351, 365, 390, 457, 485, 489], "1th": [223, 500], "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 180, 183, 188, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 337, 342, 345, 347, 350, 352, 354, 359, 361, 370, 371, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 410, 414, 418, 424, 430, 433, 435, 446, 448, 449, 452, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 479, 480, 482, 483, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527], "20": [6, 60, 89, 100, 108, 137, 161, 176, 179, 193, 194, 195, 196, 215, 402, 408, 423, 475, 497, 517, 518], "20000": 408, "2007": 10, "200e": 109, "20477401j": [122, 136], "2048": 0, "21": [90, 106, 517], "210": 92, "215": 241, "21623621": 481, "21941987": 406, "21968665": 406, "22": [401, 456, 516, 517], "220": 518, "220446049250313e": 458, "222222": 258, "22460635e": 498, "22464680e": 121, "22497216": 215, "22776602": 241, "23": [6, 406, 456, 517], "230": 108, "23387232": 481, "23598776": 405, "23606798": 215, "24": [31, 32, 87, 89, 103, 107, 108, 177, 193, 201, 223, 224, 226, 370, 398, 500, 502, 517], "240": 92, "24264069": 215, "24544512": 406, "247219128924647": 267, "25": [106, 108, 113, 123, 164, 168, 169, 208, 229, 257, 269, 435, 444, 476, 519, 520], "255": [58, 62], "25506903": 406, "256": [0, 162], "26": [64, 108], "260": 518, "26618007j": 234, "27": [69, 147, 241, 396, 397, 474, 519], "270": 92, "276": 6, "28": 108, "28000000e": 258, "2800000e": 258, "283185307179586": 518, "28318531": 518, "28352814": 406, "28904982": 236, "297": 10, "299": 6, "2d": [221, 244, 471, 515], "2e": 90, "2f": 0, "2j": [76, 77, 102, 121, 175, 180, 188, 205, 207, 210, 244, 457, 478, 485, 521], "2k": 518, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 133, 134, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 162, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 183, 188, 189, 190, 192, 193, 196, 200, 201, 202, 203, 204, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 342, 345, 350, 352, 354, 359, 361, 370, 371, 372, 380, 382, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 401, 405, 406, 410, 414, 421, 424, 430, 433, 434, 435, 445, 449, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 479, 483, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "30": [87, 92, 103, 108, 137, 371, 402, 405, 497, 521], "300": [92, 518], "3003003": 459, "301": 10, "30102999566": 232, "3012989": 482, "30258509": [88, 242], "308": 258, "308j": 258, "31": [64, 162, 456, 516], "312": 110, "316": 241, "32": [106, 108, 162, 223, 266, 268, 500], "33": 459, "330": 92, "333": 214, "33333333": 258, "3333333e": 258, "33340275": 504, "33486982e": 121, "33836967": 406, "340": 518, "34074171": 406, "34132519": 241, "34846923": [211, 215], "34960421": 241, "35": [108, 416], "35106603e": [211, 215], "35348576": 228, "35355338": 474, "36": 87, "360": 518, "37": [456, 472, 516], "371139e": 83, "38": [177, 408], "380": 518, "38268343": 205, "38268343j": 205, "38629436": 88, "38885": 408, "389056099": [114, 117], "39": 6, "39295758": 406, "397": 6, "3e": [0, 90, 458], "3j": [102, 210, 244, 485], "3rd": [74, 75, 104, 487], "3x3": 243, "3x8000": 445, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 62, 65, 72, 73, 74, 75, 78, 81, 83, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 143, 144, 147, 149, 150, 151, 155, 156, 157, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 180, 183, 188, 192, 193, 195, 198, 201, 202, 203, 208, 210, 211, 212, 213, 215, 219, 222, 223, 224, 225, 226, 228, 229, 234, 237, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 259, 260, 262, 264, 267, 269, 342, 345, 350, 354, 359, 361, 370, 372, 380, 382, 385, 387, 389, 391, 393, 396, 397, 398, 400, 401, 405, 406, 407, 410, 430, 435, 451, 455, 456, 457, 458, 461, 462, 464, 465, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 487, 488, 491, 492, 493, 495, 496, 500, 501, 503, 504, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 527], "40": [60, 108, 137, 195, 196, 402, 497], "401": 6, "40882036": 406, "4096": 0, "41": [456, 481, 516], "41421356": [200, 215], "42": 476, "420": 518, "429": 6, "44": [394, 401], "4400": [108, 223, 500], "443469": 241, "44509285e": 121, "45": [20, 29, 51, 228], "4532": [108, 223, 500], "46": 108, "460": 518, "46394577": 406, "464": 241, "4664": [108, 223, 500], "47": 6, "4730": [108, 223, 500], "4796": [108, 223, 500], "48": [6, 87], "48093112": 406, "4874": [108, 223, 500], "48927254": 406, "49": 6, "4928": [108, 223, 500], "49543509": 406, "49778714": 518, "499128": 102, "4d": 221, "4e": 458, "4j": [175, 457, 521], "4x4": [507, 511], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 66, 70, 72, 74, 75, 78, 81, 82, 85, 87, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 113, 118, 122, 123, 125, 133, 136, 137, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 161, 162, 164, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 183, 188, 192, 193, 195, 196, 199, 201, 203, 205, 207, 208, 214, 215, 216, 220, 223, 226, 227, 228, 229, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 264, 267, 337, 342, 352, 354, 371, 382, 385, 387, 388, 389, 390, 391, 393, 396, 397, 400, 401, 405, 406, 407, 408, 410, 413, 425, 429, 430, 431, 432, 435, 438, 453, 455, 456, 457, 458, 459, 461, 464, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 483, 485, 487, 491, 492, 494, 495, 496, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527], "50": [122, 136, 137, 162, 193, 223, 235, 236, 241, 402, 497, 500, 504, 525], "500": [193, 518], "5018": [108, 223, 500], "50455115": 481, "5091786": 84, "51": 6, "512": 0, "5162": [108, 223, 500], "52069395e": 121, "52359878": 405, "52928804": 406, "5306": [108, 223, 500], "5399045e": 147, "54": 406, "540": 518, "542": 6, "54288406": 406, "54465213": 406, "548739": 482, "54930614": [30, 52], "55": [394, 401, 476], "5555555555555554": 269, "56": 6, "562": 241, "5620499351813308": [11, 12], "56920387": 406, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 405, 518], "58997253": 406, "591953": 84, "5e": [235, 236], "5j": [251, 387, 485], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 39, 53, 56, 62, 64, 66, 72, 74, 75, 81, 87, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 117, 118, 123, 126, 137, 144, 147, 160, 161, 164, 170, 171, 175, 176, 177, 183, 192, 193, 194, 201, 203, 211, 215, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 241, 243, 245, 249, 261, 262, 266, 342, 352, 354, 370, 382, 385, 389, 391, 394, 396, 397, 400, 406, 423, 425, 430, 435, 455, 456, 457, 463, 464, 469, 470, 471, 472, 473, 476, 483, 485, 487, 491, 493, 494, 495, 496, 500, 502, 504, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 521, 522, 523, 524, 525, 527], "60": [87, 92, 108, 194, 223, 402, 497, 500, 518, 525], "600": 193, "60943791": 88, "61799388": 405, "62": 177, "6227766": 162, "62318272": 410, "62341325": 162, "624": 109, "63": 162, "63317787e": 498, "63522211": 406, "63836967": 406, "64": [0, 4, 108, 147, 162, 266, 268, 396, 397, 472], "64000": 108, "65745445": [14, 25], "66519143": 405, "6666666666666665": 264, "67": 108, "67305985": 154, "673174": 406, "67718303": 406, "69295758": 406, "69314718": [88, 219, 233], "6990877": 406, "6j": [175, 457, 521], "7": [6, 15, 17, 22, 23, 39, 53, 66, 70, 72, 81, 85, 87, 90, 93, 94, 95, 96, 98, 99, 101, 103, 104, 107, 114, 118, 144, 148, 162, 164, 170, 177, 179, 192, 193, 203, 211, 215, 221, 223, 226, 228, 243, 245, 249, 254, 257, 352, 354, 385, 391, 399, 400, 406, 430, 456, 457, 461, 466, 468, 469, 471, 487, 493, 494, 495, 496, 500, 506, 507, 508, 510, 511, 512, 513, 514, 516, 517, 518, 521, 523, 525], "70": [193, 521, 525], "700": 193, "700e": 109, "70710677": [103, 351, 365], "70710678": [200, 204], "70710678j": 204, "70882036": 406, "71238898": 405, "718281828": [114, 117], "72": 87, "720": [89, 518], "72075441": 241, "72538256": [27, 47], "74165739": 215, "742278e": 480, "74596669": [211, 215], "74921661": 406, "75": [56, 113, 123, 164, 169, 208, 229], "754": 140, "75682673": 481, "75958653": 405, "76096244": 406, "76377462": 406, "77447665": 236, "78539816": [20, 28, 29, 50, 51, 518], "78927254": 406, "79175947": 88, "79769313e": 258, "7j": 399, "8": [4, 15, 17, 22, 39, 53, 69, 72, 81, 87, 93, 94, 95, 96, 98, 99, 103, 104, 106, 108, 109, 118, 121, 123, 137, 138, 144, 147, 162, 164, 170, 175, 179, 192, 202, 203, 215, 219, 221, 222, 223, 224, 226, 227, 228, 229, 241, 243, 245, 354, 370, 385, 391, 396, 397, 398, 400, 406, 430, 449, 456, 457, 469, 471, 474, 480, 487, 496, 500, 502, 504, 506, 507, 508, 510, 511, 512, 516, 517, 518, 519, 522, 523, 525], "80": [106, 108, 525], "8000": 445, "80226506": 406, "8058837395885292": 228, "81715362": 406, "827941": [162, 241], "82842712": [205, 207], "84288406": 406, "84401099": 406, "84743374": 406, "84803548": 215, "85": 108, "86": 177, "87649168": 235, "88": 107, "88178420e": 121, "881943016134134": 228, "88194302": 228, "88997253": 406, "89920014": 410, "8f": 106, "8j": 521, "9": [4, 15, 22, 39, 53, 72, 81, 87, 90, 93, 94, 95, 96, 98, 101, 103, 104, 108, 110, 118, 121, 124, 125, 130, 141, 147, 149, 157, 162, 164, 170, 179, 192, 203, 204, 209, 211, 215, 217, 218, 221, 222, 223, 226, 228, 241, 243, 257, 258, 352, 385, 400, 406, 408, 410, 430, 456, 457, 469, 487, 488, 493, 500, 506, 507, 508, 510, 511, 512, 513, 516, 517, 518, 519, 523, 525], "90": [20, 92, 404, 471, 525], "917152": 499, "92387953": 205, "92387953j": 205, "93548928": 481, "94": 108, "94591015": 88, "95": 209, "95799250e": 121, "98": [210, 244], "98024613": 241, "99": [107, 233, 402], "99322285": [14, 25], "99532227": 113, "996272": 499, "99822295": [27, 47], "99853728": 113, "999": 109, "9990000e": 258, "99959305": 113, "99989938": 113, "9999": 258, "99997791": 113, "999999e": 179, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 76, 77, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 175, 176, 178, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 203, 205, 206, 207, 209, 213, 214, 215, 218, 219, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 249, 251, 253, 254, 257, 261, 262, 266, 268, 337, 342, 350, 352, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 399, 404, 405, 406, 408, 425, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 455, 456, 457, 459, 461, 464, 467, 468, 471, 474, 478, 479, 480, 481, 482, 486, 487, 488, 489, 493, 495, 496, 498, 499, 500, 501, 503, 505, 507, 509, 511, 513, 514, 519, 522, 523, 525, 526, 527, 542], "AND": [16, 58, 59, 61, 62, 64, 178, 237, 238, 239, 240], "And": [4, 48, 49, 95, 103, 337, 507, 511], "As": 515, "Be": 204, "Being": 3, "But": [4, 106], "By": [31, 32, 42, 49, 87, 103, 122, 126, 128, 132, 134, 138, 162, 209, 229, 241, 244, 246, 248, 252, 259, 260, 263, 264, 265, 266, 267, 268, 269, 337, 462, 469, 483, 492, 496, 505, 507, 509, 511, 520, 522], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 347, 350, 351, 352, 359, 365, 367, 370, 375, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 535, 542], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 72, 74, 75, 85, 87, 88, 89, 90, 93, 94, 98, 99, 102, 103, 104, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 150, 151, 153, 158, 162, 164, 168, 169, 170, 171, 175, 176, 177, 179, 183, 186, 187, 188, 199, 201, 209, 211, 212, 213, 214, 215, 217, 218, 221, 223, 225, 226, 228, 229, 230, 241, 242, 246, 247, 248, 249, 250, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 354, 372, 393, 394, 398, 401, 402, 406, 428, 450, 457, 458, 460, 462, 463, 464, 465, 469, 472, 473, 475, 484, 487, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 515, 518, 519, 520, 521, 522, 523, 524, 525, 535, 542], "In": [4, 10, 31, 32, 87, 89, 90, 108, 109, 127, 128, 129, 132, 134, 164, 199, 206, 214, 218, 236, 241, 261, 262, 264, 266, 268, 398, 401, 406, 450, 455, 456, 464, 465, 494, 496, 514], "It": [4, 10, 16, 21, 22, 31, 32, 72, 89, 90, 100, 102, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 164, 205, 207, 236, 244, 248, 249, 259, 260, 261, 262, 263, 264, 265, 267, 269, 391, 398, 464, 465, 476, 486, 492, 494, 496, 520, 542], "Its": [72, 224, 402, 502], "NOT": [59, 61, 178, 237, 238, 239, 240], "No": [41, 42, 108, 199], "Not": [16, 21, 42, 182, 258, 261, 262, 263, 265, 266, 268, 398], "OR": [21, 58, 59, 61, 62, 64, 178, 237, 238, 239, 240], "On": 4, "One": [53, 54, 55, 87, 105, 106, 132, 216, 391, 464], "Ones": 36, "Or": [164, 504], "That": 243, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 72, 73, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 179, 181, 182, 183, 184, 185, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 214, 215, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 337, 342, 351, 354, 359, 361, 365, 370, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 409, 411, 412, 422, 427, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 519, 520, 522, 524, 525, 526, 527, 535, 538, 542], "Then": [10, 43, 45, 243], "There": [10, 229, 515], "These": [4, 22, 106, 108, 109, 116, 243, 256, 402, 497, 507, 511, 535, 538], "To": [4, 126, 132, 134, 147, 385, 518], "With": [31, 32, 56, 85, 170, 211, 215, 228, 246, 252, 259, 260, 266, 268, 398, 494, 523], "_": [0, 169, 491, 504], "__array_interface__": 106, "__bool__": 535, "__dlpack__": 153, "__dlpack_device__": 153, "__eq__": [103, 106, 142, 406], "__ge__": [103, 106, 142, 406], "__getitem__": [103, 106, 142], "__gt__": [103, 106, 142, 406], "__iter__": 142, "__le__": [103, 106, 142, 406], "__len__": [103, 106], "__lt__": [103, 106, 142, 406], "__main__": 0, "__name__": 0, "__ne__": [103, 106, 142, 406], "__next__": 142, "__setitem__": [103, 142], "__sycl_usm_array_interface__": 44, "_dtypes_list": 0, "_f": 215, "a1": [37, 38], "a2": [37, 38], "a_": [10, 215], "a_ax": [223, 500], "a_i": [227, 522], "a_k": 10, "a_m": 10, "a_resamp": 132, "ab": [6, 10, 12, 17, 179, 215], "abc": 108, "abcd": 109, "abl": 215, "about": [43, 45, 103, 140, 204, 348, 391, 463, 535], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 88, 94, 97, 124, 129, 134, 138, 176, 203, 218, 226, 242, 258, 460, 505, 506, 510], "absolut": [6, 11, 17, 20, 120, 161, 179, 194, 219, 267, 269, 399, 458, 492, 518, 520, 542], "accept": [33, 108, 216, 406, 484, 507, 511], "access": [10, 95, 96, 139, 243, 507, 511, 535], "accord": [16, 21, 56, 63, 68, 106, 138, 140, 204, 205, 206, 207, 242, 248, 249, 264, 267, 269, 391, 460, 467, 492, 520], "accordingli": [87, 263, 265], "account": [455, 464], "accumul": [88, 89, 90, 108, 168, 226, 261, 262, 266, 268, 398, 494, 502], "accur": [106, 117, 164, 233, 235], "accuraci": [127, 128, 129, 132, 134], "achiev": 108, "aco": 24, "acosh": 25, "across": [98, 169, 261, 262, 266, 268], "activ": 4, "actual": [106, 168, 169, 199, 214], "ad": [17, 106, 109, 116, 132, 179, 202, 219, 236, 518, 538], "add": [6, 106, 542], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [88, 199, 264, 515], "address": 106, "adjac": [203, 226, 486, 518], "advanc": 108, "advers": 108, "advis": 4, "affect": [23, 98, 108, 139, 168, 169], "after": [105, 139, 384, 391, 425, 469], "after_1": 391, "after_n": 391, "ag": 106, "against": [17, 31, 32, 65, 66, 67, 72, 85, 163, 179, 211, 215, 217, 228, 246, 252, 259, 260, 266, 268, 398, 402, 494, 497], "ai": [3, 402, 497], "ai_max": 497, "ai_min": 497, "ainv": [208, 224], "al": 10, "algebra": [528, 538], "algorithm": [10, 33, 108, 109, 121, 127, 135, 484], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 60, 61, 63, 74, 75, 101, 111, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 160, 178, 196, 254, 270, 389, 393, 396, 397, 406, 436, 439, 441, 455, 461, 464, 467, 473, 503, 513, 518, 524, 527], "alias": [9, 126, 127, 132, 134, 481], "align": 106, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 73, 85, 92, 99, 103, 105, 106, 108, 109, 114, 115, 117, 119, 124, 125, 129, 130, 133, 134, 138, 139, 144, 145, 146, 154, 155, 157, 162, 164, 171, 173, 175, 192, 199, 201, 213, 217, 228, 229, 241, 246, 249, 252, 259, 260, 263, 265, 337, 340, 347, 361, 391, 398, 408, 457, 458, 469, 473, 476, 490, 494, 515, 517, 522, 524, 535, 542], "allclos": [6, 37, 179, 208, 217, 218, 220, 221, 225], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 79, 88, 94, 95, 97, 103, 110, 111, 119, 123, 137, 141, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 186, 187, 229, 230, 241, 242, 243, 248, 249, 251, 264, 267, 269, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 460, 490, 492, 505, 507, 511, 519, 520, 522, 526, 527], "allow": [39, 49, 93, 103, 108, 168, 169, 183, 236, 243, 249, 337, 367, 496, 535], "alltru": 6, "almost": [34, 204, 507], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 73, 74, 75, 85, 88, 89, 90, 93, 94, 95, 97, 98, 99, 103, 104, 105, 107, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 144, 145, 146, 150, 151, 156, 162, 164, 170, 171, 176, 215, 218, 223, 224, 225, 226, 227, 228, 229, 241, 242, 246, 247, 248, 249, 250, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 334, 335, 336, 343, 344, 355, 357, 362, 363, 371, 374, 376, 378, 379, 381, 391, 394, 398, 400, 401, 402, 455, 460, 462, 469, 470, 471, 473, 476, 483, 484, 487, 491, 492, 494, 496, 497, 500, 501, 502, 504, 507, 508, 511, 512, 515, 517, 518, 520, 522, 523, 524, 535], "alpha": [407, 412, 413, 429, 432], "alreadi": [4, 10, 41, 42, 53, 54, 55, 390, 391, 515], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 80, 101, 103, 106, 108, 112, 116, 124, 129, 133, 134, 135, 138, 147, 149, 150, 151, 152, 156, 158, 161, 164, 165, 166, 167, 168, 172, 179, 183, 194, 196, 197, 198, 199, 235, 236, 243, 247, 253, 254, 256, 257, 370, 385, 386, 396, 397, 444, 461, 467, 481, 493, 496, 513, 515, 535], "alter": 98, "altern": [3, 4, 16, 21, 89, 90, 102, 103, 244, 246, 248, 249, 252, 261, 262, 264, 266, 267, 268, 269, 380, 398, 492, 494, 520], "although": [20, 106, 128, 129, 130, 501], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 98, 103, 104, 107, 120, 147, 153, 170, 205, 207, 267, 269, 337, 385, 464, 485, 492, 520, 523], "amax": [6, 246], "ambigu": 535, "amin": [6, 252], "among": 107, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 192, 194, 195, 196, 197, 198, 201, 202, 203, 206, 209, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 277, 336, 337, 338, 339, 342, 352, 355, 359, 361, 363, 366, 367, 370, 371, 372, 373, 377, 378, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 413, 414, 416, 425, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 535, 542], "anaconda": 3, "analog": [122, 124, 126, 128, 129, 131], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 91, 92, 175, 404, 405, 457, 458, 518, 542], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 65, 66, 67, 79, 94, 97, 99, 103, 106, 108, 109, 122, 124, 128, 129, 134, 138, 139, 159, 160, 162, 164, 169, 171, 181, 189, 190, 212, 225, 229, 241, 243, 263, 265, 337, 359, 391, 406, 450, 463, 481, 486, 519, 535], "anoth": [4, 81, 103, 118, 128, 129, 153, 342, 363, 394, 401, 470], "answer": 408, "anti": [98, 139, 203, 481], "anyth": 106, "ap": 209, "apart": 504, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 87, 94, 95, 97, 98, 103, 106, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 201, 203, 210, 211, 216, 217, 226, 227, 228, 229, 230, 241, 243, 244, 251, 337, 342, 387, 388, 389, 390, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 502, 505, 507, 511, 519, 521, 522, 526, 527], "appear": [116, 145, 146, 515], "append": [0, 6, 60, 93, 99, 107, 109, 116, 127, 128, 129, 196, 203], "appli": [31, 32, 33, 56, 68, 93, 108, 223, 258, 456, 465, 466, 484, 500, 504], "applic": [10, 106, 481], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [103, 106, 127, 128, 129, 370], "appropri": [4, 31, 32, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 163, 225, 259, 260, 263, 265, 406, 434, 437, 465, 496, 535], "approxim": [140, 504], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 161, 162, 164, 165, 166, 167, 168, 169, 172, 177, 178, 179, 182, 183, 184, 185, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 221, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 360, 361, 370, 382, 383, 384, 385, 386, 391, 392, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 432, 434, 437, 438, 440, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 465, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479, 480, 483, 484, 486, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524, 525, 535, 542], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 72, 80, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 108, 112, 114, 115, 117, 118, 121, 143, 144, 147, 152, 160, 161, 162, 164, 168, 170, 176, 177, 192, 193, 194, 195, 203, 210, 211, 215, 223, 226, 228, 229, 232, 233, 237, 238, 239, 240, 241, 243, 244, 246, 250, 252, 254, 257, 345, 354, 386, 389, 391, 394, 396, 397, 401, 405, 430, 461, 463, 464, 466, 469, 471, 476, 487, 493, 500, 502, 504, 507, 508, 511, 512, 513, 517, 523, 525, 527], "arbitrari": [48, 102, 106, 108, 177, 244, 466, 507, 511], "arbitrarili": 108, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 83], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 84], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 480], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 482], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 498], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 499], "area": 504, "arg": [65, 66, 103, 192, 352, 406], "arg1": 191, "arg2": 191, "argmax": [0, 6, 32, 103, 259, 402, 497, 535], "argmin": [6, 31, 103, 260, 497, 535], "argpartit": [6, 33, 402, 497, 535], "argsort": [6, 103, 393, 402, 475, 484, 497, 503, 535], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 72, 74, 75, 80, 83, 84, 91, 92, 101, 102, 103, 106, 109, 113, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 161, 167, 172, 175, 178, 190, 191, 194, 195, 196, 201, 203, 210, 214, 215, 216, 223, 226, 227, 232, 233, 234, 235, 236, 243, 244, 247, 253, 254, 255, 257, 352, 367, 380, 383, 384, 391, 395, 396, 397, 399, 401, 404, 405, 457, 458, 459, 461, 464, 466, 467, 468, 474, 478, 479, 480, 481, 482, 486, 491, 493, 498, 499, 500, 504, 513, 514, 522, 535, 542], "argwher": [6, 385], "ari": [39, 53, 54, 55, 104, 107, 170, 487, 523], "arithmet": [56, 162, 248, 249, 264, 267, 269, 395, 492, 494, 520, 528, 538], "around": [6, 103, 162, 391, 401, 456, 472], "arr": [22, 42, 93, 96, 106, 169, 403, 430, 455, 456, 508, 512, 517], "arr2": [106, 517], "arr_t": [49, 103, 337], "arraiarray2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 79, 81, 94, 97, 107, 118, 159, 160, 162, 181, 189, 223, 229, 241, 382, 391, 394, 401, 402, 406, 471, 477, 483, 496, 500, 519], "array_of_diagon": 98, "array_repr": 6, "array_split": [6, 74, 75, 487], "array_str": 6, "arrays_and_dtyp": 466, "art": 10, "asanyarrai": [6, 41, 42, 45, 463], "asarrai": [4, 6, 40, 42, 43, 45, 48, 382, 463, 483], "asarray_chkfinit": [6, 40, 41], "ascend": [205, 207, 475], "ascii": 106, "ascontiguousarrai": [6, 40, 41, 42, 45, 463], "asfarrai": [6, 40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 463], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 103, "aspect": 106, "assembl": [74, 75, 105, 171, 473, 491, 517, 524], "assert": 249, "assign": [103, 347, 370, 507, 511], "associ": [56, 168, 169, 535], "assum": [10, 56, 87, 109, 126, 132, 134, 203, 213, 217, 221, 243, 504], "astyp": [6, 103, 162, 385], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 54, 55, 116], "atleast_2d": [6, 53, 55, 116], "atleast_3d": [6, 53, 54, 116], "atol": [17, 179], "attain": 0, "attempt": [102, 214], "attribut": [103, 106, 111, 140, 160, 174, 218, 389, 527, 528], "automat": [168, 169], "avail": [2, 3, 4, 10, 82, 86, 106, 113, 255, 259, 260, 263, 265, 266, 528, 535], "averag": [6, 103, 248, 249, 264, 356, 494, 538], "avg": 56, "avoid": [36, 41, 54, 55, 126, 132, 134, 464], "aweight": 86, "ax": [16, 21, 31, 32, 56, 85, 87, 88, 99, 102, 103, 108, 116, 122, 124, 125, 128, 129, 130, 133, 134, 136, 138, 144, 164, 177, 201, 211, 215, 220, 223, 224, 225, 226, 228, 242, 244, 245, 246, 248, 249, 252, 256, 259, 260, 263, 264, 265, 266, 267, 268, 269, 377, 380, 390, 391, 393, 398, 460, 465, 469, 470, 471, 490, 492, 494, 495, 500, 501, 502, 503, 515, 520, 522], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 73, 74, 75, 85, 87, 88, 89, 90, 93, 98, 99, 103, 104, 105, 107, 108, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 144, 145, 146, 150, 151, 156, 162, 164, 170, 171, 176, 201, 209, 215, 223, 227, 228, 229, 241, 242, 244, 246, 247, 248, 249, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 332, 333, 334, 335, 336, 343, 344, 350, 355, 356, 357, 361, 362, 363, 366, 371, 372, 373, 374, 376, 378, 380, 381, 391, 392, 393, 394, 398, 400, 401, 402, 455, 460, 462, 464, 465, 469, 470, 471, 473, 476, 483, 484, 487, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 515, 517, 518, 520, 522, 523, 524, 535], "axis1": [98, 103, 345, 377, 379, 495, 502], "axis2": [98, 103, 345, 377, 379, 495, 502], "axisa": 87, "axisb": 87, "axisc": 87, "axiserror": [33, 484], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 64, 73, 74, 75, 81, 87, 90, 102, 103, 105, 106, 108, 109, 112, 154, 155, 165, 166, 171, 177, 179, 183, 193, 197, 198, 201, 202, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 237, 239, 244, 245, 246, 249, 252, 384, 386, 390, 396, 397, 407, 466, 473, 486, 491, 500, 501, 509, 521, 522, 524, 542], "b_ax": [223, 500], "b_i": [227, 522], "back": [103, 156, 350, 455, 464, 465, 470, 509], "backend": [2, 163, 409, 411, 412, 422, 427, 443], "backward": [10, 49, 103, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 164, 337, 464, 469, 470], "bad": 418, "baltimor": 215, "bandlimit": 481, "bartlett": 6, "base": [0, 4, 106, 108, 115, 118, 147, 162, 168, 169, 221, 231, 232, 233, 234, 235, 236, 241, 242, 244, 394, 396, 397, 401, 403, 522], "base_repr": 6, "basic": [68, 108, 535, 538], "batch": 228, "bc": [202, 219], "bcde": 109, "becaus": [10, 16, 21, 126, 132, 134, 518, 535], "becom": [10, 103, 168, 380], "been": [105, 402, 470, 497], "befor": [4, 22, 33, 74, 75, 88, 103, 107, 127, 128, 129, 145, 146, 225, 242, 246, 252, 267, 269, 361, 372, 391, 398, 460, 469, 470, 484, 492, 494, 501, 520, 521], "before_1": 391, "before_n": 391, "begin": [107, 109, 162, 229, 241, 391, 476], "behav": [230, 401], "behavior": [33, 103, 136, 226, 258, 342, 465, 484, 501], "behind": [103, 361], "being": [3, 106, 150, 151, 247, 253, 391], "belong": [100, 168], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 94, 97, 106, 132, 203, 213, 215, 226, 505, 506, 510, 518, 535], "best": 109, "beta": [6, 417], "between": [17, 23, 39, 68, 99, 107, 140, 155, 158, 164, 177, 179, 229, 241, 391, 423, 437, 486, 493, 504, 518], "beyond": [4, 469], "bia": 86, "big": 106, "bin": [100, 121, 123, 137, 168, 169, 444], "bin_edg": [168, 169], "binari": [58, 62, 64, 154, 155, 157, 158], "binary_repr": 6, "bincount": [6, 100, 168], "binomi": [6, 425], "bins_0": 169, "bins_1": 169, "bit": [58, 59, 60, 61, 62, 63, 64, 106, 140, 174, 178, 196, 237, 239, 240, 266, 268, 467, 479, 528, 538], "bitwis": [58, 62, 64], "bitwise_and": [6, 59, 61, 62, 64, 178, 237], "bitwise_invert": [61, 178], "bitwise_left_shift": 196, "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 64, 178, 239], "bitwise_right_shift": 467, "bitwise_xor": [6, 58, 59, 61, 62, 178, 240], "biufcmmosuv": 106, "blackman": 6, "block": [6, 74, 75, 105, 139, 171, 193, 473, 491, 517, 524], "bmat": 6, "bool": [9, 16, 17, 20, 21, 31, 32, 33, 36, 37, 38, 41, 44, 49, 56, 68, 81, 85, 88, 93, 100, 103, 106, 109, 112, 139, 153, 162, 165, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 199, 211, 213, 215, 217, 221, 228, 229, 241, 242, 246, 248, 249, 250, 252, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 337, 385, 386, 398, 460, 464, 476, 479, 484, 492, 494, 496, 515, 519, 520, 535], "bool_": 9, "boolean": [58, 59, 61, 62, 64, 81, 88, 93, 106, 118, 147, 153, 176, 178, 179, 182, 184, 185, 186, 187, 188, 192, 237, 239, 242, 243, 248, 249, 264, 266, 267, 269, 385, 394, 460, 492, 496, 520], "boolean_sequ": 192, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 72, 80, 87, 101, 102, 112, 128, 135, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 177, 179, 193, 194, 195, 196, 197, 198, 210, 215, 223, 235, 236, 237, 239, 240, 244, 247, 253, 254, 257, 268, 384, 386, 396, 397, 461, 464, 467, 493, 500, 502, 507, 509, 511, 513, 521, 522, 525], "bound": [401, 402, 456, 475, 496, 497], "boundari": [164, 401, 456], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 535, "broadcast": [15, 16, 21, 31, 32, 38, 56, 65, 66, 67, 72, 81, 85, 101, 108, 118, 147, 150, 151, 172, 186, 187, 210, 211, 215, 217, 228, 240, 242, 244, 246, 247, 248, 249, 252, 253, 257, 259, 260, 264, 266, 267, 268, 269, 396, 397, 398, 401, 402, 460, 462, 492, 493, 494, 497, 501, 513, 520, 522, 525], "broadcast_arrai": [6, 66, 67], "broadcast_shap": 6, "broadcast_to": [6, 65, 66, 501], "brought": 10, "buffer": [44, 89, 90, 103, 153, 154, 155, 157, 158, 230, 246, 252, 261, 262], "buffer_lik": 154, "buffererror": 153, "build": 538, "build_loc": 4, "built": 106, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 103, 106, 108, 154, 155, 230, 337, 353, 358], "byte_bound": 6, "byteord": 106, "byteswap": 6, "bz2": 230, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 87, 91, 92, 101, 102, 103, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 163, 165, 166, 167, 172, 175, 177, 178, 182, 183, 184, 185, 193, 194, 195, 196, 197, 198, 202, 209, 214, 215, 219, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 253, 254, 257, 337, 342, 350, 364, 367, 383, 384, 385, 386, 388, 389, 395, 396, 397, 399, 404, 405, 455, 456, 457, 459, 461, 463, 464, 465, 467, 468, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 500, 501, 513, 514, 515, 516, 522, 525, 526, 527, 542], "c_contigu": [43, 45, 103, 342, 463], "ca": 78, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 87, 88, 90, 99, 101, 107, 108, 112, 114, 115, 117, 121, 130, 147, 148, 149, 152, 164, 169, 172, 204, 205, 206, 207, 209, 215, 217, 233, 235, 236, 242, 244, 248, 249, 254, 257, 264, 267, 269, 386, 391, 396, 397, 398, 460, 461, 492, 493, 513, 520, 521, 528, 542], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 106, 127, 128, 129, 132, 135, 156, 204, 206, 214, 222, 243, 249, 277, 385, 490, 496, 501, 504, 542], "callabl": [156, 243], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 68, 79, 80, 87, 94, 95, 97, 98, 101, 102, 103, 106, 108, 109, 110, 111, 112, 119, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 137, 139, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 173, 176, 177, 178, 179, 181, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 208, 209, 212, 213, 215, 217, 223, 225, 226, 229, 230, 235, 236, 237, 239, 240, 241, 243, 244, 247, 251, 253, 254, 257, 266, 268, 337, 342, 370, 372, 383, 384, 385, 386, 387, 388, 389, 395, 396, 397, 402, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 455, 456, 461, 463, 464, 467, 484, 486, 493, 496, 497, 500, 502, 504, 505, 507, 511, 512, 513, 515, 519, 521, 525, 526, 527, 535, 542], "can_cast": [6, 538], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 74, 75, 259, 260, 464, 487, 490, 491], "capabl": [23, 36, 40, 41, 43, 45, 56, 120, 162, 229, 241, 244, 522], "cardin": 481, "cardinali": 481, "care": [23, 204], "cartesian": 250, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 79, 87, 89, 90, 94, 97, 99, 103, 108, 109, 110, 111, 119, 123, 126, 131, 135, 137, 154, 155, 156, 157, 159, 160, 162, 164, 173, 204, 218, 221, 223, 229, 230, 236, 241, 251, 261, 262, 266, 268, 352, 387, 388, 389, 398, 455, 464, 465, 494, 500, 505, 518, 519, 526, 527, 535], "cast": [16, 21, 49, 68, 74, 75, 81, 88, 89, 90, 103, 108, 147, 171, 204, 242, 244, 248, 249, 258, 261, 262, 264, 266, 267, 268, 269, 337, 398, 460, 473, 491, 492, 494, 520, 522, 524], "cat": [408, 425], "cauchi": 444, "cbrt": [6, 488], "cdef": 109, "cdot": [223, 227, 500, 522], "cdoubl": 9, "ceil": [6, 35, 141, 148, 149, 468, 472, 514], "center": [122, 123, 124, 125, 129, 130, 137], "central": [164, 426, 427], "certain": [106, 243], "ch": 10, "chain": [102, 103, 108, 109], "chang": [49, 79, 87, 103, 106, 108, 118, 261, 262, 337, 350, 375, 380, 383, 394, 395, 401, 402, 403, 455, 464, 465, 470, 518, 538], "char": 106, "charact": [106, 155], "check": [16, 21, 40, 41, 42, 68, 126, 181, 183, 189, 199, 217, 220, 535], "check_valid": 424, "chi": [410, 426], "chisquar": 6, "choic": [6, 71, 103, 121, 122, 124, 127, 128, 129, 133, 134, 136, 138, 205, 207, 338], "choicelist": 476, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 103, 109, 476, 525, 535], "chosen": [34, 168, 515, 525], "circ": 542, "circl": [219, 504], "clamp": [401, 402, 496, 497], "clariti": 139, "class": [3, 4, 103, 106, 142, 154, 155, 156, 158, 176, 230, 406, 434, 505, 538], "classic": 108, "clear": [106, 195, 535], "clip": [6, 103, 401, 402, 456, 496, 497, 535], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 103, 108, 116, 175, 229, 337, 406, 434, 457, 458, 468, 472, 504], "closer": 514, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 84, 206, 480, 498, 504], "coars": [216, 390], "code": [44, 106, 191, 463], "codeplai": 4, "coeffici": [209, 220, 225], "coerc": [44, 154, 155, 156, 157, 158, 230], "coin": 408, "col": 176, "collaps": [103, 350, 515], "column": [6, 40, 41, 42, 43, 45, 48, 49, 73, 74, 75, 89, 90, 98, 103, 105, 119, 139, 145, 146, 164, 170, 171, 173, 204, 205, 209, 214, 218, 221, 337, 455, 456, 463, 473, 487, 491, 505, 507, 511, 516, 519, 524], "column_stack": [6, 74, 75, 105, 171, 473, 491, 524], "com": 4, "combin": [0, 106, 116, 124, 129, 134, 138, 164], "combinatori": 109, "come": 515, "comma": [106, 108], "command": 4, "common": [127, 128, 129, 161, 194, 223, 385, 500], "common_typ": 6, "compani": [408, 425], "compar": [17, 33, 37, 112, 150, 151, 169, 179, 216, 247, 253, 484], "compare_chararrai": 6, "comparison": [2, 112, 165, 166, 197, 198, 386, 528, 538], "compat": [3, 4, 10, 16, 21, 49, 56, 87, 98, 103, 201, 203, 210, 211, 216, 217, 226, 227, 228, 242, 244, 248, 249, 263, 264, 265, 267, 269, 337, 390, 460, 464, 492, 502, 520, 521, 522, 538], "compil": [4, 106, 163, 463], "complement": 518, "complementari": [149, 518], "complet": [3, 4, 109, 155, 156, 218, 470, 535], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 46, 47, 50, 51, 52, 68, 88, 102, 103, 106, 109, 113, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 147, 150, 151, 175, 180, 181, 188, 189, 195, 204, 205, 206, 207, 210, 218, 219, 221, 227, 242, 244, 247, 253, 258, 267, 269, 340, 341, 399, 457, 458, 460, 485, 492, 515, 520, 521, 522, 535, 538], "complex128": [9, 56, 466], "complex64": [9, 56, 103, 147, 371], "compliant": 103, "complic": [108, 542], "compon": [10, 37, 87, 125, 130, 137, 140, 175, 213, 223, 258, 457, 500], "compos": 80, "composit": [90, 193, 494, 504], "compress": [6, 118, 476, 496, 535], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 64, 69, 76, 77, 83, 84, 88, 89, 90, 99, 100, 108, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 148, 164, 165, 166, 167, 168, 169, 175, 176, 178, 193, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 237, 238, 239, 240, 242, 244, 248, 249, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 383, 390, 395, 399, 457, 459, 460, 461, 468, 472, 474, 478, 479, 480, 482, 488, 492, 494, 498, 499, 500, 504, 507, 511, 520, 522], "compute_uv": [200, 221, 222], "concat": 75, "concaten": [6, 73, 74, 105, 171, 473, 487, 491, 497, 517, 524], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527, 535], "cond": [6, 208], "condit": [34, 49, 102, 103, 118, 200, 208, 214, 337, 385, 394, 401, 403, 476, 525], "condlist": 476, "confus": 152, "conj": [6, 77, 103, 126, 175, 199, 204, 399], "conjug": [6, 10, 76, 102, 103, 132, 135, 175, 199, 204, 205, 206, 207, 210, 227, 244, 340, 399, 521, 522], "consecut": [99, 107, 164], "conserv": 250, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 109, 137, 162, 179, 182, 205, 207, 213, 229, 241, 244, 406, 434, 465, 486, 515, 522], "consist": [37, 38, 107, 121, 122, 124, 127, 128, 129, 133, 134, 136, 138, 155, 169, 223, 225, 229, 497, 500], "constant": [9, 106, 164, 391], "constant_valu": 391, "constraint": 56, "construct": [40, 41, 42, 71, 94, 97, 98, 103, 106, 119, 154, 155, 156, 157, 158, 173, 192, 195, 230, 251, 338, 387, 476, 481, 501, 502, 525, 528], "constructor": 535, "consum": [103, 358], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 80, 81, 83, 84, 87, 88, 98, 101, 103, 106, 112, 114, 115, 117, 122, 123, 124, 127, 132, 135, 137, 143, 147, 148, 149, 150, 151, 152, 153, 158, 163, 164, 165, 166, 168, 169, 172, 175, 176, 178, 196, 197, 198, 201, 203, 205, 218, 221, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 247, 248, 253, 254, 257, 259, 260, 263, 264, 265, 267, 269, 367, 383, 385, 386, 393, 395, 396, 397, 399, 406, 457, 459, 460, 461, 467, 468, 472, 474, 478, 479, 480, 481, 482, 488, 489, 492, 493, 498, 499, 500, 503, 507, 508, 511, 512, 513, 514, 520, 535], "content": [43, 103, 249, 443], "context": 10, "contigu": [40, 41, 42, 43, 45, 102, 103, 108, 183, 214, 364, 455, 463, 464], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 406, 438, 481], "contourf": 250, "contract": [108, 109, 223, 500], "contrari": [201, 203, 210, 226, 227], "contrast": [108, 401], "contribut": [10, 56, 168, 169], "control": [4, 49, 68, 74, 75, 81, 103, 108, 171, 244, 337, 473, 491, 522, 524], "conveni": [103, 380, 406], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 102, 108, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 177, 210, 223, 225, 244, 390, 500, 522], "convers": [49, 103, 108, 337, 528], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 79, 91, 92, 94, 97, 106, 108, 109, 116, 159, 160, 162, 181, 189, 229, 241, 404, 405, 456, 463, 516, 518, 519], "convolut": [10, 78, 82], "convolv": [6, 82], "coolei": 10, "coordin": [85, 156, 164, 176, 192, 250, 456, 516], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 81, 93, 94, 95, 97, 98, 103, 106, 110, 111, 118, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 249, 250, 251, 258, 277, 337, 350, 352, 361, 367, 370, 387, 388, 389, 392, 394, 395, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 455, 463, 464, 465, 475, 484, 490, 505, 506, 507, 510, 511, 519, 526, 527, 535], "copysign": [6, 383, 395], "copyto": [6, 103, 118, 342, 394], "core": [3, 106, 108, 522, 535], "corner": [122, 124, 128, 129, 391], "corrcoef": [6, 86], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 74, 75, 76, 77, 80, 83, 84, 91, 92, 101, 112, 114, 115, 117, 120, 126, 132, 134, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 172, 175, 178, 182, 184, 185, 194, 195, 196, 197, 198, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 253, 254, 257, 383, 384, 386, 395, 396, 397, 399, 404, 405, 457, 459, 461, 463, 467, 468, 472, 474, 478, 479, 480, 481, 482, 486, 488, 489, 491, 493, 498, 499, 513, 514], "correctli": [20, 26, 28, 31, 32, 46, 50, 85, 211, 215, 228, 246, 252, 259, 260, 266, 268, 385, 398, 494], "correl": [6, 538], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 72, 74, 75, 79, 91, 92, 94, 95, 97, 98, 103, 104, 110, 111, 119, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 170, 173, 176, 192, 201, 204, 205, 223, 227, 229, 230, 241, 243, 244, 251, 337, 342, 346, 387, 388, 389, 393, 404, 405, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 469, 476, 477, 487, 492, 500, 503, 504, 505, 507, 511, 519, 520, 522, 523, 526, 527, 535], "correspondingli": [10, 487], "cosh": [6, 14, 25, 83, 482, 499], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 480, 482, 498, 499], "cost": [108, 109], "costli": 109, "could": [103, 126, 132, 134, 372], "count": [16, 21, 57, 85, 100, 106, 109, 144, 154, 155, 157, 158, 164, 168, 169, 385, 398, 408, 483, 494, 515, 528, 538], "count_nonzero": [6, 385], "counterclockwis": [145, 146, 471], "counterpart": [10, 126, 132, 134, 535], "cov": [6, 424], "covari": 86, "cover": [507, 511, 538], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 79, 82, 86, 94, 97, 110, 111, 113, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 229, 230, 241, 251, 255, 266, 387, 388, 389, 505, 519, 526, 527], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 96, 97, 98, 103, 106, 109, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 258, 337, 342, 387, 388, 389, 391, 402, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 502, 505, 507, 508, 511, 512, 519, 526, 527, 535, 538], "creation": [106, 109, 528, 535, 538, 542], "crop": [121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138], "cross": [6, 82, 192], "csingl": 9, "ct": 10, "ctype": 463, "cube": [69, 147, 488], "cubic": 109, "cuda": 4, "cumprod": [6, 103, 261, 535], "cumproduct": 6, "cumsum": [6, 99, 103, 262, 494, 504, 535], "cumul": [88, 89, 90, 99, 103, 261, 262, 343, 344, 494, 504], "cupi": [2, 528], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 80, 83, 84, 91, 92, 101, 103, 106, 109, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 155, 161, 167, 169, 172, 173, 178, 194, 195, 196, 232, 233, 234, 235, 236, 247, 253, 254, 255, 257, 370, 383, 384, 391, 395, 396, 397, 399, 404, 405, 459, 461, 463, 467, 468, 474, 478, 479, 480, 482, 486, 493, 498, 499, 513, 514], "curv": 504, "custom": 535, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 209, 522], "cutoff": 217, "cycl": [123, 137, 192, 465], "cyclic": 401, "cython": 4, "d": [0, 16, 21, 23, 56, 73, 74, 75, 89, 90, 94, 95, 96, 97, 98, 102, 103, 105, 106, 119, 123, 125, 130, 137, 139, 143, 145, 146, 158, 170, 171, 173, 177, 192, 202, 203, 205, 206, 210, 214, 215, 219, 223, 226, 244, 250, 261, 262, 268, 350, 385, 396, 397, 398, 401, 411, 455, 464, 473, 475, 477, 491, 494, 496, 500, 501, 502, 509, 515, 519, 522, 524, 535], "d0": [406, 433, 435], "d1": [406, 435], "d3": 95, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 94, 97, 100, 101, 102, 103, 106, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 126, 132, 134, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 187, 189, 194, 195, 196, 197, 198, 203, 209, 216, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 269, 337, 367, 380, 382, 383, 384, 386, 388, 389, 394, 395, 396, 397, 399, 401, 402, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 497, 498, 499, 502, 505, 513, 514, 520, 522, 524, 525, 526, 527, 528, 538], "datatyp": [106, 213], "date": 4, "datetim": 106, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [86, 103, 267, 269, 374, 381, 492, 520], "decai": 419, "decim": [35, 103, 140, 141, 368, 468, 472], "decomposit": [199, 208, 213, 217, 221, 222, 538], "decompress": 230, "decreas": [100, 504], "decreasingli": [10, 122, 124, 128, 129], "deem": 153, "def": [0, 391], "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 211, 213, 214, 215, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 350, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 410, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 450, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 535], "default_rng": 6, "defg": 109, "defici": 213, "defin": [10, 29, 51, 87, 93, 106, 111, 121, 150, 151, 160, 167, 168, 169, 201, 203, 215, 227, 247, 253, 258, 389, 395, 458, 471, 522, 527, 535], "definit": [87, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 148, 199, 504], "deg": [20, 405], "deg2rad": [6, 404, 405, 518], "degre": [6, 20, 91, 267, 269, 404, 405, 448, 471, 492, 518, 520, 542], "del": 542, "delet": [6, 22], "delta": [10, 267, 269, 492, 518, 520], "demonstr": [0, 4, 106], "denot": [227, 522], "dens": [176, 192, 251], "densiti": 168, "depend": [4, 34, 98, 120, 126, 132, 134, 203, 205, 209, 215, 218, 220, 221, 229, 266, 268, 476, 525], "deprec": 6, "deprecate_with_doc": 6, "depth": [73, 74, 75, 104, 105, 171, 473, 487, 491, 524], "deriv": 164, "descend": 221, "descr": 106, "describ": [88, 106, 215, 226, 242, 460, 538], "descript": [88, 106, 127, 129, 168, 242, 460, 535], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 67, 110, 111, 119, 127, 128, 129, 159, 160, 162, 173, 229, 241, 388, 389, 455, 501, 505, 526, 527], "destin": [74, 75, 171, 256, 401, 402, 473, 491, 497, 524], "destruct": 542, "det": [6, 219], "detail": [35, 122, 124, 128, 129, 133, 134, 136, 138, 153, 211, 228, 472, 507, 508, 511, 512, 515, 535], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 69, 80, 83, 84, 91, 92, 101, 114, 115, 117, 149, 150, 151, 152, 155, 156, 158, 172, 196, 202, 203, 209, 218, 219, 226, 231, 232, 233, 234, 235, 236, 244, 247, 253, 254, 257, 384, 396, 397, 404, 405, 456, 459, 461, 467, 474, 476, 478, 480, 481, 482, 486, 488, 489, 493, 498, 499, 502, 513, 514, 516, 522], "devel": 4, "develop": [3, 4], "deviat": [103, 248, 264, 267, 269, 374, 406, 421, 428, 492, 520], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 79, 88, 94, 95, 97, 103, 108, 110, 111, 119, 120, 123, 137, 141, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 242, 243, 244, 248, 249, 251, 264, 267, 269, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 460, 490, 492, 505, 507, 511, 519, 520, 522, 526, 527], "df": [410, 426, 448, 449], "dfden": [414, 427], "dfnum": [414, 427], "dft": [10, 121, 126, 127, 131, 132, 135], "di": [95, 96], "diag": [6, 97, 98, 108, 119, 145, 146, 173, 204, 206, 221, 476, 502], "diag_indic": [6, 96, 139], "diag_indices_from": [6, 95, 139], "diagflat": [6, 94, 98, 502], "diagon": [6, 94, 95, 96, 97, 103, 108, 119, 139, 173, 199, 205, 206, 207, 226, 243, 379, 476, 502, 505, 506, 507, 508, 510, 511, 512, 535], "dice": 423, "dict": 391, "dictionari": 106, "diff": [6, 90, 107, 164, 168], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 79, 88, 90, 94, 97, 99, 103, 106, 107, 110, 111, 119, 122, 123, 127, 128, 130, 133, 136, 137, 140, 145, 146, 147, 154, 155, 156, 157, 159, 160, 162, 164, 173, 179, 207, 215, 226, 229, 230, 241, 242, 244, 251, 342, 387, 388, 389, 394, 396, 397, 402, 460, 465, 471, 493, 497, 505, 507, 511, 518, 519, 526, 527, 538], "differenti": 481, "digit": [6, 10, 140, 168], "dim": [17, 456], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 73, 74, 75, 81, 85, 86, 87, 95, 98, 99, 103, 104, 106, 116, 128, 129, 141, 145, 146, 164, 171, 176, 177, 192, 201, 203, 211, 213, 215, 218, 222, 223, 226, 227, 228, 242, 245, 246, 248, 249, 250, 251, 252, 256, 259, 260, 263, 264, 265, 266, 267, 268, 269, 350, 354, 359, 370, 382, 385, 387, 398, 402, 406, 436, 438, 439, 441, 455, 456, 460, 464, 471, 477, 487, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 507, 508, 511, 512, 515, 516, 517, 520, 522, 523, 535, 538], "dimension": [2, 4, 33, 78, 82, 85, 88, 93, 95, 96, 97, 98, 99, 100, 103, 107, 108, 121, 122, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 154, 155, 157, 164, 170, 176, 192, 201, 209, 216, 218, 224, 225, 242, 246, 250, 251, 252, 259, 260, 263, 265, 267, 269, 373, 382, 387, 390, 398, 460, 484, 492, 494, 496, 501, 504, 515, 520, 521, 523, 528], "direct": [10, 87, 99, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 145, 146, 164, 201, 384, 471], "directli": [106, 156, 176, 241, 385, 497], "directori": 163, "dirichlet": 6, "discard": 514, "discont": 518, "discontinu": 518, "discret": [3, 10, 78, 82, 90, 99, 107, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 164, 406, 481, 528], "disp": 6, "dispers": 451, "displac": [103, 375], "disregard": 465, "distanc": [164, 486], "distinct": [150, 151, 247, 253, 465], "distinguish": 106, "distribut": [3, 4, 241, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 538], "divid": [6, 39, 104, 105, 149, 152, 170, 254, 461, 487, 513, 523], "divis": [101, 149, 152, 254, 396, 397, 461, 487, 513, 514], "divisor": [161, 194, 267, 269, 492, 520], "divmod": [6, 535], "dlpack": 153, "dmlc": 153, "dn": [406, 433, 435], "do": [3, 4, 106, 243, 249, 408, 470, 504], "docstr": 535, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 352, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 535], "doe": [22, 23, 39, 68, 93, 103, 108, 118, 120, 135, 150, 151, 153, 218, 258, 261, 262, 352, 394, 465, 487, 496], "domain": [10, 126, 131], "done": [3, 49, 103, 108, 225, 337, 515, 518], "dot": [6, 103, 108, 109, 177, 199, 206, 208, 214, 217, 218, 220, 221, 223, 224, 225, 227, 244, 500, 521, 522], "doubl": [9, 223, 419, 500], "down": 146, "dp": [101, 202, 205, 219, 220, 396, 397, 493, 513], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 259, 260, 263, 265, 266, 337, 342, 387, 388, 389, 400, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "dpnp": [0, 2, 3, 4, 10, 528, 535, 538, 539, 542], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 79, 94, 95, 97, 110, 111, 119, 123, 137, 140, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 174, 176, 229, 230, 241, 243, 251, 270, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527, 528], "dpnp_iface_arraycr": [251, 387], "draw": [406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "drawn": [406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 432, 434, 437, 440, 446, 447, 448, 449, 450, 451, 452, 453, 454, 476], "drill": [408, 425], "driver": 2, "drop": [3, 106], "dsplit": [6, 74, 75, 105, 487], "dst": 81, "dstack": [6, 73, 74, 75, 171, 473, 487, 491, 524], "dt": [106, 504], "dt2": 106, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 74, 75, 76, 77, 80, 83, 84, 86, 88, 89, 90, 91, 92, 93, 95, 101, 103, 108, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 178, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 214, 217, 221, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 343, 344, 356, 362, 371, 374, 376, 379, 381, 383, 384, 386, 388, 389, 395, 396, 397, 398, 399, 404, 405, 406, 428, 434, 450, 459, 460, 461, 463, 466, 467, 468, 472, 473, 474, 478, 479, 480, 481, 482, 485, 486, 488, 489, 491, 492, 493, 494, 496, 498, 499, 502, 505, 506, 510, 513, 514, 520, 522, 523, 524, 526, 527, 535], "due": [135, 542], "dump": 6, "dx": [164, 504], "dy": 164, "dz": 164, "e": [9, 10, 14, 25, 27, 47, 60, 88, 89, 98, 106, 110, 111, 116, 119, 122, 126, 127, 128, 129, 132, 134, 135, 147, 155, 159, 160, 164, 173, 196, 204, 219, 224, 228, 231, 249, 388, 389, 406, 458, 462, 465, 495, 505, 517, 526, 527], "ea": 109, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 76, 77, 80, 83, 84, 89, 90, 95, 98, 100, 101, 103, 104, 106, 109, 112, 114, 115, 117, 122, 124, 126, 128, 129, 132, 133, 134, 136, 138, 145, 146, 147, 148, 149, 152, 156, 164, 165, 166, 168, 169, 170, 175, 178, 182, 184, 185, 192, 196, 197, 198, 201, 204, 205, 206, 207, 209, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 254, 256, 257, 258, 368, 383, 385, 386, 391, 395, 396, 397, 399, 402, 408, 425, 456, 457, 459, 461, 462, 465, 467, 468, 469, 472, 474, 478, 479, 480, 482, 487, 488, 489, 491, 493, 497, 498, 499, 501, 504, 507, 508, 511, 512, 513, 514, 515, 516, 522, 523, 535], "easier": 496, "easiest": [4, 391], "easili": [0, 169], "edg": [72, 100, 168, 169, 391], "edge_ord": 164, "ediff1d": [6, 99, 164], "effect": [109, 147, 150, 151, 247, 253, 396, 397, 518], "effici": [10, 121, 135, 155, 213, 217, 221], "efgh": 109, "eig": [6, 205, 206, 207], "eigenvalu": [204, 205, 206, 207, 538], "eigenvector": [204, 205, 206, 207], "eigh": [6, 204, 206, 207], "eight": 215, "eigval": [6, 204, 205, 207], "eigvalsh": [6, 204, 205, 206], "einstein": [102, 108, 109, 177, 223, 225, 244, 390, 500, 522], "einsum": [6, 102, 109, 177, 223, 225, 244, 390, 500, 522], "einsum_path": [6, 108], "either": [37, 38, 45, 56, 87, 88, 98, 106, 122, 124, 126, 128, 129, 132, 134, 136, 138, 139, 164, 177, 203, 205, 207, 215, 218, 242, 259, 260, 263, 265, 266, 268, 456, 460, 465, 475, 476, 497, 504], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 80, 81, 83, 84, 88, 89, 90, 93, 96, 98, 99, 100, 101, 103, 106, 107, 109, 112, 114, 115, 117, 118, 119, 120, 122, 124, 128, 129, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 195, 196, 197, 198, 199, 201, 203, 206, 212, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 250, 252, 253, 254, 255, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 332, 333, 340, 341, 343, 344, 346, 347, 350, 352, 353, 356, 358, 360, 361, 366, 367, 368, 369, 371, 374, 375, 378, 381, 383, 384, 385, 386, 394, 395, 396, 397, 398, 399, 401, 403, 455, 457, 458, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 506, 508, 510, 512, 513, 514, 515, 516, 518, 520, 522, 525, 535, 538, 542], "element_count": [103, 371, 483], "ellipsi": 108, "els": [0, 219, 275], "elsewher": [119, 173, 505, 525], "empti": [4, 6, 36, 103, 111, 122, 124, 128, 129, 133, 134, 136, 138, 155, 159, 160, 209, 347, 388, 389, 391, 394, 487, 526, 527, 535], "empty_lik": [6, 36, 110, 160, 389, 527], "enabl": [139, 213, 217, 221], "encount": [261, 262, 263, 265, 476], "end": [22, 23, 93, 98, 106, 107, 109, 127, 162, 229, 241, 391], "end_tim": 0, "end_valu": 391, "endian": 106, "endpoint": [23, 162, 229, 241, 504], "engin": 442, "enlarg": 465, "enough": 168, "ensur": 463, "entir": [56, 88, 126, 168, 169, 242, 248, 263, 264, 265, 267, 269, 391, 460, 492, 520], "entiti": 465, "entri": [39, 93, 103, 104, 106, 110, 118, 126, 132, 134, 139, 144, 145, 146, 170, 373, 487, 490, 522, 523], "enumer": 153, "env": 4, "environ": 4, "ep": [140, 213, 217, 384, 458, 486], "epsilon": [213, 458], "epsneg": 140, "equal": [6, 16, 17, 21, 33, 37, 38, 39, 56, 60, 63, 74, 75, 82, 86, 90, 103, 104, 119, 162, 164, 165, 166, 168, 169, 170, 171, 179, 181, 189, 191, 196, 197, 198, 203, 212, 217, 218, 225, 229, 241, 254, 361, 386, 391, 406, 416, 450, 461, 467, 468, 472, 473, 478, 481, 484, 487, 490, 491, 505, 507, 511, 517, 523, 524], "equal_nan": [17, 37, 179, 515], "equat": [209, 220, 224, 225, 538], "equiv": [49, 68, 74, 75, 81, 103, 108, 171, 212, 244, 337, 473, 491, 522, 524], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 79, 87, 88, 91, 92, 93, 101, 102, 103, 104, 105, 109, 116, 118, 143, 150, 151, 152, 170, 192, 222, 223, 224, 228, 242, 245, 254, 257, 277, 332, 333, 345, 359, 367, 370, 380, 382, 385, 390, 393, 395, 404, 405, 406, 434, 460, 461, 464, 471, 472, 477, 484, 493, 494, 496, 500, 503, 513, 515, 517, 522, 523, 535, 542], "error": [88, 104, 108, 113, 126, 131, 170, 204, 242, 456, 460, 487, 490, 523, 528, 535], "essenti": 4, "estim": [86, 169, 408, 425, 504], "et": 10, "etc": [10, 36, 41, 106, 122, 124, 128, 129, 133, 134, 136, 138, 425], "euclidean": 209, "euler_gamma": 9, "evalu": [16, 17, 21, 103, 108, 109, 112, 181, 183, 189, 223, 225, 250, 332, 333, 390, 476, 500], "even": [10, 103, 106, 123, 125, 126, 127, 130, 131, 132, 134, 135, 137, 181, 183, 189, 249, 354, 391, 468, 472], "evenli": [23, 162, 229, 241, 468, 504], "event": 236, "everi": [134, 402, 497], "everywher": [132, 481], "exact": [118, 214, 394], "exactli": [10, 48, 158, 406, 434, 476], "examin": 209, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 345, 347, 350, 351, 352, 354, 359, 361, 365, 367, 370, 371, 372, 375, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 535, 542], "exce": [236, 487], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 74, 75, 76, 77, 79, 80, 83, 84, 91, 92, 99, 100, 101, 102, 103, 110, 111, 112, 114, 115, 117, 119, 120, 133, 134, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 170, 171, 172, 173, 178, 182, 184, 185, 194, 195, 196, 197, 198, 214, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 248, 252, 253, 254, 257, 263, 264, 265, 266, 267, 268, 269, 337, 352, 383, 384, 386, 388, 389, 395, 396, 397, 398, 399, 404, 405, 455, 459, 461, 462, 463, 467, 468, 474, 478, 479, 480, 482, 484, 486, 487, 488, 489, 492, 493, 494, 498, 499, 513, 514, 520, 522, 526, 527, 538], "exclud": [11, 12, 22, 229, 406, 450], "exclus": [406, 434], "execut": [3, 4, 40, 41, 42, 82, 86, 113, 156, 255, 266, 409, 411, 412, 422, 427, 443, 542], "executor": 0, "exist": [10, 73, 74, 75, 105, 106, 116, 153, 171, 473, 487, 491, 517, 524, 538], "exp": [6, 10, 115, 117, 121, 219, 233, 235, 242], "exp2": [6, 114, 117], "expand": [99, 116], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 76, 77, 80, 83, 84, 85, 88, 89, 90, 91, 92, 101, 102, 106, 112, 114, 115, 117, 120, 132, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 172, 175, 178, 179, 182, 184, 185, 194, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 252, 253, 254, 257, 261, 262, 264, 266, 267, 268, 269, 383, 384, 386, 395, 396, 397, 398, 399, 404, 405, 457, 459, 460, 461, 467, 468, 472, 474, 478, 479, 480, 481, 482, 486, 488, 489, 492, 493, 494, 498, 499, 513, 514, 520, 525], "explain": [124, 129, 134, 138, 535], "explan": 106, "explicit": 108, "explicitli": [98, 122, 124, 128, 129, 133, 134, 136, 138], "exploit": [10, 135], "explor": [109, 408, 425], "expm1": [6, 114, 115, 233], "expon": [10, 114, 115, 117, 147, 195, 212, 235, 236, 242, 396, 397, 432, 538], "exponenti": [6, 10, 109, 235, 236, 242, 419, 445], "expos": [154, 535], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 108, 109, 195, 230, 542], "extend": [10, 106, 193, 391, 535], "extens": [0, 1, 3, 4, 9, 163, 230, 528], "extra": [106, 132, 158], "extract": [6, 94, 97, 98, 108, 119, 143, 173, 176, 243, 394, 476, 496, 502], "extrapol": 465, "extrema": 538, "ey": [6, 76, 77, 85, 103, 128, 129, 150, 151, 173, 177, 193, 208, 212, 213, 224, 225, 226, 240, 247, 253, 477, 502], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 106, 108, 110, 111, 112, 114, 115, 117, 119, 120, 123, 135, 137, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 164, 165, 166, 167, 172, 175, 178, 182, 183, 184, 185, 194, 195, 196, 197, 198, 212, 215, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 253, 254, 257, 337, 342, 350, 383, 384, 386, 388, 389, 395, 396, 397, 399, 404, 405, 427, 455, 456, 457, 459, 461, 463, 464, 467, 468, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 509, 513, 514, 516, 522, 525, 526, 527], "f0": 106, "f1": 106, "f2": 106, "f4": 68, "f8": [68, 106], "f_contigu": [43, 45, 183, 463], "f_k": 10, "fab": [6, 11, 12], "fact": 206, "factor": [10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 199, 218], "fail": [103, 370, 408], "fallback": [204, 206, 409, 411, 412, 422, 427, 443], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 33, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 64, 65, 67, 68, 79, 85, 86, 88, 90, 93, 100, 103, 106, 108, 109, 111, 112, 118, 139, 153, 156, 160, 162, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 211, 213, 215, 217, 221, 222, 228, 229, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 252, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 275, 332, 333, 334, 335, 337, 355, 356, 357, 362, 374, 376, 381, 385, 386, 389, 398, 400, 460, 463, 464, 476, 479, 484, 492, 494, 515, 519, 520, 525, 527], "famili": 10, "fanci": 496, "fashion": [236, 535], "fast": [10, 121, 122, 124, 128, 129, 134, 135, 138], "fastcopyandtranspos": 6, "faster": [10, 150, 151], "fastest": [103, 183, 350, 455, 464], "fb": [109, 509], "featur": 106, "fetch": 464, "few": 139, "fft": [6, 528, 538], "fft2": [6, 121, 124, 128], "fftfreq": [6, 10, 121, 125, 130, 137], "fftn": [6, 121, 122, 129, 135, 138], "fftshift": [6, 10, 122, 124, 129, 130], "fh": 155, "field": [106, 250], "field1": 106, "file": [154, 155, 157, 158, 163, 230], "filenam": [155, 230], "fill": [6, 22, 36, 103, 110, 111, 139, 159, 160, 168, 169, 250, 258, 342, 388, 389, 465, 505, 526, 527], "fill_diagon": 6, "fill_valu": [159, 160], "filt": 509, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 481, 505, 507, 511, 519, 526, 527], "final": [4, 10, 134, 135, 136, 138, 162, 241], "find": [34, 57, 100, 103, 120, 168, 213, 217, 221, 369, 384, 385, 462, 475, 484, 486, 515, 538], "find_common_typ": 6, "fine": 4, "finfo": [217, 384, 458, 486], "finfo_object": 140, "finit": [42, 182, 184, 185, 186, 187, 258, 486], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 62, 63, 64, 73, 74, 75, 80, 87, 88, 98, 101, 102, 103, 106, 109, 112, 115, 122, 124, 126, 128, 129, 144, 147, 149, 150, 151, 152, 161, 164, 165, 166, 168, 169, 170, 172, 177, 179, 183, 191, 193, 194, 196, 197, 198, 201, 203, 210, 214, 223, 224, 226, 227, 230, 235, 236, 237, 239, 240, 243, 244, 246, 247, 249, 250, 252, 253, 254, 257, 259, 260, 350, 386, 390, 391, 394, 396, 397, 398, 455, 461, 464, 467, 469, 471, 473, 475, 476, 484, 485, 489, 493, 494, 495, 497, 500, 502, 513, 515, 517, 521, 522, 523, 524], "fit": [209, 462], "fix": [6, 35, 70, 98, 106, 148, 401, 468, 472, 514], "flag": [43, 45, 103, 106, 183, 342, 463], "flanneri": 10, "flat": [31, 32, 103, 107, 142, 350, 352, 455, 456, 462, 516], "flatnonzero": [6, 385], "flatten": [6, 22, 31, 32, 33, 74, 75, 85, 89, 90, 93, 94, 97, 98, 103, 107, 139, 143, 168, 169, 228, 246, 249, 252, 259, 260, 261, 262, 266, 268, 349, 364, 372, 385, 390, 402, 455, 456, 462, 469, 484, 496, 497, 502, 515, 516, 521], "flexibl": [102, 106, 155, 214], "flip": [6, 59, 61, 98, 139, 145, 146, 178, 203, 408, 471], "fliplr": [6, 98, 139, 144, 146, 203, 471], "flipud": [6, 98, 139, 144, 145, 203, 471], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 68, 80, 88, 90, 106, 110, 111, 115, 119, 120, 123, 137, 140, 141, 147, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 173, 175, 195, 209, 212, 213, 215, 217, 228, 229, 230, 235, 236, 241, 242, 246, 248, 249, 252, 258, 264, 267, 269, 384, 388, 389, 396, 397, 406, 410, 435, 436, 438, 439, 441, 444, 445, 447, 450, 457, 458, 459, 460, 474, 481, 492, 505, 518, 520, 526, 527, 535, 538], "float16": [9, 147], "float32": [0, 9, 42, 44, 49, 68, 89, 103, 106, 108, 147, 337, 384, 406, 428, 433, 435, 436, 438, 439, 441, 447, 450, 463, 466], "float64": [0, 9, 44, 49, 56, 68, 90, 103, 106, 108, 337, 406, 407, 413, 414, 415, 417, 419, 420, 421, 428, 429, 432, 433, 435, 436, 438, 439, 440, 441, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 466, 481, 486, 523], "float_pow": [6, 396, 397], "floor": [6, 35, 70, 141, 149, 254, 461, 468, 472, 514], "floor_divid": [6, 254, 461], "flop": 109, "flush": 155, "fmax": [6, 151, 246, 247, 253, 263, 396, 397], "fmin": [6, 150, 247, 252, 253, 265, 396, 397], "fmod": [6, 254, 396, 397, 461], "fn": 156, "fname": 230, "follow": [4, 10, 56, 106, 116, 132, 140, 153, 174, 205, 207, 215, 217, 223, 391, 463, 500, 535, 538], "forc": [106, 108], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 73, 79, 94, 97, 103, 105, 108, 109, 128, 129, 132, 159, 160, 162, 181, 189, 192, 203, 211, 222, 226, 229, 241, 245, 380, 391, 465, 473, 519, 524], "format": [106, 153, 155, 158, 538], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 402, 497], "forth": [223, 500], "fortran": [45, 49, 103, 183, 337, 350, 455, 456, 463, 464, 516], "forward": [10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 164], "found": [4, 475, 535], "four": [406, 435], "fourier": [10, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 528], "fourth": 122, "frac": [10, 504], "fraction": [255, 514], "free": [103, 367], "freedom": [267, 269, 448, 492, 520], "freq": [123, 125, 130, 137], "freq_spectrum": 126, "frequenc": [10, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137], "freshli": [186, 187, 522], "frexp": [6, 195], "fro": [200, 211, 215, 228], "frobeniu": [200, 215], "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 68, 71, 74, 75, 79, 81, 88, 91, 92, 94, 95, 97, 98, 103, 105, 106, 108, 110, 111, 115, 118, 119, 123, 127, 136, 137, 138, 144, 147, 153, 154, 155, 156, 157, 158, 159, 160, 164, 168, 171, 173, 176, 192, 195, 204, 206, 207, 213, 214, 226, 230, 242, 243, 250, 251, 338, 342, 373, 378, 387, 388, 389, 391, 394, 398, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 460, 464, 465, 466, 471, 473, 475, 476, 489, 490, 491, 494, 496, 497, 502, 505, 507, 509, 511, 512, 515, 517, 518, 519, 524, 525, 526, 527, 538], "from_": 68, "from_dlpack": 6, "frombuff": [6, 155, 157, 158, 230], "fromfil": [6, 154, 157, 158], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 154, 155, 158], "frompyfunc": 6, "fromregex": [6, 230], "fromstr": [6, 154, 155, 157, 230], "front": 509, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 352, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "full_lik": [6, 36, 111, 159, 389, 527], "full_matric": 221, "fulli": [106, 249], "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 79, 82, 86, 88, 91, 92, 98, 101, 103, 108, 110, 111, 113, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 134, 135, 138, 139, 147, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 173, 183, 192, 201, 203, 204, 206, 210, 211, 214, 215, 216, 222, 223, 226, 227, 228, 230, 233, 235, 236, 242, 243, 245, 250, 254, 255, 266, 332, 333, 342, 345, 352, 367, 370, 380, 388, 389, 391, 396, 397, 402, 404, 405, 406, 409, 411, 412, 422, 427, 443, 455, 460, 461, 463, 465, 472, 473, 478, 481, 492, 496, 497, 500, 501, 507, 508, 511, 512, 513, 517, 520, 524, 525, 526, 527, 528, 535, 538], "fundament": [10, 106], "further": [93, 507, 511], "futur": [106, 169], "fweight": 86, "g": [4, 10, 106, 110, 111, 119, 159, 160, 173, 215, 388, 389, 406, 505, 526, 527, 542], "g2545e7ffbd3": 6, "gamma": [6, 446], "gauss": 10, "gaussian": [406, 428, 452], "gc": 109, "gcd": [6, 194], "gen": 108, "gender": 106, "gener": [4, 10, 33, 56, 106, 127, 132, 135, 138, 162, 177, 204, 205, 206, 207, 211, 217, 218, 228, 230, 241, 406, 408, 411, 442, 455, 486, 504, 507, 511, 519, 535, 538], "genfromtxt": [6, 230], "geometr": [6, 162, 229], "geomspac": [6, 229, 241], "get": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 96, 97, 103, 110, 111, 119, 123, 126, 132, 134, 137, 147, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 222, 227, 229, 230, 241, 243, 251, 342, 370, 387, 388, 389, 391, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 497, 505, 507, 508, 511, 512, 519, 522, 526, 527, 535], "get_arrai": 103, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 406], "get_sycl_devic": 406, "get_sycl_queu": 406, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 106], "getter": [103, 370], "gid": 169, "github": 153, "give": [10, 97, 103, 147, 169, 380, 464, 477, 483, 515], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 73, 79, 85, 86, 89, 90, 99, 102, 103, 105, 106, 107, 109, 110, 111, 118, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 150, 151, 159, 160, 162, 164, 168, 169, 179, 208, 215, 223, 227, 229, 241, 243, 246, 247, 249, 250, 252, 253, 261, 262, 263, 265, 266, 267, 268, 269, 334, 335, 337, 343, 344, 357, 362, 363, 368, 371, 374, 376, 381, 385, 388, 389, 394, 398, 400, 401, 406, 411, 433, 450, 460, 462, 463, 464, 468, 469, 470, 471, 473, 475, 476, 483, 487, 492, 494, 496, 500, 501, 504, 505, 515, 517, 520, 522, 524, 526, 527, 535], "global": 0, "golub": 215, "good": 418, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 79, 94, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 229, 230, 241, 251, 387, 388, 389, 505, 519, 526, 527], "grade": 106, "gradient": [6, 99, 107, 209], "graphic": 4, "great": 10, "greater": [6, 60, 63, 103, 104, 112, 149, 166, 196, 197, 198, 213, 218, 361, 386, 391, 467, 476, 478, 490, 518], "greater_equ": [6, 112, 165, 197, 198, 386], "greatest": [149, 161, 194], "greedi": [108, 109], "grid": [40, 41, 42, 156, 176, 216, 250, 251, 387, 390], "group": [34, 385], "guarante": [106, 463, 464], "guid": [2, 3], "gumbel": 6, "gz": 230, "h": [163, 199, 215, 218, 250], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 88, 89, 90, 100, 106, 112, 116, 126, 131, 132, 156, 164, 165, 166, 171, 175, 180, 181, 188, 189, 197, 198, 206, 219, 221, 226, 242, 248, 249, 254, 261, 262, 264, 266, 267, 268, 269, 386, 391, 398, 457, 458, 459, 460, 461, 462, 470, 474, 476, 490, 491, 492, 494, 495, 496, 501, 502, 516, 520, 535], "had": [402, 497], "hadamard": 109, "half": [14, 25, 122, 124, 125, 126, 128, 129, 229, 406, 436, 438, 439, 441, 450, 495], "ham": 6, "han": 6, "hand": [87, 201, 225], "handl": [23, 106, 120, 230, 385, 402, 456, 496, 497, 538], "happen": [49, 56, 103, 337, 408, 504], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 106, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 73, 74, 75, 76, 77, 80, 83, 84, 87, 88, 89, 90, 91, 92, 101, 102, 105, 106, 112, 114, 115, 117, 120, 128, 129, 138, 140, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 171, 172, 175, 178, 179, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 203, 209, 211, 214, 216, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 248, 249, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 383, 384, 386, 394, 395, 396, 397, 398, 399, 404, 405, 425, 457, 459, 460, 461, 462, 463, 464, 467, 468, 472, 473, 474, 478, 479, 480, 481, 482, 486, 488, 489, 491, 492, 493, 494, 498, 499, 501, 513, 514, 518, 520, 522, 524, 535], "hd": 109, "header": 163, "heavisid": 6, "hello": 106, "help": 542, "helper": 538, "henc": [116, 164], "here": [6, 33, 106, 108, 126, 131, 132, 484, 507, 511], "hermit": [205, 207], "hermitian": [126, 131, 132, 134, 135, 199, 204, 205, 206, 207, 213, 217, 221, 222, 538], "hfft": [6, 10, 131], "hierarchi": 191, "high": [132, 406, 434, 437, 450], "higher": [103, 108, 170, 354, 521, 523], "highest": 121, "highli": 155, "hist": [168, 444], "hist_0": 169, "hist_1": 169, "histogram": [6, 100, 169, 475, 538], "histogram2d": 6, "histogram_bin_edg": [6, 168], "histogramdd": [6, 168], "hold": [72, 89, 90, 168, 215, 249, 261, 262, 266, 268, 455, 502], "homogen": 106, "hopkin": 215, "horizont": [73, 74, 75, 98, 105, 139, 144, 170, 171, 203, 471, 473, 487, 491, 524], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 505, 507, 511, 519, 526, 527], "household": 218, "how": [0, 4, 106, 132, 135, 164, 401, 402, 456, 496, 497, 507, 511], "howev": [103, 372, 496], "hsplit": [6, 74, 75, 487], "hstack": [6, 73, 74, 75, 105, 473, 487, 491, 524], "http": [4, 153], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 480, 482, 498, 499, 538], "hypergeometr": 6, "hypot": [6, 460], "hypotenus": [172, 460], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 277, 337, 342, 352, 354, 361, 367, 370, 372, 375, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 535, 542], "i0": 6, "i1": [103, 106, 375], "i2": [103, 106, 375], "i3": [103, 375], "i4": [68, 106], "i7": 108, "i8": [68, 106], "iaxi": 391, "iaxis_pad_width": 391, "icpx": 4, "icx": 4, "id": [16, 21], "ideal": 481, "ident": [3, 6, 16, 21, 42, 88, 106, 119, 130, 139, 220, 227, 445, 522], "identifi": 106, "ieee": 140, "ifft": [6, 121, 128, 129, 131, 132, 137], "ifft2": [6, 122, 127, 129], "ifftn": [6, 124, 127, 128], "ifftshift": [6, 10, 125, 129], "ignor": [31, 32, 87, 106, 150, 151, 158, 168, 169, 246, 247, 248, 252, 253, 259, 260, 263, 264, 265, 267, 269, 492, 520], "ihfft": [6, 126], "ii": [108, 429], "iinfo": 423, "iinfo_object": 174, "ij": [108, 109, 250], "ijk": 108, "il": 109, "il1": 507, "il2": 507, "illustr": 206, "ilm": 108, "im": [216, 390], "imag": [6, 10, 20, 37, 103, 457, 458, 465, 535], "imaginari": [20, 37, 103, 132, 150, 151, 175, 180, 181, 188, 189, 204, 205, 207, 212, 247, 253, 258, 351, 457, 458, 485, 515], "implement": [3, 4, 6, 44, 121, 153], "impli": [106, 455], "implicit": 108, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 345, 347, 350, 351, 352, 354, 359, 361, 365, 370, 371, 372, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 431, 440, 444, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "improv": 108, "in1d": 6, "in_array1": 113, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 79, 88, 94, 97, 100, 108, 109, 120, 159, 160, 162, 163, 168, 169, 181, 189, 217, 229, 241, 242, 248, 249, 263, 264, 265, 267, 269, 406, 450, 460, 481, 492, 519, 520], "include_initi": 88, "inclus": [406, 434, 437, 476], "increas": [100, 106, 116, 127, 132, 168, 391, 465, 519], "ind": [33, 100, 224, 401, 402, 507, 508, 511, 512], "independ": 201, "index": [4, 22, 31, 32, 33, 34, 71, 103, 106, 109, 119, 122, 128, 136, 143, 153, 176, 183, 192, 250, 259, 260, 338, 350, 352, 375, 385, 401, 402, 455, 456, 464, 465, 475, 476, 487, 496, 497, 507, 511, 515, 516, 525, 528, 538], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 88, 93, 95, 96, 100, 103, 104, 106, 108, 109, 118, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 153, 156, 168, 170, 224, 225, 243, 244, 251, 259, 260, 334, 335, 336, 360, 363, 369, 378, 385, 393, 401, 402, 456, 475, 478, 479, 484, 487, 496, 497, 503, 507, 508, 511, 512, 515, 516, 522, 523, 525], "indices_or_sect": [39, 104, 170, 487, 523], "indirect": [33, 484], "individu": 416, "inequ": 386, "inexact": [147, 258, 266, 268], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 80, 101, 179, 182, 184, 185, 186, 187, 200, 211, 215, 228, 231, 232, 234, 247, 253, 258, 259, 260, 263, 265, 268, 399, 486, 488, 513], "infer": [42, 88, 242, 460, 464], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 149, 182, 184, 185, 186, 187, 254, 258, 263, 265, 268, 461, 514, 538], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 200, 215, 481], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 103, 106, 126, 132, 134, 140, 348, 463, 535, 538], "initi": [18, 19, 88, 103, 110, 158, 246, 252, 263, 265, 266, 268, 355, 357, 362, 376, 398, 406, 494], "inner": [6, 87, 108, 109, 210, 214, 244, 390], "innermost": [203, 211, 226, 245], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 72, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 210, 211, 213, 215, 216, 218, 219, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 350, 359, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 428, 434, 450, 455, 457, 458, 459, 460, 461, 462, 463, 467, 468, 469, 470, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 513, 514, 515, 518, 519, 520, 521, 522, 523, 526, 527], "insert": [6, 22, 31, 32, 93, 98, 100, 103, 108, 116, 162, 168, 229, 241, 259, 260, 263, 265, 369, 402, 464, 475, 476, 538], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 126, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 173, 176, 229, 230, 241, 243, 244, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 522, 526, 527], "instead": [34, 49, 98, 102, 103, 108, 116, 148, 162, 168, 169, 176, 183, 214, 229, 236, 241, 246, 252, 337, 385, 398, 456, 465, 494, 535], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 44, 56, 66, 67, 74, 75, 85, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 103, 104, 106, 110, 111, 112, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 170, 173, 174, 176, 201, 203, 209, 212, 215, 223, 224, 225, 226, 227, 228, 229, 241, 242, 243, 246, 248, 249, 252, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 352, 359, 371, 380, 382, 388, 389, 391, 392, 393, 398, 401, 402, 406, 434, 437, 456, 460, 462, 464, 465, 469, 470, 471, 472, 483, 484, 487, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 526, 527, 535], "int16": 106, "int32": [0, 9, 44, 68, 106, 110, 111, 119, 154, 157, 159, 160, 173, 230, 266, 268, 388, 389, 406, 408, 416, 418, 423, 425, 431, 434, 450, 466, 494, 505, 526, 527], "int64": [0, 9, 68, 106, 266, 268, 466], "int8": [106, 398], "int_": 9, "int_0": 504, "int_t": 504, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 88, 89, 90, 100, 103, 104, 106, 141, 144, 147, 148, 149, 153, 161, 168, 170, 174, 178, 192, 194, 195, 196, 212, 215, 223, 224, 226, 228, 242, 246, 248, 252, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 372, 380, 396, 397, 398, 401, 406, 434, 437, 442, 456, 460, 461, 462, 464, 467, 468, 469, 471, 472, 475, 476, 477, 487, 489, 492, 494, 496, 500, 502, 514, 515, 516, 518, 520, 523, 535], "integer_lik": [223, 500], "integr": [3, 4, 56, 88, 90, 147, 168, 242, 248, 249, 255, 264, 267, 269, 396, 397, 460, 492, 494, 504, 520], "intel": [3, 108], "intend": [103, 380], "intent": 147, "interchang": [103, 256, 377, 495], "interfac": [0, 154], "interior": 164, "intermedi": [89, 108, 109], "intern": [33, 406, 484], "interp": 6, "interpol": [132, 465, 481], "interpret": [2, 40, 41, 42, 48, 67, 79, 103, 106, 126, 132, 134, 154, 192, 243, 352, 385, 401, 535], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 100, 116, 162, 229, 241, 406, 434, 436, 438, 439, 441, 449, 450, 495], "intp": [266, 268], "intrins": 535, "introduc": 469, "introduct": 10, "introselect": [103, 361, 392], "inv": [6, 200, 217], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 195, 208, 217, 224, 225, 233, 452, 480, 482, 498, 499, 515], "invert": [6, 59, 61, 208, 217, 224], "invok": 535, "involv": 224, "io": [153, 230], "irfft": [6, 123, 126, 131, 133, 134, 135, 137], "irfft2": [6, 132, 134, 136], "irfftn": [6, 132, 133, 138], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 106, "isbuiltin": 106, "isclos": [6, 17], "iscomplex": [6, 181, 188], "iscomplexobj": [6, 180, 189], "isfinit": [6, 184, 185, 186, 187, 258, 263, 265, 268], "isfortran": 6, "isin": 6, "isinf": [6, 182, 185, 186, 187, 258], "isn": 106, "isnan": [6, 182, 184, 186, 187, 258, 261, 262, 263, 265, 266, 268], "isnat": [6, 185], "isneginf": [6, 182, 184, 185, 187, 258], "isposinf": [6, 182, 184, 185, 186, 258], "isreal": [6, 180, 189], "isrealobj": [6, 181, 188], "isscalar": 6, "issctyp": 6, "issu": 128, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 103, 154, 155, 157, 515, 528], "item_dtyp": 106, "item_hasobject": 106, "item_is_point": 106, "items": [103, 106], "itemset": 6, "iter": [6, 40, 41, 42, 103, 109, 142, 154, 155, 157, 158, 349, 350, 402, 455, 465, 497, 517, 538], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 94, 103, 126, 132, 134, 140, 168, 169, 173, 204, 205, 206, 207, 214, 217, 225, 248, 264, 267, 269, 380, 393, 443, 455, 460, 464, 484, 492, 503, 504, 505, 520, 535], "itself": [49, 103, 106, 195, 258, 337, 535], "iu": 243, "iu1": [243, 511], "iu2": 511, "ix_": 6, "ixgrid": 192, "j": [36, 76, 77, 103, 108, 122, 124, 126, 127, 128, 129, 131, 132, 135, 136, 138, 147, 156, 175, 176, 193, 199, 204, 205, 215, 216, 223, 226, 234, 244, 258, 380, 390, 399, 402, 457, 485, 489, 497, 500], "j1": 193, "jame": 10, "ji": 108, "jil": 108, "jk": [108, 109], "jl": 109, "john": [10, 215], "join": [73, 74, 75, 105, 171, 473, 487, 491, 517, 524, 538], "jump": [91, 404], "just": [73, 98, 106, 122, 128, 133, 135, 136], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 94, 97, 101, 103, 108, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 160, 161, 165, 166, 167, 172, 175, 178, 182, 184, 185, 193, 194, 195, 196, 197, 198, 209, 218, 220, 221, 222, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 247, 253, 254, 257, 277, 337, 342, 383, 384, 386, 389, 395, 396, 397, 399, 404, 405, 455, 457, 459, 461, 467, 468, 471, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 500, 505, 506, 507, 508, 510, 511, 512, 513, 514, 518, 522, 525, 527, 542], "kaiser": 6, "kappa": 451, "keep": [48, 49, 103, 337, 515], "keepdim": [16, 18, 19, 21, 31, 32, 56, 85, 103, 211, 215, 228, 242, 246, 248, 249, 252, 259, 260, 263, 264, 265, 266, 267, 268, 269, 332, 333, 334, 335, 355, 356, 357, 362, 374, 376, 381, 398, 400, 402, 460, 492, 494, 497, 520], "kei": [3, 33, 103, 106, 142, 282, 327, 484], "kernel": 481, "key2": 106, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 79, 80, 83, 84, 87, 91, 92, 94, 95, 97, 101, 103, 110, 111, 114, 115, 117, 119, 120, 123, 137, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 172, 173, 176, 178, 194, 195, 196, 201, 203, 210, 216, 226, 227, 230, 232, 233, 234, 235, 236, 243, 244, 247, 251, 253, 254, 255, 257, 258, 342, 383, 384, 387, 388, 389, 391, 395, 396, 397, 399, 404, 405, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 459, 461, 464, 467, 468, 474, 478, 479, 480, 482, 486, 493, 498, 499, 505, 507, 511, 513, 514, 519, 522, 525, 526, 527, 535], "ki": 108, "kind": [33, 49, 68, 74, 75, 81, 88, 103, 106, 108, 140, 171, 214, 242, 244, 336, 337, 361, 372, 392, 460, 464, 473, 484, 491, 522, 524, 538], "kl": [10, 108, 109], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 155, 444], "kron": 6, "kroneck": 193, "kth": [103, 361, 392], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 80, 83, 84, 91, 92, 101, 103, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 156, 161, 165, 166, 167, 172, 178, 182, 184, 185, 194, 195, 196, 197, 198, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 253, 254, 255, 257, 308, 339, 383, 384, 386, 391, 395, 396, 397, 399, 404, 405, 459, 461, 467, 468, 474, 478, 479, 480, 482, 486, 488, 489, 493, 498, 499, 513, 514], "l": [10, 39, 106, 199, 205, 207, 226], "la": [204, 206, 207], "label": 108, "laid": 45, "lam": 431, "lambda": 156, "lanczo": 481, "lapack": [204, 206], "laplac": 6, "laptop": 4, "larg": [10, 91, 106, 168, 217, 258, 404, 518, 542], "larger": [108, 121, 122, 124, 127, 128, 129, 131, 133, 134, 135, 136, 138, 140, 465, 502, 518], "largest": [10, 109, 135, 140, 148, 174, 209, 215, 254, 258, 461], "largest_singular_valu": 217, "last": [16, 21, 22, 33, 87, 98, 99, 103, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 144, 162, 164, 177, 183, 203, 214, 222, 223, 226, 229, 241, 244, 350, 354, 391, 398, 455, 464, 469, 475, 484, 490, 494, 500, 517, 518, 522], "later": [391, 542], "latest": [4, 153], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 150, 151, 247, 253, 402, 497], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 108, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 165, 166, 167, 172, 175, 178, 182, 184, 185, 194, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 253, 254, 257, 342, 348, 383, 384, 386, 388, 389, 395, 396, 397, 399, 404, 405, 455, 457, 459, 461, 463, 464, 467, 468, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 513, 514, 522, 525, 526, 527, 528], "lcm": [6, 161], "ldexp": 6, "ldot": 10, "lead": [127, 128, 129, 261, 262, 509], "learn": [3, 4, 236], "least": [53, 54, 55, 56, 96, 105, 106, 109, 116, 139, 145, 150, 151, 155, 181, 209, 218, 247, 253, 473, 524], "left": [10, 28, 31, 32, 35, 50, 60, 63, 85, 98, 100, 103, 145, 146, 196, 206, 211, 215, 228, 246, 252, 259, 260, 266, 268, 369, 398, 449, 467, 472, 475, 494, 504, 519], "left_shift": [6, 60, 63, 467], "leg": [172, 460], "legaci": 442, "len": [93, 103, 106, 124, 125, 126, 129, 131, 132, 133, 134, 138, 176, 209, 246, 250, 251, 252, 300, 477, 519], "length": [23, 39, 56, 89, 90, 99, 112, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 158, 162, 164, 168, 171, 204, 221, 222, 223, 241, 246, 249, 250, 252, 261, 262, 391, 402, 409, 464, 466, 473, 475, 476, 477, 490, 497, 500, 501, 524], "less": [6, 89, 90, 103, 112, 165, 166, 168, 169, 198, 209, 217, 226, 261, 262, 266, 268, 354, 386, 398, 476, 478, 494, 502], "less_equ": [6, 112, 165, 166, 197, 386], "let": [227, 408, 464, 522], "level": [528, 535], "level_zero": [23, 36, 40, 41, 42, 43, 45, 79, 94, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 229, 230, 241, 251, 387, 388, 389, 505, 519, 526, 527], "lexicograph": 515, "lexsort": [6, 33, 484], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 469, 470], "librari": [3, 4, 535], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 73, 93, 103, 105, 108, 110, 119, 134, 154, 155, 156, 157, 158, 159, 162, 173, 229, 230, 241, 243, 337, 350, 359, 382, 388, 402, 406, 450, 455, 463, 464, 497, 526, 538], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 76, 77, 79, 80, 82, 83, 84, 86, 91, 92, 101, 103, 106, 110, 111, 112, 113, 114, 115, 117, 119, 120, 140, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 172, 173, 174, 178, 182, 184, 185, 194, 195, 196, 197, 198, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 248, 252, 253, 254, 255, 257, 259, 260, 263, 264, 265, 266, 267, 268, 269, 337, 339, 383, 384, 386, 388, 389, 392, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 432, 434, 437, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 459, 461, 463, 467, 468, 474, 478, 479, 480, 481, 482, 484, 486, 488, 489, 492, 493, 494, 498, 499, 513, 514, 520, 522, 526, 527], "linalg": [6, 87, 98, 102, 108, 109, 244, 245, 390, 489, 500, 502, 521, 522], "line": [209, 230], "linear": [10, 78, 82, 209, 220, 241, 391, 528, 538], "linear_ramp": 391, "linspac": [0, 6, 23, 113, 162, 216, 241, 250, 390, 481, 504, 518], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 65, 74, 75, 79, 94, 97, 103, 104, 105, 106, 108, 109, 125, 130, 139, 159, 160, 162, 164, 170, 171, 181, 189, 223, 229, 230, 241, 244, 249, 380, 393, 456, 462, 463, 465, 466, 473, 476, 487, 491, 500, 503, 516, 517, 519, 522, 523, 524, 525], "list_pickl": 106, "littl": 106, "ln": 241, "load": [6, 155, 230], "loadtxt": [6, 155], "loan": 215, "loc": [406, 417, 419, 420, 428, 452], "local": 4, "locat": [0, 4, 163, 186, 187, 243, 390, 417, 419, 475, 522], "log": [6, 117, 162, 219, 229, 232, 233, 234, 235, 241, 242, 421], "log10": [6, 231, 233, 234], "log1p": [6, 115, 117, 231, 232, 234], "log2": [6, 231, 232, 233, 236], "log_bas": 241, "logabsdet": 219, "logaddexp": [6, 88, 236, 242], "logaddexp2": [6, 235, 242], "logarithm": [88, 202, 219, 229, 231, 232, 233, 234, 235, 236, 242, 422, 538], "logic": [16, 21, 237, 238, 239, 240, 528, 538], "logical_and": [6, 58, 238, 239, 240], "logical_not": [6, 59, 61, 178, 237, 239, 240], "logical_or": [6, 62, 237, 238, 240], "logical_xor": [6, 64, 237, 238, 239], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 162, 229], "logsumexp": [88, 235, 236], "lomax": 429, "long": [106, 212], "longer": [126, 132, 542], "look": [384, 497], "lookfor": 6, "loop": 108, "loos": 107, "lorentz": 444, "lose": [126, 132, 134], "low": [122, 124, 128, 129, 406, 434, 437, 450, 535], "lower": [94, 119, 168, 169, 191, 199, 205, 207, 243, 505, 506, 507, 508, 511, 512], "lowest": [56, 108, 109, 161, 194, 406, 434], "lstsq": 6, "m": [4, 10, 86, 105, 106, 108, 119, 122, 124, 126, 128, 129, 132, 133, 134, 138, 144, 145, 146, 199, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 226, 243, 244, 245, 249, 402, 471, 476, 496, 497, 505, 506, 507, 508, 510, 511, 512], "machin": [4, 10, 140, 174, 209, 236, 458], "machineri": 106, "made": [36, 41, 53, 106, 153, 193, 258, 464, 487], "magnitud": [11, 12, 80, 120, 399], "mai": [16, 20, 21, 49, 68, 72, 74, 75, 81, 90, 103, 106, 108, 109, 116, 122, 124, 126, 127, 128, 129, 131, 132, 135, 138, 164, 169, 171, 200, 204, 205, 209, 211, 215, 218, 236, 241, 244, 258, 264, 267, 269, 337, 370, 402, 455, 458, 465, 473, 481, 491, 501, 522, 524, 535], "main": [94, 95, 96, 97, 98, 119, 139, 173, 203, 207, 226, 243, 502, 505, 506, 507, 510, 511], "mainstai": 10, "maintain": [33, 100, 103, 106, 168, 369, 475, 484, 497], "major": [4, 40, 41, 42, 43, 45, 48, 49, 103, 337, 385, 455, 456, 463, 516], "make": [43, 45, 73, 106, 216, 250, 390, 463, 481, 515, 518], "manag": 0, "mandelbrot": [216, 390], "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 455, 535], "manipul": [3, 95, 528, 538], "mantissa": 195, "manual": [4, 106, 501], "mappingproxi": 106, "mask": [93, 106, 192, 243, 385, 394, 403, 496, 507, 511], "mask_func": 243, "mask_indic": [6, 507, 511], "mass": 168, "mat": 6, "match": [11, 12, 41, 74, 75, 81, 85, 88, 99, 106, 153, 155, 164, 177, 223, 242, 244, 401, 402, 460, 491, 496, 497, 500, 525], "math": [10, 113], "mathbf": [227, 522], "mathemat": [215, 528, 538], "matlab": 152, "matmul": [6, 102, 218, 221, 521], "matplotlib": [250, 444], "matric": [139, 156, 176, 192, 202, 203, 204, 206, 208, 211, 213, 215, 217, 218, 219, 221, 222, 226, 244, 245, 250, 538], "matrix": [86, 102, 103, 108, 177, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 226, 244, 245, 250, 354, 489, 510, 519, 521, 522, 528, 538], "matrix_norm": 215, "matrix_pow": [6, 489], "matrix_rank": 6, "matter": 515, "max": [0, 6, 18, 31, 72, 103, 140, 150, 151, 168, 169, 174, 209, 213, 215, 217, 247, 252, 253, 263, 339, 423, 497, 501, 518, 535], "max_arg": 0, "max_val": 0, "maxima": [150, 246, 247], "maximum": [0, 6, 18, 31, 32, 72, 103, 109, 150, 151, 246, 252, 253, 259, 260, 263, 265, 334, 355, 391, 396, 397, 400, 402, 518], "maximum_sctyp": 6, "may_share_memori": 6, "md": 215, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 79, 85, 94, 95, 97, 103, 108, 110, 111, 119, 122, 123, 124, 128, 129, 133, 134, 135, 136, 137, 138, 154, 155, 156, 157, 158, 159, 160, 164, 173, 176, 200, 215, 230, 243, 249, 251, 264, 267, 269, 337, 342, 350, 380, 387, 388, 389, 391, 406, 419, 421, 424, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 451, 452, 455, 464, 471, 492, 494, 505, 507, 511, 519, 520, 526, 527, 535], "meaningfulli": 535, "meant": 535, "median": [0, 6, 391], "meet": [36, 476], "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 106, 108, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 165, 166, 167, 172, 175, 178, 182, 183, 184, 185, 194, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 249, 250, 253, 254, 257, 342, 348, 375, 383, 384, 386, 388, 389, 395, 396, 397, 399, 404, 405, 455, 457, 459, 461, 463, 464, 467, 468, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 513, 514, 522, 525, 526, 527, 528, 542], "mersenn": 406, "mesh": 192, "meshgrid": [6, 156, 176, 192, 251, 387], "met": [102, 214], "meta": 106, "metadata": 106, "method": [10, 16, 18, 19, 21, 33, 49, 79, 102, 103, 106, 142, 153, 155, 213, 217, 221, 245, 337, 342, 352, 359, 367, 370, 382, 385, 393, 406, 464, 477, 494, 496, 503, 528], "mgrid": [122, 124, 133, 136, 176, 192], "mgridclass": 251, "middl": [10, 98, 122, 124, 128, 129, 206, 249], "might": [108, 127, 128, 129], "min": [6, 19, 32, 72, 103, 140, 150, 151, 168, 169, 174, 200, 203, 209, 215, 218, 221, 222, 246, 247, 253, 265, 339, 497, 535], "min_scalar_typ": 6, "minima": [151, 252, 253], "minimum": [6, 19, 31, 32, 36, 72, 103, 147, 150, 151, 246, 247, 252, 259, 260, 263, 265, 335, 357, 391, 396, 397, 400], "minlength": 57, "mintypecod": 6, "minu": [117, 149, 254, 461, 514], "mirror": 391, "miscellan": [2, 528, 538], "mise": 451, "miss": 230, "mix": [210, 244], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 118, 461, 518], "mode": [71, 78, 82, 103, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 218, 338, 363, 378, 391, 401, 402, 444, 449, 456, 475, 496, 497], "model": [4, 408], "modf": 6, "modifi": [79, 98, 139, 249, 391, 443], "modul": [121, 163, 528], "modulu": [152, 254, 461], "monoton": [100, 168], "moor": 217, "more": [0, 3, 4, 33, 36, 53, 54, 55, 105, 106, 108, 109, 117, 133, 136, 145, 146, 153, 155, 169, 171, 176, 195, 201, 203, 209, 210, 212, 213, 214, 216, 217, 221, 223, 226, 227, 233, 235, 465, 471, 491, 500, 504, 515, 518, 535, 542], "most": [3, 4, 22, 98, 99, 106, 109, 121, 127, 258, 406, 442, 465, 490], "move": [103, 256, 361, 393, 469, 470, 503, 515], "moveaxi": [6, 393, 469, 470, 503, 517], "msg": 0, "msort": 6, "mt": [103, 245], "mt19937": 442, "mu": [417, 421, 428, 451], "multi": [2, 103, 176, 192, 201, 251, 375, 387, 456, 515, 528], "multi_dot": [6, 102, 108, 109], "multi_index": 456, "multiarrai": 106, "multidimension": [168, 177, 525], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 74, 75, 87, 88, 104, 106, 108, 122, 124, 128, 129, 133, 134, 136, 138, 161, 169, 170, 171, 192, 194, 201, 204, 205, 206, 207, 208, 214, 242, 246, 248, 252, 263, 264, 265, 267, 269, 455, 460, 473, 476, 484, 487, 491, 492, 504, 515, 517, 520, 523, 524, 528], "multipli": [6, 89, 108, 195, 206, 266, 398], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 424, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 88, 89, 90, 91, 92, 99, 101, 102, 105, 114, 115, 116, 117, 120, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 147, 148, 149, 150, 151, 152, 155, 158, 161, 164, 165, 166, 167, 168, 169, 171, 172, 175, 178, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 201, 203, 214, 215, 216, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 383, 384, 386, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 457, 459, 460, 461, 462, 467, 468, 469, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 513, 514, 520, 522, 524, 525], "mx": 209, "mxn": [203, 211, 226, 245], "n": [0, 4, 10, 34, 39, 90, 95, 96, 99, 100, 103, 104, 105, 106, 107, 116, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 156, 164, 170, 173, 192, 203, 209, 211, 212, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 243, 244, 245, 249, 250, 267, 269, 380, 391, 393, 394, 401, 402, 408, 423, 425, 435, 445, 475, 477, 487, 489, 492, 495, 496, 497, 500, 503, 504, 505, 506, 507, 508, 510, 511, 512, 519, 520, 522, 523, 535], "n1": 250, "n2": [230, 250], "n3": 250, "naiv": 109, "name": [0, 6, 106, 217, 481], "namedtupl": 218, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 101, 147, 150, 151, 179, 182, 184, 185, 186, 187, 232, 246, 247, 248, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 396, 397, 398, 486, 488, 492, 513, 515, 520, 538], "nan_to_num": 6, "nanargmax": [6, 31, 260], "nanargmin": [6, 32, 259], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 150, 151, 246, 247, 253, 265], "nanmean": [6, 248, 267, 269, 492, 520], "nanmedian": 6, "nanmin": [6, 150, 151, 247, 252, 253, 263], "nanpercentil": 6, "nanprod": [6, 398], "nanquantil": 6, "nanstd": [6, 248, 264, 269, 492, 520], "nansum": 6, "nanvar": [6, 248, 264, 267, 492, 520], "nat": 185, "nativ": 106, "native_cod": 106, "native_dt": 106, "natur": [219, 231, 232, 233, 234, 235, 236, 242], "nbad": 418, "nbyte": 103, "nd": [103, 352], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 539], "ndim": [6, 34, 36, 43, 45, 53, 54, 55, 86, 95, 98, 103, 106, 139, 193, 215, 221, 222, 245, 246, 252, 388, 393, 501, 503, 526], "ndmin": 36, "ne": 481, "nearest": [35, 70, 141, 148, 149, 254, 461, 468, 472, 486, 514], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 81, 89, 90, 107, 118, 126, 132, 134, 139, 153, 162, 229, 241, 244, 248, 249, 261, 262, 264, 266, 267, 268, 269, 398, 465, 492, 494, 520, 542], "necessarili": [204, 206], "need": [4, 36, 41, 98, 108, 163, 249, 463, 496, 497, 525], "needs_init": 106, "needs_pyapi": 106, "neg": [6, 10, 16, 21, 35, 57, 80, 97, 98, 100, 103, 116, 119, 122, 124, 127, 128, 129, 132, 135, 144, 147, 158, 164, 168, 182, 184, 185, 186, 187, 212, 223, 258, 263, 265, 267, 268, 269, 370, 395, 396, 397, 398, 401, 402, 425, 456, 472, 492, 494, 496, 497, 500, 502, 520], "negat": 476, "negative_binomi": 6, "neginf": 258, "neither": [102, 150, 151, 210, 221, 244, 263, 265], "nest": [44, 105, 171, 473, 491, 517, 524], "nested_it": 6, "net": [150, 151, 247, 253], "never": 518, "new": [22, 36, 49, 65, 66, 67, 73, 74, 75, 85, 88, 89, 90, 93, 98, 103, 105, 106, 107, 110, 111, 116, 150, 151, 153, 157, 158, 159, 160, 162, 171, 173, 229, 241, 242, 243, 247, 249, 253, 256, 261, 262, 266, 268, 337, 367, 370, 380, 388, 389, 393, 460, 464, 465, 469, 470, 473, 487, 491, 501, 503, 517, 524, 525, 526, 527, 535], "new_dtyp": 106, "new_ord": 106, "new_shap": 465, "newaxi": 116, "newbyteord": [6, 106], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 165, 166, 167, 172, 175, 178, 182, 184, 185, 194, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 253, 254, 257, 337, 342, 383, 384, 386, 388, 389, 395, 396, 397, 399, 404, 405, 457, 459, 461, 467, 468, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 513, 514, 522, 526, 527], "newshap": 464, "next": [4, 140, 384], "nextaft": 6, "ngood": 418, "ni": [250, 402, 496, 497], "nine": 408, "ninja": 4, "nj": [402, 496, 497], "njm": 108, "nk": [402, 496, 497], "nl": 10, "nlk": 108, "nn": 250, "noisi": 209, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 79, 85, 94, 95, 97, 100, 103, 110, 111, 118, 119, 123, 132, 135, 137, 143, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 173, 176, 180, 182, 192, 201, 223, 229, 230, 241, 243, 251, 258, 259, 260, 263, 265, 267, 269, 337, 342, 360, 370, 385, 387, 388, 389, 394, 396, 397, 406, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 492, 500, 505, 507, 511, 519, 520, 525, 526, 527], "nonc": [426, 427], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 85, 103, 143, 192, 525, 535], "nor": [150, 151, 206, 263, 265], "norm": [6, 10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 200, 206, 209, 211, 228, 538], "normal": [6, 86, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 168, 204, 205, 218, 227, 236, 406, 421, 424, 435, 447, 456, 481, 522], "not_equ": [6, 112, 165, 166, 197, 198], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 60, 61, 63, 74, 75, 79, 87, 91, 93, 98, 100, 101, 103, 106, 108, 109, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 148, 150, 151, 154, 155, 156, 157, 158, 168, 176, 178, 182, 195, 196, 201, 203, 204, 211, 215, 223, 228, 230, 241, 249, 254, 257, 267, 268, 269, 342, 367, 385, 391, 393, 394, 396, 397, 401, 404, 409, 411, 412, 422, 427, 455, 461, 463, 464, 465, 467, 471, 481, 484, 486, 492, 493, 495, 500, 501, 503, 504, 513, 515, 517, 518, 520, 521], "notic": [106, 132, 135], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 172, 173, 178, 182, 184, 185, 194, 195, 196, 197, 198, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 248, 252, 253, 254, 257, 263, 264, 265, 267, 268, 269, 337, 383, 384, 386, 388, 389, 395, 396, 397, 398, 399, 404, 405, 455, 459, 461, 463, 467, 468, 474, 478, 479, 480, 482, 484, 486, 488, 489, 492, 493, 494, 498, 499, 513, 514, 520, 522, 526, 527], "now": [16, 21, 43, 45, 95, 206, 209, 243], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 345, 347, 350, 351, 352, 354, 359, 361, 365, 370, 371, 372, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 404, 405, 431, 440, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "nr": 10, "nsamp": 418, "nsampl": 418, "nth": [223, 500], "nuc": [211, 215, 228], "nuclear": 215, "num": [0, 106, 113, 162, 229, 241, 504, 518], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 42, 46, 47, 50, 52, 56, 57, 65, 66, 67, 85, 95, 97, 99, 100, 103, 106, 107, 108, 109, 116, 119, 120, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 149, 154, 155, 157, 158, 162, 164, 168, 169, 173, 174, 179, 180, 181, 182, 189, 192, 195, 200, 208, 213, 215, 218, 219, 221, 224, 225, 229, 236, 241, 254, 258, 261, 262, 263, 265, 266, 267, 268, 269, 359, 368, 371, 382, 385, 391, 393, 394, 398, 399, 406, 408, 418, 442, 461, 462, 465, 468, 469, 470, 471, 472, 479, 483, 486, 492, 495, 501, 503, 505, 514, 515, 519, 520, 535, 538], "number_of_dimens": [103, 359, 382], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 76, 77, 80, 83, 84, 101, 106, 112, 114, 117, 127, 128, 129, 132, 134, 149, 150, 151, 165, 166, 175, 179, 182, 184, 185, 197, 198, 215, 216, 231, 232, 233, 234, 247, 253, 257, 383, 386, 395, 396, 397, 399, 457, 468, 472, 478, 479, 480, 482, 493, 498, 499, 513, 538], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 346, 347, 350, 351, 352, 359, 365, 370, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 535, 538], "nvidia": 4, "nx": 250, "ny": 250, "nyquist": [10, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 137], "o": [4, 16, 21, 106], "obj": [31, 32, 33, 93, 106, 153, 168], "obj2sctyp": 6, "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 79, 94, 95, 97, 103, 106, 110, 111, 116, 119, 123, 137, 140, 142, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 174, 176, 200, 205, 215, 223, 229, 230, 241, 243, 251, 337, 342, 352, 367, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 464, 500, 505, 507, 511, 519, 526, 527, 535], "obsolet": 183, "obtain": [10, 98, 199, 203, 226, 385], "obviou": 10, "occupi": [140, 174], "occur": [22, 49, 68, 74, 75, 81, 93, 103, 108, 171, 204, 244, 258, 337, 473, 491, 522, 524], "occurr": [31, 32, 57, 100, 168, 259, 260, 515], "odd": [10, 123, 126, 130, 131, 132, 134, 135, 137, 249, 391], "off": [23, 126, 131, 203, 204, 209, 226], "offset": [98, 103, 106, 154, 155, 203, 226, 243, 345, 379, 502, 507, 508, 511, 512], "often": [93, 167], "ogrid": [176, 192, 525], "ogridclass": 387, "oil": [408, 425], "old": 465, "omit": [406, 434], "onc": 208, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 78, 81, 82, 85, 93, 103, 106, 110, 112, 116, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 145, 146, 147, 150, 151, 155, 159, 164, 169, 171, 173, 176, 181, 192, 206, 211, 212, 215, 223, 228, 231, 232, 234, 243, 246, 247, 250, 251, 252, 253, 259, 260, 266, 268, 342, 350, 352, 353, 385, 387, 389, 394, 398, 425, 456, 470, 476, 484, 490, 491, 494, 496, 500, 504, 507, 508, 511, 512, 515, 526, 535], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "onedpl": 4, "onemkl": [4, 204, 206], "ones": [6, 36, 43, 45, 56, 88, 93, 101, 103, 108, 110, 111, 112, 116, 119, 138, 159, 160, 172, 173, 193, 209, 213, 216, 242, 243, 261, 266, 389, 390, 393, 398, 460, 466, 470, 503, 505, 513, 526, 527], "ones_lik": [6, 36, 111, 160, 388, 527], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 79, 82, 86, 103, 106, 108, 109, 110, 111, 119, 125, 135, 139, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 176, 183, 199, 205, 207, 210, 213, 215, 216, 217, 218, 221, 229, 230, 241, 243, 244, 246, 248, 252, 258, 259, 260, 263, 264, 265, 266, 267, 269, 337, 352, 370, 372, 388, 389, 392, 394, 395, 398, 406, 428, 434, 450, 455, 463, 464, 481, 484, 492, 494, 497, 511, 515, 518, 520, 522, 525, 526, 527, 535], "open": [155, 176, 192, 229, 387, 406, 436, 438, 439, 441, 450, 495], "opencl": [23, 36, 40, 41, 42, 43, 45, 79, 94, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 229, 230, 241, 251, 387, 388, 389, 505, 519, 526, 527], "oper": [10, 15, 58, 59, 60, 61, 62, 63, 64, 101, 106, 108, 109, 112, 116, 139, 149, 152, 165, 166, 178, 196, 197, 198, 199, 237, 239, 244, 246, 252, 254, 257, 258, 259, 260, 383, 386, 395, 396, 397, 401, 461, 467, 493, 501, 513, 515, 517, 518, 522, 528, 538], "operand": [108, 109, 223, 225, 390, 500], "opposit": [10, 106, 118, 126, 131, 394, 455], "optim": [4, 108, 109, 168, 169], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 182, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 211, 213, 214, 215, 217, 218, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 350, 380, 383, 384, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 542], "ord": [211, 215, 228], "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 98, 100, 101, 103, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 122, 124, 127, 128, 129, 132, 134, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 159, 160, 161, 164, 165, 166, 167, 168, 172, 175, 178, 182, 183, 184, 185, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 211, 215, 221, 223, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 250, 253, 254, 256, 257, 277, 336, 337, 342, 350, 361, 364, 367, 369, 372, 380, 383, 384, 385, 386, 388, 389, 392, 393, 395, 396, 397, 399, 404, 405, 455, 456, 457, 459, 461, 463, 464, 465, 467, 468, 471, 474, 475, 478, 479, 480, 481, 482, 484, 486, 488, 489, 493, 498, 499, 500, 503, 513, 514, 515, 516, 519, 522, 525, 526, 527, 538], "ordin": [209, 220], "ordinari": [132, 177, 199], "orient": [87, 402, 497], "origin": [65, 98, 103, 126, 132, 134, 211, 215, 228, 250, 256, 266, 268, 464, 465, 469, 515], "ortho": [10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138], "orthogon": [206, 218], "orthonorm": 218, "other": [33, 38, 49, 65, 66, 67, 99, 103, 106, 127, 128, 129, 132, 134, 148, 156, 173, 204, 206, 214, 215, 256, 273, 274, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 337, 406, 450, 465, 470, 484, 515, 522, 528, 538], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 76, 77, 79, 80, 82, 83, 84, 85, 86, 91, 92, 94, 99, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 172, 173, 177, 178, 182, 184, 185, 194, 195, 196, 197, 198, 209, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 252, 253, 254, 255, 257, 259, 260, 263, 264, 265, 266, 267, 268, 269, 337, 367, 383, 384, 386, 388, 389, 395, 396, 397, 398, 399, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 464, 467, 468, 474, 475, 478, 479, 480, 482, 484, 486, 488, 489, 490, 492, 493, 494, 498, 499, 502, 513, 514, 520, 522, 525, 526, 527], "otim": [223, 500], "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 208, 210, 211, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 332, 333, 334, 335, 338, 339, 342, 343, 344, 350, 352, 355, 356, 357, 362, 368, 374, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 513, 514, 518, 519, 520, 521, 522, 524, 525, 526, 527], "outer": [6, 87, 98, 108, 109, 193], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 88, 89, 90, 91, 92, 94, 95, 97, 99, 101, 102, 103, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 172, 173, 175, 176, 178, 179, 180, 182, 184, 185, 192, 194, 195, 196, 197, 198, 214, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 260, 261, 262, 264, 266, 267, 268, 269, 337, 342, 383, 384, 386, 387, 388, 389, 395, 396, 397, 398, 399, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461, 462, 464, 467, 468, 472, 474, 476, 478, 479, 480, 481, 482, 484, 486, 488, 489, 490, 492, 493, 494, 496, 498, 499, 501, 502, 505, 507, 511, 513, 514, 515, 518, 519, 520, 522, 525, 526, 527, 538, 542], "outsid": [168, 169], "over": [10, 16, 21, 56, 88, 89, 90, 102, 103, 108, 109, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 144, 156, 162, 168, 169, 177, 201, 211, 215, 223, 227, 228, 229, 241, 242, 244, 246, 248, 250, 252, 261, 262, 263, 264, 265, 266, 267, 268, 269, 350, 398, 402, 406, 433, 438, 449, 450, 455, 460, 465, 492, 494, 496, 497, 500, 504, 518, 520, 522, 538], "overal": [122, 124, 128, 129, 133, 134, 136, 138], "overflow": 147, "overlin": [227, 522], "overrid": [87, 111, 160, 389, 527], "overview": 2, "overwrite_input": 249, "p": [10, 200, 209, 212, 408, 411, 416, 422, 425, 518], "pack": [98, 455, 538], "packag": [0, 3], "packbit": 6, "pad": [6, 106, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 465], "pad_valu": 391, "pad_width": 391, "padder": 391, "padding_func": 391, "page": [3, 538], "pair": [10, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 201, 204], "parallel": [1, 3, 4, 9, 528], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 347, 350, 352, 367, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "parameter": [406, 428, 450], "parametr": 504, "pareto": 6, "pars": [155, 230], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 103, 132, 150, 151, 175, 180, 181, 188, 189, 204, 205, 207, 243, 247, 253, 255, 351, 365, 391, 457, 458, 485, 507, 511, 514, 515, 535], "partial": [33, 249, 484], "particular": [106, 214], "particularli": 108, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 484, 505, 507, 511, 519, 526, 527, 535], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 106, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 169, 173, 176, 192, 209, 230, 243, 251, 258, 342, 367, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 463, 505, 507, 508, 511, 512, 519, 522, 526, 527], "path": [4, 108, 109, 155, 230], "path_info": 109, "pathlib": 230, "pattern": 56, "penros": 217, "per": [108, 123, 137, 456], "percentil": [6, 249], "perf_count": 0, "perform": [16, 21, 41, 42, 72, 99, 108, 122, 124, 127, 128, 129, 133, 134, 136, 138, 144, 199, 222, 398, 494], "perhap": 463, "period": [10, 518], "permit": 155, "permut": [6, 103, 108, 256, 380, 393, 503, 538], "permute_dim": 503, "perpendicular": 87, "pg": 215, "phase": [10, 20, 518], "phase_deg": 518, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 91, 92, 121, 404, 480, 481, 482, 498, 499, 504, 518, 542], "pickl": [155, 230], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 72, 74, 75, 89, 90, 93, 102, 103, 116, 118, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 153, 176, 179, 244, 246, 248, 249, 252, 258, 261, 262, 264, 266, 267, 268, 269, 350, 370, 372, 380, 387, 391, 398, 401, 402, 443, 464, 465, 469, 472, 484, 491, 492, 494, 496, 502, 520, 535], "plane": 471, "platform": [89, 90, 106, 261, 262, 266, 268, 398, 494], "pleas": [0, 3, 39, 104, 108, 168, 170, 523, 535], "plot": 444, "plt": [250, 444], "plu": [231, 232, 234], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 80, 88, 106, 110, 111, 115, 119, 120, 121, 126, 127, 131, 132, 133, 134, 135, 140, 141, 147, 154, 155, 156, 158, 159, 160, 164, 173, 175, 195, 209, 212, 229, 230, 235, 236, 242, 248, 249, 258, 264, 267, 269, 384, 388, 389, 406, 435, 447, 457, 459, 460, 472, 474, 475, 481, 492, 504, 505, 520, 526, 527, 538], "pointer": 106, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 76, 77, 80, 83, 84, 91, 92, 101, 103, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 172, 175, 178, 182, 184, 185, 194, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 253, 254, 257, 383, 384, 386, 395, 396, 397, 399, 404, 405, 406, 433, 457, 459, 461, 467, 468, 472, 474, 478, 479, 480, 481, 482, 486, 488, 489, 493, 498, 499, 513, 514], "portion": [168, 169], "posinf": 258, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 69, 80, 97, 98, 103, 116, 119, 120, 122, 124, 127, 128, 129, 132, 135, 137, 140, 147, 155, 179, 182, 184, 185, 186, 187, 199, 212, 224, 256, 258, 263, 265, 268, 361, 375, 383, 393, 408, 432, 469, 470, 472, 474, 476, 488, 489, 502, 503], "possess": 204, "possibl": [10, 48, 49, 54, 55, 103, 104, 108, 109, 116, 150, 151, 164, 168, 170, 243, 337, 367, 393, 402, 455, 464, 487, 490, 495, 496, 497, 503, 523], "possibli": 44, "pow": [397, 535], "power": [6, 10, 115, 121, 147, 212, 396, 489, 519], "pre": 169, "precis": [11, 12, 56, 89, 90, 106, 108, 140, 147, 175, 209, 226, 243, 261, 262, 266, 268, 398, 457, 494, 502], "predecessor": 518, "prefer": [71, 79, 93, 103, 342, 370, 385, 455], "prepend": [36, 99, 107, 501], "present": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 106, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 173, 176, 230, 243, 251, 263, 265, 268, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 505, 507, 511, 519, 526, 527], "preserv": [49, 53, 54, 55, 72, 103, 106, 108, 144, 145, 146, 147, 205, 206, 207, 249, 337, 455, 463, 502, 515], "press": [10, 215], "prevent": 108, "previou": [56, 391], "print": [0, 4, 42, 56, 57, 78, 100, 106, 109, 406, 425, 430], "print_device_info": 0, "printabl": 109, "printopt": 6, "prior": 99, "prob1": [235, 236], "prob12": [235, 236], "prob2": [235, 236], "probabl": [168, 236, 249, 408, 416, 425], "proce": 535, "process": [10, 481], "processor": 108, "prod": [6, 89, 103, 224, 225, 266, 535], "produc": [10, 34, 106, 230, 402, 475, 497], "product": [6, 87, 89, 102, 103, 108, 109, 177, 192, 193, 201, 210, 214, 216, 220, 223, 224, 225, 227, 244, 257, 261, 266, 343, 390, 398, 500, 521, 522, 538], "program": [4, 148], "progress": [162, 229], "project": [4, 106, 227, 399, 522], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 68, 69, 80, 83, 84, 91, 92, 101, 114, 115, 117, 147, 149, 150, 151, 152, 162, 172, 196, 229, 231, 232, 233, 234, 235, 236, 241, 244, 247, 253, 254, 257, 384, 396, 397, 404, 405, 459, 461, 466, 467, 474, 478, 480, 481, 482, 486, 488, 489, 493, 498, 499, 501, 513, 514, 522], "promote_typ": 6, "propag": [106, 150, 151, 246, 247, 252, 253, 261, 262, 263, 265, 266, 268], "proper": [150, 151, 204, 206], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 205, 207, 218, 229, 230, 241, 243, 251, 271, 337, 342, 346, 348, 349, 351, 353, 354, 358, 359, 365, 370, 371, 375, 380, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527, 535], "proport": 481, "protocol": [44, 106, 153], "prototyp": 111, "provid": [0, 6, 10, 31, 32, 36, 74, 75, 81, 88, 103, 104, 108, 109, 116, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 157, 168, 169, 171, 186, 187, 213, 217, 242, 259, 260, 263, 265, 266, 268, 406, 434, 437, 460, 463, 473, 491, 496, 504, 515, 522, 524, 525, 542], "pseudo": [217, 406], "ptp": 6, "pure": [10, 126, 132, 134, 135], "purpos": [34, 209, 215], "put": [6, 10, 103, 118, 126, 132, 134, 394, 402, 497, 535], "put_along_axi": [6, 401, 497], "putmask": [6, 401], "pval": 423, "py": 4, "pypi": 4, "pyplot": [250, 444], "pytest": 4, "python": [0, 2, 3, 44, 103, 106, 152, 153, 254, 352, 461, 462, 535], "q": [206, 212, 218, 225, 249], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 122], "quantil": 6, "quaternion": 212, "question": 94, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "quick": [2, 3], "quickest": 455, "quickli": [192, 542], "quotient": [29, 51], "r": [87, 92, 218], "r2": 218, "rad": 92, "rad2deg": [6, 91, 92, 518], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 91, 92, 404, 518, 542], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 76, 77, 79, 80, 81, 83, 84, 88, 91, 92, 100, 101, 102, 103, 104, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 170, 172, 173, 178, 182, 184, 185, 194, 195, 196, 197, 198, 212, 214, 215, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 252, 253, 254, 257, 259, 260, 263, 264, 265, 267, 268, 269, 337, 338, 354, 383, 384, 386, 388, 389, 395, 396, 397, 398, 399, 404, 405, 455, 456, 459, 460, 461, 463, 464, 467, 468, 474, 478, 479, 480, 482, 484, 486, 487, 488, 489, 490, 492, 493, 494, 498, 499, 513, 514, 520, 522, 523, 526, 527, 535], "ramp": 391, "rand": [6, 109, 406, 436, 438, 439, 441], "randint": [6, 103, 352, 406, 437], "randn": [6, 144, 145, 146, 217, 218, 221, 225, 406, 491], "random": [103, 109, 144, 145, 146, 206, 214, 217, 218, 221, 225, 352, 491, 528, 538], "random_integ": [6, 406, 434], "random_sampl": [6, 406, 433, 436, 439, 441], "randomli": 430, "randomst": 434, "ranf": 6, "rang": [0, 100, 157, 168, 169, 223, 236, 393, 400, 401, 425, 430, 456, 462, 491, 500, 503, 518, 538], "rank": [116, 118, 156, 209, 213, 226, 391, 495], "rate": [123, 137], "rather": 385, "ratio": [0, 101, 149, 209, 513, 542], "ration": 538, "ravel": [6, 103, 118, 143, 215, 350, 390, 464, 535], "ravel_multi_index": [6, 516], "raveled_indic": 456, "raw": 218, "rayleigh": 6, "rcond": [209, 217], "re": [31, 32, 57, 94, 132, 469], "read": [94, 98, 103, 106, 154, 155, 157, 158, 230, 350, 455, 464], "readonli": 106, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 69, 70, 80, 88, 103, 121, 124, 126, 131, 132, 133, 134, 135, 136, 138, 140, 148, 150, 151, 152, 172, 175, 180, 188, 189, 199, 204, 205, 206, 207, 213, 217, 218, 219, 221, 235, 236, 242, 247, 253, 254, 258, 267, 269, 408, 425, 458, 459, 460, 461, 474, 485, 486, 492, 514, 515, 520, 535, 538], "real_if_clos": [6, 20, 175, 457], "rearrang": [103, 361, 538], "reason": 134, "rebuild": 105, "recal": 106, "recent": [22, 490], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 474, 488], "recommend": [108, 385, 501], "reconstruct": [106, 221, 515], "recov": 10, "reduc": [16, 21, 31, 32, 56, 218, 221, 242, 246, 248, 249, 250, 252, 259, 260, 263, 264, 265, 266, 267, 268, 269, 398, 460, 465, 492, 494, 520], "reduce_hypot": 172, "reduct": [16, 21], "redund": 135, "referreflect": [391, 535], "reflect_typ": 391, "reflector": 218, "regardless": [106, 205, 207, 523], "regular": 230, "rel": [17, 33, 103, 179, 203, 213, 226, 375, 469, 470, 484], "relat": 106, "relev": [106, 162, 229, 241], "rem": 152, "remain": [16, 21, 56, 109, 136, 138, 168, 242, 248, 249, 256, 264, 267, 269, 460, 464, 492, 520], "remaind": [6, 149, 152, 254, 396, 397], "remov": [31, 32, 91, 93, 98, 103, 116, 132, 203, 226, 373, 398, 404, 490, 494, 522, 538], "reorder": [108, 144, 225, 256], "rep": 501, "repeat": [6, 103, 122, 124, 128, 129, 133, 134, 136, 138, 139, 204, 205, 206, 207, 250, 394, 465, 501, 504, 515, 535], "repeatedli": 108, "repetit": [0, 462, 501], "replac": [3, 10, 44, 72, 118, 258, 261, 262, 394, 402, 411, 464, 476, 535], "replic": 501, "repo": 4, "repr": 314, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 106, 109, 127, 135, 153, 156, 162, 164, 176, 219, 229, 241, 250, 269, 391, 406, 465, 509, 515, 535], "represent": [58, 62, 64, 109, 140, 174, 176, 258, 384, 486, 535], "request": 470, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 103, 106, 108, 120, 176, 258, 337, 370, 391, 464, 465], "res_cpu": 94, "res_host": 94, "resampl": 481, "rese": 442, "reset": 535, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 94, 95, 96, 98, 101, 102, 103, 104, 105, 108, 116, 118, 125, 130, 144, 152, 170, 176, 177, 192, 193, 203, 210, 211, 215, 223, 226, 228, 243, 244, 246, 252, 257, 345, 350, 354, 370, 380, 391, 394, 430, 455, 463, 465, 469, 471, 493, 500, 502, 504, 507, 508, 511, 512, 513, 515, 517, 523, 535], "resid": [116, 120, 153], "residu": 209, "resiz": [6, 116, 535], "resolut": 140, "resolv": [88, 116, 242, 460], "resourc": 0, "respect": [15, 29, 51, 58, 60, 62, 63, 64, 101, 103, 112, 147, 149, 152, 164, 165, 166, 196, 197, 198, 201, 235, 236, 237, 239, 240, 254, 257, 375, 386, 396, 397, 461, 467, 493, 513, 518], "rest": 39, "restor": 469, "restrict": 227, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 36, 51, 56, 58, 59, 60, 61, 62, 63, 64, 68, 72, 74, 75, 80, 85, 88, 89, 90, 93, 101, 102, 106, 109, 111, 112, 117, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 147, 149, 154, 155, 156, 157, 158, 160, 162, 165, 166, 168, 169, 176, 178, 182, 184, 185, 186, 187, 195, 196, 197, 198, 199, 203, 204, 210, 211, 215, 218, 223, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 252, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 385, 386, 389, 390, 396, 397, 398, 401, 406, 408, 438, 460, 464, 466, 467, 468, 470, 472, 475, 478, 479, 481, 487, 491, 492, 494, 496, 497, 500, 501, 504, 509, 513, 514, 515, 517, 520, 522, 525, 527, 535], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 68, 106, 538], "ret": 405, "retain": 464, "retriev": [98, 106, 203], "retstep": 229, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 355, 356, 357, 359, 360, 361, 362, 364, 367, 368, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 409, 428, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 535], "return_count": 515, "return_index": 515, "return_invers": 515, "reus": [153, 169], "revers": [98, 103, 139, 144, 145, 146, 203, 380, 393, 471, 503, 504, 517, 519], "rewrit": 209, "rfft": [6, 10, 123, 126, 131, 132, 133, 134, 136, 137, 138], "rfft2": [6, 133], "rfftfreq": [6, 123], "rfftn": [6, 121, 124, 134, 135, 136], "right": [10, 28, 50, 60, 63, 72, 87, 98, 100, 145, 146, 172, 196, 201, 204, 205, 206, 207, 214, 225, 243, 449, 460, 467, 475, 502, 504, 507, 511, 519], "right_shift": [6, 60, 63, 196], "rightmost": [168, 169, 225], "rint": [6, 35, 70, 141, 148, 472, 514], "rl": [216, 390], "roll": [6, 470], "rollaxi": [6, 469], "root": [6, 69, 172, 200, 459, 460, 474, 488, 489], "rot90": [6, 145, 146], "rotat": [145, 146, 471], "roughli": [106, 209], "round": [6, 23, 35, 70, 103, 126, 131, 141, 148, 149, 161, 204, 254, 461, 468, 514, 535, 538], "round_": 6, "routin": [2, 528, 535], "row": [45, 49, 73, 74, 75, 89, 90, 98, 103, 105, 119, 145, 146, 164, 171, 173, 176, 214, 221, 337, 385, 455, 456, 473, 487, 491, 505, 507, 515, 516, 523, 524], "row_stack": [6, 524], "rowvar": 86, "rsqrt": [459, 488], "rtol": [17, 179, 213, 217], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 62, 63, 64, 68, 69, 80, 81, 83, 84, 87, 90, 91, 92, 101, 114, 115, 117, 149, 150, 151, 152, 162, 172, 196, 201, 229, 231, 232, 233, 234, 235, 236, 241, 242, 244, 247, 248, 249, 253, 254, 257, 264, 267, 269, 384, 396, 397, 404, 405, 459, 460, 461, 466, 467, 474, 478, 480, 481, 482, 486, 488, 489, 492, 493, 494, 498, 499, 504, 513, 514, 520, 522], "run": [0, 4], "runtim": 4, "runtimewarn": [263, 265], "s1": [103, 106, 193, 375], "s10": 106, "s16": 106, "s2": [103, 106, 375], "s25": 106, "s3": [103, 375], "safe": [49, 68, 74, 75, 81, 103, 108, 171, 244, 337, 473, 491, 522, 524], "safe_ev": 6, "sai": 464, "said": 225, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 72, 73, 74, 75, 80, 88, 89, 90, 98, 99, 100, 101, 102, 103, 105, 111, 112, 116, 118, 127, 128, 129, 134, 139, 141, 147, 149, 150, 151, 152, 153, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 175, 177, 178, 179, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 203, 206, 212, 217, 218, 222, 223, 226, 235, 236, 237, 239, 240, 242, 246, 247, 248, 249, 252, 253, 254, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 367, 380, 384, 386, 389, 391, 394, 396, 397, 398, 402, 406, 428, 434, 450, 455, 457, 460, 461, 462, 464, 467, 469, 470, 473, 475, 476, 484, 490, 491, 492, 493, 494, 496, 497, 500, 502, 506, 508, 510, 512, 513, 516, 520, 521, 524, 527, 542], "same_kind": [49, 68, 74, 75, 81, 103, 108, 171, 244, 337, 473, 491, 522, 524], "sampl": [10, 123, 130, 132, 135, 137, 162, 164, 168, 229, 241, 402, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 497, 504, 507, 511, 528, 538], "sample_r": 137, "satisfi": [36, 41, 43, 45, 49, 103, 118, 208, 337, 394, 463, 476], "save": [6, 155, 249, 542], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 62, 63, 64, 68, 79, 80, 81, 87, 94, 97, 99, 101, 102, 103, 106, 108, 109, 112, 118, 123, 137, 139, 147, 149, 150, 151, 152, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 177, 179, 181, 189, 190, 193, 194, 195, 196, 197, 198, 210, 220, 223, 229, 235, 236, 237, 239, 240, 241, 243, 244, 247, 250, 253, 254, 257, 347, 352, 382, 384, 386, 391, 394, 396, 397, 401, 402, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 431, 432, 434, 437, 440, 442, 446, 448, 449, 450, 451, 452, 453, 454, 458, 461, 467, 475, 476, 493, 496, 500, 504, 513, 514, 519, 521, 525, 535], "scale": [10, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 162, 193, 218, 229, 241, 406, 413, 415, 417, 418, 419, 420, 428, 440, 445, 452], "scientif": 10, "scipi": 113, "scope": 4, "script": 4, "sctype2char": 6, "search": [109, 528, 538], "searchsort": [6, 100, 103, 168, 484, 535], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 80, 87, 98, 101, 102, 106, 109, 112, 115, 122, 123, 124, 125, 128, 129, 132, 135, 137, 147, 149, 150, 151, 152, 161, 164, 165, 166, 168, 169, 170, 171, 172, 177, 179, 193, 194, 196, 197, 198, 201, 203, 210, 223, 226, 227, 235, 236, 237, 239, 240, 243, 244, 246, 247, 250, 252, 253, 254, 257, 386, 390, 396, 397, 461, 467, 471, 489, 493, 495, 500, 502, 513, 521, 522], "section": [4, 39, 106, 124, 129, 134, 138, 211, 228, 535], "see": [3, 35, 106, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 153, 168, 209, 211, 228, 391, 423, 472, 507, 508, 511, 512, 515, 535], "seed": [6, 103, 109, 352, 406], "seek": 155, "seldom": 147, "select": [6, 33, 81, 118, 246, 252, 484, 490, 496, 504, 528], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "self": [103, 106, 142, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 349, 406], "semant": 168, "sens": 225, "sep": [155, 158], "separ": [10, 103, 106, 108, 155, 158, 169, 258, 367, 465], "sequenc": [39, 44, 53, 54, 55, 73, 74, 75, 78, 82, 104, 105, 108, 109, 110, 111, 122, 124, 128, 129, 132, 133, 134, 136, 138, 159, 160, 162, 168, 169, 170, 171, 176, 192, 214, 223, 229, 241, 249, 256, 388, 389, 391, 394, 430, 443, 462, 463, 466, 473, 487, 491, 500, 504, 517, 523, 524, 526, 527], "sequenti": [82, 86, 113, 255, 266], "seri": [10, 132, 422], "serv": 517, "set": [10, 31, 32, 33, 36, 49, 71, 85, 94, 95, 97, 100, 103, 106, 108, 110, 159, 168, 169, 173, 176, 211, 213, 215, 216, 217, 228, 229, 246, 252, 259, 260, 268, 327, 337, 338, 349, 370, 388, 389, 390, 391, 398, 476, 478, 479, 484, 494, 507, 511, 526, 527, 535], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 106], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 208, "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 105, 106, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 147, 148, 149, 150, 151, 152, 156, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 208, 209, 210, 211, 212, 214, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 359, 367, 371, 373, 380, 382, 383, 384, 386, 387, 388, 389, 391, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 415, 418, 423, 424, 429, 433, 434, 435, 436, 437, 438, 439, 441, 446, 447, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 505, 506, 508, 510, 511, 512, 513, 514, 516, 517, 520, 522, 523, 524, 525, 526, 527, 528, 538], "share": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 505, 507, 511, 519, 526, 527], "shared_bin": 169, "shares_memori": 6, "shift": [10, 60, 63, 122, 124, 125, 129, 130, 196, 467, 469], "short": [481, 514, 522, 535], "shortcut": 391, "shorter": [126, 132], "shorthand": [11, 12, 15, 58, 59, 60, 61, 62, 63, 64, 101, 112, 149, 165, 166, 178, 196, 197, 198, 237, 239, 244, 254, 257, 383, 386, 395, 396, 397, 461, 467, 493, 513, 525], "should": [31, 32, 36, 39, 49, 98, 100, 102, 103, 108, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 152, 155, 163, 168, 192, 209, 212, 223, 244, 256, 259, 260, 263, 265, 337, 369, 391, 423, 456, 464, 465, 475, 486, 496, 500, 502, 516, 518, 522, 535], "show": [9, 38, 106, 139, 172, 240, 250, 258, 261, 262, 263, 265, 268, 444], "show_config": 6, "shown": 4, "shuffl": 6, "side": [103, 164, 206, 369, 475], "sigma": [421, 428], "sign": [6, 10, 17, 80, 106, 179, 202, 219, 254, 383, 395, 398, 461, 479, 494, 514], "signal": [10, 123, 126, 131, 132, 134, 137, 481, 518], "signatur": [243, 244, 391, 522], "signbit": [6, 478], "signific": 108, "signum": 478, "similar": [3, 40, 41, 103, 106, 162, 201, 203, 210, 216, 226, 227, 229, 241, 243, 342, 370, 394, 406, 434, 507, 508, 511, 512], "simpl": [4, 240, 538], "simpli": [96, 103, 155, 168, 169, 195, 380], "sin": [0, 6, 26, 27, 46, 47, 83, 206, 250, 481, 482, 498, 504], "sinc": [6, 103, 132, 204, 206, 372, 385, 517], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 480, 481, 482, 498, 499], "sing": 215, "singl": [9, 10, 33, 66, 67, 73, 103, 108, 109, 164, 214, 223, 246, 252, 352, 373, 398, 406, 425, 434, 435, 436, 437, 438, 439, 441, 447, 494, 500, 504, 522, 535], "singleton": [16, 21, 56, 116, 242, 248, 249, 263, 264, 265, 267, 269, 460, 490, 492, 520], "singular": [208, 209, 213, 215, 217, 221, 222], "sinh": [6, 14, 25, 27, 47, 84, 480, 499], "sinu": 481, "size": [0, 6, 23, 31, 32, 36, 39, 56, 74, 75, 82, 85, 86, 89, 90, 95, 100, 103, 104, 106, 109, 118, 121, 123, 127, 137, 155, 162, 164, 170, 171, 201, 203, 211, 215, 216, 218, 221, 223, 227, 228, 229, 241, 243, 246, 248, 252, 259, 260, 261, 262, 264, 266, 268, 352, 353, 370, 388, 394, 398, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 465, 469, 473, 487, 490, 491, 494, 500, 511, 517, 518, 522, 523, 524, 526, 535], "skip": 98, "slice": [93, 118, 259, 260, 263, 264, 265, 267, 269, 401, 402, 476, 497, 504, 511, 512, 535], "slogdet": [6, 202], "slower": [223, 500], "slowest": [103, 350, 455, 464], "small": [17, 117, 179, 209, 217, 233, 235, 236, 258, 511], "smaller": [99, 103, 121, 122, 124, 127, 128, 129, 131, 133, 134, 135, 136, 138, 140, 209, 254, 361, 394, 461, 518], "smallest": [140, 174, 215, 515], "smallest_norm": 140, "smat": 221, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 106, 112, 126, 131, 147, 168, 189, 223, 229, 236, 242, 248, 249, 250, 264, 267, 269, 444, 460, 492, 500, 501, 520], "softwar": 4, "solut": [209, 220, 465], "solv": [6, 209, 224, 225, 538], "some": [23, 106, 116, 118, 148, 177, 209, 391, 394, 518, 525, 535], "sometim": [167, 535], "sometru": 6, "somewhat": 212, "sophist": 212, "sort": [6, 33, 39, 103, 104, 170, 221, 249, 336, 361, 393, 475, 485, 487, 497, 503, 504, 515, 523, 528, 535, 538], "sort_complex": 6, "sorter": [103, 369, 475], "sought": 200, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 65, 66, 67, 68, 71, 72, 73, 75, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 168, 169, 170, 171, 173, 174, 176, 177, 179, 180, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 382, 385, 388, 389, 390, 391, 392, 394, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 462, 463, 464, 465, 466, 469, 470, 471, 475, 476, 477, 483, 484, 485, 487, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "space": [6, 23, 123, 125, 137, 155, 162, 164, 229, 241, 504, 542], "spars": [176, 250], "speak": 215, "special": [2, 106, 113, 528, 538], "specif": [0, 4, 106, 156], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 67, 68, 74, 75, 79, 88, 89, 90, 93, 94, 97, 98, 103, 108, 109, 110, 111, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 147, 154, 155, 156, 157, 159, 160, 162, 164, 173, 183, 203, 205, 207, 215, 223, 224, 225, 226, 227, 228, 229, 230, 241, 242, 248, 249, 251, 261, 262, 264, 266, 267, 268, 269, 336, 345, 352, 387, 388, 389, 393, 394, 398, 401, 402, 406, 419, 429, 447, 455, 456, 460, 463, 465, 469, 470, 471, 472, 476, 483, 491, 492, 494, 496, 497, 500, 502, 503, 504, 505, 515, 517, 519, 520, 522, 526, 527], "spectrum": [10, 125, 126, 130, 131], "speed": 108, "speedup": 109, "spell": 385, "split": [6, 39, 74, 75, 104, 105, 170, 171, 473, 491, 517, 523, 524, 538], "spreadsheet": 148, "sqrt": [6, 10, 69, 103, 351, 365, 460, 474, 489], "squar": [6, 69, 172, 173, 199, 200, 204, 205, 206, 208, 209, 212, 219, 224, 225, 243, 267, 269, 410, 426, 459, 460, 474, 476, 488, 492, 508, 512, 519, 520], "squeez": [6, 103, 116, 535], "src": 81, "stabil": [33, 484], "stabl": [33, 484], "stack": [6, 73, 74, 75, 105, 171, 202, 203, 210, 211, 213, 217, 218, 219, 222, 226, 244, 245, 385, 473, 487, 497, 517, 524], "stai": 72, "stand": 164, "standard": [103, 140, 149, 152, 248, 254, 264, 267, 269, 352, 374, 406, 421, 428, 435, 444, 445, 446, 447, 448, 461, 492, 520, 535, 538], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 406, 435], "standard_t": 6, "start": [2, 3, 23, 43, 45, 109, 123, 127, 137, 154, 162, 229, 241, 243, 465, 470, 507, 511], "start_tim": 0, "stat_length": 391, "state": 406, "statist": [391, 528, 538], "std": [6, 103, 248, 264, 267, 269, 520, 535], "stdev": [406, 447], "step": [4, 23, 109, 162, 167, 229, 241], "sticki": 106, "still": [56, 170, 215, 523], "stop": [23, 162, 229, 241], "store": [141, 162, 186, 187, 226, 229, 236, 241, 244, 390, 522], "str": [42, 44, 74, 75, 106, 108, 109, 155, 158, 171, 230, 328, 391, 463, 473, 491, 509, 524], "str_": 106, "straightforward": 176, "strictli": 215, "stride": [48, 49, 103, 337], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 106, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 391, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 509, 511, 519, 526, 527, 535], "string_repr": 109, "stringio": 230, "strongli": [4, 501], "struct": 106, "structur": [106, 230], "student": 448, "style": [49, 103, 337, 385, 391, 455, 456, 516], "sub": [39, 74, 75, 93, 98, 104, 106, 108, 170, 171, 225, 226, 473, 487, 491, 502, 505, 517, 523, 524], "subarrai": [93, 106, 176, 515], "subclass": [41, 463], "subdiagon": [203, 226], "subdivid": 106, "subdtyp": 106, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 111, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 160, 161, 165, 166, 167, 172, 178, 182, 184, 185, 194, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 253, 254, 257, 337, 383, 384, 386, 389, 395, 396, 397, 399, 404, 405, 459, 461, 467, 468, 474, 478, 479, 480, 482, 486, 488, 489, 493, 498, 499, 513, 514, 522, 527], "subscript": [108, 109], "subset": [3, 164, 490, 538], "subtract": [6, 391], "subtyp": 455, "succeed": 107, "success": [42, 408, 416, 425], "sugar": [96, 508, 512], "suggest": 98, "suit": 4, "suitabl": [34, 103, 352, 380, 402, 465, 475, 497], "sum": [0, 3, 4, 6, 10, 15, 56, 88, 90, 94, 97, 98, 99, 102, 103, 108, 127, 168, 172, 177, 200, 209, 210, 215, 223, 224, 226, 235, 236, 242, 244, 261, 262, 268, 344, 379, 408, 423, 425, 460, 500, 502, 504, 522, 535, 538], "sum_": [10, 215, 227, 522], "sum_along_diagon": 502, "sum_of_weight": 56, "summari": 528, "summat": [102, 108, 109, 177, 223, 225, 244, 390, 500, 522], "superdiagon": [203, 226], "suppli": [126, 131, 214, 391, 406, 435], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 76, 77, 79, 80, 82, 83, 84, 86, 91, 92, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 172, 173, 178, 182, 184, 185, 194, 195, 196, 197, 198, 201, 203, 210, 216, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 248, 252, 253, 254, 255, 257, 259, 260, 263, 264, 265, 266, 267, 268, 269, 337, 370, 383, 384, 386, 388, 389, 392, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 461, 463, 467, 468, 474, 478, 479, 480, 484, 486, 488, 489, 492, 493, 494, 498, 499, 513, 514, 520, 522, 526, 527, 542], "sure": 463, "surnam": 106, "surpris": [127, 128, 129], "svd": [6, 200, 208, 213, 217, 222], "swap": [106, 122, 125, 495], "swapax": [6, 103, 256, 535], "swapped_cod": 106, "swapped_dt": 106, "sy": 106, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "sycl_context": 103, "sycl_devic": 103, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 337, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 505, 507, 511, 519, 526, 527], "symmetr": [126, 132, 134, 135, 199, 204, 205, 206, 207, 213, 217, 221, 391], "symmetri": [10, 121, 126, 131, 132, 135], "syntact": [96, 508, 512], "syntax": 535, "sys_is_l": 106, "system": [3, 4, 220], "t": [10, 74, 75, 86, 103, 106, 126, 183, 199, 204, 206, 209, 380, 385, 448, 455, 504], "t1": 542, "tabl": [2, 9, 211, 228, 528], "tack": 106, "take": [6, 73, 103, 118, 192, 243, 394, 402, 455, 464, 475, 476, 481, 497, 515, 518, 535, 542], "take_along_axi": [6, 31, 32, 33, 71, 402, 496], "taken": [56, 98, 99, 107, 109, 126, 132, 133, 134, 135, 136, 138, 167, 168, 244, 267, 269, 476, 492, 502, 505, 507, 511, 520, 521, 522], "tall": 139, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 83, 480, 499], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 480, 482, 498, 499], "tanh": [6, 14, 25, 30, 52, 84, 482, 498], "target": [49, 68, 103, 337, 401], "target_devic": 103, "tau": 218, "tbb": 4, "tempfil": 155, "temporari": [155, 542], "temporaryfil": 155, "ten": 416, "tensor": [44, 103, 108, 109, 153, 223, 224, 225, 259, 260, 263, 265, 266, 400, 500], "tensordot": [6, 102, 108, 177, 224, 225, 244, 390], "tensorinv": [6, 225], "tensorsolv": [6, 224], "term": [10, 15, 101, 109, 121, 122, 124, 127, 128, 129, 132, 135, 257, 493, 513], "test": [0, 2, 16, 17, 21, 112, 165, 166, 180, 182, 184, 185, 186, 187, 197, 198, 266, 385, 386, 408, 535, 538], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [154, 155, 157, 158, 230], "th": [90, 94, 97, 99, 103, 107, 119, 164, 176, 249, 380, 387, 393, 476, 503, 506, 508, 510, 512], "than": [36, 60, 63, 89, 90, 103, 104, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 145, 146, 149, 156, 165, 166, 168, 169, 171, 196, 197, 198, 209, 213, 217, 218, 223, 226, 261, 262, 266, 268, 354, 361, 385, 391, 394, 398, 465, 467, 476, 478, 490, 491, 494, 500, 502, 514, 518, 542], "thei": [17, 38, 106, 179, 183, 195, 206, 209, 223, 473, 475, 500, 504, 507, 511, 518, 519, 524, 535], "them": [73, 213, 217, 535], "theor": 204, "theoret": 109, "therefor": [121, 135, 156, 205, 207, 465], "theta": 504, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 72, 74, 75, 79, 85, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 171, 181, 183, 189, 192, 201, 203, 205, 207, 209, 210, 211, 214, 215, 216, 219, 222, 226, 227, 228, 229, 230, 233, 235, 236, 241, 242, 243, 244, 246, 249, 252, 254, 256, 258, 259, 260, 263, 265, 266, 268, 337, 342, 347, 350, 352, 361, 367, 380, 385, 391, 394, 398, 401, 402, 439, 441, 455, 460, 461, 463, 464, 465, 470, 471, 473, 484, 491, 494, 496, 497, 501, 504, 508, 512, 515, 517, 518, 519, 522, 524, 525], "thing": 496, "think": [391, 464], "third": [73, 74, 75, 87, 104, 105, 122, 171, 223, 473, 487, 491, 500, 524], "those": [10, 72, 93, 212, 402], "though": 127, "thousand": 416, "three": [53, 54, 55, 116, 212, 223, 243, 406, 442, 500, 515], "threshold": 213, "through": [41, 106, 169, 192, 204, 206, 209, 243, 463, 535], "throw": 423, "thu": [10, 126, 132, 134, 501], "tile": [6, 462, 538], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 62, 63, 64, 80, 99, 101, 102, 112, 122, 124, 126, 128, 129, 131, 133, 134, 136, 138, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 177, 179, 185, 193, 194, 195, 196, 197, 198, 209, 213, 217, 223, 235, 236, 237, 239, 240, 247, 253, 254, 257, 384, 386, 391, 396, 397, 408, 423, 461, 467, 471, 481, 493, 497, 500, 501, 513, 515, 521], "time_dpnp": 0, "time_numpi": 0, "timedelta": 106, "timeit": 108, "timestep": 123, "tini": 140, "titl": 106, "tm": 152, "to_begin": 107, "to_devic": 103, "to_end": 107, "tobyt": 6, "todo": 426, "tofil": [6, 155], "togeth": [17, 74, 75, 106, 127, 179, 192, 491, 525], "tol": [213, 424, 458], "toler": [17, 37, 179, 213, 458], "tolist": 6, "too": [4, 122, 124, 128, 129, 133, 134, 136, 138, 525], "toolkit": 3, "tostr": 6, "total": [6, 85, 89, 103, 358, 465, 483, 492, 520], "toward": [35, 70, 141, 148, 149, 168, 169, 254, 384, 461, 468, 471, 472, 514], "trace": [6, 94, 97, 98, 103, 108, 535], "traceback": [22, 490], "trail": 509, "transfer": 103, "transform": [109, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 528], "transpos": [6, 34, 103, 108, 183, 199, 206, 245, 256, 271, 354, 393, 535, 538], "trapezoid": [90, 494], "trapz": 6, "treat": [17, 93, 126, 132, 134, 155, 164, 179, 205, 207, 209, 214, 230, 249, 261, 262, 266, 268, 398, 402, 475, 497, 501, 515, 518, 535], "tri": 6, "trial": 408, "triangl": [94, 172, 243, 460, 505, 506, 507, 508, 510, 511, 512], "triangular": [6, 199, 205, 207, 218, 243, 507, 508, 511, 512], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 480, 482, 498, 499, 538], "tril": [6, 94, 243, 505, 507, 508, 511], "tril_indic": [6, 243, 508, 511], "tril_indices_from": [6, 512], "trili": 508, "trili1": 508, "trim": [122, 124, 128, 129, 133, 134, 136, 138, 509], "trim_zero": 6, "triu": [6, 94, 243, 505, 507, 511, 512], "triu_indic": [6, 243, 507, 512], "triu_indices_from": [6, 508], "triui": 512, "triuim1": 512, "trivial": [204, 497], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 76, 77, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 100, 101, 103, 106, 108, 109, 112, 114, 115, 116, 117, 118, 120, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 161, 162, 165, 166, 167, 168, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 275, 332, 333, 337, 342, 355, 356, 357, 362, 374, 376, 381, 383, 384, 385, 386, 394, 395, 396, 397, 398, 399, 402, 404, 405, 411, 459, 460, 461, 463, 464, 467, 468, 474, 476, 478, 479, 480, 482, 484, 486, 488, 489, 492, 493, 494, 497, 498, 499, 500, 504, 513, 514, 515, 517, 519, 520, 522, 525], "true_divid": [6, 101], "trunc": [6, 35, 70, 141, 148, 468, 472], "truncat": [35, 70, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 148, 444, 468, 472, 514], "trust": [259, 260], "truth": [58, 59, 61, 62, 64, 112, 165, 166, 178, 197, 198, 237, 238, 239, 240, 386, 535, 538], "try": [4, 42], "tukei": 10, "tup": [73, 105, 171, 473, 524], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 66, 67, 79, 85, 88, 94, 95, 96, 97, 103, 106, 109, 116, 125, 130, 144, 153, 156, 159, 160, 162, 164, 168, 169, 171, 176, 181, 189, 192, 193, 215, 218, 225, 228, 229, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 263, 264, 265, 266, 267, 268, 269, 352, 370, 380, 385, 387, 391, 393, 398, 456, 460, 462, 464, 465, 469, 473, 477, 490, 491, 492, 494, 501, 503, 507, 508, 511, 512, 516, 517, 519, 520, 522, 524, 535], "turn": 73, "twister": 406, "two": [10, 17, 37, 53, 54, 58, 59, 61, 62, 64, 78, 82, 87, 97, 98, 99, 102, 103, 106, 108, 109, 116, 121, 122, 124, 127, 128, 129, 132, 133, 134, 136, 138, 150, 151, 164, 177, 178, 179, 193, 195, 203, 205, 209, 211, 214, 216, 220, 222, 223, 226, 237, 239, 240, 244, 245, 246, 247, 249, 252, 253, 256, 263, 265, 354, 361, 377, 390, 391, 406, 435, 455, 468, 471, 472, 476, 495, 500, 502, 507, 508, 511, 512, 521], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 346, 350, 352, 359, 367, 371, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 538], "type_nam": 0, "typeerror": [56, 81, 103, 153, 195, 370], "typenam": 6, "typestr": 106, "typic": [17, 126, 179, 475, 535], "u": [106, 199, 205, 207, 221, 243, 266, 268, 515], "u1": [106, 154, 155], "u16": 106, "u4": 68, "u8": 106, "ufunc": [2, 528, 535], "uint64": 106, "uint8": [106, 154, 155], "uk": 10, "un": 106, "unalt": 391, "unari": 535, "unchang": 138, "undefin": [20, 103, 249, 361, 391], "under": [211, 228], "underli": [58, 62, 64, 455, 464], "undo": [10, 129], "undocu": 106, "unexpect": [266, 268], "unicod": 106, "uniform": [6, 106, 164, 168, 169, 241, 406, 433, 436, 438, 439, 441], "uniformli": [241, 406, 450], "uniniti": [36, 110, 111, 159, 388, 526], "union1d": 6, "uniqu": [6, 56, 57, 88, 100, 106, 242, 248, 256, 264, 267, 269, 391, 460, 462, 492, 520], "unique_count": 515, "unique_indic": 515, "unique_invers": 515, "unit": [103, 123, 137, 192, 204, 212, 219, 375], "unitari": [10, 164, 218, 221], "uniti": 168, "univ": 10, "univers": [2, 215, 528, 535], "unless": [16, 21, 49, 89, 90, 103, 108, 168, 204, 213, 215, 241, 261, 262, 266, 268, 337, 398, 494, 515, 522], "unlik": [33, 103, 137, 367, 370, 484], "unmodifi": 169, "unpackbit": 6, "unravel": 516, "unravel_index": [6, 31, 32, 456], "unraveled_coord": 516, "unsaf": [49, 68, 74, 75, 81, 103, 108, 171, 244, 337, 473, 491, 522, 524], "unscal": 10, "unsign": [106, 398, 494], "unspecifi": 464, "unstack": [171, 473, 491, 524], "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 80, 83, 84, 91, 92, 101, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 153, 161, 167, 172, 178, 194, 195, 196, 232, 233, 234, 235, 236, 247, 253, 254, 255, 257, 383, 384, 395, 396, 397, 399, 404, 405, 459, 461, 467, 468, 474, 478, 479, 480, 482, 486, 493, 498, 499, 513, 514], "until": [109, 469, 470], "unwrap": [6, 91, 404], "up": [4, 10, 106, 108, 146, 497, 508, 515], "upcast": 36, "updat": 4, "uplo": [205, 207], "upon": [103, 375], "upper": [94, 119, 168, 169, 199, 205, 207, 218, 243, 505, 507, 508, 510, 511, 512], "url": 4, "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 68, 72, 74, 75, 79, 87, 89, 90, 93, 94, 95, 97, 98, 101, 103, 106, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 178, 183, 192, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 209, 213, 214, 215, 217, 223, 226, 229, 230, 236, 237, 239, 241, 243, 244, 246, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 277, 337, 342, 350, 370, 383, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 402, 406, 409, 411, 412, 422, 427, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 447, 450, 455, 458, 461, 462, 463, 464, 465, 467, 469, 475, 476, 478, 481, 485, 492, 493, 494, 496, 497, 500, 501, 502, 504, 505, 507, 508, 511, 512, 513, 515, 516, 519, 520, 522, 525, 526, 527, 535, 542], "usabl": 147, "usag": [3, 4, 123, 137], "use_getitem": 106, "use_setitem": 106, "user": [106, 258, 391], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 490, 505, 507, 511, 519, 526, 527], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 347, 382, 383, 384, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 527], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 229, 230, 241, 243, 251, 342, 387, 388, 389, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 505, 507, 511, 519, 526, 527], "usual": [95, 103, 106, 210, 244, 370], "util": 528, "v": [78, 94, 97, 103, 106, 204, 205, 227, 249, 369, 401, 475, 522], "v0": 6, "v1": 6, "v10": 106, "v9": 6, "v_sort": 249, "val": [103, 139, 142, 327, 363, 394], "valid": [82, 116, 243, 495, 507, 508, 511, 512], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 99, 100, 101, 103, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 126, 127, 132, 134, 135, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 178, 179, 181, 182, 184, 185, 188, 189, 192, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 219, 220, 221, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 253, 254, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 273, 274, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 335, 337, 339, 342, 347, 349, 361, 363, 370, 383, 384, 385, 386, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 416, 433, 434, 450, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 472, 474, 475, 476, 478, 479, 480, 481, 484, 486, 488, 489, 492, 493, 494, 496, 497, 498, 499, 502, 504, 507, 511, 513, 514, 515, 518, 520, 522, 525, 526, 527, 535, 538], "value2": 106, "valueerror": [22, 36, 41, 42, 103, 153, 215, 259, 260, 354, 464, 487, 490], "van": 215, "vander": 6, "vandermond": 519, "var": [6, 103, 248, 264, 267, 269, 492, 535], "vararg": 164, "vari": [10, 16, 20, 21, 98, 109, 122, 124, 126, 127, 128, 129, 131, 132, 135, 138, 156, 176, 183, 200, 203, 204, 205, 209, 211, 215, 258, 264, 267, 269, 455, 458, 481], "variabl": [86, 209, 220], "varianc": [103, 248, 264, 267, 269, 381, 492, 520, 538], "variou": [215, 481, 542], "vdot": [6, 102, 227, 244, 522], "vecdot": 521, "vector": [87, 108, 156, 176, 177, 192, 200, 201, 210, 213, 214, 215, 216, 221, 222, 227, 228, 244, 249, 250, 390, 391, 521, 522, 538], "vector_norm": 215, "vendor": 4, "veri": [3, 10, 17, 179, 216, 250, 258, 390], "verif": 0, "verifi": 199, "version": [4, 85, 87, 98, 103, 106, 143, 244, 249, 349, 385, 390, 456, 502, 516, 521, 522], "vertic": [73, 74, 75, 98, 105, 139, 144, 145, 171, 203, 471, 473, 487, 491, 523, 524], "vetterlin": 10, "vh": 221, "via": 132, "view": [6, 39, 53, 54, 55, 65, 94, 98, 103, 104, 116, 122, 124, 128, 129, 133, 134, 136, 138, 144, 145, 146, 170, 250, 256, 271, 354, 367, 380, 393, 402, 455, 456, 464, 471, 487, 490, 495, 503, 516, 523], "violat": 81, "void": 106, "void640": 106, "von": 451, "vonmis": 6, "vsplit": [6, 74, 75, 487], "vstack": [6, 73, 74, 75, 105, 171, 209, 473, 487, 491], "w": [10, 56, 204, 205, 206, 207, 212, 463], "wa": [10, 88, 106, 214, 242, 263, 265, 267, 269, 406, 447, 460, 464, 492, 520], "wai": [3, 4, 10, 103, 109, 121, 127, 128, 129, 134, 155, 223, 361, 500], "wald": 6, "walk": 106, "want": [4, 183, 497], "warn": [106, 259, 260, 424, 465], "we": [79, 95, 98, 109, 139, 209, 243, 402, 497, 504], "weibul": [6, 454], "weight": [56, 57, 86, 168, 169, 248, 264, 494], "well": [106, 108, 155, 168, 169, 398, 408, 425, 444], "were": [74, 75, 156, 406, 435, 491, 518], "what": [10, 49, 68, 74, 75, 81, 103, 106, 108, 112, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 171, 180, 244, 337, 408, 425, 473, 491, 522, 524, 535], "when": [10, 22, 23, 33, 36, 37, 40, 41, 43, 45, 48, 49, 56, 79, 81, 100, 103, 106, 108, 121, 132, 134, 135, 150, 151, 162, 167, 204, 210, 215, 218, 222, 223, 229, 236, 241, 243, 244, 249, 254, 261, 262, 263, 265, 266, 268, 337, 455, 461, 465, 468, 470, 472, 476, 484, 496, 500, 504, 515, 522, 525, 542], "whenev": [116, 393, 495, 503], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 81, 83, 84, 87, 88, 91, 92, 94, 95, 97, 99, 100, 101, 103, 104, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 126, 132, 133, 134, 137, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 194, 195, 196, 197, 198, 199, 203, 209, 213, 218, 221, 222, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 251, 252, 253, 254, 257, 263, 264, 265, 266, 267, 268, 269, 332, 333, 337, 342, 355, 356, 357, 362, 369, 374, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 442, 447, 450, 455, 459, 460, 461, 465, 467, 468, 470, 474, 475, 476, 478, 479, 480, 482, 486, 487, 488, 489, 492, 493, 494, 498, 499, 502, 503, 505, 507, 511, 513, 514, 518, 519, 520, 522, 523, 526, 527], "wherev": 81, "whether": [16, 17, 21, 37, 88, 100, 106, 153, 179, 180, 183, 199, 218, 229, 258, 266, 268, 456, 479, 515, 516, 535], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 65, 74, 75, 79, 81, 85, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 108, 109, 110, 111, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 171, 173, 176, 182, 184, 185, 186, 187, 199, 201, 203, 204, 211, 213, 215, 222, 225, 226, 227, 228, 230, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 337, 342, 352, 385, 387, 388, 389, 393, 398, 401, 406, 428, 433, 434, 435, 436, 437, 438, 439, 441, 447, 450, 456, 460, 462, 465, 469, 476, 483, 484, 487, 490, 491, 492, 494, 496, 502, 503, 504, 505, 506, 507, 510, 511, 514, 517, 518, 519, 520, 522, 525, 526, 527, 535, 542], "whichev": 177, "while": [10, 136, 138, 168, 169, 248, 264, 267, 269, 385, 394, 398, 469, 492, 494, 505, 520], "whitespac": [155, 158], "who": 6, "whole": [122, 124, 128, 129, 133, 134, 136, 138, 507, 511], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 98, 106, 118, 119, 139, 200, 203, 205, 206, 207, 211, 222, 224, 226, 243, 245, 256, 469, 508, 512, 516], "why": 132, "wide": 139, "width": [106, 168, 169, 391], "wild": [408, 425], "window": [4, 123, 137], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 73, 74, 75, 76, 77, 80, 83, 84, 88, 101, 103, 105, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 165, 166, 167, 170, 171, 172, 175, 178, 179, 182, 184, 185, 186, 187, 195, 196, 197, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 252, 253, 254, 255, 257, 263, 265, 266, 341, 383, 384, 386, 395, 396, 397, 399, 457, 459, 461, 467, 468, 472, 473, 474, 478, 479, 480, 481, 482, 487, 488, 489, 491, 493, 498, 499, 513, 514, 523, 524, 528, 535, 538, 542], "wish": 535, "within": [17, 23, 37, 49, 103, 108, 126, 127, 128, 129, 131, 132, 134, 168, 169, 179, 337, 401, 406, 450], "without": [98, 103, 110, 139, 380, 455, 464, 465, 535], "won": 106, "word": [127, 128, 129, 132, 134, 148, 206, 406, 450], "work": [4, 35, 48, 103, 352, 497, 535], "world": [106, 408, 425], "would": [33, 74, 75, 103, 106, 156, 176, 214, 243, 244, 361, 393, 406, 456, 484, 487, 491, 497, 503, 518, 522], "wrap": [91, 103, 139, 363, 378, 391, 401, 402, 404, 456, 475, 496, 497, 518], "wrapper": 103, "writabl": 463, "write": [94, 98, 103, 139, 155, 350, 464], "writeabl": 463, "written": [4, 85, 88, 139, 155, 183, 242, 460, 525], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 65, 67, 69, 70, 76, 77, 79, 80, 82, 83, 84, 86, 87, 88, 91, 92, 94, 97, 99, 100, 103, 104, 106, 107, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 136, 137, 138, 141, 142, 143, 148, 154, 155, 156, 157, 159, 160, 161, 162, 164, 170, 173, 175, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 195, 200, 201, 203, 206, 209, 211, 215, 218, 220, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 250, 251, 255, 256, 258, 337, 342, 351, 352, 359, 365, 370, 371, 383, 385, 387, 388, 389, 395, 398, 399, 400, 404, 405, 424, 430, 455, 457, 459, 460, 462, 463, 468, 469, 470, 472, 474, 476, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 495, 496, 498, 499, 504, 505, 514, 517, 519, 523, 525, 526, 527], "x0": [43, 45, 79, 97, 389, 519, 527], "x00": 155, "x01": [154, 155], "x02": [154, 155], "x03": [154, 155], "x04": [154, 155], "x05": 154, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 62, 63, 64, 71, 80, 82, 101, 103, 112, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 192, 194, 195, 196, 197, 198, 201, 210, 216, 227, 235, 236, 237, 238, 239, 240, 244, 247, 250, 253, 254, 255, 257, 337, 383, 384, 386, 392, 395, 396, 397, 403, 443, 461, 467, 469, 493, 513, 522], "x1_i": [15, 29, 51, 58, 60, 62, 63, 64, 80, 101, 112, 147, 149, 152, 165, 166, 172, 196, 197, 198, 235, 236, 237, 239, 240, 254, 257, 386, 396, 397, 461, 467, 493, 513], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 62, 63, 64, 80, 82, 101, 112, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 192, 194, 195, 196, 197, 198, 201, 210, 216, 227, 235, 236, 237, 238, 239, 240, 244, 247, 250, 253, 254, 257, 383, 384, 386, 395, 396, 397, 461, 467, 469, 488, 493, 513, 522], "x2_i": [15, 29, 51, 58, 60, 62, 63, 64, 80, 101, 112, 147, 149, 152, 165, 166, 172, 196, 197, 198, 235, 236, 237, 239, 240, 254, 257, 386, 396, 397, 461, 467, 493, 513], "x3": [16, 21, 147], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 61, 69, 70, 76, 77, 83, 84, 114, 115, 117, 148, 175, 178, 231, 232, 233, 234, 238, 383, 395, 399, 457, 459, 468, 472, 474, 478, 479, 480, 482, 488, 489, 498, 499, 514], "xi": [234, 250], "xn": [192, 250], "xor": [58, 59, 61, 62, 64, 178, 237, 238, 239, 240], "xv": 250, "xx": 250, "xy": 250, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 65, 79, 86, 87, 97, 103, 106, 107, 110, 111, 116, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 164, 173, 186, 187, 200, 201, 209, 229, 230, 241, 250, 251, 255, 258, 342, 359, 367, 370, 387, 388, 389, 463, 504, 505, 519, 525, 526, 527], "y1": 195, "y2": 195, "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 266, 268, 385, 391, 406, 525, 535], "you": [4, 98, 126, 131, 132, 183, 243, 249, 464, 496, 497, 535, 542], "your": [4, 98, 542], "yv": 250, "yy": 250, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 79, 87, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 229, 230, 241, 250, 251, 387, 388, 389, 416, 505, 519, 526, 527], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 60, 70, 85, 87, 88, 95, 99, 103, 110, 111, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 148, 155, 159, 160, 173, 175, 180, 181, 186, 187, 188, 189, 196, 204, 205, 207, 209, 212, 213, 217, 221, 223, 242, 243, 246, 248, 252, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 359, 360, 370, 371, 375, 382, 385, 388, 389, 391, 398, 406, 408, 436, 438, 439, 441, 457, 458, 460, 465, 468, 472, 478, 484, 492, 494, 500, 505, 506, 509, 510, 514, 520, 525, 527], "zeros_lik": [6, 36, 92, 111, 160, 249, 389, 405, 526], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 272, "__add__": 273, "__and__": 274, "__bool__": 275, "__complex__": 276, "__copy__": 277, "__eq__": 278, "__float__": 279, "__floordiv__": 280, "__ge__": 281, "__getitem__": 282, "__gt__": 283, "__iadd__": 284, "__iand__": 285, "__ifloordiv__": 286, "__ilshift__": 287, "__imatmul__": 288, "__imod__": 289, "__imul__": 290, "__int__": 291, "__invert__": 292, "__ior__": 293, "__ipow__": 294, "__irshift__": 295, "__isub__": 296, "__itruediv__": 297, "__ixor__": 298, "__le__": 299, "__len__": 300, "__lshift__": 301, "__lt__": 302, "__matmul__": 303, "__mod__": 304, "__mul__": 305, "__ne__": 306, "__neg__": 307, "__new__": 308, "__or__": 309, "__pos__": 310, "__pow__": 311, "__radd__": 312, "__rand__": 313, "__repr__": 314, "__rfloordiv__": 315, "__rlshift__": 316, "__rmatmul__": 317, "__rmod__": 318, "__rmul__": 319, "__ror__": 320, "__rpow__": 321, "__rrshift__": 322, "__rshift__": 323, "__rsub__": 324, "__rtruediv__": 325, "__rxor__": 326, "__setitem__": 327, "__str__": 328, "__sub__": 329, "__truediv__": 330, "__xor__": 331, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 532, "add": 15, "algebra": [6, 530], "all": [16, 332], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 333], "api": [1, 528], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 334], "argmin": [32, 335], "argsort": [33, 336], "argwher": 34, "arithmet": [533, 535, 536], "around": 35, "arrai": [6, 7, 9, 36, 529, 531, 532, 535], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 337], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 535, "avail": [9, 542], "averag": [56, 541], "backend": 1, "background": 10, "basic": [532, 536], "beta": 407, "bincount": 57, "binomi": 408, "bit": [5, 542], "bitwise_and": 58, "bitwise_invert": 59, "bitwise_left_shift": 60, "bitwise_not": 61, "bitwise_or": 62, "bitwise_right_shift": 63, "bitwise_xor": 64, "broadcast_arrai": 65, "broadcast_shap": 66, "broadcast_to": 67, "build": [4, 7], "byte": 409, "c": 1, "calcul": 535, "can_cast": 68, "cbrt": 69, "ceil": 70, "chang": 532, "channel": 4, "chisquar": 410, "choic": 411, "choleski": 199, "choos": [71, 338], "class": 7, "clip": [72, 339], "co": 83, "column_stack": 73, "comparison": [6, 531, 535, 542], "complex": 533, "concat": 74, "concaten": 75, "cond": 200, "conda": 4, "conj": [76, 340], "conjug": [77, 341], "construct": 535, "control": 0, "convers": 535, "convolv": 78, "copi": [79, 342], "copysign": 80, "copyto": 81, "correl": [82, 541], "cosh": 84, "count": 539, "count_nonzero": 85, "cov": 86, "creat": 8, "creation": 7, "cross": [87, 201], "cumlogsumexp": 88, "cumprod": [89, 343], "cumsum": [90, 344], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 529, 535, 537], "decomposit": 530, "deg2rad": 91, "degre": 92, "delet": 93, "det": 202, "detail": 10, "develop": 2, "devic": 4, "diag": 94, "diag_indic": 95, "diag_indices_from": 96, "diagflat": 97, "diagon": [98, 203, 345], "diff": 99, "differ": 533, "digit": 100, "dimens": [10, 532], "dimension": [6, 535], "dirichlet": 412, "discret": 6, "distribut": 537, "divid": 101, "dot": 102, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 537], "dpnp_arrai": 103, "driver": 4, "dsplit": 104, "dstack": 105, "dtype": [106, 346], "ediff1d": 107, "eig": 204, "eigenvalu": 530, "eigh": 205, "eigval": 206, "eigvalsh": 207, "einsum": 108, "einsum_path": 109, "element": [5, 532], "empti": 110, "empty_lik": 111, "equal": 112, "equat": 530, "erf": 113, "error": 540, "exampl": [0, 4], "except": 530, "exist": 7, "exp": 114, "exp2": 115, "expand_dim": 116, "expm1": 117, "expon": 533, "exponenti": 413, "extens": 2, "extract": 118, "extrema": 533, "ey": 119, "f": 414, "fab": 120, "fft": [10, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "fft2": 122, "fftfreq": 123, "fftn": 124, "fftshift": 125, "fill": 347, "fill_diagon": 139, "find": 533, "finfo": 140, "fix": 141, "flag": 348, "flat": 349, "flatit": 142, "flatnonzero": 143, "flatten": 350, "flip": 144, "fliplr": 145, "flipud": 146, "float": [533, 542], "float_pow": 147, "floor": 148, "floor_divid": 149, "fmax": 150, "fmin": 151, "fmod": 152, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 153, "frombuff": 154, "fromfil": 155, "fromfunct": 156, "fromit": 157, "fromstr": 158, "full": 159, "full_lik": 160, "function": [10, 531, 533, 540, 541, 542], "gamma": 415, "gcd": 161, "gener": [529, 537], "geometr": 416, "geomspac": 162, "get_includ": 163, "gradient": 164, "greater": 165, "greater_equ": 166, "guid": 4, "gumbel": 417, "handl": 533, "heavisid": 167, "helper": 10, "hermitian": 10, "hfft": 126, "higher": 10, "histogram": [168, 541], "histogram_bin_edg": 169, "hsplit": 170, "hstack": 171, "hyperbol": 533, "hypergeometr": 418, "hypot": 172, "ident": 173, "ifft": 127, "ifft2": 128, "ifftn": 129, "ifftshift": 130, "ihfft": 131, "iinfo": 174, "imag": [175, 351], "implement": 10, "index": [529, 535], "indic": 176, "infin": 531, "inform": [2, 8, 10], "inner": 177, "insert": 529, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 208, "invert": 178, "irfft": 132, "irfft2": 133, "irfftn": 134, "isclos": 179, "iscomplex": 180, "iscomplexobj": 181, "isfinit": 182, "isfortran": 183, "isinf": 184, "isnan": 185, "isneginf": 186, "isposinf": 187, "isreal": 188, "isrealobj": 189, "isscalar": 190, "issubdtyp": 191, "item": [352, 535], "items": 353, "iter": 529, "ix_": 192, "join": 532, "kind": 532, "kron": 193, "laplac": 419, "layout": 535, "lcm": 194, "ldexp": 195, "left_shift": 196, "less": 197, "less_equ": 198, "level": 6, "librari": 0, "like": [529, 532], "linalg": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "linear": [6, 530], "linspac": 229, "loadtxt": 230, "log": 231, "log10": 232, "log1p": 233, "log2": 234, "logaddexp": 235, "logaddexp2": 236, "logarithm": 533, "logic": 531, "logical_and": 237, "logical_not": 238, "logical_or": 239, "logical_xor": 240, "logist": 420, "lognorm": 421, "logseri": 422, "logspac": 241, "logsumexp": 242, "lstsq": 209, "manipul": [532, 535], "mask_indic": 243, "math": 542, "mathemat": 533, "matmul": [210, 244], "matric": 7, "matrix": [7, 530, 535], "matrix_norm": 211, "matrix_pow": 212, "matrix_rank": 213, "matrix_transpos": 245, "max": [246, 355], "maximum": 247, "mean": [248, 356], "median": 249, "memori": 535, "meshgrid": 250, "method": 535, "mgrid": 251, "min": [252, 357], "minimum": 253, "miscellan": [8, 533, 534], "mod": 254, "modf": 255, "modul": [6, 536], "moveaxi": 256, "mt": 354, "multi": [6, 535], "multi_dot": 214, "multinomi": 423, "multipl": 535, "multipli": 257, "multivariate_norm": 424, "nan": 531, "nan_to_num": 258, "nanargmax": 259, "nanargmin": 260, "nancumprod": 261, "nancumsum": 262, "nanmax": 263, "nanmean": 264, "nanmin": 265, "nanprod": 266, "nanstd": 267, "nansum": 268, "nanvar": 269, "nbyte": 358, "ndarrai": [270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 535], "ndim": [359, 382], "neg": 383, "negative_binomi": 425, "nextaft": 384, "noncentral_chisquar": 426, "noncentral_f": 427, "nonzero": [360, 385], "norm": [215, 530], "normal": [10, 428], "not_equ": 386, "number": [530, 532, 533], "numer": 7, "numpi": [2, 6], "ogrid": 387, "ones": 388, "ones_lik": 389, "oper": [5, 529, 530, 531, 532, 533, 535, 542], "order": 541, "other": [530, 533, 535], "outer": [216, 390], "output": 5, "over": 529, "overview": 3, "pack": 5, "packag": [4, 536], "pad": 391, "parallel": [0, 2], "pareto": 429, "partit": [361, 392], "permut": [430, 537], "permute_dim": 393, "pinv": 217, "place": 394, "point": 533, "poisson": 431, "poly1d": 536, "polynomi": 536, "polyutil": 536, "posit": 395, "pow": 396, "power": [397, 432], "prod": [362, 398], "product": [530, 533], "proj": 399, "ptp": 400, "put": [363, 401], "put_along_axi": 402, "putmask": 403, "python": 4, "qr": 218, "quick": 4, "r": 4, "rad2deg": 404, "radian": 405, "rand": 433, "randint": 434, "randn": 435, "random": [6, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 537], "random_integ": 437, "random_sampl": 438, "randomst": 406, "ranf": 439, "rang": 7, "ration": 533, "ravel": [364, 455], "ravel_multi_index": 456, "rayleigh": 440, "real": [10, 365, 457], "real_if_clos": 458, "rearrang": 532, "reciproc": 459, "reduce_hypot": 460, "refer": [1, 528], "remaind": 461, "remov": 532, "repeat": [366, 462], "requir": 463, "reshap": [367, 464], "resiz": 465, "result_typ": 466, "rfft": 135, "rfft2": 136, "rfftfreq": 137, "rfftn": 138, "right_shift": 467, "rint": 468, "roll": 469, "rollaxi": 470, "rot90": 471, "round": [368, 472, 533], "routin": [7, 8, 10, 529, 532, 533, 534, 538], "row_stack": 473, "rsqrt": 474, "sampl": [6, 441, 537], "scikit": 4, "search": 539, "searchsort": [369, 475], "seed": 442, "select": [476, 535], "shape": [7, 370, 477, 532, 535], "shuffl": 443, "sign": 478, "signbit": 479, "simpl": 537, "sin": 480, "sinc": 481, "sinh": 482, "size": [371, 483], "slogdet": 219, "solv": [220, 530], "sort": [372, 484, 539], "sort_complex": 485, "space": 486, "special": [533, 535, 540], "split": [487, 532], "sqrt": 488, "squar": 489, "squeez": [373, 490], "stack": 491, "standard": 10, "standard_cauchi": 444, "standard_exponenti": 445, "standard_gamma": 446, "standard_norm": 447, "standard_t": 448, "start": 4, "statist": 541, "std": [374, 492], "stride": 375, "subtract": 493, "sum": [376, 494, 533], "summari": 6, "svd": 221, "svdval": 222, "swapax": [377, 495], "sycl": 4, "t": 271, "tabl": 6, "take": [378, 496], "take_along_axi": 497, "tan": 498, "tanh": 499, "target": 4, "tensordot": [223, 500], "tensorinv": 224, "tensorsolv": 225, "test": [4, 8, 531], "tile": [501, 532], "trace": [226, 379, 502], "transform": [6, 10], "transpos": [380, 503, 532], "trapezoid": 504, "tri": 505, "triangular": 449, "trigonometr": [533, 542], "tril": 506, "tril_indic": 507, "tril_indices_from": 508, "trim_zero": 509, "triu": 510, "triu_indic": 511, "triu_indices_from": 512, "true_divid": 513, "trunc": 514, "truth": 531, "twiddl": 542, "type": [8, 9, 531, 535], "ufunc": 542, "uniform": 450, "uniqu": 515, "univers": 542, "unravel_index": 516, "unstack": 517, "unwrap": 518, "util": 534, "valu": [7, 531], "vander": 519, "var": [381, 520], "varianc": 541, "vdot": 521, "vecdot": [227, 522], "vector": 530, "vector_norm": 228, "vonmis": 451, "vsplit": 523, "vstack": 524, "wald": 452, "weibul": 453, "where": 525, "wise": 5, "zero": 526, "zeros_lik": 527, "zipf": 454}})