Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array Creation Routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.flatiter", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.real", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 6, 60, 79, 90, 304, 332, 335, 381, 396, 404, 422], "api": [0, 2, 3, 6, 80, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 379], "manag": 0, "specif": [0, 4, 80], "sycl": [0, 3, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "resourc": 0, "base": [0, 4, 80, 132, 169, 172, 173, 175, 180, 294, 295, 299, 301], "python": [0, 2, 3, 79, 80, 124, 262, 379, 414], "packag": [0, 3], "an": [0, 3, 4, 12, 14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 58, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 90, 92, 113, 114, 116, 117, 124, 126, 127, 128, 131, 133, 134, 138, 141, 143, 145, 154, 159, 165, 167, 182, 183, 184, 189, 191, 192, 205, 248, 250, 253, 262, 264, 270, 272, 274, 276, 278, 280, 282, 283, 284, 289, 290, 291, 293, 294, 295, 298, 299, 301, 304, 306, 311, 312, 314, 323, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 352, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 387, 389, 390, 391, 393, 394, 398, 403, 404, 405, 406, 414], "below": [0, 4, 9, 80, 165, 167, 389, 393, 414], "demonstr": [0, 4, 80], "how": [0, 4, 80, 381], "extens": [0, 1, 3, 4, 9, 133, 407], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 248, 249, 251, 252, 256, 261, 262, 272, 273, 274, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 414, 418], "can": [0, 3, 4, 13, 15, 25, 44, 45, 46, 47, 50, 59, 72, 77, 78, 79, 80, 86, 120, 123, 126, 135, 136, 139, 145, 154, 155, 156, 176, 178, 179, 183, 189, 190, 193, 246, 247, 286, 287, 288, 292, 295, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 356, 358, 360, 378, 381, 394, 414], "easili": 0, "combin": [0, 80, 90], "devic": [0, 2, 3, 19, 31, 33, 34, 35, 36, 37, 79, 84, 85, 93, 124, 130, 131, 170, 290, 291, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 357, 375, 405, 406], "interfac": 0, "dpctl": [0, 4, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 77, 78, 79, 85, 86, 90, 92, 116, 117, 118, 119, 120, 123, 131, 135, 136, 138, 139, 142, 145, 147, 148, 149, 154, 155, 156, 161, 172, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 286, 287, 288, 291, 292, 294, 295, 297, 299, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 354, 356, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 387, 390, 393, 397, 403, 404, 406], "liter": 0, "queue": [0, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "from": [0, 3, 27, 28, 29, 33, 34, 50, 53, 54, 60, 69, 70, 79, 80, 89, 92, 124, 126, 128, 129, 138, 171, 186, 240, 250, 253, 278, 283, 289, 295, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 358, 359, 366, 374, 375, 376, 381, 382, 399, 403, 404, 418], "allow": [0, 79, 274, 414], "set": [0, 31, 53, 72, 79, 80, 84, 130, 165, 167, 239, 250, 259, 290, 291, 368, 369, 405, 406, 414], "input": [0, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 123, 130, 131, 134, 135, 136, 138, 139, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 247, 260, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 326, 332, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 396, 397, 399, 401, 403, 404, 405, 406], "current": [0, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 52, 59, 62, 63, 66, 67, 68, 77, 78, 79, 80, 81, 94, 119, 120, 123, 134, 139, 140, 144, 145, 154, 183, 189, 190, 191, 193, 194, 195, 196, 197, 249, 286, 295, 297, 355, 356, 360, 361, 368, 369, 370, 371, 372, 376, 378, 383, 384, 385, 388, 397], "usabl": 0, "insid": 0, "context": 0, "": [0, 3, 4, 79, 80, 96, 98, 102, 103, 107, 108, 110, 112, 139, 165, 167, 169, 256, 304, 305, 306, 311, 312, 313, 315, 316, 317, 318, 319, 321, 323, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 414], "scope": [0, 4], "thi": [0, 16, 17, 30, 38, 58, 69, 72, 79, 80, 117, 118, 121, 122, 126, 133, 167, 190, 248, 249, 253, 257, 270, 274, 276, 302, 337, 339, 358, 381, 396, 402, 404], "wai": [0, 3, 4, 79, 126, 270], "arrai": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 102, 103, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 205, 240, 246, 247, 248, 249, 250, 253, 256, 257, 258, 260, 261, 262, 263, 265, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 418], "creation": [0, 80, 83, 407, 414, 418], "function": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123, 126, 127, 130, 131, 133, 134, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 166, 167, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 244, 245, 253, 274, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 297, 299, 302, 303, 304, 307, 309, 310, 320, 325, 341, 353, 355, 356, 360, 361, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 388, 390, 393, 396, 397, 401, 402, 403, 404, 405, 406, 407, 414, 418], "dpnp": [0, 2, 3, 4, 407, 414, 418, 419, 422], "which": [0, 3, 4, 33, 34, 60, 79, 80, 90, 138, 157, 165, 167, 246, 247, 248, 285, 287, 299, 357, 375, 376, 391, 394, 403, 414], "i": [0, 3, 4, 6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 161, 163, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 246, 247, 248, 249, 253, 260, 270, 274, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 397, 399, 401, 403, 404, 405, 406, 414], "defin": [0, 79, 80, 248, 414], "alloc": [0, 3, 4, 192, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348, 357, 375], "us": [0, 4, 13, 29, 44, 45, 46, 47, 72, 77, 79, 80, 86, 90, 119, 120, 126, 132, 133, 135, 136, 145, 154, 155, 156, 157, 170, 176, 178, 180, 186, 193, 205, 248, 249, 253, 286, 287, 288, 295, 304, 307, 309, 310, 320, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 345, 348, 356, 358, 360, 378, 381, 382, 388, 394, 414], "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 253, 261, 270, 273, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 303, 329, 338, 342, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 393, 397, 398, 399, 400, 401, 403, 404, 405, 406], "np": [0, 3, 4, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 246, 253, 257, 261, 262, 270, 273, 286, 287, 288, 289, 290, 291, 292, 296, 297, 299, 303, 329, 338, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 388, 389, 390, 393, 397, 398, 399, 400, 401, 403, 405, 406], "device_context": 0, "opencl": 0, "gpu": [0, 3, 4], "x": [0, 3, 4, 11, 12, 14, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 35, 37, 39, 40, 41, 45, 49, 51, 52, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 71, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 119, 120, 127, 130, 131, 132, 134, 142, 144, 145, 147, 148, 149, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 186, 191, 192, 194, 195, 253, 261, 262, 273, 286, 287, 290, 291, 292, 294, 297, 299, 322, 328, 353, 354, 355, 357, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 379, 380, 381, 383, 384, 385, 388, 397, 398, 400, 404, 405, 406], "1": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 123, 125, 128, 129, 131, 132, 134, 136, 137, 138, 140, 142, 144, 146, 154, 155, 156, 158, 161, 163, 166, 167, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 246, 248, 253, 255, 257, 261, 262, 270, 273, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 303, 304, 306, 308, 309, 311, 313, 315, 317, 318, 319, 321, 322, 323, 326, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 343, 345, 348, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 393, 397, 398, 399, 400, 401, 403, 404, 405, 406, 414], "2": [0, 3, 4, 11, 12, 13, 19, 21, 23, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 93, 94, 96, 102, 107, 110, 116, 117, 118, 119, 120, 123, 134, 135, 136, 137, 138, 142, 143, 144, 154, 155, 156, 158, 161, 163, 166, 167, 169, 170, 171, 172, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 246, 253, 257, 262, 270, 284, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 303, 304, 308, 312, 316, 322, 328, 331, 333, 344, 346, 347, 350, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 367, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 388, 389, 390, 393, 394, 397, 398, 399, 400, 401, 403, 404, 405, 406], "3": [0, 3, 4, 6, 13, 19, 20, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 49, 51, 54, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 71, 72, 74, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 91, 116, 117, 118, 119, 120, 123, 134, 137, 138, 139, 140, 142, 144, 154, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 246, 253, 262, 270, 284, 287, 288, 289, 291, 292, 295, 296, 297, 299, 304, 308, 312, 319, 322, 328, 331, 332, 333, 343, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 367, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 385, 387, 388, 389, 390, 393, 398, 399, 400, 401, 403, 404, 406], "sum": [0, 3, 4, 6, 13, 68, 78, 79, 137, 181, 195, 197, 254, 271, 306, 321, 323, 386, 414, 418], "For": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 251, 252, 261, 262, 272, 273, 274, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 414], "more": [0, 3, 4, 31, 39, 40, 41, 80, 117, 118, 124, 138, 165, 166, 357, 376, 390, 393, 403, 414], "inform": [0, 35, 37, 79, 80, 114, 258, 414, 418], "pleas": [0, 3, 414], "refer": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 244, 245, 251, 252, 261, 262, 270, 272, 273, 274, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 414], "document": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 244, 245, 248, 251, 252, 261, 262, 270, 271, 272, 273, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 414], "time": [0, 13, 15, 25, 44, 46, 47, 59, 77, 78, 86, 120, 123, 135, 136, 139, 149, 154, 155, 156, 176, 178, 179, 183, 189, 190, 193, 288, 292, 295, 306, 321, 356, 360, 378], "def": 0, "run": [0, 4], "executor": 0, "size": [0, 6, 31, 54, 61, 65, 66, 79, 80, 132, 138, 167, 170, 180, 262, 263, 276, 290, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 332, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 375, 376, 377, 394, 401, 403, 405], "test_typ": 0, "repetit": [0, 357], "reshap": [0, 6, 13, 27, 28, 39, 41, 71, 72, 77, 79, 90, 116, 123, 182, 188, 193, 246, 276, 284, 328, 362, 378, 414], "arang": [0, 6, 13, 27, 28, 39, 40, 41, 42, 43, 59, 70, 71, 72, 77, 79, 86, 88, 89, 91, 116, 123, 131, 132, 137, 170, 173, 174, 176, 177, 178, 179, 180, 182, 186, 188, 193, 246, 288, 291, 295, 299, 303, 328, 356, 359, 362, 378, 404, 406], "dtype": [0, 9, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 34, 35, 36, 37, 44, 45, 46, 47, 50, 52, 54, 55, 56, 59, 62, 63, 65, 72, 77, 79, 84, 85, 86, 93, 114, 119, 120, 123, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 143, 145, 147, 148, 149, 154, 155, 156, 169, 170, 172, 176, 177, 178, 179, 180, 183, 184, 189, 190, 193, 198, 249, 254, 271, 279, 281, 285, 286, 288, 290, 291, 295, 296, 297, 304, 326, 332, 348, 356, 359, 360, 361, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 383, 384, 386, 389, 397, 401, 403, 405, 406, 414], "_": [0, 376], "rang": [0, 137, 298, 299, 323, 328, 376, 399, 418], "start_tim": 0, "perf_count": 0, "result": [0, 4, 11, 12, 14, 18, 44, 45, 46, 47, 66, 67, 68, 79, 80, 81, 94, 127, 134, 144, 145, 147, 148, 149, 154, 167, 176, 177, 178, 179, 191, 194, 195, 246, 247, 285, 292, 295, 304, 306, 336, 358, 359, 360, 379, 385, 414], "end_tim": 0, "append": [0, 6, 76, 90], "return": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 262, 264, 265, 266, 269, 270, 271, 274, 275, 279, 280, 281, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 297, 304, 307, 326, 328, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 414], "median": [0, 6], "get_dtyp": 0, "_dtypes_list": 0, "int32": [0, 9, 36, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 171, 304, 306, 314, 316, 321, 323, 329, 332, 348, 359], "int64": [0, 9, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 171, 359], "float32": [0, 36, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 171, 304, 326, 331, 333, 334, 336, 337, 339, 345, 348, 359], "select_default_devic": 0, "has_aspect_fp64": 0, "float64": [0, 36, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 171, 304, 305, 311, 312, 313, 315, 317, 318, 319, 326, 327, 330, 331, 333, 334, 336, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 389], "test_repetit": 0, "5": [0, 6, 13, 14, 19, 26, 27, 39, 42, 43, 44, 46, 47, 52, 54, 57, 60, 61, 64, 66, 67, 68, 71, 72, 77, 79, 81, 87, 116, 117, 118, 119, 120, 123, 132, 134, 137, 138, 139, 142, 154, 161, 170, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 192, 193, 246, 253, 287, 289, 290, 291, 295, 299, 304, 305, 306, 308, 311, 323, 327, 328, 329, 330, 333, 336, 351, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 376, 379, 380, 381, 385, 387, 389, 390, 393, 397, 399, 400, 403, 404, 405, 406], "type_nam": 0, "name": [0, 6, 80], "print": [0, 4, 31, 43, 57, 80, 84, 137, 240, 304, 323, 328, 398], "f": [0, 6, 35, 37, 79, 80, 84, 85, 93, 130, 131, 249, 253, 260, 290, 291, 325, 358, 405, 406], "test": [0, 2, 14, 15, 18, 147, 148, 149, 306, 418], "type": [0, 2, 3, 4, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 246, 247, 248, 249, 253, 256, 260, 274, 284, 286, 287, 288, 290, 291, 292, 295, 296, 297, 299, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 394, 397, 399, 401, 403, 404, 405, 406, 407, 418], "each": [0, 12, 20, 21, 22, 23, 24, 26, 39, 40, 41, 43, 48, 52, 54, 55, 56, 62, 63, 79, 80, 117, 118, 119, 120, 127, 138, 161, 162, 171, 186, 275, 276, 286, 297, 306, 323, 357, 368, 369, 370, 371, 373, 376, 383, 384, 391, 394, 397, 403, 414], "64": [0, 4, 295, 364], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 39, 44, 45, 46, 47, 50, 52, 55, 56, 58, 59, 60, 62, 63, 65, 77, 79, 80, 86, 90, 92, 116, 117, 118, 119, 120, 123, 132, 135, 136, 137, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 165, 167, 169, 170, 172, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 193, 244, 245, 249, 253, 271, 281, 286, 288, 295, 296, 297, 309, 356, 358, 360, 361, 368, 369, 370, 371, 373, 374, 378, 379, 383, 384, 396, 397, 400, 404], "els": 0, "msg": 0, "n": [0, 4, 41, 72, 73, 76, 80, 81, 90, 93, 95, 97, 98, 100, 101, 103, 105, 106, 108, 109, 111, 112, 113, 140, 165, 167, 186, 299, 306, 321, 323, 333, 343, 367, 374, 380, 381, 389, 391, 394, 400, 414], "4": [0, 13, 14, 19, 31, 39, 41, 42, 44, 46, 54, 57, 60, 62, 66, 67, 68, 71, 72, 74, 77, 79, 80, 81, 84, 86, 89, 116, 120, 130, 132, 134, 135, 136, 137, 138, 139, 142, 156, 170, 175, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 253, 270, 284, 287, 289, 291, 295, 296, 299, 304, 305, 308, 328, 333, 349, 353, 354, 356, 357, 358, 362, 363, 364, 368, 372, 373, 376, 377, 378, 379, 380, 381, 385, 387, 388, 390, 393, 400, 401, 403, 404, 406], "3e": 0, "ratio": 0, "6": [0, 4, 13, 19, 27, 28, 39, 46, 47, 54, 60, 66, 67, 68, 70, 71, 72, 77, 79, 80, 81, 86, 91, 94, 116, 131, 138, 142, 169, 170, 180, 194, 195, 246, 253, 262, 287, 291, 295, 303, 304, 321, 323, 328, 333, 353, 354, 358, 362, 363, 364, 376, 378, 379, 380, 381, 385, 388, 390, 393, 399, 403, 404, 406], "2f": 0, "__name__": 0, "__main__": 0, "try": [0, 4], "gpu_queu": 0, "get_sycl_devic": [0, 304], "print_device_info": 0, "except": [0, 4, 31, 33, 34, 35, 37, 54, 58, 60, 79, 90, 95, 101, 109, 116, 117, 118, 138, 192, 276, 358, 362, 363, 375, 376, 380, 403], "importerror": 0, "data": [1, 3, 4, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 38, 42, 44, 45, 46, 47, 49, 50, 51, 52, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 123, 124, 126, 129, 134, 135, 136, 139, 141, 142, 145, 146, 147, 148, 149, 154, 155, 156, 161, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 249, 274, 284, 286, 287, 288, 292, 295, 296, 297, 299, 300, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390, 393, 397, 399, 401, 404, 407, 418], "parallel": [1, 3, 4, 9, 407], "overview": 2, "quick": [2, 3], "start": [2, 3, 19, 35, 37, 132, 170, 180, 363], "guid": [2, 3], "driver": 2, "interpret": [2, 33, 34, 58, 80, 125, 414], "instal": 2, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 240, 246, 253, 257, 261, 262, 270, 273, 274, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 393, 397, 398, 399, 400, 401, 403, 404, 405, 406], "multi": [2, 79, 96, 98, 102, 103, 107, 108, 110, 112, 187, 247, 280, 289, 407], "dimension": [2, 4, 39, 57, 61, 72, 73, 74, 79, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 125, 128, 186, 187, 278, 289, 379, 407], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 123, 134, 135, 136, 138, 139, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 161, 162, 163, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 286, 287, 288, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 394, 397, 399, 401, 403, 404, 407], "univers": [2, 407, 414], "ufunc": [2, 407, 414], "routin": [2, 407, 414], "special": [2, 80, 87, 407, 418], "avail": [2, 3, 4, 80, 407, 414], "comparison": [2, 86, 135, 136, 155, 156, 288, 407, 418], "tabl": [2, 9, 167, 407], "cupi": [2, 407], "miscellan": [2, 407, 418], "c": [2, 4, 35, 37, 38, 79, 80, 84, 85, 93, 130, 131, 133, 171, 181, 249, 253, 260, 290, 291, 295, 353, 358, 405, 406], "backend": [2, 133, 307, 309, 310, 320, 325, 341], "The": [3, 4, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 44, 45, 46, 47, 52, 54, 55, 56, 59, 60, 62, 63, 65, 77, 79, 80, 81, 86, 90, 95, 101, 109, 116, 119, 120, 123, 127, 135, 136, 138, 139, 140, 142, 145, 154, 155, 156, 161, 162, 166, 167, 172, 176, 178, 183, 189, 190, 192, 193, 248, 253, 260, 261, 270, 273, 286, 288, 295, 297, 304, 307, 309, 310, 320, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 354, 356, 357, 358, 359, 360, 361, 364, 367, 368, 370, 371, 376, 378, 379, 383, 384, 391, 392, 394, 395, 397, 403, 404, 414, 418], "librari": [3, 4, 414], "implement": [3, 6, 124], "subset": [3, 375, 418], "execut": [3, 4, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 123, 127, 130, 131, 134, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 286, 287, 288, 290, 291, 292, 294, 295, 299, 307, 309, 310, 320, 325, 341, 353, 355, 356, 360, 361, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 388, 390, 393, 397, 401, 403, 404, 405, 406], "ani": [3, 6, 14, 15, 16, 17, 48, 79, 80, 113, 304, 348, 373, 414], "drop": [3, 80], "replac": [3, 36, 309, 414], "core": [3, 80, 414], "numer": [3, 4, 80, 286, 418], "being": [3, 80], "develop": [3, 4], "part": [3, 55, 56, 79, 142, 191, 261, 273, 297, 354, 414], "intel": [3, 4], "ai": 3, "analyt": 3, "toolkit": 3, "distribut": [3, 4, 180, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 418], "also": [3, 50, 80, 90, 342, 414], "anaconda": 3, "cloud": 3, "page": [3, 418], "learn": [3, 4], "Being": 3, "mean": [3, 6, 42, 79, 167, 185, 260, 304, 317, 319, 322, 326, 345, 349, 350, 358, 377, 401, 414], "usag": [3, 4], "veri": [3, 186], "similar": [3, 33, 34, 79, 80, 132, 170, 180, 253, 304, 332], "class": [3, 79, 80, 81, 115, 143, 304, 332, 373, 374, 389, 418], "compat": [3, 358, 418], "altern": [3, 4, 181], "abov": [3, 390], "instanc": [3, 79, 186, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "creat": [3, 4, 31, 33, 34, 58, 72, 74, 79, 80, 124, 128, 253, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 357, 414, 418], "ident": [3, 6, 80, 343], "one": [3, 4, 31, 36, 39, 57, 60, 61, 79, 80, 84, 86, 91, 95, 97, 100, 101, 105, 106, 109, 111, 117, 118, 130, 138, 167, 172, 174, 175, 186, 194, 253, 260, 263, 291, 297, 323, 357, 375, 376, 391, 394, 403, 405, 414], "kei": [3, 29, 79, 80, 115, 210, 239, 248, 372], "differ": [3, 76, 79, 80, 81, 114, 117, 118, 162, 167, 181, 248, 253, 295, 378, 418], "memori": [3, 33, 34, 35, 37, 79, 80, 258, 260, 280, 358, 407], "default": [3, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 75, 76, 77, 79, 80, 81, 84, 85, 86, 93, 95, 101, 113, 119, 120, 123, 130, 131, 132, 135, 136, 138, 139, 143, 145, 147, 148, 149, 154, 155, 156, 165, 167, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 198, 248, 253, 260, 286, 288, 290, 291, 293, 295, 297, 298, 299, 304, 308, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 345, 348, 356, 358, 360, 361, 364, 365, 366, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 383, 384, 386, 391, 394, 397, 401, 403, 405, 406, 414], "system": [3, 4], "integr": [3, 4, 191, 295, 388], "discret": [3, 57, 61, 76, 81, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 304, 407], "otherwis": [3, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 123, 130, 131, 134, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 246, 247, 249, 260, 274, 286, 287, 288, 290, 291, 292, 294, 295, 299, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 388, 390, 393, 397, 401, 403, 404, 405, 406], "host": [3, 4, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348], "do": [3, 4, 80, 306], "have": [3, 4, 32, 40, 41, 49, 80, 114, 171, 192, 323, 357, 414], "most": [3, 4, 80, 375], "manipul": [3, 72, 407, 418], "ar": [3, 4, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 161, 162, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 269, 270, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 329, 330, 332, 335, 336, 338, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 392, 395, 397, 398, 399, 401, 403, 404, 414], "done": 3, "see": [3, 30, 79, 80, 124, 167, 248, 321, 364, 391, 392, 394, 395, 414], "complet": [3, 4, 414], "list": [3, 6, 9, 39, 40, 41, 54, 79, 80, 138, 248, 359, 366, 376, 403], "support": [3, 9, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 161, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 249, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 393, 397, 399, 401, 403, 404, 405, 406, 422], "along": [3, 4, 14, 16, 17, 18, 27, 28, 42, 54, 67, 68, 76, 79, 81, 116, 117, 118, 138, 144, 167, 182, 183, 184, 185, 188, 189, 194, 195, 198, 246, 247, 248, 254, 264, 266, 271, 272, 279, 281, 283, 285, 298, 299, 357, 362, 363, 376, 377, 381, 382, 385, 386, 388, 391, 394, 401, 403, 414], "limit": [3, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 161, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 329, 330, 332, 335, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 393, 397, 399, 401, 403, 404, 405, 406], "To": 4, "program": [4, 119], "beyond": [4, 362], "cpu": [4, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 123, 130, 131, 134, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 286, 287, 288, 290, 291, 292, 294, 295, 299, 353, 355, 356, 360, 361, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 388, 390, 393, 397, 401, 403, 404, 405, 406], "you": [4, 414], "need": [4, 79, 133, 248], "appropri": [4, 133, 304, 332, 335, 414], "hardwar": 4, "work": [4, 16, 17, 30, 38, 69, 121, 122, 190, 302, 396, 402, 414], "fine": 4, "laptop": 4, "graphic": 4, "In": [4, 27, 28, 79, 157, 248, 299, 304, 348, 358, 381], "major": [4, 33, 34, 35, 37, 79, 249, 260], "case": [4, 27, 28, 169, 297, 358], "your": 4, "window": 4, "alreadi": [4, 34, 40, 41], "ha": [4, 44, 45, 46, 47, 80, 90, 100, 105, 127, 138, 145, 299, 357, 363, 375, 376, 379, 380, 403, 414], "all": [4, 6, 9, 15, 18, 32, 79, 80, 88, 89, 116, 117, 118, 157, 248, 251, 257, 270, 297, 306, 373, 375, 414], "necessari": [4, 39, 60, 358], "But": [4, 80], "want": 4, "up": [4, 80, 118], "date": [4, 79, 248], "alwai": [4, 33, 358], "updat": 4, "latest": [4, 124], "follow": [4, 80, 90, 114, 141, 414, 418], "instruct": 4, "step": [4, 19, 132, 170, 180], "8": [4, 13, 15, 39, 51, 60, 71, 72, 80, 116, 142, 146, 169, 170, 180, 194, 295, 304, 328, 347, 354, 362, 370, 381, 385, 388, 390, 393, 400, 404], "9": [4, 13, 39, 60, 64, 71, 72, 77, 79, 94, 120, 169, 181, 193, 262, 304, 306, 308, 328, 354, 362, 373, 378, 385, 390, 393, 400, 404], "10": [4, 13, 21, 23, 27, 28, 58, 68, 72, 79, 80, 130, 132, 137, 142, 154, 172, 173, 175, 180, 185, 193, 197, 274, 304, 306, 316, 328, 359, 360, 362, 364, 376, 390, 393, 404], "If": [4, 15, 36, 50, 78, 79, 80, 90, 114, 165, 166, 167, 184, 246, 247, 248, 249, 276, 304, 326, 348, 358, 373, 379, 380, 414], "yet": [4, 6], "easiest": 4, "It": 4, "essenti": 4, "machin": [4, 114, 141], "optim": [4, 83], "includ": [4, 133, 180, 297, 304, 348], "anoth": [4, 60, 79, 124, 253, 272, 299], "vendor": 4, "too": 4, "manual": [4, 80], "shown": 4, "next": [4, 114], "section": [4, 80, 414], "recommend": [4, 287], "org": 4, "channel": 4, "command": 4, "forg": 4, "pip": 4, "http": [4, 124], "pypi": 4, "simpl": [4, 179, 418], "These": [4, 80, 90, 414, 418], "its": [4, 6, 15, 30, 55, 56, 79, 95, 101, 114, 139, 161, 162, 284, 341, 358, 364, 387, 414], "depend": [4, 161, 167, 366, 404], "control": [4, 50], "requir": [4, 6, 31, 35, 37, 79, 80, 249, 357], "compil": [4, 80, 133], "runtim": 4, "onemkl": 4, "befor": [4, 79, 117, 118, 270], "strongli": 4, "advis": 4, "version": [4, 79, 80, 259, 287], "activ": 4, "local": 4, "environ": 4, "env": 4, "And": [4, 72, 79, 249], "sourc": [4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "recip": 4, "finanli": 4, "setuptool": 4, "o": [4, 80], "On": 4, "linux": 4, "cython": 4, "dpcpp_linux": 4, "mkl": 4, "devel": 4, "dpcpp": 4, "tbb": 4, "onedpl": 4, "cmake": 4, "ninja": 4, "pytest": 4, "dpcpp_win": 4, "setup": 4, "py": 4, "g": [4, 79, 80, 280, 304], "dcmake_c_compil": 4, "path": 4, "icx": 4, "dcmake_cxx_compil": 4, "icpx": 4, "script": 4, "build_loc": 4, "suit": 4, "element": [4, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 43, 44, 45, 46, 47, 51, 52, 55, 56, 59, 60, 62, 63, 67, 68, 77, 79, 80, 81, 86, 88, 89, 91, 92, 94, 116, 117, 118, 119, 120, 121, 122, 123, 135, 136, 142, 145, 146, 147, 148, 149, 154, 155, 156, 157, 163, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 193, 194, 195, 244, 245, 251, 252, 254, 256, 257, 260, 262, 263, 265, 267, 269, 270, 274, 275, 277, 279, 280, 283, 285, 286, 287, 288, 294, 295, 296, 297, 299, 301, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 381, 383, 384, 390, 393, 396, 397, 398, 404, 414, 418], "asarrai": [4, 6, 33, 38], "y": [4, 35, 36, 37, 49, 58, 65, 66, 78, 79, 80, 90, 92, 127, 134, 184, 186, 191, 253, 274, 284, 287, 358, 373, 387, 388, 404], "locat": [4, 133, 315, 317], "same": [4, 13, 15, 16, 17, 25, 30, 32, 35, 37, 38, 44, 46, 47, 49, 59, 69, 77, 78, 79, 85, 86, 90, 92, 120, 121, 122, 123, 124, 131, 135, 136, 139, 154, 155, 156, 171, 176, 177, 178, 179, 183, 189, 190, 192, 193, 274, 288, 291, 292, 295, 299, 302, 304, 326, 332, 348, 356, 357, 360, 362, 363, 373, 374, 375, 378, 382, 392, 395, 396, 402, 406], "shape": [4, 6, 27, 28, 31, 32, 35, 41, 49, 61, 65, 66, 72, 79, 80, 84, 85, 90, 92, 116, 127, 130, 131, 163, 165, 169, 176, 177, 178, 179, 181, 182, 188, 192, 246, 247, 274, 278, 284, 290, 291, 299, 304, 313, 316, 321, 322, 327, 331, 332, 333, 334, 335, 336, 337, 339, 344, 345, 351, 357, 358, 363, 373, 374, 375, 376, 381, 387, 394, 405, 406, 407, 418], "0": [4, 6, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 39, 40, 41, 43, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 70, 71, 72, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 97, 111, 114, 116, 117, 118, 119, 120, 123, 131, 132, 134, 137, 140, 144, 147, 148, 149, 161, 163, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 246, 248, 253, 255, 257, 261, 262, 273, 275, 279, 280, 281, 284, 285, 287, 289, 290, 291, 295, 297, 299, 303, 304, 306, 311, 313, 314, 315, 317, 318, 319, 321, 322, 323, 326, 328, 329, 330, 331, 334, 336, 337, 338, 339, 342, 345, 347, 348, 349, 355, 356, 361, 362, 363, 364, 366, 367, 368, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 404, 405, 406], "expect": [4, 80], "comput": [4, 25, 30, 42, 44, 45, 46, 47, 52, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 137, 144, 145, 158, 159, 160, 162, 166, 167, 168, 176, 177, 178, 179, 184, 185, 190, 198, 356, 361, 364, 377, 379, 384, 385, 397, 401], "empti": [4, 6, 31, 79, 85, 130, 131, 184, 257, 290, 291, 405, 406], "found": [4, 414], "here": [6, 80], "correspond": [6, 27, 28, 79, 161, 256, 285, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 367, 414], "column": [6, 33, 34, 35, 37, 54, 79, 117, 118, 138, 161, 166, 249, 260, 391, 394, 403], "v1": 6, "23": [6, 304], "v0": 6, "13": [6, 27, 28, 45, 72, 79, 80, 145, 195, 248], "0rc2": 6, "11": [6, 27, 28, 63, 72, 79, 134, 274, 323, 332, 364, 371, 390, 393], "g80f27e765": 6, "v8": 6, "397": 6, "219": 6, "286": 6, "56": 6, "32": [6, 80, 385], "47": 6, "20": [6, 154, 306, 321], "16": [6, 44, 72, 80, 134, 193, 295, 383], "21": [6, 68, 80], "18": [6, 80, 81], "51": 6, "48": [6, 194], "total": [6, 79, 267], "545": 6, "330": 6, "415": 6, "ab": [6, 12, 94, 297], "absolut": [6, 11, 94], "add": [6, 80], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "allclos": [6, 32, 146, 169], "alltru": 6, "amax": [6, 17, 27, 183, 189], "amin": [6, 16, 28, 189], "angl": [6, 24, 25, 69, 70, 302, 303, 399], "apply_along_axi": 6, "apply_over_ax": 6, "arcco": [6, 21, 22, 24, 25, 62], "arccosh": [6, 20, 23, 26, 63], "arcsin": [6, 20, 23, 24, 25, 370], "arcsinh": [6, 21, 22, 26, 371], "arctan": [6, 20, 22, 25, 26, 383], "arctan2": [6, 24], "arctanh": [6, 21, 23, 24, 25, 384], "argmax": [6, 16, 28, 79, 414], "argmin": [6, 17, 27, 79, 414], "argpartit": [6, 29, 414], "argsort": [6, 79, 372, 387, 414], "argwher": 6, "around": [6, 79, 275, 299, 364], "array2str": 6, "array_equ": 6, "array_equiv": [6, 32], "array_repr": 6, "array_split": [6, 54], "array_str": 6, "asanyarrai": [6, 34, 37], "asarray_chkfinit": [6, 33, 34], "ascontiguousarrai": [6, 33, 34, 37], "asfarrai": [6, 33, 34], "asfortranarrai": [6, 33, 34, 35], "asmatrix": 6, "atleast_1d": [6, 40, 90], "atleast_2d": [6, 39, 90], "atleast_3d": [6, 39, 40, 90], "averag": [6, 79, 184, 265, 418], "bartlett": 6, "base_repr": 6, "binary_repr": 6, "bincount": 6, "bitwise_and": [6, 45, 46, 47, 145, 176], "bitwise_not": 6, "bitwise_or": [6, 44, 45, 47, 145, 178], "bitwise_xor": [6, 44, 45, 46, 145, 179], "blackman": 6, "block": [6, 54, 138, 376, 403], "bmat": 6, "broadcast_arrai": 6, "broadcast_shap": 6, "broadcast_to": 6, "busday_count": 6, "busday_offset": 6, "byte_bound": 6, "can_cast": [6, 418], "cbrt": 6, "ceil": [6, 30, 119, 120, 361, 364, 397], "choos": [6, 24, 25, 79, 414], "clip": [6, 299, 381, 414], "column_stack": [6, 54], "common_typ": 6, "compare_chararrai": 6, "compress": [6, 381, 414], "concaten": [6, 138, 376, 403], "conj": [6, 79, 142, 297, 354], "conjug": [6, 55, 78, 79, 142, 157, 161, 181, 251, 297, 354], "convolv": [6, 61], "copi": [6, 31, 34, 35, 37, 39, 40, 41, 60, 79, 80, 186, 205, 249, 260, 262, 270, 274, 276, 293, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348, 358, 372, 375, 390, 393, 414], "copysign": [6, 286], "copyto": [6, 79, 253], "corrcoef": [6, 65], "correl": [6, 418], "co": [6, 20, 63, 370, 383], "cosh": [6, 21, 62, 371, 384], "count_nonzero": [6, 287], "cov": [6, 322], "cross": [6, 61], "cumprod": [6, 194, 414], "cumproduct": 6, "cumsum": [6, 79, 195, 414], "datetime_as_str": 6, "datetime_data": 6, "deg2rad": [6, 302, 303, 399], "degre": [6, 69, 302, 303, 346, 399], "delet": 6, "deprec": 6, "deprecate_with_doc": 6, "diag": [6, 117, 118, 169], "diag_indic": [6, 73, 113], "diag_indices_from": [6, 72, 113], "diagflat": 6, "diagon": [6, 71, 72, 73, 74, 79, 93, 113, 140, 157, 386, 389, 390, 391, 392, 393, 394, 395, 414], "diff": [6, 81, 137], "digit": 6, "disp": 6, "divid": [6, 120, 123, 163, 190, 356, 396], "divmod": [6, 414], "dot": [6, 79, 82, 83, 144, 164, 166, 169, 181, 385, 402], "dsplit": [6, 54], "dstack": [6, 54], "ediff1d": 6, "einsum": [6, 83, 144, 181, 292, 385], "einsum_path": [6, 82], "empty_lik": [6, 31, 84, 131, 291, 406], "equal": [6, 14, 15, 18, 32, 54, 61, 65, 79, 120, 135, 136, 138, 146, 151, 155, 156, 163, 270, 288, 304, 314, 348, 356, 372, 375, 376, 391, 394, 403], "exp": [6, 172, 174], "exp2": [6, 88], "expand_dim": [6, 27, 28], "expm1": [6, 88, 174], "extract": [6, 71], "ey": [6, 55, 56, 179, 183, 189, 367], "fab": 6, "fastcopyandtranspos": 6, "fill_diagon": 6, "find_common_typ": 6, "fix": [6, 80, 299], "flatnonzero": [6, 287], "flip": [6, 117, 118, 306], "fliplr": [6, 116, 118], "flipud": [6, 116, 117], "float_pow": 6, "floor": [6, 30, 52, 120, 356, 361, 364, 397], "floor_divid": [6, 123, 190, 356], "fmax": [6, 16, 17, 122, 183, 189, 295], "fmin": [6, 16, 17, 121, 183, 189, 295], "fmod": [6, 121, 122, 190, 295, 356], "format_float_posit": 6, "format_float_scientif": 6, "frexp": 6, "from_dlpack": 6, "frombuff": 6, "fromfil": 6, "fromfunct": [6, 33, 34], "fromit": [6, 33, 34], "frompyfunc": 6, "fromregex": 6, "fromstr": 6, "full": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 244, 245, 251, 252, 261, 262, 270, 271, 272, 273, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "full_lik": [6, 31, 85, 130, 291, 406], "gcd": 6, "genfromtxt": 6, "geomspac": [6, 170, 180], "get_array_wrap": 6, "get_includ": 6, "get_printopt": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "gradient": 6, "greater": [6, 79, 86, 136, 155, 156, 165, 270, 288], "greater_equ": [6, 86, 135, 155, 156, 288], "ham": 6, "han": 6, "heavisid": 6, "histogram": [6, 418], "histogram2d": 6, "histogram_bin_edg": 6, "histogramdd": 6, "hsplit": [6, 54], "hstack": [6, 54, 403], "hypot": 6, "i0": 6, "imag": [6, 79, 354, 414], "in1d": 6, "indic": [6, 16, 17, 27, 28, 29, 72, 73, 79, 80, 113, 246, 247, 248, 269, 272, 283, 287, 299, 300, 358, 365, 368, 369, 381, 382, 387, 391, 392, 394, 395], "info": 6, "inner": [6, 82, 83, 292], "insert": [6, 90, 365, 418], "interp": 6, "intersect1d": 6, "invert": [6, 45], "is_busdai": 6, "isclos": [6, 15], "iscomplex": 6, "iscomplexobj": 6, "isfinit": [6, 148, 149], "isfortran": 6, "isin": 6, "isinf": [6, 147, 149], "isnan": [6, 147, 148], "isnat": [6, 149], "isneginf": [6, 147, 148, 149], "isposinf": [6, 147, 148, 149], "isreal": 6, "isrealobj": 6, "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "iter": [6, 33, 34, 79, 115, 128, 259, 418], "ix_": 6, "kaiser": 6, "kron": 6, "lcm": 6, "ldexp": 6, "left_shift": [6, 360], "less": [6, 86, 135, 136, 156, 288, 368, 369], "less_equ": [6, 86, 135, 136, 155, 288], "lexsort": [6, 29, 79, 248, 372], "linspac": [6, 19, 87, 132, 180, 186, 399], "load": [6, 171], "loadtxt": 6, "log": [6, 91, 132, 170, 175, 180, 319], "log10": [6, 172, 175], "log1p": [6, 91, 172, 175], "log2": [6, 172], "logaddexp": 6, "logaddexp2": 6, "logical_and": [6, 44, 177, 178, 179], "logical_not": [6, 45, 145, 176, 178, 179], "logical_or": [6, 46, 176, 177, 179], "logical_xor": [6, 47, 176, 177, 178], "logspac": [6, 132, 170], "lookfor": 6, "mask_indic": 6, "mat": 6, "matmul": [6, 169], "max": [6, 16, 27, 79, 114, 141, 165, 321, 414], "maximum": [6, 16, 17, 27, 28, 79, 121, 122, 182, 189, 246, 264, 295, 298], "maximum_sctyp": 6, "may_share_memori": 6, "meshgrid": [6, 187, 289], "min": [6, 17, 28, 79, 114, 141, 414], "min_scalar_typ": 6, "minimum": [6, 16, 17, 27, 28, 79, 121, 122, 183, 188, 247, 266, 295, 298], "mintypecod": 6, "mod": [6, 356], "modf": 6, "moveaxi": [6, 362, 363, 387], "msort": 6, "multipli": 6, "nan_to_num": 6, "nanargmax": 6, "nanargmin": 6, "nancumprod": [6, 195], "nancumsum": 6, "nanmax": [6, 16, 17, 183, 189], "nanmean": [6, 184, 377, 401], "nanmedian": 6, "nanmin": [6, 16, 17, 189], "nanpercentil": 6, "nanprod": 6, "nanquantil": 6, "nanstd": [6, 184, 377, 401], "nansum": 6, "nanvar": [6, 184, 377, 401], "ndim": [6, 31, 35, 37, 39, 40, 41, 65, 72, 79, 80, 248, 290, 405], "neg": [6, 14, 18, 43, 90, 147, 148, 149, 295, 323, 373, 381], "nested_it": 6, "nextaft": 6, "nonzero": [6, 79, 404, 414], "not_equ": [6, 86, 135, 136, 155, 156], "obj2sctyp": 6, "ones": [6, 31, 35, 37, 77, 84, 85, 86, 90, 93, 130, 131, 139, 140, 181, 196, 291, 359, 363, 387, 389, 405, 406], "ones_lik": [6, 31, 85, 131, 290, 406], "outer": [6, 82, 83, 153], "packbit": 6, "pad": [6, 80], "partit": [6, 79, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 372, 414], "percentil": [6, 185], "piecewis": 6, "place": [6, 79, 246, 247, 299, 341, 358, 414], "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "posit": [6, 14, 18, 33, 34, 79, 90, 114, 147, 148, 149, 157, 192, 270, 295, 297, 306, 330, 362, 363, 373, 374, 387], "power": [6, 89, 164, 374], "printopt": 6, "prod": [6, 79, 196, 414], "product": [6, 66, 67, 78, 82, 83, 144, 153, 164, 166, 181, 193, 194, 292, 296, 385, 402, 418], "promote_typ": 6, "ptp": [6, 414], "put": [6, 79, 300, 382, 414], "put_along_axi": [6, 299, 382], "putmask": [6, 299], "quantil": 6, "rad2deg": [6, 69, 70, 399], "radian": [6, 69, 70, 302, 399], "ravel": [6, 79, 167, 260, 414], "ravel_multi_index": 6, "real": [6, 24, 52, 79, 106, 107, 108, 109, 110, 112, 114, 119, 142, 157, 161, 162, 165, 297, 306, 323, 369, 373, 397, 414, 418], "real_if_clos": 6, "recfromcsv": 6, "recfromtxt": 6, "reciproc": 6, "remaind": [6, 120, 121, 122, 123, 190, 295], "repeat": [6, 161, 162, 414], "resiz": [6, 90, 414], "result_typ": [6, 80, 418], "right_shift": [6, 154], "rint": [6, 30, 364], "roll": [6, 363], "rollaxi": [6, 362], "root": [6, 51, 373, 374], "rot90": 6, "round": [6, 30, 79, 119, 120, 356, 361, 397, 414, 418], "round_": 6, "row_stack": 6, "safe_ev": 6, "save": 6, "savetxt": 6, "savez": 6, "savez_compress": 6, "sctype2char": 6, "searchsort": [6, 372, 414], "select": [6, 60, 375, 407], "set_numeric_op": 6, "set_printopt": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setxor1d": 6, "shares_memori": 6, "show_config": 6, "sign": [6, 55, 56, 59, 80, 286, 369], "signbit": [6, 368], "sin": [6, 22, 62, 186, 371, 383], "sinc": 6, "sinh": [6, 23, 63, 370, 384], "sometru": 6, "sort": [6, 29, 79, 248, 270, 365, 387, 407, 414, 418], "sort_complex": 6, "space": [6, 19, 132, 170, 180], "split": [6, 54, 138, 376, 403, 418], "sqrt": [6, 79, 261, 273, 374], "squar": [6, 140, 157, 160, 161, 164, 308, 324, 373, 392, 395], "squeez": [6, 79, 90, 414], "stack": [6, 54, 138, 165, 403], "std": [6, 79, 184, 401, 414], "subtract": 6, "swapax": [6, 79, 192, 414], "take": [6, 79, 300, 358, 382, 414], "take_along_axi": [6, 27, 28, 29, 53, 300, 381], "tan": [6, 24, 25, 62, 370, 384], "tanh": [6, 26, 63, 371, 383], "tensordot": [6, 78, 144, 181], "tile": [6, 418], "trace": [6, 414], "transpos": [6, 79, 157, 192, 200, 414, 418], "trapz": 6, "tri": 6, "tril": [6, 391, 392, 395], "tril_indic": [6, 392, 395], "tril_indices_from": 6, "trim_zero": 6, "triu": [6, 394], "triu_indic": 6, "triu_indices_from": 6, "true_divid": 6, "trunc": [6, 30, 52, 119, 361, 364], "typenam": 6, "union1d": 6, "uniqu": [6, 43, 80], "unpackbit": 6, "unravel_index": [6, 27, 28], "unwrap": [6, 69, 302], "vander": 6, "var": [6, 79, 184, 279, 377, 414], "vdot": [6, 78, 181], "vsplit": [6, 54], "vstack": [6, 54, 138], "where": [6, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 40, 41, 44, 45, 46, 47, 52, 55, 56, 59, 60, 62, 63, 77, 79, 86, 92, 119, 120, 123, 135, 136, 139, 145, 146, 147, 148, 149, 154, 155, 156, 157, 168, 172, 176, 177, 178, 179, 182, 183, 184, 188, 189, 190, 193, 244, 245, 264, 266, 271, 281, 286, 288, 295, 296, 297, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 356, 360, 361, 363, 365, 368, 369, 370, 371, 373, 374, 378, 379, 383, 384, 397], "who": 6, "zero": [6, 14, 18, 31, 64, 72, 79, 84, 85, 93, 99, 104, 119, 130, 131, 165, 169, 192, 197, 269, 287, 290, 291, 295, 297, 304, 306, 334, 336, 337, 339, 368, 369, 379, 389, 390, 393, 406], "zeros_lik": [6, 31, 85, 131, 291, 405], "astyp": [6, 79, 287], "byteswap": 6, "dump": 6, "fill": [6, 31, 79, 84, 85, 113, 130, 131, 253, 290, 291, 381, 405, 406], "flatten": [6, 74, 79, 246, 247, 248, 259, 287, 353], "getfield": [6, 80], "item": [6, 79, 407], "itemset": 6, "newbyteord": [6, 80], "setfield": [6, 80], "setflag": 6, "tobyt": 6, "tofil": [6, 126], "tolist": 6, "tostr": 6, "view": [6, 40, 41, 79, 90, 116, 117, 118, 200, 274, 284, 358, 375, 380, 387], "linalg": [6, 374], "choleski": 6, "cond": 6, "det": 6, "eig": [6, 161, 162], "eigh": 6, "eigval": [6, 161], "eigvalsh": 6, "inv": 6, "lstsq": 6, "matrix_pow": [6, 374], "matrix_rank": 6, "multi_dot": 6, "norm": [6, 95, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 158, 418], "pinv": 6, "qr": 6, "slogdet": 6, "solv": [6, 418], "svd": [6, 165], "tensorinv": 6, "tensorsolv": 6, "fft": [6, 407, 418], "fft2": 6, "fftfreq": 6, "fftn": 6, "fftshift": 6, "hfft": 6, "ifft": 6, "ifft2": 6, "ifftn": 6, "ifftshift": 6, "ihfft": 6, "irfft": 6, "irfft2": 6, "irfftn": 6, "register_func": 6, "restore_al": 6, "restore_func": 6, "rfft": 6, "rfft2": 6, "rfftfreq": 6, "rfftn": 6, "beta": [6, 315], "binomi": [6, 323], "byte": [6, 79, 80, 263, 267], "chisquar": 6, "choic": [6, 53, 79, 250], "default_rng": 6, "dirichlet": 6, "exponenti": [6, 88, 91, 172, 317, 343], "gamma": [6, 344], "geometr": [6, 132, 170], "get_stat": [6, 304], "gumbel": 6, "hypergeometr": 6, "laplac": 6, "logist": 6, "lognorm": 6, "logseri": 6, "multinomi": 6, "multivariate_norm": 6, "negative_binomi": 6, "noncentral_chisquar": 6, "noncentral_f": 6, "normal": [6, 65, 161, 304, 319, 322, 333, 345], "pareto": 6, "permut": [6, 79, 192, 284, 387, 418], "poisson": 6, "rand": [6, 304, 334, 336, 337, 339], "randint": [6, 79, 262, 304, 335], "randn": [6, 116, 117, 118, 169, 304, 376], "random_integ": [6, 304, 332], "random_sampl": [6, 304, 331, 334, 337, 339], "ranf": 6, "rayleigh": 6, "seed": [6, 79, 262, 304], "set_stat": 6, "shuffl": 6, "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 304, 333], "standard_t": 6, "triangular": [6, 157, 168], "uniform": [6, 80, 304, 331, 334, 336, 337, 339], "vonmis": 6, "wald": 6, "weibul": [6, 352], "zipf": 6, "show": [9, 80, 139, 179, 186, 342], "constant": [9, 80], "alias": 9, "bool": [9, 14, 18, 36, 50, 79, 80, 86, 95, 101, 109, 135, 136, 147, 148, 149, 155, 156, 165, 167, 249, 287, 288, 358], "complex64": [9, 95, 101], "complex128": [9, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 359], "bool_": 9, "cdoubl": 9, "complex": [9, 24, 25, 55, 56, 78, 79, 80, 87, 114, 142, 161, 162, 169, 181, 251, 252, 297, 354, 368, 373, 414, 418], "cfloat": 9, "csingl": 9, "doubl": [9, 317], "float": [9, 15, 24, 33, 34, 36, 80, 114, 134, 165, 167, 180, 304, 308, 333, 334, 336, 337, 339, 342, 343, 345, 348, 414, 418], "float_": 9, "float16": 9, "int": [9, 36, 43, 72, 79, 80, 86, 114, 134, 141, 143, 248, 293, 304, 332, 335, 357, 358, 364, 367, 389, 391, 392, 394, 395, 414], "int_": 9, "intc": 9, "singl": [9, 79, 166, 184, 278, 304, 323, 332, 333, 334, 335, 336, 337, 339, 345, 414], "singlecomplex": 9, "e": [9, 21, 23, 79, 80, 90, 172, 280, 304, 380], "euler_gamma": 9, "inf": [9, 15, 25, 33, 34, 59, 77, 147, 148, 149, 158, 167, 172, 173, 175, 183, 189, 297, 373], "infin": [9, 14, 18, 119, 120, 147, 148, 149, 356, 397, 418], "infti": 9, "nan": [9, 14, 15, 16, 17, 18, 33, 34, 77, 147, 148, 149, 183, 184, 189, 194, 195, 196, 197, 198, 295, 297, 373, 377, 401, 418], "ninf": 9, "nzero": 9, "pi": [9, 25, 62, 63, 70, 370, 371, 383, 384, 399], "pinf": 9, "pzero": 9, "arg": [11, 48, 82, 121, 122, 304, 396, 402], "kwarg": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 52, 55, 56, 59, 62, 63, 66, 67, 68, 77, 78, 79, 82, 86, 88, 94, 119, 120, 121, 122, 123, 125, 126, 127, 129, 134, 135, 136, 139, 144, 145, 147, 148, 149, 154, 155, 156, 171, 172, 176, 177, 178, 179, 181, 183, 189, 190, 191, 193, 194, 195, 196, 197, 234, 265, 274, 286, 288, 295, 297, 355, 356, 360, 361, 368, 369, 370, 371, 372, 373, 374, 376, 378, 383, 384, 385, 388, 389, 396, 397, 398, 402], "calcul": [11, 12, 76, 81, 88, 89, 94, 119, 121, 122, 190, 196, 197, 295, 296, 356, 373, 407], "valu": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 79, 80, 81, 84, 85, 86, 92, 93, 94, 95, 101, 113, 114, 115, 119, 120, 123, 127, 130, 131, 132, 135, 136, 138, 139, 143, 145, 147, 148, 149, 154, 155, 156, 157, 162, 165, 167, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 198, 202, 203, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 253, 257, 259, 264, 266, 270, 272, 286, 287, 288, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 304, 314, 331, 332, 348, 356, 357, 358, 360, 361, 364, 365, 366, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 397, 399, 401, 403, 405, 406, 414, 418], "wise": [11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 32, 44, 45, 46, 47, 51, 52, 54, 55, 56, 59, 62, 63, 77, 79, 86, 88, 89, 91, 94, 119, 121, 122, 123, 135, 136, 138, 142, 145, 146, 147, 148, 149, 154, 155, 156, 163, 172, 173, 174, 175, 176, 177, 178, 179, 183, 189, 190, 191, 193, 252, 286, 288, 295, 297, 354, 355, 356, 360, 361, 364, 368, 369, 370, 371, 373, 374, 378, 383, 384, 396, 397, 403, 414], "note": [11, 14, 16, 17, 18, 27, 28, 30, 36, 38, 58, 69, 79, 80, 90, 119, 121, 122, 147, 167, 180, 190, 248, 253, 274, 287, 299, 302, 307, 309, 310, 320, 325, 358, 380, 381, 396, 402], "shorthand": [11, 13, 44, 45, 46, 47, 77, 86, 120, 135, 136, 145, 154, 155, 156, 176, 178, 193, 286, 288, 295, 356, 360, 378, 404], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 63, 65, 70, 77, 78, 79, 86, 87, 88, 89, 90, 91, 114, 116, 117, 118, 119, 120, 123, 124, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 154, 155, 156, 166, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 198, 244, 245, 246, 247, 250, 253, 254, 260, 264, 266, 271, 275, 279, 281, 283, 285, 286, 287, 288, 292, 295, 296, 297, 298, 303, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348, 353, 354, 355, 356, 357, 359, 360, 361, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 397, 399, 401, 403], "none": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 123, 130, 131, 132, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 154, 155, 156, 158, 165, 166, 167, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 193, 198, 244, 245, 246, 247, 248, 250, 254, 262, 264, 265, 266, 270, 271, 272, 275, 278, 279, 281, 283, 285, 286, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 360, 361, 362, 364, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 386, 387, 388, 389, 391, 394, 397, 400, 401, 403, 404, 405, 406, 414], "subok": [12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 44, 45, 46, 47, 48, 49, 52, 55, 56, 58, 59, 62, 63, 77, 79, 85, 86, 119, 120, 123, 131, 135, 136, 139, 145, 147, 148, 149, 154, 155, 156, 172, 176, 177, 178, 179, 183, 189, 190, 193, 249, 286, 288, 291, 295, 297, 356, 360, 361, 368, 369, 370, 371, 373, 374, 378, 383, 384, 397, 406], "contain": [12, 14, 18, 19, 44, 45, 46, 47, 79, 80, 124, 133, 145, 154, 161, 184, 274, 304, 360, 373, 379, 391, 394, 414], "paramet": [12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 246, 247, 248, 249, 257, 260, 274, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 397, 403, 404, 405, 406], "onli": [12, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 42, 52, 55, 56, 58, 61, 62, 63, 64, 65, 75, 76, 80, 81, 84, 85, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 119, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 147, 148, 149, 154, 157, 170, 171, 172, 177, 180, 182, 185, 186, 188, 198, 286, 290, 291, 293, 297, 298, 299, 304, 326, 332, 348, 354, 358, 360, 361, 364, 365, 366, 368, 369, 370, 371, 377, 381, 383, 384, 385, 386, 390, 393, 397, 401, 404, 405, 406, 414], "either": [12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 37, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 77, 78, 80, 86, 90, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 123, 135, 136, 138, 139, 142, 145, 146, 147, 148, 149, 154, 155, 156, 167, 172, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 286, 287, 288, 292, 294, 295, 297, 299, 340, 354, 356, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 387, 397, 403, 404], "tensor": [12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 77, 78, 79, 85, 86, 90, 92, 116, 117, 118, 119, 120, 123, 131, 135, 136, 138, 139, 142, 144, 145, 147, 148, 149, 154, 155, 156, 161, 172, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 286, 287, 288, 291, 292, 294, 295, 297, 299, 354, 356, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 390, 393, 397, 403, 404, 406], "usm_ndarrai": [12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 39, 40, 41, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 77, 78, 79, 85, 86, 90, 92, 116, 117, 118, 119, 120, 123, 131, 135, 136, 138, 139, 142, 145, 147, 148, 149, 154, 155, 156, 161, 172, 176, 177, 178, 179, 183, 184, 186, 189, 190, 192, 193, 286, 287, 288, 291, 292, 294, 295, 297, 299, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 387, 390, 393, 397, 403, 404, 406], "keyword": [12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 52, 59, 62, 63, 66, 67, 68, 77, 78, 81, 94, 119, 120, 123, 134, 139, 144, 145, 154, 183, 189, 190, 191, 193, 194, 195, 196, 197, 286, 295, 297, 355, 356, 360, 361, 368, 369, 370, 371, 372, 376, 378, 383, 384, 385, 388, 397, 414], "argument": [12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 52, 59, 62, 63, 66, 67, 68, 77, 78, 79, 80, 81, 87, 94, 119, 120, 123, 134, 139, 142, 144, 145, 151, 152, 154, 163, 166, 183, 189, 190, 191, 193, 194, 195, 196, 197, 248, 249, 274, 286, 295, 297, 354, 355, 356, 359, 360, 361, 368, 369, 370, 371, 372, 376, 378, 383, 384, 385, 388, 397, 414], "unsupport": [12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 52, 59, 62, 63, 66, 67, 68, 77, 78, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 123, 134, 139, 144, 145, 154, 166, 183, 189, 190, 191, 193, 194, 195, 196, 197, 286, 295, 296, 297, 355, 356, 360, 361, 368, 369, 370, 371, 372, 376, 378, 383, 384, 385, 388, 397], "sequenti": [12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 123, 130, 131, 134, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 286, 287, 288, 290, 291, 292, 294, 295, 299, 353, 355, 356, 360, 361, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 388, 390, 393, 397, 401, 403, 404, 405, 406], "dp": [12, 49, 77, 78, 79, 161, 284, 295, 358, 359, 367, 378, 387, 404], "x1": [13, 15, 24, 25, 27, 28, 42, 43, 44, 46, 47, 51, 53, 59, 61, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 85, 86, 88, 89, 91, 94, 113, 120, 123, 131, 134, 135, 136, 139, 144, 146, 153, 154, 155, 156, 160, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 286, 288, 291, 292, 293, 295, 296, 300, 301, 302, 303, 341, 355, 356, 360, 362, 365, 372, 377, 378, 382, 385, 386, 388, 390, 392, 393, 395, 399, 400, 401, 406], "x2": [13, 14, 15, 18, 24, 25, 31, 44, 46, 47, 59, 61, 66, 77, 78, 86, 120, 123, 132, 135, 136, 139, 144, 146, 153, 154, 155, 156, 170, 176, 177, 178, 179, 180, 181, 183, 186, 189, 190, 193, 286, 287, 288, 292, 295, 356, 360, 362, 365, 373, 378, 385], "order": [13, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 34, 35, 37, 38, 44, 45, 46, 47, 52, 55, 56, 58, 62, 63, 77, 79, 80, 82, 83, 84, 85, 86, 93, 116, 117, 118, 119, 120, 130, 131, 135, 136, 145, 147, 148, 149, 154, 155, 156, 161, 162, 167, 172, 176, 177, 178, 179, 190, 192, 193, 205, 248, 249, 253, 260, 270, 286, 288, 290, 291, 293, 295, 297, 353, 356, 358, 360, 361, 365, 368, 369, 370, 371, 373, 374, 378, 383, 384, 397, 405, 406, 418], "k": [13, 20, 21, 22, 23, 24, 25, 26, 31, 44, 45, 46, 47, 52, 55, 56, 58, 62, 63, 71, 74, 77, 79, 86, 93, 119, 120, 135, 136, 145, 147, 148, 149, 154, 155, 156, 172, 176, 177, 178, 179, 190, 193, 205, 249, 253, 260, 286, 288, 295, 297, 356, 360, 361, 368, 369, 370, 371, 373, 374, 378, 383, 384, 389, 390, 391, 392, 393, 394, 395, 397, 422], "scalar": [13, 15, 25, 39, 44, 46, 47, 50, 59, 60, 77, 78, 79, 80, 86, 120, 123, 135, 136, 139, 150, 154, 155, 156, 176, 178, 179, 183, 186, 189, 190, 193, 247, 257, 262, 288, 292, 295, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 329, 330, 332, 335, 338, 340, 344, 346, 347, 348, 349, 350, 351, 352, 356, 360, 378, 404, 414], "both": [13, 15, 25, 44, 46, 47, 59, 77, 78, 86, 120, 123, 135, 136, 139, 154, 155, 156, 167, 176, 178, 179, 183, 189, 190, 193, 288, 292, 295, 356, 360, 378], "b": [13, 15, 44, 47, 54, 60, 67, 68, 78, 80, 81, 86, 123, 135, 136, 138, 144, 155, 156, 169, 176, 178, 181, 194, 195, 288, 292, 295, 305, 376, 385, 388, 403], "7": [13, 15, 19, 39, 52, 60, 64, 68, 71, 72, 77, 79, 81, 88, 116, 119, 134, 146, 169, 181, 185, 193, 195, 262, 287, 297, 304, 328, 354, 356, 359, 361, 362, 378, 380, 381, 385, 390, 393, 397, 404], "oper": [13, 44, 45, 46, 47, 77, 80, 86, 90, 120, 135, 136, 145, 154, 155, 156, 157, 176, 177, 178, 179, 193, 286, 288, 295, 299, 356, 360, 378, 407, 418], "axi": [14, 16, 17, 18, 27, 28, 29, 42, 54, 64, 66, 67, 68, 76, 79, 81, 90, 95, 100, 101, 105, 106, 109, 116, 117, 118, 132, 138, 167, 170, 180, 182, 183, 184, 185, 188, 189, 194, 195, 198, 244, 245, 246, 247, 248, 254, 264, 265, 266, 270, 271, 272, 278, 279, 281, 283, 285, 293, 296, 298, 299, 300, 357, 358, 362, 363, 375, 376, 377, 379, 380, 381, 382, 388, 401, 403, 414], "keepdim": [14, 18, 64, 79, 167, 182, 184, 185, 188, 198, 244, 245, 264, 266, 271, 279, 281, 285, 296, 298, 377, 379, 401], "fals": [14, 15, 18, 31, 32, 35, 37, 42, 44, 45, 47, 48, 49, 58, 64, 65, 79, 80, 85, 86, 113, 131, 132, 135, 136, 143, 145, 146, 147, 148, 149, 155, 156, 165, 167, 169, 170, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 198, 244, 245, 249, 271, 279, 281, 285, 288, 291, 296, 358, 369, 377, 379, 400, 401, 406], "whether": [14, 15, 18, 80, 157, 358], "given": [14, 16, 17, 18, 19, 27, 28, 30, 31, 58, 65, 67, 68, 76, 78, 79, 80, 81, 84, 85, 113, 116, 130, 131, 139, 183, 186, 188, 189, 194, 195, 246, 247, 248, 254, 266, 271, 272, 275, 279, 281, 285, 290, 291, 296, 299, 304, 309, 331, 348, 357, 361, 362, 363, 364, 379, 388, 389, 405, 406, 414], "evalu": [14, 15, 18, 79, 82, 83, 86, 144, 186, 244, 245, 292, 385], "logic": [14, 18, 176, 178, 179, 407, 418], "AND": [14, 44, 45, 46, 47, 145, 176, 177, 178, 179], "reduct": [14, 18], "equival": [14, 18, 30, 58, 79, 90, 205, 244, 245, 274, 284, 285, 303, 304, 332, 358, 364, 367, 387, 414], "method": [14, 18, 58, 79, 80, 115, 124, 126, 165, 249, 253, 274, 304, 358, 367, 387, 407], "Not": [14, 18, 79, 147, 194, 196, 197, 248], "number": [14, 18, 19, 30, 43, 48, 55, 56, 64, 79, 80, 90, 114, 119, 120, 132, 141, 147, 158, 165, 167, 170, 171, 180, 194, 196, 197, 268, 275, 276, 277, 287, 297, 304, 306, 316, 340, 356, 357, 361, 362, 363, 364, 368, 369, 380, 397, 418], "becaus": [14, 18], "x3": [14, 18, 170, 180], "rtol": [15, 146], "1e": [15, 146, 322], "05": [15, 146], "atol": [15, 146], "08": [15, 62, 146, 322, 370], "two": [15, 16, 17, 32, 40, 44, 45, 46, 47, 57, 61, 66, 74, 79, 80, 82, 83, 144, 145, 146, 153, 161, 166, 176, 178, 179, 181, 183, 189, 192, 270, 282, 292, 304, 333, 380, 390, 391, 393, 394, 402], "within": [15, 19, 32, 146, 299, 304, 348], "toler": [15, 32, 146], "A": [15, 60, 79, 80, 90, 116, 117, 118, 124, 126, 129, 162, 249, 253, 260, 276, 304, 306, 323, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 369, 380, 387], "boolean": [15, 44, 46, 47, 80, 146, 147, 148, 149, 176, 177, 178, 179, 358, 369, 381], "dim": 15, "typeerror": [15, 54, 60, 90, 95, 101, 109, 116, 117, 118, 138, 192, 362, 363, 375, 376, 380, 403], "exept": 15, "rais": [15, 31, 33, 34, 35, 37, 53, 54, 58, 60, 79, 89, 90, 95, 101, 109, 116, 117, 118, 138, 164, 192, 250, 276, 295, 358, 362, 363, 374, 375, 376, 380, 403], "integ": [15, 30, 44, 45, 46, 47, 50, 79, 80, 119, 120, 141, 145, 146, 154, 164, 167, 246, 247, 295, 299, 304, 332, 335, 340, 356, 358, 360, 361, 364, 374, 381, 390, 393, 397, 414], "1e10": [15, 146], "00001e10": [15, 146], "propag": [16, 17, 80, 183, 189], "ignor": [16, 17, 79, 80, 183, 184, 189, 198, 285, 377, 401], "exactli": [16, 17, 38, 69, 302, 304, 332], "OR": [18, 44, 45, 46, 47, 145, 176, 177, 178, 179], "stop": [19, 132, 170, 180], "like": [19, 31, 33, 34, 35, 37, 40, 41, 84, 93, 130, 140, 171, 290, 304, 348, 358, 405, 418], "usm_typ": [19, 31, 33, 34, 35, 36, 37, 79, 84, 85, 93, 130, 131, 170, 290, 291, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348, 405, 406], "sycl_queu": [19, 31, 33, 34, 35, 36, 37, 79, 84, 85, 93, 130, 131, 170, 290, 291, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 405, 406], "evenli": [19, 132, 170, 180, 361, 364], "interv": [19, 90, 170, 304, 332, 334, 336, 337, 339, 347, 348, 380], "d": [19, 41, 54, 72, 80, 93, 96, 97, 98, 102, 103, 107, 108, 110, 111, 112, 117, 118, 129, 161, 166, 167, 186, 287, 295, 299, 309, 358, 367, 381, 404, 414], "care": 19, "handl": [19, 80, 287, 381, 418], "endpoint": [19, 132, 170, 180], "trigonometr": [20, 21, 22, 23, 24, 25, 26, 62, 63, 370, 371, 383, 384, 418], "invers": [20, 21, 22, 23, 24, 25, 26, 45, 62, 63, 90, 91, 101, 102, 103, 104, 105, 106, 107, 108, 145, 172, 174, 350, 370, 371, 383, 384], "cosin": [20, 21, 22, 23, 24, 25, 26, 62, 63, 370, 371, 383, 384], "tangent": [20, 21, 22, 23, 24, 25, 26, 62, 63, 370, 371, 383, 384], "sine": [20, 21, 22, 23, 24, 25, 26, 62, 63, 370, 371, 383, 384], "hyperbol": [20, 21, 22, 23, 24, 25, 26, 62, 63, 370, 371, 383, 384, 418], "14159265": [20, 25], "65745445": 21, "99322285": 21, "5707963267948966": 22, "72538256": 23, "99822295": 23, "point": [24, 33, 34, 80, 114, 170, 304, 333, 345, 418], "arc": [24, 25], "quadrant": [24, 25], "correctli": [24, 25, 167, 287], "78539816": [24, 25, 399], "57079633": [25, 303, 399], "180": 25, "135": 25, "45": 25, "54930614": 26, "convert": [27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 69, 70, 80, 302, 303, 399], "flat": [27, 28, 79, 115, 260], "index": [27, 28, 53, 79, 80, 186, 246, 247, 250, 280, 299, 300, 358, 381, 382, 407, 418], "tupl": [27, 28, 72, 79, 80, 90, 167, 276, 287, 357, 358, 367, 391, 394, 414], "appli": [27, 28, 29, 176, 178, 179, 359], "index_arrai": [27, 28, 29, 79, 246, 248], "call": [27, 28, 29, 35, 37, 80, 166, 205, 375, 404], "multipl": [27, 28, 29, 54, 79, 80, 138, 161, 162, 248, 372, 376, 403, 407], "occurr": [27, 28, 43], "first": [27, 28, 79, 80, 89, 151, 152, 166, 248, 295, 358, 362, 374], "12": [27, 28, 41, 72, 80, 142, 328, 390, 393], "14": [27, 28, 44, 45, 72, 78, 145, 385], "15": [27, 28, 68, 72, 328, 379], "in_array1": [29, 64, 87], "kind": [29, 50, 79, 80, 248, 270, 293, 418], "would": [29, 79, 80, 270, 304, 387], "pramet": [29, 42, 61, 65, 182, 185, 188, 198, 377, 401], "describ": [29, 79, 80, 167, 248, 379, 418], "algorithm": [29, 79, 248], "indirect": [29, 79, 248, 372], "stabl": [29, 79, 248, 372], "partial": [29, 372], "decim": [30, 79, 275, 361, 364], "detail": [30, 124, 364, 391, 392, 394, 395, 414], "nearest": [30, 119, 120, 356, 361, 364, 397], "truncat": [30, 50, 52, 119, 342, 361, 364, 397], "ndmin": 31, "object": [31, 34, 35, 37, 58, 79, 80, 90, 114, 115, 124, 128, 141, 157, 161, 167, 171, 187, 274, 289, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 358, 414], "satisfi": [31, 35, 37, 92], "specifi": [31, 35, 42, 49, 75, 79, 132, 144, 167, 170, 180, 184, 185, 198, 246, 247, 248, 255, 304, 317, 327, 345, 362, 363, 377, 385, 401], "valueerror": [31, 33, 34, 35, 37, 58, 358, 375], "new": [31, 49, 54, 79, 80, 84, 85, 90, 124, 128, 129, 130, 131, 138, 192, 247, 274, 284, 290, 291, 358, 362, 363, 376, 387, 403, 405, 406, 414], "uniniti": [31, 85, 130, 290, 405], "than": [31, 79, 114, 117, 118, 138, 165, 270, 357, 368, 369, 376, 403], "dimens": [31, 39, 40, 41, 54, 65, 72, 79, 80, 90, 117, 118, 138, 143, 163, 167, 192, 247, 260, 268, 304, 334, 336, 337, 339, 357, 358, 367, 372, 375, 376, 380, 390, 391, 392, 393, 394, 395, 403, 414, 418], "a1": 32, "a2": 32, "equal_nan": [32, 146], "consist": 32, "contigu": [33, 34, 35, 37, 79, 260, 353, 358], "check": [33, 34, 157], "construct": [33, 34, 53, 71, 79, 80, 126, 127, 187, 250, 289, 407], "grid": [33, 34, 143, 186], "No": [34, 157], "perform": [34, 157], "match": [34, 80, 299, 300, 381, 382], "pass": [34, 79, 80, 274], "through": [34, 80, 414], "subclass": [34, 152], "content": [35, 79, 341], "flag": [35, 37, 79, 80, 253], "about": [35, 37, 79, 114, 258, 414], "layout": [35, 37, 79, 258, 358, 407], "f_contigu": [35, 37], "make": [35, 37, 80, 186], "now": [35, 37, 72], "c_contigu": [35, 37, 79, 253], "Then": [35, 37], "laid": 37, "fortran": [37, 79, 249, 260, 358], "row": [37, 54, 79, 117, 118, 138, 166, 171, 249, 260, 391, 403], "ari": [39, 40, 41], "least": [39, 40, 41, 80, 146], "whilst": 39, "higher": 39, "preserv": [39, 40, 41, 79, 80, 116, 117, 118, 246, 247], "dpnp_arrai": [39, 40, 41, 85, 114, 124, 131, 141, 186, 199, 291, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 357, 358, 390, 393, 406, 407], "One": [39, 40, 41, 80, 358], "made": [39, 80], "sequenc": [40, 41, 54, 57, 61, 138, 164, 166, 328, 341, 359, 376, 403], "non": [40, 41, 43, 64, 79, 147, 161, 269, 287, 295, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 373], "avoid": [40, 41, 79, 248], "possibl": [40, 41, 79, 90, 249, 274, 358, 375, 380, 387], "three": [41, 304, 340], "becom": 41, "m": [41, 65, 80, 93, 116, 117, 118, 157, 159, 161, 162, 165, 389, 391, 394], "weight": [42, 43, 65, 137, 184], "arithmet": [42, 132, 184, 185, 377, 401, 407, 418], "minlength": 43, "count": [43, 64, 80, 128, 164, 287, 306, 407, 418], "find": [43, 165, 365, 372, 398, 418], "re": [43, 137, 362, 398], "bit": [44, 45, 46, 47, 80, 114, 141, 145, 154, 176, 178, 179, 360, 418], "truth": [44, 45, 46, 47, 86, 135, 136, 145, 155, 156, 176, 177, 178, 179, 288, 418], "xor": [44, 45, 46, 47, 145, 176, 177, 178, 179], "255": [44, 46], "NOT": [45, 145, 176, 177, 178, 179], "31": [47, 132], "26": 47, "broadcast": [48, 49, 60, 139, 167, 176, 178, 179, 181, 183, 189, 295, 299, 357], "against": [48, 133, 167], "other": [48, 79, 80, 119, 166, 192, 202, 203, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 238, 241, 242, 243, 248, 297, 304, 348, 407, 418], "must": [49, 79, 90, 92, 157, 166, 167, 171, 246, 247, 299, 357, 380], "from_": 50, "cast": [50, 54, 60, 79, 138, 249, 403], "safe": 50, "between": [50, 81, 114, 162, 321, 335, 399], "occur": [50, 79, 260], "accord": [50, 80, 114, 161, 162], "rule": [50, 60, 181, 359, 388], "without": [50, 79, 84, 276, 284, 358, 414], "overflow": 50, "target": [50, 79, 249], "equiv": 50, "same_kind": [50, 54, 60, 138, 403], "unsaf": [50, 79, 249], "option": [50, 79, 80, 165, 166, 167, 246, 247, 248, 260, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 357, 358, 381, 391, 392, 394, 395], "what": [50, 80, 86, 306, 323], "mai": [50, 80, 90, 161, 180, 414], "cube": 51, "27": [51, 295, 400], "mode": [53, 57, 61, 79, 168, 250, 272, 283, 299, 342, 347, 381], "prefer": [53, 58, 79, 253], "join": [54, 138, 376, 403, 418], "exist": [54, 80, 90, 138, 358, 376, 403], "sub": [54, 80, 138, 376, 403], "horizont": [54, 116, 138, 403], "vertic": [54, 116, 117, 138, 403], "3rd": 54, "depth": 54, "assembl": [54, 138, 376, 403], "third": 54, "t": [54, 65, 79, 80, 162, 284, 346], "obtain": [55, 56, 287], "chang": [55, 56, 58, 59, 79, 80, 248, 280, 284, 286, 294, 299, 301, 358, 399, 418], "imaginari": [55, 56, 79, 142, 261, 297, 354], "2j": [55, 56, 142, 161, 354, 368], "1j": [55, 56, 79, 142, 169, 261, 273, 354, 374], "j": [55, 56, 142, 161, 297, 354, 374], "v": [57, 80, 161], "linear": [57, 61, 180, 407, 418], "convolut": [57, 61], "ca": 57, "z": [58, 127, 186, 314], "when": [58, 79, 80, 167, 180, 248, 249, 381, 404], "we": [58, 72], "modifi": [58, 341], "dst": 60, "src": 60, "violat": 60, "valid": [61, 90, 380, 391, 392, 394, 395], "000000e": [62, 370], "00": [62, 370], "371139e": 62, "5091786": 63, "591953": 63, "rowvar": 65, "bia": 65, "ddof": [65, 79, 198, 279, 285, 377, 401], "fweight": 65, "aweight": 65, "estim": [65, 306, 323], "covari": 65, "matrix": [65, 157, 158, 161, 162, 164, 165, 167, 168, 181, 374, 393, 400, 407, 418], "variabl": 65, "axisa": 66, "axisb": 66, "axisc": 66, "vector": [66, 158, 165, 166, 167, 186, 402, 418], "cumul": [67, 68, 79, 194, 195, 254], "24": [67, 81, 196, 296], "120": [67, 70], "720": 67, "remov": [69, 79, 90, 278, 302, 375, 418], "larg": [69, 80, 302], "jump": [69, 302], "wrap": [69, 79, 113, 272, 283, 299, 302, 381], "rad": 70, "30": [70, 303], "60": [70, 404], "90": [70, 404], "150": 70, "access": [72, 73, 113, 414], "main": [72, 73, 113, 140, 162], "usual": [72, 80], "di": 72, "100": [72, 132, 180, 316, 342], "d3": 72, "offset": [75, 79, 80, 255, 386, 391, 392, 394, 395], "axis1": [75, 79, 255, 282, 380, 386], "axis2": [75, 79, 255, 282, 380, 386], "prepend": [76, 90], "th": [76, 81, 185, 390, 393], "quotient": [77, 190, 356], "over": [78, 115, 127, 167, 170, 181, 186, 194, 296, 304, 331, 336, 347, 348, 379, 418], "arbitrari": [78, 80, 181, 359], "ax": [78, 79, 96, 98, 99, 102, 103, 104, 107, 108, 110, 112, 144, 167, 181, 184, 192, 276, 282, 284, 362, 363, 375, 380, 385, 387], "buffer": [79, 125, 358], "stride": [79, 249], "wrapper": 79, "compliant": 79, "origin": [79, 167, 192, 248, 358], "__getitem__": [79, 80, 115], "self": [79, 80, 115, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 259, 304], "__setitem__": [79, 115], "val": [79, 113, 115, 239, 272, 294, 299], "__len__": [79, 80], "len": [79, 80, 143, 227, 367], "Its": [79, 246, 247], "right": [79, 117, 118, 139, 154, 160, 161, 246, 247, 347, 360, 365], "hold": [79, 167, 246, 247], "output": [79, 80, 86, 135, 136, 155, 156, 164, 166, 186, 240, 246, 247, 288, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 375, 418], "integer_arrai": [79, 246], "versionchang": [79, 248], "previous": [79, 248], "wa": [79, 80, 248, 304, 345, 379], "error": [79, 87, 248, 407], "At": [79, 248], "some": [79, 80, 90, 92, 119, 248, 414], "futur": [79, 80, 248], "intend": [79, 248], "until": [79, 248, 362, 363], "should": [79, 133, 146, 248, 321, 358, 365, 414], "explicitli": [79, 248], "arr": [79, 80, 248, 287, 298, 301, 328, 392, 395], "futurewarn": [79, 248], "quicksort": [79, 248], "mergesort": [79, 248], "heapsort": [79, 248], "field": [79, 80, 186, 248], "compar": [79, 86, 248], "second": [79, 80, 89, 152, 248, 295, 374], "etc": [79, 80, 248, 323], "word": [79, 119, 248, 304, 348], "yield": [79, 248, 304, 414], "maskedarrai": [79, 248], "inplac": [79, 248], "asnumpi": 79, "popul": [79, 304, 331], "style": [79, 249, 260], "keep": [79, 249], "close": [79, 90, 249, 304, 332], "happen": [79, 249, 306], "itself": [79, 80, 249, 414], "possibli": [79, 249], "doe": [79, 249], "behavior": [79, 253], "assign": [79, 257], "collaps": [79, 260], "get_arrai": 79, "get": [79, 280, 414], "id": [79, 262], "standard": [79, 114, 120, 123, 184, 190, 240, 262, 304, 319, 326, 333, 342, 343, 344, 345, 346, 356, 377, 379, 396, 401, 414, 418], "random": [79, 116, 117, 118, 169, 262, 376, 407, 418], "123": [79, 262], "initi": [79, 84, 129, 182, 188, 264, 266, 271, 281, 296, 304, 379], "kth": [79, 270, 293], "introselect": [79, 270, 293], "rearrang": [79, 270, 418], "smaller": [79, 120, 270, 356], "move": [79, 192, 270, 362, 363, 387], "behind": [79, 270], "undefin": [79, 270], "dparrai": [79, 271, 281, 419], "sh": [79, 274], "unlik": [79, 274], "free": [79, 274], "separ": [79, 80, 274], "entri": [79, 80, 84, 116, 117, 118, 278, 285], "varianc": [79, 184, 198, 279, 285, 377, 401, 418], "interchang": [79, 192, 282, 380], "to_devic": 79, "target_devic": 79, "transfer": 79, "suitabl": [79, 284], "properti": [79, 200, 256, 258, 259, 261, 263, 267, 268, 273, 276, 277, 280, 284, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 414], "give": [79, 284, 358, 367], "mask": [79, 80, 285, 294, 301, 381], "finit": [79, 147, 148, 149, 285, 297], "__eq__": [79, 80, 115, 304], "__ne__": [79, 80, 115, 304], "__lt__": [79, 80, 115, 304], "__le__": [79, 80, 115, 304], "__gt__": [79, 80, 115, 304], "__ge__": [79, 80, 115, 304], "attribut": [79, 80, 114, 141, 407], "0j": [79, 261, 273, 368], "70710677": [79, 261, 273], "items": [79, 80], "nbyte": 79, "consum": [79, 267], "length": [79, 86, 276, 307, 358, 359, 367, 375], "repres": [79, 80, 124, 143, 276, 304, 414], "diment": [79, 276], "setter": [79, 276], "involv": [79, 276], "cannot": [79, 276, 375], "displac": [79, 280], "upon": [79, 280], "unit": [79, 280], "respect": [79, 280], "s1": [79, 80, 280], "s2": [79, 80, 280], "s3": [79, 280], "i1": [79, 80, 280], "i2": [79, 80, 280], "i3": [79, 280], "sycl_context": 79, "sycl_devic": 79, "align": 80, "homogen": 80, "fundament": 80, "struct": 80, "obj": [80, 124, 150], "dictionari": 80, "comma": 80, "string": [80, 129, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 414], "sticki": 80, "isalignedstruct": 80, "just": 80, "built": 80, "int16": 80, "structur": 80, "f1": 80, "unsign": 80, "uint64": 80, "f2": 80, "u8": 80, "i4": 80, "protocol": [80, 124], "f8": 80, "s10": 80, "format": [80, 126, 418], "f0": 80, "void": 80, "flexibl": 80, "hello": 80, "world": [80, 306, 323], "i8": 80, "v10": 80, "subdivid": 80, "int8": 80, "gender": 80, "ag": 80, "uint8": 80, "u1": 80, "25": [80, 87, 134, 137, 170, 193, 333, 342, 400, 401], "surnam": 80, "s25": 80, "new_ord": 80, "forc": 80, "swap": [80, 380], "code": 80, "opposit": 80, "endian": 80, "littl": 80, "big": 80, "nativ": 80, "new_dtyp": 80, "sy": 80, "sys_is_l": 80, "byteord": 80, "native_cod": 80, "swapped_cod": 80, "native_dt": 80, "swapped_dt": 80, "l": [80, 157, 161], "subarrai": 80, "regardless": 80, "subdtyp": 80, "8f": 80, "charact": 80, "applic": 80, "dt": 80, "relev": 80, "ascii": 80, "even": [80, 364], "char": 80, "descr": 80, "__array_interface__": 80, "descript": [80, 414], "warn": [80, 322], "directli": [80, 180], "accur": 80, "reconstruct": [80, 169], "str_": 80, "grade": 80, "u16": 80, "fulli": 80, "titl": 80, "present": 80, "unicod": 80, "meta": 80, "notic": 80, "s16": 80, "multiarrai": 80, "item_hasobject": 80, "list_pickl": 80, "item_is_point": 80, "needs_init": 80, "needs_pyapi": 80, "use_getitem": 80, "use_setitem": 80, "explan": 80, "thei": [80, 162, 414], "user": 80, "particular": 80, "hasobject": 80, "recal": 80, "actual": [80, 157], "address": 80, "pointer": 80, "distinguish": 80, "won": 80, "maintain": [80, 365], "so": [80, 86, 172, 342, 373], "togeth": 80, "produc": 80, "isbuiltin": 80, "relat": 80, "read": [80, 126, 358], "machineri": 80, "extend": [80, 414], "field1": 80, "isn": 80, "platform": 80, "anyth": 80, "80": [80, 404], "biufcmmosuv": 80, "identifi": 80, "gener": [80, 162, 304, 306, 309, 340, 400, 414, 418], "u": [80, 169], "timedelta": 80, "datetim": 80, "metadata": 80, "readonli": 80, "mappingproxi": 80, "approach": 80, "although": 80, "guarante": [80, 358], "certain": 80, "project": [80, 297], "featur": 80, "long": 80, "undocu": 80, "well": [80, 126, 306, 323, 342], "aspect": 80, "ad": [80, 418], "datatyp": [80, 165], "dt2": 80, "key2": 80, "value2": 80, "arr2": 80, "clear": 80, "width": 80, "un": 80, "void640": 80, "increas": [80, 90, 400], "walk": 80, "num": [80, 87, 132, 170, 180, 399], "roughli": 80, "precis": [80, 114], "str": 80, "19": 80, "typestr": 80, "item_dtyp": 80, "whose": [80, 162, 362, 392, 395], "retriev": 80, "extra": 80, "impli": 80, "tack": 80, "end": [80, 170], "to_end": 81, "to_begin": 81, "consecut": 81, "einstein": [82, 83, 144, 181, 292, 385], "summat": [82, 83, 144, 181, 292, 385], "convent": [82, 83, 144, 181, 292, 385], "operand": [82, 83, 144, 292, 385], "lowest": [82, 83, 304, 332], "cost": [82, 83], "contract": [82, 83], "express": [82, 83], "subscript": 83, "greedi": 83, "consid": [83, 147, 165, 304, 332], "intermedi": 83, "scipi": 87, "math": 87, "75": [87, 134, 170], "99532227": 87, "99853728": 87, "99959305": 87, "99989938": 87, "99997791": 87, "718281828": [88, 91], "389056099": [88, 91], "p": [89, 158, 306, 309, 314, 320, 323], "expand": 90, "appear": [90, 117, 118], "whenev": [90, 380, 387], "rank": [90, 92, 165, 380], "resid": 90, "singleton": [90, 375], "henc": 90, "resolv": 90, "newaxi": 90, "instead": [90, 119, 132, 170, 180, 287], "minu": [91, 119, 120, 356, 397], "condit": [92, 158, 294, 299, 301, 366, 404], "elsewher": [93, 389, 404], "fourier": [95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 407], "transform": [95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 407], "batch": [96, 98, 102, 103, 107, 108, 110, 112], "sampl": [97, 111, 132, 170, 180, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 407, 418], "frequenc": [97, 99, 104, 111], "shift": [99, 104, 154, 360, 362], "compon": [99, 104, 114, 142, 297, 354], "center": [99, 104], "spectrum": [99, 104], "signal": [100, 105], "hermitian": [100, 105, 157, 161, 165, 169, 418], "symmetri": [100, 105], "occupi": [114, 141], "ep": [114, 165], "smallest": [114, 141], "represent": [114, 141, 414], "larger": 114, "ieee": 114, "754": 114, "largest": [114, 120, 141, 356], "smallest_norm": 114, "finfo_object": 114, "__next__": 115, "__iter__": 115, "revers": [116, 117, 118], "reorder": 116, "left": [117, 118, 154, 167, 347, 360, 365], "direct": [117, 118], "down": 118, "toward": [119, 120, 356, 397], "spreadsheet": 119, "definit": [119, 157], "divis": [120, 121, 122, 123, 190, 295, 356, 396], "floordivid": 120, "complementari": [120, 123, 190], "__dlpack__": 124, "dmlc": 124, "github": 124, "io": [124, 171], "dlpack": 124, "__dlpack_device__": 124, "file": [126, 133, 171], "text": [126, 129, 171], "binari": [126, 407, 418], "highli": 126, "effici": [126, 165], "known": [126, 342], "pars": 126, "simpli": 126, "written": 126, "coordin": [127, 186], "therefor": 127, "fn": 127, "fill_valu": [130, 131], "50": [132, 180, 385, 404], "scale": [132, 170, 180, 304, 311, 313, 315, 316, 317, 318, 326, 338, 343, 350], "progress": [132, 170], "1000": [132, 180, 305, 306, 311, 313, 315, 316, 317, 318, 319, 326, 327, 330, 332, 334, 337, 339, 345, 349, 350, 351, 352], "62341325": 132, "6227766": 132, "177": [132, 180], "827941": [132, 180], "directori": 133, "h": [133, 157, 186], "header": 133, "modul": [133, 407], "vararg": 134, "y1": [134, 388], "bin": [137, 342], "densiti": 137, "dataset": 137, "hist": [137, 342], "bin_edg": 137, "4999999999999996": 137, "tup": [138, 403], "nd": [138, 376, 403], "nest": [138, 376, 403], "leg": 139, "triangl": [139, 390, 391, 392, 393, 394, 395], "hypotenus": 139, "iinfo_object": 141, "4j": [142, 354], "6j": [142, 354], "spars": [143, 186], "nat": 149, "arg1": [151, 152], "arg2": [151, 152], "typecod": 151, "lower": [151, 157, 390, 391, 392, 395], "hierarchi": 151, "determin": [152, 159, 176, 178, 179], "kroneck": 153, "40": 154, "decomposit": [157, 169, 418], "ordinari": 157, "symmetr": [157, 161, 165], "verifi": 157, "addit": 157, "array_lik": [157, 159, 162, 164, 165, 166, 167, 304, 367, 392, 395], "upper": [157, 168, 393, 394], "factor": [157, 168], "fro": 158, "eigenvalu": [160, 161, 162, 418], "eigenvector": [160, 161, 162], "uplo": 161, "w": [161, 162], "ascend": 161, "17157288": 161, "82842712": 161, "92387953": 161, "38268343": 161, "vari": 161, "38268343j": 161, "92387953j": 161, "aren": 162, "necessarili": 162, "nor": 162, "matric": [162, 165, 167, 186], "suppli": [164, 166, 304, 333], "tol": [165, 322], "singular": [165, 169], "threshold": 165, "epsilon": 165, "assum": 165, "enabl": 165, "treat": [166, 194, 196, 197, 297, 414], "last": [166, 358, 362, 375], "ord": 167, "abl": 167, "eight": 167, "infinit": [167, 297], "unless": 167, "under": 167, "With": 167, "reduc": [168, 169], "q": [168, 185], "orthonorm": 168, "r": 168, "full_matric": 169, "compute_uv": 169, "2d": 169, "vh": 169, "smat": 169, "4d": 169, "retstep": 170, "logarithm": [170, 172, 173, 174, 175, 320, 418], "fname": 171, "stringio": 171, "behav": 171, "n2": 171, "natur": [172, 174, 175], "plu": [172, 174, 175], "30102999566": 173, "69314718": 174, "09861229": 174, "uniformli": [180, 304, 348], "215": 180, "443469": 180, "464": 180, "15888336": 180, "316": 180, "22776602": 180, "562": 180, "34132519": 180, "0396842": 180, "34960421": 180, "amix": 183, "nanmix": 183, "deviat": [184, 304, 319, 326, 377, 401], "while": [184, 198, 287, 377, 401], "overwrite_input": 185, "xi": 186, "xy": 186, "xn": 186, "nx": 186, "ny": 186, "xv": 186, "yv": 186, "matplotlib": [186, 342], "pyplot": [186, 342], "plt": [186, 342], "xx": 186, "yy": 186, "contourf": 186, "dpnp_iface_arraycr": [187, 289], "mgridclass": 187, "dens": 187, "5j": [187, 289], "fraction": 191, "destin": [192, 299, 300, 382], "remain": [192, 358], "usm": [192, 304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348, 357, 375], "_novalu": [198, 377, 401], "alia": [199, 304, 334, 337, 339], "repr": 237, "136": 240, "272": 240, "408": 240, "out2": 287, "ogridclass": 289, "open": [289, 304, 334, 336, 337, 339, 348, 380], "expon": [295, 330, 418], "125": [295, 400], "effect": 295, "onto": 297, "riemann": 297, "sphere": 297, "magnitud": 297, "7j": 297, "1d": [299, 300, 382], "slice": [299, 300, 382, 394, 414], "contrast": 299, "cyclic": 299, "clamp": [299, 381], "boundari": 299, "44": 299, "55": 299, "22": 299, "deg": 303, "52359878": 303, "04719755": 303, "0943951": 303, "61799388": 303, "mersenn": 304, "twister": 304, "pseudo": 304, "maximumum": [304, 340], "sycldevic": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "syclqueu": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "concept": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348, 414], "oneapi": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "filter": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "selector": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 348], "intern": 304, "state": 304, "get_sycl_queu": 304, "loc": [304, 315, 317, 318, 326, 350], "draw": [304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 332, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351], "gaussian": [304, 326, 350], "share": [304, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 348], "drawn": [304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 329, 330, 332, 335, 338, 344, 345, 346, 347, 348, 349, 350, 351, 352, 366], "parameter": [304, 326, 348], "58997253": 304, "84288406": 304, "33836967": 304, "16394577": 304, "40882036": 304, "39295758": 304, "48927254": 304, "74921661": 304, "13436424": 304, "56920387": 304, "84743374": 304, "80226506": 304, "76377462": 304, "06310682": 304, "25506903": 304, "1179187": 304, "49543509": 304, "76096244": 304, "low": [304, 332, 335, 348, 414], "high": [304, 332, 335, 348], "inclus": [304, 332, 335], "exclus": [304, 332], "half": [304, 334, 336, 337, 339, 348, 380], "omit": [304, 332, 404], "d0": [304, 331, 333], "d1": [304, 333], "dn": [304, 331, 333], "were": [304, 333], "84401099": 304, "four": [304, 333], "88997253": 304, "54288406": 304, "63836967": 304, "46394577": 304, "70882036": 304, "69295758": 304, "78927254": 304, "04921661": 304, "continu": [304, 336], "stdev": [304, 345], "81715362": 304, "54465213": 304, "18557831": 304, "28352814": 304, "67718303": 304, "11570901": 304, "21968665": 304, "18236388": 304, "08156915": 304, "21941987": 304, "24544512": 304, "63522211": 304, "673174": 304, "exclud": [304, 348], "54": 304, "48093112": 304, "52928804": 304, "1196081": 304, "6990877": 304, "34074171": 304, "conveni": 304, "accept": 304, "alpha": [305, 310, 311, 327, 330], "trial": 306, "probabl": [306, 314, 323], "coin": 306, "compani": [306, 323], "drill": [306, 323], "wild": [306, 323], "cat": [306, 323], "oil": [306, 323], "explor": [306, 323], "success": [306, 314, 323], "nine": 306, "fail": 306, "let": 306, "000": 306, "model": 306, "20000": 306, "answer": 306, "38885": 306, "38": 306, "fallback": [307, 309, 310, 320, 325, 341], "df": [308, 324, 346, 347], "chi": [308, 324], "89920014": 308, "00867716": 308, "13710533": 308, "62318272": 308, "dfnum": [312, 325], "dfden": [312, 325], "ten": 314, "thousand": 314, "individu": 314, "35": 314, "10000": [314, 329, 338, 348], "mu": [315, 319, 326, 349], "ngood": 316, "nbad": 316, "nsampl": 316, "nsamp": 316, "good": 316, "bad": 316, "decai": 317, "sigma": [319, 326], "seri": 320, "pval": 321, "iinfo": 321, "throw": 321, "dice": 321, "check_valid": 322, "multivari": 322, "after": 323, "100000": 323, "nonc": [324, 325], "noncentr": [324, 325], "todo": 324, "ii": 327, "lomax": 327, "randomli": 328, "lam": 329, "randomst": 332, "1923875335537315": 333, "rese": 340, "legaci": 340, "mt19937": 340, "engin": 340, "cauchi": 342, "lorentz": 342, "plot": 342, "1000000": [342, 344, 346, 347], "3x8000": 343, "8000": 343, "student": 346, "freedom": 346, "kappa": 349, "von": 349, "mise": 349, "dispers": 349, "33": 355, "3003003": 355, "union": 357, "fit": 357, "newshap": 358, "infer": 358, "write": 358, "fastest": 358, "back": 358, "slowest": 358, "account": 358, "underli": 358, "never": 358, "reus": 358, "unspecifi": 358, "arrays_and_dtyp": 359, "promot": 359, "introduc": 362, "rel": 362, "backward": [362, 363], "li": [362, 363], "been": 363, "reposit": 363, "desir": 363, "37": 364, "side": 365, "sorter": 365, "condlist": 366, "choicelist": 366, "howev": 368, "742278e": 370, "3012989": 371, "548739": 371, "traceback": 375, "recent": 375, "118033988749895": 377, "entir": 379, "bound": 381, "fanci": 381, "everi": 382, "22460635e": 383, "63317787e": 383, "996272": 384, "917152": 384, "dx": 388, "composit": 388, "trapezoid": 388, "By": [391, 394], "taken": [391, 394], "ind": [391, 394], "delta": 399, "complement": 399, "phase": 399, "49778714": 399, "28318531": 399, "vandermond": 400, "chosen": 404, "70": 404, "convers": 407, "algebra": [407, 418], "mathemat": [407, 418], "search": [407, 418], "statist": [407, 418], "summari": 407, "level": [407, 414], "util": 407, "counterpart": 414, "basic": [414, 418], "constructor": 414, "syntax": 414, "reflect": 414, "intrins": 414, "sometim": 414, "expos": 414, "them": 414, "reset": 414, "meaningfulli": 414, "associ": 414, "mani": 414, "fashion": 414, "typic": 414, "briefli": 414, "explain": 414, "docstr": 414, "proce": 414, "pow": 414, "short": 414, "unari": 414, "custom": 414, "cover": 418, "elementwis": [418, 422], "pack": 418, "helper": 418, "equat": 418, "ration": 418, "extrema": 418, "variou": 422}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "any"], [19, 1, 1, "", "arange"], [20, 1, 1, "", "arccos"], [21, 1, 1, "", "arccosh"], [22, 1, 1, "", "arcsin"], [23, 1, 1, "", "arcsinh"], [24, 1, 1, "", "arctan"], [25, 1, 1, "", "arctan2"], [26, 1, 1, "", "arctanh"], [27, 1, 1, "", "argmax"], [28, 1, 1, "", "argmin"], [29, 1, 1, "", "argsort"], [30, 1, 1, "", "around"], [31, 1, 1, "", "array"], [32, 1, 1, "", "array_equal"], [33, 1, 1, "", "asanyarray"], [34, 1, 1, "", "asarray"], [35, 1, 1, "", "ascontiguousarray"], [36, 1, 1, "", "asfarray"], [37, 1, 1, "", "asfortranarray"], [38, 1, 1, "", "asnumpy"], [39, 1, 1, "", "atleast_1d"], [40, 1, 1, "", "atleast_2d"], [41, 1, 1, "", "atleast_3d"], [42, 1, 1, "", "average"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_not"], [46, 1, 1, "", "bitwise_or"], [47, 1, 1, "", "bitwise_xor"], [48, 1, 1, "", "broadcast_arrays"], [49, 1, 1, "", "broadcast_to"], [50, 1, 1, "", "can_cast"], [51, 1, 1, "", "cbrt"], [52, 1, 1, "", "ceil"], [53, 1, 1, "", "choose"], [54, 1, 1, "", "concatenate"], [55, 1, 1, "", "conj"], [56, 1, 1, "", "conjugate"], [57, 1, 1, "", "convolve"], [58, 1, 1, "", "copy"], [59, 1, 1, "", "copysign"], [60, 1, 1, "", "copyto"], [61, 1, 1, "", "correlate"], [62, 1, 1, "", "cos"], [63, 1, 1, "", "cosh"], [64, 1, 1, "", "count_nonzero"], [65, 1, 1, "", "cov"], [66, 1, 1, "", "cross"], [67, 1, 1, "", "cumprod"], [68, 1, 1, "", "cumsum"], [69, 1, 1, "", "deg2rad"], [70, 1, 1, "", "degrees"], [71, 1, 1, "", "diag"], [72, 1, 1, "", "diag_indices"], [73, 1, 1, "", "diag_indices_from"], [74, 1, 1, "", "diagflat"], [75, 1, 1, "", "diagonal"], [76, 1, 1, "", "diff"], [77, 1, 1, "", "divide"], [78, 1, 1, "", "dot"], [80, 2, 1, "", "dtype"], [81, 1, 1, "", "ediff1d"], [82, 1, 1, "", "einsum"], [83, 1, 1, "", "einsum_path"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "equal"], [87, 1, 1, "", "erf"], [88, 1, 1, "", "exp"], [89, 1, 1, "", "exp2"], [90, 1, 1, "", "expand_dims"], [91, 1, 1, "", "expm1"], [92, 1, 1, "", "extract"], [93, 1, 1, "", "eye"], [94, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [113, 1, 1, "", "fill_diagonal"], [114, 1, 1, "", "finfo"], [115, 2, 1, "", "flatiter"], [116, 1, 1, "", "flip"], [117, 1, 1, "", "fliplr"], [118, 1, 1, "", "flipud"], [119, 1, 1, "", "floor"], [120, 1, 1, "", "floor_divide"], [121, 1, 1, "", "fmax"], [122, 1, 1, "", "fmin"], [123, 1, 1, "", "fmod"], [124, 1, 1, "", "from_dlpack"], [125, 1, 1, "", "frombuffer"], [126, 1, 1, "", "fromfile"], [127, 1, 1, "", "fromfunction"], [128, 1, 1, "", "fromiter"], [129, 1, 1, "", "fromstring"], [130, 1, 1, "", "full"], [131, 1, 1, "", "full_like"], [132, 1, 1, "", "geomspace"], [133, 1, 1, "", "get_include"], [134, 1, 1, "", "gradient"], [135, 1, 1, "", "greater"], [136, 1, 1, "", "greater_equal"], [137, 1, 1, "", "histogram"], [138, 1, 1, "", "hstack"], [139, 1, 1, "", "hypot"], [140, 1, 1, "", "identity"], [141, 1, 1, "", "iinfo"], [142, 1, 1, "", "imag"], [143, 1, 1, "", "indices"], [144, 1, 1, "", "inner"], [145, 1, 1, "", "invert"], [146, 1, 1, "", "isclose"], [147, 1, 1, "", "isfinite"], [148, 1, 1, "", "isinf"], [149, 1, 1, "", "isnan"], [150, 1, 1, "", "isscalar"], [151, 1, 1, "", "issubdtype"], [152, 1, 1, "", "issubsctype"], [153, 1, 1, "", "kron"], [154, 1, 1, "", "left_shift"], [155, 1, 1, "", "less"], [156, 1, 1, "", "less_equal"], [170, 1, 1, "", "linspace"], [171, 1, 1, "", "loadtxt"], [172, 1, 1, "", "log"], [173, 1, 1, "", "log10"], [174, 1, 1, "", "log1p"], [175, 1, 1, "", "log2"], [176, 1, 1, "", "logical_and"], [177, 1, 1, "", "logical_not"], [178, 1, 1, "", "logical_or"], [179, 1, 1, "", "logical_xor"], [180, 1, 1, "", "logspace"], [181, 1, 1, "", "matmul"], [182, 1, 1, "", "max"], [183, 1, 1, "", "maximum"], [184, 1, 1, "", "mean"], [185, 1, 1, "", "median"], [186, 1, 1, "", "meshgrid"], [187, 5, 1, "", "mgrid"], [188, 1, 1, "", "min"], [189, 1, 1, "", "minimum"], [190, 1, 1, "", "mod"], [191, 1, 1, "", "modf"], [192, 1, 1, "", "moveaxis"], [193, 1, 1, "", "multiply"], [194, 1, 1, "", "nancumprod"], [195, 1, 1, "", "nancumsum"], [196, 1, 1, "", "nanprod"], [197, 1, 1, "", "nansum"], [198, 1, 1, "", "nanvar"], [199, 3, 1, "", "ndarray"], [286, 1, 1, "", "negative"], [287, 1, 1, "", "nonzero"], [288, 1, 1, "", "not_equal"], [289, 5, 1, "", "ogrid"], [290, 1, 1, "", "ones"], [291, 1, 1, "", "ones_like"], [292, 1, 1, "", "outer"], [293, 1, 1, "", "partition"], [294, 1, 1, "", "place"], [295, 1, 1, "", "power"], [296, 1, 1, "", "prod"], [297, 1, 1, "", "proj"], [298, 1, 1, "", "ptp"], [299, 1, 1, "", "put"], [300, 1, 1, "", "put_along_axis"], [301, 1, 1, "", "putmask"], [302, 1, 1, "", "rad2deg"], [303, 1, 1, "", "radians"], [417, 0, 0, "-", "random"], [353, 1, 1, "", "ravel"], [354, 1, 1, "", "real"], [355, 1, 1, "", "reciprocal"], [356, 1, 1, "", "remainder"], [357, 1, 1, "", "repeat"], [358, 1, 1, "", "reshape"], [359, 1, 1, "", "result_type"], [360, 1, 1, "", "right_shift"], [361, 1, 1, "", "rint"], [362, 1, 1, "", "roll"], [363, 1, 1, "", "rollaxis"], [364, 1, 1, "", "round"], [365, 1, 1, "", "searchsorted"], [366, 1, 1, "", "select"], [367, 1, 1, "", "shape"], [368, 1, 1, "", "sign"], [369, 1, 1, "", "signbit"], [370, 1, 1, "", "sin"], [371, 1, 1, "", "sinh"], [372, 1, 1, "", "sort"], [373, 1, 1, "", "sqrt"], [374, 1, 1, "", "square"], [375, 1, 1, "", "squeeze"], [376, 1, 1, "", "stack"], [377, 1, 1, "", "std"], [378, 1, 1, "", "subtract"], [379, 1, 1, "", "sum"], [380, 1, 1, "", "swapaxes"], [381, 1, 1, "", "take"], [382, 1, 1, "", "take_along_axis"], [383, 1, 1, "", "tan"], [384, 1, 1, "", "tanh"], [385, 1, 1, "", "tensordot"], [386, 1, 1, "", "trace"], [387, 1, 1, "", "transpose"], [388, 1, 1, "", "trapz"], [389, 1, 1, "", "tri"], [390, 1, 1, "", "tril"], [391, 1, 1, "", "tril_indices"], [392, 1, 1, "", "tril_indices_from"], [393, 1, 1, "", "triu"], [394, 1, 1, "", "triu_indices"], [395, 1, 1, "", "triu_indices_from"], [396, 1, 1, "", "true_divide"], [397, 1, 1, "", "trunc"], [398, 1, 1, "", "unique"], [399, 1, 1, "", "unwrap"], [400, 1, 1, "", "vander"], [401, 1, 1, "", "var"], [402, 1, 1, "", "vdot"], [403, 1, 1, "", "vstack"], [404, 1, 1, "", "where"], [405, 1, 1, "", "zeros"], [406, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[79, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[79, 3, 1, "", "T"], [79, 4, 1, "", "__eq__"], [79, 4, 1, "", "__ge__"], [79, 4, 1, "", "__getitem__"], [79, 4, 1, "", "__gt__"], [79, 4, 1, "", "__le__"], [79, 4, 1, "", "__len__"], [79, 4, 1, "", "__lt__"], [79, 4, 1, "", "__ne__"], [79, 4, 1, "", "__setitem__"], [79, 4, 1, "", "all"], [79, 4, 1, "", "any"], [79, 4, 1, "", "argmax"], [79, 4, 1, "", "argmin"], [79, 4, 1, "", "argsort"], [79, 4, 1, "", "asnumpy"], [79, 4, 1, "", "astype"], [79, 4, 1, "", "choose"], [79, 4, 1, "", "conj"], [79, 4, 1, "", "conjugate"], [79, 4, 1, "", "copy"], [79, 4, 1, "", "cumsum"], [79, 3, 1, "", "device"], [79, 4, 1, "", "diagonal"], [79, 4, 1, "", "dot"], [79, 3, 1, "", "dtype"], [79, 4, 1, "", "fill"], [79, 3, 1, "", "flags"], [79, 3, 1, "", "flat"], [79, 4, 1, "", "flatten"], [79, 4, 1, "", "get_array"], [79, 3, 1, "", "imag"], [79, 4, 1, "", "item"], [79, 3, 1, "", "itemsize"], [79, 4, 1, "", "max"], [79, 4, 1, "", "mean"], [79, 4, 1, "", "min"], [79, 3, 1, "", "nbytes"], [79, 3, 1, "", "ndim"], [79, 4, 1, "", "nonzero"], [79, 4, 1, "", "partition"], [79, 4, 1, "", "prod"], [79, 4, 1, "", "put"], [79, 3, 1, "", "real"], [79, 4, 1, "", "reshape"], [79, 4, 1, "", "round"], [79, 3, 1, "", "shape"], [79, 3, 1, "", "size"], [79, 4, 1, "", "squeeze"], [79, 4, 1, "", "std"], [79, 3, 1, "", "strides"], [79, 4, 1, "", "sum"], [79, 4, 1, "", "swapaxes"], [79, 3, 1, "", "sycl_context"], [79, 3, 1, "", "sycl_device"], [79, 3, 1, "", "sycl_queue"], [79, 4, 1, "", "take"], [79, 4, 1, "", "to_device"], [79, 4, 1, "", "transpose"], [79, 3, 1, "", "usm_type"], [79, 4, 1, "", "var"]], "dpnp.dtype": [[80, 4, 1, "", "__eq__"], [80, 4, 1, "", "__ge__"], [80, 4, 1, "", "__getitem__"], [80, 4, 1, "", "__gt__"], [80, 4, 1, "", "__le__"], [80, 4, 1, "", "__len__"], [80, 4, 1, "", "__lt__"], [80, 4, 1, "", "__ne__"], [80, 3, 1, "", "alignment"], [80, 3, 1, "", "base"], [80, 3, 1, "", "byteorder"], [80, 3, 1, "", "char"], [80, 3, 1, "", "descr"], [80, 3, 1, "", "fields"], [80, 3, 1, "", "flags"], [80, 3, 1, "", "hasobject"], [80, 3, 1, "", "isalignedstruct"], [80, 3, 1, "", "isbuiltin"], [80, 3, 1, "", "isnative"], [80, 3, 1, "", "itemsize"], [80, 3, 1, "", "kind"], [80, 3, 1, "", "metadata"], [80, 3, 1, "", "name"], [80, 3, 1, "", "names"], [80, 3, 1, "", "ndim"], [80, 4, 1, "", "newbyteorder"], [80, 3, 1, "", "num"], [80, 3, 1, "", "shape"], [80, 3, 1, "", "str"], [80, 3, 1, "", "subdtype"], [80, 3, 1, "", "type"]], "dpnp.fft": [[95, 1, 1, "", "fft"], [96, 1, 1, "", "fft2"], [97, 1, 1, "", "fftfreq"], [98, 1, 1, "", "fftn"], [99, 1, 1, "", "fftshift"], [100, 1, 1, "", "hfft"], [101, 1, 1, "", "ifft"], [102, 1, 1, "", "ifft2"], [103, 1, 1, "", "ifftn"], [104, 1, 1, "", "ifftshift"], [105, 1, 1, "", "ihfft"], [106, 1, 1, "", "irfft"], [107, 1, 1, "", "irfft2"], [108, 1, 1, "", "irfftn"], [109, 1, 1, "", "rfft"], [110, 1, 1, "", "rfft2"], [111, 1, 1, "", "rfftfreq"], [112, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[115, 4, 1, "", "__eq__"], [115, 4, 1, "", "__ge__"], [115, 4, 1, "", "__getitem__"], [115, 4, 1, "", "__gt__"], [115, 4, 1, "", "__iter__"], [115, 4, 1, "", "__le__"], [115, 4, 1, "", "__lt__"], [115, 4, 1, "", "__ne__"], [115, 4, 1, "", "__next__"], [115, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[157, 1, 1, "", "cholesky"], [158, 1, 1, "", "cond"], [159, 1, 1, "", "det"], [160, 1, 1, "", "eig"], [161, 1, 1, "", "eigh"], [162, 1, 1, "", "eigvals"], [163, 1, 1, "", "inv"], [164, 1, 1, "", "matrix_power"], [165, 1, 1, "", "matrix_rank"], [166, 1, 1, "", "multi_dot"], [167, 1, 1, "", "norm"], [168, 1, 1, "", "qr"], [169, 1, 1, "", "svd"]], "dpnp.ndarray": [[200, 6, 1, "", "T"], [201, 4, 1, "", "__abs__"], [202, 4, 1, "", "__add__"], [203, 4, 1, "", "__and__"], [204, 4, 1, "", "__complex__"], [205, 4, 1, "", "__copy__"], [206, 4, 1, "", "__eq__"], [207, 4, 1, "", "__float__"], [208, 4, 1, "", "__floordiv__"], [209, 4, 1, "", "__ge__"], [210, 4, 1, "", "__getitem__"], [211, 4, 1, "", "__gt__"], [212, 4, 1, "", "__iadd__"], [213, 4, 1, "", "__iand__"], [214, 4, 1, "", "__ifloordiv__"], [215, 4, 1, "", "__ilshift__"], [216, 4, 1, "", "__imod__"], [217, 4, 1, "", "__imul__"], [218, 4, 1, "", "__int__"], [219, 4, 1, "", "__invert__"], [220, 4, 1, "", "__ior__"], [221, 4, 1, "", "__ipow__"], [222, 4, 1, "", "__irshift__"], [223, 4, 1, "", "__isub__"], [224, 4, 1, "", "__itruediv__"], [225, 4, 1, "", "__ixor__"], [226, 4, 1, "", "__le__"], [227, 4, 1, "", "__len__"], [228, 4, 1, "", "__lshift__"], [229, 4, 1, "", "__lt__"], [230, 4, 1, "", "__mod__"], [231, 4, 1, "", "__mul__"], [232, 4, 1, "", "__ne__"], [233, 4, 1, "", "__neg__"], [234, 4, 1, "", "__new__"], [235, 4, 1, "", "__or__"], [236, 4, 1, "", "__pow__"], [237, 4, 1, "", "__repr__"], [238, 4, 1, "", "__rshift__"], [239, 4, 1, "", "__setitem__"], [240, 4, 1, "", "__str__"], [241, 4, 1, "", "__sub__"], [242, 4, 1, "", "__truediv__"], [243, 4, 1, "", "__xor__"], [244, 4, 1, "", "all"], [245, 4, 1, "", "any"], [246, 4, 1, "", "argmax"], [247, 4, 1, "", "argmin"], [248, 4, 1, "", "argsort"], [249, 4, 1, "", "astype"], [250, 4, 1, "", "choose"], [251, 4, 1, "", "conj"], [252, 4, 1, "", "conjugate"], [253, 4, 1, "", "copy"], [254, 4, 1, "", "cumsum"], [255, 4, 1, "", "diagonal"], [256, 6, 1, "", "dtype"], [257, 4, 1, "", "fill"], [258, 6, 1, "", "flags"], [259, 6, 1, "", "flat"], [260, 4, 1, "", "flatten"], [261, 6, 1, "", "imag"], [262, 4, 1, "", "item"], [263, 6, 1, "", "itemsize"], [264, 4, 1, "", "max"], [265, 4, 1, "", "mean"], [266, 4, 1, "", "min"], [267, 6, 1, "", "nbytes"], [268, 6, 1, "", "ndim"], [269, 4, 1, "", "nonzero"], [270, 4, 1, "", "partition"], [271, 4, 1, "", "prod"], [272, 4, 1, "", "put"], [273, 6, 1, "", "real"], [274, 4, 1, "", "reshape"], [275, 4, 1, "", "round"], [276, 6, 1, "", "shape"], [277, 6, 1, "", "size"], [278, 4, 1, "", "squeeze"], [279, 4, 1, "", "std"], [280, 6, 1, "", "strides"], [281, 4, 1, "", "sum"], [282, 4, 1, "", "swapaxes"], [283, 4, 1, "", "take"], [284, 4, 1, "", "transpose"], [285, 4, 1, "", "var"]], "dpnp.random": [[304, 2, 1, "", "RandomState"], [305, 1, 1, "", "beta"], [306, 1, 1, "", "binomial"], [307, 1, 1, "", "bytes"], [308, 1, 1, "", "chisquare"], [309, 1, 1, "", "choice"], [310, 1, 1, "", "dirichlet"], [311, 1, 1, "", "exponential"], [312, 1, 1, "", "f"], [313, 1, 1, "", "gamma"], [314, 1, 1, "", "geometric"], [315, 1, 1, "", "gumbel"], [316, 1, 1, "", "hypergeometric"], [317, 1, 1, "", "laplace"], [318, 1, 1, "", "logistic"], [319, 1, 1, "", "lognormal"], [320, 1, 1, "", "logseries"], [321, 1, 1, "", "multinomial"], [322, 1, 1, "", "multivariate_normal"], [323, 1, 1, "", "negative_binomial"], [324, 1, 1, "", "noncentral_chisquare"], [325, 1, 1, "", "noncentral_f"], [326, 1, 1, "", "normal"], [327, 1, 1, "", "pareto"], [328, 1, 1, "", "permutation"], [329, 1, 1, "", "poisson"], [330, 1, 1, "", "power"], [331, 1, 1, "", "rand"], [332, 1, 1, "", "randint"], [333, 1, 1, "", "randn"], [334, 1, 1, "", "random"], [335, 1, 1, "", "random_integers"], [336, 1, 1, "", "random_sample"], [337, 1, 1, "", "ranf"], [338, 1, 1, "", "rayleigh"], [339, 1, 1, "", "sample"], [340, 1, 1, "", "seed"], [341, 1, 1, "", "shuffle"], [342, 1, 1, "", "standard_cauchy"], [343, 1, 1, "", "standard_exponential"], [344, 1, 1, "", "standard_gamma"], [345, 1, 1, "", "standard_normal"], [346, 1, 1, "", "standard_t"], [347, 1, 1, "", "triangular"], [348, 1, 1, "", "uniform"], [349, 1, 1, "", "vonmises"], [350, 1, 1, "", "wald"], [351, 1, 1, "", "weibull"], [352, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[304, 4, 1, "", "__eq__"], [304, 4, 1, "", "__ge__"], [304, 4, 1, "", "__gt__"], [304, 4, 1, "", "__le__"], [304, 4, 1, "", "__lt__"], [304, 4, 1, "", "__ne__"], [304, 4, 1, "", "get_state"], [304, 4, 1, "", "get_sycl_device"], [304, 4, 1, "", "get_sycl_queue"], [304, 4, 1, "", "normal"], [304, 4, 1, "", "rand"], [304, 4, 1, "", "randint"], [304, 4, 1, "", "randn"], [304, 4, 1, "", "random_sample"], [304, 4, 1, "", "standard_normal"], [304, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"interplai": 0, "data": [0, 2, 7, 8, 9, 408, 414, 417], "parallel": [0, 2], "control": 0, "librari": 0, "exampl": [0, 4], "c": 1, "backend": 1, "api": [1, 407], "refer": [1, 407], "extens": 2, "numpi": [2, 6], "develop": 2, "inform": [2, 8], "overview": 3, "quick": 4, "start": 4, "guid": 4, "devic": 4, "driver": 4, "python": 4, "interpret": 4, "instal": 4, "packag": [4, 416], "from": [4, 7], "anaconda": 4, "build": 4, "conda": 4, "scikit": 4, "test": [4, 8, 410], "binari": 5, "oper": [5, 408, 410, 411, 412, 414, 422], "elementwis": 5, "bit": [5, 422], "pack": 5, "output": 5, "format": 5, "comparison": [6, 410, 414, 422], "tabl": 6, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 417], "cupi": 6, "summari": 6, "modul": [6, 416], "level": 6, "multi": [6, 414], "dimension": [6, 414], "arrai": [6, 7, 9, 31, 408, 410, 411, 414], "linear": [6, 409], "algebra": [6, 409], "discret": 6, "fourier": 6, "transform": 6, "random": [6, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 417], "sampl": [6, 339, 417], "creation": 7, "routin": [7, 8, 10, 408, 411, 412, 413, 418], "basic": [7, 411, 416], "other": [7, 409, 412, 414], "numer": 7, "rang": 7, "matrix": [7, 409, 414], "The": 7, "class": 7, "type": [8, 9, 410, 414], "creat": 8, "miscellan": [8, 412, 413], "avail": [9, 422], "fft": [10, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "function": [10, 410, 412, 420, 421, 422], "standard": 10, "real": [10, 273, 354], "hermitian": 10, "helper": 10, "ab": 11, "absolut": 12, "add": 13, "all": [14, 244], "allclos": 15, "amax": 16, "amin": 17, "ani": [18, 245], "arang": 19, "arcco": 20, "arccosh": 21, "arcsin": 22, "arcsinh": 23, "arctan": 24, "arctan2": 25, "arctanh": 26, "argmax": [27, 246], "argmin": [28, 247], "argsort": [29, 248], "around": 30, "array_equ": 32, "asanyarrai": 33, "asarrai": 34, "ascontiguousarrai": 35, "asfarrai": 36, "asfortranarrai": 37, "asnumpi": 38, "atleast_1d": 39, "atleast_2d": 40, "atleast_3d": 41, "averag": [42, 421], "bincount": 43, "bitwise_and": 44, "bitwise_not": 45, "bitwise_or": 46, "bitwise_xor": 47, "broadcast_arrai": 48, "broadcast_to": 49, "can_cast": 50, "cbrt": 51, "ceil": 52, "choos": [53, 250], "concaten": 54, "conj": [55, 251], "conjug": [56, 252], "convolv": 57, "copi": [58, 253], "copysign": 59, "copyto": 60, "correl": [61, 421], "co": 62, "cosh": 63, "count_nonzero": 64, "cov": 65, "cross": 66, "cumprod": 67, "cumsum": [68, 254], "deg2rad": 69, "degre": 70, "diag": 71, "diag_indic": 72, "diag_indices_from": 73, "diagflat": 74, "diagon": [75, 255], "diff": 76, "divid": 77, "dot": 78, "dpnp_arrai": 79, "dtype": [80, 256], "ediff1d": 81, "einsum": 82, "einsum_path": 83, "empti": 84, "empty_lik": 85, "equal": 86, "erf": 87, "exp": 88, "exp2": 89, "expand_dim": 90, "expm1": 91, "extract": 92, "ey": 93, "fab": 94, "fft2": 96, "fftfreq": 97, "fftn": 98, "fftshift": 99, "hfft": 100, "ifft": 101, "ifft2": 102, "ifftn": 103, "ifftshift": 104, "ihfft": 105, "irfft": 106, "irfft2": 107, "irfftn": 108, "rfft": 109, "rfft2": 110, "rfftfreq": 111, "rfftn": 112, "fill_diagon": 113, "finfo": 114, "flatit": 115, "flip": 116, "fliplr": 117, "flipud": 118, "floor": 119, "floor_divid": 120, "fmax": 121, "fmin": 122, "fmod": 123, "from_dlpack": 124, "frombuff": 125, "fromfil": 126, "fromfunct": 127, "fromit": 128, "fromstr": 129, "full": 130, "full_lik": 131, "geomspac": 132, "get_includ": 133, "gradient": 134, "greater": 135, "greater_equ": 136, "histogram": [137, 421], "hstack": 138, "hypot": 139, "ident": 140, "iinfo": 141, "imag": [142, 261], "indic": 143, "inner": 144, "invert": 145, "isclos": 146, "isfinit": 147, "isinf": 148, "isnan": 149, "isscalar": 150, "issubdtyp": 151, "issubsctyp": 152, "kron": 153, "left_shift": 154, "less": 155, "less_equ": 156, "linalg": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "choleski": 157, "cond": 158, "det": 159, "eig": 160, "eigh": 161, "eigval": 162, "inv": 163, "matrix_pow": 164, "matrix_rank": 165, "multi_dot": 166, "norm": [167, 409], "qr": 168, "svd": 169, "linspac": 170, "loadtxt": 171, "log": 172, "log10": 173, "log1p": 174, "log2": 175, "logical_and": 176, "logical_not": 177, "logical_or": 178, "logical_xor": 179, "logspac": 180, "matmul": 181, "max": [182, 264], "maximum": 183, "mean": [184, 265], "median": 185, "meshgrid": 186, "mgrid": 187, "min": [188, 266], "minimum": 189, "mod": 190, "modf": 191, "moveaxi": 192, "multipli": 193, "nancumprod": 194, "nancumsum": 195, "nanprod": 196, "nansum": 197, "nanvar": 198, "ndarrai": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 414], "t": 200, "__abs__": 201, "__add__": 202, "__and__": 203, "__complex__": 204, "__copy__": 205, "__eq__": 206, "__float__": 207, "__floordiv__": 208, "__ge__": 209, "__getitem__": 210, "__gt__": 211, "__iadd__": 212, "__iand__": 213, "__ifloordiv__": 214, "__ilshift__": 215, "__imod__": 216, "__imul__": 217, "__int__": 218, "__invert__": 219, "__ior__": 220, "__ipow__": 221, "__irshift__": 222, "__isub__": 223, "__itruediv__": 224, "__ixor__": 225, "__le__": 226, "__len__": 227, "__lshift__": 228, "__lt__": 229, "__mod__": 230, "__mul__": 231, "__ne__": 232, "__neg__": 233, "__new__": 234, "__or__": 235, "__pow__": 236, "__repr__": 237, "__rshift__": 238, "__setitem__": 239, "__str__": 240, "__sub__": 241, "__truediv__": 242, "__xor__": 243, "astyp": 249, "fill": 257, "flag": 258, "flat": 259, "flatten": 260, "item": [262, 414], "items": 263, "nbyte": 267, "ndim": 268, "nonzero": [269, 287], "partit": [270, 293], "prod": [271, 296], "put": [272, 299], "reshap": [274, 358], "round": [275, 364, 412], "shape": [276, 367, 411, 414], "size": 277, "squeez": [278, 375], "std": [279, 377], "stride": 280, "sum": [281, 379, 412], "swapax": [282, 380], "take": [283, 381], "transpos": [284, 387, 411], "var": [285, 401], "neg": 286, "not_equ": 288, "ogrid": 289, "ones": 290, "ones_lik": 291, "outer": 292, "place": 294, "power": [295, 330], "proj": 297, "ptp": 298, "put_along_axi": 300, "putmask": 301, "rad2deg": 302, "radian": 303, "randomst": 304, "beta": 305, "binomi": 306, "byte": 307, "chisquar": 308, "choic": 309, "dirichlet": 310, "exponenti": 311, "f": 312, "gamma": 313, "geometr": 314, "gumbel": 315, "hypergeometr": 316, "laplac": 317, "logist": 318, "lognorm": 319, "logseri": 320, "multinomi": 321, "multivariate_norm": 322, "negative_binomi": 323, "noncentral_chisquar": 324, "noncentral_f": 325, "normal": 326, "pareto": 327, "permut": [328, 417], "poisson": 329, "rand": 331, "randint": 332, "randn": 333, "random_integ": 335, "random_sampl": 336, "ranf": 337, "rayleigh": 338, "seed": 340, "shuffl": 341, "standard_cauchi": 342, "standard_exponenti": 343, "standard_gamma": 344, "standard_norm": 345, "standard_t": 346, "triangular": 347, "uniform": 348, "vonmis": 349, "wald": 350, "weibul": 351, "zipf": 352, "ravel": 353, "reciproc": 355, "remaind": 356, "repeat": 357, "result_typ": 359, "right_shift": 360, "rint": 361, "roll": 362, "rollaxi": 363, "searchsort": 365, "select": [366, 414], "sign": 368, "signbit": 369, "sin": 370, "sinh": 371, "sort": [372, 419], "sqrt": 373, "squar": 374, "stack": 376, "subtract": 378, "take_along_axi": 382, "tan": 383, "tanh": 384, "tensordot": 385, "trace": 386, "trapz": 388, "tri": 389, "tril": 390, "tril_indic": 391, "tril_indices_from": 392, "triu": 393, "triu_indic": 394, "triu_indices_from": 395, "true_divid": 396, "trunc": 397, "uniqu": 398, "unwrap": 399, "vander": 400, "vdot": 402, "vstack": 403, "where": 404, "zero": 405, "zeros_lik": 406, "index": [408, 414], "gener": [408, 417], "like": [408, 411], "insert": 408, "iter": 408, "over": 408, "vector": 409, "product": [409, 412], "decomposit": 409, "eigenvalu": 409, "number": [409, 411, 412], "solv": 409, "equat": 409, "logic": 410, "truth": 410, "valu": 410, "infin": 410, "nan": 410, "manipul": [411, 414], "chang": 411, "dimens": 411, "kind": 411, "join": 411, "split": 411, "tile": 411, "ad": 411, "remov": 411, "element": 411, "rearrang": 411, "mathemat": 412, "trigonometr": [412, 422], "hyperbol": 412, "differ": 412, "expon": 412, "logarithm": 412, "special": [412, 414, 420], "float": [412, 422], "point": 412, "ration": 412, "arithmet": [412, 414, 416], "handl": 412, "complex": 412, "extrema": 412, "find": 412, "util": 413, "construct": 414, "attribut": 414, "memori": 414, "layout": 414, "method": 414, "convers": 414, "calcul": 414, "multipl": 414, "pad": 415, "polynomi": 416, "polyutil": 416, "poly1d": 416, "simpl": 417, "distribut": 417, "search": 419, "count": 419, "error": 420, "statist": 421, "order": 421, "varianc": 421, "univers": 422, "ufunc": 422, "math": 422, "twiddl": 422}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Interplay with the Data Parallel Control Library": [[0, "interplay-with-the-data-parallel-control-library"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "Data Parallel Extension for NumPy*": [[2, "module-dpnp"]], "Development information": [[2, null]], "Overview": [[3, "id1"]], "Quick Start Guide": [[4, "id1"]], "Device Drivers": [[4, "device-drivers"]], "Python Interpreter": [[4, "python-interpreter"]], "Installation": [[4, "installation"]], "Install Package from Anaconda": [[4, "install-package-from-anaconda"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Testing": [[4, "testing"]], "Examples": [[4, "examples"]], "Binary Operations": [[5, "binary-operations"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Bit packing": [[5, "bit-packing"]], "Output formatting": [[5, "output-formatting"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, "comparison-table-numpy-dpnp-cupy"]], "Summary": [[6, "summary"]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Linear Algebra": [[6, "linear-algebra"], [409, "linear-algebra"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Random Sampling": [[6, "random-sampling"]], "Array Creation Routines": [[7, "array-creation-routines"]], "Basic creation routines": [[7, "basic-creation-routines"]], "Creation from other data": [[7, "creation-from-other-data"]], "Numerical ranges": [[7, "numerical-ranges"]], "Matrix creation": [[7, "matrix-creation"]], "The Matrix class": [[7, "the-matrix-class"]], "Data type routines": [[8, "data-type-routines"]], "Creating data types": [[8, "creating-data-types"]], "Data type information": [[8, "data-type-information"]], "Data type testing": [[8, "data-type-testing"]], "Miscellaneous": [[8, "miscellaneous"], [412, "miscellaneous"]], "Available array data types": [[9, "available-array-data-types"]], "FFT Functions": [[10, "fft-functions"]], "Standard FFTs": [[10, "standard-ffts"]], "Real FFTs": [[10, "real-ffts"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Helper routines": [[10, "helper-routines"]], "dpnp.abs": [[11, "dpnp-abs"]], "dpnp.absolute": [[12, "dpnp-absolute"]], "dpnp.add": [[13, "dpnp-add"]], "dpnp.all": [[14, "dpnp-all"]], "dpnp.allclose": [[15, "dpnp-allclose"]], "dpnp.amax": [[16, "dpnp-amax"]], "dpnp.amin": [[17, "dpnp-amin"]], "dpnp.any": [[18, "dpnp-any"]], "dpnp.arange": [[19, "dpnp-arange"]], "dpnp.arccos": [[20, "dpnp-arccos"]], "dpnp.arccosh": [[21, "dpnp-arccosh"]], "dpnp.arcsin": [[22, "dpnp-arcsin"]], "dpnp.arcsinh": [[23, "dpnp-arcsinh"]], "dpnp.arctan": [[24, "dpnp-arctan"]], "dpnp.arctan2": [[25, "dpnp-arctan2"]], "dpnp.arctanh": [[26, "dpnp-arctanh"]], "dpnp.argmax": [[27, "dpnp-argmax"]], "dpnp.argmin": [[28, "dpnp-argmin"]], "dpnp.argsort": [[29, "dpnp-argsort"]], "dpnp.around": [[30, "dpnp-around"]], "dpnp.array": [[31, "dpnp-array"]], "dpnp.array_equal": [[32, "dpnp-array-equal"]], "dpnp.asanyarray": [[33, "dpnp-asanyarray"]], "dpnp.asarray": [[34, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[35, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[36, "dpnp-asfarray"]], "dpnp.asfortranarray": [[37, "dpnp-asfortranarray"]], "dpnp.asnumpy": [[38, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[39, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[40, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[41, "dpnp-atleast-3d"]], "dpnp.average": [[42, "dpnp-average"]], "dpnp.bincount": [[43, "dpnp-bincount"]], "dpnp.bitwise_and": [[44, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[45, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[46, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[47, "dpnp-bitwise-xor"]], "dpnp.broadcast_arrays": [[48, "dpnp-broadcast-arrays"]], "dpnp.broadcast_to": [[49, "dpnp-broadcast-to"]], "dpnp.can_cast": [[50, "dpnp-can-cast"]], "dpnp.cbrt": [[51, "dpnp-cbrt"]], "dpnp.ceil": [[52, "dpnp-ceil"]], "dpnp.choose": [[53, "dpnp-choose"]], "dpnp.concatenate": [[54, "dpnp-concatenate"]], "dpnp.conj": [[55, "dpnp-conj"]], "dpnp.conjugate": [[56, "dpnp-conjugate"]], "dpnp.convolve": [[57, "dpnp-convolve"]], "dpnp.copy": [[58, "dpnp-copy"]], "dpnp.copysign": [[59, "dpnp-copysign"]], "dpnp.copyto": [[60, "dpnp-copyto"]], "dpnp.correlate": [[61, "dpnp-correlate"]], "dpnp.cos": [[62, "dpnp-cos"]], "dpnp.cosh": [[63, "dpnp-cosh"]], "dpnp.count_nonzero": [[64, "dpnp-count-nonzero"]], "dpnp.cov": [[65, "dpnp-cov"]], "dpnp.cross": [[66, "dpnp-cross"]], "dpnp.cumprod": [[67, "dpnp-cumprod"]], "dpnp.cumsum": [[68, "dpnp-cumsum"]], "dpnp.deg2rad": [[69, "dpnp-deg2rad"]], "dpnp.degrees": [[70, "dpnp-degrees"]], "dpnp.diag": [[71, "dpnp-diag"]], "dpnp.diag_indices": [[72, "dpnp-diag-indices"]], "dpnp.diag_indices_from": [[73, "dpnp-diag-indices-from"]], "dpnp.diagflat": [[74, "dpnp-diagflat"]], "dpnp.diagonal": [[75, "dpnp-diagonal"]], "dpnp.diff": [[76, "dpnp-diff"]], "dpnp.divide": [[77, "dpnp-divide"]], "dpnp.dot": [[78, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[79, "dpnp-dpnp-array-dpnp-array"]], "dpnp.dtype": [[80, "dpnp-dtype"]], "dpnp.ediff1d": [[81, "dpnp-ediff1d"]], "dpnp.einsum": [[82, "dpnp-einsum"]], "dpnp.einsum_path": [[83, "dpnp-einsum-path"]], "dpnp.empty": [[84, "dpnp-empty"]], "dpnp.empty_like": [[85, "dpnp-empty-like"]], "dpnp.equal": [[86, "dpnp-equal"]], "dpnp.erf": [[87, "dpnp-erf"]], "dpnp.exp": [[88, "dpnp-exp"]], "dpnp.exp2": [[89, "dpnp-exp2"]], "dpnp.expand_dims": [[90, "dpnp-expand-dims"]], "dpnp.expm1": [[91, "dpnp-expm1"]], "dpnp.extract": [[92, "dpnp-extract"]], "dpnp.eye": [[93, "dpnp-eye"]], "dpnp.fabs": [[94, "dpnp-fabs"]], "dpnp.fft.fft": [[95, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[96, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[97, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[98, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[99, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[100, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[101, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[102, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[103, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[104, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[105, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[106, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[107, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[108, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[109, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[110, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[111, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[112, "dpnp-fft-rfftn"]], "dpnp.fill_diagonal": [[113, "dpnp-fill-diagonal"]], "dpnp.finfo": [[114, "dpnp-finfo"]], "dpnp.flatiter": [[115, "dpnp-flatiter"]], "dpnp.flip": [[116, "dpnp-flip"]], "dpnp.fliplr": [[117, "dpnp-fliplr"]], "dpnp.flipud": [[118, "dpnp-flipud"]], "dpnp.floor": [[119, "dpnp-floor"]], "dpnp.floor_divide": [[120, "dpnp-floor-divide"]], "dpnp.fmax": [[121, "dpnp-fmax"]], "dpnp.fmin": [[122, "dpnp-fmin"]], "dpnp.fmod": [[123, "dpnp-fmod"]], "dpnp.from_dlpack": [[124, "dpnp-from-dlpack"]], "dpnp.frombuffer": [[125, "dpnp-frombuffer"]], "dpnp.fromfile": [[126, "dpnp-fromfile"]], "dpnp.fromfunction": [[127, "dpnp-fromfunction"]], "dpnp.fromiter": [[128, "dpnp-fromiter"]], "dpnp.fromstring": [[129, "dpnp-fromstring"]], "dpnp.full": [[130, "dpnp-full"]], "dpnp.full_like": [[131, "dpnp-full-like"]], "dpnp.geomspace": [[132, "dpnp-geomspace"]], "dpnp.get_include": [[133, "dpnp-get-include"]], "dpnp.gradient": [[134, "dpnp-gradient"]], "dpnp.greater": [[135, "dpnp-greater"]], "dpnp.greater_equal": [[136, "dpnp-greater-equal"]], "dpnp.histogram": [[137, "dpnp-histogram"]], "dpnp.hstack": [[138, "dpnp-hstack"]], "dpnp.hypot": [[139, "dpnp-hypot"]], "dpnp.identity": [[140, "dpnp-identity"]], "dpnp.iinfo": [[141, "dpnp-iinfo"]], "dpnp.imag": [[142, "dpnp-imag"]], "dpnp.indices": [[143, "dpnp-indices"]], "dpnp.inner": [[144, "dpnp-inner"]], "dpnp.invert": [[145, "dpnp-invert"]], "dpnp.isclose": [[146, "dpnp-isclose"]], "dpnp.isfinite": [[147, "dpnp-isfinite"]], "dpnp.isinf": [[148, "dpnp-isinf"]], "dpnp.isnan": [[149, "dpnp-isnan"]], "dpnp.isscalar": [[150, "dpnp-isscalar"]], "dpnp.issubdtype": [[151, "dpnp-issubdtype"]], "dpnp.issubsctype": [[152, "dpnp-issubsctype"]], "dpnp.kron": [[153, "dpnp-kron"]], "dpnp.left_shift": [[154, "dpnp-left-shift"]], "dpnp.less": [[155, "dpnp-less"]], "dpnp.less_equal": [[156, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[157, "dpnp-linalg-cholesky"]], "dpnp.linalg.cond": [[158, "dpnp-linalg-cond"]], "dpnp.linalg.det": [[159, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[160, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[161, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[162, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[163, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[164, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[165, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[166, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[167, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[168, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[169, "dpnp-linalg-svd"]], "dpnp.linspace": [[170, "dpnp-linspace"]], "dpnp.loadtxt": [[171, "dpnp-loadtxt"]], "dpnp.log": [[172, "dpnp-log"]], "dpnp.log10": [[173, "dpnp-log10"]], "dpnp.log1p": [[174, "dpnp-log1p"]], "dpnp.log2": [[175, "dpnp-log2"]], "dpnp.logical_and": [[176, "dpnp-logical-and"]], "dpnp.logical_not": [[177, "dpnp-logical-not"]], "dpnp.logical_or": [[178, "dpnp-logical-or"]], "dpnp.logical_xor": [[179, "dpnp-logical-xor"]], "dpnp.logspace": [[180, "dpnp-logspace"]], "dpnp.matmul": [[181, "dpnp-matmul"]], "dpnp.max": [[182, "dpnp-max"]], "dpnp.maximum": [[183, "dpnp-maximum"]], "dpnp.mean": [[184, "dpnp-mean"]], "dpnp.median": [[185, "dpnp-median"]], "dpnp.meshgrid": [[186, "dpnp-meshgrid"]], "dpnp.mgrid": [[187, "dpnp-mgrid"]], "dpnp.min": [[188, "dpnp-min"]], "dpnp.minimum": [[189, "dpnp-minimum"]], "dpnp.mod": [[190, "dpnp-mod"]], "dpnp.modf": [[191, "dpnp-modf"]], "dpnp.moveaxis": [[192, "dpnp-moveaxis"]], "dpnp.multiply": [[193, "dpnp-multiply"]], "dpnp.nancumprod": [[194, "dpnp-nancumprod"]], "dpnp.nancumsum": [[195, "dpnp-nancumsum"]], "dpnp.nanprod": [[196, "dpnp-nanprod"]], "dpnp.nansum": [[197, "dpnp-nansum"]], "dpnp.nanvar": [[198, "dpnp-nanvar"]], "dpnp.ndarray": [[199, "dpnp-ndarray"]], "dpnp.ndarray.T": [[200, "dpnp-ndarray-t"]], "dpnp.ndarray.__abs__": [[201, "dpnp-ndarray-abs"]], "dpnp.ndarray.__add__": [[202, "dpnp-ndarray-add"]], "dpnp.ndarray.__and__": [[203, "dpnp-ndarray-and"]], "dpnp.ndarray.__complex__": [[204, "dpnp-ndarray-complex"]], "dpnp.ndarray.__copy__": [[205, "dpnp-ndarray-copy"]], "dpnp.ndarray.__eq__": [[206, "dpnp-ndarray-eq"]], "dpnp.ndarray.__float__": [[207, "dpnp-ndarray-float"]], "dpnp.ndarray.__floordiv__": [[208, "dpnp-ndarray-floordiv"]], "dpnp.ndarray.__ge__": [[209, "dpnp-ndarray-ge"]], "dpnp.ndarray.__getitem__": [[210, "dpnp-ndarray-getitem"]], "dpnp.ndarray.__gt__": [[211, "dpnp-ndarray-gt"]], "dpnp.ndarray.__iadd__": [[212, "dpnp-ndarray-iadd"]], "dpnp.ndarray.__iand__": [[213, "dpnp-ndarray-iand"]], "dpnp.ndarray.__ifloordiv__": [[214, "dpnp-ndarray-ifloordiv"]], "dpnp.ndarray.__ilshift__": [[215, "dpnp-ndarray-ilshift"]], "dpnp.ndarray.__imod__": [[216, "dpnp-ndarray-imod"]], "dpnp.ndarray.__imul__": [[217, "dpnp-ndarray-imul"]], "dpnp.ndarray.__int__": [[218, "dpnp-ndarray-int"]], "dpnp.ndarray.__invert__": [[219, "dpnp-ndarray-invert"]], "dpnp.ndarray.__ior__": [[220, "dpnp-ndarray-ior"]], "dpnp.ndarray.__ipow__": [[221, "dpnp-ndarray-ipow"]], "dpnp.ndarray.__irshift__": [[222, "dpnp-ndarray-irshift"]], "dpnp.ndarray.__isub__": [[223, "dpnp-ndarray-isub"]], "dpnp.ndarray.__itruediv__": [[224, "dpnp-ndarray-itruediv"]], "dpnp.ndarray.__ixor__": [[225, "dpnp-ndarray-ixor"]], "dpnp.ndarray.__le__": [[226, "dpnp-ndarray-le"]], "dpnp.ndarray.__len__": [[227, "dpnp-ndarray-len"]], "dpnp.ndarray.__lshift__": [[228, "dpnp-ndarray-lshift"]], "dpnp.ndarray.__lt__": [[229, "dpnp-ndarray-lt"]], "dpnp.ndarray.__mod__": [[230, "dpnp-ndarray-mod"]], "dpnp.ndarray.__mul__": [[231, "dpnp-ndarray-mul"]], "dpnp.ndarray.__ne__": [[232, "dpnp-ndarray-ne"]], "dpnp.ndarray.__neg__": [[233, "dpnp-ndarray-neg"]], "dpnp.ndarray.__new__": [[234, "dpnp-ndarray-new"]], "dpnp.ndarray.__or__": [[235, "dpnp-ndarray-or"]], "dpnp.ndarray.__pow__": [[236, "dpnp-ndarray-pow"]], "dpnp.ndarray.__repr__": [[237, "dpnp-ndarray-repr"]], "dpnp.ndarray.__rshift__": [[238, "dpnp-ndarray-rshift"]], "dpnp.ndarray.__setitem__": [[239, "dpnp-ndarray-setitem"]], "dpnp.ndarray.__str__": [[240, "dpnp-ndarray-str"]], "dpnp.ndarray.__sub__": [[241, "dpnp-ndarray-sub"]], "dpnp.ndarray.__truediv__": [[242, "dpnp-ndarray-truediv"]], "dpnp.ndarray.__xor__": [[243, "dpnp-ndarray-xor"]], "dpnp.ndarray.all": [[244, "dpnp-ndarray-all"]], "dpnp.ndarray.any": [[245, "dpnp-ndarray-any"]], "dpnp.ndarray.argmax": [[246, "dpnp-ndarray-argmax"]], "dpnp.ndarray.argmin": [[247, "dpnp-ndarray-argmin"]], "dpnp.ndarray.argsort": [[248, "dpnp-ndarray-argsort"]], "dpnp.ndarray.astype": [[249, "dpnp-ndarray-astype"]], "dpnp.ndarray.choose": [[250, "dpnp-ndarray-choose"]], "dpnp.ndarray.conj": [[251, "dpnp-ndarray-conj"]], "dpnp.ndarray.conjugate": [[252, "dpnp-ndarray-conjugate"]], "dpnp.ndarray.copy": [[253, "dpnp-ndarray-copy"]], "dpnp.ndarray.cumsum": [[254, "dpnp-ndarray-cumsum"]], "dpnp.ndarray.diagonal": [[255, "dpnp-ndarray-diagonal"]], "dpnp.ndarray.dtype": [[256, "dpnp-ndarray-dtype"]], "dpnp.ndarray.fill": [[257, "dpnp-ndarray-fill"]], "dpnp.ndarray.flags": [[258, "dpnp-ndarray-flags"]], "dpnp.ndarray.flat": [[259, "dpnp-ndarray-flat"]], "dpnp.ndarray.flatten": [[260, "dpnp-ndarray-flatten"]], "dpnp.ndarray.imag": [[261, "dpnp-ndarray-imag"]], "dpnp.ndarray.item": [[262, "dpnp-ndarray-item"]], "dpnp.ndarray.itemsize": [[263, "dpnp-ndarray-itemsize"]], "dpnp.ndarray.max": [[264, "dpnp-ndarray-max"]], "dpnp.ndarray.mean": [[265, "dpnp-ndarray-mean"]], "dpnp.ndarray.min": [[266, "dpnp-ndarray-min"]], "dpnp.ndarray.nbytes": [[267, "dpnp-ndarray-nbytes"]], "dpnp.ndarray.ndim": [[268, "dpnp-ndarray-ndim"]], "dpnp.ndarray.nonzero": [[269, "dpnp-ndarray-nonzero"]], "dpnp.ndarray.partition": [[270, "dpnp-ndarray-partition"]], "dpnp.ndarray.prod": [[271, "dpnp-ndarray-prod"]], "dpnp.ndarray.put": [[272, "dpnp-ndarray-put"]], "dpnp.ndarray.real": [[273, "dpnp-ndarray-real"]], "dpnp.ndarray.reshape": [[274, "dpnp-ndarray-reshape"]], "dpnp.ndarray.round": [[275, "dpnp-ndarray-round"]], "dpnp.ndarray.shape": [[276, "dpnp-ndarray-shape"]], "dpnp.ndarray.size": [[277, "dpnp-ndarray-size"]], "dpnp.ndarray.squeeze": [[278, "dpnp-ndarray-squeeze"]], "dpnp.ndarray.std": [[279, "dpnp-ndarray-std"]], "dpnp.ndarray.strides": [[280, "dpnp-ndarray-strides"]], "dpnp.ndarray.sum": [[281, "dpnp-ndarray-sum"]], "dpnp.ndarray.swapaxes": [[282, "dpnp-ndarray-swapaxes"]], "dpnp.ndarray.take": [[283, "dpnp-ndarray-take"]], "dpnp.ndarray.transpose": [[284, "dpnp-ndarray-transpose"]], "dpnp.ndarray.var": [[285, "dpnp-ndarray-var"]], "dpnp.negative": [[286, "dpnp-negative"]], "dpnp.nonzero": [[287, "dpnp-nonzero"]], "dpnp.not_equal": [[288, "dpnp-not-equal"]], "dpnp.ogrid": [[289, "dpnp-ogrid"]], "dpnp.ones": [[290, "dpnp-ones"]], "dpnp.ones_like": [[291, "dpnp-ones-like"]], "dpnp.outer": [[292, "dpnp-outer"]], "dpnp.partition": [[293, "dpnp-partition"]], "dpnp.place": [[294, "dpnp-place"]], "dpnp.power": [[295, "dpnp-power"]], "dpnp.prod": [[296, "dpnp-prod"]], "dpnp.proj": [[297, "dpnp-proj"]], "dpnp.ptp": [[298, "dpnp-ptp"]], "dpnp.put": [[299, "dpnp-put"]], "dpnp.put_along_axis": [[300, "dpnp-put-along-axis"]], "dpnp.putmask": [[301, "dpnp-putmask"]], "dpnp.rad2deg": [[302, "dpnp-rad2deg"]], "dpnp.radians": [[303, "dpnp-radians"]], "dpnp.random.RandomState": [[304, "dpnp-random-randomstate"]], "dpnp.random.beta": [[305, "dpnp-random-beta"]], "dpnp.random.binomial": [[306, "dpnp-random-binomial"]], "dpnp.random.bytes": [[307, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[308, "dpnp-random-chisquare"]], "dpnp.random.choice": [[309, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[310, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[311, "dpnp-random-exponential"]], "dpnp.random.f": [[312, "dpnp-random-f"]], "dpnp.random.gamma": [[313, "dpnp-random-gamma"]], "dpnp.random.geometric": [[314, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[315, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[316, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[317, "dpnp-random-laplace"]], "dpnp.random.logistic": [[318, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[319, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[320, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[321, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[322, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[323, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[324, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[325, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[326, "dpnp-random-normal"]], "dpnp.random.pareto": [[327, "dpnp-random-pareto"]], "dpnp.random.permutation": [[328, "dpnp-random-permutation"]], "dpnp.random.poisson": [[329, "dpnp-random-poisson"]], "dpnp.random.power": [[330, "dpnp-random-power"]], "dpnp.random.rand": [[331, "dpnp-random-rand"]], "dpnp.random.randint": [[332, "dpnp-random-randint"]], "dpnp.random.randn": [[333, "dpnp-random-randn"]], "dpnp.random.random": [[334, "dpnp-random-random"]], "dpnp.random.random_integers": [[335, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[336, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[337, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[338, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[339, "dpnp-random-sample"]], "dpnp.random.seed": [[340, "dpnp-random-seed"]], "dpnp.random.shuffle": [[341, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[342, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[343, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[344, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[345, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[346, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[347, "dpnp-random-triangular"]], "dpnp.random.uniform": [[348, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[349, "dpnp-random-vonmises"]], "dpnp.random.wald": [[350, "dpnp-random-wald"]], "dpnp.random.weibull": [[351, "dpnp-random-weibull"]], "dpnp.random.zipf": [[352, "dpnp-random-zipf"]], "dpnp.ravel": [[353, "dpnp-ravel"]], "dpnp.real": [[354, "dpnp-real"]], "dpnp.reciprocal": [[355, "dpnp-reciprocal"]], "dpnp.remainder": [[356, "dpnp-remainder"]], "dpnp.repeat": [[357, "dpnp-repeat"]], "dpnp.reshape": [[358, "dpnp-reshape"]], "dpnp.result_type": [[359, "dpnp-result-type"]], "dpnp.right_shift": [[360, "dpnp-right-shift"]], "dpnp.rint": [[361, "dpnp-rint"]], "dpnp.roll": [[362, "dpnp-roll"]], "dpnp.rollaxis": [[363, "dpnp-rollaxis"]], "dpnp.round": [[364, "dpnp-round"]], "dpnp.searchsorted": [[365, "dpnp-searchsorted"]], "dpnp.select": [[366, "dpnp-select"]], "dpnp.shape": [[367, "dpnp-shape"]], "dpnp.sign": [[368, "dpnp-sign"]], "dpnp.signbit": [[369, "dpnp-signbit"]], "dpnp.sin": [[370, "dpnp-sin"]], "dpnp.sinh": [[371, "dpnp-sinh"]], "dpnp.sort": [[372, "dpnp-sort"]], "dpnp.sqrt": [[373, "dpnp-sqrt"]], "dpnp.square": [[374, "dpnp-square"]], "dpnp.squeeze": [[375, "dpnp-squeeze"]], "dpnp.stack": [[376, "dpnp-stack"]], "dpnp.std": [[377, "dpnp-std"]], "dpnp.subtract": [[378, "dpnp-subtract"]], "dpnp.sum": [[379, "dpnp-sum"]], "dpnp.swapaxes": [[380, "dpnp-swapaxes"]], "dpnp.take": [[381, "dpnp-take"]], "dpnp.take_along_axis": [[382, "dpnp-take-along-axis"]], "dpnp.tan": [[383, "dpnp-tan"]], "dpnp.tanh": [[384, "dpnp-tanh"]], "dpnp.tensordot": [[385, "dpnp-tensordot"]], "dpnp.trace": [[386, "dpnp-trace"]], "dpnp.transpose": [[387, "dpnp-transpose"]], "dpnp.trapz": [[388, "dpnp-trapz"]], "dpnp.tri": [[389, "dpnp-tri"]], "dpnp.tril": [[390, "dpnp-tril"]], "dpnp.tril_indices": [[391, "dpnp-tril-indices"]], "dpnp.tril_indices_from": [[392, "dpnp-tril-indices-from"]], "dpnp.triu": [[393, "dpnp-triu"]], "dpnp.triu_indices": [[394, "dpnp-triu-indices"]], "dpnp.triu_indices_from": [[395, "dpnp-triu-indices-from"]], "dpnp.true_divide": [[396, "dpnp-true-divide"]], "dpnp.trunc": [[397, "dpnp-trunc"]], "dpnp.unique": [[398, "dpnp-unique"]], "dpnp.unwrap": [[399, "dpnp-unwrap"]], "dpnp.vander": [[400, "dpnp-vander"]], "dpnp.var": [[401, "dpnp-var"]], "dpnp.vdot": [[402, "dpnp-vdot"]], "dpnp.vstack": [[403, "dpnp-vstack"]], "dpnp.where": [[404, "dpnp-where"]], "dpnp.zeros": [[405, "dpnp-zeros"]], "dpnp.zeros_like": [[406, "dpnp-zeros-like"]], "API Reference": [[407, "api-reference"]], "Array Indexing Routines": [[408, "array-indexing-routines"]], "Generating index arrays": [[408, "generating-index-arrays"]], "Indexing-like operations": [[408, "indexing-like-operations"]], "Inserting data into arrays": [[408, "inserting-data-into-arrays"]], "Iterating over arrays": [[408, "iterating-over-arrays"]], "Matrix and vector products": [[409, "matrix-and-vector-products"]], "Decompositions": [[409, "decompositions"]], "Matrix eigenvalues": [[409, "matrix-eigenvalues"]], "Norms and other numbers": [[409, "norms-and-other-numbers"]], "Solving linear equations": [[409, "solving-linear-equations"]], "Logic Functions": [[410, "logic-functions"]], "Truth value testing": [[410, "truth-value-testing"]], "Infinities and NaNs": [[410, "infinities-and-nans"]], "Array type testing": [[410, "array-type-testing"]], "Logic operations": [[410, "logic-operations"]], "Comparison": [[410, "comparison"]], "Array Manipulation Routines": [[411, "array-manipulation-routines"]], "Basic operations": [[411, "basic-operations"]], "Changing array shape": [[411, "changing-array-shape"]], "Transpose-like operations": [[411, "transpose-like-operations"]], "Changing number of dimensions": [[411, "changing-number-of-dimensions"]], "Changing kind of array": [[411, "changing-kind-of-array"]], "Joining arrays": [[411, "joining-arrays"]], "Splitting arrays": [[411, "splitting-arrays"]], "Tiling arrays": [[411, "tiling-arrays"]], "Adding and removing elements": [[411, "adding-and-removing-elements"]], "Rearranging elements": [[411, "rearranging-elements"]], "Mathematical Functions": [[412, "mathematical-functions"]], "Trigonometric functions": [[412, "trigonometric-functions"], [422, "trigonometric-functions"]], "Hyperbolic functions": [[412, "hyperbolic-functions"]], "Rounding": [[412, "rounding"]], "Sums, products, differences": [[412, "sums-products-differences"]], "Exponents and logarithms": [[412, "exponents-and-logarithms"]], "Other special functions": [[412, "other-special-functions"]], "Floating point routines": [[412, "floating-point-routines"]], "Rational routines": [[412, "rational-routines"]], "Arithmetic operations": [[412, "arithmetic-operations"]], "Handling complex numbers": [[412, "handling-complex-numbers"]], "Extrema Finding": [[412, "extrema-finding"]], "Miscellaneous routines": [[413, "miscellaneous-routines"]], "Utility": [[413, "utility"]], "Multi-Dimensional Array (ndarray)": [[414, "multi-dimensional-array-ndarray"]], "Constructing arrays": [[414, "constructing-arrays"]], "Indexing arrays": [[414, "indexing-arrays"]], "Array attributes": [[414, "array-attributes"]], "Memory layout": [[414, "memory-layout"]], "Data type": [[414, "data-type"]], "Other attributes": [[414, "other-attributes"]], "Array methods": [[414, "array-methods"]], "Array conversion": [[414, "array-conversion"]], "Shape manipulation": [[414, "shape-manipulation"]], "Item selection and manipulation": [[414, "item-selection-and-manipulation"]], "Calculation": [[414, "calculation"]], "Arithmetic, matrix multiplication, and comparison operations": [[414, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Special methods": [[414, "special-methods"]], "Padding": [[415, "padding"]], "Polynomials": [[416, "polynomials"]], "Polynomial Package": [[416, "polynomial-package"]], "Polynomial Module": [[416, "polynomial-module"]], "Polyutils": [[416, "polyutils"]], "Poly1d": [[416, "poly1d"]], "Basics": [[416, "basics"]], "Arithmetic": [[416, "arithmetic"]], "Random Sampling (dpnp.random)": [[417, "random-sampling-dpnp-random"]], "Simple random data": [[417, "simple-random-data"]], "Permutations": [[417, "permutations"]], "Distributions": [[417, "distributions"]], "Random generator": [[417, "random-generator"]], "Routines": [[418, "routines"]], "Sorting, Searching, and Counting": [[419, "sorting-searching-and-counting"]], "Sorting": [[419, "sorting"]], "Searching": [[419, "searching"]], "Counting": [[419, "counting"]], "Special Functions": [[420, "special-functions"]], "Error Function": [[420, "error-function"]], "Statistical Functions": [[421, "statistical-functions"]], "Order statistics": [[421, "order-statistics"]], "Averages and variances": [[421, "averages-and-variances"]], "Histograms": [[421, "histograms"]], "Correlations": [[421, "correlations"]], "Universal Functions (ufunc)": [[422, "universal-functions-ufunc"]], "Available ufuncs": [[422, "available-ufuncs"]], "Math operations": [[422, "math-operations"]], "Bit-twiddling functions": [[422, "bit-twiddling-functions"]], "Comparison functions": [[422, "comparison-functions"]], "Floating functions": [[422, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"], [3, "module-dpnp"]], "module": [[2, "module-dpnp"], [3, "module-dpnp"], [10, "module-dpnp.fft"], [417, "module-dpnp.random"]], "dpnp.fft": [[10, "module-dpnp.fft"]], "abs() (in module dpnp)": [[11, "dpnp.abs"]], "absolute() (in module dpnp)": [[12, "dpnp.absolute"]], "add() (in module dpnp)": [[13, "dpnp.add"]], "all() (in module dpnp)": [[14, "dpnp.all"]], "allclose() (in module dpnp)": [[15, "dpnp.allclose"]], "amax() (in module dpnp)": [[16, "dpnp.amax"]], "amin() (in module dpnp)": [[17, "dpnp.amin"]], "any() (in module dpnp)": [[18, "dpnp.any"]], "arange() (in module dpnp)": [[19, "dpnp.arange"]], "arccos() (in module dpnp)": [[20, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[21, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[22, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[23, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[24, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[25, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[26, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[27, "dpnp.argmax"]], "argmin() (in module dpnp)": [[28, "dpnp.argmin"]], "argsort() (in module dpnp)": [[29, "dpnp.argsort"]], "around() (in module dpnp)": [[30, "dpnp.around"]], "array() (in module dpnp)": [[31, "dpnp.array"]], "array_equal() (in module dpnp)": [[32, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[33, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[34, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[35, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[36, "dpnp.asfarray"]], "asfortranarray() (in module dpnp)": [[37, "dpnp.asfortranarray"]], "asnumpy() (in module dpnp)": [[38, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[39, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[40, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[41, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[42, "dpnp.average"]], "bincount() (in module dpnp)": [[43, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[44, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[45, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[46, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[47, "dpnp.bitwise_xor"]], "broadcast_arrays() (in module dpnp)": [[48, "dpnp.broadcast_arrays"]], "broadcast_to() (in module dpnp)": [[49, "dpnp.broadcast_to"]], "can_cast() (in module dpnp)": [[50, "dpnp.can_cast"]], "cbrt() (in module dpnp)": [[51, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[52, "dpnp.ceil"]], "choose() (in module dpnp)": [[53, "dpnp.choose"]], "concatenate() (in module dpnp)": [[54, "dpnp.concatenate"]], "conj() (in module dpnp)": [[55, "dpnp.conj"]], "conjugate() (in module dpnp)": [[56, "dpnp.conjugate"]], "convolve() (in module dpnp)": [[57, "dpnp.convolve"]], "copy() (in module dpnp)": [[58, "dpnp.copy"]], "copysign() (in module dpnp)": [[59, "dpnp.copysign"]], "copyto() (in module dpnp)": [[60, "dpnp.copyto"]], "correlate() (in module dpnp)": [[61, "dpnp.correlate"]], "cos() (in module dpnp)": [[62, "dpnp.cos"]], "cosh() (in module dpnp)": [[63, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[64, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[65, "dpnp.cov"]], "cross() (in module dpnp)": [[66, "dpnp.cross"]], "cumprod() (in module dpnp)": [[67, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[68, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[69, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[70, "dpnp.degrees"]], "diag() (in module dpnp)": [[71, "dpnp.diag"]], "diag_indices() (in module dpnp)": [[72, "dpnp.diag_indices"]], "diag_indices_from() (in module dpnp)": [[73, "dpnp.diag_indices_from"]], "diagflat() (in module dpnp)": [[74, "dpnp.diagflat"]], "diagonal() (in module dpnp)": [[75, "dpnp.diagonal"]], "diff() (in module dpnp)": [[76, "dpnp.diff"]], "divide() (in module dpnp)": [[77, "dpnp.divide"]], "dot() (in module dpnp)": [[78, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.conjugate"]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.copy"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[79, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.get_array"]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.imag"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.prod"]], "put() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.put"]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.real"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.sum"]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.swapaxes"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.var"]], "__eq__() (dpnp.dtype method)": [[80, "dpnp.dtype.__eq__"]], "__ge__() (dpnp.dtype method)": [[80, "dpnp.dtype.__ge__"]], "__getitem__() (dpnp.dtype method)": [[80, "dpnp.dtype.__getitem__"]], "__gt__() (dpnp.dtype method)": [[80, "dpnp.dtype.__gt__"]], "__le__() (dpnp.dtype method)": [[80, "dpnp.dtype.__le__"]], "__len__() (dpnp.dtype method)": [[80, "dpnp.dtype.__len__"]], "__lt__() (dpnp.dtype method)": [[80, "dpnp.dtype.__lt__"]], "__ne__() (dpnp.dtype method)": [[80, "dpnp.dtype.__ne__"]], "alignment (dpnp.dtype attribute)": [[80, "dpnp.dtype.alignment"]], "base (dpnp.dtype attribute)": [[80, "dpnp.dtype.base"]], "byteorder (dpnp.dtype attribute)": [[80, "dpnp.dtype.byteorder"]], "char (dpnp.dtype attribute)": [[80, "dpnp.dtype.char"]], "descr (dpnp.dtype attribute)": [[80, "dpnp.dtype.descr"]], "dtype (class in dpnp)": [[80, "dpnp.dtype"]], "fields (dpnp.dtype attribute)": [[80, "dpnp.dtype.fields"]], "flags (dpnp.dtype attribute)": [[80, "dpnp.dtype.flags"]], "hasobject (dpnp.dtype attribute)": [[80, "dpnp.dtype.hasobject"]], "isalignedstruct (dpnp.dtype attribute)": [[80, "dpnp.dtype.isalignedstruct"]], "isbuiltin (dpnp.dtype attribute)": [[80, "dpnp.dtype.isbuiltin"]], "isnative (dpnp.dtype attribute)": [[80, "dpnp.dtype.isnative"]], "itemsize (dpnp.dtype attribute)": [[80, "dpnp.dtype.itemsize"]], "kind (dpnp.dtype attribute)": [[80, "dpnp.dtype.kind"]], "metadata (dpnp.dtype attribute)": [[80, "dpnp.dtype.metadata"]], "name (dpnp.dtype attribute)": [[80, "dpnp.dtype.name"]], "names (dpnp.dtype attribute)": [[80, "dpnp.dtype.names"]], "ndim (dpnp.dtype attribute)": [[80, "dpnp.dtype.ndim"]], "newbyteorder() (dpnp.dtype method)": [[80, "dpnp.dtype.newbyteorder"]], "num (dpnp.dtype attribute)": [[80, "dpnp.dtype.num"]], "shape (dpnp.dtype attribute)": [[80, "dpnp.dtype.shape"]], "str (dpnp.dtype attribute)": [[80, "dpnp.dtype.str"]], "subdtype (dpnp.dtype attribute)": [[80, "dpnp.dtype.subdtype"]], "type (dpnp.dtype attribute)": [[80, "dpnp.dtype.type"]], "ediff1d() (in module dpnp)": [[81, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[82, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[83, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[84, "dpnp.empty"]], "empty_like() (in module dpnp)": [[85, "dpnp.empty_like"]], "equal() (in module dpnp)": [[86, "dpnp.equal"]], "erf() (in module dpnp)": [[87, "dpnp.erf"]], "exp() (in module dpnp)": [[88, "dpnp.exp"]], "exp2() (in module dpnp)": [[89, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[90, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[91, "dpnp.expm1"]], "extract() (in module dpnp)": [[92, "dpnp.extract"]], "eye() (in module dpnp)": [[93, "dpnp.eye"]], "fabs() (in module dpnp)": [[94, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[95, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[96, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[97, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[98, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[99, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[100, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[101, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[102, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[103, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[104, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[105, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[106, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[107, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[108, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[109, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[110, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[111, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[112, "dpnp.fft.rfftn"]], "fill_diagonal() (in module dpnp)": [[113, "dpnp.fill_diagonal"]], "finfo() (in module dpnp)": [[114, "dpnp.finfo"]], "__eq__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__eq__"]], "__ge__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__ge__"]], "__getitem__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__getitem__"]], "__gt__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__gt__"]], "__iter__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__iter__"]], "__le__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__le__"]], "__lt__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__lt__"]], "__ne__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__ne__"]], "__next__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__next__"]], "__setitem__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__setitem__"]], "flatiter (class in dpnp)": [[115, "dpnp.flatiter"]], "flip() (in module dpnp)": [[116, "dpnp.flip"]], "fliplr() (in module dpnp)": [[117, "dpnp.fliplr"]], "flipud() (in module dpnp)": [[118, "dpnp.flipud"]], "floor() (in module dpnp)": [[119, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[120, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[121, "dpnp.fmax"]], "fmin() (in module dpnp)": [[122, "dpnp.fmin"]], "fmod() (in module dpnp)": [[123, "dpnp.fmod"]], "from_dlpack() (in module dpnp)": [[124, "dpnp.from_dlpack"]], "frombuffer() (in module dpnp)": [[125, "dpnp.frombuffer"]], "fromfile() (in module dpnp)": [[126, "dpnp.fromfile"]], "fromfunction() (in module dpnp)": [[127, "dpnp.fromfunction"]], "fromiter() (in module dpnp)": [[128, "dpnp.fromiter"]], "fromstring() (in module dpnp)": [[129, "dpnp.fromstring"]], "full() (in module dpnp)": [[130, "dpnp.full"]], "full_like() (in module dpnp)": [[131, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[132, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[133, "dpnp.get_include"]], "gradient() (in module dpnp)": [[134, "dpnp.gradient"]], "greater() (in module dpnp)": [[135, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[136, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[137, "dpnp.histogram"]], "hstack() (in module dpnp)": [[138, "dpnp.hstack"]], "hypot() (in module dpnp)": [[139, "dpnp.hypot"]], "identity() (in module dpnp)": [[140, "dpnp.identity"]], "iinfo() (in module dpnp)": [[141, "dpnp.iinfo"]], "imag() (in module dpnp)": [[142, "dpnp.imag"]], "indices() (in module dpnp)": [[143, "dpnp.indices"]], "inner() (in module dpnp)": [[144, "dpnp.inner"]], "invert() (in module dpnp)": [[145, "dpnp.invert"]], "isclose() (in module dpnp)": [[146, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[147, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[148, "dpnp.isinf"]], "isnan() (in module dpnp)": [[149, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[150, "dpnp.isscalar"]], "issubdtype() (in module dpnp)": [[151, "dpnp.issubdtype"]], "issubsctype() (in module dpnp)": [[152, "dpnp.issubsctype"]], "kron() (in module dpnp)": [[153, "dpnp.kron"]], "left_shift() (in module dpnp)": [[154, "dpnp.left_shift"]], "less() (in module dpnp)": [[155, "dpnp.less"]], "less_equal() (in module dpnp)": [[156, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[157, "dpnp.linalg.cholesky"]], "cond() (in module dpnp.linalg)": [[158, "dpnp.linalg.cond"]], "det() (in module dpnp.linalg)": [[159, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[160, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[161, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[162, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[163, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[164, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[165, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[166, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[167, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[168, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[169, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[170, "dpnp.linspace"]], "loadtxt() (in module dpnp)": [[171, "dpnp.loadtxt"]], "log() (in module dpnp)": [[172, "dpnp.log"]], "log10() (in module dpnp)": [[173, "dpnp.log10"]], "log1p() (in module dpnp)": [[174, "dpnp.log1p"]], "log2() (in module dpnp)": [[175, "dpnp.log2"]], "logical_and() (in module dpnp)": [[176, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[177, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[178, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[179, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[180, "dpnp.logspace"]], "matmul() (in module dpnp)": [[181, "dpnp.matmul"]], "max() (in module dpnp)": [[182, "dpnp.max"]], "maximum() (in module dpnp)": [[183, "dpnp.maximum"]], "mean() (in module dpnp)": [[184, "dpnp.mean"]], "median() (in module dpnp)": [[185, "dpnp.median"]], "meshgrid() (in module dpnp)": [[186, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[187, "dpnp.mgrid"]], "min() (in module dpnp)": [[188, "dpnp.min"]], "minimum() (in module dpnp)": [[189, "dpnp.minimum"]], "mod() (in module dpnp)": [[190, "dpnp.mod"]], "modf() (in module dpnp)": [[191, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[192, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[193, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[194, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[195, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[196, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[197, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[198, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[199, "dpnp.ndarray"]], "t (dpnp.ndarray property)": [[200, "dpnp.ndarray.T"]], "__abs__() (dpnp.ndarray method)": [[201, "dpnp.ndarray.__abs__"]], "__add__() (dpnp.ndarray method)": [[202, "dpnp.ndarray.__add__"]], "__and__() (dpnp.ndarray method)": [[203, "dpnp.ndarray.__and__"]], "__complex__() (dpnp.ndarray method)": [[204, "dpnp.ndarray.__complex__"]], "__copy__() (dpnp.ndarray method)": [[205, "dpnp.ndarray.__copy__"]], "__eq__() (dpnp.ndarray method)": [[206, "dpnp.ndarray.__eq__"]], "__float__() (dpnp.ndarray method)": [[207, "dpnp.ndarray.__float__"]], "__floordiv__() (dpnp.ndarray method)": [[208, "dpnp.ndarray.__floordiv__"]], "__ge__() (dpnp.ndarray method)": [[209, "dpnp.ndarray.__ge__"]], "__getitem__() (dpnp.ndarray method)": [[210, "dpnp.ndarray.__getitem__"]], "__gt__() (dpnp.ndarray method)": [[211, "dpnp.ndarray.__gt__"]], "__iadd__() (dpnp.ndarray method)": [[212, "dpnp.ndarray.__iadd__"]], "__iand__() (dpnp.ndarray method)": [[213, "dpnp.ndarray.__iand__"]], "__ifloordiv__() (dpnp.ndarray method)": [[214, "dpnp.ndarray.__ifloordiv__"]], "__ilshift__() (dpnp.ndarray method)": [[215, "dpnp.ndarray.__ilshift__"]], "__imod__() (dpnp.ndarray method)": [[216, "dpnp.ndarray.__imod__"]], "__imul__() (dpnp.ndarray method)": [[217, "dpnp.ndarray.__imul__"]], "__int__() (dpnp.ndarray method)": [[218, "dpnp.ndarray.__int__"]], "__invert__() (dpnp.ndarray method)": [[219, "dpnp.ndarray.__invert__"]], "__ior__() (dpnp.ndarray method)": [[220, "dpnp.ndarray.__ior__"]], "__ipow__() (dpnp.ndarray method)": [[221, "dpnp.ndarray.__ipow__"]], "__irshift__() (dpnp.ndarray method)": [[222, "dpnp.ndarray.__irshift__"]], "__isub__() (dpnp.ndarray method)": [[223, "dpnp.ndarray.__isub__"]], "__itruediv__() (dpnp.ndarray method)": [[224, "dpnp.ndarray.__itruediv__"]], "__ixor__() (dpnp.ndarray method)": [[225, "dpnp.ndarray.__ixor__"]], "__le__() (dpnp.ndarray method)": [[226, "dpnp.ndarray.__le__"]], "__len__() (dpnp.ndarray method)": [[227, "dpnp.ndarray.__len__"]], "__lshift__() (dpnp.ndarray method)": [[228, "dpnp.ndarray.__lshift__"]], "__lt__() (dpnp.ndarray method)": [[229, "dpnp.ndarray.__lt__"]], "__mod__() (dpnp.ndarray method)": [[230, "dpnp.ndarray.__mod__"]], "__mul__() (dpnp.ndarray method)": [[231, "dpnp.ndarray.__mul__"]], "__ne__() (dpnp.ndarray method)": [[232, "dpnp.ndarray.__ne__"]], "__neg__() (dpnp.ndarray method)": [[233, "dpnp.ndarray.__neg__"]], "__new__() (dpnp.ndarray method)": [[234, "dpnp.ndarray.__new__"]], "__or__() (dpnp.ndarray method)": [[235, "dpnp.ndarray.__or__"]], "__pow__() (dpnp.ndarray method)": [[236, "dpnp.ndarray.__pow__"]], "__repr__() (dpnp.ndarray method)": [[237, "dpnp.ndarray.__repr__"]], "__rshift__() (dpnp.ndarray method)": [[238, "dpnp.ndarray.__rshift__"]], "__setitem__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__setitem__"]], "__str__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__str__"]], "__sub__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__sub__"]], "__truediv__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__truediv__"]], "__xor__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__xor__"]], "all() (dpnp.ndarray method)": [[244, "dpnp.ndarray.all"]], "any() (dpnp.ndarray method)": [[245, "dpnp.ndarray.any"]], "argmax() (dpnp.ndarray method)": [[246, "dpnp.ndarray.argmax"]], "argmin() (dpnp.ndarray method)": [[247, "dpnp.ndarray.argmin"]], "argsort() (dpnp.ndarray method)": [[248, "dpnp.ndarray.argsort"]], "astype() (dpnp.ndarray method)": [[249, "dpnp.ndarray.astype"]], "choose() (dpnp.ndarray method)": [[250, "dpnp.ndarray.choose"]], "conj() (dpnp.ndarray method)": [[251, "dpnp.ndarray.conj"]], "conjugate() (dpnp.ndarray method)": [[252, "dpnp.ndarray.conjugate"]], "copy() (dpnp.ndarray method)": [[253, "dpnp.ndarray.copy"]], "cumsum() (dpnp.ndarray method)": [[254, "dpnp.ndarray.cumsum"]], "diagonal() (dpnp.ndarray method)": [[255, "dpnp.ndarray.diagonal"]], "dtype (dpnp.ndarray property)": [[256, "dpnp.ndarray.dtype"]], "fill() (dpnp.ndarray method)": [[257, "dpnp.ndarray.fill"]], "flags (dpnp.ndarray property)": [[258, "dpnp.ndarray.flags"]], "flat (dpnp.ndarray property)": [[259, "dpnp.ndarray.flat"]], "flatten() (dpnp.ndarray method)": [[260, "dpnp.ndarray.flatten"]], "imag (dpnp.ndarray property)": [[261, "dpnp.ndarray.imag"]], "item() (dpnp.ndarray method)": [[262, "dpnp.ndarray.item"]], "itemsize (dpnp.ndarray property)": [[263, "dpnp.ndarray.itemsize"]], "max() (dpnp.ndarray method)": [[264, "dpnp.ndarray.max"]], "mean() (dpnp.ndarray method)": [[265, "dpnp.ndarray.mean"]], "min() (dpnp.ndarray method)": [[266, "dpnp.ndarray.min"]], "nbytes (dpnp.ndarray property)": [[267, "dpnp.ndarray.nbytes"]], "ndim (dpnp.ndarray property)": [[268, "dpnp.ndarray.ndim"]], "nonzero() (dpnp.ndarray method)": [[269, "dpnp.ndarray.nonzero"]], "partition() (dpnp.ndarray method)": [[270, "dpnp.ndarray.partition"]], "prod() (dpnp.ndarray method)": [[271, "dpnp.ndarray.prod"]], "put() (dpnp.ndarray method)": [[272, "dpnp.ndarray.put"]], "real (dpnp.ndarray property)": [[273, "dpnp.ndarray.real"]], "reshape() (dpnp.ndarray method)": [[274, "dpnp.ndarray.reshape"]], "round() (dpnp.ndarray method)": [[275, "dpnp.ndarray.round"]], "shape (dpnp.ndarray property)": [[276, "dpnp.ndarray.shape"]], "size (dpnp.ndarray property)": [[277, "dpnp.ndarray.size"]], "squeeze() (dpnp.ndarray method)": [[278, "dpnp.ndarray.squeeze"]], "std() (dpnp.ndarray method)": [[279, "dpnp.ndarray.std"]], "strides (dpnp.ndarray property)": [[280, "dpnp.ndarray.strides"]], "sum() (dpnp.ndarray method)": [[281, "dpnp.ndarray.sum"]], "swapaxes() (dpnp.ndarray method)": [[282, "dpnp.ndarray.swapaxes"]], "take() (dpnp.ndarray method)": [[283, "dpnp.ndarray.take"]], "transpose() (dpnp.ndarray method)": [[284, "dpnp.ndarray.transpose"]], "var() (dpnp.ndarray method)": [[285, "dpnp.ndarray.var"]], "negative() (in module dpnp)": [[286, "dpnp.negative"]], "nonzero() (in module dpnp)": [[287, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[288, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[289, "dpnp.ogrid"]], "ones() (in module dpnp)": [[290, "dpnp.ones"]], "ones_like() (in module dpnp)": [[291, "dpnp.ones_like"]], "outer() (in module dpnp)": [[292, "dpnp.outer"]], "partition() (in module dpnp)": [[293, "dpnp.partition"]], "place() (in module dpnp)": [[294, "dpnp.place"]], "power() (in module dpnp)": [[295, "dpnp.power"]], "prod() (in module dpnp)": [[296, "dpnp.prod"]], "proj() (in module dpnp)": [[297, "dpnp.proj"]], "ptp() (in module dpnp)": [[298, "dpnp.ptp"]], "put() (in module dpnp)": [[299, "dpnp.put"]], "put_along_axis() (in module dpnp)": [[300, "dpnp.put_along_axis"]], "putmask() (in module dpnp)": [[301, "dpnp.putmask"]], "rad2deg() (in module dpnp)": [[302, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[303, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[304, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[304, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[305, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[306, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[307, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[308, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[309, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[310, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[311, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[312, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[313, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[314, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[315, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[316, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[317, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[318, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[319, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[320, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[321, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[322, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[323, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[324, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[325, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[326, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[327, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[328, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[329, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[330, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[331, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[332, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[333, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[334, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[335, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[336, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[337, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[338, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[339, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[340, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[341, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[342, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[343, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[344, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[345, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[346, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[347, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[348, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[349, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[350, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[351, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[352, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[353, "dpnp.ravel"]], "real() (in module dpnp)": [[354, "dpnp.real"]], "reciprocal() (in module dpnp)": [[355, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[356, "dpnp.remainder"]], "repeat() (in module dpnp)": [[357, "dpnp.repeat"]], "reshape() (in module dpnp)": [[358, "dpnp.reshape"]], "result_type() (in module dpnp)": [[359, "dpnp.result_type"]], "right_shift() (in module dpnp)": [[360, "dpnp.right_shift"]], "rint() (in module dpnp)": [[361, "dpnp.rint"]], "roll() (in module dpnp)": [[362, "dpnp.roll"]], "rollaxis() (in module dpnp)": [[363, "dpnp.rollaxis"]], "round() (in module dpnp)": [[364, "dpnp.round"]], "searchsorted() (in module dpnp)": [[365, "dpnp.searchsorted"]], "select() (in module dpnp)": [[366, "dpnp.select"]], "shape() (in module dpnp)": [[367, "dpnp.shape"]], "sign() (in module dpnp)": [[368, "dpnp.sign"]], "signbit() (in module dpnp)": [[369, "dpnp.signbit"]], "sin() (in module dpnp)": [[370, "dpnp.sin"]], "sinh() (in module dpnp)": [[371, "dpnp.sinh"]], "sort() (in module dpnp)": [[372, "dpnp.sort"]], "sqrt() (in module dpnp)": [[373, "dpnp.sqrt"]], "square() (in module dpnp)": [[374, "dpnp.square"]], "squeeze() (in module dpnp)": [[375, "dpnp.squeeze"]], "stack() (in module dpnp)": [[376, "dpnp.stack"]], "std() (in module dpnp)": [[377, "dpnp.std"]], "subtract() (in module dpnp)": [[378, "dpnp.subtract"]], "sum() (in module dpnp)": [[379, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[380, "dpnp.swapaxes"]], "take() (in module dpnp)": [[381, "dpnp.take"]], "take_along_axis() (in module dpnp)": [[382, "dpnp.take_along_axis"]], "tan() (in module dpnp)": [[383, "dpnp.tan"]], "tanh() (in module dpnp)": [[384, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[385, "dpnp.tensordot"]], "trace() (in module dpnp)": [[386, "dpnp.trace"]], "transpose() (in module dpnp)": [[387, "dpnp.transpose"]], "trapz() (in module dpnp)": [[388, "dpnp.trapz"]], "tri() (in module dpnp)": [[389, "dpnp.tri"]], "tril() (in module dpnp)": [[390, "dpnp.tril"]], "tril_indices() (in module dpnp)": [[391, "dpnp.tril_indices"]], "tril_indices_from() (in module dpnp)": [[392, "dpnp.tril_indices_from"]], "triu() (in module dpnp)": [[393, "dpnp.triu"]], "triu_indices() (in module dpnp)": [[394, "dpnp.triu_indices"]], "triu_indices_from() (in module dpnp)": [[395, "dpnp.triu_indices_from"]], "true_divide() (in module dpnp)": [[396, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[397, "dpnp.trunc"]], "unique() (in module dpnp)": [[398, "dpnp.unique"]], "unwrap() (in module dpnp)": [[399, "dpnp.unwrap"]], "vander() (in module dpnp)": [[400, "dpnp.vander"]], "var() (in module dpnp)": [[401, "dpnp.var"]], "vdot() (in module dpnp)": [[402, "dpnp.vdot"]], "vstack() (in module dpnp)": [[403, "dpnp.vstack"]], "where() (in module dpnp)": [[404, "dpnp.where"]], "zeros() (in module dpnp)": [[405, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[406, "dpnp.zeros_like"]], "dpnp.random": [[417, "module-dpnp.random"]]}})