Search.setIndex({"alltitles": {"API Reference": [[651, null]], "Adding and removing elements": [[655, "adding-and-removing-elements"]], "Arithmetic": [[659, "arithmetic"]], "Arithmetic operations": [[656, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[658, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array API standard compatibility": [[5, null]], "Array attributes": [[658, "array-attributes"]], "Array contents": [[654, "array-contents"]], "Array conversion": [[658, "array-conversion"]], "Array creation routines": [[8, null]], "Array manipulation routines": [[655, null]], "Array methods": [[658, "array-methods"]], "Array type testing": [[654, "array-type-testing"]], "Available array data types": [[10, null]], "Available ufuncs": [[665, "available-ufuncs"]], "Averages and variances": [[664, "averages-and-variances"]], "Background information": [[11, "background-information"]], "Basic operations": [[655, "basic-operations"]], "Basics": [[659, "basics"]], "Bit packing": [[6, "bit-packing"]], "Bit-twiddling functions": [[665, "bit-twiddling-functions"]], "Bit-wise operations": [[6, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[8, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[658, "calculation"]], "Changing array shape": [[655, "changing-array-shape"]], "Changing kind of array": [[655, "changing-kind-of-array"]], "Changing number of dimensions": [[655, "changing-number-of-dimensions"]], "Comparison": [[654, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[7, null]], "Comparison functions": [[665, "comparison-functions"]], "Constructing arrays": [[658, "constructing-arrays"]], "Correlations": [[664, "correlations"]], "Counting": [[662, "counting"]], "Creating data types": [[9, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[658, "data-type"]], "Data type information": [[9, "data-type-information"]], "Data type routines": [[9, null]], "Data type testing": [[9, "data-type-testing"]], "Decompositions": [[653, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[7, "discrete-fourier-transform"], [11, null]], "Distributions": [[660, "distributions"]], "Element-wise bit operations": [[6, "element-wise-bit-operations"]], "Error Function": [[663, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[653, "exceptions"]], "Exponents and logarithms": [[656, "exponents-and-logarithms"]], "Extrema finding": [[656, "extrema-finding"]], "Floating functions": [[665, "floating-functions"]], "Floating point routines": [[656, "floating-point-routines"]], "From existing data": [[8, "from-existing-data"]], "From shape or value": [[8, "from-shape-or-value"]], "Functional programming": [[12, null]], "Generating index arrays": [[652, "generating-index-arrays"]], "Handling complex numbers": [[656, "handling-complex-numbers"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Higher dimensions": [[11, "higher-dimensions"]], "Histograms": [[664, "histograms"]], "Hyperbolic functions": [[656, "hyperbolic-functions"]], "Implementation details": [[11, "implementation-details"]], "Indexing arrays": [[658, "indexing-arrays"]], "Indexing routines": [[652, null]], "Indexing-like operations": [[652, "indexing-like-operations"]], "Inserting data into arrays": [[652, "inserting-data-into-arrays"]], "Inspection": [[5, "inspection"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[658, "item-selection-and-manipulation"]], "Iterating over arrays": [[652, "iterating-over-arrays"]], "Joining arrays": [[655, "joining-arrays"]], "Linear Algebra": [[7, "linear-algebra"]], "Linear algebra": [[653, null]], "Logic functions": [[654, null]], "Logical operations": [[654, "logical-operations"]], "Math operations": [[665, "math-operations"]], "Mathematical functions": [[656, null]], "Matrix and vector products": [[653, "matrix-and-vector-products"]], "Matrix eigenvalues": [[653, "matrix-eigenvalues"]], "Memory layout": [[658, "memory-layout"]], "Miscellaneous": [[9, "miscellaneous"], [656, "miscellaneous"]], "Miscellaneous routines": [[657, null]], "Module-Level": [[7, "module-level"]], "Multi-Dimensional Array": [[7, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[658, null]], "Normalization": [[11, "normalization"]], "Norms and other numbers": [[653, "norms-and-other-numbers"]], "Numerical ranges": [[8, "numerical-ranges"]], "Order statistics": [[664, "order-statistics"]], "Other attributes": [[658, "other-attributes"]], "Other matrix operations": [[653, "other-matrix-operations"]], "Other special functions": [[656, "other-special-functions"]], "Output formatting": [[6, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[660, "permutations"]], "Poly1d": [[659, "poly1d"]], "Polynomial Module": [[659, "polynomial-module"]], "Polynomial Package": [[659, "polynomial-package"]], "Polynomials": [[659, null]], "Polyutils": [[659, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[7, "random-sampling"]], "Random generator": [[660, "random-generator"]], "Random sampling (dpnp.random)": [[660, null]], "Rational routines": [[656, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Real and Hermitian transforms": [[11, "real-and-hermitian-transforms"]], "Rearranging elements": [[655, "rearranging-elements"]], "Rounding": [[656, "rounding"]], "Routines": [[661, null]], "Searching": [[662, "searching"]], "Shape manipulation": [[658, "shape-manipulation"]], "Simple random data": [[660, "simple-random-data"]], "Solving linear equations": [[653, "solving-linear-equations"]], "Sorting": [[662, "sorting"]], "Sorting, searching, and counting": [[662, null]], "Special Functions": [[663, null]], "Special methods": [[658, "special-methods"]], "Splitting arrays": [[655, "splitting-arrays"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[664, null]], "Summary": [[7, "summary"]], "Sums, products, differences": [[656, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[8, "the-matrix-class"]], "Tiling arrays": [[655, "tiling-arrays"]], "Transpose-like operations": [[655, "transpose-like-operations"]], "Trigonometric functions": [[656, "trigonometric-functions"], [665, "trigonometric-functions"]], "Truth value testing": [[654, "truth-value-testing"]], "Universal Functions (ufunc)": [[665, null]], "Utility": [[657, "utility"]], "dpnp.__array_namespace_info__": [[13, null]], "dpnp.abs": [[14, null]], "dpnp.absolute": [[15, null]], "dpnp.acos": [[16, null]], "dpnp.acosh": [[17, null]], "dpnp.add": [[18, null]], "dpnp.all": [[19, null]], "dpnp.allclose": [[20, null]], "dpnp.amax": [[21, null]], "dpnp.amin": [[22, null]], "dpnp.angle": [[23, null]], "dpnp.any": [[24, null]], "dpnp.append": [[25, null]], "dpnp.apply_along_axis": [[26, null]], "dpnp.apply_over_axes": [[27, null]], "dpnp.arange": [[28, null]], "dpnp.arccos": [[29, null]], "dpnp.arccosh": [[30, null]], "dpnp.arcsin": [[31, null]], "dpnp.arcsinh": [[32, null]], "dpnp.arctan": [[33, null]], "dpnp.arctan2": [[34, null]], "dpnp.arctanh": [[35, null]], "dpnp.argmax": [[36, null]], "dpnp.argmin": [[37, null]], "dpnp.argsort": [[38, null]], "dpnp.argwhere": [[39, null]], "dpnp.around": [[40, null]], "dpnp.array": [[41, null]], "dpnp.array_equal": [[42, null]], "dpnp.array_equiv": [[43, null]], "dpnp.array_split": [[44, null]], "dpnp.asanyarray": [[45, null]], "dpnp.asarray": [[46, null]], "dpnp.asarray_chkfinite": [[47, null]], "dpnp.ascontiguousarray": [[48, null]], "dpnp.asfarray": [[49, null]], "dpnp.asfortranarray": [[50, null]], "dpnp.asin": [[51, null]], "dpnp.asinh": [[52, null]], "dpnp.asnumpy": [[53, null]], "dpnp.astype": [[54, null]], "dpnp.atan": [[55, null]], "dpnp.atan2": [[56, null]], "dpnp.atanh": [[57, null]], "dpnp.atleast_1d": [[58, null]], "dpnp.atleast_2d": [[59, null]], "dpnp.atleast_3d": [[60, null]], "dpnp.average": [[61, null]], "dpnp.binary_repr": [[62, null]], "dpnp.bincount": [[63, null]], "dpnp.bitwise_and": [[64, null]], "dpnp.bitwise_invert": [[65, null]], "dpnp.bitwise_left_shift": [[66, null]], "dpnp.bitwise_not": [[67, null]], "dpnp.bitwise_or": [[68, null]], "dpnp.bitwise_right_shift": [[69, null]], "dpnp.bitwise_xor": [[70, null]], "dpnp.broadcast_arrays": [[71, null]], "dpnp.broadcast_shapes": [[72, null]], "dpnp.broadcast_to": [[73, null]], "dpnp.byte_bounds": [[74, null]], "dpnp.can_cast": [[75, null]], "dpnp.cbrt": [[76, null]], "dpnp.ceil": [[77, null]], "dpnp.choose": [[78, null]], "dpnp.clip": [[79, null]], "dpnp.column_stack": [[80, null]], "dpnp.compress": [[81, null]], "dpnp.concat": [[82, null]], "dpnp.concatenate": [[83, null]], "dpnp.conj": [[84, null]], "dpnp.conjugate": [[85, null]], "dpnp.convolve": [[86, null]], "dpnp.copy": [[87, null]], "dpnp.copysign": [[88, null]], "dpnp.copyto": [[89, null]], "dpnp.corrcoef": [[90, null]], "dpnp.correlate": [[91, null]], "dpnp.cos": [[92, null]], "dpnp.cosh": [[93, null]], "dpnp.count_nonzero": [[94, null]], "dpnp.cov": [[95, null]], "dpnp.cross": [[96, null]], "dpnp.cumlogsumexp": [[97, null]], "dpnp.cumprod": [[98, null]], "dpnp.cumsum": [[99, null]], "dpnp.cumulative_prod": [[100, null]], "dpnp.cumulative_sum": [[101, null]], "dpnp.deg2rad": [[102, null]], "dpnp.degrees": [[103, null]], "dpnp.delete": [[104, null]], "dpnp.diag": [[105, null]], "dpnp.diag_indices": [[106, null]], "dpnp.diag_indices_from": [[107, null]], "dpnp.diagflat": [[108, null]], "dpnp.diagonal": [[109, null]], "dpnp.diff": [[110, null]], "dpnp.digitize": [[111, null]], "dpnp.divide": [[112, null]], "dpnp.dot": [[113, null]], "dpnp.dpnp_array.dpnp_array": [[114, null]], "dpnp.dpnp_array.dpnp_array.T": [[115, null]], "dpnp.dpnp_array.dpnp_array.all": [[116, null]], "dpnp.dpnp_array.dpnp_array.any": [[117, null]], "dpnp.dpnp_array.dpnp_array.argmax": [[118, null]], "dpnp.dpnp_array.dpnp_array.argmin": [[119, null]], "dpnp.dpnp_array.dpnp_array.argsort": [[120, null]], "dpnp.dpnp_array.dpnp_array.asnumpy": [[121, null]], "dpnp.dpnp_array.dpnp_array.astype": [[122, null]], "dpnp.dpnp_array.dpnp_array.choose": [[123, null]], "dpnp.dpnp_array.dpnp_array.clip": [[124, null]], "dpnp.dpnp_array.dpnp_array.compress": [[125, null]], "dpnp.dpnp_array.dpnp_array.conj": [[126, null]], "dpnp.dpnp_array.dpnp_array.conjugate": [[127, null]], "dpnp.dpnp_array.dpnp_array.copy": [[128, null]], "dpnp.dpnp_array.dpnp_array.cumprod": [[129, null]], "dpnp.dpnp_array.dpnp_array.cumsum": [[130, null]], "dpnp.dpnp_array.dpnp_array.device": [[131, null]], "dpnp.dpnp_array.dpnp_array.diagonal": [[132, null]], "dpnp.dpnp_array.dpnp_array.dot": [[133, null]], "dpnp.dpnp_array.dpnp_array.dtype": [[134, null]], "dpnp.dpnp_array.dpnp_array.fill": [[135, null]], "dpnp.dpnp_array.dpnp_array.flags": [[136, null]], "dpnp.dpnp_array.dpnp_array.flat": [[137, null]], "dpnp.dpnp_array.dpnp_array.flatten": [[138, null]], "dpnp.dpnp_array.dpnp_array.get_array": [[139, null]], "dpnp.dpnp_array.dpnp_array.imag": [[140, null]], "dpnp.dpnp_array.dpnp_array.item": [[141, null]], "dpnp.dpnp_array.dpnp_array.itemsize": [[142, null]], "dpnp.dpnp_array.dpnp_array.mT": [[143, null]], "dpnp.dpnp_array.dpnp_array.max": [[144, null]], "dpnp.dpnp_array.dpnp_array.mean": [[145, null]], "dpnp.dpnp_array.dpnp_array.min": [[146, null]], "dpnp.dpnp_array.dpnp_array.nbytes": [[147, null]], "dpnp.dpnp_array.dpnp_array.ndim": [[148, null]], "dpnp.dpnp_array.dpnp_array.nonzero": [[149, null]], "dpnp.dpnp_array.dpnp_array.partition": [[150, null]], "dpnp.dpnp_array.dpnp_array.prod": [[151, null]], "dpnp.dpnp_array.dpnp_array.put": [[152, null]], "dpnp.dpnp_array.dpnp_array.ravel": [[153, null]], "dpnp.dpnp_array.dpnp_array.real": [[154, null]], "dpnp.dpnp_array.dpnp_array.repeat": [[155, null]], "dpnp.dpnp_array.dpnp_array.reshape": [[156, null]], "dpnp.dpnp_array.dpnp_array.round": [[157, null]], "dpnp.dpnp_array.dpnp_array.searchsorted": [[158, null]], "dpnp.dpnp_array.dpnp_array.shape": [[159, null]], "dpnp.dpnp_array.dpnp_array.size": [[160, null]], "dpnp.dpnp_array.dpnp_array.sort": [[161, null]], "dpnp.dpnp_array.dpnp_array.squeeze": [[162, null]], "dpnp.dpnp_array.dpnp_array.std": [[163, null]], "dpnp.dpnp_array.dpnp_array.strides": [[164, null]], "dpnp.dpnp_array.dpnp_array.sum": [[165, null]], "dpnp.dpnp_array.dpnp_array.swapaxes": [[166, null]], "dpnp.dpnp_array.dpnp_array.sycl_context": [[167, null]], "dpnp.dpnp_array.dpnp_array.sycl_device": [[168, null]], "dpnp.dpnp_array.dpnp_array.sycl_queue": [[169, null]], "dpnp.dpnp_array.dpnp_array.take": [[170, null]], "dpnp.dpnp_array.dpnp_array.to_device": [[171, null]], "dpnp.dpnp_array.dpnp_array.trace": [[172, null]], "dpnp.dpnp_array.dpnp_array.transpose": [[173, null]], "dpnp.dpnp_array.dpnp_array.usm_type": [[174, null]], "dpnp.dpnp_array.dpnp_array.var": [[175, null]], "dpnp.dsplit": [[176, null]], "dpnp.dstack": [[177, null]], "dpnp.dtype": [[178, null]], "dpnp.dtype.alignment": [[179, null]], "dpnp.dtype.base": [[180, null]], "dpnp.dtype.byteorder": [[181, null]], "dpnp.dtype.char": [[182, null]], "dpnp.dtype.descr": [[183, null]], "dpnp.dtype.fields": [[184, null]], "dpnp.dtype.flags": [[185, null]], "dpnp.dtype.hasobject": [[186, null]], "dpnp.dtype.isalignedstruct": [[187, null]], "dpnp.dtype.isbuiltin": [[188, null]], "dpnp.dtype.isnative": [[189, null]], "dpnp.dtype.itemsize": [[190, null]], "dpnp.dtype.kind": [[191, null]], "dpnp.dtype.metadata": [[192, null]], "dpnp.dtype.name": [[193, null]], "dpnp.dtype.names": [[194, null]], "dpnp.dtype.ndim": [[195, null]], "dpnp.dtype.newbyteorder": [[196, null]], "dpnp.dtype.num": [[197, null]], "dpnp.dtype.shape": [[198, null]], "dpnp.dtype.str": [[199, null]], "dpnp.dtype.subdtype": [[200, null]], "dpnp.dtype.type": [[201, null]], "dpnp.ediff1d": [[202, null]], "dpnp.einsum": [[203, null]], "dpnp.einsum_path": [[204, null]], "dpnp.empty": [[205, null]], "dpnp.empty_like": [[206, null]], "dpnp.equal": [[207, null]], "dpnp.erf": [[208, null]], "dpnp.exp": [[209, null]], "dpnp.exp2": [[210, null]], "dpnp.expand_dims": [[211, null]], "dpnp.expm1": [[212, null]], "dpnp.extract": [[213, null]], "dpnp.eye": [[214, null]], "dpnp.fabs": [[215, null]], "dpnp.fft.fft": [[216, null]], "dpnp.fft.fft2": [[217, null]], "dpnp.fft.fftfreq": [[218, null]], "dpnp.fft.fftn": [[219, null]], "dpnp.fft.fftshift": [[220, null]], "dpnp.fft.hfft": [[221, null]], "dpnp.fft.ifft": [[222, null]], "dpnp.fft.ifft2": [[223, null]], "dpnp.fft.ifftn": [[224, null]], "dpnp.fft.ifftshift": [[225, null]], "dpnp.fft.ihfft": [[226, null]], "dpnp.fft.irfft": [[227, null]], "dpnp.fft.irfft2": [[228, null]], "dpnp.fft.irfftn": [[229, null]], "dpnp.fft.rfft": [[230, null]], "dpnp.fft.rfft2": [[231, null]], "dpnp.fft.rfftfreq": [[232, null]], "dpnp.fft.rfftn": [[233, null]], "dpnp.fill_diagonal": [[234, null]], "dpnp.finfo": [[235, null]], "dpnp.fix": [[236, null]], "dpnp.flatiter": [[237, null]], "dpnp.flatnonzero": [[238, null]], "dpnp.flip": [[239, null]], "dpnp.fliplr": [[240, null]], "dpnp.flipud": [[241, null]], "dpnp.float_power": [[242, null]], "dpnp.floor": [[243, null]], "dpnp.floor_divide": [[244, null]], "dpnp.fmax": [[245, null]], "dpnp.fmin": [[246, null]], "dpnp.fmod": [[247, null]], "dpnp.from_dlpack": [[248, null]], "dpnp.frombuffer": [[249, null]], "dpnp.fromfile": [[250, null]], "dpnp.fromfunction": [[251, null]], "dpnp.fromiter": [[252, null]], "dpnp.fromstring": [[253, null]], "dpnp.full": [[254, null]], "dpnp.full_like": [[255, null]], "dpnp.gcd": [[256, null]], "dpnp.geomspace": [[257, null]], "dpnp.get_include": [[258, null]], "dpnp.gradient": [[259, null]], "dpnp.greater": [[260, null]], "dpnp.greater_equal": [[261, null]], "dpnp.heaviside": [[262, null]], "dpnp.histogram": [[263, null]], "dpnp.histogram_bin_edges": [[264, null]], "dpnp.histogramdd": [[265, null]], "dpnp.hsplit": [[266, null]], "dpnp.hstack": [[267, null]], "dpnp.hypot": [[268, null]], "dpnp.i0": [[269, null]], "dpnp.identity": [[270, null]], "dpnp.iinfo": [[271, null]], "dpnp.imag": [[272, null]], "dpnp.indices": [[273, null]], "dpnp.inner": [[274, null]], "dpnp.insert": [[275, null]], "dpnp.invert": [[276, null]], "dpnp.isclose": [[277, null]], "dpnp.iscomplex": [[278, null]], "dpnp.iscomplexobj": [[279, null]], "dpnp.isdtype": [[280, null]], "dpnp.isfinite": [[281, null]], "dpnp.isfortran": [[282, null]], "dpnp.isinf": [[283, null]], "dpnp.isnan": [[284, null]], "dpnp.isneginf": [[285, null]], "dpnp.isposinf": [[286, null]], "dpnp.isreal": [[287, null]], "dpnp.isrealobj": [[288, null]], "dpnp.isscalar": [[289, null]], "dpnp.issubdtype": [[290, null]], "dpnp.iterable": [[291, null]], "dpnp.ix_": [[292, null]], "dpnp.kron": [[293, null]], "dpnp.lcm": [[294, null]], "dpnp.ldexp": [[295, null]], "dpnp.left_shift": [[296, null]], "dpnp.less": [[297, null]], "dpnp.less_equal": [[298, null]], "dpnp.linalg.cholesky": [[299, null]], "dpnp.linalg.cond": [[300, null]], "dpnp.linalg.cross": [[301, null]], "dpnp.linalg.det": [[302, null]], "dpnp.linalg.diagonal": [[303, null]], "dpnp.linalg.eig": [[304, null]], "dpnp.linalg.eigh": [[305, null]], "dpnp.linalg.eigvals": [[306, null]], "dpnp.linalg.eigvalsh": [[307, null]], "dpnp.linalg.inv": [[308, null]], "dpnp.linalg.lstsq": [[309, null]], "dpnp.linalg.matmul": [[310, null]], "dpnp.linalg.matrix_norm": [[311, null]], "dpnp.linalg.matrix_power": [[312, null]], "dpnp.linalg.matrix_rank": [[313, null]], "dpnp.linalg.multi_dot": [[314, null]], "dpnp.linalg.norm": [[315, null]], "dpnp.linalg.outer": [[316, null]], "dpnp.linalg.pinv": [[317, null]], "dpnp.linalg.qr": [[318, null]], "dpnp.linalg.slogdet": [[319, null]], "dpnp.linalg.solve": [[320, null]], "dpnp.linalg.svd": [[321, null]], "dpnp.linalg.svdvals": [[322, null]], "dpnp.linalg.tensordot": [[323, null]], "dpnp.linalg.tensorinv": [[324, null]], "dpnp.linalg.tensorsolve": [[325, null]], "dpnp.linalg.trace": [[326, null]], "dpnp.linalg.vecdot": [[327, null]], "dpnp.linalg.vector_norm": [[328, null]], "dpnp.linspace": [[329, null]], "dpnp.loadtxt": [[330, null]], "dpnp.log": [[331, null]], "dpnp.log10": [[332, null]], "dpnp.log1p": [[333, null]], "dpnp.log2": [[334, null]], "dpnp.logaddexp": [[335, null]], "dpnp.logaddexp2": [[336, null]], "dpnp.logical_and": [[337, null]], "dpnp.logical_not": [[338, null]], "dpnp.logical_or": [[339, null]], "dpnp.logical_xor": [[340, null]], "dpnp.logspace": [[341, null]], "dpnp.logsumexp": [[342, null]], "dpnp.mask_indices": [[343, null]], "dpnp.matmul": [[344, null]], "dpnp.matrix_transpose": [[345, null]], "dpnp.max": [[346, null]], "dpnp.maximum": [[347, null]], "dpnp.mean": [[348, null]], "dpnp.median": [[349, null]], "dpnp.meshgrid": [[350, null]], "dpnp.mgrid": [[351, null]], "dpnp.min": [[352, null]], "dpnp.minimum": [[353, null]], "dpnp.mod": [[354, null]], "dpnp.modf": [[355, null]], "dpnp.moveaxis": [[356, null]], "dpnp.multiply": [[357, null]], "dpnp.nan_to_num": [[358, null]], "dpnp.nanargmax": [[359, null]], "dpnp.nanargmin": [[360, null]], "dpnp.nancumprod": [[361, null]], "dpnp.nancumsum": [[362, null]], "dpnp.nanmax": [[363, null]], "dpnp.nanmean": [[364, null]], "dpnp.nanmedian": [[365, null]], "dpnp.nanmin": [[366, null]], "dpnp.nanprod": [[367, null]], "dpnp.nanstd": [[368, null]], "dpnp.nansum": [[369, null]], "dpnp.nanvar": [[370, null]], "dpnp.ndarray": [[371, null]], "dpnp.ndarray.T": [[372, null]], "dpnp.ndarray.__abs__": [[373, null]], "dpnp.ndarray.__add__": [[374, null]], "dpnp.ndarray.__and__": [[375, null]], "dpnp.ndarray.__array__": [[376, null]], "dpnp.ndarray.__bool__": [[377, null]], "dpnp.ndarray.__complex__": [[378, null]], "dpnp.ndarray.__copy__": [[379, null]], "dpnp.ndarray.__eq__": [[380, null]], "dpnp.ndarray.__float__": [[381, null]], "dpnp.ndarray.__floordiv__": [[382, null]], "dpnp.ndarray.__ge__": [[383, null]], "dpnp.ndarray.__getitem__": [[384, null]], "dpnp.ndarray.__gt__": [[385, null]], "dpnp.ndarray.__iadd__": [[386, null]], "dpnp.ndarray.__iand__": [[387, null]], "dpnp.ndarray.__ifloordiv__": [[388, null]], "dpnp.ndarray.__ilshift__": [[389, null]], "dpnp.ndarray.__imatmul__": [[390, null]], "dpnp.ndarray.__imod__": [[391, null]], "dpnp.ndarray.__imul__": [[392, null]], "dpnp.ndarray.__int__": [[393, null]], "dpnp.ndarray.__invert__": [[394, null]], "dpnp.ndarray.__ior__": [[395, null]], "dpnp.ndarray.__ipow__": [[396, null]], "dpnp.ndarray.__irshift__": [[397, null]], "dpnp.ndarray.__isub__": [[398, null]], "dpnp.ndarray.__itruediv__": [[399, null]], "dpnp.ndarray.__ixor__": [[400, null]], "dpnp.ndarray.__le__": [[401, null]], "dpnp.ndarray.__len__": [[402, null]], "dpnp.ndarray.__lshift__": [[403, null]], "dpnp.ndarray.__lt__": [[404, null]], "dpnp.ndarray.__matmul__": [[405, null]], "dpnp.ndarray.__mod__": [[406, null]], "dpnp.ndarray.__mul__": [[407, null]], "dpnp.ndarray.__ne__": [[408, null]], "dpnp.ndarray.__neg__": [[409, null]], "dpnp.ndarray.__new__": [[410, null]], "dpnp.ndarray.__or__": [[411, null]], "dpnp.ndarray.__pos__": [[412, null]], "dpnp.ndarray.__pow__": [[413, null]], "dpnp.ndarray.__radd__": [[414, null]], "dpnp.ndarray.__rand__": [[415, null]], "dpnp.ndarray.__repr__": [[416, null]], "dpnp.ndarray.__rfloordiv__": [[417, null]], "dpnp.ndarray.__rlshift__": [[418, null]], "dpnp.ndarray.__rmatmul__": [[419, null]], "dpnp.ndarray.__rmod__": [[420, null]], "dpnp.ndarray.__rmul__": [[421, null]], "dpnp.ndarray.__ror__": [[422, null]], "dpnp.ndarray.__rpow__": [[423, null]], "dpnp.ndarray.__rrshift__": [[424, null]], "dpnp.ndarray.__rshift__": [[425, null]], "dpnp.ndarray.__rsub__": [[426, null]], "dpnp.ndarray.__rtruediv__": [[427, null]], "dpnp.ndarray.__rxor__": [[428, null]], "dpnp.ndarray.__setitem__": [[429, null]], "dpnp.ndarray.__str__": [[430, null]], "dpnp.ndarray.__sub__": [[431, null]], "dpnp.ndarray.__truediv__": [[432, null]], "dpnp.ndarray.__xor__": [[433, null]], "dpnp.ndarray.all": [[434, null]], "dpnp.ndarray.any": [[435, null]], "dpnp.ndarray.argmax": [[436, null]], "dpnp.ndarray.argmin": [[437, null]], "dpnp.ndarray.argsort": [[438, null]], "dpnp.ndarray.asnumpy": [[439, null]], "dpnp.ndarray.astype": [[440, null]], "dpnp.ndarray.choose": [[441, null]], "dpnp.ndarray.clip": [[442, null]], "dpnp.ndarray.compress": [[443, null]], "dpnp.ndarray.conj": [[444, null]], "dpnp.ndarray.conjugate": [[445, null]], "dpnp.ndarray.copy": [[446, null]], "dpnp.ndarray.cumprod": [[447, null]], "dpnp.ndarray.cumsum": [[448, null]], "dpnp.ndarray.device": [[449, null]], "dpnp.ndarray.diagonal": [[450, null]], "dpnp.ndarray.dot": [[451, null]], "dpnp.ndarray.dtype": [[452, null]], "dpnp.ndarray.fill": [[453, null]], "dpnp.ndarray.flags": [[454, null]], "dpnp.ndarray.flat": [[455, null]], "dpnp.ndarray.flatten": [[456, null]], "dpnp.ndarray.get_array": [[457, null]], "dpnp.ndarray.imag": [[458, null]], "dpnp.ndarray.item": [[459, null]], "dpnp.ndarray.itemsize": [[460, null]], "dpnp.ndarray.mT": [[461, null]], "dpnp.ndarray.max": [[462, null]], "dpnp.ndarray.mean": [[463, null]], "dpnp.ndarray.min": [[464, null]], "dpnp.ndarray.nbytes": [[465, null]], "dpnp.ndarray.ndim": [[466, null]], "dpnp.ndarray.nonzero": [[467, null]], "dpnp.ndarray.partition": [[468, null]], "dpnp.ndarray.prod": [[469, null]], "dpnp.ndarray.put": [[470, null]], "dpnp.ndarray.ravel": [[471, null]], "dpnp.ndarray.real": [[472, null]], "dpnp.ndarray.repeat": [[473, null]], "dpnp.ndarray.reshape": [[474, null]], "dpnp.ndarray.round": [[475, null]], "dpnp.ndarray.searchsorted": [[476, null]], "dpnp.ndarray.shape": [[477, null]], "dpnp.ndarray.size": [[478, null]], "dpnp.ndarray.sort": [[479, null]], "dpnp.ndarray.squeeze": [[480, null]], "dpnp.ndarray.std": [[481, null]], "dpnp.ndarray.strides": [[482, null]], "dpnp.ndarray.sum": [[483, null]], "dpnp.ndarray.swapaxes": [[484, null]], "dpnp.ndarray.sycl_context": [[485, null]], "dpnp.ndarray.sycl_device": [[486, null]], "dpnp.ndarray.sycl_queue": [[487, null]], "dpnp.ndarray.take": [[488, null]], "dpnp.ndarray.to_device": [[489, null]], "dpnp.ndarray.trace": [[490, null]], "dpnp.ndarray.transpose": [[491, null]], "dpnp.ndarray.usm_type": [[492, null]], "dpnp.ndarray.var": [[493, null]], "dpnp.ndim": [[494, null]], "dpnp.ndindex": [[495, null]], "dpnp.negative": [[496, null]], "dpnp.nextafter": [[497, null]], "dpnp.nonzero": [[498, null]], "dpnp.not_equal": [[499, null]], "dpnp.ogrid": [[500, null]], "dpnp.ones": [[501, null]], "dpnp.ones_like": [[502, null]], "dpnp.outer": [[503, null]], "dpnp.pad": [[504, null]], "dpnp.partition": [[505, null]], "dpnp.permute_dims": [[506, null]], "dpnp.place": [[507, null]], "dpnp.positive": [[508, null]], "dpnp.pow": [[509, null]], "dpnp.power": [[510, null]], "dpnp.prod": [[511, null]], "dpnp.proj": [[512, null]], "dpnp.ptp": [[513, null]], "dpnp.put": [[514, null]], "dpnp.put_along_axis": [[515, null]], "dpnp.putmask": [[516, null]], "dpnp.rad2deg": [[517, null]], "dpnp.radians": [[518, null]], "dpnp.random.RandomState": [[519, null]], "dpnp.random.RandomState.get_state": [[520, null]], "dpnp.random.RandomState.get_sycl_device": [[521, null]], "dpnp.random.RandomState.get_sycl_queue": [[522, null]], "dpnp.random.RandomState.normal": [[523, null]], "dpnp.random.RandomState.rand": [[524, null]], "dpnp.random.RandomState.randint": [[525, null]], "dpnp.random.RandomState.randn": [[526, null]], "dpnp.random.RandomState.random_sample": [[527, null]], "dpnp.random.RandomState.standard_normal": [[528, null]], "dpnp.random.RandomState.uniform": [[529, null]], "dpnp.random.beta": [[530, null]], "dpnp.random.binomial": [[531, null]], "dpnp.random.bytes": [[532, null]], "dpnp.random.chisquare": [[533, null]], "dpnp.random.choice": [[534, null]], "dpnp.random.dirichlet": [[535, null]], "dpnp.random.exponential": [[536, null]], "dpnp.random.f": [[537, null]], "dpnp.random.gamma": [[538, null]], "dpnp.random.geometric": [[539, null]], "dpnp.random.gumbel": [[540, null]], "dpnp.random.hypergeometric": [[541, null]], "dpnp.random.laplace": [[542, null]], "dpnp.random.logistic": [[543, null]], "dpnp.random.lognormal": [[544, null]], "dpnp.random.logseries": [[545, null]], "dpnp.random.multinomial": [[546, null]], "dpnp.random.multivariate_normal": [[547, null]], "dpnp.random.negative_binomial": [[548, null]], "dpnp.random.noncentral_chisquare": [[549, null]], "dpnp.random.noncentral_f": [[550, null]], "dpnp.random.normal": [[551, null]], "dpnp.random.pareto": [[552, null]], "dpnp.random.permutation": [[553, null]], "dpnp.random.poisson": [[554, null]], "dpnp.random.power": [[555, null]], "dpnp.random.rand": [[556, null]], "dpnp.random.randint": [[557, null]], "dpnp.random.randn": [[558, null]], "dpnp.random.random": [[559, null]], "dpnp.random.random_integers": [[560, null]], "dpnp.random.random_sample": [[561, null]], "dpnp.random.ranf": [[562, null]], "dpnp.random.rayleigh": [[563, null]], "dpnp.random.sample": [[564, null]], "dpnp.random.seed": [[565, null]], "dpnp.random.shuffle": [[566, null]], "dpnp.random.standard_cauchy": [[567, null]], "dpnp.random.standard_exponential": [[568, null]], "dpnp.random.standard_gamma": [[569, null]], "dpnp.random.standard_normal": [[570, null]], "dpnp.random.standard_t": [[571, null]], "dpnp.random.triangular": [[572, null]], "dpnp.random.uniform": [[573, null]], "dpnp.random.vonmises": [[574, null]], "dpnp.random.wald": [[575, null]], "dpnp.random.weibull": [[576, null]], "dpnp.random.zipf": [[577, null]], "dpnp.ravel": [[578, null]], "dpnp.ravel_multi_index": [[579, null]], "dpnp.real": [[580, null]], "dpnp.real_if_close": [[581, null]], "dpnp.reciprocal": [[582, null]], "dpnp.reduce_hypot": [[583, null]], "dpnp.remainder": [[584, null]], "dpnp.repeat": [[585, null]], "dpnp.require": [[586, null]], "dpnp.reshape": [[587, null]], "dpnp.resize": [[588, null]], "dpnp.result_type": [[589, null]], "dpnp.right_shift": [[590, null]], "dpnp.rint": [[591, null]], "dpnp.roll": [[592, null]], "dpnp.rollaxis": [[593, null]], "dpnp.rot90": [[594, null]], "dpnp.round": [[595, null]], "dpnp.row_stack": [[596, null]], "dpnp.rsqrt": [[597, null]], "dpnp.searchsorted": [[598, null]], "dpnp.select": [[599, null]], "dpnp.shape": [[600, null]], "dpnp.sign": [[601, null]], "dpnp.signbit": [[602, null]], "dpnp.sin": [[603, null]], "dpnp.sinc": [[604, null]], "dpnp.sinh": [[605, null]], "dpnp.size": [[606, null]], "dpnp.sort": [[607, null]], "dpnp.sort_complex": [[608, null]], "dpnp.spacing": [[609, null]], "dpnp.split": [[610, null]], "dpnp.sqrt": [[611, null]], "dpnp.square": [[612, null]], "dpnp.squeeze": [[613, null]], "dpnp.stack": [[614, null]], "dpnp.std": [[615, null]], "dpnp.subtract": [[616, null]], "dpnp.sum": [[617, null]], "dpnp.swapaxes": [[618, null]], "dpnp.take": [[619, null]], "dpnp.take_along_axis": [[620, null]], "dpnp.tan": [[621, null]], "dpnp.tanh": [[622, null]], "dpnp.tensordot": [[623, null]], "dpnp.tile": [[624, null]], "dpnp.trace": [[625, null]], "dpnp.transpose": [[626, null]], "dpnp.trapezoid": [[627, null]], "dpnp.tri": [[628, null]], "dpnp.tril": [[629, null]], "dpnp.tril_indices": [[630, null]], "dpnp.tril_indices_from": [[631, null]], "dpnp.trim_zeros": [[632, null]], "dpnp.triu": [[633, null]], "dpnp.triu_indices": [[634, null]], "dpnp.triu_indices_from": [[635, null]], "dpnp.true_divide": [[636, null]], "dpnp.trunc": [[637, null]], "dpnp.unique": [[638, null]], "dpnp.unravel_index": [[639, null]], "dpnp.unstack": [[640, null]], "dpnp.unwrap": [[641, null]], "dpnp.vander": [[642, null]], "dpnp.var": [[643, null]], "dpnp.vdot": [[644, null]], "dpnp.vecdot": [[645, null]], "dpnp.vsplit": [[646, null]], "dpnp.vstack": [[647, null]], "dpnp.where": [[648, null]], "dpnp.zeros": [[649, null]], "dpnp.zeros_like": [[650, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/array_api", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.__array_namespace_info__", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.apply_over_axes", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.compress", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.cumulative_prod", "reference/generated/dpnp.cumulative_sum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dpnp_array.dpnp_array.T", "reference/generated/dpnp.dpnp_array.dpnp_array.all", "reference/generated/dpnp.dpnp_array.dpnp_array.any", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy", "reference/generated/dpnp.dpnp_array.dpnp_array.astype", "reference/generated/dpnp.dpnp_array.dpnp_array.choose", "reference/generated/dpnp.dpnp_array.dpnp_array.clip", "reference/generated/dpnp.dpnp_array.dpnp_array.compress", "reference/generated/dpnp.dpnp_array.dpnp_array.conj", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate", "reference/generated/dpnp.dpnp_array.dpnp_array.copy", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum", "reference/generated/dpnp.dpnp_array.dpnp_array.device", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal", "reference/generated/dpnp.dpnp_array.dpnp_array.dot", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype", "reference/generated/dpnp.dpnp_array.dpnp_array.fill", "reference/generated/dpnp.dpnp_array.dpnp_array.flags", "reference/generated/dpnp.dpnp_array.dpnp_array.flat", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array", "reference/generated/dpnp.dpnp_array.dpnp_array.imag", "reference/generated/dpnp.dpnp_array.dpnp_array.item", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize", "reference/generated/dpnp.dpnp_array.dpnp_array.mT", "reference/generated/dpnp.dpnp_array.dpnp_array.max", "reference/generated/dpnp.dpnp_array.dpnp_array.mean", "reference/generated/dpnp.dpnp_array.dpnp_array.min", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero", "reference/generated/dpnp.dpnp_array.dpnp_array.partition", "reference/generated/dpnp.dpnp_array.dpnp_array.prod", "reference/generated/dpnp.dpnp_array.dpnp_array.put", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel", "reference/generated/dpnp.dpnp_array.dpnp_array.real", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape", "reference/generated/dpnp.dpnp_array.dpnp_array.round", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted", "reference/generated/dpnp.dpnp_array.dpnp_array.shape", "reference/generated/dpnp.dpnp_array.dpnp_array.size", "reference/generated/dpnp.dpnp_array.dpnp_array.sort", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze", "reference/generated/dpnp.dpnp_array.dpnp_array.std", "reference/generated/dpnp.dpnp_array.dpnp_array.strides", "reference/generated/dpnp.dpnp_array.dpnp_array.sum", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue", "reference/generated/dpnp.dpnp_array.dpnp_array.take", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device", "reference/generated/dpnp.dpnp_array.dpnp_array.trace", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type", "reference/generated/dpnp.dpnp_array.dpnp_array.var", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.dtype.alignment", "reference/generated/dpnp.dtype.base", "reference/generated/dpnp.dtype.byteorder", "reference/generated/dpnp.dtype.char", "reference/generated/dpnp.dtype.descr", "reference/generated/dpnp.dtype.fields", "reference/generated/dpnp.dtype.flags", "reference/generated/dpnp.dtype.hasobject", "reference/generated/dpnp.dtype.isalignedstruct", "reference/generated/dpnp.dtype.isbuiltin", "reference/generated/dpnp.dtype.isnative", "reference/generated/dpnp.dtype.itemsize", "reference/generated/dpnp.dtype.kind", "reference/generated/dpnp.dtype.metadata", "reference/generated/dpnp.dtype.name", "reference/generated/dpnp.dtype.names", "reference/generated/dpnp.dtype.ndim", "reference/generated/dpnp.dtype.newbyteorder", "reference/generated/dpnp.dtype.num", "reference/generated/dpnp.dtype.shape", "reference/generated/dpnp.dtype.str", "reference/generated/dpnp.dtype.subdtype", "reference/generated/dpnp.dtype.type", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.histogramdd", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.i0", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isdtype", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.iterable", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmedian", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__array__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.asnumpy", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.compress", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.device", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dot", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.get_array", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.sycl_context", "reference/generated/dpnp.ndarray.sycl_device", "reference/generated/dpnp.ndarray.sycl_queue", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.to_device", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.usm_type", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.ndindex", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.RandomState.get_state", "reference/generated/dpnp.random.RandomState.get_sycl_device", "reference/generated/dpnp.random.RandomState.get_sycl_queue", "reference/generated/dpnp.random.RandomState.normal", "reference/generated/dpnp.random.RandomState.rand", "reference/generated/dpnp.random.RandomState.randint", "reference/generated/dpnp.random.RandomState.randn", "reference/generated/dpnp.random.RandomState.random_sample", "reference/generated/dpnp.random.RandomState.standard_normal", "reference/generated/dpnp.random.RandomState.uniform", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/array_api.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.__array_namespace_info__.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.apply_over_axes.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.compress.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.cumulative_prod.rst", "reference/generated/dpnp.cumulative_sum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.T.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.all.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.any.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.astype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.choose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.clip.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.compress.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conj.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.copy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.fill.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flags.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.imag.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.item.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mT.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.max.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mean.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.min.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.partition.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.prod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.put.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.real.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.round.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.shape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.size.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.std.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.strides.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.take.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.trace.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.var.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.dtype.alignment.rst", "reference/generated/dpnp.dtype.base.rst", "reference/generated/dpnp.dtype.byteorder.rst", "reference/generated/dpnp.dtype.char.rst", "reference/generated/dpnp.dtype.descr.rst", "reference/generated/dpnp.dtype.fields.rst", "reference/generated/dpnp.dtype.flags.rst", "reference/generated/dpnp.dtype.hasobject.rst", "reference/generated/dpnp.dtype.isalignedstruct.rst", "reference/generated/dpnp.dtype.isbuiltin.rst", "reference/generated/dpnp.dtype.isnative.rst", "reference/generated/dpnp.dtype.itemsize.rst", "reference/generated/dpnp.dtype.kind.rst", "reference/generated/dpnp.dtype.metadata.rst", "reference/generated/dpnp.dtype.name.rst", "reference/generated/dpnp.dtype.names.rst", "reference/generated/dpnp.dtype.ndim.rst", "reference/generated/dpnp.dtype.newbyteorder.rst", "reference/generated/dpnp.dtype.num.rst", "reference/generated/dpnp.dtype.shape.rst", "reference/generated/dpnp.dtype.str.rst", "reference/generated/dpnp.dtype.subdtype.rst", "reference/generated/dpnp.dtype.type.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.histogramdd.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.i0.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isdtype.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.iterable.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmedian.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__array__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.asnumpy.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.compress.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.device.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dot.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.get_array.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.sycl_context.rst", "reference/generated/dpnp.ndarray.sycl_device.rst", "reference/generated/dpnp.ndarray.sycl_queue.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.to_device.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.usm_type.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.ndindex.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.RandomState.get_state.rst", "reference/generated/dpnp.random.RandomState.get_sycl_device.rst", "reference/generated/dpnp.random.RandomState.get_sycl_queue.rst", "reference/generated/dpnp.random.RandomState.normal.rst", "reference/generated/dpnp.random.RandomState.rand.rst", "reference/generated/dpnp.random.RandomState.randint.rst", "reference/generated/dpnp.random.RandomState.randn.rst", "reference/generated/dpnp.random.RandomState.random_sample.rst", "reference/generated/dpnp.random.RandomState.standard_normal.rst", "reference/generated/dpnp.random.RandomState.uniform.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[373, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[374, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[375, "dpnp.ndarray.__and__", false]], "__array__() (dpnp.ndarray method)": [[376, "dpnp.ndarray.__array__", false]], "__array_namespace_info__() (in module dpnp)": [[13, "dpnp.__array_namespace_info__", false]], "__bool__() (dpnp.ndarray method)": [[377, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[378, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[379, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.ndarray method)": [[380, "dpnp.ndarray.__eq__", false]], "__float__() (dpnp.ndarray method)": [[381, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[382, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.ndarray method)": [[383, "dpnp.ndarray.__ge__", false]], "__getitem__() (dpnp.ndarray method)": [[384, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.ndarray method)": [[385, "dpnp.ndarray.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[386, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[387, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[388, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[389, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[390, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[391, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[392, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[393, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[394, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[395, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[396, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[397, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[398, "dpnp.ndarray.__isub__", false]], "__itruediv__() (dpnp.ndarray method)": [[399, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[400, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.ndarray method)": [[401, "dpnp.ndarray.__le__", false]], "__len__() (dpnp.ndarray method)": [[402, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[403, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.ndarray method)": [[404, "dpnp.ndarray.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[405, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[406, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[407, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.ndarray method)": [[408, "dpnp.ndarray.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[409, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[410, "dpnp.ndarray.__new__", false]], "__or__() (dpnp.ndarray method)": [[411, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[412, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[413, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[414, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[415, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[416, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[417, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[418, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[419, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[420, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[421, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[422, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[423, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[424, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[425, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[426, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[427, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[428, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.ndarray method)": [[429, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[430, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[431, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[432, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[433, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[14, "dpnp.abs", false]], "absolute() (in module dpnp)": [[15, "dpnp.absolute", false]], "acos() (in module dpnp)": [[16, "dpnp.acos", false]], "acosh() (in module dpnp)": [[17, "dpnp.acosh", false]], "add() (in module dpnp)": [[18, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[179, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[116, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[434, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[19, "dpnp.all", false]], "allclose() (in module dpnp)": [[20, "dpnp.allclose", false]], "amax() (in module dpnp)": [[21, "dpnp.amax", false]], "amin() (in module dpnp)": [[22, "dpnp.amin", false]], "angle() (in module dpnp)": [[23, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[117, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[435, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[24, "dpnp.any", false]], "append() (in module dpnp)": [[25, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[26, "dpnp.apply_along_axis", false]], "apply_over_axes() (in module dpnp)": [[27, "dpnp.apply_over_axes", false]], "arange() (in module dpnp)": [[28, "dpnp.arange", false]], "arccos() (in module dpnp)": [[29, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[30, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[31, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[32, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[33, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[34, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[35, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[118, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[436, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[36, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[119, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[437, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[37, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[120, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[438, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[38, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[39, "dpnp.argwhere", false]], "around() (in module dpnp)": [[40, "dpnp.around", false]], "array() (in module dpnp)": [[41, "dpnp.array", false]], "array_equal() (in module dpnp)": [[42, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[43, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[44, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[45, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[46, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[47, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[48, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[49, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[50, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[51, "dpnp.asin", false]], "asinh() (in module dpnp)": [[52, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[121, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (dpnp.ndarray method)": [[439, "dpnp.ndarray.asnumpy", false]], "asnumpy() (in module dpnp)": [[53, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[122, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[440, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[54, "dpnp.astype", false]], "atan() (in module dpnp)": [[55, "dpnp.atan", false]], "atan2() (in module dpnp)": [[56, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[57, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[58, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[59, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[60, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[61, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[180, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[530, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[62, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[63, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[531, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[64, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[65, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[66, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[67, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[68, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[69, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[70, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[71, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[72, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[73, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[74, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[181, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[532, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[75, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[76, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[77, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[182, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[533, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[534, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[299, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[123, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[441, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[78, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[124, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[442, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[79, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[80, "dpnp.column_stack", false]], "compress() (dpnp.dpnp_array.dpnp_array method)": [[125, "dpnp.dpnp_array.dpnp_array.compress", false]], "compress() (dpnp.ndarray method)": [[443, "dpnp.ndarray.compress", false]], "compress() (in module dpnp)": [[81, "dpnp.compress", false]], "concat() (in module dpnp)": [[82, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[83, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[300, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[126, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[444, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[84, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[127, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[445, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[85, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[86, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[128, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[446, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[87, "dpnp.copy", false]], "copysign() (in module dpnp)": [[88, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[89, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[90, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[91, "dpnp.correlate", false]], "cos() (in module dpnp)": [[92, "dpnp.cos", false]], "cosh() (in module dpnp)": [[93, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[94, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[95, "dpnp.cov", false]], "cross() (in module dpnp)": [[96, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[301, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[97, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[129, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[447, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[98, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[130, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[448, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[99, "dpnp.cumsum", false]], "cumulative_prod() (in module dpnp)": [[100, "dpnp.cumulative_prod", false]], "cumulative_sum() (in module dpnp)": [[101, "dpnp.cumulative_sum", false]], "deg2rad() (in module dpnp)": [[102, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[103, "dpnp.degrees", false]], "delete() (in module dpnp)": [[104, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[183, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[302, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array property)": [[131, "dpnp.dpnp_array.dpnp_array.device", false]], "device (dpnp.ndarray property)": [[449, "dpnp.ndarray.device", false]], "diag() (in module dpnp)": [[105, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[106, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[107, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[108, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[132, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[450, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[109, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[303, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[110, "dpnp.diff", false]], "digitize() (in module dpnp)": [[111, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[535, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[112, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[133, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (dpnp.ndarray method)": [[451, "dpnp.ndarray.dot", false]], "dot() (in module dpnp)": [[113, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[11, "module-dpnp.fft", false]], "dpnp.linalg": [[653, "module-dpnp.linalg", false]], "dpnp_array (class in dpnp.dpnp_array)": [[114, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[176, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[177, "dpnp.dstack", false]], "dtype (class in dpnp)": [[178, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array property)": [[134, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[452, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[202, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[304, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[305, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[306, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[307, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[203, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[204, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[205, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[206, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[207, "dpnp.equal", false]], "erf() (in module dpnp)": [[208, "dpnp.erf", false]], "exp() (in module dpnp)": [[209, "dpnp.exp", false]], "exp2() (in module dpnp)": [[210, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[211, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[212, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[536, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[213, "dpnp.extract", false]], "eye() (in module dpnp)": [[214, "dpnp.eye", false]], "f() (in module dpnp.random)": [[537, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[215, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[216, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[217, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[218, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[219, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[220, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[184, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[135, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[453, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[234, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[235, "dpnp.finfo", false]], "fix() (in module dpnp)": [[236, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array property)": [[136, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[185, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[454, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array property)": [[137, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[455, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[237, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[238, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[138, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[456, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[239, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[240, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[241, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[242, "dpnp.float_power", false]], "floor() (in module dpnp)": [[243, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[244, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[245, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[246, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[247, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[248, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[249, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[250, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[251, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[252, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[253, "dpnp.fromstring", false]], "full() (in module dpnp)": [[254, "dpnp.full", false]], "full_like() (in module dpnp)": [[255, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[538, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[256, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[539, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[257, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[139, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_array() (dpnp.ndarray method)": [[457, "dpnp.ndarray.get_array", false]], "get_include() (in module dpnp)": [[258, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[520, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[521, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[522, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[259, "dpnp.gradient", false]], "greater() (in module dpnp)": [[260, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[261, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[540, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[186, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[262, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[221, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[263, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[264, "dpnp.histogram_bin_edges", false]], "histogramdd() (in module dpnp)": [[265, "dpnp.histogramdd", false]], "hsplit() (in module dpnp)": [[266, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[267, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[541, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[268, "dpnp.hypot", false]], "i0() (in module dpnp)": [[269, "dpnp.i0", false]], "identity() (in module dpnp)": [[270, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[222, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[223, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[224, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[225, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[226, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[271, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array property)": [[140, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[458, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[272, "dpnp.imag", false]], "indices() (in module dpnp)": [[273, "dpnp.indices", false]], "inner() (in module dpnp)": [[274, "dpnp.inner", false]], "insert() (in module dpnp)": [[275, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[308, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[276, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[227, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[228, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[229, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[187, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[188, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[277, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[278, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[279, "dpnp.iscomplexobj", false]], "isdtype() (in module dpnp)": [[280, "dpnp.isdtype", false]], "isfinite() (in module dpnp)": [[281, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[282, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[283, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[284, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[189, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[285, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[286, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[287, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[288, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[289, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[290, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[141, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[459, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array property)": [[142, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[190, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[460, "dpnp.ndarray.itemsize", false]], "iterable() (in module dpnp)": [[291, "dpnp.iterable", false]], "ix_() (in module dpnp)": [[292, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[191, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[293, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[542, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[294, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[295, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[296, "dpnp.left_shift", false]], "less() (in module dpnp)": [[297, "dpnp.less", false]], "less_equal() (in module dpnp)": [[298, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[329, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[330, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[331, "dpnp.log", false]], "log10() (in module dpnp)": [[332, "dpnp.log10", false]], "log1p() (in module dpnp)": [[333, "dpnp.log1p", false]], "log2() (in module dpnp)": [[334, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[335, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[336, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[337, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[338, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[339, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[340, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[543, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[544, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[545, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[341, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[342, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[309, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[343, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[344, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[310, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[311, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[312, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[313, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[345, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[144, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[462, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[346, "dpnp.max", false]], "maximum() (in module dpnp)": [[347, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[145, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[463, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[348, "dpnp.mean", false]], "median() (in module dpnp)": [[349, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[350, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[192, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[351, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[146, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[464, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[352, "dpnp.min", false]], "minimum() (in module dpnp)": [[353, "dpnp.minimum", false]], "mod() (in module dpnp)": [[354, "dpnp.mod", false]], "modf() (in module dpnp)": [[355, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [11, "module-dpnp.fft", false], [653, "module-dpnp.linalg", false]], "moveaxis() (in module dpnp)": [[356, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array property)": [[143, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[461, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[314, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[546, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[357, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[547, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[193, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[194, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[358, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[359, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[360, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[361, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[362, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[363, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[364, "dpnp.nanmean", false]], "nanmedian() (in module dpnp)": [[365, "dpnp.nanmedian", false]], "nanmin() (in module dpnp)": [[366, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[367, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[368, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[369, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[370, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array property)": [[147, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[465, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[371, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array property)": [[148, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[195, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[466, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[494, "dpnp.ndim", false]], "ndindex (class in dpnp)": [[495, "dpnp.ndindex", false]], "negative() (in module dpnp)": [[496, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[548, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[196, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[497, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[549, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[550, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[149, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[467, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[498, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[315, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[523, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[551, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[499, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[197, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[500, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[501, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[502, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[503, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[316, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[504, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[552, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[150, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[468, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[505, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[553, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[506, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[317, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[507, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[554, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[508, "dpnp.positive", false]], "pow() (in module dpnp)": [[509, "dpnp.pow", false]], "power() (in module dpnp)": [[510, "dpnp.power", false]], "power() (in module dpnp.random)": [[555, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[151, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[469, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[511, "dpnp.prod", false]], "proj() (in module dpnp)": [[512, "dpnp.proj", false]], "ptp() (in module dpnp)": [[513, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[152, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[470, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[514, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[515, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[516, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[318, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[517, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[518, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[524, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[556, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[525, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[557, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[526, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[558, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[559, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[560, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[527, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[561, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[519, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[562, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[153, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[471, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[578, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[579, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[563, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array property)": [[154, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[472, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[580, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[581, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[582, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[583, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[584, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[155, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[473, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[585, "dpnp.repeat", false]], "require() (in module dpnp)": [[586, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[156, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[474, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[587, "dpnp.reshape", false]], "resize() (in module dpnp)": [[588, "dpnp.resize", false]], "result_type() (in module dpnp)": [[589, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[230, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[231, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[232, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[233, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[590, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[591, "dpnp.rint", false]], "roll() (in module dpnp)": [[592, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[593, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[594, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[157, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[475, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[595, "dpnp.round", false]], "row_stack() (in module dpnp)": [[596, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[597, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[564, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[158, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[476, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[598, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[565, "dpnp.random.seed", false]], "select() (in module dpnp)": [[599, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array property)": [[159, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[198, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[477, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[600, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[566, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[601, "dpnp.sign", false]], "signbit() (in module dpnp)": [[602, "dpnp.signbit", false]], "sin() (in module dpnp)": [[603, "dpnp.sin", false]], "sinc() (in module dpnp)": [[604, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[605, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array property)": [[160, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[478, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[606, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[319, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[320, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[161, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[479, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[607, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[608, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[609, "dpnp.spacing", false]], "split() (in module dpnp)": [[610, "dpnp.split", false]], "sqrt() (in module dpnp)": [[611, "dpnp.sqrt", false]], "square() (in module dpnp)": [[612, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[162, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[480, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[613, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[614, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[567, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[568, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[569, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[528, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[570, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[571, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[163, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[481, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[615, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[199, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array property)": [[164, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[482, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[200, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[616, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[165, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[483, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[617, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[321, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[322, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[166, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[484, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[618, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array property)": [[167, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_context (dpnp.ndarray property)": [[485, "dpnp.ndarray.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array property)": [[168, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_device (dpnp.ndarray property)": [[486, "dpnp.ndarray.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array property)": [[169, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "sycl_queue (dpnp.ndarray property)": [[487, "dpnp.ndarray.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array property)": [[115, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[372, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[170, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[488, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[619, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[620, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[621, "dpnp.tan", false]], "tanh() (in module dpnp)": [[622, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[623, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[323, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[324, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[325, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[624, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[171, "dpnp.dpnp_array.dpnp_array.to_device", false]], "to_device() (dpnp.ndarray method)": [[489, "dpnp.ndarray.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[172, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[490, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[625, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[326, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[173, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[491, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[626, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[627, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[628, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[572, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[629, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[630, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[631, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[632, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[633, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[634, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[635, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[636, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[637, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[201, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[529, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[573, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[638, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[639, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[640, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[641, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array property)": [[174, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "usm_type (dpnp.ndarray property)": [[492, "dpnp.ndarray.usm_type", false]], "vander() (in module dpnp)": [[642, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[175, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[493, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[643, "dpnp.var", false]], "vdot() (in module dpnp)": [[644, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[645, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[327, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[328, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[574, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[646, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[647, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[575, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[576, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[648, "dpnp.where", false]], "zeros() (in module dpnp)": [[649, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[650, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[577, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[13, 1, 1, "", "__array_namespace_info__"], [14, 1, 1, "", "abs"], [15, 1, 1, "", "absolute"], [16, 1, 1, "", "acos"], [17, 1, 1, "", "acosh"], [18, 1, 1, "", "add"], [19, 1, 1, "", "all"], [20, 1, 1, "", "allclose"], [21, 1, 1, "", "amax"], [22, 1, 1, "", "amin"], [23, 1, 1, "", "angle"], [24, 1, 1, "", "any"], [25, 1, 1, "", "append"], [26, 1, 1, "", "apply_along_axis"], [27, 1, 1, "", "apply_over_axes"], [28, 1, 1, "", "arange"], [29, 1, 1, "", "arccos"], [30, 1, 1, "", "arccosh"], [31, 1, 1, "", "arcsin"], [32, 1, 1, "", "arcsinh"], [33, 1, 1, "", "arctan"], [34, 1, 1, "", "arctan2"], [35, 1, 1, "", "arctanh"], [36, 1, 1, "", "argmax"], [37, 1, 1, "", "argmin"], [38, 1, 1, "", "argsort"], [39, 1, 1, "", "argwhere"], [40, 1, 1, "", "around"], [41, 1, 1, "", "array"], [42, 1, 1, "", "array_equal"], [43, 1, 1, "", "array_equiv"], [44, 1, 1, "", "array_split"], [45, 1, 1, "", "asanyarray"], [46, 1, 1, "", "asarray"], [47, 1, 1, "", "asarray_chkfinite"], [48, 1, 1, "", "ascontiguousarray"], [49, 1, 1, "", "asfarray"], [50, 1, 1, "", "asfortranarray"], [51, 1, 1, "", "asin"], [52, 1, 1, "", "asinh"], [53, 1, 1, "", "asnumpy"], [54, 1, 1, "", "astype"], [55, 1, 1, "", "atan"], [56, 1, 1, "", "atan2"], [57, 1, 1, "", "atanh"], [58, 1, 1, "", "atleast_1d"], [59, 1, 1, "", "atleast_2d"], [60, 1, 1, "", "atleast_3d"], [61, 1, 1, "", "average"], [62, 1, 1, "", "binary_repr"], [63, 1, 1, "", "bincount"], [64, 1, 1, "", "bitwise_and"], [65, 1, 1, "", "bitwise_invert"], [66, 1, 1, "", "bitwise_left_shift"], [67, 1, 1, "", "bitwise_not"], [68, 1, 1, "", "bitwise_or"], [69, 1, 1, "", "bitwise_right_shift"], [70, 1, 1, "", "bitwise_xor"], [71, 1, 1, "", "broadcast_arrays"], [72, 1, 1, "", "broadcast_shapes"], [73, 1, 1, "", "broadcast_to"], [74, 1, 1, "", "byte_bounds"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "cbrt"], [77, 1, 1, "", "ceil"], [78, 1, 1, "", "choose"], [79, 1, 1, "", "clip"], [80, 1, 1, "", "column_stack"], [81, 1, 1, "", "compress"], [82, 1, 1, "", "concat"], [83, 1, 1, "", "concatenate"], [84, 1, 1, "", "conj"], [85, 1, 1, "", "conjugate"], [86, 1, 1, "", "convolve"], [87, 1, 1, "", "copy"], [88, 1, 1, "", "copysign"], [89, 1, 1, "", "copyto"], [90, 1, 1, "", "corrcoef"], [91, 1, 1, "", "correlate"], [92, 1, 1, "", "cos"], [93, 1, 1, "", "cosh"], [94, 1, 1, "", "count_nonzero"], [95, 1, 1, "", "cov"], [96, 1, 1, "", "cross"], [97, 1, 1, "", "cumlogsumexp"], [98, 1, 1, "", "cumprod"], [99, 1, 1, "", "cumsum"], [100, 1, 1, "", "cumulative_prod"], [101, 1, 1, "", "cumulative_sum"], [102, 1, 1, "", "deg2rad"], [103, 1, 1, "", "degrees"], [104, 1, 1, "", "delete"], [105, 1, 1, "", "diag"], [106, 1, 1, "", "diag_indices"], [107, 1, 1, "", "diag_indices_from"], [108, 1, 1, "", "diagflat"], [109, 1, 1, "", "diagonal"], [110, 1, 1, "", "diff"], [111, 1, 1, "", "digitize"], [112, 1, 1, "", "divide"], [113, 1, 1, "", "dot"], [176, 1, 1, "", "dsplit"], [177, 1, 1, "", "dstack"], [178, 2, 1, "", "dtype"], [202, 1, 1, "", "ediff1d"], [203, 1, 1, "", "einsum"], [204, 1, 1, "", "einsum_path"], [205, 1, 1, "", "empty"], [206, 1, 1, "", "empty_like"], [207, 1, 1, "", "equal"], [208, 1, 1, "", "erf"], [209, 1, 1, "", "exp"], [210, 1, 1, "", "exp2"], [211, 1, 1, "", "expand_dims"], [212, 1, 1, "", "expm1"], [213, 1, 1, "", "extract"], [214, 1, 1, "", "eye"], [215, 1, 1, "", "fabs"], [11, 0, 0, "-", "fft"], [234, 1, 1, "", "fill_diagonal"], [235, 1, 1, "", "finfo"], [236, 1, 1, "", "fix"], [237, 2, 1, "", "flatiter"], [238, 1, 1, "", "flatnonzero"], [239, 1, 1, "", "flip"], [240, 1, 1, "", "fliplr"], [241, 1, 1, "", "flipud"], [242, 1, 1, "", "float_power"], [243, 1, 1, "", "floor"], [244, 1, 1, "", "floor_divide"], [245, 1, 1, "", "fmax"], [246, 1, 1, "", "fmin"], [247, 1, 1, "", "fmod"], [248, 1, 1, "", "from_dlpack"], [249, 1, 1, "", "frombuffer"], [250, 1, 1, "", "fromfile"], [251, 1, 1, "", "fromfunction"], [252, 1, 1, "", "fromiter"], [253, 1, 1, "", "fromstring"], [254, 1, 1, "", "full"], [255, 1, 1, "", "full_like"], [256, 1, 1, "", "gcd"], [257, 1, 1, "", "geomspace"], [258, 1, 1, "", "get_include"], [259, 1, 1, "", "gradient"], [260, 1, 1, "", "greater"], [261, 1, 1, "", "greater_equal"], [262, 1, 1, "", "heaviside"], [263, 1, 1, "", "histogram"], [264, 1, 1, "", "histogram_bin_edges"], [265, 1, 1, "", "histogramdd"], [266, 1, 1, "", "hsplit"], [267, 1, 1, "", "hstack"], [268, 1, 1, "", "hypot"], [269, 1, 1, "", "i0"], [270, 1, 1, "", "identity"], [271, 1, 1, "", "iinfo"], [272, 1, 1, "", "imag"], [273, 1, 1, "", "indices"], [274, 1, 1, "", "inner"], [275, 1, 1, "", "insert"], [276, 1, 1, "", "invert"], [277, 1, 1, "", "isclose"], [278, 1, 1, "", "iscomplex"], [279, 1, 1, "", "iscomplexobj"], [280, 1, 1, "", "isdtype"], [281, 1, 1, "", "isfinite"], [282, 1, 1, "", "isfortran"], [283, 1, 1, "", "isinf"], [284, 1, 1, "", "isnan"], [285, 1, 1, "", "isneginf"], [286, 1, 1, "", "isposinf"], [287, 1, 1, "", "isreal"], [288, 1, 1, "", "isrealobj"], [289, 1, 1, "", "isscalar"], [290, 1, 1, "", "issubdtype"], [291, 1, 1, "", "iterable"], [292, 1, 1, "", "ix_"], [293, 1, 1, "", "kron"], [294, 1, 1, "", "lcm"], [295, 1, 1, "", "ldexp"], [296, 1, 1, "", "left_shift"], [297, 1, 1, "", "less"], [298, 1, 1, "", "less_equal"], [653, 0, 0, "-", "linalg"], [329, 1, 1, "", "linspace"], [330, 1, 1, "", "loadtxt"], [331, 1, 1, "", "log"], [332, 1, 1, "", "log10"], [333, 1, 1, "", "log1p"], [334, 1, 1, "", "log2"], [335, 1, 1, "", "logaddexp"], [336, 1, 1, "", "logaddexp2"], [337, 1, 1, "", "logical_and"], [338, 1, 1, "", "logical_not"], [339, 1, 1, "", "logical_or"], [340, 1, 1, "", "logical_xor"], [341, 1, 1, "", "logspace"], [342, 1, 1, "", "logsumexp"], [343, 1, 1, "", "mask_indices"], [344, 1, 1, "", "matmul"], [345, 1, 1, "", "matrix_transpose"], [346, 1, 1, "", "max"], [347, 1, 1, "", "maximum"], [348, 1, 1, "", "mean"], [349, 1, 1, "", "median"], [350, 1, 1, "", "meshgrid"], [351, 6, 1, "", "mgrid"], [352, 1, 1, "", "min"], [353, 1, 1, "", "minimum"], [354, 1, 1, "", "mod"], [355, 1, 1, "", "modf"], [356, 1, 1, "", "moveaxis"], [357, 1, 1, "", "multiply"], [358, 1, 1, "", "nan_to_num"], [359, 1, 1, "", "nanargmax"], [360, 1, 1, "", "nanargmin"], [361, 1, 1, "", "nancumprod"], [362, 1, 1, "", "nancumsum"], [363, 1, 1, "", "nanmax"], [364, 1, 1, "", "nanmean"], [365, 1, 1, "", "nanmedian"], [366, 1, 1, "", "nanmin"], [367, 1, 1, "", "nanprod"], [368, 1, 1, "", "nanstd"], [369, 1, 1, "", "nansum"], [370, 1, 1, "", "nanvar"], [371, 5, 1, "", "ndarray"], [494, 1, 1, "", "ndim"], [495, 2, 1, "", "ndindex"], [496, 1, 1, "", "negative"], [497, 1, 1, "", "nextafter"], [498, 1, 1, "", "nonzero"], [499, 1, 1, "", "not_equal"], [500, 6, 1, "", "ogrid"], [501, 1, 1, "", "ones"], [502, 1, 1, "", "ones_like"], [503, 1, 1, "", "outer"], [504, 1, 1, "", "pad"], [505, 1, 1, "", "partition"], [506, 1, 1, "", "permute_dims"], [507, 1, 1, "", "place"], [508, 1, 1, "", "positive"], [509, 1, 1, "", "pow"], [510, 1, 1, "", "power"], [511, 1, 1, "", "prod"], [512, 1, 1, "", "proj"], [513, 1, 1, "", "ptp"], [514, 1, 1, "", "put"], [515, 1, 1, "", "put_along_axis"], [516, 1, 1, "", "putmask"], [517, 1, 1, "", "rad2deg"], [518, 1, 1, "", "radians"], [578, 1, 1, "", "ravel"], [579, 1, 1, "", "ravel_multi_index"], [580, 1, 1, "", "real"], [581, 1, 1, "", "real_if_close"], [582, 1, 1, "", "reciprocal"], [583, 1, 1, "", "reduce_hypot"], [584, 1, 1, "", "remainder"], [585, 1, 1, "", "repeat"], [586, 1, 1, "", "require"], [587, 1, 1, "", "reshape"], [588, 1, 1, "", "resize"], [589, 1, 1, "", "result_type"], [590, 1, 1, "", "right_shift"], [591, 1, 1, "", "rint"], [592, 1, 1, "", "roll"], [593, 1, 1, "", "rollaxis"], [594, 1, 1, "", "rot90"], [595, 1, 1, "", "round"], [596, 1, 1, "", "row_stack"], [597, 1, 1, "", "rsqrt"], [598, 1, 1, "", "searchsorted"], [599, 1, 1, "", "select"], [600, 1, 1, "", "shape"], [601, 1, 1, "", "sign"], [602, 1, 1, "", "signbit"], [603, 1, 1, "", "sin"], [604, 1, 1, "", "sinc"], [605, 1, 1, "", "sinh"], [606, 1, 1, "", "size"], [607, 1, 1, "", "sort"], [608, 1, 1, "", "sort_complex"], [609, 1, 1, "", "spacing"], [610, 1, 1, "", "split"], [611, 1, 1, "", "sqrt"], [612, 1, 1, "", "square"], [613, 1, 1, "", "squeeze"], [614, 1, 1, "", "stack"], [615, 1, 1, "", "std"], [616, 1, 1, "", "subtract"], [617, 1, 1, "", "sum"], [618, 1, 1, "", "swapaxes"], [619, 1, 1, "", "take"], [620, 1, 1, "", "take_along_axis"], [621, 1, 1, "", "tan"], [622, 1, 1, "", "tanh"], [623, 1, 1, "", "tensordot"], [624, 1, 1, "", "tile"], [625, 1, 1, "", "trace"], [626, 1, 1, "", "transpose"], [627, 1, 1, "", "trapezoid"], [628, 1, 1, "", "tri"], [629, 1, 1, "", "tril"], [630, 1, 1, "", "tril_indices"], [631, 1, 1, "", "tril_indices_from"], [632, 1, 1, "", "trim_zeros"], [633, 1, 1, "", "triu"], [634, 1, 1, "", "triu_indices"], [635, 1, 1, "", "triu_indices_from"], [636, 1, 1, "", "true_divide"], [637, 1, 1, "", "trunc"], [638, 1, 1, "", "unique"], [639, 1, 1, "", "unravel_index"], [640, 1, 1, "", "unstack"], [641, 1, 1, "", "unwrap"], [642, 1, 1, "", "vander"], [643, 1, 1, "", "var"], [644, 1, 1, "", "vdot"], [645, 1, 1, "", "vecdot"], [646, 1, 1, "", "vsplit"], [647, 1, 1, "", "vstack"], [648, 1, 1, "", "where"], [649, 1, 1, "", "zeros"], [650, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[114, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[115, 3, 1, "", "T"], [116, 4, 1, "", "all"], [117, 4, 1, "", "any"], [118, 4, 1, "", "argmax"], [119, 4, 1, "", "argmin"], [120, 4, 1, "", "argsort"], [121, 4, 1, "", "asnumpy"], [122, 4, 1, "", "astype"], [123, 4, 1, "", "choose"], [124, 4, 1, "", "clip"], [125, 4, 1, "", "compress"], [126, 4, 1, "", "conj"], [127, 4, 1, "", "conjugate"], [128, 4, 1, "", "copy"], [129, 4, 1, "", "cumprod"], [130, 4, 1, "", "cumsum"], [131, 3, 1, "", "device"], [132, 4, 1, "", "diagonal"], [133, 4, 1, "", "dot"], [134, 3, 1, "", "dtype"], [135, 4, 1, "", "fill"], [136, 3, 1, "", "flags"], [137, 3, 1, "", "flat"], [138, 4, 1, "", "flatten"], [139, 4, 1, "", "get_array"], [140, 3, 1, "", "imag"], [141, 4, 1, "", "item"], [142, 3, 1, "", "itemsize"], [143, 3, 1, "", "mT"], [144, 4, 1, "", "max"], [145, 4, 1, "", "mean"], [146, 4, 1, "", "min"], [147, 3, 1, "", "nbytes"], [148, 3, 1, "", "ndim"], [149, 4, 1, "", "nonzero"], [150, 4, 1, "", "partition"], [151, 4, 1, "", "prod"], [152, 4, 1, "", "put"], [153, 4, 1, "", "ravel"], [154, 3, 1, "", "real"], [155, 4, 1, "", "repeat"], [156, 4, 1, "", "reshape"], [157, 4, 1, "", "round"], [158, 4, 1, "", "searchsorted"], [159, 3, 1, "", "shape"], [160, 3, 1, "", "size"], [161, 4, 1, "", "sort"], [162, 4, 1, "", "squeeze"], [163, 4, 1, "", "std"], [164, 3, 1, "", "strides"], [165, 4, 1, "", "sum"], [166, 4, 1, "", "swapaxes"], [167, 3, 1, "", "sycl_context"], [168, 3, 1, "", "sycl_device"], [169, 3, 1, "", "sycl_queue"], [170, 4, 1, "", "take"], [171, 4, 1, "", "to_device"], [172, 4, 1, "", "trace"], [173, 4, 1, "", "transpose"], [174, 3, 1, "", "usm_type"], [175, 4, 1, "", "var"]], "dpnp.dtype": [[179, 5, 1, "", "alignment"], [180, 5, 1, "", "base"], [181, 5, 1, "", "byteorder"], [182, 5, 1, "", "char"], [183, 5, 1, "", "descr"], [184, 5, 1, "", "fields"], [185, 5, 1, "", "flags"], [186, 5, 1, "", "hasobject"], [187, 5, 1, "", "isalignedstruct"], [188, 5, 1, "", "isbuiltin"], [189, 5, 1, "", "isnative"], [190, 5, 1, "", "itemsize"], [191, 5, 1, "", "kind"], [192, 5, 1, "", "metadata"], [193, 5, 1, "", "name"], [194, 5, 1, "", "names"], [195, 5, 1, "", "ndim"], [196, 4, 1, "", "newbyteorder"], [197, 5, 1, "", "num"], [198, 5, 1, "", "shape"], [199, 5, 1, "", "str"], [200, 5, 1, "", "subdtype"], [201, 5, 1, "", "type"]], "dpnp.fft": [[216, 1, 1, "", "fft"], [217, 1, 1, "", "fft2"], [218, 1, 1, "", "fftfreq"], [219, 1, 1, "", "fftn"], [220, 1, 1, "", "fftshift"], [221, 1, 1, "", "hfft"], [222, 1, 1, "", "ifft"], [223, 1, 1, "", "ifft2"], [224, 1, 1, "", "ifftn"], [225, 1, 1, "", "ifftshift"], [226, 1, 1, "", "ihfft"], [227, 1, 1, "", "irfft"], [228, 1, 1, "", "irfft2"], [229, 1, 1, "", "irfftn"], [230, 1, 1, "", "rfft"], [231, 1, 1, "", "rfft2"], [232, 1, 1, "", "rfftfreq"], [233, 1, 1, "", "rfftn"]], "dpnp.linalg": [[299, 1, 1, "", "cholesky"], [300, 1, 1, "", "cond"], [301, 1, 1, "", "cross"], [302, 1, 1, "", "det"], [303, 1, 1, "", "diagonal"], [304, 1, 1, "", "eig"], [305, 1, 1, "", "eigh"], [306, 1, 1, "", "eigvals"], [307, 1, 1, "", "eigvalsh"], [308, 1, 1, "", "inv"], [309, 1, 1, "", "lstsq"], [310, 1, 1, "", "matmul"], [311, 1, 1, "", "matrix_norm"], [312, 1, 1, "", "matrix_power"], [313, 1, 1, "", "matrix_rank"], [314, 1, 1, "", "multi_dot"], [315, 1, 1, "", "norm"], [316, 1, 1, "", "outer"], [317, 1, 1, "", "pinv"], [318, 1, 1, "", "qr"], [319, 1, 1, "", "slogdet"], [320, 1, 1, "", "solve"], [321, 1, 1, "", "svd"], [322, 1, 1, "", "svdvals"], [323, 1, 1, "", "tensordot"], [324, 1, 1, "", "tensorinv"], [325, 1, 1, "", "tensorsolve"], [326, 1, 1, "", "trace"], [327, 1, 1, "", "vecdot"], [328, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[372, 3, 1, "", "T"], [373, 4, 1, "", "__abs__"], [374, 4, 1, "", "__add__"], [375, 4, 1, "", "__and__"], [376, 4, 1, "", "__array__"], [377, 4, 1, "", "__bool__"], [378, 4, 1, "", "__complex__"], [379, 4, 1, "", "__copy__"], [380, 4, 1, "", "__eq__"], [381, 4, 1, "", "__float__"], [382, 4, 1, "", "__floordiv__"], [383, 4, 1, "", "__ge__"], [384, 4, 1, "", "__getitem__"], [385, 4, 1, "", "__gt__"], [386, 4, 1, "", "__iadd__"], [387, 4, 1, "", "__iand__"], [388, 4, 1, "", "__ifloordiv__"], [389, 4, 1, "", "__ilshift__"], [390, 4, 1, "", "__imatmul__"], [391, 4, 1, "", "__imod__"], [392, 4, 1, "", "__imul__"], [393, 4, 1, "", "__int__"], [394, 4, 1, "", "__invert__"], [395, 4, 1, "", "__ior__"], [396, 4, 1, "", "__ipow__"], [397, 4, 1, "", "__irshift__"], [398, 4, 1, "", "__isub__"], [399, 4, 1, "", "__itruediv__"], [400, 4, 1, "", "__ixor__"], [401, 4, 1, "", "__le__"], [402, 4, 1, "", "__len__"], [403, 4, 1, "", "__lshift__"], [404, 4, 1, "", "__lt__"], [405, 4, 1, "", "__matmul__"], [406, 4, 1, "", "__mod__"], [407, 4, 1, "", "__mul__"], [408, 4, 1, "", "__ne__"], [409, 4, 1, "", "__neg__"], [410, 4, 1, "", "__new__"], [411, 4, 1, "", "__or__"], [412, 4, 1, "", "__pos__"], [413, 4, 1, "", "__pow__"], [414, 4, 1, "", "__radd__"], [415, 4, 1, "", "__rand__"], [416, 4, 1, "", "__repr__"], [417, 4, 1, "", "__rfloordiv__"], [418, 4, 1, "", "__rlshift__"], [419, 4, 1, "", "__rmatmul__"], [420, 4, 1, "", "__rmod__"], [421, 4, 1, "", "__rmul__"], [422, 4, 1, "", "__ror__"], [423, 4, 1, "", "__rpow__"], [424, 4, 1, "", "__rrshift__"], [425, 4, 1, "", "__rshift__"], [426, 4, 1, "", "__rsub__"], [427, 4, 1, "", "__rtruediv__"], [428, 4, 1, "", "__rxor__"], [429, 4, 1, "", "__setitem__"], [430, 4, 1, "", "__str__"], [431, 4, 1, "", "__sub__"], [432, 4, 1, "", "__truediv__"], [433, 4, 1, "", "__xor__"], [434, 4, 1, "", "all"], [435, 4, 1, "", "any"], [436, 4, 1, "", "argmax"], [437, 4, 1, "", "argmin"], [438, 4, 1, "", "argsort"], [439, 4, 1, "", "asnumpy"], [440, 4, 1, "", "astype"], [441, 4, 1, "", "choose"], [442, 4, 1, "", "clip"], [443, 4, 1, "", "compress"], [444, 4, 1, "", "conj"], [445, 4, 1, "", "conjugate"], [446, 4, 1, "", "copy"], [447, 4, 1, "", "cumprod"], [448, 4, 1, "", "cumsum"], [449, 3, 1, "", "device"], [450, 4, 1, "", "diagonal"], [451, 4, 1, "", "dot"], [452, 3, 1, "", "dtype"], [453, 4, 1, "", "fill"], [454, 3, 1, "", "flags"], [455, 3, 1, "", "flat"], [456, 4, 1, "", "flatten"], [457, 4, 1, "", "get_array"], [458, 3, 1, "", "imag"], [459, 4, 1, "", "item"], [460, 3, 1, "", "itemsize"], [461, 3, 1, "", "mT"], [462, 4, 1, "", "max"], [463, 4, 1, "", "mean"], [464, 4, 1, "", "min"], [465, 3, 1, "", "nbytes"], [466, 3, 1, "", "ndim"], [467, 4, 1, "", "nonzero"], [468, 4, 1, "", "partition"], [469, 4, 1, "", "prod"], [470, 4, 1, "", "put"], [471, 4, 1, "", "ravel"], [472, 3, 1, "", "real"], [473, 4, 1, "", "repeat"], [474, 4, 1, "", "reshape"], [475, 4, 1, "", "round"], [476, 4, 1, "", "searchsorted"], [477, 3, 1, "", "shape"], [478, 3, 1, "", "size"], [479, 4, 1, "", "sort"], [480, 4, 1, "", "squeeze"], [481, 4, 1, "", "std"], [482, 3, 1, "", "strides"], [483, 4, 1, "", "sum"], [484, 4, 1, "", "swapaxes"], [485, 3, 1, "", "sycl_context"], [486, 3, 1, "", "sycl_device"], [487, 3, 1, "", "sycl_queue"], [488, 4, 1, "", "take"], [489, 4, 1, "", "to_device"], [490, 4, 1, "", "trace"], [491, 4, 1, "", "transpose"], [492, 3, 1, "", "usm_type"], [493, 4, 1, "", "var"]], "dpnp.random": [[519, 2, 1, "", "RandomState"], [530, 1, 1, "", "beta"], [531, 1, 1, "", "binomial"], [532, 1, 1, "", "bytes"], [533, 1, 1, "", "chisquare"], [534, 1, 1, "", "choice"], [535, 1, 1, "", "dirichlet"], [536, 1, 1, "", "exponential"], [537, 1, 1, "", "f"], [538, 1, 1, "", "gamma"], [539, 1, 1, "", "geometric"], [540, 1, 1, "", "gumbel"], [541, 1, 1, "", "hypergeometric"], [542, 1, 1, "", "laplace"], [543, 1, 1, "", "logistic"], [544, 1, 1, "", "lognormal"], [545, 1, 1, "", "logseries"], [546, 1, 1, "", "multinomial"], [547, 1, 1, "", "multivariate_normal"], [548, 1, 1, "", "negative_binomial"], [549, 1, 1, "", "noncentral_chisquare"], [550, 1, 1, "", "noncentral_f"], [551, 1, 1, "", "normal"], [552, 1, 1, "", "pareto"], [553, 1, 1, "", "permutation"], [554, 1, 1, "", "poisson"], [555, 1, 1, "", "power"], [556, 1, 1, "", "rand"], [557, 1, 1, "", "randint"], [558, 1, 1, "", "randn"], [559, 1, 1, "", "random"], [560, 1, 1, "", "random_integers"], [561, 1, 1, "", "random_sample"], [562, 1, 1, "", "ranf"], [563, 1, 1, "", "rayleigh"], [564, 1, 1, "", "sample"], [565, 1, 1, "", "seed"], [566, 1, 1, "", "shuffle"], [567, 1, 1, "", "standard_cauchy"], [568, 1, 1, "", "standard_exponential"], [569, 1, 1, "", "standard_gamma"], [570, 1, 1, "", "standard_normal"], [571, 1, 1, "", "standard_t"], [572, 1, 1, "", "triangular"], [573, 1, 1, "", "uniform"], [574, 1, 1, "", "vonmises"], [575, 1, 1, "", "wald"], [576, 1, 1, "", "weibull"], [577, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[520, 4, 1, "", "get_state"], [521, 4, 1, "", "get_sycl_device"], [522, 4, 1, "", "get_sycl_queue"], [523, 4, 1, "", "normal"], [524, 4, 1, "", "rand"], [525, 4, 1, "", "randint"], [526, 4, 1, "", "randn"], [527, 4, 1, "", "random_sample"], [528, 4, 1, "", "standard_normal"], [529, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:attribute", "6": "py:data"}, "terms": {"": [0, 3, 4, 5, 11, 25, 62, 96, 99, 134, 173, 178, 184, 191, 196, 202, 217, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 249, 250, 309, 313, 315, 317, 321, 322, 323, 353, 452, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 540, 541, 542, 543, 544, 546, 548, 551, 552, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 587, 623, 624, 658], "0": [0, 4, 7, 11, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 66, 69, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 128, 132, 135, 140, 141, 143, 154, 157, 159, 161, 163, 172, 173, 175, 176, 178, 184, 188, 195, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 259, 262, 263, 264, 265, 266, 269, 270, 273, 274, 275, 277, 281, 283, 284, 285, 286, 291, 292, 293, 294, 296, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 319, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 446, 450, 453, 458, 459, 461, 472, 475, 477, 479, 481, 490, 491, 493, 494, 495, 498, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 518, 523, 524, 525, 526, 527, 528, 529, 531, 536, 538, 539, 540, 542, 543, 544, 546, 547, 548, 551, 553, 554, 555, 556, 559, 561, 562, 563, 564, 567, 570, 572, 573, 574, 579, 582, 584, 585, 587, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 648, 649, 650, 658], "00": [92, 204, 216, 603], "000": [358, 531], "00000000005e": 212, "000000001": 64, "00000000e": [216, 358], "000000082740371e": 212, "000000e": [92, 603], "00001101": [64, 65, 67, 68, 70, 276], "00001e10": [20, 277], "00010000": 68, "00010001": [64, 70], "00011100": 70, "00011101": 68, "0001e10": 277, "000e": 204, "000j": 358, "0011": 62, "002": 358, "00225109": 90, "00867716": 533, "01": [90, 204], "02": [90, 204, 358], "03": 358, "03047091": 90, "03088525e": 205, "0342579": 90, "0396842": 341, "04": 204, "04719755": 518, "04921661": 526, "04923628": 604, "05": [20, 204, 277], "05846808": 604, "0614962j": [217, 231], "06310682": 524, "06682066": 604, "07": 358, "07012729": 90, "0728188e": 90, "07944154": [97, 319], "08": [20, 92, 204, 242, 277, 547, 603], "08156915": 528, "08409186": 604, "08504448": 604, "08903844": 604, "09373496": 90, "0943951": 518, "09640474": 336, "09861229": [97, 319, 333], "0d": 39, "0dev4": 7, "0j": [23, 113, 140, 154, 278, 279, 287, 288, 310, 344, 458, 472, 601], "0th": [323, 623], "1": [0, 3, 4, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 135, 138, 140, 141, 143, 148, 150, 154, 159, 161, 172, 173, 176, 177, 178, 188, 190, 192, 195, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 279, 282, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 450, 453, 456, 458, 459, 461, 466, 468, 472, 477, 479, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 536, 538, 540, 542, 543, 544, 546, 547, 548, 551, 553, 554, 555, 556, 557, 559, 561, 562, 563, 564, 568, 570, 573, 578, 579, 580, 581, 582, 584, 585, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658], "10": [0, 4, 17, 18, 27, 30, 32, 36, 37, 52, 61, 66, 69, 79, 87, 97, 98, 99, 100, 101, 104, 106, 107, 110, 111, 156, 176, 178, 203, 204, 212, 213, 220, 232, 248, 254, 257, 263, 264, 265, 266, 272, 277, 292, 293, 295, 296, 326, 327, 331, 332, 333, 334, 341, 342, 349, 357, 365, 474, 504, 513, 515, 525, 529, 531, 541, 553, 583, 589, 590, 592, 595, 598, 610, 614, 620, 629, 630, 631, 633, 634, 635, 640, 645, 646, 648], "100": [106, 171, 232, 257, 265, 277, 293, 314, 341, 489, 504, 541, 567, 581, 641], "1000": [75, 257, 314, 341, 530, 531, 536, 538, 540, 541, 542, 543, 544, 551, 552, 555, 557, 559, 562, 564, 570, 574, 575, 576, 577, 581, 627], "10000": [314, 539, 554, 563, 573], "100000": [99, 101, 548], "1000000": [567, 569, 571, 572], "101": [62, 66, 69, 296, 590], "1010": [69, 590], "10100": [66, 296], "1024": 0, "10394325": 604, "105": 204, "11": [27, 36, 37, 61, 62, 93, 104, 106, 107, 156, 176, 213, 259, 266, 315, 326, 474, 548, 557, 595, 598, 605, 629, 630, 631, 633, 634, 635, 640, 646, 648], "110": [203, 274], "1100": 64, "11100": 70, "11101": [62, 68], "11110010": [65, 67, 276], "111111": 358, "113": 335, "11570901": 528, "11643488": 604, "1179187": 524, "118033988749895": 615, "119": 203, "1196081": 529, "12": [5, 11, 27, 36, 37, 60, 64, 96, 103, 104, 106, 107, 111, 176, 197, 203, 213, 217, 231, 256, 266, 272, 294, 322, 341, 511, 513, 518, 553, 579, 598, 629, 630, 631, 633, 634, 635, 640, 646, 648], "120": [98, 100, 103], "123": [90, 141, 204, 459], "124": 27, "125": [242, 509, 510, 642], "12613779": 604, "127": 257, "128": [0, 257, 358], "12th": 203, "13": [11, 27, 36, 37, 64, 65, 67, 68, 70, 106, 107, 113, 176, 203, 266, 275, 276, 310, 344, 579, 598, 630, 631, 634, 635, 639, 640, 646], "130": 203, "134": 274, "13436424": [524, 527], "135": [34, 56], "13710533": 533, "139884456208480": 19, "13j": 581, "14": [27, 36, 37, 64, 65, 67, 106, 107, 113, 176, 236, 266, 274, 276, 323, 598, 623, 630, 631, 634, 635, 640, 646], "140": 641, "140053638309840": 24, "14157194": 627, "14159265": [16, 29, 34, 56, 102, 518], "1424356": 90, "14243561": 90, "14423775e": 216, "14j": 581, "15": [27, 36, 37, 99, 101, 106, 107, 111, 176, 203, 221, 226, 266, 315, 332, 553, 598, 630, 631, 634, 635, 640, 646], "150": 103, "15591488": 604, "15716429": 90, "15888336": 341, "15j": 581, "16": [7, 27, 64, 68, 106, 107, 176, 183, 184, 185, 190, 194, 216, 242, 252, 257, 259, 266, 328, 357, 509, 510, 581, 599, 621, 630, 631, 634, 635, 640, 646], "1621": [579, 639], "16227766": [300, 583], "16394577": 523, "164": 336, "1643624": 90, "166": 336, "16j": 216, "17": [7, 27, 64, 70, 90, 216, 217, 231, 640], "17157288": [305, 307], "17281316e": 216, "17615308": 90, "177": [257, 341], "17j": 216, "18": [7, 27, 98, 100, 190, 202, 203, 219, 301, 311, 315, 341, 640], "180": [34, 56, 102, 103, 203, 517, 641, 665], "1805": 11, "18236388": 528, "18557831": 528, "1887902": 518, "18920668": 604, "19": [11, 27, 94, 197, 579, 640, 641], "19083664": 90, "19083665": 90, "1923875335537315": 558, "19245009": 597, "1924881e": 242, "1965": 11, "19722458": 97, "1985": 315, "1d": [26, 202, 514, 515, 620, 627], "1e": [20, 212, 277, 304, 332, 333, 335, 336, 547], "1e10": [20, 277], "1j": [14, 15, 23, 32, 33, 42, 52, 55, 84, 85, 91, 140, 154, 227, 272, 278, 287, 304, 316, 321, 458, 472, 503, 580, 608, 612], "1th": [323, 623], "2": [0, 3, 4, 7, 11, 14, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 141, 143, 148, 150, 159, 160, 171, 173, 176, 177, 178, 183, 184, 188, 190, 192, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 278, 282, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 438, 440, 446, 450, 451, 453, 456, 459, 461, 466, 468, 477, 478, 489, 491, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 513, 514, 517, 518, 523, 524, 525, 526, 529, 533, 537, 541, 547, 553, 556, 558, 569, 571, 572, 575, 577, 578, 580, 581, 582, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 602, 603, 605, 606, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650], "20": [27, 66, 98, 100, 111, 203, 232, 256, 273, 277, 293, 294, 295, 296, 315, 515, 531, 546, 598, 620, 640, 641], "20000": 531, "2007": 11, "200e": 204, "2023": 5, "20477401j": [217, 231], "2048": 0, "2066992e": 90, "21": [27, 99, 101, 182, 190, 197, 640], "210": 103, "2123185": 90, "215": 341, "21623621": 604, "21941987": 528, "21968665": 528, "22": [27, 514, 579, 639, 640], "220": 641, "220446049250313e": 581, "222222": 358, "22460635e": 621, "22464680e": 216, "22497216": 315, "22776602": 341, "23": [7, 27, 63, 529, 579, 640], "230": 203, "23387232": 604, "23598776": 518, "23606798": 315, "24": [27, 36, 37, 96, 98, 100, 159, 202, 203, 274, 293, 301, 323, 324, 326, 477, 511, 623, 625, 640], "240": 103, "24264069": 315, "24544512": 528, "247219128924647": 368, "25": [178, 203, 208, 218, 259, 263, 264, 308, 329, 357, 370, 558, 567, 599, 642, 643], "255": [64, 68], "25506903": 524, "256": [0, 257], "26": [70, 203], "260": 641, "26606588": 269, "26618007j": 334, "27": [76, 242, 341, 509, 510, 597, 642], "270": 103, "2795853": 269, "28": [70, 203], "28000000e": 358, "2800000e": 358, "283185307179586": 641, "28318531": 641, "28352814": 528, "2858386e": 90, "28904982": 336, "29": 68, "297": 11, "2d": [321, 344, 594, 638], "2e": [99, 101], "2f": 0, "2j": [84, 85, 113, 216, 272, 278, 287, 305, 307, 310, 344, 580, 601, 608, 644], "2k": 641, "3": [0, 3, 4, 7, 16, 18, 25, 26, 27, 28, 29, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 128, 132, 138, 141, 143, 148, 150, 159, 160, 161, 173, 176, 177, 178, 190, 192, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 219, 220, 221, 225, 226, 228, 229, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 254, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 282, 287, 288, 289, 291, 292, 293, 296, 300, 301, 302, 303, 304, 308, 309, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 446, 450, 456, 459, 461, 466, 468, 477, 478, 479, 491, 494, 495, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 514, 518, 523, 526, 528, 533, 537, 544, 547, 553, 556, 557, 558, 568, 572, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 602, 606, 607, 608, 610, 611, 613, 614, 615, 616, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "30": [96, 103, 160, 203, 232, 478, 515, 518, 620, 644], "300": [103, 641], "3003003": 582, "301": 11, "30102999566": 332, "3012989": 605, "30258509": [97, 342], "306": 7, "308": 358, "308j": 358, "31": [7, 70, 257, 579, 639], "312": 205, "316": 341, "32": [184, 203, 257, 323, 367, 369, 623], "33": 582, "330": [7, 103], "333": 314, "33333333": 358, "3333333e": 358, "33340275": 627, "33486982e": 216, "33836967": 523, "340": 641, "34074171": 529, "34132519": 341, "34846923": [311, 315], "34960421": 341, "35": [203, 539], "35106603e": [311, 315], "35348576": 328, "35355338": 597, "36": 96, "360": 641, "37": [579, 595, 639], "371139e": 92, "38": [274, 531], "380": 641, "38268343": 305, "38268343j": 305, "38629436": 97, "38885": 531, "389056099": [209, 212], "391": 7, "39295758": 523, "39783284": 90, "3e": [0, 99, 101, 581], "3j": [113, 310, 344, 608], "3rd": [82, 83, 176, 610], "3x3": 343, "3x8000": 568, "4": [0, 18, 19, 25, 26, 27, 28, 36, 37, 39, 41, 42, 44, 58, 60, 61, 62, 64, 68, 71, 79, 80, 81, 82, 83, 86, 89, 90, 92, 94, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 128, 132, 138, 143, 148, 150, 159, 161, 173, 176, 177, 179, 190, 195, 198, 202, 203, 204, 205, 207, 210, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 238, 239, 242, 244, 245, 246, 250, 251, 252, 254, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 278, 282, 287, 292, 293, 295, 298, 301, 302, 303, 308, 310, 311, 312, 313, 315, 319, 322, 323, 324, 325, 326, 328, 329, 334, 337, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 359, 360, 362, 364, 365, 368, 370, 446, 450, 456, 461, 466, 468, 477, 479, 491, 494, 498, 500, 502, 504, 506, 509, 510, 511, 513, 514, 518, 523, 526, 527, 530, 533, 553, 558, 574, 578, 579, 580, 581, 584, 585, 587, 588, 592, 593, 594, 595, 596, 599, 601, 604, 606, 607, 610, 611, 614, 615, 616, 618, 619, 623, 624, 626, 627, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 650], "40": [66, 203, 232, 295, 296, 515, 620], "40882036": 523, "4096": 0, "41": [7, 579, 604, 639], "41421356": [300, 315], "42": 599, "420": 641, "44": [507, 514], "4400": [203, 323, 623], "443469": 341, "444": 7, "44509285e": 216, "45": [23, 34, 56, 328], "45206687": 90, "4532": [203, 323, 623], "46": 203, "460": [7, 641], "46394577": 526, "464": 341, "46436927": 90, "4643693": 90, "4664": [203, 323, 623], "47": 7, "4730": [203, 323, 623], "4796": [203, 323, 623], "48": [7, 96], "48093112": 529, "48613152": 90, "48613155": 90, "4874": [203, 323, 623], "48927254": 523, "49": 7, "4928": [203, 323, 623], "49543509": 524, "49778714": 641, "499128": 113, "4d": 321, "4e": 581, "4j": [272, 580, 644], "4x4": [630, 634], "5": [0, 18, 19, 24, 25, 26, 27, 28, 35, 36, 39, 44, 57, 58, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 77, 79, 81, 82, 83, 86, 89, 90, 91, 94, 96, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 122, 128, 141, 143, 160, 176, 202, 203, 204, 208, 213, 217, 218, 220, 228, 231, 232, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 278, 282, 287, 292, 293, 295, 296, 299, 301, 303, 305, 307, 308, 314, 315, 316, 320, 323, 326, 327, 328, 329, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 364, 365, 368, 440, 446, 459, 461, 478, 494, 498, 500, 501, 502, 503, 504, 506, 509, 510, 513, 514, 518, 523, 524, 526, 528, 529, 530, 531, 533, 536, 548, 552, 553, 554, 555, 558, 561, 576, 578, 579, 580, 581, 582, 584, 587, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 606, 608, 610, 614, 615, 617, 618, 619, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650], "50": [217, 231, 232, 257, 293, 323, 335, 336, 341, 515, 620, 623, 627, 648], "500": [293, 641], "5018": [203, 323, 623], "50455115": 604, "5091786": 93, "512": 0, "5147297e": 90, "5162": [203, 323, 623], "52069395e": 216, "52359878": 518, "52928804": 529, "53": 7, "5306": [203, 323, 623], "53702235": 90, "5399045e": 242, "54": [7, 529], "540": 641, "54288406": 526, "54465213": 528, "547": 7, "548739": 605, "54930614": [35, 57], "55": [507, 514, 599], "5555555555555554": 370, "562": 341, "5620499351813308": [14, 15], "56920387": [524, 527], "5707963267948966": [31, 51], "57079633": [23, 34, 56, 518, 641], "5790461": 90, "57904613": 90, "58997253": 523, "591953": 93, "5e": [335, 336], "5j": [91, 351, 500, 608], "6": [0, 4, 18, 25, 26, 27, 28, 36, 37, 39, 44, 58, 61, 63, 68, 70, 72, 79, 81, 82, 83, 89, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 128, 141, 143, 159, 176, 185, 193, 202, 203, 207, 212, 213, 218, 221, 232, 239, 242, 255, 256, 259, 265, 266, 267, 272, 273, 274, 275, 282, 292, 293, 294, 301, 303, 311, 315, 317, 318, 321, 322, 323, 324, 326, 327, 328, 329, 341, 343, 345, 349, 361, 362, 365, 367, 446, 459, 461, 477, 494, 498, 502, 504, 507, 509, 510, 513, 523, 526, 529, 546, 548, 553, 558, 578, 579, 580, 586, 587, 592, 593, 594, 595, 596, 599, 606, 608, 610, 614, 616, 617, 618, 619, 623, 625, 627, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 644, 645, 646, 647, 648, 650], "60": [27, 96, 103, 203, 294, 323, 515, 620, 623, 641, 648], "600": 293, "60943791": 97, "6173796": 90, "61799388": 518, "62": 274, "6227766": 257, "62318272": 533, "62341325": 257, "624": 204, "63": 257, "63317787e": 621, "63522211": 528, "63836967": 526, "64": [0, 4, 203, 242, 257, 367, 369, 509, 510, 595], "64000": 203, "65157276": 90, "6515728": 90, "65354985": 90, "65745445": [17, 30], "6580445": 90, "66519143": 518, "6666666666666665": 364, "67": 203, "67305985": 249, "673174": 528, "67718303": 528, "6883078": 90, "69295758": 526, "69314718": [97, 319, 333], "6990877": 529, "6j": [272, 580, 644], "7": [18, 20, 25, 26, 27, 28, 44, 58, 63, 72, 77, 79, 89, 90, 94, 96, 99, 101, 104, 105, 106, 107, 109, 110, 112, 141, 143, 176, 202, 209, 213, 239, 243, 257, 259, 266, 274, 275, 277, 292, 293, 303, 311, 315, 321, 323, 326, 328, 343, 345, 349, 354, 357, 365, 459, 461, 498, 504, 512, 513, 523, 553, 579, 580, 584, 589, 591, 592, 594, 610, 616, 617, 618, 619, 623, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 644, 646, 648], "70": [293, 644, 648], "700": 293, "700e": 204, "70710677": [140, 154, 458, 472], "70710678": [300, 304], "70710678j": 304, "70882036": 526, "7110255": 90, "71102554": 90, "71238898": 518, "718281828": [209, 212], "72": 96, "720": [98, 100, 641], "72075441": 341, "72450536": 90, "72538256": [32, 52], "74165739": 315, "742278e": 603, "74596669": [311, 315], "7485727": 90, "74857277": 90, "74921661": 523, "75": [61, 208, 218, 259, 264, 308, 329], "754": 235, "75682673": 604, "75958653": 518, "76096244": 524, "76377462": 524, "77447665": 336, "78539816": [23, 33, 34, 55, 56, 641], "78927254": 526, "79175947": 97, "7937219": 90, "79727215": 90, "7972722": 90, "79769313e": 358, "7j": 512, "8": [4, 18, 20, 25, 26, 27, 44, 58, 65, 67, 76, 79, 89, 96, 104, 105, 106, 107, 109, 110, 133, 143, 159, 176, 179, 181, 185, 190, 193, 195, 200, 203, 204, 213, 216, 218, 232, 233, 239, 242, 257, 259, 265, 266, 272, 275, 276, 277, 292, 302, 303, 315, 319, 321, 322, 323, 324, 326, 327, 328, 329, 341, 343, 345, 451, 461, 477, 498, 504, 509, 510, 511, 513, 529, 553, 572, 579, 580, 592, 594, 597, 603, 610, 619, 623, 625, 627, 629, 630, 631, 633, 634, 635, 639, 640, 641, 642, 645, 646, 648], "80": [190, 203, 648], "8000": 568, "8012391e": 90, "80226506": [524, 527], "8058837395885292": 328, "8104691": 90, "81715362": 528, "827941": [257, 341], "82842712": [305, 307], "8399546e": 90, "84086883": 90, "84288406": 523, "84401099": [526, 528], "84743374": [524, 527], "84803548": 315, "85": 203, "86": 274, "87649168": 335, "88": 202, "88079259": 269, "88178420e": 216, "881943016134134": 328, "88194302": 328, "88997253": 526, "8900264": 90, "89002645": 90, "89920014": 533, "8f": [180, 200], "8j": 644, "9": [4, 18, 25, 26, 27, 44, 58, 79, 89, 90, 96, 99, 101, 104, 105, 106, 107, 109, 112, 141, 176, 203, 205, 213, 216, 219, 220, 225, 236, 242, 244, 252, 257, 259, 265, 266, 277, 292, 303, 304, 309, 311, 315, 317, 318, 321, 322, 323, 326, 328, 341, 343, 357, 358, 459, 498, 513, 529, 531, 533, 553, 579, 580, 592, 610, 611, 616, 623, 629, 630, 631, 633, 634, 635, 636, 639, 640, 641, 642, 646, 648], "90": [23, 103, 517, 594, 648], "9011005": 90, "917152": 622, "92": 27, "92387953": 305, "92387953j": 305, "9305482": 90, "93548928": 604, "9377134e": 90, "9387854e": 90, "9393724": 90, "9393725": 90, "94": 203, "94591015": 97, "95": 309, "9520904e": 90, "95799250e": 216, "968541": 90, "9685411": 90, "9724453": 90, "98": [310, 344], "98024613": 341, "9875833": 90, "99": [202, 333, 515], "9909503": 90, "99095035": 90, "99322285": [17, 30], "994938": 90, "9949381": 90, "9951523": 90, "99532227": 208, "996272": 622, "99822295": [32, 52], "99853728": 208, "999": [204, 275], "9990000e": 358, "99959305": 208, "99989938": 208, "9999": 358, "99997791": 208, "9999999": 90, "99999994": 90, "999999e": 277, "A": [11, 14, 15, 16, 17, 18, 20, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 80, 81, 84, 85, 87, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 122, 128, 138, 141, 171, 176, 178, 181, 182, 185, 188, 191, 193, 197, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 233, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 268, 269, 270, 272, 273, 275, 276, 280, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 303, 305, 306, 307, 309, 313, 314, 315, 318, 319, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 349, 351, 353, 354, 357, 361, 362, 365, 367, 369, 440, 446, 456, 459, 489, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 512, 517, 518, 519, 521, 522, 526, 528, 531, 548, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 578, 579, 580, 582, 584, 587, 590, 591, 594, 597, 601, 602, 603, 604, 605, 609, 610, 611, 612, 616, 618, 619, 621, 622, 623, 624, 626, 628, 630, 632, 634, 636, 637, 642, 645, 646, 648, 649, 650, 665], "AND": [19, 64, 65, 67, 68, 70, 276, 337, 338, 339, 340], "And": [4, 53, 54, 106, 122, 440, 630, 634], "As": 638, "At": 495, "Be": 304, "Being": 3, "But": [4, 192], "By": [36, 37, 47, 54, 96, 122, 217, 221, 223, 227, 229, 233, 257, 309, 329, 341, 344, 346, 348, 352, 359, 360, 363, 364, 366, 367, 368, 369, 370, 440, 585, 592, 606, 615, 619, 628, 630, 632, 634, 643, 645], "For": [0, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 135, 138, 140, 141, 148, 154, 156, 159, 164, 173, 176, 177, 190, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 453, 456, 458, 459, 466, 472, 474, 477, 482, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658, 665], "If": [4, 11, 14, 15, 18, 19, 20, 24, 25, 27, 28, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 56, 61, 62, 64, 66, 68, 69, 70, 74, 79, 81, 82, 83, 88, 90, 94, 96, 97, 98, 99, 100, 101, 104, 105, 109, 110, 112, 113, 120, 122, 143, 161, 171, 176, 178, 184, 200, 202, 203, 204, 207, 211, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 242, 244, 245, 246, 247, 248, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 277, 282, 285, 286, 287, 294, 295, 296, 297, 298, 299, 301, 309, 311, 312, 313, 314, 315, 317, 318, 321, 323, 325, 326, 328, 329, 330, 335, 336, 337, 339, 340, 341, 342, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 461, 479, 489, 497, 499, 506, 507, 509, 510, 511, 514, 515, 523, 529, 551, 556, 573, 580, 581, 583, 584, 585, 586, 587, 588, 590, 592, 595, 596, 598, 607, 610, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 632, 636, 638, 641, 642, 643, 644, 645, 646, 647, 648, 658, 665], "In": [4, 11, 36, 37, 62, 90, 96, 98, 99, 100, 101, 203, 204, 222, 223, 224, 227, 229, 248, 259, 291, 299, 306, 314, 318, 320, 336, 341, 361, 362, 364, 367, 369, 511, 514, 529, 573, 578, 579, 587, 588, 617, 619, 637], "It": [4, 11, 19, 24, 25, 26, 36, 37, 79, 81, 98, 99, 100, 101, 111, 113, 171, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 259, 275, 305, 307, 336, 344, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 489, 504, 511, 587, 588, 599, 609, 615, 617, 619, 643, 665], "Its": [79, 324, 515, 625], "NOT": [65, 67, 276, 337, 338, 339, 340], "No": [46, 47, 203, 299], "Not": [19, 24, 47, 281, 358, 361, 362, 363, 366, 367, 369, 511], "OR": [24, 64, 65, 67, 68, 70, 276, 337, 338, 339, 340], "On": 4, "One": [58, 59, 60, 96, 177, 181, 227, 291, 316, 504, 587], "Ones": 41, "Or": [259, 627], "That": 343, "The": [3, 4, 11, 13, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 120, 122, 128, 140, 143, 148, 150, 154, 159, 161, 177, 178, 179, 183, 184, 185, 190, 192, 194, 196, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 276, 277, 279, 280, 281, 282, 283, 284, 288, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 438, 440, 446, 458, 461, 466, 468, 472, 477, 479, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 508, 509, 510, 511, 513, 514, 515, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 532, 534, 535, 545, 550, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 604, 605, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 642, 643, 645, 647, 648, 649, 650, 658, 661, 665], "Then": [11, 48, 50, 343], "There": [11, 329, 638], "These": [4, 5, 25, 197, 203, 204, 211, 343, 356, 515, 620, 630, 634, 658, 661], "To": [4, 221, 227, 229, 242, 498, 641], "With": [36, 37, 61, 94, 100, 101, 266, 311, 315, 328, 346, 352, 359, 360, 367, 369, 511, 617, 646], "_": [0, 264, 614, 627], "__array_interface__": 183, "__array_namespace_info__": 5, "__bool__": 658, "__dlpack__": 248, "__dlpack_device__": 248, "__main__": 0, "__name__": 0, "__sycl_usm_array_interface__": 49, "_core": 185, "_dtypes_list": 0, "_f": 315, "_k": 91, "_n": 91, "a1": [42, 43], "a2": [42, 43], "a_": [11, 91, 315], "a_ax": [323, 623], "a_i": [327, 645], "a_k": 11, "a_m": 11, "a_resamp": 227, "ab": [7, 11, 15, 20, 277, 315], "abc": [203, 291], "abcd": 204, "abl": 315, "about": [48, 50, 136, 235, 304, 454, 504, 586, 658], "abov": [3, 16, 17, 29, 30, 31, 32, 35, 51, 52, 57, 91, 97, 105, 108, 219, 224, 229, 233, 273, 303, 318, 326, 342, 358, 583, 628, 629, 633], "absolut": [7, 14, 20, 23, 62, 215, 256, 277, 294, 319, 368, 370, 512, 581, 615, 641, 643, 665], "ac": 91, "accept": [26, 203, 316, 529, 630, 634], "access": [5, 11, 106, 107, 234, 343, 630, 634, 658], "accord": [19, 24, 61, 69, 75, 179, 194, 233, 235, 304, 305, 306, 307, 342, 348, 349, 364, 365, 368, 370, 504, 583, 590, 615, 643], "accordingli": [96, 363, 366], "account": [578, 587], "accumul": [97, 98, 99, 100, 101, 203, 263, 326, 361, 362, 367, 369, 511, 617, 625], "accur": [183, 212, 259, 333, 335], "accuraci": [222, 223, 224, 227, 229], "achiev": 203, "aco": [7, 29], "acosh": [7, 30], "across": [109, 264, 361, 362, 367, 369], "activ": 4, "actual": [186, 263, 264, 299, 314], "ad": [20, 62, 192, 204, 211, 227, 277, 302, 319, 336, 641, 661], "add": [7, 90, 178, 665], "addit": [26, 90, 97, 299, 364, 638], "address": 186, "adjac": [303, 326, 609, 641], "advanc": 203, "advers": 203, "advis": 4, "affect": [28, 109, 203, 234, 263, 264], "after": [177, 234, 497, 504, 548, 592], "after_1": 504, "after_n": 504, "ag": 178, "against": [20, 36, 37, 71, 72, 73, 79, 94, 258, 277, 311, 315, 317, 328, 346, 352, 359, 360, 367, 369, 511, 515, 617, 620], "ai": [3, 515, 620], "ai_max": 620, "ai_min": 620, "ainv": [308, 324], "al": 11, "algebra": [651, 661], "algorithm": [11, 38, 120, 161, 203, 204, 216, 222, 230, 438, 479, 607], "alia": [11, 16, 17, 21, 22, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 65, 66, 67, 69, 82, 83, 112, 206, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 255, 276, 296, 354, 371, 502, 506, 509, 510, 529, 559, 562, 564, 578, 584, 587, 590, 596, 626, 636, 641, 647, 650], "alias": [10, 221, 222, 227, 229, 604], "align": [178, 187], "all": [4, 7, 10, 20, 23, 24, 25, 42, 43, 47, 54, 61, 80, 90, 94, 103, 110, 122, 126, 135, 150, 177, 181, 194, 196, 203, 204, 209, 210, 212, 214, 219, 220, 224, 225, 228, 229, 233, 234, 239, 240, 241, 248, 249, 250, 252, 257, 259, 265, 267, 270, 272, 292, 299, 301, 313, 317, 320, 328, 329, 341, 346, 349, 352, 359, 360, 363, 365, 366, 440, 444, 453, 468, 504, 511, 531, 580, 581, 592, 596, 599, 613, 617, 632, 638, 640, 645, 647, 658, 665], "allclos": [7, 42, 277, 308, 317, 318, 320, 321, 325], "alloc": [3, 4, 25, 28, 41, 45, 46, 47, 48, 49, 50, 54, 61, 87, 97, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 236, 248, 249, 250, 251, 252, 253, 254, 255, 257, 269, 270, 273, 285, 286, 329, 330, 341, 342, 343, 348, 349, 351, 364, 365, 368, 370, 440, 446, 489, 500, 501, 502, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 583, 613, 615, 628, 630, 634, 642, 643, 645, 649, 650], "allow": [44, 54, 100, 101, 104, 122, 156, 203, 263, 264, 280, 282, 336, 343, 349, 365, 440, 474, 619, 658], "almost": [39, 304, 630], "along": [3, 4, 19, 21, 22, 24, 25, 26, 27, 36, 37, 38, 44, 61, 80, 81, 82, 83, 94, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 118, 119, 120, 125, 129, 130, 144, 146, 151, 152, 160, 161, 163, 165, 170, 172, 175, 176, 177, 202, 213, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 239, 240, 241, 245, 246, 251, 257, 259, 265, 266, 267, 273, 275, 315, 318, 323, 324, 325, 326, 327, 328, 329, 341, 342, 346, 347, 348, 349, 350, 352, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 436, 437, 438, 443, 447, 448, 462, 464, 469, 470, 478, 479, 481, 483, 488, 490, 493, 504, 507, 511, 513, 514, 515, 578, 583, 585, 592, 593, 594, 596, 599, 606, 607, 610, 614, 615, 617, 619, 620, 623, 624, 625, 627, 630, 631, 632, 634, 635, 638, 640, 641, 643, 645, 646, 647, 658], "alpha": [530, 535, 536, 552, 555], "alreadi": [4, 11, 46, 47, 58, 59, 60, 503, 504, 638], "also": [3, 4, 11, 16, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 88, 90, 112, 159, 178, 184, 187, 196, 203, 207, 211, 219, 224, 228, 229, 230, 233, 242, 244, 245, 246, 247, 251, 253, 256, 259, 260, 261, 262, 263, 268, 277, 282, 294, 296, 297, 298, 299, 335, 336, 343, 347, 353, 354, 356, 357, 477, 498, 499, 509, 510, 567, 584, 590, 604, 616, 619, 636, 638, 658], "alter": 109, "altern": [3, 4, 19, 24, 98, 99, 100, 101, 113, 173, 344, 346, 348, 349, 352, 361, 362, 364, 365, 367, 368, 369, 370, 491, 511, 615, 617, 643], "although": [23, 192, 223, 224, 225, 624], "alwai": [4, 11, 16, 17, 29, 30, 31, 32, 33, 35, 38, 45, 51, 52, 54, 55, 57, 109, 122, 176, 202, 215, 242, 248, 266, 305, 307, 368, 370, 440, 498, 587, 608, 615, 643, 646], "amax": [7, 63, 346], "ambigu": 658, "amin": [7, 352], "among": 202, "amplitud": 11, "an": [0, 3, 4, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 92, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 141, 144, 148, 150, 152, 155, 156, 159, 160, 161, 162, 166, 170, 171, 173, 176, 177, 178, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 288, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 306, 309, 313, 314, 315, 317, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 379, 438, 439, 440, 441, 442, 443, 446, 459, 462, 466, 468, 470, 473, 474, 477, 478, 479, 480, 484, 488, 489, 491, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 524, 531, 536, 537, 539, 548, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 658, 665], "anaconda": 3, "analog": [217, 219, 221, 223, 224, 226], "analysi": 11, "analyt": [3, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57], "angl": [7, 11, 16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 102, 103, 272, 517, 518, 580, 581, 641, 665], "ani": [3, 7, 19, 20, 25, 26, 41, 45, 46, 47, 48, 49, 50, 54, 71, 72, 73, 87, 105, 108, 110, 122, 148, 184, 186, 192, 196, 203, 204, 217, 219, 223, 224, 229, 233, 234, 254, 255, 257, 259, 264, 267, 279, 288, 289, 312, 325, 329, 341, 343, 363, 366, 440, 466, 504, 529, 573, 586, 604, 609, 642, 658], "anoth": [4, 89, 90, 91, 128, 152, 213, 223, 224, 446, 470, 507, 514, 593], "answer": 531, "anti": [109, 234, 303, 604], "anyth": 190, "ap": 309, "apart": 627, "api": [0, 2, 3, 7, 13, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 96, 98, 99, 100, 101, 105, 106, 108, 109, 122, 128, 171, 179, 185, 188, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 301, 303, 310, 311, 316, 317, 326, 327, 328, 329, 330, 341, 343, 344, 351, 440, 446, 489, 500, 501, 502, 503, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 625, 628, 630, 634, 642, 644, 645, 649, 650], "appear": [211, 240, 241, 638], "append": [0, 7, 66, 104, 110, 202, 204, 211, 222, 223, 224, 275, 296, 303], "appli": [26, 27, 36, 37, 38, 61, 75, 104, 120, 161, 203, 323, 358, 438, 479, 579, 588, 589, 607, 623, 627], "applic": [11, 181, 604], "apply_along_axi": [7, 27, 661], "apply_over_ax": [7, 26, 661], "approach": [159, 192, 222, 223, 224, 477], "appropri": [4, 36, 37, 81, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 258, 325, 359, 360, 363, 366, 525, 557, 560, 588, 619, 658], "approxim": [235, 627], "ar": [3, 4, 5, 11, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 47, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 112, 113, 122, 149, 150, 159, 178, 184, 185, 187, 192, 194, 196, 197, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 274, 275, 276, 277, 280, 281, 282, 283, 284, 291, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 321, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 440, 467, 468, 477, 494, 496, 497, 498, 499, 504, 505, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 523, 525, 527, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 554, 555, 557, 560, 561, 563, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 588, 590, 591, 592, 595, 596, 597, 598, 599, 601, 602, 603, 606, 607, 609, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 627, 631, 632, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 658, 665], "arang": [0, 7, 18, 27, 36, 37, 39, 44, 58, 59, 60, 61, 63, 79, 88, 103, 104, 105, 106, 107, 109, 112, 113, 132, 143, 176, 203, 207, 209, 210, 212, 213, 216, 238, 239, 242, 247, 248, 255, 256, 257, 259, 263, 266, 273, 274, 275, 292, 293, 294, 295, 303, 310, 311, 315, 323, 326, 328, 329, 332, 333, 337, 338, 339, 340, 341, 343, 344, 346, 350, 352, 354, 357, 450, 461, 499, 502, 504, 507, 509, 510, 514, 518, 553, 584, 586, 587, 589, 592, 594, 599, 610, 616, 623, 625, 627, 630, 631, 634, 635, 636, 640, 646, 648, 650], "arbitrari": [53, 113, 186, 203, 274, 344, 589, 630, 634], "arbitrarili": 203, "arc": [23, 31, 33, 51, 55], "arcco": [7, 16, 17, 30, 31, 33, 34, 51, 55, 56, 92], "arccosh": [7, 16, 17, 29, 32, 35, 52, 57, 93], "arcsin": [7, 16, 29, 32, 33, 34, 51, 52, 55, 56, 603], "arcsinh": [7, 17, 30, 31, 35, 51, 52, 57, 605], "arctan": [7, 16, 23, 29, 31, 34, 35, 51, 55, 56, 57, 621], "arctan2": [7, 23, 31, 33, 51, 55, 56], "arctanh": [7, 17, 30, 32, 33, 34, 52, 55, 56, 57, 622], "area": [627, 632], "arg": [26, 71, 72, 141, 292, 459, 524, 526, 556], "arg1": 290, "arg2": 290, "argmax": [0, 7, 37, 359, 515, 620, 658], "argmin": [7, 36, 360, 620, 658], "argpartit": [7, 38, 515, 620, 658], "argsort": [7, 161, 479, 506, 515, 598, 607, 620, 626, 658], "argument": [0, 11, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 79, 82, 83, 88, 92, 93, 102, 103, 112, 113, 141, 156, 173, 184, 204, 208, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 256, 262, 268, 269, 272, 276, 280, 289, 290, 294, 295, 296, 301, 303, 310, 314, 315, 316, 323, 326, 327, 332, 333, 334, 335, 336, 343, 344, 347, 353, 354, 355, 357, 459, 474, 491, 495, 496, 497, 504, 508, 509, 510, 512, 514, 517, 518, 556, 580, 581, 582, 584, 587, 589, 590, 591, 597, 601, 602, 603, 604, 605, 609, 614, 616, 621, 622, 623, 627, 636, 637, 645, 658, 665], "argwher": [7, 498], "ari": [44, 58, 59, 60, 176, 202, 266, 610, 646], "arithmet": [61, 257, 348, 349, 364, 365, 368, 370, 508, 615, 617, 643, 651, 661], "around": [7, 114, 257, 504, 514, 579, 595], "arr": [25, 26, 47, 104, 107, 190, 192, 264, 275, 516, 553, 578, 579, 631, 635, 640], "arr2": [192, 640], "arr_t": [54, 122, 440], "arrai": [0, 2, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 175, 176, 177, 178, 188, 190, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 379, 436, 437, 438, 439, 440, 441, 442, 443, 446, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 463, 465, 466, 468, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 661, 665], "array2str": 7, "array_equ": [7, 20, 275], "array_equiv": [7, 42], "array_lik": [25, 41, 45, 46, 47, 48, 49, 50, 53, 61, 81, 87, 89, 105, 108, 202, 213, 254, 255, 257, 275, 279, 288, 323, 329, 341, 494, 504, 507, 514, 515, 519, 594, 600, 606, 619, 623, 642], "array_of_diagon": 109, "array_repr": 7, "array_split": [7, 82, 83, 610], "array_str": 7, "array_util": 74, "arrays_and_dtyp": 589, "art": 11, "asanyarrai": [7, 46, 47, 50, 586], "asarrai": [4, 7, 45, 47, 48, 50, 53, 494, 586, 606], "asarray_chkfinit": [7, 45, 46], "ascend": [38, 120, 161, 305, 307, 438, 479, 598, 607], "ascii": 181, "ascontiguousarrai": [7, 45, 46, 47, 50, 586], "asfarrai": [45, 46], "asfortranarrai": [7, 45, 46, 47, 48, 586], "asin": [7, 31], "asinh": [7, 32], "asmatrix": 7, "aspect": 192, "assembl": [82, 83, 177, 267, 596, 614, 640, 647], "assert": [349, 365], "assign": [135, 159, 453, 477, 630, 634], "associ": [61, 248, 263, 264, 658], "assum": [11, 61, 96, 204, 221, 227, 229, 303, 313, 317, 321, 343, 627], "astyp": [7, 90, 257, 498], "atan": [7, 33], "atan2": [7, 34], "atanh": [7, 35], "atleast_1d": [7, 59, 60, 211], "atleast_2d": [7, 58, 60, 211], "atleast_3d": [7, 58, 59, 211], "atol": [20, 277], "attain": 0, "attempt": [113, 314], "attribut": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 235, 255, 271, 318, 502, 650, 651], "automat": [263, 264], "avail": [2, 3, 4, 11, 95, 179, 208, 355, 359, 360, 363, 366, 367, 651, 658], "averag": [7, 26, 145, 348, 349, 364, 365, 463, 617, 661], "avg": 61, "avoid": [41, 46, 59, 60, 221, 227, 229, 587], "aweight": 95, "ax": [19, 24, 26, 27, 36, 37, 61, 94, 96, 97, 110, 113, 166, 173, 203, 211, 217, 219, 220, 223, 224, 225, 228, 229, 231, 233, 239, 259, 274, 301, 311, 315, 320, 323, 324, 325, 326, 328, 342, 344, 345, 346, 348, 349, 352, 356, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 484, 491, 503, 504, 506, 511, 583, 588, 592, 593, 594, 613, 615, 617, 618, 623, 624, 625, 626, 638, 643, 645], "axi": [19, 21, 22, 24, 25, 26, 27, 36, 37, 38, 44, 61, 80, 81, 82, 83, 94, 96, 97, 98, 99, 100, 101, 104, 109, 110, 116, 117, 118, 119, 120, 125, 129, 130, 138, 144, 145, 146, 150, 151, 152, 155, 160, 161, 162, 163, 165, 170, 173, 175, 176, 177, 202, 203, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 239, 240, 241, 245, 246, 251, 257, 259, 266, 267, 273, 275, 301, 309, 315, 323, 327, 328, 329, 341, 342, 344, 346, 347, 348, 349, 352, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 436, 437, 438, 443, 447, 448, 456, 462, 463, 464, 468, 469, 470, 473, 478, 479, 480, 481, 483, 488, 491, 493, 504, 505, 506, 507, 511, 513, 514, 515, 578, 583, 585, 587, 588, 592, 593, 594, 596, 599, 606, 607, 610, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 632, 638, 640, 641, 643, 645, 646, 647, 658], "axis1": [109, 132, 166, 172, 450, 484, 490, 618, 625], "axis2": [109, 132, 166, 172, 450, 484, 490, 618, 625], "axisa": 96, "axisb": 96, "axisc": 96, "axiserror": [38, 607], "b": [11, 18, 20, 25, 26, 36, 37, 42, 43, 64, 70, 80, 82, 83, 89, 96, 99, 100, 101, 113, 133, 177, 178, 185, 191, 193, 196, 203, 204, 207, 249, 250, 260, 261, 267, 274, 275, 277, 282, 293, 297, 298, 301, 302, 309, 310, 311, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 337, 339, 344, 345, 346, 349, 352, 365, 451, 497, 499, 503, 509, 510, 530, 589, 596, 609, 614, 623, 624, 632, 644, 645, 647, 665], "b_ax": [323, 623], "b_i": [327, 645], "back": [138, 248, 251, 456, 578, 587, 588, 593, 632], "backend": [2, 258, 532, 534, 535, 545, 550, 566], "backward": [11, 54, 122, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 259, 440, 587, 592, 593], "bad": 541, "baltimor": 315, "bandlimit": 604, "bartlett": 7, "base": [0, 4, 62, 200, 203, 210, 213, 242, 257, 263, 264, 321, 331, 332, 333, 334, 335, 336, 341, 342, 344, 507, 509, 510, 514, 516, 645], "base_repr": [7, 62], "basic": [75, 203, 658, 661], "batch": 328, "bc": [302, 319], "bcde": 204, "becaus": [11, 19, 24, 221, 227, 229, 641, 658], "becom": [11, 18, 34, 56, 64, 66, 68, 69, 70, 88, 112, 173, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 263, 268, 294, 295, 296, 297, 298, 335, 336, 337, 339, 340, 347, 353, 354, 357, 491, 497, 499, 509, 510, 584, 590, 616, 636], "been": [177, 269, 515, 593, 620], "befor": [4, 25, 27, 38, 82, 83, 97, 120, 150, 161, 202, 222, 223, 224, 240, 241, 275, 325, 342, 346, 352, 368, 370, 438, 468, 479, 504, 511, 583, 592, 593, 607, 615, 617, 624, 643, 644], "before_1": 504, "before_n": 504, "begin": [202, 204, 257, 329, 341, 504, 599], "behav": [275, 330, 514], "behavior": [38, 120, 128, 161, 231, 326, 358, 438, 446, 479, 588, 607, 624], "behind": [150, 468], "being": [3, 90, 91, 178, 245, 246, 265, 347, 353, 504], "belong": [111, 263, 265], "below": [0, 4, 10, 16, 29, 31, 32, 35, 51, 52, 57, 90, 105, 108, 196, 227, 303, 313, 315, 326, 628, 629, 633, 641, 658], "bessel": 269, "best": 204, "beta": [7, 540], "between": [20, 28, 44, 74, 75, 90, 110, 202, 235, 250, 253, 259, 274, 275, 277, 329, 341, 504, 546, 560, 609, 616, 627, 641], "beyond": [4, 592], "bia": 95, "big": [181, 196], "bin": [62, 63, 111, 216, 218, 232, 263, 264, 265, 567], "bin_count": 265, "bin_edg": [263, 264], "bin_volum": 265, "binari": [62, 64, 65, 66, 67, 68, 69, 70, 249, 250, 252, 253, 276, 296, 590], "binary_repr": [7, 64, 65, 66, 67, 68, 69, 70, 276, 296, 590], "bincount": [7, 111, 263], "binomi": [7, 548], "bins_0": 264, "bins_1": 264, "bit": [62, 64, 65, 66, 67, 68, 69, 70, 181, 184, 185, 193, 235, 271, 276, 296, 337, 339, 340, 367, 369, 590, 602, 651, 661], "bitwis": [64, 68, 70], "bitwise_and": [7, 65, 67, 68, 70, 276, 337], "bitwise_count": 7, "bitwise_invert": [7, 67, 276], "bitwise_left_shift": [7, 296], "bitwise_not": 7, "bitwise_or": [7, 64, 65, 67, 70, 276, 339], "bitwise_right_shift": [7, 590], "bitwise_xor": [7, 64, 65, 67, 68, 276, 340], "biufcmmosuv": 191, "blackman": 7, "block": [7, 82, 83, 177, 234, 267, 293, 596, 614, 640, 647], "bmat": 7, "bool": [10, 19, 20, 23, 24, 36, 37, 38, 41, 42, 43, 46, 49, 54, 61, 75, 89, 90, 94, 97, 100, 101, 104, 111, 120, 122, 161, 178, 204, 207, 234, 248, 257, 260, 261, 263, 265, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 297, 298, 299, 311, 313, 315, 317, 321, 328, 329, 341, 342, 346, 348, 349, 350, 352, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 479, 498, 499, 511, 583, 587, 599, 602, 607, 615, 617, 619, 638, 642, 643, 658], "bool_": 10, "boolean": [64, 65, 67, 68, 70, 89, 97, 100, 101, 104, 186, 187, 189, 191, 213, 242, 248, 269, 273, 275, 276, 277, 280, 281, 283, 285, 286, 287, 292, 337, 339, 342, 343, 348, 349, 364, 365, 367, 368, 370, 498, 507, 583, 615, 619, 643], "boolean_sequ": 292, "both": [11, 18, 20, 25, 34, 42, 43, 56, 61, 64, 66, 68, 69, 70, 79, 88, 96, 112, 113, 207, 223, 230, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 274, 277, 293, 294, 295, 296, 297, 298, 310, 315, 323, 335, 336, 337, 339, 340, 344, 347, 353, 354, 357, 369, 497, 499, 509, 510, 584, 587, 590, 616, 623, 625, 630, 632, 634, 636, 644, 645, 648], "bound": [514, 515, 579, 598, 619, 620, 632], "boundari": [259, 514, 579], "box": 632, "branch": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57], "briefli": 658, "broadcast": [18, 19, 20, 24, 34, 36, 37, 43, 56, 61, 64, 66, 68, 69, 70, 71, 72, 73, 79, 88, 89, 94, 112, 203, 207, 213, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 285, 286, 294, 295, 296, 297, 298, 310, 311, 315, 317, 328, 335, 336, 337, 339, 340, 342, 344, 346, 347, 348, 349, 352, 353, 354, 357, 359, 360, 364, 365, 367, 368, 369, 370, 497, 499, 509, 510, 511, 514, 515, 583, 584, 585, 590, 615, 616, 617, 620, 624, 636, 643, 645, 648], "broadcast_arrai": [7, 72, 73], "broadcast_shap": 7, "broadcast_to": [7, 71, 72, 624], "brought": 11, "buffer": [49, 98, 99, 100, 101, 114, 248, 249, 250, 252, 253, 330, 346, 352, 361, 362], "buffer_lik": 249, "buffererror": 248, "build": 661, "build_loc": 4, "built": [62, 178, 181, 182, 188, 197], "busday_count": 7, "busday_offset": 7, "byte": [7, 54, 74, 122, 142, 147, 178, 179, 181, 189, 191, 194, 196, 203, 249, 250, 330, 440, 460, 465], "byteord": 196, "byteswap": 7, "bz2": 330, "c": [2, 4, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 91, 92, 93, 96, 101, 102, 103, 112, 113, 114, 122, 128, 138, 153, 156, 178, 179, 184, 185, 188, 191, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 258, 260, 261, 262, 268, 269, 272, 274, 276, 281, 282, 283, 284, 293, 294, 295, 296, 297, 298, 302, 309, 314, 315, 319, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 353, 354, 357, 440, 446, 456, 471, 474, 496, 497, 498, 499, 501, 502, 508, 509, 510, 512, 517, 518, 578, 579, 580, 582, 584, 586, 587, 588, 590, 591, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 623, 624, 636, 637, 638, 639, 645, 648, 649, 650, 665], "c_": 91, "c_contigu": [48, 50, 128, 446, 586], "c_k": 91, "ca": 86, "cach": 248, "calcul": [11, 14, 15, 18, 23, 34, 56, 61, 96, 97, 99, 101, 110, 112, 202, 203, 207, 209, 210, 212, 216, 225, 242, 243, 244, 247, 259, 264, 268, 304, 305, 306, 307, 309, 315, 317, 333, 335, 336, 342, 344, 348, 349, 354, 357, 364, 365, 368, 370, 499, 504, 509, 510, 511, 583, 584, 615, 616, 636, 643, 644, 651, 665], "call": [11, 23, 25, 27, 34, 36, 37, 38, 48, 50, 56, 63, 178, 222, 223, 224, 227, 230, 251, 275, 304, 306, 314, 322, 343, 349, 365, 379, 498, 613, 619, 624, 627, 665], "callabl": [251, 343], "cambridg": 11, "can": [0, 3, 4, 5, 11, 18, 20, 25, 26, 27, 28, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70, 75, 87, 88, 90, 96, 105, 106, 108, 109, 112, 113, 122, 128, 133, 159, 161, 171, 178, 184, 190, 192, 194, 196, 203, 204, 205, 206, 207, 214, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 232, 234, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 267, 268, 270, 273, 274, 276, 277, 279, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 308, 309, 312, 313, 315, 317, 323, 325, 326, 329, 330, 335, 336, 337, 339, 340, 341, 343, 344, 347, 351, 353, 354, 357, 367, 369, 440, 446, 451, 477, 479, 489, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 515, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 578, 579, 584, 586, 587, 590, 609, 616, 619, 620, 623, 625, 627, 628, 630, 634, 635, 636, 638, 642, 644, 648, 649, 650, 658, 665], "can_cast": [7, 661], "cannot": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 82, 83, 359, 360, 587, 610, 613, 614], "capabl": [13, 28, 41, 45, 46, 48, 50, 61, 215, 257, 329, 341, 344, 645], "cardin": 604, "cardinali": 604, "care": [28, 304], "cartesian": 350, "case": [4, 19, 24, 28, 36, 37, 41, 45, 46, 47, 48, 50, 61, 87, 96, 98, 99, 100, 101, 105, 108, 110, 141, 203, 204, 205, 206, 214, 218, 221, 226, 230, 232, 248, 249, 250, 251, 252, 254, 255, 257, 259, 270, 291, 304, 318, 321, 323, 329, 330, 336, 341, 351, 361, 362, 367, 369, 459, 500, 501, 502, 511, 578, 587, 588, 617, 623, 628, 641, 642, 649, 650, 658], "cast": [19, 24, 54, 75, 82, 83, 89, 97, 98, 99, 100, 101, 122, 203, 242, 267, 275, 304, 342, 344, 348, 349, 358, 361, 362, 364, 365, 367, 368, 369, 370, 440, 511, 583, 596, 614, 615, 617, 643, 645, 647], "cat": [531, 548], "cauchi": 567, "cbrt": [7, 611], "cdef": 204, "cdot": [91, 323, 327, 623, 645], "cdoubl": 10, "ceil": [7, 40, 236, 243, 244, 591, 595, 637], "center": [217, 218, 219, 220, 224, 225, 232], "central": [259, 549, 550], "certain": [192, 343], "ch": 11, "chain": [113, 133, 203, 204, 451], "chang": [27, 54, 87, 91, 96, 122, 138, 164, 173, 192, 196, 203, 213, 361, 362, 440, 456, 482, 491, 496, 507, 508, 514, 515, 516, 578, 587, 588, 593, 641, 661], "charact": [181, 182, 191, 250], "check": [19, 24, 45, 46, 47, 75, 221, 279, 282, 288, 291, 299, 317, 320, 658], "check_valid": 547, "chi": [533, 549], "chisquar": 7, "choic": [7, 78, 123, 216, 217, 219, 222, 223, 224, 228, 229, 231, 233, 305, 307, 441], "choicelist": [81, 599], "choleski": 7, "choos": [7, 23, 31, 33, 51, 55, 81, 204, 599, 648, 658], "chosen": [39, 263, 638, 648], "chunk": 63, "circ": 665, "circl": [319, 627], "clamp": [514, 515, 619, 620], "clariti": 234, "class": [3, 4, 114, 178, 237, 249, 250, 251, 253, 273, 330, 495, 519, 525, 557, 628, 661], "classic": 203, "clear": [192, 295, 658], "clip": [7, 514, 515, 579, 619, 620, 658], "close": [16, 17, 23, 29, 30, 31, 33, 51, 53, 54, 55, 122, 203, 211, 272, 329, 440, 525, 529, 557, 580, 581, 591, 595, 627], "closer": 637, "cloud": 3, "cmake": 4, "co": [7, 16, 17, 29, 30, 31, 51, 93, 306, 603, 621, 627], "coars": [316, 503], "code": [49, 181, 182, 191, 196, 280, 290, 586], "codeplai": 4, "coeffici": [90, 309, 320, 325], "coerc": [49, 249, 250, 251, 252, 253, 330], "coin": 531, "col": 273, "collaps": [138, 456, 638], "collect": 291, "column": [7, 45, 46, 47, 48, 50, 53, 54, 80, 82, 83, 90, 98, 99, 100, 101, 109, 122, 177, 214, 234, 240, 241, 259, 266, 267, 270, 304, 305, 309, 314, 318, 320, 321, 440, 578, 579, 586, 596, 610, 614, 628, 630, 634, 639, 642, 647], "column_stack": [7, 82, 83, 177, 267, 596, 614, 647], "com": 4, "combin": [0, 178, 187, 211, 219, 224, 229, 233, 259], "combinatori": 204, "come": 638, "comma": [178, 203], "command": 4, "common": [18, 34, 56, 64, 66, 68, 69, 70, 88, 91, 112, 207, 222, 223, 224, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 294, 295, 296, 297, 298, 323, 335, 336, 337, 339, 340, 347, 353, 354, 357, 497, 498, 499, 509, 510, 584, 590, 616, 623, 636], "common_typ": 7, "compani": [531, 548], "compar": [20, 38, 42, 120, 161, 207, 245, 246, 264, 277, 316, 347, 353, 438, 479, 607], "comparison": [2, 20, 207, 260, 261, 297, 298, 499, 651, 661], "compat": [2, 3, 4, 11, 19, 24, 54, 61, 96, 98, 99, 100, 101, 109, 122, 301, 303, 310, 311, 316, 317, 326, 327, 328, 342, 344, 348, 349, 363, 364, 365, 366, 368, 370, 440, 503, 583, 587, 615, 625, 643, 644, 645, 651, 661], "compil": [4, 178, 179, 188, 258, 586], "complement": [62, 641], "complementari": [244, 641], "complet": [3, 4, 204, 250, 251, 318, 593, 658], "complex": [11, 13, 14, 15, 16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 41, 42, 51, 52, 55, 56, 57, 75, 91, 97, 113, 126, 127, 191, 204, 208, 215, 216, 217, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 242, 245, 246, 272, 278, 279, 280, 287, 288, 295, 304, 305, 306, 307, 310, 318, 319, 321, 327, 342, 344, 347, 353, 358, 368, 370, 444, 445, 512, 580, 581, 583, 608, 615, 638, 643, 644, 645, 658, 661], "complex128": [10, 13, 61, 280, 589], "complex64": [10, 61, 74, 91, 160, 242, 478], "compliant": 114, "complic": [203, 665], "compon": [11, 42, 96, 220, 225, 232, 235, 272, 313, 323, 358, 580, 623], "compos": 88, "composit": [99, 101, 293, 617, 627], "compress": [7, 213, 599, 619, 658], "comput": [4, 11, 16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 40, 51, 52, 55, 56, 57, 61, 63, 64, 65, 67, 68, 70, 76, 84, 85, 90, 91, 92, 93, 97, 98, 99, 100, 101, 110, 111, 203, 209, 210, 211, 212, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 243, 259, 260, 261, 262, 263, 264, 265, 272, 273, 276, 293, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 337, 338, 339, 340, 342, 344, 348, 349, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 496, 503, 508, 512, 580, 582, 583, 584, 591, 595, 597, 601, 602, 603, 605, 611, 615, 617, 621, 622, 623, 627, 630, 634, 643, 645], "compute_uv": [300, 321, 322], "concat": [7, 83], "concaten": [7, 80, 82, 177, 267, 275, 596, 610, 614, 620, 640, 647], "concept": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650, 658], "cond": [7, 308], "condit": [39, 54, 81, 113, 122, 125, 213, 300, 308, 314, 440, 443, 498, 507, 514, 516, 599, 648], "condlist": 599, "confus": 247, "conj": [7, 85, 221, 272, 299, 304, 512], "conjug": [7, 11, 84, 91, 113, 126, 227, 230, 272, 299, 304, 305, 306, 307, 310, 327, 344, 444, 512, 644, 645], "consecut": [110, 202, 259], "conserv": 350, "consid": [20, 28, 41, 42, 45, 46, 48, 50, 204, 232, 257, 277, 281, 305, 307, 313, 329, 341, 344, 525, 557, 588, 609, 638, 645], "consist": [42, 43, 202, 216, 217, 219, 222, 223, 224, 228, 229, 231, 233, 250, 264, 291, 323, 325, 329, 620, 623], "constant": [10, 185, 259, 504], "constant_valu": 504, "constraint": 61, "construct": [45, 46, 47, 78, 81, 105, 108, 109, 123, 178, 214, 248, 249, 250, 251, 252, 253, 270, 292, 295, 330, 351, 441, 500, 599, 604, 624, 625, 648, 651], "constructor": 658, "consum": [147, 465], "contain": [5, 11, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 47, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 88, 89, 90, 92, 93, 96, 97, 109, 112, 156, 178, 186, 207, 209, 210, 212, 217, 218, 219, 222, 227, 230, 232, 238, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 260, 261, 263, 264, 268, 272, 273, 276, 296, 297, 298, 301, 303, 305, 318, 321, 323, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 347, 348, 353, 354, 357, 359, 360, 363, 364, 366, 368, 370, 474, 496, 498, 499, 506, 508, 509, 510, 512, 519, 580, 582, 583, 584, 590, 591, 595, 597, 601, 602, 603, 604, 605, 611, 612, 615, 616, 621, 622, 623, 626, 630, 631, 632, 634, 635, 636, 637, 643, 658], "content": [48, 121, 349, 365, 439, 566, 661], "context": 11, "contigu": [45, 46, 47, 48, 50, 74, 113, 153, 203, 282, 314, 471, 578, 586, 587], "continu": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 527, 561, 604], "contourf": 350, "contract": [203, 204, 323, 623], "contrari": [301, 303, 310, 326, 327], "contrast": [203, 514], "contribut": [11, 61, 263, 264], "control": [4, 54, 75, 82, 83, 89, 122, 203, 267, 344, 440, 596, 614, 645, 647], "conveni": [133, 173, 451, 491, 529], "convent": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 113, 203, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 274, 310, 323, 325, 344, 503, 623, 645], "convers": [54, 122, 203, 440, 651], "convert": [25, 36, 37, 41, 45, 46, 47, 48, 49, 50, 53, 58, 59, 60, 87, 102, 103, 105, 108, 178, 203, 204, 211, 254, 255, 257, 275, 279, 288, 329, 341, 517, 518, 579, 586, 639, 641, 642], "convolut": [11, 86, 91], "convolv": [7, 91], "coolei": 11, "coordin": [94, 251, 259, 273, 292, 350, 579, 639], "copi": [7, 25, 28, 38, 41, 42, 45, 46, 47, 48, 49, 50, 54, 58, 59, 60, 81, 89, 104, 105, 106, 108, 109, 120, 121, 122, 138, 141, 150, 156, 159, 161, 171, 178, 205, 206, 213, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 275, 329, 330, 341, 343, 349, 350, 351, 358, 365, 376, 379, 438, 439, 440, 456, 459, 468, 474, 477, 479, 489, 500, 501, 502, 505, 507, 508, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 578, 586, 587, 588, 598, 607, 613, 628, 629, 630, 633, 634, 642, 649, 650, 658], "copysign": [7, 496, 508], "copyto": [7, 128, 213, 446, 507], "core": [3, 203, 645, 658], "corner": [217, 219, 223, 224, 504], "corrcoef": [7, 95], "correct": [14, 15, 16, 17, 18, 23, 25, 29, 30, 31, 32, 33, 34, 35, 39, 40, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 82, 83, 84, 85, 88, 92, 93, 102, 103, 112, 207, 209, 210, 212, 215, 221, 227, 229, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 268, 269, 272, 276, 281, 283, 284, 294, 295, 296, 297, 298, 320, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 353, 354, 357, 496, 497, 499, 508, 509, 510, 512, 517, 518, 580, 582, 584, 586, 590, 591, 595, 597, 601, 602, 603, 604, 605, 609, 611, 612, 614, 616, 621, 622, 636, 637], "correctli": [23, 31, 33, 36, 37, 51, 55, 94, 311, 315, 328, 346, 352, 359, 360, 367, 369, 498, 511, 617], "correl": [7, 90, 661], "correspond": [7, 11, 28, 36, 37, 41, 44, 45, 46, 47, 48, 49, 50, 54, 79, 82, 83, 87, 102, 103, 105, 106, 108, 109, 122, 128, 134, 171, 176, 205, 206, 214, 217, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 265, 266, 270, 273, 292, 301, 304, 305, 323, 327, 329, 330, 341, 343, 344, 351, 440, 446, 452, 489, 500, 501, 502, 506, 517, 518, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 592, 599, 600, 610, 615, 623, 626, 627, 628, 630, 634, 642, 643, 645, 646, 649, 650, 658], "correspondingli": [11, 610], "cosh": [7, 17, 30, 92, 605, 622], "cosin": [16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 603, 605, 621, 622], "cost": [203, 204], "costli": 204, "could": [161, 221, 227, 229, 479], "count": [19, 24, 63, 94, 111, 186, 204, 239, 249, 250, 252, 253, 259, 263, 264, 498, 511, 531, 606, 617, 638, 651, 661], "count_nonzero": [7, 498], "counterclockwis": [240, 241, 594], "counterpart": [11, 221, 227, 229, 658], "cov": [7, 90, 547], "covari": [90, 95], "cover": [630, 634, 661], "cpu": [4, 28, 41, 45, 46, 47, 48, 50, 87, 95, 105, 108, 205, 206, 208, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 270, 329, 330, 341, 351, 355, 367, 500, 501, 502, 628, 642, 649, 650], "creat": [3, 4, 28, 41, 43, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 107, 108, 109, 122, 128, 178, 204, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 358, 440, 446, 500, 501, 502, 504, 515, 519, 524, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 625, 628, 630, 631, 634, 635, 642, 649, 650, 658, 661], "creation": [192, 204, 651, 658, 661, 665], "crop": [216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 632], "cross": [7, 91, 292], "csingl": 10, "ct": 11, "ctype": 586, "cube": [76, 242, 611], "cubic": 204, "cuda": 4, "cumprod": [7, 100, 361, 658], "cumsum": [7, 101, 110, 362, 617, 627, 658], "cumul": [97, 98, 99, 100, 101, 110, 129, 130, 361, 362, 447, 448, 617, 627], "cumulative_prod": [7, 98], "cumulative_sum": [7, 99], "cupi": [2, 651], "current": [11, 14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 88, 92, 93, 102, 103, 112, 159, 192, 196, 204, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 250, 256, 262, 264, 268, 270, 276, 294, 295, 296, 332, 333, 334, 335, 336, 347, 353, 354, 355, 357, 477, 496, 497, 504, 508, 509, 510, 512, 517, 518, 582, 584, 586, 590, 591, 597, 601, 602, 603, 605, 609, 616, 621, 622, 636, 637], "curv": 627, "custom": 658, "customarili": 11, "cut": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 309, 645], "cutoff": 317, "cycl": [218, 232, 292, 588], "cyclic": 514, "cython": 4, "d": [0, 19, 24, 26, 27, 28, 61, 80, 81, 82, 83, 90, 98, 99, 105, 106, 107, 108, 109, 113, 138, 177, 182, 214, 218, 220, 225, 232, 234, 238, 240, 241, 253, 265, 266, 267, 270, 274, 292, 302, 303, 305, 306, 310, 314, 315, 319, 323, 326, 344, 350, 361, 362, 369, 456, 498, 509, 510, 511, 514, 534, 578, 587, 596, 598, 600, 614, 617, 619, 623, 624, 625, 638, 642, 645, 647, 658], "d0": [526, 556, 558], "d1": [526, 556, 558], "d3": 106, "data": [1, 3, 4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 102, 103, 105, 108, 111, 112, 113, 120, 121, 122, 156, 161, 171, 173, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 221, 227, 229, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 280, 281, 283, 284, 285, 286, 288, 294, 295, 296, 297, 298, 303, 309, 316, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 347, 348, 349, 353, 354, 355, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 370, 438, 439, 440, 474, 479, 489, 491, 494, 496, 497, 499, 501, 502, 507, 508, 509, 510, 512, 514, 515, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 551, 552, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 620, 621, 622, 625, 628, 632, 636, 637, 643, 645, 647, 648, 649, 650, 651, 661], "datatyp": [192, 313], "date": 4, "datetim": 191, "datetime_as_str": 7, "datetime_data": 7, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [95, 163, 175, 368, 370, 481, 493, 615, 643], "decai": 542, "decim": [40, 62, 157, 235, 236, 475, 591, 595], "decomposit": [299, 308, 313, 317, 321, 322, 661], "decompress": 330, "decreas": [111, 627], "decreasingli": [11, 217, 219, 223, 224], "deem": 248, "def": [0, 26, 504], "default": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 120, 122, 128, 138, 161, 171, 196, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 309, 311, 313, 314, 315, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 456, 479, 489, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 523, 529, 533, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 567, 568, 570, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 658], "default_devic": 13, "default_dtyp": 13, "default_rng": 7, "defg": 204, "defici": 313, "defin": [11, 13, 34, 56, 91, 96, 104, 184, 185, 188, 206, 216, 245, 246, 255, 262, 263, 264, 275, 301, 303, 315, 327, 347, 353, 358, 502, 508, 581, 594, 645, 650, 658], "definit": [91, 96, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 243, 299, 627], "deg": [23, 518], "deg2rad": [7, 517, 518, 641], "degre": [7, 23, 102, 368, 370, 517, 518, 571, 594, 615, 641, 643, 665], "del": 665, "delet": [7, 25, 275], "delta": [11, 368, 370, 615, 641, 643], "demonstr": [0, 4, 185], "denot": [91, 269, 327, 645], "dens": [273, 292, 351], "densiti": [263, 265], "depend": [4, 13, 27, 38, 39, 81, 109, 120, 161, 215, 221, 227, 229, 248, 303, 305, 309, 315, 318, 320, 321, 329, 367, 369, 438, 479, 599, 607, 648], "depth": [80, 82, 83, 176, 177, 267, 596, 610, 614, 647], "deriv": [248, 259], "descend": [38, 120, 161, 321, 438, 479, 607], "describ": [97, 178, 184, 185, 195, 198, 200, 265, 315, 326, 342, 583, 661], "descript": [97, 183, 222, 224, 263, 342, 583, 658], "design": [11, 62], "desir": [28, 41, 45, 46, 48, 50, 53, 73, 205, 206, 214, 222, 223, 224, 254, 255, 257, 270, 329, 341, 501, 502, 578, 624, 628, 649, 650], "destin": [82, 83, 267, 356, 514, 515, 596, 614, 620, 647], "destruct": 665, "det": [7, 319], "detail": [40, 217, 219, 223, 224, 228, 229, 231, 233, 311, 328, 595, 630, 631, 634, 635, 638, 658], "determin": [16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 76, 88, 92, 93, 102, 103, 112, 209, 210, 212, 244, 245, 246, 247, 250, 251, 253, 268, 296, 302, 303, 309, 318, 319, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 344, 347, 353, 354, 357, 497, 509, 510, 517, 518, 579, 582, 584, 590, 597, 599, 601, 603, 604, 605, 609, 611, 612, 616, 621, 622, 625, 636, 637, 639, 645], "devel": 4, "develop": [3, 4], "deviat": [163, 348, 364, 368, 370, 481, 526, 544, 551, 615, 643], "devic": [0, 2, 3, 13, 28, 41, 45, 46, 47, 48, 49, 50, 54, 61, 87, 97, 105, 106, 108, 114, 122, 128, 171, 203, 205, 206, 214, 215, 218, 232, 236, 248, 249, 250, 251, 252, 253, 254, 255, 257, 269, 270, 273, 329, 330, 341, 342, 343, 344, 348, 349, 351, 364, 365, 368, 370, 440, 446, 489, 500, 501, 502, 519, 521, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 583, 613, 615, 628, 630, 634, 642, 643, 645, 649, 650], "device_id": 248, "device_typ": 248, "df": [533, 549, 571, 572], "dfden": [537, 550], "dfnum": [537, 550], "dft": [11, 216, 221, 222, 226, 227, 230], "di": [106, 107], "diag": [7, 26, 81, 108, 109, 203, 214, 240, 241, 270, 304, 306, 321, 599, 625], "diag_indic": [7, 107, 234], "diag_indices_from": [7, 106, 234], "diagflat": [7, 105, 109, 625], "diagon": [7, 81, 105, 106, 107, 108, 172, 203, 214, 234, 270, 299, 305, 306, 307, 326, 343, 490, 599, 625, 628, 629, 630, 631, 633, 634, 635, 658], "dice": 546, "dict": [178, 504], "dictionari": [178, 184, 192], "diff": [7, 99, 101, 202, 259, 263], "differ": [3, 11, 20, 27, 28, 41, 44, 45, 46, 47, 48, 50, 61, 87, 91, 97, 99, 100, 101, 105, 108, 110, 128, 178, 182, 192, 196, 197, 202, 205, 206, 214, 217, 218, 222, 223, 225, 228, 231, 232, 235, 240, 241, 242, 249, 250, 251, 252, 254, 255, 257, 259, 265, 270, 275, 277, 307, 315, 326, 329, 330, 341, 342, 344, 351, 446, 500, 501, 502, 507, 509, 510, 515, 583, 588, 594, 616, 620, 628, 630, 634, 641, 642, 649, 650, 661], "differenti": 604, "digit": [7, 11, 63, 235, 263], "dim": [20, 579], "dimens": [19, 24, 25, 26, 27, 36, 37, 41, 58, 59, 60, 61, 80, 82, 83, 89, 94, 95, 96, 100, 101, 106, 109, 110, 138, 143, 148, 159, 176, 180, 195, 200, 211, 223, 224, 236, 240, 241, 259, 265, 267, 273, 274, 292, 301, 303, 311, 313, 315, 318, 322, 323, 326, 327, 328, 342, 345, 346, 348, 349, 350, 351, 352, 356, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 456, 461, 466, 477, 494, 495, 498, 500, 511, 515, 527, 529, 556, 559, 561, 562, 564, 578, 579, 583, 587, 594, 600, 610, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 630, 631, 632, 634, 635, 638, 639, 640, 643, 645, 646, 658, 661], "dimension": [2, 4, 26, 38, 63, 86, 91, 94, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 162, 202, 203, 216, 217, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 249, 250, 252, 259, 266, 273, 275, 291, 292, 301, 309, 316, 318, 320, 324, 325, 342, 346, 350, 351, 352, 359, 360, 363, 366, 368, 370, 480, 494, 495, 500, 503, 511, 583, 607, 615, 617, 619, 624, 627, 638, 643, 644, 646, 651], "direct": [11, 96, 110, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 240, 241, 259, 301, 497, 594], "directli": [183, 184, 251, 273, 341, 498, 620], "directori": 258, "dirichlet": 7, "discard": 637, "discont": 641, "discontinu": 641, "discret": [3, 86, 91, 99, 101, 110, 202, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 259, 525, 529, 604, 651, 661], "dispers": 574, "displac": [164, 482], "disregard": 588, "distanc": [259, 609], "distinct": [245, 246, 347, 353, 588], "distinguish": 186, "distribut": [3, 4, 341, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 563, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 661], "divid": [7, 44, 176, 177, 244, 247, 266, 354, 584, 610, 636, 646], "divis": [112, 244, 247, 354, 509, 510, 584, 610, 636, 637], "divisor": [256, 294, 368, 370, 615, 643], "divmod": [7, 658], "dldevicetyp": 248, "dn": [526, 556, 558], "do": [3, 4, 193, 343, 349, 365, 531, 593, 627], "docstr": [91, 658], "document": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 172, 173, 175, 176, 177, 185, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 458, 459, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 488, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658], "doe": [25, 28, 44, 75, 81, 104, 141, 203, 213, 215, 230, 245, 246, 248, 275, 318, 358, 361, 362, 459, 507, 588, 610, 619], "domain": [11, 221, 226], "done": [3, 54, 122, 171, 203, 325, 440, 489, 638, 641], "dot": [7, 203, 204, 274, 299, 306, 308, 314, 317, 318, 320, 321, 323, 324, 325, 327, 344, 623, 644, 645], "doubl": [10, 323, 542, 623], "down": 241, "dp": [112, 302, 305, 319, 320, 509, 510, 616, 636], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 114, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 359, 360, 363, 366, 367, 440, 446, 489, 500, 501, 502, 513, 519, 521, 522, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "dpnp": [0, 2, 3, 4, 5, 11, 651, 658, 661, 662, 665], "dpnp_arrai": [28, 41, 45, 46, 47, 48, 50, 54, 87, 105, 106, 108, 205, 206, 214, 218, 232, 235, 249, 250, 251, 252, 253, 254, 255, 257, 270, 271, 273, 329, 330, 341, 343, 351, 371, 440, 446, 489, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650, 651], "dpnp_iface_arraycr": [351, 500], "draw": [523, 524, 525, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 563, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576], "drawn": [81, 523, 525, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 554, 555, 557, 560, 563, 569, 570, 571, 572, 573, 574, 575, 576, 577, 599], "drill": [531, 548], "driver": 2, "drop": [3, 192], "dsplit": [7, 82, 83, 177, 610], "dst": 89, "dstack": [7, 80, 82, 83, 267, 596, 610, 614, 647], "dt": [171, 181, 183, 184, 188, 190, 191, 192, 194, 197, 198, 489, 627], "dt2": 192, "dtype": [0, 10, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 112, 114, 122, 129, 130, 145, 151, 160, 163, 165, 171, 172, 175, 203, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 267, 268, 270, 271, 273, 275, 276, 280, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 314, 317, 321, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 376, 440, 447, 448, 463, 469, 478, 481, 483, 489, 490, 493, 496, 497, 499, 501, 502, 508, 509, 510, 511, 512, 517, 518, 523, 525, 529, 551, 557, 573, 582, 583, 584, 586, 589, 590, 591, 595, 596, 597, 601, 602, 603, 604, 605, 608, 609, 611, 612, 614, 615, 616, 617, 619, 621, 622, 625, 628, 629, 633, 636, 637, 643, 645, 646, 647, 649, 650, 658], "due": [230, 665], "dump": 7, "dx": [259, 627], "dy": 259, "dz": 259, "e": [10, 11, 17, 30, 32, 52, 66, 97, 98, 100, 109, 183, 205, 206, 211, 214, 217, 221, 222, 223, 224, 227, 229, 230, 242, 250, 254, 255, 259, 270, 296, 304, 319, 324, 328, 331, 349, 365, 501, 502, 529, 581, 585, 588, 618, 628, 640, 649, 650], "ea": 204, "each": [0, 14, 15, 16, 17, 18, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 44, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 81, 84, 85, 88, 90, 92, 93, 98, 99, 100, 101, 106, 109, 111, 112, 157, 176, 182, 184, 197, 204, 207, 209, 210, 212, 217, 219, 221, 223, 224, 227, 228, 229, 231, 233, 240, 241, 242, 243, 244, 247, 251, 259, 260, 261, 263, 264, 265, 266, 269, 272, 276, 281, 283, 284, 292, 296, 297, 298, 301, 304, 305, 306, 307, 309, 322, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 354, 356, 357, 358, 475, 495, 496, 498, 499, 504, 508, 509, 510, 512, 515, 531, 548, 579, 580, 582, 584, 585, 588, 590, 591, 592, 595, 597, 601, 602, 603, 605, 610, 611, 612, 614, 616, 620, 621, 622, 624, 627, 630, 631, 634, 635, 636, 637, 638, 639, 645, 646, 658], "easier": 619, "easiest": [4, 504], "easili": [0, 264], "edg": [79, 111, 263, 264, 265, 504, 632], "edge_ord": 259, "ediff1d": [7, 110, 259], "effect": [204, 242, 245, 246, 347, 353, 509, 510, 641], "effici": [11, 216, 230, 250, 313, 317, 321], "efgh": 204, "eig": [7, 305, 306, 307], "eigenvalu": [304, 305, 306, 307, 661], "eigenvector": [304, 305, 306, 307], "eigh": [7, 304, 306, 307], "eight": 315, "eigval": [7, 304, 305, 307], "eigvalsh": [7, 304, 305, 306], "einstein": [113, 203, 204, 274, 323, 325, 344, 503, 623, 645], "einsum": [7, 113, 204, 274, 323, 325, 344, 503, 623, 645], "einsum_path": [7, 203], "either": [27, 42, 43, 50, 61, 96, 97, 109, 181, 192, 217, 219, 221, 223, 224, 227, 229, 231, 233, 234, 259, 269, 274, 303, 305, 307, 315, 318, 342, 359, 360, 363, 366, 367, 369, 579, 583, 588, 598, 599, 620, 627], "element": [4, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 47, 51, 52, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 84, 85, 88, 89, 92, 93, 97, 98, 99, 100, 101, 104, 107, 109, 110, 111, 112, 116, 117, 120, 126, 127, 129, 130, 134, 135, 138, 141, 142, 145, 147, 149, 150, 155, 156, 157, 158, 160, 161, 163, 164, 170, 175, 178, 180, 184, 190, 202, 204, 207, 209, 210, 212, 213, 214, 215, 217, 219, 223, 224, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 295, 296, 297, 298, 299, 301, 303, 306, 312, 323, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 350, 352, 353, 354, 355, 357, 358, 361, 362, 363, 366, 367, 368, 369, 370, 434, 435, 438, 444, 445, 447, 448, 452, 453, 456, 459, 460, 463, 465, 467, 468, 473, 474, 475, 476, 478, 479, 481, 482, 488, 493, 495, 496, 497, 498, 499, 507, 508, 509, 510, 511, 512, 514, 516, 578, 580, 581, 582, 583, 584, 585, 587, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 611, 612, 615, 616, 617, 619, 621, 622, 623, 624, 625, 627, 629, 631, 633, 635, 636, 637, 638, 639, 641, 643, 645, 648, 658, 661, 665], "element_count": [160, 478, 606], "elimin": 26, "ellipsi": 203, "els": [0, 181, 196, 319, 377], "elsewher": [214, 270, 628, 648], "empti": [4, 7, 41, 135, 206, 217, 219, 223, 224, 228, 229, 231, 233, 250, 254, 255, 309, 453, 501, 502, 504, 507, 610, 649, 650, 658], "empty_lik": [7, 41, 205, 255, 502, 650], "en": 91, "enabl": [171, 234, 313, 317, 321, 489], "enable_profil": [171, 489], "encount": [361, 362, 363, 366, 599], "end": [25, 28, 74, 104, 109, 200, 202, 204, 222, 257, 275, 329, 341, 504], "end_tim": 0, "end_valu": 504, "endian": [181, 196], "endpoint": [28, 257, 329, 341, 627], "engin": 565, "enlarg": 588, "enough": 263, "ensur": 586, "entir": [61, 97, 221, 263, 264, 342, 348, 363, 364, 366, 368, 370, 504, 583, 615, 643], "entiti": 588, "entri": [44, 81, 104, 162, 176, 184, 205, 213, 221, 227, 229, 234, 239, 240, 241, 265, 266, 480, 610, 613, 645, 646], "enumer": 248, "env": 4, "environ": 4, "ep": [235, 313, 317, 497, 581, 609], "epsilon": [313, 581], "epsneg": 235, "equal": [7, 19, 20, 24, 26, 38, 42, 43, 44, 61, 63, 66, 69, 82, 83, 95, 99, 101, 120, 150, 161, 176, 214, 257, 259, 260, 261, 263, 264, 265, 266, 267, 277, 279, 280, 288, 290, 296, 297, 298, 303, 312, 317, 318, 325, 329, 341, 354, 438, 468, 479, 499, 504, 529, 539, 573, 584, 590, 591, 595, 596, 601, 604, 607, 610, 613, 614, 628, 630, 634, 640, 646, 647], "equal_nan": [20, 42, 277, 638], "equat": [309, 320, 324, 325, 661], "equiv": [54, 75, 82, 83, 89, 122, 203, 267, 312, 344, 440, 596, 614, 645, 647], "equival": [11, 18, 19, 21, 22, 24, 26, 27, 36, 37, 38, 40, 43, 61, 62, 81, 87, 96, 97, 102, 103, 104, 112, 113, 116, 117, 132, 148, 156, 159, 173, 176, 177, 204, 211, 213, 238, 245, 246, 247, 265, 266, 292, 322, 323, 324, 328, 342, 345, 354, 357, 379, 434, 435, 450, 466, 474, 477, 491, 494, 498, 503, 506, 508, 517, 518, 525, 557, 583, 584, 587, 594, 595, 600, 616, 617, 619, 623, 626, 636, 638, 640, 645, 646, 658, 665], "error": [62, 97, 176, 203, 208, 221, 226, 266, 304, 342, 579, 583, 610, 613, 646, 651, 658], "essenti": 4, "estim": [95, 264, 531, 548, 627], "et": 11, "etc": [11, 41, 46, 188, 217, 219, 223, 224, 228, 229, 231, 233, 548], "euclidean": 309, "euler_gamma": 10, "evalu": [19, 20, 24, 116, 117, 203, 204, 207, 269, 279, 282, 288, 323, 325, 350, 434, 435, 503, 599, 623], "even": [11, 143, 181, 218, 220, 221, 222, 225, 226, 227, 229, 230, 232, 279, 282, 288, 349, 365, 461, 504, 591, 595], "evenli": [28, 257, 329, 341, 591, 627], "event": 336, "everi": [62, 74, 229, 515, 620], "everywher": [227, 604], "exact": [213, 314, 507], "exactli": [11, 53, 253, 320, 525, 557, 599], "examin": 309, "exampl": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 140, 141, 143, 148, 150, 154, 156, 159, 160, 161, 164, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 450, 451, 453, 456, 458, 459, 461, 466, 468, 472, 474, 477, 478, 479, 482, 489, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658, 665], "exce": [336, 610], "except": [4, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 82, 83, 84, 85, 87, 88, 92, 93, 102, 103, 110, 111, 112, 113, 122, 141, 205, 206, 207, 209, 210, 212, 214, 215, 228, 229, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 266, 267, 268, 270, 276, 281, 283, 284, 291, 294, 295, 296, 297, 298, 314, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 346, 347, 348, 352, 353, 354, 357, 363, 364, 366, 367, 368, 369, 370, 440, 459, 496, 497, 499, 501, 502, 508, 509, 510, 511, 512, 517, 518, 578, 582, 584, 585, 586, 590, 591, 597, 601, 602, 603, 605, 607, 609, 610, 611, 612, 615, 616, 617, 621, 622, 636, 637, 643, 645, 649, 650, 661], "exclud": [14, 15, 25, 329, 529, 573], "exclus": [525, 557], "execut": [3, 4, 26, 45, 46, 47, 95, 171, 208, 251, 355, 367, 489, 532, 534, 535, 545, 550, 566, 665], "executor": 0, "exist": [11, 80, 82, 83, 177, 183, 211, 248, 267, 275, 596, 610, 614, 640, 647, 661], "exp": [7, 11, 210, 212, 216, 319, 333, 335, 342], "exp2": [7, 209, 212], "expand": [110, 211], "expand_dim": [7, 36, 37], "expect": [4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 30, 31, 32, 33, 34, 35, 40, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 84, 85, 88, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 112, 113, 192, 207, 209, 210, 212, 215, 227, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 268, 269, 272, 276, 277, 281, 283, 284, 294, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 348, 349, 352, 353, 354, 357, 361, 362, 364, 365, 367, 368, 369, 370, 496, 497, 499, 508, 509, 510, 511, 512, 517, 518, 580, 582, 583, 584, 590, 591, 595, 597, 601, 602, 603, 604, 605, 609, 611, 612, 615, 616, 617, 621, 622, 636, 637, 643, 648], "explain": [219, 224, 229, 233, 658], "explan": 185, "explicit": [203, 248], "explicitli": [109, 217, 219, 223, 224, 228, 229, 231, 233, 265], "exploit": [11, 230], "explor": [204, 531, 548], "expm1": [7, 209, 210, 333], "expon": [11, 209, 210, 212, 242, 295, 312, 335, 336, 342, 509, 510, 555, 661], "exponenti": [7, 11, 204, 335, 336, 342, 542, 568], "expos": [249, 658], "express": [11, 16, 17, 26, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 203, 204, 295, 330, 665], "extend": [11, 188, 293, 504, 658], "extens": [0, 1, 3, 4, 10, 258, 330, 651], "extra": [200, 227, 253], "extract": [7, 81, 105, 108, 109, 203, 214, 238, 270, 273, 343, 507, 599, 619, 625], "extrapol": 588, "extrema": 661, "ey": [7, 74, 84, 85, 94, 133, 223, 224, 245, 246, 270, 274, 293, 308, 312, 313, 324, 325, 326, 340, 347, 353, 451, 600, 625], "f": [0, 7, 11, 14, 15, 16, 17, 18, 23, 26, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 128, 138, 191, 203, 205, 206, 207, 209, 210, 212, 214, 215, 218, 230, 232, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 259, 260, 261, 262, 268, 269, 272, 276, 281, 282, 283, 284, 294, 295, 296, 297, 298, 312, 315, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 353, 354, 357, 440, 446, 456, 496, 497, 499, 501, 502, 508, 509, 510, 512, 517, 518, 550, 578, 579, 580, 582, 584, 586, 587, 590, 591, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 632, 636, 637, 639, 645, 648, 649, 650], "f0": 178, "f1": 178, "f2": 178, "f4": 75, "f8": [75, 178, 183, 188, 191], "f_contigu": [48, 50, 282, 586], "f_k": 11, "fab": [7, 14, 15], "fact": 306, "factor": [11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 299, 318], "fail": [159, 477, 531], "fall": 265, "fallback": [304, 306, 532, 534, 535, 545, 550, 566], "fals": [19, 20, 21, 22, 23, 24, 36, 37, 38, 41, 42, 43, 46, 48, 50, 54, 61, 64, 65, 67, 70, 71, 73, 75, 81, 87, 90, 94, 95, 97, 99, 100, 101, 104, 111, 116, 117, 118, 119, 120, 122, 144, 145, 146, 151, 161, 163, 165, 175, 178, 203, 204, 206, 207, 213, 234, 248, 251, 255, 257, 260, 261, 263, 265, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 297, 298, 299, 300, 311, 313, 315, 317, 321, 322, 328, 329, 337, 338, 339, 340, 341, 342, 346, 348, 349, 350, 352, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 377, 434, 435, 436, 437, 438, 440, 462, 463, 464, 469, 479, 481, 483, 493, 498, 499, 502, 511, 513, 583, 586, 587, 599, 602, 607, 615, 617, 638, 642, 643, 648, 650], "famili": 11, "fanci": 619, "fashion": [336, 658], "fast": [11, 216, 217, 219, 223, 224, 229, 230, 233], "faster": [11, 26, 62, 245, 246], "fastest": [138, 282, 456, 578, 587], "fb": [204, 632], "featur": 192, "fetch": 587, "few": 234, "fft": [5, 7, 661], "fft2": [7, 216, 219, 223], "fftfreq": [7, 11, 216, 220, 225, 232], "fftn": [7, 216, 217, 224, 230, 233], "fftshift": [7, 11, 217, 219, 224, 225], "fh": 250, "field": [178, 186, 187, 188, 192, 194, 196, 200, 350], "field1": [188, 191], "file": [249, 250, 252, 253, 258, 330], "filenam": [250, 330], "fill": [7, 25, 41, 128, 205, 206, 234, 254, 255, 263, 264, 350, 358, 446, 501, 502, 588, 628, 649, 650], "fill_diagon": 7, "fill_valu": [254, 255], "filt": 632, "filter": [11, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 604, 628, 630, 634, 642, 649, 650], "final": [4, 11, 90, 229, 230, 231, 233, 257, 341], "find": [39, 63, 90, 111, 120, 158, 161, 215, 263, 313, 317, 321, 438, 476, 479, 497, 498, 585, 598, 607, 609, 638, 661], "fine": 4, "finfo": [317, 497, 581, 609], "finfo_object": 235, "finit": [47, 281, 283, 284, 285, 286, 358, 609], "first": [18, 19, 20, 24, 26, 27, 34, 36, 37, 38, 42, 43, 56, 61, 64, 66, 68, 69, 70, 74, 80, 82, 83, 88, 90, 91, 96, 97, 100, 101, 109, 112, 113, 138, 178, 184, 204, 207, 210, 217, 219, 221, 223, 224, 239, 242, 244, 245, 246, 247, 256, 259, 260, 261, 263, 264, 266, 268, 269, 274, 275, 277, 280, 282, 290, 293, 294, 296, 297, 298, 301, 303, 310, 314, 323, 324, 326, 327, 330, 335, 336, 337, 339, 340, 343, 344, 346, 347, 349, 350, 352, 353, 354, 357, 359, 360, 365, 456, 495, 499, 503, 504, 507, 509, 510, 511, 578, 584, 587, 590, 592, 594, 596, 598, 599, 607, 608, 612, 616, 617, 618, 620, 623, 625, 632, 636, 638, 640, 644, 645, 646, 647], "fit": [309, 585], "fix": [7, 40, 77, 109, 178, 190, 200, 243, 514, 591, 595, 637], "flag": [48, 50, 128, 178, 187, 282, 446, 586], "flanneri": 11, "flat": [36, 37, 138, 141, 202, 237, 456, 459, 495, 578, 579, 585, 639], "flatit": 495, "flatnonzero": [7, 498], "flatten": [7, 25, 36, 37, 38, 81, 82, 83, 94, 98, 99, 104, 105, 108, 109, 120, 137, 153, 161, 202, 234, 238, 263, 264, 275, 328, 346, 349, 352, 359, 360, 361, 362, 365, 367, 369, 438, 455, 471, 479, 498, 503, 515, 578, 579, 585, 592, 607, 619, 620, 625, 638, 639, 644], "flexibl": [113, 178, 190, 193, 250, 314], "flip": [7, 65, 67, 109, 234, 240, 241, 276, 303, 531, 594], "fliplr": [7, 109, 234, 239, 241, 303, 594], "flipud": [7, 109, 234, 239, 240, 303, 594], "float": [13, 14, 15, 23, 28, 34, 45, 46, 49, 56, 61, 75, 88, 97, 179, 182, 183, 188, 191, 192, 193, 195, 197, 205, 206, 210, 214, 215, 218, 232, 235, 236, 242, 249, 250, 251, 252, 253, 254, 255, 259, 263, 264, 269, 270, 272, 280, 295, 309, 312, 313, 315, 317, 328, 329, 330, 335, 336, 341, 342, 346, 348, 349, 352, 358, 364, 365, 368, 370, 497, 501, 502, 509, 510, 526, 527, 528, 529, 533, 556, 558, 559, 561, 562, 564, 567, 568, 570, 573, 580, 581, 582, 583, 597, 604, 615, 628, 641, 643, 649, 650, 658, 661], "float16": [10, 242], "float32": [0, 10, 47, 49, 54, 63, 75, 90, 91, 98, 99, 100, 101, 122, 180, 200, 203, 242, 280, 440, 497, 523, 524, 526, 527, 528, 529, 551, 556, 558, 559, 561, 562, 564, 570, 573, 586, 589], "float64": [0, 10, 13, 49, 54, 61, 75, 122, 183, 184, 185, 190, 193, 194, 203, 280, 440, 523, 524, 526, 527, 528, 529, 530, 536, 537, 538, 540, 542, 543, 544, 551, 552, 555, 556, 558, 559, 561, 562, 563, 564, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 589, 604, 609, 646], "float_pow": [7, 509, 510], "floor": [7, 40, 77, 236, 244, 354, 584, 591, 595, 637], "floor_divid": [7, 354, 584], "flop": 204, "flush": 250, "fmax": [7, 246, 346, 347, 353, 363, 509, 510], "fmin": [7, 245, 347, 352, 353, 366, 509, 510], "fmod": [7, 354, 509, 510, 584], "fn": 251, "fname": 330, "follow": [4, 11, 13, 26, 61, 171, 185, 211, 227, 235, 248, 271, 305, 307, 315, 317, 323, 489, 504, 586, 623, 658, 661], "forc": [196, 203], "forg": 4, "form": [11, 25, 41, 45, 46, 47, 48, 49, 50, 62, 80, 87, 105, 108, 173, 177, 203, 204, 223, 224, 227, 254, 255, 257, 279, 288, 292, 303, 311, 322, 326, 329, 341, 345, 491, 504, 588, 596, 642, 647], "format": [178, 183, 248, 250, 253, 661], "format_float_posit": 7, "format_float_scientif": 7, "former": [16, 29, 31, 32, 33, 35, 51, 52, 55, 57, 515, 620], "forth": [323, 623], "fortran": [50, 54, 122, 138, 282, 440, 456, 578, 579, 586, 587, 639], "forward": [11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 259], "found": [4, 598, 658], "four": [526, 558], "fourier": [216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 651, 661], "fourth": 217, "frac": [11, 627], "fraction": [355, 637], "free": [156, 474], "freedom": [368, 370, 571, 615, 643], "freq": [218, 220, 225, 232], "freq_spectrum": 221, "frequenc": [11, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232], "freshli": [285, 286, 645], "frexp": [7, 295], "fro": [300, 311, 315, 328], "frobeniu": [300, 315], "from": [3, 11, 16, 17, 19, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 71, 75, 78, 81, 82, 83, 87, 89, 97, 102, 103, 105, 106, 108, 109, 123, 128, 162, 170, 171, 177, 178, 196, 197, 203, 205, 206, 210, 213, 214, 218, 222, 231, 232, 233, 239, 242, 248, 249, 250, 251, 252, 253, 254, 255, 259, 263, 267, 270, 273, 275, 291, 292, 295, 304, 306, 307, 313, 314, 326, 330, 342, 343, 350, 351, 441, 446, 480, 488, 489, 500, 501, 502, 504, 507, 511, 515, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 583, 587, 588, 589, 594, 596, 598, 599, 612, 613, 614, 617, 619, 620, 625, 628, 630, 632, 634, 635, 638, 640, 641, 642, 647, 648, 649, 650, 661], "from_": 75, "from_dlpack": 7, "frombuff": [7, 250, 252, 253, 330], "fromfil": [7, 249, 252, 253], "fromfunct": [7, 45, 46, 47], "fromit": [7, 45, 46, 47, 249, 250, 253], "frompyfunc": 7, "fromregex": [7, 330], "fromstr": [7, 249, 250, 252, 330], "front": [62, 632], "full": [7, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 185, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 458, 459, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "full_lik": [7, 41, 206, 254, 502, 650], "full_matric": 321, "fulli": [184, 349, 365], "func": 27, "func1d": 26, "function": [0, 2, 3, 5, 11, 13, 14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 81, 87, 91, 95, 97, 100, 101, 102, 103, 109, 112, 116, 117, 128, 132, 141, 156, 159, 173, 203, 205, 206, 208, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 233, 234, 242, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 269, 270, 282, 292, 301, 303, 304, 306, 310, 311, 314, 315, 316, 322, 323, 326, 327, 328, 330, 333, 335, 336, 342, 343, 345, 350, 354, 355, 367, 434, 435, 446, 450, 459, 474, 477, 491, 501, 502, 504, 509, 510, 515, 517, 518, 529, 532, 534, 535, 545, 550, 566, 578, 583, 584, 586, 588, 595, 596, 601, 604, 615, 619, 620, 623, 624, 630, 631, 634, 635, 636, 640, 643, 647, 648, 649, 650, 651, 658, 661], "fundament": [11, 178], "further": [104, 630, 634], "futur": [192, 264], "fweight": 95, "g": [4, 11, 183, 205, 206, 214, 254, 255, 270, 315, 501, 502, 529, 628, 649, 650, 665], "gaeac2c95297": 7, "gamma": [7, 569], "gauss": 11, "gaussian": [523, 551, 575], "gc": 204, "gcd": [7, 294], "gen": 203, "gender": 178, "gener": [4, 11, 38, 61, 62, 90, 91, 191, 222, 227, 230, 233, 257, 274, 304, 305, 306, 307, 311, 317, 318, 328, 330, 341, 519, 520, 521, 522, 529, 531, 534, 565, 578, 609, 627, 630, 634, 642, 658, 661], "genfromtxt": [7, 330], "geometr": [7, 257, 329], "geomspac": [7, 329, 341], "get": [28, 41, 45, 46, 47, 48, 49, 50, 87, 91, 105, 106, 107, 108, 128, 139, 159, 205, 206, 214, 218, 221, 227, 229, 232, 242, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 322, 327, 329, 330, 341, 343, 351, 446, 457, 477, 500, 501, 502, 504, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 620, 628, 630, 631, 634, 635, 642, 645, 649, 650, 658], "get_bit_gener": 7, "get_dtyp": 0, "get_includ": 7, "get_printopt": 7, "get_stat": 7, "getbufs": 7, "geterr": 7, "geterrcal": 7, "getfield": [7, 184], "getter": [159, 477], "gid": 264, "give": [11, 108, 173, 242, 264, 265, 491, 587, 600, 606, 638], "given": [19, 20, 24, 25, 26, 27, 28, 36, 37, 40, 41, 42, 45, 46, 48, 50, 54, 61, 62, 80, 81, 87, 94, 95, 98, 99, 100, 101, 110, 113, 118, 119, 122, 125, 129, 130, 146, 151, 152, 157, 160, 163, 165, 175, 177, 181, 196, 202, 204, 205, 206, 213, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 245, 246, 254, 255, 257, 259, 263, 264, 265, 275, 277, 308, 315, 323, 327, 329, 341, 343, 346, 347, 349, 350, 352, 353, 361, 362, 363, 365, 366, 367, 368, 369, 370, 436, 437, 440, 443, 447, 448, 464, 469, 470, 475, 478, 481, 483, 493, 495, 498, 501, 502, 507, 511, 513, 514, 524, 529, 534, 556, 573, 583, 585, 586, 587, 591, 592, 593, 594, 596, 598, 599, 606, 610, 615, 617, 619, 623, 624, 627, 628, 638, 640, 643, 645, 647, 649, 650, 658], "global": 0, "golub": 315, "good": 541, "gpu": [0, 3, 4, 28, 41, 45, 46, 47, 48, 50, 87, 105, 108, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 270, 329, 330, 341, 351, 500, 501, 502, 628, 642, 649, 650], "grade": [183, 184, 190, 194], "gradient": [7, 110, 202, 309], "graphic": 4, "great": 11, "greater": [7, 66, 69, 150, 176, 207, 244, 261, 296, 297, 298, 313, 318, 468, 499, 504, 590, 599, 601, 613, 641], "greater_equ": [7, 207, 260, 297, 298, 499], "greatest": [244, 256, 294], "greedi": [203, 204], "grid": [45, 46, 47, 251, 273, 316, 350, 351, 500, 503], "group": [39, 498], "guarante": [192, 586, 587], "guid": [2, 3], "gumbel": 7, "gz": 330, "h": [258, 265, 299, 315, 318, 350], "ha": [4, 11, 14, 15, 16, 17, 19, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 51, 52, 55, 57, 61, 68, 90, 97, 98, 99, 100, 101, 111, 192, 200, 207, 211, 221, 226, 227, 248, 251, 259, 260, 261, 267, 269, 272, 278, 279, 287, 288, 291, 297, 298, 306, 319, 321, 326, 342, 348, 349, 354, 361, 362, 364, 365, 367, 368, 369, 370, 499, 504, 511, 580, 581, 582, 583, 584, 585, 593, 597, 599, 613, 614, 615, 617, 618, 619, 624, 625, 639, 643, 658], "had": [515, 620], "hadamard": 204, "half": [17, 30, 217, 219, 220, 221, 223, 224, 329, 525, 527, 529, 556, 559, 561, 562, 564, 573, 618], "ham": 7, "han": 7, "hand": [96, 301, 325], "handl": [28, 186, 188, 215, 330, 498, 515, 579, 619, 620, 661], "happen": [54, 61, 122, 440, 531, 627], "hardwar": 4, "has_aspect_fp64": 0, "have": [3, 4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 51, 52, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 73, 76, 77, 80, 82, 83, 84, 85, 88, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 112, 113, 177, 181, 192, 193, 207, 209, 210, 212, 215, 223, 224, 233, 235, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 267, 268, 269, 272, 276, 277, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 303, 309, 311, 314, 316, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 347, 348, 349, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 496, 497, 499, 507, 508, 509, 510, 511, 512, 517, 518, 548, 580, 582, 583, 584, 585, 586, 587, 590, 591, 595, 596, 597, 601, 602, 603, 604, 605, 609, 611, 612, 614, 615, 616, 617, 621, 622, 624, 636, 637, 641, 643, 645, 647, 658], "hd": 204, "header": 258, "heapsort": [38, 607], "heavisid": 7, "hello": 178, "help": 665, "helper": 661, "henc": [211, 259], "here": [7, 178, 203, 221, 226, 227, 630, 634], "hermit": [305, 307], "hermitian": [221, 226, 227, 229, 230, 299, 304, 305, 306, 307, 313, 317, 321, 322, 661], "hfft": [7, 11, 226], "hierarchi": [280, 290], "high": [74, 227, 525, 529, 557, 560, 573], "higher": [26, 143, 203, 266, 275, 461, 644, 646], "highest": [216, 632], "highli": 250, "hist": [263, 567], "hist_0": 264, "hist_1": 264, "histogram": [7, 63, 111, 264, 265, 598, 661], "histogram2d": [7, 265], "histogram_bin_edg": [7, 263], "histogramdd": [7, 263], "hold": [79, 98, 99, 100, 101, 263, 315, 349, 361, 362, 365, 367, 369, 578, 625], "homogen": 178, "hopkin": 315, "horizont": [80, 82, 83, 109, 177, 234, 239, 266, 267, 303, 594, 596, 610, 614, 647], "host": [3, 4, 28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 171, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 446, 489, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 628, 630, 634, 642, 649, 650], "household": 318, "how": [0, 4, 185, 188, 227, 230, 259, 514, 515, 579, 619, 620, 630, 634], "howev": [161, 479, 619], "hsplit": [7, 82, 83, 610], "hstack": [7, 80, 82, 83, 177, 596, 610, 614, 647], "http": [4, 91], "hyperbol": [16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 603, 605, 621, 622, 661], "hypergeometr": 7, "hypot": [7, 583], "hypotenus": [268, 583], "i": [0, 3, 4, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 128, 141, 143, 150, 156, 159, 161, 164, 171, 173, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 379, 438, 440, 446, 459, 461, 468, 474, 477, 479, 482, 489, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658, 665], "i0": 7, "i1": [164, 178, 181, 482], "i2": [164, 178, 180, 181, 188, 196, 200, 482], "i3": [164, 482], "i4": [75, 178, 179, 191, 195, 198], "i7": 203, "i8": [75, 178], "i_0": 269, "iaxi": 504, "iaxis_pad_width": 504, "icpx": 4, "icx": 4, "id": [19, 24], "ideal": 604, "ident": [3, 7, 19, 24, 26, 47, 97, 192, 214, 225, 234, 320, 327, 568, 645], "identifi": 191, "idx": 275, "ieee": 235, "ifft": [7, 216, 223, 224, 226, 227, 232], "ifft2": [7, 217, 222, 224], "ifftn": [7, 219, 222, 223], "ifftshift": [7, 11, 220, 224], "ignor": [36, 37, 96, 196, 245, 246, 253, 263, 264, 346, 347, 348, 352, 353, 359, 360, 363, 364, 365, 366, 368, 370, 615, 643], "ihfft": [7, 221], "ii": [26, 203, 552], "iinfo": 546, "iinfo_object": 271, "ij": [203, 204, 350], "ijk": 203, "il": 204, "il1": 630, "il2": 630, "illustr": 306, "ilm": 203, "im": [316, 503], "imag": [7, 11, 23, 42, 580, 581, 588, 658], "imaginari": [23, 42, 140, 227, 245, 246, 272, 278, 279, 287, 288, 304, 305, 307, 312, 347, 353, 358, 458, 580, 581, 608, 638], "implement": [3, 4, 5, 7, 49, 216, 248], "impli": [200, 248, 578], "implicit": 203, "import": [0, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 140, 141, 143, 148, 150, 154, 159, 160, 161, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 450, 451, 453, 456, 458, 459, 461, 466, 468, 472, 477, 478, 479, 489, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 554, 556, 563, 567, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "improv": 203, "in1d": 7, "in_array1": 208, "includ": [4, 11, 19, 24, 25, 28, 41, 45, 46, 47, 48, 49, 50, 61, 87, 97, 100, 101, 105, 108, 111, 203, 204, 215, 254, 255, 257, 258, 263, 264, 279, 288, 317, 329, 341, 342, 348, 349, 363, 364, 365, 366, 368, 370, 529, 573, 583, 604, 615, 642, 643], "include_initi": [97, 100, 101], "inclus": [525, 557, 560, 599], "increas": [111, 194, 211, 222, 227, 263, 265, 504, 588, 642], "ind": [38, 111, 324, 514, 515, 630, 631, 634, 635], "independ": 301, "index": [4, 13, 25, 36, 37, 38, 39, 78, 81, 123, 138, 141, 164, 184, 204, 214, 217, 223, 231, 238, 248, 273, 275, 282, 292, 350, 359, 360, 441, 456, 459, 482, 495, 498, 514, 515, 578, 579, 587, 588, 598, 599, 610, 619, 620, 630, 632, 634, 638, 639, 648, 651, 661], "index_arrai": [36, 37, 38], "indic": [7, 11, 26, 36, 37, 38, 39, 44, 63, 97, 100, 101, 104, 106, 107, 111, 118, 119, 120, 149, 152, 158, 161, 170, 176, 181, 186, 187, 188, 189, 203, 204, 213, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 238, 248, 251, 263, 266, 275, 280, 324, 325, 343, 344, 351, 359, 360, 436, 437, 438, 467, 470, 476, 479, 488, 495, 498, 506, 514, 515, 579, 598, 601, 602, 607, 610, 619, 620, 626, 630, 631, 634, 635, 638, 639, 645, 646, 648], "indices_or_sect": [44, 176, 266, 610, 646], "indirect": [38, 120, 161, 438, 479, 607], "individu": [495, 539], "inequ": 499, "inexact": [242, 358, 367, 369], "inf": [10, 16, 17, 20, 29, 30, 31, 34, 35, 45, 46, 47, 51, 56, 57, 88, 112, 277, 281, 283, 284, 285, 286, 300, 311, 315, 328, 331, 332, 334, 347, 353, 358, 359, 360, 363, 366, 369, 512, 609, 611, 636], "infer": [47, 97, 342, 583, 587], "infin": [16, 17, 19, 24, 29, 30, 31, 32, 33, 35, 47, 51, 52, 55, 57, 244, 281, 283, 284, 285, 286, 354, 358, 363, 366, 369, 584, 637], "infinit": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 300, 315, 604], "infj": [32, 33, 52, 55], "info": [7, 13], "inform": [0, 48, 50, 136, 179, 221, 227, 229, 235, 454, 586, 658, 661], "initi": [21, 22, 97, 100, 101, 144, 146, 151, 165, 205, 253, 346, 352, 363, 366, 367, 369, 462, 464, 469, 483, 511, 519, 617], "inner": [7, 26, 96, 203, 204, 310, 314, 344, 503], "innermost": [303, 311, 326, 345], "input": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 77, 79, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 122, 138, 148, 176, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 310, 311, 313, 315, 316, 318, 319, 321, 322, 323, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 440, 456, 466, 494, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 523, 525, 529, 551, 557, 573, 578, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 595, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 636, 637, 638, 641, 642, 643, 644, 645, 646, 649, 650], "insert": [7, 25, 26, 27, 36, 37, 104, 109, 111, 158, 203, 211, 257, 263, 329, 341, 359, 360, 363, 366, 476, 515, 587, 598, 599, 661], "inspect": [13, 651], "instal": 2, "instanc": [3, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 121, 122, 128, 171, 205, 206, 214, 218, 221, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 270, 273, 320, 329, 330, 341, 343, 344, 351, 439, 440, 446, 489, 495, 500, 501, 502, 519, 521, 522, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 645, 649, 650], "instead": [39, 54, 109, 113, 122, 203, 211, 243, 257, 263, 264, 273, 282, 314, 329, 336, 341, 346, 352, 440, 498, 511, 579, 588, 617, 658], "instruct": 4, "insuffici": 62, "int": [10, 19, 24, 25, 26, 27, 28, 36, 37, 38, 40, 41, 44, 49, 61, 62, 63, 72, 73, 81, 82, 83, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 120, 122, 141, 148, 160, 161, 173, 176, 178, 184, 188, 205, 206, 207, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 265, 266, 270, 271, 273, 275, 301, 303, 309, 312, 315, 323, 324, 325, 326, 327, 328, 329, 341, 342, 343, 346, 348, 349, 352, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 459, 466, 478, 479, 491, 494, 495, 501, 502, 504, 505, 506, 511, 514, 515, 519, 525, 556, 557, 560, 579, 583, 585, 587, 588, 592, 593, 594, 595, 606, 607, 610, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 643, 645, 646, 649, 650, 658], "int16": [178, 180], "int32": [0, 10, 49, 75, 178, 185, 193, 205, 206, 214, 249, 252, 254, 255, 270, 330, 367, 369, 501, 502, 525, 529, 531, 539, 541, 546, 548, 554, 557, 573, 589, 617, 628, 649, 650], "int64": [0, 10, 13, 75, 171, 178, 190, 367, 369, 489, 589], "int8": [178, 511], "int_": 10, "int_0": 627, "int_t": 627, "intc": 10, "integ": [28, 40, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 77, 97, 98, 99, 100, 101, 111, 161, 173, 176, 188, 191, 236, 239, 242, 243, 244, 248, 256, 263, 266, 269, 271, 276, 280, 292, 294, 295, 296, 312, 315, 323, 324, 326, 328, 342, 346, 348, 352, 354, 361, 362, 363, 364, 366, 367, 368, 369, 370, 479, 491, 509, 510, 511, 514, 519, 525, 529, 557, 560, 565, 579, 583, 584, 585, 587, 590, 591, 592, 594, 595, 598, 599, 600, 610, 612, 615, 617, 619, 623, 625, 637, 638, 639, 641, 643, 646, 658], "integer_lik": [323, 623], "integr": [3, 4, 13, 61, 97, 99, 101, 242, 263, 280, 342, 348, 349, 355, 364, 365, 368, 370, 509, 510, 583, 615, 617, 627, 643], "intel": [3, 203], "intend": [173, 491], "intent": 242, "interchang": [166, 356, 484, 618], "interfac": [0, 249], "interior": 259, "intermedi": [98, 100, 203, 204], "intern": [38, 120, 161, 438, 479, 520, 607], "interp": 7, "interpol": [227, 588, 604], "interpret": [2, 45, 46, 47, 53, 73, 87, 141, 185, 221, 227, 229, 249, 292, 343, 459, 498, 514, 658], "intersect1d": 7, "interv": [11, 16, 17, 28, 29, 30, 31, 33, 51, 55, 111, 211, 257, 329, 341, 525, 527, 529, 556, 557, 559, 561, 562, 564, 572, 573, 618], "intp": [367, 369], "intrins": 658, "introduc": 592, "introduct": 11, "introselect": [150, 468, 505], "inv": [7, 300, 317], "invers": [11, 16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 295, 308, 317, 324, 325, 333, 575, 603, 605, 621, 622, 638], "invert": [7, 65, 67, 308, 317, 324], "invok": 658, "involv": 324, "io": 330, "irfft": [7, 218, 221, 226, 228, 229, 230, 232], "irfft2": [7, 227, 229, 231], "irfftn": [7, 227, 228, 233], "irrespect": 38, "is_busdai": 7, "isalignedstruct": 178, "isclos": [7, 20], "iscomplex": [7, 279, 287], "iscomplexobj": [7, 278, 288], "isdtyp": 7, "isfinit": [7, 283, 284, 285, 286, 358, 363, 366, 369], "isfortran": 7, "isin": 7, "isinf": [7, 281, 284, 285, 286, 358], "isinst": 291, "isnan": [7, 281, 283, 285, 286, 358, 361, 362, 363, 366, 367, 369], "isnat": 7, "isneginf": [7, 281, 283, 284, 286, 358], "isposinf": [7, 281, 283, 284, 285, 358], "isreal": [7, 278, 288], "isrealobj": [7, 279, 287], "isscalar": 7, "issu": 223, "issubdtyp": [7, 280], "item": [7, 39, 249, 250, 252, 638, 651], "item_dtyp": 200, "item_hasobject": 185, "item_is_point": 185, "items": 74, "iter": [7, 45, 46, 47, 137, 138, 204, 237, 249, 250, 252, 253, 455, 456, 495, 515, 578, 588, 620, 640, 661], "its": [4, 7, 11, 14, 15, 19, 24, 27, 38, 61, 105, 173, 221, 227, 229, 235, 263, 264, 270, 304, 305, 306, 307, 314, 317, 325, 348, 364, 368, 370, 491, 506, 566, 578, 583, 587, 607, 615, 626, 627, 628, 643, 658], "itself": [54, 122, 178, 181, 295, 358, 440, 658], "iu": 343, "iu1": [343, 634], "iu2": 634, "ix_": 7, "ixgrid": 292, "j": [41, 84, 85, 91, 173, 203, 217, 219, 221, 222, 223, 224, 226, 227, 230, 231, 233, 242, 251, 272, 273, 293, 299, 304, 305, 315, 316, 323, 326, 334, 344, 358, 491, 503, 512, 515, 580, 608, 612, 620, 623], "j1": 293, "jame": 11, "ji": 203, "jil": 203, "jj": 26, "jk": [203, 204], "jl": 204, "john": [11, 315], "join": [80, 82, 83, 177, 267, 275, 596, 610, 614, 640, 647, 661], "jump": [102, 517], "just": [74, 80, 109, 178, 217, 223, 228, 230, 231, 275], "k": [11, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 91, 92, 93, 102, 103, 105, 108, 112, 122, 128, 203, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 255, 256, 260, 261, 262, 268, 269, 272, 276, 281, 283, 284, 293, 294, 295, 296, 297, 298, 309, 318, 320, 321, 322, 323, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 347, 353, 354, 357, 379, 440, 446, 496, 497, 499, 502, 508, 509, 510, 512, 517, 518, 578, 580, 582, 584, 590, 591, 594, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 623, 628, 629, 630, 631, 633, 634, 635, 636, 637, 641, 645, 648, 650, 665], "kaiser": 7, "kappa": 574, "kdlcpu": 248, "kdloneapi": 248, "keep": [53, 54, 122, 440, 638], "keepdim": [19, 21, 22, 24, 27, 36, 37, 61, 94, 116, 117, 118, 119, 144, 145, 146, 151, 163, 165, 175, 311, 315, 328, 342, 346, 348, 349, 352, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 436, 437, 462, 463, 464, 469, 481, 483, 493, 511, 513, 515, 583, 615, 617, 620, 643], "kei": [3, 38, 120, 161, 183, 184, 192, 384, 429, 438, 479, 607], "kernel": 604, "key2": 192, "keyword": [11, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 87, 88, 92, 93, 96, 102, 103, 105, 106, 108, 112, 128, 205, 206, 209, 210, 212, 214, 215, 218, 232, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 268, 270, 273, 276, 294, 295, 296, 301, 303, 310, 316, 326, 327, 330, 332, 333, 334, 335, 336, 343, 344, 347, 351, 353, 354, 355, 357, 358, 446, 496, 497, 500, 501, 502, 504, 508, 509, 510, 512, 517, 518, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 582, 584, 587, 590, 591, 597, 601, 602, 603, 605, 609, 616, 621, 622, 628, 630, 634, 636, 637, 642, 645, 648, 649, 650, 658], "ki": 203, "kind": [38, 54, 75, 82, 83, 89, 97, 120, 122, 150, 161, 203, 235, 267, 269, 280, 314, 342, 344, 438, 440, 468, 479, 505, 583, 587, 596, 607, 614, 645, 647, 661], "kk": 26, "kl": [11, 203, 204], "known": [11, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 250, 567], "kron": 7, "kroneck": 293, "kth": [150, 468, 505], "kwarg": [14, 15, 16, 17, 18, 26, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 88, 92, 93, 102, 103, 112, 124, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 251, 256, 260, 261, 262, 268, 276, 281, 283, 284, 294, 295, 296, 297, 298, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 353, 354, 355, 357, 410, 442, 496, 497, 499, 504, 508, 509, 510, 512, 517, 518, 582, 584, 590, 591, 597, 601, 602, 603, 605, 609, 611, 612, 616, 621, 622, 636, 637], "l": [11, 44, 196, 299, 305, 307, 326], "la": [304, 306, 307], "label": 203, "laid": 50, "lam": 554, "lambda": 251, "lanczo": 604, "lapack": [304, 306], "laplac": 7, "laptop": 4, "larg": [11, 102, 185, 263, 317, 358, 517, 641, 665], "larger": [203, 216, 217, 219, 222, 223, 224, 226, 228, 229, 230, 231, 233, 235, 588, 625, 641], "largest": [11, 204, 230, 235, 243, 271, 309, 315, 354, 358, 584], "largest_singular_valu": 317, "last": [19, 24, 25, 26, 38, 63, 74, 96, 109, 110, 120, 138, 143, 161, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 239, 257, 259, 274, 282, 303, 314, 322, 323, 326, 329, 341, 344, 438, 456, 461, 479, 495, 504, 511, 578, 587, 592, 598, 607, 613, 617, 623, 640, 641, 645], "later": [504, 665], "latest": 4, "latter": [16, 29, 31, 32, 33, 35, 51, 52, 55, 57, 245, 246, 347, 353, 515, 620], "layout": [4, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 128, 136, 203, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 260, 261, 262, 268, 269, 272, 276, 281, 283, 284, 294, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 353, 354, 357, 446, 454, 496, 497, 499, 501, 502, 508, 509, 510, 512, 517, 518, 578, 580, 582, 584, 586, 587, 590, 591, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 636, 637, 645, 648, 649, 650, 651], "lcm": [7, 256], "ldexp": 7, "ldot": 11, "lead": [222, 223, 224, 361, 362], "learn": [3, 4, 336], "least": [58, 59, 60, 61, 62, 107, 177, 197, 204, 211, 234, 240, 245, 246, 250, 279, 309, 318, 347, 353, 596, 647], "left": [11, 33, 36, 37, 40, 55, 66, 69, 94, 109, 111, 158, 240, 241, 296, 306, 311, 315, 328, 346, 352, 359, 360, 367, 369, 476, 511, 572, 590, 595, 598, 617, 627, 642], "left_shift": [7, 66, 69, 590], "leg": [268, 583], "legaci": 565, "legal": 275, "len": [104, 219, 220, 221, 224, 226, 227, 228, 229, 233, 273, 309, 346, 350, 351, 352, 402, 600, 642], "length": [28, 44, 61, 62, 63, 81, 98, 99, 100, 101, 110, 207, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 253, 257, 259, 263, 265, 267, 304, 321, 322, 323, 341, 346, 349, 350, 352, 361, 362, 365, 504, 515, 532, 587, 589, 596, 598, 599, 600, 613, 620, 623, 624, 647], "less": [7, 27, 81, 98, 99, 100, 101, 143, 207, 260, 261, 263, 264, 298, 309, 317, 326, 361, 362, 367, 369, 461, 499, 511, 599, 601, 617, 625], "less_equ": [7, 207, 260, 261, 297, 499], "let": [327, 531, 587, 645], "level": [651, 658], "level_zero": [28, 41, 45, 46, 47, 48, 50, 87, 105, 108, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 270, 329, 330, 341, 351, 500, 501, 502, 628, 642, 649, 650], "lexicograph": 638, "lexsort": [7, 38, 120, 161, 438, 479, 607], "li": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 592, 593], "lib": 74, "librari": [3, 4, 658], "light": 11, "like": [28, 41, 45, 46, 48, 50, 54, 58, 59, 60, 80, 104, 122, 138, 148, 177, 203, 205, 214, 229, 249, 250, 251, 252, 253, 254, 257, 270, 275, 329, 330, 341, 343, 440, 456, 466, 494, 501, 515, 529, 573, 578, 586, 587, 620, 649, 661], "likewis": [64, 68, 70], "limit": [3, 4, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 84, 85, 87, 88, 92, 93, 95, 102, 103, 112, 122, 124, 184, 205, 206, 207, 208, 209, 210, 212, 214, 215, 235, 236, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 268, 270, 271, 276, 281, 283, 284, 294, 295, 296, 297, 298, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 346, 347, 348, 352, 353, 354, 355, 357, 359, 360, 363, 364, 366, 367, 368, 369, 370, 440, 442, 496, 497, 499, 501, 502, 505, 508, 509, 510, 511, 512, 513, 516, 517, 518, 523, 525, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 554, 555, 557, 560, 563, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 582, 584, 586, 590, 591, 597, 601, 602, 603, 604, 605, 607, 609, 611, 612, 615, 616, 617, 621, 622, 636, 637, 643, 645, 649, 650], "linalg": [5, 7, 96, 109, 113, 203, 204, 344, 345, 503, 612, 623, 625, 644, 645], "line": [309, 330], "linear": [11, 86, 91, 309, 320, 341, 504, 651, 661], "linear_ramp": 504, "linspac": [0, 7, 28, 208, 257, 316, 341, 350, 503, 604, 627, 641], "linux": 4, "list": [3, 7, 10, 25, 41, 44, 45, 46, 47, 48, 50, 58, 59, 60, 71, 82, 83, 87, 105, 108, 173, 176, 177, 194, 203, 204, 220, 225, 234, 254, 255, 257, 259, 265, 266, 267, 279, 288, 323, 329, 330, 341, 344, 349, 365, 491, 506, 579, 585, 586, 588, 589, 596, 599, 610, 614, 623, 626, 639, 640, 642, 645, 646, 647, 648], "list_pickl": 185, "littl": [181, 196], "ln": 341, "load": [7, 250, 330], "loadtxt": [7, 250], "loan": 315, "loc": [523, 540, 542, 543, 551, 575], "local": 4, "locat": [0, 4, 258, 285, 286, 343, 503, 540, 542, 598, 645], "log": [7, 212, 257, 319, 329, 332, 333, 334, 335, 341, 342, 544], "log10": [7, 331, 333, 334], "log1p": [7, 210, 212, 331, 332, 334], "log2": [7, 331, 332, 333, 336], "log_bas": 341, "logabsdet": 319, "logaddexp": [7, 97, 336, 342], "logaddexp2": [7, 335, 342], "logarithm": [97, 302, 319, 329, 331, 332, 333, 334, 335, 336, 342, 545, 661], "logic": [19, 24, 337, 338, 339, 340, 651, 661], "logical_and": [7, 64, 338, 339, 340], "logical_not": [7, 65, 67, 276, 337, 339, 340], "logical_or": [7, 68, 337, 338, 340], "logical_xor": [7, 70, 337, 338, 339], "logist": 7, "lognorm": 7, "logseri": 7, "logspac": [7, 257, 329], "logsumexp": [97, 335, 336], "lomax": 552, "long": [192, 312], "longer": [221, 227, 665], "look": [497, 620], "loop": [26, 203], "loos": 202, "lorentz": 567, "lose": [221, 227, 229], "low": [74, 217, 219, 223, 224, 525, 529, 557, 560, 573, 658], "lower": [105, 214, 263, 264, 265, 280, 290, 299, 305, 307, 343, 628, 629, 630, 631, 634, 635], "lowest": [61, 203, 204, 256, 294, 525, 557, 632], "lstsq": 7, "m": [4, 11, 26, 95, 177, 191, 203, 214, 217, 219, 221, 223, 224, 227, 228, 229, 233, 239, 240, 241, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 326, 343, 344, 345, 349, 515, 594, 599, 619, 620, 628, 629, 630, 631, 633, 634, 635], "machin": [4, 11, 235, 271, 309, 336, 581], "machineri": 188, "made": [41, 46, 58, 196, 248, 293, 358, 587, 610], "magnitud": [14, 15, 88, 215, 512], "mai": [13, 19, 23, 24, 54, 75, 79, 82, 83, 89, 91, 99, 101, 122, 159, 178, 186, 192, 203, 204, 211, 217, 219, 221, 222, 223, 224, 226, 227, 230, 233, 248, 259, 264, 267, 300, 304, 305, 309, 311, 315, 318, 336, 341, 344, 358, 364, 368, 370, 440, 477, 515, 578, 581, 588, 596, 604, 614, 624, 645, 647, 658], "main": [5, 105, 106, 107, 108, 109, 214, 234, 270, 303, 307, 326, 343, 625, 628, 629, 630, 633, 634], "mainstai": 11, "maintain": [38, 111, 120, 158, 161, 187, 263, 438, 476, 479, 598, 607, 620], "major": [4, 45, 46, 47, 48, 50, 53, 54, 122, 440, 498, 578, 579, 586, 639], "make": [48, 50, 80, 178, 316, 350, 503, 586, 604, 638, 641], "manag": 0, "mandelbrot": [316, 503], "mani": [11, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 578, 658], "manipul": [3, 106, 651, 661], "mantissa": 295, "manual": [4, 179, 188, 624], "mappingproxi": 192, "mask": [104, 185, 275, 292, 343, 498, 507, 516, 619, 630, 634], "mask_func": 343, "mask_indic": [7, 630, 634], "mass": 263, "match": [14, 15, 46, 82, 83, 89, 94, 97, 110, 178, 248, 250, 259, 274, 323, 342, 344, 514, 515, 583, 614, 619, 620, 623, 648], "math": [11, 208], "mathbf": [327, 645], "mathemat": [315, 651, 661], "matlab": 247, "matmul": [7, 113, 318, 321, 644], "matplotlib": [350, 567], "matric": [234, 251, 273, 292, 302, 303, 304, 306, 308, 311, 313, 315, 317, 318, 319, 320, 321, 322, 326, 344, 345, 350, 661], "matrix": [90, 95, 113, 143, 203, 274, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 326, 344, 345, 350, 461, 612, 633, 642, 644, 645, 651, 661], "matrix_norm": [7, 315], "matrix_pow": [7, 612], "matrix_rank": 7, "matrix_transpos": 7, "matter": 638, "matvec": 7, "max": [0, 7, 21, 36, 63, 79, 124, 235, 245, 246, 263, 264, 271, 309, 313, 315, 317, 347, 352, 353, 363, 442, 546, 620, 624, 641, 658], "max_arg": 0, "max_val": 0, "maxima": [245, 346, 347], "maximum": [0, 7, 21, 36, 37, 79, 118, 144, 204, 245, 246, 265, 346, 352, 353, 359, 360, 363, 366, 436, 462, 504, 509, 510, 513, 515, 641], "may_share_memori": 7, "md": 315, "mean": [3, 7, 11, 20, 28, 41, 43, 45, 46, 47, 48, 49, 50, 54, 61, 87, 94, 105, 106, 108, 122, 128, 138, 173, 203, 205, 206, 214, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 233, 249, 250, 251, 252, 253, 254, 255, 259, 270, 273, 300, 315, 330, 343, 349, 351, 364, 365, 368, 370, 440, 446, 456, 491, 500, 501, 502, 504, 519, 526, 528, 542, 544, 547, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 574, 575, 578, 587, 594, 615, 617, 628, 630, 634, 642, 643, 649, 650, 658], "meaningfulli": 658, "meant": 658, "median": [0, 7, 365, 504], "meet": [41, 599], "memori": [3, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 128, 136, 164, 186, 203, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 260, 261, 262, 268, 269, 272, 276, 281, 282, 283, 284, 294, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 349, 350, 353, 354, 357, 365, 446, 454, 482, 496, 497, 499, 501, 502, 508, 509, 510, 512, 517, 518, 578, 580, 582, 584, 586, 587, 590, 591, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 636, 637, 645, 648, 649, 650, 651, 665], "merg": [38, 120, 161, 438, 479, 607], "mergesort": [38, 120, 161, 438, 479, 607], "mersenn": 519, "mesh": 292, "meshgrid": [7, 251, 273, 292, 351, 500], "met": [113, 314], "meta": 184, "metadata": 178, "method": [11, 19, 21, 22, 24, 38, 54, 81, 87, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 184, 196, 248, 250, 291, 313, 317, 321, 345, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 457, 459, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 488, 489, 490, 491, 493, 494, 498, 506, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 587, 600, 617, 619, 626, 651], "mgrid": [217, 219, 228, 231, 273, 292], "mgridclass": 351, "middl": [11, 109, 217, 219, 223, 224, 306, 349, 365], "might": [203, 222, 223, 224], "min": [7, 22, 37, 79, 124, 235, 245, 246, 263, 264, 271, 300, 303, 309, 315, 318, 321, 322, 346, 347, 353, 366, 442, 620, 658], "min_scalar_typ": 7, "minima": [246, 352, 353], "minimum": [7, 22, 36, 37, 41, 63, 79, 119, 146, 242, 245, 246, 265, 346, 347, 352, 359, 360, 363, 366, 437, 464, 504, 509, 510, 513], "minlength": 63, "mintypecod": 7, "minu": [62, 212, 244, 354, 584, 637], "mirror": 504, "miscellan": [2, 651, 661], "mise": 574, "miss": 330, "mix": [310, 344], "mk": 11, "mkl": 4, "mn": 11, "mod": [7, 213, 584, 641], "mode": [78, 86, 91, 123, 152, 170, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 318, 441, 470, 488, 504, 514, 515, 567, 572, 579, 598, 619, 620], "model": [4, 531], "modf": 7, "modifi": [87, 109, 234, 269, 349, 365, 504, 566], "modul": [216, 258, 651], "moduletyp": 13, "modulu": [247, 354, 584], "moment": 90, "monoton": [111, 263, 265], "moor": 317, "more": [0, 3, 4, 38, 41, 58, 59, 60, 100, 101, 177, 179, 203, 204, 212, 228, 231, 240, 241, 250, 264, 267, 273, 295, 301, 303, 309, 310, 312, 313, 314, 316, 317, 321, 323, 326, 327, 333, 335, 588, 594, 614, 623, 627, 638, 641, 658, 665], "most": [3, 4, 25, 63, 109, 110, 197, 204, 216, 222, 291, 358, 519, 565, 588, 613], "move": [150, 356, 468, 506, 592, 593, 626, 638], "moveaxi": [7, 506, 592, 593, 626, 640], "msg": 0, "mt": 345, "mt19937": 565, "mu": [540, 544, 551, 574], "multi": [2, 114, 164, 273, 292, 301, 351, 482, 500, 579, 638, 651], "multi_dot": [7, 113, 203, 204], "multi_index": 579, "multiarrai": 185, "multidimension": [263, 265, 274, 495, 648], "multinomi": 7, "multipl": [4, 11, 26, 27, 36, 37, 38, 44, 61, 82, 83, 90, 96, 97, 120, 161, 176, 187, 203, 217, 219, 223, 224, 228, 229, 231, 233, 256, 264, 266, 267, 275, 292, 294, 301, 304, 305, 306, 307, 308, 314, 342, 346, 348, 352, 363, 364, 366, 368, 370, 438, 479, 578, 583, 596, 599, 607, 610, 614, 615, 627, 632, 638, 640, 643, 646, 647, 651], "multipli": [7, 98, 203, 295, 306, 367, 511], "multivalu": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57], "multivari": 547, "multivariate_norm": 7, "must": [14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 51, 52, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 76, 77, 79, 80, 82, 83, 84, 85, 88, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 110, 112, 113, 120, 161, 177, 207, 209, 210, 211, 212, 215, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 247, 248, 250, 253, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 276, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 301, 303, 314, 315, 316, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 349, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 479, 496, 497, 499, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 556, 580, 582, 583, 584, 585, 590, 591, 592, 594, 595, 596, 597, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 636, 637, 643, 645, 647, 648], "mx": 309, "mxn": [303, 311, 326, 345], "my_func": 26, "n": [0, 4, 11, 39, 44, 62, 91, 99, 101, 106, 107, 110, 111, 173, 176, 177, 196, 202, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 251, 259, 265, 266, 270, 292, 303, 309, 311, 312, 313, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 343, 344, 345, 349, 350, 365, 368, 370, 491, 495, 504, 506, 507, 514, 515, 531, 546, 548, 558, 568, 598, 600, 610, 612, 615, 618, 619, 620, 623, 626, 627, 628, 629, 630, 631, 633, 634, 635, 642, 643, 645, 646, 658], "n1": 350, "n2": [330, 350], "n3": 350, "naiv": 204, "name": [0, 7, 26, 178, 183, 184, 190, 317, 604], "namedtupl": 318, "namespac": [5, 13], "nan": [10, 16, 17, 19, 20, 24, 29, 30, 31, 32, 33, 35, 36, 37, 42, 45, 46, 47, 51, 52, 55, 57, 112, 242, 245, 246, 277, 281, 283, 284, 285, 286, 332, 346, 347, 348, 352, 353, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 509, 510, 511, 609, 611, 615, 636, 638, 643], "nan_to_num": 7, "nanargmax": [7, 36, 360], "nanargmin": [7, 37, 359], "nancumprod": 7, "nancumsum": 7, "nanmax": [7, 245, 246, 346, 347, 353, 366], "nanmean": [7, 348, 368, 370, 615, 643], "nanmedian": 7, "nanmin": [7, 245, 246, 347, 352, 353, 363], "nanpercentil": 7, "nanprod": [7, 511], "nanquantil": 7, "nanstd": [7, 348, 364, 370, 615, 643], "nansum": 7, "nanvar": [7, 348, 364, 368, 615, 643], "nativ": [181, 189, 196], "native_cod": [181, 196], "native_dt": 196, "natur": [319, 331, 332, 333, 334, 335, 336, 342], "nbad": 541, "nd": [141, 459], "ndarrai": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 128, 135, 138, 140, 141, 148, 154, 156, 159, 160, 161, 171, 173, 176, 177, 184, 186, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 662], "ndenumer": 495, "ndim": [7, 39, 41, 48, 50, 58, 59, 60, 95, 106, 109, 234, 293, 315, 321, 322, 345, 346, 352, 501, 506, 624, 626, 649], "ndindex": 26, "ndmin": 41, "ne": 604, "nearest": [40, 77, 236, 243, 244, 354, 584, 591, 595, 609, 637], "necessari": [4, 19, 24, 28, 41, 45, 46, 48, 50, 58, 89, 91, 98, 99, 100, 101, 202, 213, 221, 227, 229, 234, 248, 257, 329, 341, 344, 348, 349, 361, 362, 364, 365, 367, 368, 369, 370, 511, 588, 615, 617, 643, 665], "necessarili": [304, 306], "need": [4, 20, 41, 46, 63, 109, 203, 258, 349, 365, 586, 619, 620, 648], "needs_init": 185, "needs_pyapi": 185, "neg": [7, 11, 19, 24, 40, 62, 63, 88, 108, 109, 111, 159, 211, 214, 217, 219, 222, 223, 224, 227, 230, 239, 242, 253, 259, 263, 281, 283, 284, 285, 286, 312, 323, 358, 363, 366, 368, 369, 370, 477, 508, 509, 510, 511, 514, 515, 548, 556, 579, 595, 615, 617, 619, 620, 623, 625, 643], "negat": 599, "negative_binomi": 7, "neginf": 358, "neither": [113, 245, 246, 310, 321, 344, 363, 366], "nest": [49, 177, 267, 596, 614, 640, 647], "nested_it": 7, "net": [245, 246, 347, 353], "never": 641, "new": [25, 26, 41, 54, 71, 72, 73, 80, 82, 83, 94, 97, 98, 99, 100, 101, 104, 109, 122, 156, 159, 173, 177, 178, 187, 188, 196, 202, 205, 206, 211, 245, 246, 252, 253, 254, 255, 257, 267, 270, 275, 329, 341, 342, 343, 347, 349, 353, 356, 361, 362, 365, 367, 369, 440, 474, 477, 491, 501, 502, 506, 583, 587, 588, 592, 593, 596, 610, 614, 624, 626, 640, 647, 648, 649, 650, 658], "new_dtyp": 196, "new_ord": 196, "new_shap": 588, "newaxi": 211, "newli": [14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 51, 52, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 128, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 260, 261, 262, 268, 269, 272, 276, 281, 283, 284, 294, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 353, 354, 357, 440, 446, 496, 497, 499, 501, 502, 508, 509, 510, 512, 517, 518, 580, 582, 584, 590, 591, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 636, 637, 645, 649, 650], "newshap": 587, "next": [4, 235, 497], "nextaft": 7, "ngood": 541, "ni": [26, 350, 515, 619, 620], "nine": 531, "ninja": 4, "nj": [26, 515, 619, 620], "njm": 203, "nk": [26, 515, 619, 620], "nl": 11, "nlk": 203, "nn": 350, "noisi": 309, "non": [28, 39, 41, 45, 46, 47, 48, 49, 50, 54, 61, 63, 87, 94, 105, 106, 108, 111, 122, 128, 149, 159, 171, 205, 206, 213, 214, 218, 227, 230, 232, 238, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 270, 273, 278, 281, 292, 301, 323, 329, 330, 341, 343, 351, 358, 359, 360, 363, 366, 368, 370, 440, 446, 467, 477, 489, 498, 500, 501, 502, 507, 509, 510, 519, 549, 550, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 615, 623, 628, 630, 634, 642, 643, 648, 649, 650], "nonc": [549, 550], "noncentral_chisquar": 7, "noncentral_f": 7, "none": [11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 133, 141, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 165, 170, 171, 172, 173, 175, 184, 192, 194, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 300, 309, 311, 313, 314, 315, 317, 321, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 451, 459, 462, 463, 464, 468, 469, 470, 473, 474, 475, 476, 479, 480, 481, 483, 488, 489, 490, 491, 493, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 523, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 590, 591, 592, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 628, 630, 632, 634, 636, 637, 638, 639, 641, 642, 643, 645, 647, 648, 649, 650, 658], "nonzero": [7, 39, 94, 238, 292, 648, 658], "nor": [245, 246, 306, 363, 366], "norm": [7, 11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 300, 306, 309, 311, 328, 661], "normal": [7, 95, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 263, 265, 304, 305, 318, 327, 336, 526, 528, 544, 547, 558, 570, 579, 604, 645], "not_equ": [7, 207, 260, 261, 297, 298], "notabl": 291, "note": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 55, 56, 57, 62, 65, 66, 67, 69, 82, 83, 87, 91, 96, 102, 104, 109, 111, 112, 128, 156, 196, 203, 204, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 243, 245, 246, 248, 249, 250, 251, 252, 253, 263, 273, 275, 276, 281, 295, 296, 301, 303, 304, 311, 315, 320, 323, 328, 330, 341, 349, 354, 357, 365, 368, 369, 370, 446, 474, 498, 504, 506, 507, 509, 510, 514, 517, 532, 534, 535, 545, 550, 578, 584, 586, 587, 588, 590, 594, 604, 607, 609, 615, 616, 618, 623, 624, 626, 627, 632, 636, 638, 640, 641, 643, 644], "notic": [184, 227, 230], "notimplementederror": [14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 268, 270, 276, 281, 283, 284, 294, 295, 296, 297, 298, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 346, 347, 348, 352, 353, 354, 357, 363, 364, 366, 368, 369, 370, 440, 496, 497, 499, 501, 502, 508, 509, 510, 511, 512, 517, 518, 578, 582, 584, 586, 590, 591, 597, 601, 602, 603, 605, 607, 609, 611, 612, 615, 616, 617, 621, 622, 636, 637, 643, 645, 649, 650], "now": [19, 24, 48, 50, 90, 106, 306, 309, 343], "np": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 140, 141, 143, 148, 150, 154, 159, 160, 161, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 450, 451, 453, 456, 458, 459, 461, 466, 468, 472, 477, 478, 479, 489, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 511, 512, 513, 514, 515, 517, 518, 554, 556, 563, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "nr": 11, "nsamp": 541, "nsampl": 541, "nth": [323, 623], "nuc": [311, 315, 328], "nuclear": 315, "num": [0, 62, 208, 257, 329, 341, 627, 641], "number": [11, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39, 40, 41, 47, 51, 52, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 94, 106, 108, 110, 111, 148, 157, 160, 181, 190, 195, 197, 202, 203, 204, 211, 214, 215, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 235, 236, 244, 249, 250, 252, 253, 257, 259, 263, 264, 265, 270, 271, 276, 277, 278, 279, 281, 288, 292, 295, 296, 300, 308, 313, 315, 318, 319, 321, 324, 325, 329, 336, 341, 354, 358, 361, 362, 363, 366, 367, 368, 369, 370, 466, 475, 478, 494, 498, 504, 506, 507, 511, 512, 519, 531, 541, 565, 584, 585, 588, 590, 591, 592, 593, 594, 595, 602, 606, 609, 615, 618, 624, 626, 628, 632, 637, 638, 642, 643, 658, 661], "number_of_dimens": [148, 466, 494], "numer": [3, 4, 11, 14, 15, 16, 17, 18, 20, 29, 30, 31, 32, 33, 35, 40, 51, 52, 55, 57, 84, 85, 88, 92, 93, 112, 178, 207, 209, 212, 222, 223, 224, 227, 229, 244, 245, 246, 260, 261, 272, 277, 280, 281, 283, 284, 297, 298, 315, 316, 331, 332, 333, 334, 347, 353, 357, 496, 499, 508, 509, 510, 512, 580, 591, 595, 601, 602, 603, 605, 616, 621, 622, 636, 661], "numpi": [0, 1, 3, 4, 10, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 134, 135, 138, 140, 141, 148, 154, 159, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 439, 452, 453, 456, 458, 459, 466, 472, 477, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 658, 661], "nvidia": 4, "nx": [265, 350], "ny": [265, 350], "nyquist": [11, 217, 219, 220, 221, 222, 223, 224, 227, 229, 230, 232], "o": [4, 19, 24, 191], "obj": [36, 37, 38, 104, 178, 248, 263, 275, 291], "object": [28, 41, 45, 46, 47, 48, 49, 50, 53, 54, 87, 105, 106, 108, 114, 122, 128, 139, 141, 156, 171, 178, 181, 184, 186, 190, 191, 193, 196, 199, 200, 205, 206, 211, 214, 218, 232, 235, 237, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 271, 273, 275, 291, 300, 305, 315, 323, 329, 330, 341, 343, 351, 440, 446, 457, 459, 474, 489, 495, 500, 501, 502, 519, 520, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 587, 623, 628, 630, 634, 642, 649, 650, 658], "observ": 90, "obsolet": 282, "obtain": [11, 109, 248, 299, 303, 326, 498], "obviou": 11, "occupi": [235, 271], "occur": [25, 54, 75, 82, 83, 89, 104, 122, 203, 267, 275, 304, 344, 358, 440, 596, 614, 645, 647], "occurr": [36, 37, 63, 111, 263, 359, 360, 638], "odd": [11, 218, 221, 225, 226, 227, 229, 230, 232, 349, 365, 504], "off": [28, 221, 226, 303, 304, 309, 326], "offset": [109, 114, 132, 172, 178, 184, 194, 249, 250, 303, 326, 343, 450, 490, 625, 630, 631, 634, 635], "often": [104, 262], "ogrid": [273, 292, 648], "ogridclass": 500, "oil": [531, 548], "old": 588, "omit": [525, 557], "onc": 308, "one": [3, 4, 27, 36, 37, 38, 41, 43, 49, 58, 59, 60, 61, 86, 89, 91, 94, 100, 101, 104, 128, 138, 141, 142, 178, 191, 205, 207, 211, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 245, 246, 250, 254, 259, 264, 267, 270, 273, 275, 279, 292, 306, 311, 312, 315, 323, 328, 331, 332, 334, 343, 346, 347, 350, 351, 352, 353, 359, 360, 367, 369, 446, 456, 459, 460, 498, 500, 502, 507, 511, 548, 579, 593, 599, 607, 613, 614, 617, 619, 623, 627, 630, 631, 634, 635, 638, 649, 658], "oneapi": [4, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "onedpl": 4, "onemkl": [4, 304, 306], "ones": [7, 41, 48, 50, 61, 97, 100, 101, 104, 112, 133, 203, 205, 206, 207, 211, 214, 233, 254, 255, 268, 270, 293, 309, 313, 316, 342, 343, 361, 367, 451, 502, 503, 506, 511, 583, 589, 593, 626, 628, 636, 649, 650], "ones_lik": [7, 41, 206, 255, 501, 650], "onli": [11, 19, 24, 28, 36, 37, 38, 41, 44, 45, 46, 48, 50, 54, 58, 61, 62, 87, 95, 100, 101, 122, 141, 159, 161, 178, 188, 203, 204, 205, 206, 214, 220, 230, 234, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 273, 282, 299, 305, 307, 310, 313, 315, 316, 317, 318, 320, 321, 329, 330, 341, 343, 344, 346, 348, 352, 358, 359, 360, 363, 364, 366, 367, 368, 370, 440, 459, 477, 479, 501, 502, 505, 507, 508, 511, 523, 525, 529, 551, 557, 573, 578, 586, 587, 604, 607, 615, 617, 620, 632, 634, 638, 641, 643, 645, 648, 649, 650, 658], "open": [250, 273, 292, 329, 500, 525, 527, 529, 556, 559, 561, 562, 564, 573, 618], "opencl": [28, 41, 45, 46, 47, 48, 50, 87, 105, 108, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 270, 329, 330, 341, 351, 500, 501, 502, 628, 642, 649, 650], "oper": [11, 18, 26, 64, 65, 66, 67, 68, 69, 70, 112, 185, 192, 203, 204, 207, 211, 234, 244, 247, 260, 261, 276, 296, 297, 298, 299, 337, 339, 344, 346, 352, 354, 357, 358, 359, 360, 496, 499, 508, 509, 510, 514, 584, 590, 616, 624, 636, 638, 640, 641, 645, 651, 661], "operand": [203, 204, 323, 325, 503, 623], "opposit": [11, 196, 213, 221, 226, 507, 578], "optim": [4, 203, 204, 263, 264], "option": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 120, 122, 128, 138, 161, 171, 173, 178, 184, 196, 202, 203, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 309, 311, 313, 314, 315, 317, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 456, 479, 489, 491, 496, 497, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 665], "ord": [311, 315, 328], "order": [11, 14, 15, 16, 17, 18, 20, 23, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 109, 111, 112, 114, 120, 122, 128, 138, 150, 153, 156, 158, 161, 173, 181, 189, 194, 196, 197, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 217, 219, 222, 223, 224, 227, 229, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 259, 260, 261, 262, 263, 268, 269, 272, 276, 281, 282, 283, 284, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 311, 315, 321, 323, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 350, 353, 354, 356, 357, 379, 438, 440, 446, 456, 468, 471, 474, 476, 479, 491, 496, 497, 498, 499, 501, 502, 505, 506, 508, 509, 510, 512, 517, 518, 578, 579, 580, 582, 584, 586, 587, 588, 590, 591, 594, 597, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 616, 621, 622, 623, 626, 636, 637, 638, 639, 642, 645, 648, 649, 650, 661], "ordin": [309, 320], "ordinari": [227, 274, 299], "org": 91, "orient": [96, 515, 620], "origin": [27, 71, 109, 114, 171, 221, 227, 229, 248, 311, 315, 328, 350, 356, 367, 369, 489, 587, 588, 592, 638], "ortho": [11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233], "orthogon": [306, 318], "orthonorm": 318, "other": [43, 54, 71, 72, 73, 110, 122, 192, 222, 223, 224, 227, 229, 243, 248, 251, 270, 304, 306, 314, 315, 320, 356, 374, 375, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 440, 529, 573, 588, 593, 632, 638, 645, 651, 661], "otherwis": [3, 14, 15, 16, 17, 18, 19, 20, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 84, 85, 87, 88, 90, 92, 93, 94, 95, 102, 103, 105, 110, 112, 122, 156, 171, 184, 195, 198, 200, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 268, 269, 270, 274, 276, 281, 283, 284, 291, 294, 295, 296, 297, 298, 309, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 352, 353, 354, 355, 357, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 440, 474, 489, 496, 497, 499, 501, 502, 508, 509, 510, 511, 512, 517, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 583, 584, 585, 586, 587, 590, 591, 597, 598, 601, 602, 603, 605, 607, 609, 611, 612, 613, 615, 616, 617, 621, 622, 625, 636, 637, 643, 645, 648, 649, 650], "otim": [323, 623], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 123, 124, 125, 128, 129, 130, 133, 138, 141, 144, 145, 146, 151, 157, 163, 165, 170, 171, 172, 173, 175, 177, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 308, 310, 311, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 436, 437, 441, 442, 443, 446, 447, 448, 451, 456, 459, 462, 463, 464, 469, 475, 481, 483, 488, 489, 490, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 520, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 636, 637, 641, 642, 643, 644, 645, 647, 648, 649, 650], "outer": [7, 96, 109, 203, 204, 265, 293], "output": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 84, 85, 87, 88, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 112, 113, 122, 128, 178, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 268, 269, 270, 272, 273, 276, 277, 278, 281, 283, 284, 292, 294, 295, 296, 297, 298, 314, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 360, 361, 362, 364, 365, 367, 368, 369, 370, 440, 446, 496, 497, 499, 500, 501, 502, 508, 509, 510, 511, 512, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 584, 585, 587, 590, 591, 595, 597, 599, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 615, 616, 617, 619, 621, 622, 624, 625, 628, 630, 634, 636, 637, 638, 641, 642, 643, 645, 648, 649, 650, 661, 665], "outsid": [263, 264], "over": [11, 19, 24, 26, 27, 61, 63, 81, 97, 98, 99, 100, 101, 113, 138, 203, 204, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 251, 257, 263, 264, 274, 291, 301, 311, 315, 323, 327, 328, 329, 341, 342, 344, 346, 348, 350, 352, 361, 362, 363, 364, 366, 367, 368, 369, 370, 456, 495, 511, 515, 524, 527, 529, 556, 561, 572, 573, 578, 583, 588, 615, 617, 619, 620, 623, 627, 641, 643, 645, 661], "overal": [217, 219, 223, 224, 228, 229, 231, 233], "overflow": 242, "overlin": [91, 327, 645], "overrid": [96, 206, 255, 502, 650], "overview": 2, "overwrite_input": [349, 365], "p": [11, 300, 309, 312, 531, 534, 539, 545, 548, 641], "pack": [109, 578, 661], "packag": [0, 3], "packbit": 7, "pad": [7, 91, 178, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 588], "pad_valu": 504, "pad_width": 504, "padder": 504, "padding_func": 504, "page": [3, 661], "pair": [11, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 301, 304], "parallel": [1, 3, 4, 10, 38, 120, 161, 438, 479, 607, 651], "paramet": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 135, 138, 141, 156, 161, 171, 173, 176, 177, 178, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 453, 456, 459, 474, 479, 489, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "parameter": [523, 529, 551, 573], "parametr": 627, "pareto": 7, "pars": [250, 330], "part": [3, 11, 16, 17, 23, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 140, 154, 227, 245, 246, 272, 278, 279, 287, 288, 304, 305, 307, 343, 347, 353, 355, 458, 472, 504, 580, 581, 608, 630, 634, 637, 638, 658], "partial": [38, 120, 161, 349, 365, 438, 479, 607], "particular": [185, 314], "particularli": 203, "partit": [7, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 120, 122, 128, 161, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 438, 440, 446, 479, 489, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 607, 628, 630, 634, 642, 649, 650, 658], "pass": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 156, 183, 184, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 264, 265, 270, 273, 292, 309, 330, 343, 351, 358, 446, 474, 495, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 586, 628, 630, 631, 634, 635, 642, 645, 649, 650], "past": 74, "path": [4, 203, 204, 250, 330], "path_info": 204, "pathlib": 330, "pattern": 61, "pearson": 90, "penros": 317, "per": [203, 218, 232, 579], "percentil": [7, 349, 365], "perf_count": 0, "perform": [19, 24, 46, 47, 63, 79, 110, 171, 203, 217, 219, 222, 223, 224, 228, 229, 231, 233, 239, 299, 322, 489, 511, 617], "perhap": 586, "period": [11, 641], "permit": 250, "permut": [7, 173, 203, 356, 491, 506, 626, 661], "permute_dim": [7, 626], "perpendicular": 96, "pg": 315, "phase": [11, 23, 641], "phase_deg": 641, "pi": [0, 10, 11, 16, 29, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 102, 103, 216, 517, 603, 604, 605, 621, 622, 627, 641, 665], "pickl": [250, 330], "piecewis": 7, "pinv": 7, "pip": 4, "place": [7, 19, 20, 24, 25, 26, 40, 79, 81, 82, 83, 91, 98, 99, 100, 101, 104, 113, 138, 159, 161, 173, 211, 213, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 248, 273, 275, 277, 344, 346, 348, 349, 352, 358, 361, 362, 364, 365, 367, 368, 369, 370, 456, 477, 479, 491, 500, 504, 511, 514, 515, 566, 587, 588, 592, 595, 607, 614, 615, 617, 619, 625, 643, 658], "plane": 594, "platform": [98, 99, 100, 101, 189, 361, 362, 367, 369, 511, 617], "pleas": [0, 3, 44, 176, 203, 263, 266, 646, 658], "plot": 567, "plt": [350, 567], "plu": [331, 332, 334], "plugin": 4, "point": [11, 14, 15, 23, 28, 34, 40, 45, 46, 56, 61, 74, 88, 97, 191, 205, 206, 210, 214, 215, 216, 221, 222, 226, 227, 228, 229, 230, 235, 236, 242, 249, 250, 251, 253, 254, 255, 259, 269, 270, 272, 280, 295, 309, 312, 329, 330, 335, 336, 342, 348, 349, 358, 364, 365, 368, 370, 497, 501, 502, 526, 528, 558, 570, 580, 582, 583, 595, 597, 598, 604, 615, 627, 628, 643, 649, 650, 661], "pointer": [74, 186], "poisson": 7, "poli": 7, "polyadd": 7, "polyd": 7, "polydiv": 7, "polyfit": 7, "polyint": 7, "polymul": 7, "polysub": 7, "polyv": 7, "popul": [14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 40, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 84, 85, 88, 92, 93, 102, 103, 112, 121, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 268, 269, 272, 276, 281, 283, 284, 294, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 353, 354, 357, 439, 496, 497, 499, 508, 509, 510, 512, 517, 518, 524, 556, 580, 582, 584, 590, 591, 595, 597, 601, 602, 603, 604, 605, 609, 611, 612, 616, 621, 622, 636, 637], "portion": [263, 264], "posinf": 358, "posit": [7, 11, 19, 20, 24, 28, 40, 45, 46, 47, 62, 76, 88, 108, 109, 150, 164, 211, 214, 215, 217, 219, 222, 223, 224, 227, 230, 232, 235, 242, 250, 277, 281, 283, 284, 285, 286, 299, 312, 324, 356, 358, 363, 366, 369, 468, 482, 496, 506, 531, 555, 592, 593, 595, 597, 599, 611, 612, 625, 626], "possess": 304, "possibl": [11, 53, 54, 59, 60, 63, 122, 156, 176, 203, 204, 211, 245, 246, 259, 263, 265, 266, 343, 440, 474, 506, 515, 578, 587, 610, 613, 618, 619, 620, 626, 646], "possibli": 49, "pow": [7, 510, 658], "power": [7, 11, 210, 216, 242, 312, 509, 612, 642], "pre": 264, "precis": [14, 15, 61, 98, 99, 100, 101, 197, 203, 235, 242, 272, 309, 326, 343, 361, 362, 367, 369, 511, 580, 617, 625], "predecessor": 641, "prefer": [78, 87, 104, 128, 159, 446, 477, 498, 578], "prepend": [41, 110, 202, 624], "present": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 184, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 270, 273, 330, 343, 351, 363, 366, 369, 446, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 628, 630, 634, 642, 649, 650], "preserv": [54, 58, 59, 60, 79, 122, 187, 192, 203, 239, 240, 241, 242, 305, 306, 307, 349, 365, 440, 578, 586, 625, 632, 638], "press": [11, 315], "prevent": 203, "previou": [61, 504], "print": [0, 4, 47, 61, 86, 111, 171, 184, 204, 489, 495, 523, 524, 525, 526, 527, 528, 529, 548, 553], "print_device_info": 0, "printabl": 204, "printopt": 7, "prior": 110, "prob1": [335, 336], "prob12": [335, 336], "prob2": [335, 336], "probabl": [263, 265, 336, 349, 365, 531, 539, 548], "proce": 658, "process": [11, 91, 604], "processor": 203, "prod": [7, 98, 100, 324, 325, 367, 658], "produc": [11, 39, 187, 330, 515, 598, 620], "product": [90, 96, 98, 100, 113, 129, 133, 203, 204, 274, 292, 293, 301, 310, 314, 316, 320, 323, 324, 325, 327, 344, 357, 361, 367, 447, 451, 503, 511, 623, 644, 645, 661], "profil": [171, 489], "program": [4, 243, 651, 661], "progress": [257, 329], "project": [4, 192, 327, 512, 645], "promot": [16, 17, 18, 23, 28, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 75, 76, 88, 92, 93, 102, 103, 112, 209, 210, 212, 242, 244, 245, 246, 247, 257, 268, 296, 329, 331, 332, 333, 334, 335, 336, 341, 344, 347, 353, 354, 357, 497, 509, 510, 517, 518, 582, 584, 589, 590, 597, 601, 603, 604, 605, 609, 611, 612, 616, 621, 622, 624, 636, 637, 645], "promote_typ": 7, "propag": [192, 245, 246, 346, 347, 352, 353, 361, 362, 363, 366, 367, 369], "proper": [245, 246, 304, 306], "properti": [11, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 115, 122, 128, 131, 134, 136, 137, 140, 142, 143, 147, 148, 154, 159, 160, 164, 167, 168, 169, 171, 173, 174, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 305, 307, 318, 329, 330, 341, 343, 351, 372, 440, 446, 449, 452, 454, 455, 458, 460, 461, 465, 466, 472, 477, 478, 482, 485, 486, 487, 489, 491, 492, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650, 658], "proport": 604, "protocol": [49, 178, 199, 248], "prototyp": 206, "provid": [0, 7, 11, 36, 37, 41, 62, 81, 82, 83, 89, 97, 114, 176, 203, 204, 211, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 252, 263, 264, 267, 280, 285, 286, 313, 317, 342, 359, 360, 363, 366, 367, 369, 525, 557, 560, 583, 586, 596, 614, 619, 627, 638, 645, 647, 648, 665], "pseudo": [317, 519], "ptp": 7, "pure": [11, 221, 227, 229, 230], "purpos": [39, 309, 315], "put": [7, 11, 213, 221, 227, 229, 507, 515, 620, 658], "put_along_axi": [7, 514, 620], "putmask": [7, 514], "pval": 546, "py": 4, "pypi": 4, "pyplot": [350, 567], "pytest": 4, "python": [0, 2, 3, 5, 49, 62, 141, 185, 186, 247, 248, 354, 459, 556, 584, 585, 658], "q": [306, 312, 318, 325, 349, 365], "q_prof": [171, 489], "qquad": 11, "qr": 7, "quad": 11, "quadrant": [23, 31, 33, 51, 55, 217], "quantil": 7, "quaternion": 312, "question": 105, "queue": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 446, 489, 500, 501, 502, 519, 522, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "quick": [2, 3], "quickest": 578, "quickli": [292, 665], "quicksort": [38, 607], "quotient": [34, 56], "r": [90, 96, 103, 265, 318], "r1": 90, "r2": [90, 318], "r3": 90, "rad": 103, "rad2deg": [7, 102, 103, 641], "radian": [7, 16, 17, 23, 29, 30, 31, 33, 34, 51, 55, 56, 102, 103, 517, 641, 665], "radix": [38, 120, 161, 438, 479, 607], "radixsort": [38, 120, 161, 438, 479, 607], "rais": [14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 84, 85, 87, 88, 89, 92, 93, 97, 102, 103, 111, 112, 113, 122, 123, 143, 176, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 266, 268, 270, 276, 281, 283, 284, 294, 295, 296, 297, 298, 312, 314, 315, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 352, 353, 354, 357, 359, 360, 363, 364, 366, 368, 369, 370, 440, 441, 461, 496, 497, 499, 501, 502, 508, 509, 510, 511, 512, 517, 518, 578, 579, 582, 583, 584, 586, 587, 590, 591, 597, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 615, 616, 617, 621, 622, 636, 637, 643, 645, 646, 649, 650, 658], "ramp": 504, "rand": [7, 90, 204, 527, 529, 559, 561, 562, 564], "randint": [7, 141, 459, 529, 560], "randn": [7, 239, 240, 241, 317, 318, 321, 325, 523, 528, 614], "random": [90, 141, 204, 239, 240, 241, 265, 306, 314, 317, 318, 321, 325, 459, 614, 651, 661], "random_integ": [7, 525, 529, 557], "random_sampl": [7, 524, 529, 556, 559, 562, 564], "randomli": 553, "randomst": 557, "ranf": 7, "rang": [0, 62, 111, 252, 263, 264, 265, 323, 336, 506, 513, 514, 548, 553, 579, 585, 614, 623, 626, 641, 661], "rank": [211, 213, 251, 309, 313, 326, 504, 618], "rate": [218, 232], "rather": 498, "ratio": [0, 112, 244, 309, 636, 665], "ration": 661, "ravel": [7, 138, 213, 238, 315, 456, 503, 587, 658], "ravel_multi_index": [7, 639], "raveled_indic": 579, "raw": 318, "rayleigh": 7, "rcond": [309, 317], "re": [27, 36, 37, 105, 227, 592], "read": [105, 109, 138, 188, 249, 250, 252, 253, 330, 456, 578, 587], "readonli": 192, "real": [7, 13, 14, 15, 16, 17, 23, 28, 29, 30, 31, 32, 33, 34, 35, 42, 51, 52, 55, 56, 57, 76, 77, 88, 97, 216, 219, 221, 226, 227, 228, 229, 230, 231, 233, 235, 243, 245, 246, 247, 268, 272, 278, 280, 287, 288, 299, 304, 305, 306, 307, 313, 317, 318, 319, 321, 335, 336, 342, 347, 353, 354, 358, 368, 370, 531, 548, 581, 582, 583, 584, 597, 608, 609, 615, 637, 638, 643, 658, 661], "real_if_clos": [7, 23, 272, 580], "rearrang": [150, 468, 661], "reason": 229, "rebuild": 177, "recal": 186, "recent": [25, 63, 613], "recip": [4, 11], "reciproc": [7, 597, 611], "recommend": [203, 498, 624], "reconstruct": [183, 321, 638], "recov": 11, "reduc": [19, 24, 36, 37, 61, 318, 321, 342, 346, 348, 349, 350, 352, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 511, 583, 588, 615, 617, 643], "reduce_hypot": 268, "reduct": [19, 24], "redund": 230, "refer": [0, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 172, 173, 175, 176, 177, 178, 186, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 458, 459, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 488, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658], "reflect": [504, 658], "reflect_typ": 504, "reflector": 318, "regardless": [180, 305, 307, 646], "regular": 330, "rel": [20, 38, 120, 161, 164, 277, 303, 313, 326, 438, 479, 482, 592, 593, 607], "relat": [91, 188], "relationship": 90, "relev": [181, 257, 329, 341], "rem": 247, "remain": [19, 24, 61, 204, 231, 233, 248, 263, 342, 348, 349, 356, 364, 365, 368, 370, 583, 587, 615, 632, 643], "remaind": [7, 244, 247, 354, 509, 510], "remov": [26, 36, 37, 102, 104, 109, 162, 211, 227, 303, 326, 480, 511, 517, 613, 617, 632, 645, 661], "reorder": [203, 239, 325, 356], "rep": 624, "repeat": [7, 27, 217, 219, 223, 224, 228, 229, 231, 233, 234, 304, 305, 306, 307, 350, 507, 588, 624, 627, 638, 658], "repeatedli": [26, 27, 203], "repetit": [0, 585, 624], "replac": [3, 11, 26, 49, 79, 213, 358, 361, 362, 507, 515, 534, 587, 599, 658], "replic": 624, "repo": 4, "repr": 416, "repres": [11, 28, 41, 45, 46, 48, 49, 50, 61, 62, 64, 65, 67, 68, 70, 90, 186, 204, 222, 230, 248, 251, 257, 259, 273, 276, 319, 329, 341, 350, 370, 504, 520, 588, 632, 638, 658], "represent": [62, 64, 65, 66, 67, 68, 69, 70, 204, 235, 271, 273, 276, 296, 358, 497, 590, 609, 658], "request": 593, "requir": [4, 7, 41, 46, 47, 48, 50, 54, 100, 101, 122, 159, 171, 179, 183, 185, 186, 203, 215, 273, 358, 440, 477, 489, 504, 587, 588], "res_cpu": 105, "res_host": 105, "resampl": 604, "rese": 565, "reset": 658, "reshap": [0, 7, 18, 27, 36, 37, 39, 58, 60, 61, 105, 106, 107, 109, 112, 113, 132, 138, 143, 159, 173, 176, 177, 203, 211, 213, 220, 225, 239, 247, 266, 273, 274, 275, 292, 293, 303, 310, 311, 315, 323, 326, 328, 343, 344, 346, 352, 357, 450, 456, 461, 477, 491, 504, 507, 553, 578, 586, 588, 592, 594, 616, 623, 625, 627, 630, 631, 634, 635, 636, 638, 640, 646, 658], "resid": [211, 215, 248], "residu": 309, "resiz": [7, 211, 658], "resolut": 235, "resolv": [97, 211, 342, 583], "resourc": 0, "respect": [18, 27, 34, 56, 62, 64, 66, 68, 69, 70, 112, 164, 207, 242, 244, 247, 259, 260, 261, 296, 297, 298, 301, 335, 336, 337, 339, 340, 354, 357, 482, 499, 509, 510, 584, 590, 616, 636, 641], "rest": 44, "restor": 592, "restrict": 327, "result": [0, 4, 11, 19, 24, 27, 34, 36, 37, 39, 41, 56, 61, 63, 64, 65, 66, 67, 68, 69, 70, 75, 79, 81, 82, 83, 88, 90, 91, 94, 97, 98, 99, 100, 101, 104, 112, 113, 178, 196, 204, 206, 207, 212, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 242, 244, 249, 250, 251, 252, 253, 255, 257, 260, 261, 263, 264, 265, 273, 276, 281, 283, 284, 285, 286, 291, 295, 296, 297, 298, 299, 303, 304, 310, 311, 315, 318, 323, 328, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 348, 349, 352, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 498, 499, 502, 503, 509, 510, 511, 514, 527, 531, 561, 583, 587, 589, 590, 591, 593, 595, 598, 601, 602, 604, 610, 614, 615, 617, 619, 620, 623, 624, 627, 632, 636, 637, 638, 640, 643, 645, 648, 650, 658], "result_dpnp": 0, "result_numpi": 0, "result_typ": [7, 75, 178, 661], "ret": 518, "retain": 587, "retriev": [109, 200, 303], "retstep": 329, "return": [0, 5, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 127, 128, 129, 130, 132, 134, 136, 137, 138, 141, 144, 145, 146, 148, 149, 150, 151, 153, 156, 157, 160, 161, 163, 164, 165, 171, 172, 173, 175, 176, 177, 180, 192, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 450, 452, 454, 455, 456, 459, 462, 463, 464, 466, 467, 468, 469, 471, 474, 475, 478, 479, 481, 482, 483, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 551, 553, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 658], "return_count": 638, "return_index": 638, "return_invers": 638, "reus": [248, 264], "revers": [91, 109, 173, 234, 239, 240, 241, 303, 491, 506, 594, 626, 627, 640, 642], "rewrit": 309, "rfft": [7, 11, 218, 221, 226, 227, 228, 229, 231, 232, 233], "rfft2": [7, 228], "rfftfreq": [7, 218], "rfftn": [7, 216, 219, 229, 230, 231], "right": [11, 33, 55, 66, 69, 79, 96, 109, 111, 240, 241, 268, 296, 301, 304, 305, 306, 307, 314, 325, 343, 572, 583, 590, 598, 625, 627, 630, 634, 642], "right_shift": [7, 66, 69, 296], "rightmost": [263, 264, 325], "rint": [7, 40, 77, 236, 243, 595, 637], "rl": [316, 503], "roll": [7, 593], "rollaxi": [7, 592], "root": [7, 76, 268, 300, 582, 583, 597, 611, 612], "rot90": [7, 240, 241], "rotat": [240, 241, 594], "roughli": [197, 309], "round": [7, 28, 40, 77, 221, 226, 236, 243, 244, 304, 354, 584, 591, 637, 658, 661], "routin": [2, 651, 658], "row": [50, 54, 80, 82, 83, 90, 98, 99, 100, 101, 109, 122, 177, 214, 240, 241, 259, 267, 270, 273, 314, 321, 440, 498, 578, 579, 596, 610, 614, 628, 630, 638, 639, 646, 647], "row_stack": [7, 647], "rowvar": [90, 95], "rsqrt": [582, 611], "rtol": [20, 277, 313, 317], "rule": [16, 17, 18, 19, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 61, 64, 66, 68, 69, 70, 75, 76, 88, 89, 92, 93, 96, 99, 101, 102, 103, 112, 209, 210, 212, 244, 245, 246, 247, 257, 268, 296, 301, 329, 331, 332, 333, 334, 335, 336, 341, 342, 344, 347, 348, 349, 353, 354, 357, 364, 365, 368, 370, 497, 509, 510, 517, 518, 582, 583, 584, 589, 590, 597, 601, 603, 604, 605, 609, 611, 612, 615, 616, 617, 621, 622, 627, 636, 637, 643, 645], "run": [0, 4], "runtim": 4, "runtimewarn": [363, 366], "s1": [164, 178, 293, 482], "s10": 178, "s16": 184, "s2": [164, 181, 482], "s25": 178, "s3": [164, 482], "s_": 26, "safe": [54, 75, 82, 83, 89, 122, 203, 267, 344, 440, 596, 614, 645, 647], "sai": 587, "said": 325, "same": [4, 11, 14, 15, 18, 19, 20, 24, 25, 26, 27, 34, 36, 37, 38, 39, 40, 42, 43, 48, 50, 53, 54, 56, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 88, 90, 91, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 120, 121, 122, 156, 161, 173, 177, 206, 207, 211, 213, 222, 223, 224, 229, 234, 236, 242, 244, 245, 246, 247, 248, 255, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 274, 276, 277, 285, 286, 287, 293, 294, 295, 296, 297, 298, 301, 303, 306, 312, 317, 318, 322, 323, 326, 335, 336, 337, 339, 340, 342, 346, 347, 348, 349, 352, 353, 354, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 439, 440, 474, 479, 491, 495, 497, 499, 502, 504, 507, 509, 510, 511, 515, 523, 525, 529, 551, 557, 573, 578, 580, 583, 584, 585, 587, 590, 592, 593, 596, 598, 599, 607, 613, 614, 615, 616, 617, 619, 620, 623, 625, 629, 631, 633, 635, 636, 639, 643, 644, 647, 650, 665], "same_kind": [54, 75, 82, 83, 89, 122, 203, 267, 344, 440, 596, 614, 645, 647], "sampl": [11, 218, 225, 227, 230, 232, 257, 259, 263, 265, 329, 341, 515, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 563, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 620, 627, 630, 634, 651, 661], "sample_count": 265, "sample_r": 232, "satisfi": [41, 46, 48, 50, 54, 122, 213, 308, 440, 507, 586, 599], "save": [7, 250, 349, 365, 665], "savetxt": 7, "savez": 7, "savez_compress": 7, "scalar": [18, 20, 25, 34, 41, 42, 43, 45, 46, 48, 49, 50, 56, 64, 66, 68, 69, 70, 75, 87, 88, 89, 96, 105, 108, 110, 112, 113, 135, 141, 178, 183, 203, 204, 207, 213, 218, 232, 234, 242, 244, 245, 246, 247, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 268, 274, 275, 277, 279, 288, 289, 293, 294, 295, 296, 297, 298, 310, 320, 323, 329, 335, 336, 337, 339, 340, 341, 343, 344, 347, 350, 353, 354, 357, 453, 459, 494, 497, 499, 504, 507, 509, 510, 514, 515, 519, 523, 525, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 551, 552, 554, 555, 557, 560, 563, 565, 569, 571, 572, 573, 574, 575, 576, 577, 581, 584, 590, 598, 599, 616, 619, 623, 627, 636, 637, 642, 644, 648, 658], "scale": [11, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 257, 293, 318, 329, 341, 523, 536, 538, 540, 541, 542, 543, 551, 563, 568, 575], "scientif": 11, "scipi": 208, "scope": 4, "script": 4, "search": [204, 651, 661], "searchsort": [7, 111, 120, 161, 263, 438, 479, 607, 658], "second": [18, 20, 34, 42, 43, 56, 61, 64, 66, 68, 69, 70, 74, 88, 91, 96, 109, 112, 113, 178, 204, 207, 210, 217, 218, 219, 220, 223, 224, 227, 230, 232, 242, 244, 245, 246, 247, 256, 259, 260, 261, 263, 264, 266, 267, 268, 274, 277, 293, 294, 296, 297, 298, 301, 303, 310, 323, 326, 327, 335, 336, 337, 339, 340, 343, 344, 346, 347, 350, 352, 353, 354, 357, 499, 503, 509, 510, 584, 590, 594, 612, 616, 618, 623, 625, 636, 644, 645], "section": [4, 44, 179, 219, 224, 229, 233, 311, 328, 658], "see": [3, 40, 90, 188, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 263, 265, 309, 311, 328, 504, 546, 595, 630, 631, 634, 635, 638, 658], "seed": [7, 90, 141, 204, 459, 519], "seek": 250, "seldom": 242, "select": [7, 38, 81, 89, 120, 125, 161, 213, 248, 346, 352, 438, 443, 479, 607, 613, 619, 627, 651], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "self": [137, 373, 374, 375, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455], "semant": [263, 265], "sens": 325, "sep": [250, 253], "separ": [11, 156, 178, 203, 250, 253, 264, 358, 474, 588], "sequenc": [27, 44, 49, 58, 59, 60, 80, 82, 83, 86, 91, 176, 177, 203, 204, 205, 206, 217, 219, 223, 224, 227, 228, 229, 231, 233, 254, 255, 257, 263, 264, 265, 266, 267, 273, 275, 291, 292, 314, 323, 329, 341, 349, 356, 365, 501, 502, 504, 507, 553, 556, 566, 585, 586, 589, 596, 610, 614, 623, 627, 640, 646, 647, 649, 650], "sequenti": [95, 208, 355, 367], "seri": [11, 227, 545], "serv": 640, "set": [11, 26, 36, 37, 38, 41, 54, 63, 78, 81, 90, 94, 105, 106, 108, 111, 120, 122, 123, 137, 159, 161, 178, 192, 203, 205, 254, 263, 264, 270, 273, 311, 313, 315, 316, 317, 328, 329, 346, 352, 359, 360, 369, 429, 438, 440, 441, 455, 477, 479, 501, 502, 503, 504, 511, 599, 601, 602, 607, 617, 630, 634, 649, 650, 658], "set_bit_gener": 7, "set_printopt": 7, "set_stat": 7, "setbufs": 7, "setdiff1d": 7, "seterr": 7, "seterrcal": 7, "setfield": [7, 184], "setflag": 7, "setup": 4, "setuptool": 4, "setxor1d": 7, "sever": 308, "shape": [4, 7, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 81, 82, 83, 84, 85, 88, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 121, 122, 148, 156, 160, 162, 173, 177, 178, 180, 200, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 239, 242, 243, 244, 245, 246, 247, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 274, 275, 276, 281, 283, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 302, 303, 308, 309, 310, 311, 312, 314, 318, 319, 320, 321, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 439, 440, 466, 474, 478, 480, 491, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 511, 512, 514, 515, 517, 518, 524, 525, 526, 527, 528, 538, 541, 546, 547, 552, 556, 557, 558, 559, 560, 561, 562, 564, 569, 570, 576, 578, 579, 580, 582, 583, 584, 585, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 628, 629, 631, 633, 634, 635, 636, 637, 639, 640, 643, 645, 646, 647, 648, 649, 650, 651, 661], "share": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 446, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 628, 630, 634, 642, 649, 650], "shared_bin": 264, "shares_memori": 7, "shift": [11, 66, 69, 217, 219, 220, 224, 225, 296, 590, 592], "short": [604, 637, 645, 658], "shortcut": 504, "shorter": [221, 227], "shorthand": [14, 15, 18, 64, 65, 66, 67, 68, 69, 70, 112, 207, 244, 260, 261, 276, 296, 297, 298, 337, 339, 344, 354, 357, 496, 499, 508, 509, 510, 584, 590, 616, 636, 648], "should": [26, 36, 37, 41, 44, 54, 81, 109, 111, 113, 122, 158, 203, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 247, 250, 258, 263, 275, 292, 309, 312, 323, 344, 356, 359, 360, 363, 366, 440, 476, 504, 546, 579, 587, 588, 598, 609, 619, 623, 625, 639, 641, 645, 658], "show": [10, 43, 181, 234, 268, 340, 350, 358, 361, 362, 363, 366, 369, 567], "show_config": 7, "show_runtim": 7, "shown": 4, "shuffl": 7, "side": [158, 259, 306, 476, 598, 632], "sigma": [544, 551], "sign": [7, 11, 20, 62, 88, 184, 191, 277, 280, 302, 319, 354, 496, 508, 511, 584, 602, 617, 637], "signal": [11, 91, 218, 221, 226, 227, 229, 232, 604, 641], "signatur": [343, 344, 504, 645], "signbit": [7, 601], "signific": 203, "significantli": 62, "signum": 601, "similar": [3, 45, 46, 128, 159, 178, 257, 275, 301, 303, 310, 316, 326, 327, 329, 341, 343, 446, 477, 507, 525, 557, 630, 631, 634, 635], "simpl": [4, 340, 661], "simpli": [107, 173, 250, 263, 264, 295, 491], "sin": [0, 7, 31, 32, 51, 52, 92, 306, 350, 604, 605, 621, 627], "sinc": [7, 90, 161, 227, 304, 306, 479, 498, 640], "sine": [16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 603, 604, 605, 621, 622], "sing": 315, "singl": [10, 11, 38, 72, 73, 80, 90, 141, 162, 203, 204, 259, 275, 314, 323, 346, 352, 459, 480, 495, 511, 525, 526, 527, 528, 548, 556, 557, 558, 559, 560, 561, 562, 564, 570, 617, 623, 627, 645, 658], "singleton": [19, 24, 61, 211, 342, 348, 349, 363, 364, 365, 366, 368, 370, 583, 613, 615, 643], "singular": [308, 309, 313, 315, 317, 321, 322], "sinh": [7, 17, 30, 32, 52, 93, 603, 622], "sinu": 604, "size": [0, 7, 28, 36, 37, 41, 44, 61, 63, 74, 81, 82, 83, 94, 95, 98, 99, 106, 111, 141, 142, 159, 176, 178, 190, 193, 204, 213, 216, 218, 222, 232, 250, 257, 259, 265, 266, 267, 301, 303, 311, 315, 316, 318, 321, 323, 327, 328, 329, 341, 343, 346, 348, 352, 359, 360, 361, 362, 364, 367, 369, 459, 460, 477, 495, 501, 507, 511, 523, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 557, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 588, 592, 596, 610, 613, 614, 617, 623, 634, 640, 641, 645, 646, 647, 649, 658], "skip": 109, "slice": [26, 27, 81, 104, 125, 213, 275, 359, 360, 363, 364, 366, 368, 370, 443, 514, 515, 599, 620, 627, 632, 634, 635, 658], "slogdet": [7, 302], "slower": [323, 623], "slowest": [138, 456, 578, 587], "small": [20, 212, 277, 309, 317, 333, 335, 336, 358, 634], "smaller": [110, 150, 216, 217, 219, 222, 223, 224, 226, 228, 229, 230, 231, 233, 235, 309, 354, 468, 507, 584, 641], "smallest": [235, 271, 315, 632, 638], "smallest_norm": 235, "smat": 321, "so": [11, 16, 17, 19, 24, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 61, 187, 192, 207, 221, 226, 242, 263, 275, 288, 323, 329, 336, 342, 348, 349, 350, 364, 365, 368, 370, 567, 583, 615, 623, 624, 643], "softwar": 4, "solut": [309, 320, 588], "solv": [7, 309, 324, 325, 661], "some": [28, 183, 192, 211, 213, 243, 265, 274, 309, 504, 507, 641, 648, 658], "sometim": [91, 262, 658], "somewhat": 312, "sophist": 312, "sort": [7, 26, 38, 44, 120, 150, 176, 266, 321, 349, 365, 438, 468, 506, 598, 608, 610, 620, 626, 627, 638, 646, 651, 658, 661], "sort_complex": 7, "sorter": [158, 476, 598], "sought": 300, "sourc": [4, 13, 19, 20, 21, 22, 24, 25, 26, 27, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 58, 59, 60, 61, 62, 63, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 141, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 202, 203, 204, 205, 206, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 267, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 494, 495, 498, 501, 502, 503, 504, 505, 507, 511, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 585, 586, 587, 588, 589, 592, 593, 594, 598, 599, 600, 606, 607, 608, 610, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "space": [7, 28, 218, 220, 232, 250, 257, 259, 329, 341, 627, 665], "spars": [273, 350], "speak": 315, "special": [2, 186, 208, 651, 661], "specif": [0, 4, 181, 183, 196, 251, 265], "specifi": [19, 24, 25, 26, 28, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 61, 62, 73, 75, 81, 82, 83, 87, 97, 98, 99, 100, 101, 104, 105, 108, 109, 120, 132, 141, 171, 203, 204, 205, 206, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 239, 242, 249, 250, 251, 252, 254, 255, 257, 259, 270, 280, 282, 303, 305, 307, 315, 323, 324, 325, 326, 327, 328, 329, 330, 341, 342, 348, 349, 351, 361, 362, 364, 365, 367, 368, 369, 370, 438, 450, 459, 489, 500, 501, 502, 506, 507, 511, 514, 515, 525, 528, 542, 552, 570, 578, 579, 583, 586, 588, 592, 593, 594, 595, 599, 606, 614, 615, 617, 619, 620, 623, 625, 626, 627, 628, 632, 638, 640, 642, 643, 645, 649, 650], "spectrum": [11, 220, 221, 225, 226], "speed": 203, "speedup": 204, "spell": 498, "split": [7, 44, 82, 83, 176, 177, 266, 267, 596, 614, 640, 646, 647, 661], "spreadsheet": 243, "sqrt": [7, 11, 76, 140, 154, 458, 472, 583, 597, 612], "squar": [7, 76, 268, 270, 299, 300, 304, 305, 306, 308, 309, 312, 319, 324, 325, 343, 368, 370, 533, 549, 582, 583, 597, 599, 611, 615, 631, 635, 642, 643], "squeez": [7, 211, 658], "src": 89, "stabil": [38, 120, 161, 438, 479, 607], "stabl": [38, 120, 161, 438, 479, 607], "stack": [7, 80, 82, 83, 177, 267, 302, 303, 310, 311, 313, 317, 318, 319, 320, 322, 326, 344, 345, 498, 596, 610, 620, 640, 647], "stai": 79, "stand": 259, "standard": [2, 20, 141, 163, 235, 244, 247, 348, 354, 364, 368, 370, 459, 481, 526, 528, 544, 551, 558, 567, 568, 569, 570, 571, 584, 615, 643, 651, 658, 661], "standard_cauchi": 7, "standard_exponenti": 7, "standard_gamma": 7, "standard_norm": [7, 523, 526, 558], "standard_t": 7, "start": [2, 3, 28, 48, 50, 204, 218, 222, 232, 249, 257, 329, 341, 343, 588, 593, 630, 634], "start_tim": 0, "stat_length": 504, "state": 520, "statist": [504, 651, 661], "std": [7, 348, 364, 368, 370, 643, 658], "stdev": [528, 570], "step": [4, 28, 204, 257, 262, 329, 341], "sticki": [178, 187], "still": [61, 266, 315, 632, 646], "stop": [28, 257, 329, 341], "store": [236, 257, 285, 286, 326, 329, 336, 341, 344, 503, 645], "str": [47, 49, 62, 82, 83, 197, 203, 204, 250, 253, 267, 280, 330, 430, 504, 586, 596, 614, 647], "str_": [183, 184, 190, 194], "straightforward": 273, "stream": [171, 489], "strictli": 315, "stride": [53, 54, 114, 122, 440], "string": [28, 41, 45, 46, 47, 48, 49, 50, 54, 62, 64, 65, 66, 67, 68, 69, 70, 87, 105, 106, 108, 122, 128, 171, 178, 181, 184, 191, 196, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 276, 296, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 504, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 590, 628, 630, 632, 634, 642, 649, 650, 658], "string_repr": 204, "stringio": 330, "strongli": [4, 624], "struct": [178, 187], "structur": [178, 188, 330], "student": 571, "style": [54, 122, 440, 498, 504, 578, 579, 639], "sub": [44, 82, 83, 104, 109, 176, 186, 195, 196, 198, 200, 203, 266, 267, 325, 326, 596, 610, 614, 625, 628, 640, 646, 647], "subarrai": [104, 180, 183, 273, 638], "subclass": [46, 586], "subdiagon": [303, 326], "subdivid": 178, "subdtyp": 180, "subject": 4, "subok": [14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 41, 51, 52, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 206, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 255, 256, 260, 261, 262, 268, 276, 281, 283, 284, 294, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 347, 353, 354, 357, 440, 496, 497, 499, 502, 508, 509, 510, 512, 517, 518, 582, 584, 590, 591, 597, 601, 602, 603, 605, 609, 611, 612, 616, 621, 622, 636, 637, 645, 650], "subscript": [203, 204], "subset": [3, 259, 613, 661], "subtract": [7, 504], "subtyp": 578, "succeed": 202, "success": [47, 531, 539, 548], "suffici": 62, "sugar": [107, 631, 635], "suggest": 109, "suit": 4, "suitabl": [39, 141, 173, 459, 491, 515, 588, 598, 620], "sum": [0, 3, 4, 7, 11, 18, 27, 61, 63, 97, 99, 100, 101, 105, 108, 109, 110, 113, 130, 172, 203, 222, 263, 265, 268, 274, 300, 309, 310, 315, 323, 324, 326, 335, 336, 342, 344, 361, 362, 369, 448, 490, 531, 546, 548, 583, 623, 625, 627, 645, 658, 661], "sum_": [11, 315, 327, 645], "sum_along_diagon": 625, "sum_n": 91, "sum_of_weight": 61, "summari": 651, "summat": [113, 203, 204, 274, 323, 325, 344, 503, 623, 645], "superdiagon": [303, 326], "suppli": [221, 226, 314, 504, 526, 558], "support": [3, 4, 10, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 84, 85, 87, 88, 92, 93, 95, 102, 103, 112, 122, 159, 192, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 268, 270, 275, 276, 281, 283, 284, 294, 295, 296, 297, 298, 301, 303, 310, 316, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 346, 347, 348, 352, 353, 354, 355, 357, 359, 360, 363, 364, 366, 367, 368, 369, 370, 440, 477, 496, 497, 499, 501, 502, 505, 508, 509, 510, 511, 512, 513, 516, 517, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 584, 586, 590, 591, 597, 601, 602, 603, 607, 609, 611, 612, 615, 616, 617, 621, 622, 632, 636, 637, 643, 645, 649, 650, 665], "sure": 586, "surnam": 178, "surpris": [222, 223, 224], "svd": [7, 300, 308, 313, 317, 322], "svdval": 7, "swap": [181, 196, 217, 220, 618], "swapax": [7, 356, 658], "swapped_cod": [181, 196], "swapped_dt": 196, "sy": [181, 196], "sycl": [0, 3, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "sycl_devic": [171, 489], "sycl_queu": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 114, 128, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 446, 500, 501, 502, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "sycldevic": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 521, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "syclqueu": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 440, 446, 489, 500, 501, 502, 519, 522, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 628, 630, 634, 642, 649, 650], "sycltim": [171, 489], "symmetr": [221, 227, 229, 230, 299, 304, 305, 306, 307, 313, 317, 321, 504], "symmetri": [11, 216, 221, 226, 227, 230], "synchron": [171, 489], "syntact": [107, 631, 635], "syntax": 658, "sys_is_l": [181, 196], "system": [3, 4, 62, 320], "t": [11, 82, 83, 95, 173, 186, 221, 282, 299, 304, 306, 309, 491, 498, 571, 578, 627], "t1": 665, "tabl": [2, 10, 311, 328, 651], "tack": 200, "take": [7, 27, 80, 81, 213, 292, 343, 507, 515, 578, 587, 598, 599, 604, 620, 638, 641, 658, 665], "take_along_axi": [7, 36, 37, 38, 78, 515, 619], "taken": [61, 109, 110, 202, 204, 221, 227, 228, 229, 230, 231, 233, 262, 263, 344, 368, 370, 599, 615, 625, 628, 630, 634, 643, 644, 645], "tall": 234, "tan": [7, 31, 33, 34, 35, 51, 55, 56, 57, 92, 603, 622], "tangent": [16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 603, 605, 621, 622], "tanh": [7, 17, 30, 35, 57, 93, 605, 621], "target": [54, 75, 122, 171, 248, 440, 489, 514], "tau": 318, "tbb": 4, "tempfil": 250, "temporari": [250, 665], "temporaryfil": 250, "ten": 539, "tensor": [49, 114, 171, 203, 204, 248, 323, 324, 325, 359, 360, 363, 366, 367, 489, 513, 623], "tensordot": [7, 113, 203, 274, 324, 325, 344, 503], "tensorinv": [7, 325], "tensorsolv": [7, 324], "term": [11, 18, 112, 204, 216, 217, 219, 222, 223, 224, 227, 230, 357, 616, 636], "test": [0, 2, 19, 20, 24, 207, 260, 261, 278, 280, 281, 283, 284, 285, 286, 297, 298, 367, 498, 499, 531, 658, 661], "test_repetit": 0, "test_typ": 0, "teukolski": 11, "text": [91, 249, 250, 252, 253, 330], "th": [99, 101, 105, 108, 110, 173, 202, 214, 259, 273, 349, 365, 491, 500, 506, 599, 626, 629, 631, 633, 635], "than": [26, 27, 41, 66, 69, 81, 98, 99, 100, 101, 143, 150, 176, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 240, 241, 244, 251, 260, 261, 263, 264, 267, 296, 297, 298, 309, 313, 317, 318, 323, 326, 361, 362, 367, 369, 461, 468, 498, 504, 507, 511, 588, 590, 599, 601, 613, 614, 617, 623, 625, 637, 641, 665], "thei": [18, 20, 34, 43, 56, 64, 66, 68, 69, 70, 88, 112, 185, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 277, 282, 294, 295, 296, 297, 298, 306, 309, 323, 335, 336, 337, 339, 340, 347, 353, 354, 357, 497, 499, 509, 510, 584, 590, 596, 598, 616, 623, 627, 630, 634, 636, 641, 642, 647, 658], "them": [80, 313, 317, 658], "theor": 304, "theoret": 204, "therefor": [64, 70, 216, 230, 251, 305, 307, 588], "theta": 627, "thi": [11, 14, 15, 21, 22, 25, 26, 27, 28, 34, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 53, 54, 56, 79, 81, 82, 83, 87, 90, 91, 94, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 114, 120, 122, 128, 133, 135, 138, 141, 150, 156, 161, 171, 173, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 202, 203, 204, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 264, 267, 279, 282, 288, 292, 301, 303, 305, 307, 309, 310, 311, 314, 315, 316, 319, 322, 326, 327, 328, 329, 330, 333, 335, 336, 341, 342, 343, 344, 346, 349, 352, 354, 356, 358, 359, 360, 363, 365, 366, 367, 369, 438, 440, 446, 451, 453, 456, 459, 468, 474, 479, 489, 491, 498, 504, 507, 511, 514, 515, 562, 564, 578, 583, 584, 586, 587, 588, 593, 594, 596, 607, 614, 617, 619, 620, 624, 627, 631, 635, 638, 640, 641, 642, 645, 647, 648], "thing": 619, "think": [504, 587], "third": [80, 82, 83, 96, 176, 177, 217, 267, 323, 596, 610, 614, 623, 647], "those": [11, 26, 79, 90, 104, 312, 515], "though": 222, "thousand": 539, "three": [58, 59, 60, 211, 312, 323, 343, 519, 565, 623, 638], "threshold": 313, "through": [46, 194, 264, 292, 304, 306, 309, 343, 586, 658], "throw": 546, "thu": [11, 221, 227, 229, 624], "tile": [7, 585, 661], "time": [0, 11, 18, 20, 34, 42, 43, 56, 64, 66, 68, 69, 70, 88, 91, 110, 112, 113, 207, 217, 219, 221, 223, 224, 226, 228, 229, 231, 233, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 274, 275, 277, 293, 294, 295, 296, 297, 298, 309, 313, 317, 323, 335, 336, 337, 339, 340, 347, 353, 354, 357, 497, 499, 504, 509, 510, 531, 546, 584, 590, 594, 604, 616, 620, 623, 624, 636, 638, 644], "time_dpnp": 0, "time_numpi": 0, "timedelta": 191, "timeit": 203, "timer": [171, 489], "timestep": 218, "tini": 235, "titl": 184, "tm": 247, "to_begin": 202, "to_devic": 7, "to_end": 202, "tobyt": 7, "todo": 549, "tofil": [7, 250], "togeth": [20, 82, 83, 187, 222, 277, 292, 614, 648], "tol": [313, 547, 581], "toler": [20, 42, 277, 313, 581], "tolist": 7, "too": [4, 217, 219, 223, 224, 228, 229, 231, 233, 648], "toolkit": 3, "tostr": 7, "total": [7, 94, 98, 100, 147, 465, 588, 606, 615, 643], "toward": [40, 77, 236, 243, 244, 263, 264, 354, 497, 584, 591, 594, 595, 637], "trace": [7, 105, 108, 109, 203, 658], "traceback": [25, 63, 613], "transfer": [171, 489], "transform": [204, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 651, 661], "transpos": [7, 39, 90, 115, 143, 203, 282, 299, 306, 345, 356, 372, 461, 506, 658, 661], "trapezoid": [7, 99, 101, 617], "trapz": 7, "treat": [20, 90, 104, 221, 227, 229, 250, 259, 275, 277, 305, 307, 309, 314, 320, 330, 349, 361, 362, 365, 367, 369, 511, 515, 598, 620, 624, 638, 641, 658], "treatment": 291, "tri": 7, "trial": 531, "triangl": [105, 268, 343, 583, 628, 629, 630, 631, 633, 634, 635], "triangular": [7, 299, 305, 307, 318, 343, 630, 631, 634, 635], "trigonometr": [16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 603, 605, 621, 622, 661], "tril": [7, 105, 343, 628, 630, 631, 634], "tril_indic": [7, 343, 631, 634], "tril_indices_from": [7, 635], "trili": 631, "trili1": 631, "trim": [217, 219, 223, 224, 228, 229, 231, 233, 632], "trim_zero": 7, "triu": [7, 105, 343, 628, 630, 634, 635], "triu_indic": [7, 343, 630, 635], "triu_indices_from": [7, 631], "triui": 635, "triuim1": 635, "trivial": [304, 620], "true": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 81, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 102, 103, 111, 112, 116, 117, 120, 122, 128, 144, 145, 146, 151, 161, 163, 165, 175, 178, 181, 192, 196, 203, 204, 207, 209, 210, 211, 212, 213, 215, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 260, 261, 262, 263, 265, 268, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 308, 311, 313, 315, 317, 318, 320, 321, 323, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 377, 434, 435, 438, 440, 446, 462, 463, 464, 469, 479, 481, 483, 493, 496, 497, 498, 499, 507, 508, 509, 510, 511, 512, 515, 517, 518, 534, 582, 583, 584, 586, 587, 590, 591, 597, 599, 601, 602, 603, 605, 607, 609, 611, 612, 615, 616, 617, 620, 621, 622, 623, 627, 636, 637, 638, 640, 642, 643, 645, 648], "true_divid": [7, 112], "trunc": [7, 40, 77, 236, 243, 591, 595], "truncat": [40, 77, 81, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 243, 567, 591, 595, 637], "trust": [359, 360], "truth": [64, 65, 67, 68, 70, 207, 260, 261, 276, 297, 298, 337, 338, 339, 340, 499, 658, 661], "try": [4, 47], "tukei": 11, "tup": [80, 177, 267, 596, 647], "tupl": [19, 24, 25, 26, 27, 36, 37, 41, 45, 46, 47, 48, 50, 61, 72, 73, 74, 87, 94, 97, 105, 106, 107, 108, 141, 159, 173, 178, 184, 198, 200, 204, 211, 220, 225, 239, 248, 251, 254, 255, 257, 259, 263, 264, 265, 267, 273, 279, 280, 288, 292, 293, 315, 318, 325, 328, 329, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 363, 364, 365, 366, 367, 368, 369, 370, 459, 477, 491, 495, 498, 500, 504, 506, 511, 579, 583, 585, 587, 588, 592, 596, 600, 613, 614, 615, 617, 624, 626, 630, 631, 634, 635, 639, 640, 642, 643, 645, 647, 658], "turn": 80, "twister": 519, "two": [11, 20, 27, 42, 58, 59, 62, 64, 65, 67, 68, 70, 86, 90, 91, 96, 108, 109, 110, 113, 133, 143, 150, 166, 178, 184, 203, 204, 211, 216, 217, 219, 222, 223, 224, 227, 228, 229, 231, 233, 245, 246, 259, 274, 276, 277, 293, 295, 303, 305, 309, 311, 314, 316, 320, 322, 323, 326, 337, 339, 340, 344, 345, 346, 347, 349, 352, 353, 356, 363, 365, 366, 451, 461, 468, 484, 503, 504, 526, 558, 578, 591, 594, 595, 599, 618, 623, 625, 630, 631, 634, 635, 644], "type": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 128, 134, 138, 141, 148, 156, 160, 161, 171, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 439, 440, 446, 452, 456, 459, 466, 474, 478, 479, 489, 491, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 513, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 661], "type_nam": 0, "typeerror": [61, 63, 89, 159, 248, 295, 477], "typenam": 7, "typestr": 199, "typic": [20, 221, 277, 598, 658], "u": [191, 299, 305, 307, 321, 343, 367, 369, 638], "u1": [178, 249, 250], "u16": 183, "u4": 75, "u8": 178, "ufunc": [2, 27, 651, 658], "uint64": 178, "uint8": [178, 249, 250], "uk": 11, "un": 193, "unalt": 504, "unari": 658, "unchang": 233, "undefin": [23, 150, 349, 365, 468, 504], "under": [311, 328], "underli": [64, 68, 70, 578, 587], "undo": [11, 224], "undocu": 192, "unexpect": [367, 369], "unicod": [184, 191], "uniform": [7, 192, 259, 263, 264, 341, 524, 525, 527, 556, 559, 561, 562, 564], "uniformli": [341, 529, 573], "uniniti": [41, 205, 206, 254, 501, 649], "union1d": 7, "uniqu": [7, 61, 63, 91, 97, 111, 182, 197, 342, 348, 356, 364, 368, 370, 504, 583, 585, 615, 643], "unique_al": 7, "unique_count": [7, 638], "unique_indic": 638, "unique_invers": [7, 638], "unique_valu": 7, "unit": [164, 218, 232, 292, 304, 312, 319, 482], "unitari": [11, 259, 318, 321], "uniti": 263, "univ": 11, "univers": [2, 315, 651, 658], "unless": [19, 24, 54, 98, 99, 100, 101, 122, 203, 263, 304, 313, 315, 341, 361, 362, 367, 369, 440, 511, 617, 638, 645], "unlik": [91, 156, 159, 232, 474, 477], "unmodifi": 264, "unpackbit": 7, "unravel": 639, "unravel_index": [7, 36, 37, 579], "unraveled_coord": 639, "unsaf": [54, 75, 82, 83, 89, 122, 203, 267, 344, 440, 596, 614, 645, 647], "unscal": 11, "unsign": [178, 191, 280, 511, 617], "unspecifi": 587, "unstack": [7, 267, 596, 614, 647], "unsupport": [14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 88, 92, 93, 102, 103, 112, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 248, 256, 262, 268, 276, 294, 295, 296, 332, 333, 334, 335, 336, 347, 353, 354, 355, 357, 496, 497, 508, 509, 510, 512, 517, 518, 582, 584, 590, 591, 597, 601, 602, 603, 605, 609, 616, 621, 622, 636, 637], "until": [204, 592, 593], "unwrap": [7, 102, 517], "up": [4, 11, 181, 203, 241, 248, 620, 631, 638], "upcast": 41, "updat": 4, "uplo": [305, 307], "upon": [164, 482], "upper": [105, 214, 263, 264, 265, 299, 305, 307, 318, 343, 628, 630, 631, 633, 634, 635], "url": 4, "us": [4, 11, 18, 20, 25, 26, 28, 34, 38, 39, 41, 45, 46, 47, 48, 49, 50, 53, 54, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 83, 87, 90, 91, 96, 98, 99, 100, 101, 104, 105, 106, 108, 109, 112, 120, 122, 128, 138, 159, 161, 178, 185, 186, 188, 192, 194, 203, 204, 205, 206, 207, 211, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 273, 274, 276, 282, 292, 295, 296, 297, 298, 299, 300, 303, 305, 306, 307, 309, 313, 314, 315, 317, 323, 326, 329, 330, 336, 337, 339, 341, 343, 344, 346, 348, 349, 350, 351, 352, 354, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 379, 438, 440, 446, 456, 477, 479, 496, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 515, 519, 521, 522, 523, 529, 532, 534, 535, 545, 550, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 570, 573, 578, 581, 584, 585, 586, 587, 588, 590, 592, 598, 599, 601, 604, 607, 608, 615, 616, 617, 619, 620, 623, 624, 625, 627, 628, 630, 631, 634, 635, 636, 638, 639, 642, 643, 645, 648, 649, 650, 658, 665], "usabl": 242, "usag": [3, 4, 218, 232], "use_getitem": 185, "use_setitem": 185, "user": [185, 188, 358, 504], "usm": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 446, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 613, 628, 630, 634, 642, 649, 650], "usm_ndarrai": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 122, 135, 139, 176, 177, 202, 203, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 274, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 440, 453, 457, 494, 496, 497, 498, 499, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 650], "usm_typ": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 114, 128, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 270, 273, 329, 330, 341, 343, 351, 446, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 628, 630, 634, 642, 649, 650], "usual": [106, 159, 184, 269, 310, 344, 477], "util": [5, 13, 651], "v": [86, 91, 105, 108, 158, 191, 304, 305, 327, 349, 365, 476, 514, 598, 645], "v0": 7, "v10": 178, "v13": 7, "v2": 7, "v_": 91, "v_sort": [349, 365], "val": [152, 234, 429, 470, 507], "valid": [91, 211, 343, 618, 630, 631, 634, 635], "valu": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 84, 85, 87, 88, 89, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 105, 110, 111, 112, 118, 119, 120, 122, 124, 128, 135, 137, 150, 152, 159, 161, 192, 196, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 221, 222, 227, 229, 230, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 270, 272, 273, 275, 276, 277, 279, 280, 281, 283, 284, 287, 288, 292, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 315, 317, 319, 320, 321, 322, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 436, 437, 438, 440, 442, 446, 453, 455, 468, 470, 477, 479, 496, 497, 498, 499, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 524, 525, 529, 539, 556, 557, 573, 580, 582, 583, 584, 585, 586, 587, 590, 591, 592, 595, 597, 598, 599, 601, 602, 603, 604, 607, 609, 611, 612, 615, 616, 617, 619, 620, 621, 622, 625, 627, 630, 632, 634, 636, 637, 638, 641, 643, 645, 648, 649, 650, 658, 661], "value2": 192, "valueerror": [25, 41, 46, 47, 143, 248, 315, 359, 360, 461, 587, 610, 613], "van": 315, "vander": 7, "vandermond": 642, "var": [7, 348, 364, 368, 370, 615, 658], "vararg": 259, "vari": [11, 13, 19, 23, 24, 109, 204, 217, 219, 221, 222, 223, 224, 226, 227, 230, 233, 251, 273, 282, 300, 303, 304, 305, 309, 311, 315, 358, 364, 368, 370, 578, 581, 604], "variabl": [63, 90, 95, 309, 320], "varianc": [175, 348, 364, 368, 370, 493, 615, 643, 661], "variou": [315, 604, 665], "vc": 91, "vdot": [7, 113, 327, 344, 645], "vecdot": [7, 644], "vecmat": 7, "vector": [96, 203, 251, 273, 274, 292, 300, 301, 310, 313, 314, 315, 316, 320, 321, 322, 327, 328, 344, 349, 350, 365, 503, 504, 644, 645, 661], "vector_norm": [7, 315], "vendor": 4, "veri": [3, 11, 20, 275, 277, 316, 350, 358, 503], "verif": 0, "verifi": 299, "version": [4, 5, 94, 96, 109, 137, 238, 344, 349, 365, 455, 498, 503, 579, 625, 639, 644, 645], "vertic": [80, 82, 83, 109, 177, 234, 239, 240, 267, 303, 594, 596, 610, 614, 646, 647], "vetterlin": 11, "vh": 321, "via": [5, 227, 248], "view": [7, 44, 58, 59, 60, 71, 105, 109, 115, 143, 156, 171, 173, 176, 211, 217, 219, 223, 224, 228, 229, 231, 233, 239, 240, 241, 248, 266, 350, 356, 372, 461, 474, 489, 491, 506, 515, 578, 579, 587, 594, 610, 613, 618, 626, 639, 646], "violat": 89, "void": [178, 191], "void640": 193, "von": 574, "vonmis": 7, "vsplit": [7, 82, 83, 610], "vstack": [7, 80, 82, 83, 177, 267, 309, 596, 610, 614], "w": [11, 61, 63, 304, 305, 306, 307, 312, 586], "w_i": 265, "wa": [11, 97, 192, 314, 342, 363, 366, 368, 370, 528, 570, 583, 587, 615, 643], "wai": [3, 4, 11, 150, 204, 216, 222, 223, 224, 229, 250, 323, 468, 623], "wald": 7, "walk": 194, "want": [4, 282, 620], "warn": [183, 359, 360, 547, 588], "we": [87, 90, 106, 109, 204, 234, 309, 343, 515, 620, 627], "weibul": [7, 577], "weigh": 265, "weight": [61, 63, 95, 263, 264, 265, 348, 364, 617], "well": [5, 192, 203, 250, 263, 264, 511, 531, 548, 567], "were": [82, 83, 251, 526, 558, 614, 641], "what": [11, 54, 75, 82, 83, 89, 122, 178, 186, 203, 207, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 267, 278, 344, 440, 531, 548, 596, 614, 645, 647, 658], "when": [11, 25, 28, 38, 41, 42, 45, 46, 48, 50, 53, 54, 61, 62, 81, 87, 89, 91, 111, 120, 122, 161, 187, 203, 216, 227, 229, 230, 245, 246, 248, 257, 262, 275, 304, 310, 315, 318, 322, 323, 329, 336, 341, 343, 344, 349, 354, 361, 362, 363, 365, 366, 367, 369, 438, 440, 479, 578, 584, 588, 591, 593, 595, 599, 607, 619, 623, 627, 638, 645, 648, 665], "whenev": [211, 506, 618, 626], "where": [0, 7, 11, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 84, 85, 87, 88, 89, 91, 92, 93, 96, 97, 102, 103, 105, 106, 108, 110, 111, 112, 116, 117, 122, 128, 144, 145, 146, 151, 158, 163, 165, 175, 176, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 221, 227, 228, 229, 232, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 266, 268, 269, 270, 273, 274, 276, 277, 278, 279, 281, 283, 284, 287, 288, 294, 295, 296, 297, 298, 299, 303, 309, 313, 318, 321, 322, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 357, 363, 364, 365, 366, 367, 368, 369, 370, 434, 435, 440, 446, 462, 463, 464, 469, 476, 481, 483, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 517, 518, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 565, 570, 573, 578, 582, 583, 584, 588, 590, 591, 593, 597, 598, 599, 601, 602, 603, 605, 609, 610, 611, 612, 615, 616, 617, 621, 622, 625, 626, 628, 630, 634, 636, 637, 641, 642, 643, 645, 646, 649, 650], "wherev": 89, "whether": [19, 20, 24, 27, 42, 97, 100, 101, 111, 186, 187, 189, 248, 277, 278, 280, 282, 291, 299, 318, 329, 358, 367, 369, 579, 602, 638, 639, 658], "which": [3, 4, 5, 11, 18, 19, 20, 24, 25, 26, 27, 28, 34, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 54, 56, 61, 63, 64, 66, 68, 69, 70, 71, 81, 82, 83, 87, 88, 89, 91, 94, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 120, 122, 128, 141, 161, 184, 187, 203, 204, 205, 206, 207, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 270, 273, 275, 281, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 301, 303, 304, 311, 313, 315, 322, 325, 326, 327, 328, 330, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 438, 440, 446, 459, 479, 497, 498, 499, 500, 501, 502, 506, 509, 510, 511, 514, 519, 551, 556, 557, 558, 559, 560, 561, 562, 564, 570, 573, 579, 583, 584, 585, 588, 590, 592, 599, 606, 607, 610, 613, 614, 615, 616, 617, 619, 625, 626, 627, 628, 629, 630, 632, 633, 634, 636, 637, 640, 641, 642, 643, 645, 648, 649, 650, 658, 665], "whichev": 274, "while": [11, 90, 231, 233, 263, 264, 348, 364, 365, 368, 370, 498, 507, 511, 592, 615, 617, 628, 643], "whitespac": [250, 253], "whole": [217, 219, 223, 224, 228, 229, 231, 233, 630, 634], "whose": [14, 15, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 109, 200, 213, 214, 234, 300, 303, 305, 306, 307, 311, 322, 324, 326, 343, 345, 356, 592, 631, 635, 639], "why": 227, "wide": 234, "width": [62, 65, 67, 193, 263, 264, 276, 504], "wiki": 91, "wikipedia": 91, "wild": [531, 548], "window": [4, 218, 232], "wise": [14, 15, 16, 17, 18, 20, 23, 29, 30, 31, 32, 33, 34, 35, 40, 42, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 80, 82, 83, 84, 85, 88, 90, 92, 93, 97, 112, 127, 177, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 260, 261, 262, 266, 267, 268, 272, 276, 277, 281, 283, 284, 285, 286, 295, 296, 297, 298, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 352, 353, 354, 355, 357, 363, 366, 367, 445, 496, 497, 499, 508, 509, 510, 512, 580, 582, 584, 590, 591, 595, 596, 597, 601, 602, 603, 604, 605, 610, 611, 612, 614, 616, 621, 622, 636, 637, 646, 647, 651, 658, 661, 665], "wish": 658, "within": [20, 28, 42, 54, 122, 203, 221, 222, 223, 224, 226, 227, 229, 263, 264, 277, 440, 514, 521, 522, 529, 573], "without": [109, 173, 205, 234, 491, 578, 587, 588, 658], "won": 186, "word": [222, 223, 224, 227, 229, 243, 306, 529, 573], "work": [4, 40, 53, 81, 141, 459, 620, 658], "world": [178, 531, 548], "would": [38, 82, 83, 120, 150, 161, 178, 251, 273, 314, 343, 344, 438, 468, 479, 506, 529, 579, 607, 610, 614, 620, 626, 641, 645], "wrap": [102, 152, 170, 234, 470, 488, 504, 514, 515, 517, 579, 598, 619, 620, 641], "wrapper": 114, "writabl": 586, "write": [105, 109, 138, 234, 250, 456, 587], "writeabl": 586, "written": [4, 94, 97, 234, 250, 282, 342, 583, 648], "x": [0, 3, 4, 14, 15, 16, 17, 19, 23, 24, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 59, 60, 63, 65, 67, 71, 73, 76, 77, 84, 85, 87, 88, 90, 92, 93, 95, 96, 97, 100, 101, 102, 103, 105, 108, 110, 111, 122, 128, 140, 141, 148, 154, 159, 160, 171, 176, 178, 179, 180, 182, 183, 185, 193, 195, 200, 202, 205, 206, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 231, 232, 233, 236, 237, 238, 243, 248, 249, 250, 251, 252, 254, 255, 257, 259, 265, 266, 269, 270, 272, 273, 275, 276, 278, 279, 281, 283, 284, 285, 286, 287, 288, 295, 300, 301, 303, 306, 309, 311, 315, 318, 320, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 350, 351, 355, 356, 358, 440, 446, 458, 459, 466, 472, 477, 478, 489, 496, 498, 500, 501, 502, 508, 511, 512, 513, 517, 518, 547, 553, 578, 580, 582, 583, 585, 586, 591, 592, 593, 595, 597, 599, 601, 602, 603, 604, 605, 609, 610, 611, 612, 613, 618, 619, 621, 622, 627, 628, 637, 640, 642, 646, 648, 649, 650], "x0": [48, 50, 87, 108, 502, 642, 650], "x00": 250, "x01": [249, 250], "x02": [249, 250], "x03": [249, 250], "x04": [249, 250], "x05": 249, "x1": [18, 20, 23, 31, 33, 34, 42, 43, 51, 54, 55, 56, 64, 66, 68, 69, 70, 78, 88, 112, 122, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 292, 294, 295, 296, 297, 298, 301, 310, 316, 327, 335, 336, 337, 338, 339, 340, 344, 347, 350, 353, 354, 355, 357, 440, 496, 497, 499, 505, 508, 509, 510, 516, 566, 584, 590, 592, 616, 636, 645], "x1_i": [18, 34, 56, 64, 66, 68, 69, 70, 88, 112, 207, 242, 244, 247, 260, 261, 268, 296, 297, 298, 335, 336, 337, 339, 340, 354, 357, 499, 509, 510, 584, 590, 616, 636], "x2": [18, 19, 20, 23, 24, 31, 33, 34, 41, 42, 43, 51, 55, 56, 64, 66, 68, 69, 70, 88, 112, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 268, 292, 294, 295, 296, 297, 298, 301, 310, 316, 327, 335, 336, 337, 338, 339, 340, 344, 347, 350, 353, 354, 357, 496, 497, 499, 508, 509, 510, 584, 590, 592, 611, 616, 636, 645], "x2_i": [18, 34, 56, 64, 66, 68, 69, 70, 88, 112, 207, 242, 244, 247, 260, 261, 268, 296, 297, 298, 335, 336, 337, 339, 340, 354, 357, 499, 509, 510, 584, 590, 616, 636], "x3": [19, 24, 242], "x_i": [14, 15, 16, 17, 23, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 65, 67, 76, 77, 84, 85, 92, 93, 209, 210, 212, 243, 265, 272, 276, 331, 332, 333, 334, 338, 496, 508, 512, 580, 582, 591, 595, 597, 601, 602, 603, 605, 611, 612, 621, 622, 637], "xarr": 90, "xi": [334, 350], "xn": [292, 350], "xor": [64, 65, 67, 68, 70, 276, 337, 338, 339, 340], "xv": 350, "xx": 350, "xy": 350, "y": [0, 4, 16, 17, 28, 29, 30, 31, 32, 33, 35, 41, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 71, 87, 90, 95, 96, 108, 128, 148, 156, 159, 171, 178, 202, 205, 206, 211, 214, 218, 232, 248, 249, 250, 251, 252, 254, 255, 257, 259, 270, 285, 286, 291, 300, 301, 309, 329, 330, 341, 350, 351, 355, 358, 446, 466, 474, 477, 489, 500, 501, 502, 586, 627, 628, 642, 648, 649, 650], "y1": 295, "y2": 295, "y_i": 265, "yarr": 90, "yet": [4, 7], "yield": [16, 17, 29, 30, 31, 32, 33, 35, 38, 51, 52, 55, 57, 367, 369, 498, 504, 529, 648, 658], "you": [4, 91, 109, 221, 226, 227, 282, 343, 349, 365, 587, 619, 620, 658, 665], "your": [4, 109, 665], "yv": 350, "yy": 350, "z": [16, 17, 19, 24, 28, 29, 30, 31, 32, 33, 35, 41, 45, 46, 47, 48, 50, 51, 52, 55, 57, 87, 96, 108, 171, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 270, 329, 330, 341, 350, 351, 489, 500, 501, 502, 539, 628, 642, 649, 650], "z_i": 265, "zero": [7, 11, 19, 23, 24, 38, 39, 40, 41, 66, 77, 91, 94, 96, 97, 106, 110, 148, 149, 159, 160, 164, 205, 206, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 243, 250, 254, 255, 270, 272, 278, 279, 285, 286, 287, 288, 296, 304, 305, 307, 309, 312, 313, 317, 321, 323, 342, 343, 346, 348, 352, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 466, 467, 477, 478, 482, 494, 498, 501, 502, 504, 511, 527, 531, 559, 561, 562, 564, 580, 581, 583, 588, 591, 595, 601, 607, 615, 617, 623, 628, 629, 632, 633, 637, 643, 648, 650], "zeros_lik": [7, 41, 103, 206, 255, 349, 502, 518, 649], "zipf": 7}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Array API standard compatibility", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.__array_namespace_info__", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.apply_over_axes", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.compress", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.cumulative_prod", "dpnp.cumulative_sum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dpnp_array.dpnp_array.T", "dpnp.dpnp_array.dpnp_array.all", "dpnp.dpnp_array.dpnp_array.any", "dpnp.dpnp_array.dpnp_array.argmax", "dpnp.dpnp_array.dpnp_array.argmin", "dpnp.dpnp_array.dpnp_array.argsort", "dpnp.dpnp_array.dpnp_array.asnumpy", "dpnp.dpnp_array.dpnp_array.astype", "dpnp.dpnp_array.dpnp_array.choose", "dpnp.dpnp_array.dpnp_array.clip", "dpnp.dpnp_array.dpnp_array.compress", "dpnp.dpnp_array.dpnp_array.conj", "dpnp.dpnp_array.dpnp_array.conjugate", "dpnp.dpnp_array.dpnp_array.copy", "dpnp.dpnp_array.dpnp_array.cumprod", "dpnp.dpnp_array.dpnp_array.cumsum", "dpnp.dpnp_array.dpnp_array.device", "dpnp.dpnp_array.dpnp_array.diagonal", "dpnp.dpnp_array.dpnp_array.dot", "dpnp.dpnp_array.dpnp_array.dtype", "dpnp.dpnp_array.dpnp_array.fill", "dpnp.dpnp_array.dpnp_array.flags", "dpnp.dpnp_array.dpnp_array.flat", "dpnp.dpnp_array.dpnp_array.flatten", "dpnp.dpnp_array.dpnp_array.get_array", "dpnp.dpnp_array.dpnp_array.imag", "dpnp.dpnp_array.dpnp_array.item", "dpnp.dpnp_array.dpnp_array.itemsize", "dpnp.dpnp_array.dpnp_array.mT", "dpnp.dpnp_array.dpnp_array.max", "dpnp.dpnp_array.dpnp_array.mean", "dpnp.dpnp_array.dpnp_array.min", "dpnp.dpnp_array.dpnp_array.nbytes", "dpnp.dpnp_array.dpnp_array.ndim", "dpnp.dpnp_array.dpnp_array.nonzero", "dpnp.dpnp_array.dpnp_array.partition", "dpnp.dpnp_array.dpnp_array.prod", "dpnp.dpnp_array.dpnp_array.put", "dpnp.dpnp_array.dpnp_array.ravel", "dpnp.dpnp_array.dpnp_array.real", "dpnp.dpnp_array.dpnp_array.repeat", "dpnp.dpnp_array.dpnp_array.reshape", "dpnp.dpnp_array.dpnp_array.round", "dpnp.dpnp_array.dpnp_array.searchsorted", "dpnp.dpnp_array.dpnp_array.shape", "dpnp.dpnp_array.dpnp_array.size", "dpnp.dpnp_array.dpnp_array.sort", "dpnp.dpnp_array.dpnp_array.squeeze", "dpnp.dpnp_array.dpnp_array.std", "dpnp.dpnp_array.dpnp_array.strides", "dpnp.dpnp_array.dpnp_array.sum", "dpnp.dpnp_array.dpnp_array.swapaxes", "dpnp.dpnp_array.dpnp_array.sycl_context", "dpnp.dpnp_array.dpnp_array.sycl_device", "dpnp.dpnp_array.dpnp_array.sycl_queue", "dpnp.dpnp_array.dpnp_array.take", "dpnp.dpnp_array.dpnp_array.to_device", "dpnp.dpnp_array.dpnp_array.trace", "dpnp.dpnp_array.dpnp_array.transpose", "dpnp.dpnp_array.dpnp_array.usm_type", "dpnp.dpnp_array.dpnp_array.var", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.dtype.alignment", "dpnp.dtype.base", "dpnp.dtype.byteorder", "dpnp.dtype.char", "dpnp.dtype.descr", "dpnp.dtype.fields", "dpnp.dtype.flags", "dpnp.dtype.hasobject", "dpnp.dtype.isalignedstruct", "dpnp.dtype.isbuiltin", "dpnp.dtype.isnative", "dpnp.dtype.itemsize", "dpnp.dtype.kind", "dpnp.dtype.metadata", "dpnp.dtype.name", "dpnp.dtype.names", "dpnp.dtype.ndim", "dpnp.dtype.newbyteorder", "dpnp.dtype.num", "dpnp.dtype.shape", "dpnp.dtype.str", "dpnp.dtype.subdtype", "dpnp.dtype.type", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.histogramdd", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.i0", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isdtype", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.iterable", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmedian", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__array__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.asnumpy", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.compress", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.device", "dpnp.ndarray.diagonal", "dpnp.ndarray.dot", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.get_array", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.sycl_context", "dpnp.ndarray.sycl_device", "dpnp.ndarray.sycl_queue", "dpnp.ndarray.take", "dpnp.ndarray.to_device", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.usm_type", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.ndindex", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.RandomState.get_state", "dpnp.random.RandomState.get_sycl_device", "dpnp.random.RandomState.get_sycl_queue", "dpnp.random.RandomState.normal", "dpnp.random.RandomState.rand", "dpnp.random.RandomState.randint", "dpnp.random.RandomState.randn", "dpnp.random.RandomState.random_sample", "dpnp.random.RandomState.standard_normal", "dpnp.random.RandomState.uniform", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 8, "__abs__": 373, "__add__": 374, "__and__": 375, "__array__": 376, "__array_namespace_info__": 13, "__bool__": 377, "__complex__": 378, "__copy__": 379, "__eq__": 380, "__float__": 381, "__floordiv__": 382, "__ge__": 383, "__getitem__": 384, "__gt__": 385, "__iadd__": 386, "__iand__": 387, "__ifloordiv__": 388, "__ilshift__": 389, "__imatmul__": 390, "__imod__": 391, "__imul__": 392, "__int__": 393, "__invert__": 394, "__ior__": 395, "__ipow__": 396, "__irshift__": 397, "__isub__": 398, "__itruediv__": 399, "__ixor__": 400, "__le__": 401, "__len__": 402, "__lshift__": 403, "__lt__": 404, "__matmul__": 405, "__mod__": 406, "__mul__": 407, "__ne__": 408, "__neg__": 409, "__new__": 410, "__or__": 411, "__pos__": 412, "__pow__": 413, "__radd__": 414, "__rand__": 415, "__repr__": 416, "__rfloordiv__": 417, "__rlshift__": 418, "__rmatmul__": 419, "__rmod__": 420, "__rmul__": 421, "__ror__": 422, "__rpow__": 423, "__rrshift__": 424, "__rshift__": 425, "__rsub__": 426, "__rtruediv__": 427, "__rxor__": 428, "__setitem__": 429, "__str__": 430, "__sub__": 431, "__truediv__": 432, "__xor__": 433, "ab": 14, "absolut": 15, "aco": 16, "acosh": 17, "ad": 655, "add": 18, "algebra": [7, 653], "align": 179, "all": [19, 116, 434], "allclos": 20, "amax": 21, "amin": 22, "angl": 23, "ani": [24, 117, 435], "api": [1, 5, 651], "append": 25, "apply_along_axi": 26, "apply_over_ax": 27, "arang": 28, "arcco": 29, "arccosh": 30, "arcsin": 31, "arcsinh": 32, "arctan": 33, "arctan2": 34, "arctanh": 35, "argmax": [36, 118, 436], "argmin": [37, 119, 437], "argsort": [38, 120, 438], "argwher": 39, "arithmet": [656, 658, 659], "around": 40, "arrai": [5, 7, 8, 10, 41, 652, 654, 655, 658], "array_equ": 42, "array_equiv": 43, "array_split": 44, "asanyarrai": 45, "asarrai": 46, "asarray_chkfinit": 47, "ascontiguousarrai": 48, "asfarrai": 49, "asfortranarrai": 50, "asin": 51, "asinh": 52, "asnumpi": [53, 121, 439], "astyp": [54, 122, 440], "atan": 55, "atan2": 56, "atanh": 57, "atleast_1d": 58, "atleast_2d": 59, "atleast_3d": 60, "attribut": 658, "avail": [10, 665], "averag": [61, 664], "backend": 1, "background": 11, "base": 180, "basic": [655, 659], "beta": 530, "binary_repr": 62, "bincount": 63, "binomi": 531, "bit": [6, 665], "bitwise_and": 64, "bitwise_invert": 65, "bitwise_left_shift": 66, "bitwise_not": 67, "bitwise_or": 68, "bitwise_right_shift": 69, "bitwise_xor": 70, "broadcast_arrai": 71, "broadcast_shap": 72, "broadcast_to": 73, "build": [4, 8], "byte": 532, "byte_bound": 74, "byteord": 181, "c": 1, "calcul": 658, "can_cast": 75, "cbrt": 76, "ceil": 77, "chang": 655, "channel": 4, "char": 182, "chisquar": 533, "choic": 534, "choleski": 299, "choos": [78, 123, 441], "class": 8, "clip": [79, 124, 442], "co": 92, "column_stack": 80, "comparison": [7, 654, 658, 665], "compat": 5, "complex": 656, "compress": [81, 125, 443], "concat": 82, "concaten": 83, "cond": 300, "conda": 4, "conj": [84, 126, 444], "conjug": [85, 127, 445], "construct": 658, "content": 654, "control": 0, "convers": 658, "convolv": 86, "copi": [87, 128, 446], "copysign": 88, "copyto": 89, "corrcoef": 90, "correl": [91, 664], "cosh": 93, "count": 662, "count_nonzero": 94, "cov": 95, "creat": 9, "creation": 8, "cross": [96, 301], "cumlogsumexp": 97, "cumprod": [98, 129, 447], "cumsum": [99, 130, 448], "cumulative_prod": 100, "cumulative_sum": 101, "cupi": 7, "custom": 4, "data": [0, 2, 8, 9, 10, 652, 658, 660], "decomposit": 653, "deg2rad": 102, "degre": 103, "delet": 104, "descr": 183, "det": 302, "detail": 11, "develop": 2, "devic": [4, 131, 449], "diag": 105, "diag_indic": 106, "diag_indices_from": 107, "diagflat": 108, "diagon": [109, 132, 303, 450], "diff": 110, "differ": 656, "digit": 111, "dimens": [11, 655], "dimension": [7, 658], "dirichlet": 535, "discret": [7, 11], "distribut": 660, "divid": 112, "dot": [113, 133, 451], "dpnp": [7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 660], "dpnp_arrai": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "driver": 4, "dsplit": 176, "dstack": 177, "dtype": [134, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 452], "ediff1d": 202, "eig": 304, "eigenvalu": 653, "eigh": 305, "eigval": 306, "eigvalsh": 307, "einsum": 203, "einsum_path": 204, "element": [6, 655], "empti": 205, "empty_lik": 206, "equal": 207, "equat": 653, "erf": 208, "error": 663, "exampl": [0, 4], "except": 653, "exist": 8, "exp": 209, "exp2": 210, "expand_dim": 211, "expm1": 212, "expon": 656, "exponenti": 536, "extens": 2, "extract": 213, "extrema": 656, "ey": 214, "f": 537, "fab": 215, "fft": [11, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "fft2": 217, "fftfreq": 218, "fftn": 219, "fftshift": 220, "field": 184, "fill": [135, 453], "fill_diagon": 234, "find": 656, "finfo": 235, "fix": 236, "flag": [136, 185, 454], "flat": [137, 455], "flatit": 237, "flatnonzero": 238, "flatten": [138, 456], "flip": 239, "fliplr": 240, "flipud": 241, "float": [656, 665], "float_pow": 242, "floor": 243, "floor_divid": 244, "fmax": 245, "fmin": 246, "fmod": 247, "format": 6, "fourier": [7, 11], "from": [4, 8], "from_dlpack": 248, "frombuff": 249, "fromfil": 250, "fromfunct": 251, "fromit": 252, "fromstr": 253, "full": 254, "full_lik": 255, "function": [12, 654, 656, 663, 665], "gamma": 538, "gcd": 256, "gener": [652, 660], "geometr": 539, "geomspac": 257, "get_arrai": [139, 457], "get_includ": 258, "get_stat": 520, "get_sycl_devic": 521, "get_sycl_queu": 522, "gradient": 259, "greater": 260, "greater_equ": 261, "guid": 4, "gumbel": 540, "handl": 656, "hasobject": 186, "heavisid": 262, "helper": 11, "hermitian": 11, "hfft": 221, "higher": 11, "histogram": [263, 664], "histogram_bin_edg": 264, "histogramdd": 265, "hsplit": 266, "hstack": 267, "hyperbol": 656, "hypergeometr": 541, "hypot": 268, "i0": 269, "ident": 270, "ifft": 222, "ifft2": 223, "ifftn": 224, "ifftshift": 225, "ihfft": 226, "iinfo": 271, "imag": [140, 272, 458], "implement": 11, "index": [652, 658], "indic": 273, "inform": [2, 9, 11], "inner": 274, "insert": [275, 652], "inspect": 5, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 308, "invert": 276, "irfft": 227, "irfft2": 228, "irfftn": 229, "isalignedstruct": 187, "isbuiltin": 188, "isclos": 277, "iscomplex": 278, "iscomplexobj": 279, "isdtyp": 280, "isfinit": 281, "isfortran": 282, "isinf": 283, "isn": 189, "isnan": 284, "isneginf": 285, "isposinf": 286, "isreal": 287, "isrealobj": 288, "isscalar": 289, "issubdtyp": 290, "item": [141, 459, 658], "items": [142, 190, 460], "iter": [291, 652], "ix_": 292, "join": 655, "kind": [191, 655], "kron": 293, "laplac": 542, "layout": 658, "lcm": 294, "ldexp": 295, "left_shift": 296, "less": 297, "less_equ": 298, "level": 7, "librari": 0, "like": [652, 655], "linalg": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "linear": [7, 653], "linspac": 329, "loadtxt": 330, "log": 331, "log10": 332, "log1p": 333, "log2": 334, "logaddexp": 335, "logaddexp2": 336, "logarithm": 656, "logic": 654, "logical_and": 337, "logical_not": 338, "logical_or": 339, "logical_xor": 340, "logist": 543, "lognorm": 544, "logseri": 545, "logspac": 341, "logsumexp": 342, "lstsq": 309, "manipul": [655, 658], "mask_indic": 343, "math": 665, "mathemat": 656, "matmul": [310, 344], "matric": 8, "matrix": [8, 653, 658], "matrix_norm": 311, "matrix_pow": 312, "matrix_rank": 313, "matrix_transpos": 345, "max": [144, 346, 462], "maximum": 347, "mean": [145, 348, 463], "median": 349, "memori": 658, "meshgrid": 350, "metadata": 192, "method": 658, "mgrid": 351, "min": [146, 352, 464], "minimum": 353, "miscellan": [9, 656, 657], "mod": 354, "modf": 355, "modul": [7, 659], "moveaxi": 356, "mt": [143, 461], "multi": [7, 658], "multi_dot": 314, "multinomi": 546, "multipl": 658, "multipli": 357, "multivariate_norm": 547, "name": [193, 194], "nan_to_num": 358, "nanargmax": 359, "nanargmin": 360, "nancumprod": 361, "nancumsum": 362, "nanmax": 363, "nanmean": 364, "nanmedian": 365, "nanmin": 366, "nanprod": 367, "nanstd": 368, "nansum": 369, "nanvar": 370, "nbyte": [147, 465], "ndarrai": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 658], "ndim": [148, 195, 466, 494], "ndindex": 495, "neg": 496, "negative_binomi": 548, "newbyteord": 196, "nextaft": 497, "noncentral_chisquar": 549, "noncentral_f": 550, "nonzero": [149, 467, 498], "norm": [315, 653], "normal": [11, 523, 551], "not_equ": 499, "num": 197, "number": [653, 655, 656], "numer": 8, "numpi": [2, 7], "ogrid": 500, "ones": 501, "ones_lik": 502, "oper": [6, 652, 653, 654, 655, 656, 658, 665], "order": 664, "other": [653, 656, 658], "outer": [316, 503], "output": 6, "over": 652, "overview": 3, "pack": 6, "packag": [4, 659], "pad": 504, "parallel": [0, 2], "pareto": 552, "partit": [150, 468, 505], "permut": [553, 660], "permute_dim": 506, "pinv": 317, "place": 507, "point": 656, "poisson": 554, "poly1d": 659, "polynomi": 659, "polyutil": 659, "posit": 508, "pow": 509, "power": [510, 555], "prod": [151, 469, 511], "product": [653, 656], "program": 12, "proj": 512, "ptp": 513, "put": [152, 470, 514], "put_along_axi": 515, "putmask": 516, "python": 4, "qr": 318, "quick": 4, "r": 4, "rad2deg": 517, "radian": 518, "rand": [524, 556], "randint": [525, 557], "randn": [526, 558], "random": [7, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 660], "random_integ": 560, "random_sampl": [527, 561], "randomst": [519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "ranf": 562, "rang": 8, "ration": 656, "ravel": [153, 471, 578], "ravel_multi_index": 579, "rayleigh": 563, "real": [11, 154, 472, 580], "real_if_clos": 581, "rearrang": 655, "reciproc": 582, "reduce_hypot": 583, "refer": [1, 651], "remaind": 584, "remov": 655, "repeat": [155, 473, 585], "requir": 586, "reshap": [156, 474, 587], "resiz": 588, "result_typ": 589, "rfft": 230, "rfft2": 231, "rfftfreq": 232, "rfftn": 233, "right_shift": 590, "rint": 591, "roll": 592, "rollaxi": 593, "rot90": 594, "round": [157, 475, 595, 656], "routin": [8, 9, 11, 652, 655, 656, 657, 661], "row_stack": 596, "rsqrt": 597, "sampl": [7, 564, 660], "scikit": 4, "search": 662, "searchsort": [158, 476, 598], "seed": 565, "select": [599, 658], "shape": [8, 159, 198, 477, 600, 655, 658], "shuffl": 566, "sign": 601, "signbit": 602, "simpl": 660, "sin": 603, "sinc": 604, "sinh": 605, "size": [160, 478, 606], "slogdet": 319, "solv": [320, 653], "sort": [161, 479, 607, 662], "sort_complex": 608, "space": 609, "special": [656, 658, 663], "split": [610, 655], "sqrt": 611, "squar": 612, "squeez": [162, 480, 613], "stack": 614, "standard": [5, 11], "standard_cauchi": 567, "standard_exponenti": 568, "standard_gamma": 569, "standard_norm": [528, 570], "standard_t": 571, "start": 4, "statist": 664, "std": [163, 481, 615], "str": 199, "stride": [164, 482], "subdtyp": 200, "subtract": 616, "sum": [165, 483, 617, 656], "summari": 7, "svd": 321, "svdval": 322, "swapax": [166, 484, 618], "sycl": 4, "sycl_context": [167, 485], "sycl_devic": [168, 486], "sycl_queu": [169, 487], "t": [115, 372], "tabl": 7, "take": [170, 488, 619], "take_along_axi": 620, "tan": 621, "tanh": 622, "target": 4, "tensordot": [323, 623], "tensorinv": 324, "tensorsolv": 325, "test": [4, 9, 654], "tile": [624, 655], "to_devic": [171, 489], "trace": [172, 326, 490, 625], "transform": [7, 11], "transpos": [173, 491, 626, 655], "trapezoid": 627, "tri": 628, "triangular": 572, "trigonometr": [656, 665], "tril": 629, "tril_indic": 630, "tril_indices_from": 631, "trim_zero": 632, "triu": 633, "triu_indic": 634, "triu_indices_from": 635, "true_divid": 636, "trunc": 637, "truth": 654, "twiddl": 665, "type": [9, 10, 201, 654, 658], "ufunc": 665, "uniform": [529, 573], "uniqu": 638, "univers": 665, "unravel_index": 639, "unstack": 640, "unwrap": 641, "usm_typ": [174, 492], "util": 657, "valu": [8, 654], "vander": 642, "var": [175, 493, 643], "varianc": 664, "vdot": 644, "vecdot": [327, 645], "vector": 653, "vector_norm": 328, "vonmis": 574, "vsplit": 646, "vstack": 647, "wald": 575, "weibul": 576, "where": 648, "wise": 6, "zero": 649, "zeros_lik": 650, "zipf": 577}})