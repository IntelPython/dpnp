Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "install", "reference/binary", "reference/comparison", "reference/creation", "reference/difference", "reference/dtype", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__reduce__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "install.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/difference.rst", "reference/dtype.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__reduce__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["DPCtl Usage", "C++ backend API Reference", "DPNP \u2013 A NumPy-compatible library for SYCL-based devices", "Installation Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array Creation Routines", "Difference between DPNP and NumPy", "Data type routines", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_to", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.flatiter", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__reduce__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.take", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.power", "dpnp.prod", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rollaxis", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 2, 5, 75, 285, 313, 316, 372, 380, 398], "api": [0, 2, 3, 5, 76, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 355], "manag": 0, "specif": [0, 76], "sycl": [0, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "resourc": 0, "base": [0, 3, 76, 124, 159, 162, 165, 170, 276, 277, 282], "python": [0, 2, 75, 76, 116, 247, 355, 390], "packag": [0, 394], "dpnp": [0, 1, 383, 390, 394, 395, 398], "us": [0, 3, 28, 68, 75, 76, 82, 86, 111, 118, 124, 127, 128, 145, 146, 147, 160, 166, 168, 170, 176, 235, 236, 269, 270, 285, 288, 290, 291, 301, 306, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 326, 329, 338, 357, 358, 364, 370, 390], "global": 0, "queue": [0, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "below": [0, 76, 155, 157, 365, 369, 390], "code": [0, 76], "illustr": 0, "simpl": [0, 169, 394], "combin": [0, 76, 86], "import": [0, 2, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 111, 112, 115, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 145, 146, 151, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 255, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 284, 310, 319, 323, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 369, 373, 374, 375, 376, 377, 380, 381, 382], "np": [0, 2, 10, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 44, 45, 47, 48, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 111, 112, 115, 122, 123, 124, 126, 127, 128, 131, 132, 134, 136, 137, 138, 139, 144, 145, 146, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 233, 243, 247, 255, 268, 269, 270, 271, 272, 273, 274, 278, 284, 310, 319, 332, 333, 334, 335, 336, 337, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 359, 360, 361, 364, 365, 366, 369, 373, 374, 375, 376, 377, 381, 382], "device_context": 0, "opencl": 0, "gpu": [0, 2], "x": [0, 2, 10, 11, 13, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 64, 67, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 110, 111, 115, 119, 122, 123, 124, 126, 134, 135, 137, 138, 139, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 179, 181, 182, 184, 185, 247, 268, 269, 272, 273, 274, 276, 277, 303, 309, 334, 335, 336, 337, 338, 345, 346, 347, 349, 350, 351, 355, 356, 359, 360, 361, 364, 373, 374, 376, 380, 381, 382], "arrai": [0, 2, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 98, 99, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 227, 233, 234, 235, 236, 237, 242, 243, 244, 246, 247, 248, 250, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 394], "1": [0, 2, 3, 5, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 32, 33, 34, 37, 40, 41, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 117, 120, 121, 123, 124, 126, 128, 129, 132, 134, 136, 144, 145, 146, 148, 151, 153, 156, 157, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 233, 235, 241, 243, 247, 255, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 284, 285, 287, 289, 290, 292, 294, 296, 298, 299, 300, 302, 303, 304, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 324, 326, 329, 334, 335, 336, 337, 338, 340, 341, 344, 345, 346, 348, 349, 350, 351, 353, 355, 356, 359, 361, 362, 363, 364, 365, 366, 369, 373, 374, 375, 376, 377, 380, 381, 382, 390], "2": [0, 2, 10, 11, 12, 18, 20, 22, 26, 27, 28, 29, 30, 32, 33, 34, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 67, 68, 70, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 89, 90, 92, 98, 103, 106, 111, 112, 115, 126, 127, 128, 129, 133, 134, 144, 145, 146, 148, 151, 153, 156, 157, 159, 160, 161, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 233, 243, 247, 255, 266, 269, 270, 271, 272, 273, 274, 277, 278, 284, 285, 289, 293, 297, 303, 309, 312, 314, 325, 327, 328, 331, 333, 334, 335, 336, 337, 338, 340, 341, 344, 346, 347, 349, 351, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 369, 370, 373, 374, 375, 376, 377, 380, 381, 382], "3": [0, 2, 5, 12, 18, 19, 26, 27, 28, 29, 30, 32, 33, 34, 40, 42, 45, 46, 47, 50, 53, 54, 57, 60, 61, 62, 63, 64, 67, 68, 70, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87, 111, 115, 126, 129, 131, 132, 134, 144, 159, 160, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 233, 247, 255, 266, 269, 270, 271, 273, 274, 277, 278, 285, 289, 293, 300, 303, 309, 312, 313, 314, 324, 328, 331, 334, 335, 336, 337, 338, 339, 340, 341, 344, 348, 349, 351, 353, 354, 355, 356, 361, 363, 364, 365, 366, 369, 374, 375, 376, 377, 380, 382], "": [0, 2, 75, 76, 92, 94, 98, 99, 103, 104, 106, 108, 155, 157, 159, 242, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 302, 304, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 390], "sum": [0, 2, 5, 12, 64, 74, 75, 129, 171, 185, 187, 240, 256, 287, 302, 304, 362, 390, 394], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 238, 239, 247, 257, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390], "more": [0, 30, 76, 116, 155, 156, 366, 369, 390], "inform": [0, 75, 76, 244, 390, 394], "pleas": [0, 2, 390], "refer": [0, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 231, 232, 238, 239, 247, 255, 257, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390], "document": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 231, 232, 235, 238, 239, 247, 255, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390], "time": [0, 12, 42, 44, 45, 73, 74, 82, 127, 128, 139, 144, 145, 146, 166, 168, 169, 183, 270, 274, 277, 287, 302, 340, 354], "try": 0, "except": [0, 75, 259, 338], "importerror": 0, "o": [0, 76], "sy": [0, 76], "path": 0, "insert": [0, 5, 86, 342, 394], "0": [0, 5, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 41, 43, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 70, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 107, 111, 112, 115, 123, 124, 126, 129, 131, 132, 134, 135, 137, 138, 139, 151, 153, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 181, 182, 184, 185, 188, 233, 235, 241, 243, 247, 258, 262, 263, 264, 266, 267, 269, 271, 272, 273, 284, 285, 287, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 307, 309, 310, 311, 312, 315, 317, 318, 319, 320, 323, 326, 328, 329, 330, 335, 336, 337, 341, 343, 344, 345, 346, 347, 350, 351, 352, 353, 355, 356, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 377, 380, 381, 382], "abspath": 0, "numpi": [0, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 235, 236, 238, 239, 242, 247, 257, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 390, 394], "def": 0, "run": 0, "executor": 0, "size": [0, 5, 30, 57, 61, 62, 75, 76, 124, 157, 160, 170, 247, 248, 259, 272, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 351, 353, 370, 377, 381], "test_typ": 0, "repetit": 0, "reshap": [0, 5, 26, 27, 34, 67, 68, 75, 86, 172, 178, 233, 259, 266, 309, 390], "arang": [0, 5, 26, 27, 34, 40, 41, 66, 67, 68, 75, 82, 84, 85, 87, 123, 124, 129, 160, 163, 164, 166, 167, 168, 169, 170, 172, 176, 178, 233, 270, 273, 284, 309, 339, 380, 382], "dtype": [0, 7, 11, 12, 18, 24, 30, 32, 33, 34, 35, 42, 43, 44, 45, 50, 55, 58, 61, 68, 73, 75, 80, 81, 82, 89, 112, 115, 120, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 144, 145, 146, 159, 160, 162, 166, 167, 168, 169, 170, 173, 174, 179, 183, 188, 236, 240, 256, 262, 264, 267, 270, 272, 273, 277, 278, 285, 307, 313, 329, 336, 339, 340, 346, 349, 350, 353, 354, 355, 362, 365, 377, 381, 382, 390], "_": 0, "rang": [0, 129, 279, 304, 309, 375, 394], "start_tim": 0, "perf_count": 0, "result": [0, 10, 11, 12, 42, 43, 44, 45, 48, 55, 62, 63, 64, 73, 75, 76, 77, 90, 111, 115, 119, 126, 134, 135, 137, 138, 139, 144, 157, 166, 167, 168, 169, 173, 179, 181, 183, 184, 185, 233, 234, 267, 268, 274, 277, 285, 287, 317, 336, 338, 339, 340, 345, 354, 355, 361, 373, 390], "end_tim": 0, "append": [0, 5, 72], "return": [0, 11, 12, 14, 15, 16, 18, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 58, 61, 62, 63, 64, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 88, 89, 109, 110, 111, 116, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 160, 162, 165, 166, 167, 168, 169, 170, 172, 174, 176, 178, 181, 182, 183, 184, 185, 195, 197, 199, 212, 215, 218, 224, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 255, 256, 257, 258, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275, 277, 285, 288, 307, 309, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 333, 334, 335, 336, 338, 339, 340, 343, 344, 345, 346, 348, 349, 350, 351, 354, 355, 361, 362, 363, 366, 367, 368, 369, 370, 371, 378, 380, 381, 382, 390], "median": [0, 5], "test_repetit": 0, "5": [0, 5, 13, 18, 25, 26, 29, 34, 40, 41, 42, 44, 45, 48, 50, 53, 57, 60, 62, 63, 64, 67, 68, 73, 75, 77, 83, 111, 115, 124, 126, 129, 131, 144, 151, 160, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 182, 183, 233, 269, 271, 272, 273, 277, 285, 286, 287, 289, 292, 304, 308, 309, 310, 311, 314, 317, 332, 334, 335, 338, 340, 341, 345, 355, 361, 363, 365, 366, 369, 373, 375, 376, 380, 381, 382], "float64": [0, 7, 76, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117, 118, 119, 120, 121, 161, 285, 286, 289, 292, 293, 294, 296, 298, 299, 300, 307, 308, 311, 312, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 339, 365], "float32": [0, 7, 76, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117, 118, 119, 120, 121, 161, 285, 307, 312, 314, 315, 317, 318, 320, 326, 329, 339], "int64": [0, 7, 42, 43, 44, 45, 76, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117, 118, 119, 120, 121, 135, 161, 339], "int32": [0, 7, 42, 43, 44, 45, 76, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117, 118, 119, 120, 121, 135, 161, 285, 287, 295, 297, 302, 304, 310, 313, 329, 339], "type_nam": 0, "name": [0, 5, 76], "print": [0, 12, 30, 33, 41, 50, 53, 73, 76, 80, 129, 183, 227, 285, 304, 309, 354, 374], "f": [0, 5, 75, 76, 80, 81, 89, 122, 123, 236, 246, 272, 273, 306, 338, 381, 382], "test": [0, 13, 17, 137, 138, 139, 287, 394], "data": [0, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 40, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 73, 74, 75, 76, 77, 82, 83, 84, 85, 87, 90, 111, 112, 115, 116, 118, 121, 126, 127, 128, 131, 135, 136, 137, 138, 139, 144, 145, 146, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 236, 257, 266, 268, 269, 270, 274, 277, 278, 281, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 364, 366, 369, 373, 375, 377, 380, 383, 394], "type": [0, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 40, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 90, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 131, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 233, 234, 235, 236, 242, 246, 257, 266, 268, 269, 270, 272, 273, 274, 277, 278, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 363, 364, 366, 367, 369, 370, 373, 375, 377, 380, 381, 382, 383, 394], "i": [0, 2, 3, 5, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 122, 123, 124, 126, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 151, 153, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 233, 234, 235, 236, 246, 255, 257, 268, 269, 272, 273, 275, 278, 279, 280, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 369, 370, 373, 375, 377, 380, 381, 382, 383, 390], "each": [0, 11, 41, 58, 75, 76, 119, 151, 152, 161, 176, 258, 259, 287, 304, 346, 349, 367, 370, 390], "64": [0, 29], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 11, 12, 13, 14, 17, 24, 30, 31, 42, 43, 44, 45, 54, 55, 56, 58, 61, 73, 75, 76, 82, 86, 88, 112, 115, 124, 127, 128, 129, 131, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 155, 157, 159, 160, 162, 166, 167, 168, 169, 170, 172, 173, 174, 176, 178, 179, 183, 231, 232, 236, 256, 264, 270, 277, 278, 290, 336, 338, 340, 346, 349, 350, 354, 355, 372, 376, 380], "els": 0, "msg": 0, "n": [0, 68, 69, 72, 76, 77, 89, 91, 93, 94, 96, 97, 99, 101, 102, 104, 105, 107, 108, 109, 132, 155, 157, 176, 287, 302, 304, 314, 324, 344, 350, 365, 367, 370, 376, 390], "4": [0, 12, 13, 18, 29, 30, 34, 40, 42, 44, 50, 53, 58, 62, 63, 64, 67, 68, 70, 73, 75, 76, 77, 80, 82, 85, 112, 115, 122, 124, 126, 127, 128, 129, 131, 146, 160, 165, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 255, 266, 269, 271, 273, 277, 278, 285, 286, 289, 309, 314, 330, 334, 336, 337, 338, 341, 345, 348, 349, 353, 354, 355, 361, 363, 364, 366, 369, 376, 377, 380, 382], "3e": 0, "ratio": 0, "6": [0, 12, 18, 26, 27, 29, 34, 44, 45, 50, 55, 62, 63, 64, 66, 67, 68, 73, 75, 76, 77, 82, 87, 90, 123, 159, 160, 170, 184, 185, 233, 247, 269, 273, 284, 285, 302, 304, 309, 314, 334, 338, 341, 355, 361, 364, 366, 369, 375, 380, 382], "2f": 0, "__name__": 0, "__main__": 0, "gpu_queu": 0, "get_sycl_devic": [0, 285], "dump_device_info": 0, "like": [2, 18, 30, 33, 80, 89, 122, 132, 161, 272, 285, 329, 338, 381, 394], "acceler": 2, "intel": [2, 3], "It": 2, "interfac": 2, "mani": [2, 390], "function": [2, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 32, 33, 35, 36, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 111, 112, 113, 114, 115, 118, 119, 122, 123, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 153, 156, 157, 160, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 231, 232, 257, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 283, 284, 285, 288, 290, 291, 301, 306, 322, 334, 335, 336, 337, 340, 341, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 364, 366, 369, 372, 373, 377, 378, 380, 381, 382, 383, 390, 394], "includ": [2, 170, 285, 329], "subset": [2, 351, 394], "method": [2, 75, 76, 110, 116, 118, 155, 236, 257, 285, 338, 344, 363, 383], "ndarrai": [2, 5, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 87, 88, 90, 111, 112, 115, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 151, 152, 153, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 268, 269, 270, 274, 275, 276, 277, 279, 280, 282, 284, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 370, 373, 375, 377, 380, 383], "under": [2, 157], "hood": 2, "nativ": [2, 76], "c": [2, 3, 30, 32, 33, 34, 36, 54, 75, 76, 80, 81, 89, 122, 123, 125, 161, 171, 236, 246, 272, 273, 334, 338, 381, 382], "onemkl": 2, "kernel": 2, "Being": 2, "drop": [2, 76], "replac": [2, 35, 280, 290, 390], "its": [2, 5, 51, 52, 75, 91, 97, 131, 151, 152, 266, 322, 338, 363, 390], "usag": 2, "veri": [2, 176], "similar": [2, 32, 33, 76, 124, 160, 170, 285, 313, 390], "The": [2, 3, 12, 15, 16, 18, 26, 27, 51, 52, 58, 61, 73, 75, 76, 77, 82, 86, 119, 127, 128, 132, 145, 146, 151, 152, 156, 157, 162, 166, 168, 182, 183, 235, 246, 255, 270, 277, 285, 288, 290, 291, 301, 306, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 338, 339, 344, 346, 354, 355, 367, 368, 370, 371, 380, 390, 394], "class": [2, 75, 76, 110, 133, 285, 313, 349, 350, 365, 394], "altern": [2, 171], "abov": [2, 366], "exampl": [2, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 111, 112, 115, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 145, 146, 151, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 227, 233, 243, 247, 255, 257, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 369, 373, 374, 375, 376, 377, 380, 381, 382], "an": [2, 11, 15, 16, 18, 26, 27, 28, 30, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 54, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 109, 116, 118, 119, 120, 123, 126, 133, 135, 144, 149, 155, 157, 172, 174, 181, 182, 235, 237, 247, 249, 255, 257, 259, 261, 263, 265, 266, 271, 272, 273, 275, 276, 277, 279, 280, 282, 285, 287, 292, 293, 295, 304, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 333, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 351, 355, 356, 357, 358, 363, 365, 366, 367, 369, 370, 374, 380, 381, 382, 390], "instanc": [2, 75, 176, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "creat": [2, 30, 32, 33, 68, 70, 76, 116, 120, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 390, 394], "ident": [2, 5, 76, 324], "one": [2, 30, 35, 37, 53, 56, 57, 75, 76, 80, 82, 91, 93, 96, 97, 101, 102, 105, 107, 122, 157, 162, 165, 176, 184, 246, 248, 273, 304, 351, 367, 370, 381, 390], "kei": [2, 28, 75, 76, 110, 198, 226, 235, 348], "differ": [2, 72, 75, 76, 77, 152, 157, 171, 235, 354, 383, 394], "from": [2, 26, 27, 28, 32, 33, 49, 56, 65, 66, 75, 76, 85, 88, 116, 118, 120, 121, 161, 176, 227, 237, 261, 265, 271, 277, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 343, 350, 351, 357, 358, 375, 380, 394], "memori": [2, 32, 33, 34, 75, 76, 244, 246, 263, 338, 383], "alloc": [2, 182, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329, 351], "when": [2, 75, 76, 157, 170, 235, 236, 380], "set": [2, 30, 49, 68, 75, 76, 80, 122, 155, 157, 237, 245, 272, 273, 381, 382, 390], "up": [2, 76], "dpnp_queue_gpu": 2, "environ": 2, "most": [2, 76, 351], "manipul": [2, 68, 383, 394], "ar": [2, 3, 7, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 37, 40, 42, 43, 44, 45, 47, 48, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90, 111, 112, 115, 117, 118, 119, 120, 121, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 151, 152, 155, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 255, 267, 268, 269, 270, 274, 275, 276, 277, 278, 279, 282, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 313, 316, 317, 319, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 343, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 368, 371, 373, 375, 377, 380, 390], "also": [2, 76, 86, 323, 390], "done": 2, "wai": [2, 75, 118, 255], "see": [2, 75, 76, 116, 157, 235, 302, 367, 368, 370, 371, 390], "complet": [2, 390], "list": [2, 5, 75, 76, 235, 337, 339, 343], "support": [2, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 151, 153, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 236, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 369, 373, 375, 377, 380, 381, 382, 398], "along": [2, 13, 15, 16, 17, 26, 27, 40, 50, 63, 64, 72, 75, 77, 134, 157, 172, 174, 175, 178, 184, 185, 188, 233, 234, 235, 240, 249, 251, 256, 262, 264, 267, 279, 341, 352, 353, 358, 361, 362, 364, 367, 370, 377, 390], "limit": [2, 7, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 151, 153, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 313, 316, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 369, 373, 375, 377, 380, 381, 382], "instal": 2, "guid": 2, "requir": [2, 5, 34, 75, 76, 236], "conda": 2, "forg": 2, "sourc": [2, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "multi": [2, 75, 92, 94, 98, 99, 103, 104, 106, 108, 177, 234, 263, 271, 383], "dimension": [2, 37, 53, 57, 68, 69, 70, 75, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 117, 120, 176, 177, 261, 271, 355, 383], "construct": [2, 32, 33, 49, 67, 75, 76, 118, 119, 177, 237, 271, 383], "index": [2, 26, 27, 49, 75, 76, 86, 176, 233, 234, 237, 263, 281, 338, 357, 358, 383, 394], "attribut": [2, 75, 76, 383], "arithmet": [2, 40, 124, 174, 175, 353, 377, 383, 394], "matrix": [2, 61, 147, 148, 151, 152, 154, 155, 157, 158, 171, 350, 369, 376, 383, 394], "multipl": [2, 26, 27, 28, 75, 76, 151, 152, 235, 348, 383], "comparison": [2, 82, 127, 128, 145, 146, 270, 383, 394], "oper": [2, 75, 76, 82, 86, 127, 128, 145, 146, 147, 166, 167, 168, 169, 213, 270, 383, 394], "special": [2, 76, 83, 383, 394], "univers": [2, 383, 390], "ufunc": [2, 383, 390], "routin": [2, 383, 390], "between": [2, 77, 152, 302, 316, 375, 383], "tabl": [2, 157, 383], "cupi": [2, 383], "miscellan": [2, 383, 394], "backend": [2, 125, 288, 290, 291, 301, 306, 322], "dpctl": [2, 11, 12, 42, 43, 44, 45, 46, 58, 73, 74, 75, 81, 82, 88, 123, 127, 128, 135, 144, 145, 146, 151, 162, 166, 167, 168, 169, 174, 176, 182, 183, 269, 270, 273, 274, 276, 277, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 339, 340, 346, 349, 350, 351, 354, 355, 363, 366, 369, 380, 382], "follow": [3, 7, 76, 86, 390, 394], "linux": 3, "distribut": [3, 170, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 394], "recommend": [3, 269], "ubuntu": 3, "20": [3, 5, 144, 287, 302], "04": 3, "lt": 3, "x86_64": 3, "These": [3, 76, 86, 390, 394], "compon": [3, 95, 100], "must": [3, 46, 75, 88, 147, 156, 157, 161, 233, 234], "v3": 3, "compat": [3, 338, 394], "18": [3, 5, 76, 77], "you": [3, 390], "can": [3, 12, 42, 44, 45, 68, 73, 74, 75, 76, 82, 118, 127, 128, 144, 145, 146, 166, 168, 169, 183, 233, 234, 269, 270, 274, 277, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 338, 340, 354, 370, 390], "anaconda": 3, "channel": 3, "latest": [3, 116], "develop": 3, "version": [3, 75, 76, 245, 269], "clone": 3, "git": 3, "repositori": 3, "recurs": 3, "http": [3, 116], "github": [3, 116], "com": 3, "intelpython": 3, "cd": 3, "script": 3, "build_loc": 3, "py": 3, "To": 3, "build": 3, "tree": 3, "download": 3, "need": [3, 75, 235], "oneapi": [3, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "toolkit": 3, "cython": 3, "pip": 3, "here": [5, 76], "correspond": [5, 26, 27, 75, 151, 242, 267, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 344, 390], "implement": [5, 116], "column": [5, 32, 33, 34, 75, 130, 151, 156, 236, 246, 367, 370], "mean": [5, 40, 75, 157, 175, 246, 285, 298, 300, 303, 307, 326, 330, 331, 338, 353, 377, 390], "yet": 5, "v1": 5, "23": [5, 285], "v0": 5, "12": [5, 26, 27, 68, 76, 309, 366, 369], "v8": 5, "397": 5, "208": 5, "286": 5, "56": 5, "29": 5, "47": 5, "13": [5, 26, 27, 43, 68, 75, 76, 135, 185, 235], "16": [5, 42, 68, 76, 126, 183, 277, 359], "21": [5, 64, 76], "51": 5, "48": [5, 184], "total": [5, 75, 252], "545": 5, "316": [5, 170], "415": 5, "ab": [5, 11, 90], "absolut": [5, 10, 90], "add": [5, 76], "add_docstr": 5, "add_newdoc": 5, "add_newdoc_ufunc": 5, "all": [5, 17, 31, 75, 76, 84, 147, 235, 238, 243, 255, 287, 349, 351, 390], "allclos": [5, 31, 136, 159], "alltru": 5, "amax": [5, 16, 26], "amin": [5, 15, 27], "angl": [5, 23, 24, 65, 66, 283, 284, 375], "ani": [5, 13, 15, 16, 75, 76, 109, 285, 329, 349, 390], "apply_along_axi": 5, "apply_over_ax": 5, "arcco": [5, 21], "arccosh": 5, "arcsin": [5, 19, 346], "arcsinh": [5, 20], "arctan": [5, 19, 21, 24], "arctan2": [5, 21, 23], "arctanh": [5, 20], "argmax": [5, 15, 27, 75, 390], "argmin": [5, 16, 26, 75, 390], "argpartit": [5, 28, 390], "argsort": [5, 75, 348, 363, 390], "argwher": 5, "around": [5, 75, 258], "array2str": 5, "array_equ": 5, "array_equiv": [5, 31], "array_repr": 5, "array_split": 5, "array_str": 5, "asanyarrai": [5, 33], "asarrai": [5, 32, 36], "asarray_chkfinit": [5, 32, 33], "ascontiguousarrai": [5, 32, 33], "asfarrai": [5, 32, 33], "asfortranarrai": [5, 32, 33, 34], "asmatrix": 5, "atleast_1d": [5, 86], "atleast_2d": [5, 86], "atleast_3d": [5, 86], "averag": [5, 75, 174, 250, 394], "bartlett": 5, "base_repr": 5, "binary_repr": 5, "bincount": 5, "bitwise_and": [5, 43, 44, 45, 135, 166], "bitwise_not": 5, "bitwise_or": [5, 42, 43, 45, 135, 168], "bitwise_xor": [5, 42, 43, 44, 135, 169], "blackman": 5, "block": 5, "bmat": 5, "broadcast_arrai": 5, "broadcast_shap": 5, "broadcast_to": 5, "busday_count": 5, "busday_offset": 5, "byte_bound": 5, "can_cast": 5, "cbrt": 5, "ceil": [5, 111, 112, 373], "choos": [5, 21, 23, 24, 75, 390], "clip": [5, 390], "column_stack": 5, "common_typ": 5, "compare_chararrai": 5, "compress": [5, 357, 390], "concaten": 5, "conj": [5, 75], "conjug": [5, 51, 74, 75, 147, 151, 171, 238], "convolv": [5, 57], "copi": [5, 30, 56, 75, 76, 176, 236, 246, 247, 255, 257, 259, 275, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329, 338, 348, 351, 366, 369, 390], "copysign": 5, "copyto": 5, "corrcoef": [5, 61], "correl": [5, 394], "co": [5, 19, 21, 346], "cosh": [5, 20], "count_nonzero": [5, 269], "cov": [5, 303], "cross": [5, 57], "cumprod": [5, 184, 390], "cumproduct": 5, "cumsum": [5, 75, 185, 390], "datetime_as_str": 5, "datetime_data": 5, "deg2rad": [5, 283, 284, 375], "degre": [5, 65, 283, 284, 327, 375], "delet": 5, "deprec": 5, "deprecate_with_doc": 5, "diag": [5, 159], "diag_indic": [5, 69, 109], "diag_indices_from": [5, 68, 109], "diagflat": 5, "diagon": [5, 67, 68, 69, 70, 75, 89, 109, 132, 147, 362, 365, 366, 367, 368, 369, 370, 371, 390], "diff": [5, 77, 129], "digit": 5, "disp": 5, "divid": [5, 112, 115, 153, 180, 336, 372], "divmod": [5, 390], "dot": [5, 75, 78, 79, 134, 154, 156, 159, 171, 361, 378], "dsplit": 5, "dstack": 5, "ediff1d": 5, "einsum": [5, 79, 134, 171, 274, 361], "einsum_path": [5, 78], "empti": [5, 30, 75, 81, 122, 123, 174, 243, 272, 273, 381, 382], "empty_lik": [5, 30, 80, 123, 273, 382], "equal": [5, 13, 14, 17, 31, 56, 57, 61, 75, 112, 127, 128, 136, 141, 145, 146, 153, 255, 270, 285, 295, 329, 336, 348, 351, 367, 370], "exp": [5, 162, 164], "exp2": [5, 84], "expand_dim": [5, 26, 27], "expm1": [5, 84, 164], "extract": [5, 67], "ey": [5, 51, 52, 169, 344], "fab": 5, "fastcopyandtranspos": 5, "fill_diagon": 5, "find_common_typ": 5, "fix": [5, 76], "flatnonzero": [5, 269], "flip": [5, 287], "fliplr": 5, "flipud": 5, "float_pow": 5, "floor": [5, 48, 112, 336, 373], "floor_divid": [5, 115, 180], "fmax": [5, 15, 16, 114, 173, 179, 277], "fmin": [5, 15, 16, 113, 173, 179, 277], "fmod": [5, 113, 114, 173, 179, 180, 277, 336], "format_float_posit": 5, "format_float_scientif": 5, "frexp": 5, "from_dlpack": 5, "frombuff": 5, "fromfil": 5, "fromfunct": [5, 32, 33], "fromit": [5, 32, 33], "frompyfunc": 5, "fromregex": 5, "fromstr": 5, "full": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 231, 232, 238, 239, 247, 255, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "full_lik": [5, 30, 81, 122, 273, 382], "gcd": 5, "genfromtxt": 5, "geomspac": [5, 160, 170], "get_array_wrap": 5, "get_includ": 5, "get_printopt": 5, "getbufs": 5, "geterr": 5, "geterrcal": 5, "geterrobj": 5, "gradient": 5, "greater": [5, 75, 82, 128, 145, 146, 155, 255, 270], "greater_equ": [5, 82, 127, 145, 146, 270], "ham": 5, "han": 5, "heavisid": 5, "histogram": [5, 394], "histogram2d": 5, "histogram_bin_edg": 5, "histogramdd": 5, "hsplit": 5, "hstack": 5, "hypot": 5, "i0": 5, "imag": [5, 390], "in1d": 5, "indic": [5, 15, 16, 26, 27, 28, 68, 69, 75, 76, 109, 233, 234, 235, 265, 269, 281, 338, 342, 345, 357, 358, 363, 367, 368, 370, 371], "info": 5, "inner": [5, 78, 79, 274], "interp": 5, "intersect1d": 5, "invert": [5, 43], "is_busdai": 5, "isclos": 5, "iscomplex": 5, "iscomplexobj": 5, "isfinit": [5, 138, 139], "isfortran": 5, "isin": 5, "isinf": [5, 137, 139], "isnan": [5, 137, 138], "isnat": [5, 139], "isneginf": [5, 137, 138, 139], "isposinf": [5, 137, 138, 139], "isreal": 5, "isrealobj": 5, "isscalar": 5, "issctyp": 5, "issubclass_": 5, "issubdtyp": 5, "issubsctyp": 5, "iter": [5, 32, 33, 75, 120, 245, 394], "ix_": 5, "kaiser": 5, "kron": 5, "lcm": 5, "ldexp": 5, "left_shift": [5, 340], "less": [5, 82, 127, 128, 146, 270, 337], "less_equ": [5, 82, 127, 128, 145, 270], "lexsort": [5, 28, 75, 235, 348], "linspac": [5, 18, 83, 124, 170, 176, 375], "load": [5, 161], "loadtxt": 5, "log": [5, 87, 124, 160, 165, 170, 300], "log10": [5, 162, 165], "log1p": [5, 87, 162, 165], "log2": [5, 162], "logaddexp": 5, "logaddexp2": 5, "logical_and": [5, 42, 167, 168, 169], "logical_not": [5, 43, 135, 166, 168, 169], "logical_or": [5, 44, 166, 167, 169], "logical_xor": [5, 45, 166, 167, 168], "logspac": [5, 124, 160], "lookfor": 5, "mask_indic": 5, "mat": 5, "matmul": [5, 159], "max": [5, 15, 26, 75, 155, 302, 390], "maximum": [5, 15, 16, 26, 27, 75, 113, 114, 172, 179, 233, 249, 277, 279], "maximum_sctyp": 5, "may_share_memori": 5, "meshgrid": [5, 177, 271], "min": [5, 16, 27, 75, 390], "min_scalar_typ": 5, "minimum": [5, 15, 16, 26, 27, 75, 113, 114, 173, 178, 234, 251, 277, 279], "mintypecod": 5, "mod": 5, "modf": 5, "moveaxi": [5, 341, 363], "msort": 5, "multipli": 5, "nan_to_num": 5, "nanargmax": 5, "nanargmin": 5, "nancumprod": [5, 185], "nancumsum": 5, "nanmax": [5, 15, 16], "nanmean": [5, 174, 353, 377], "nanmedian": 5, "nanmin": [5, 15, 16], "nanpercentil": 5, "nanprod": 5, "nanquantil": 5, "nanstd": [5, 174, 353, 377], "nansum": 5, "nanvar": [5, 174, 353, 377], "ndim": [5, 30, 34, 61, 68, 75, 76, 235, 272, 341, 356, 381], "neg": [5, 13, 17, 41, 137, 138, 139, 277, 304, 349], "nested_it": 5, "nextaft": 5, "nonzero": [5, 75, 380, 390], "not_equ": [5, 82, 127, 128, 145, 146], "obj2sctyp": 5, "ones": [5, 30, 80, 81, 82, 86, 89, 122, 123, 131, 132, 171, 186, 273, 339, 341, 363, 365, 381, 382], "ones_lik": [5, 30, 81, 123, 272, 382], "outer": [5, 78, 79, 143], "packbit": 5, "pad": [5, 76, 383, 394], "partit": [5, 75, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 348, 390], "percentil": [5, 175], "piecewis": 5, "place": [5, 75, 233, 234, 322, 338, 390], "poli": 5, "polyadd": 5, "polyd": 5, "polydiv": 5, "polyfit": 5, "polyint": 5, "polymul": 5, "polysub": 5, "polyv": 5, "posit": [5, 13, 17, 32, 33, 42, 75, 86, 137, 138, 139, 147, 182, 255, 277, 287, 311, 341, 349, 350, 363], "power": [5, 85, 154, 350], "printopt": 5, "prod": [5, 75, 186, 390], "product": [5, 62, 63, 74, 78, 79, 134, 143, 154, 156, 171, 183, 184, 274, 278, 361, 378, 394], "promote_typ": 5, "ptp": [5, 390], "put": [5, 281, 358, 390], "put_along_axi": [5, 358], "putmask": 5, "quantil": 5, "rad2deg": [5, 65, 66, 375], "radian": [5, 65, 66, 283, 375], "ravel": [5, 75, 157, 246, 390], "ravel_multi_index": 5, "real": [5, 102, 103, 104, 105, 106, 108, 147, 151, 152, 155, 287, 304, 349, 390, 394], "real_if_clos": 5, "recfromcsv": 5, "recfromtxt": 5, "reciproc": 5, "remaind": [5, 112, 113, 114, 115, 173, 179, 180, 277], "repeat": [5, 151, 152, 390], "resiz": [5, 86, 390], "result_typ": [5, 76, 394], "right_shift": [5, 144], "rint": 5, "roll": [5, 341], "rollaxi": 5, "root": [5, 42, 47, 349, 350], "rot90": 5, "round": [5, 29, 75, 111, 112, 336, 373, 390, 394], "round_": 5, "row_stack": 5, "safe_ev": 5, "save": 5, "savetxt": 5, "savez": 5, "savez_compress": 5, "sctype2char": 5, "searchsort": [5, 348, 390], "select": [5, 351, 383], "set_numeric_op": 5, "set_printopt": 5, "set_string_funct": 5, "setbufs": 5, "setdiff1d": 5, "seterr": 5, "seterrcal": 5, "seterrobj": 5, "setxor1d": 5, "shape": [5, 26, 27, 30, 31, 34, 46, 56, 57, 61, 62, 68, 75, 76, 80, 81, 86, 88, 119, 122, 123, 153, 155, 159, 166, 167, 168, 169, 171, 172, 178, 182, 233, 234, 257, 261, 266, 272, 273, 285, 294, 297, 302, 303, 308, 312, 313, 314, 315, 316, 317, 318, 320, 325, 326, 332, 336, 338, 341, 349, 350, 351, 356, 363, 370, 381, 382, 383, 394], "shares_memori": 5, "show_config": 5, "sign": [5, 51, 52, 55, 76], "signbit": 5, "sin": [5, 21, 176], "sinc": 5, "sinh": [5, 20, 346], "sometru": 5, "sort": [5, 28, 75, 235, 255, 342, 363, 383, 390, 394], "sort_complex": 5, "space": [5, 18, 124, 160, 170], "split": [5, 394], "sqrt": [5, 350], "squar": [5, 42, 132, 147, 150, 151, 154, 289, 305, 349, 368, 371], "squeez": [5, 75, 86, 390], "stack": [5, 130, 155, 379], "std": [5, 75, 174, 377, 390], "subtract": 5, "swapax": [5, 182, 390], "take": [5, 75, 281, 338, 358, 390], "take_along_axi": [5, 26, 27, 28, 49, 281, 357], "tan": [5, 21, 24], "tanh": [5, 20], "tensordot": [5, 74, 134, 171], "tile": [5, 337, 394], "trace": [5, 390], "transpos": [5, 75, 147, 182, 190, 390, 394], "trapz": 5, "tri": 5, "tril": [5, 367, 368, 371], "tril_indic": [5, 368, 371], "tril_indices_from": 5, "trim_zero": 5, "triu": [5, 370], "triu_indic": 5, "triu_indices_from": 5, "true_divid": 5, "trunc": [5, 48, 111], "typenam": 5, "union1d": 5, "uniqu": [5, 41, 76], "unpackbit": 5, "unravel_index": [5, 26, 27], "unwrap": [5, 65, 283], "vander": 5, "var": [5, 75, 174, 262, 353, 390], "vdot": [5, 74, 171], "vsplit": 5, "vstack": 5, "where": [5, 11, 12, 13, 17, 24, 42, 43, 44, 45, 55, 56, 58, 73, 75, 82, 88, 111, 112, 115, 127, 128, 131, 135, 136, 137, 138, 139, 144, 145, 146, 147, 158, 162, 166, 167, 168, 169, 172, 173, 174, 178, 179, 183, 231, 232, 249, 251, 256, 264, 270, 277, 278, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 336, 340, 342, 346, 349, 350, 354, 355], "who": 5, "zero": [5, 13, 17, 30, 60, 68, 80, 81, 89, 95, 100, 111, 122, 123, 155, 159, 182, 187, 269, 272, 273, 277, 285, 287, 315, 317, 318, 320, 355, 365, 366, 369, 382], "zeros_lik": [5, 30, 81, 123, 273, 381], "astyp": [5, 75, 269], "byteswap": 5, "dump": 5, "fill": [5, 30, 75, 80, 81, 109, 122, 123, 272, 273, 381, 382], "flatten": [5, 70, 75, 233, 234, 235, 245, 269, 334], "getfield": [5, 76], "item": [5, 75, 383], "itemset": 5, "newbyteord": [5, 76], "setfield": [5, 76], "setflag": 5, "tobyt": 5, "tofil": [5, 118], "tolist": 5, "tostr": 5, "view": [5, 38, 39, 75, 190, 257, 266, 338, 351, 363], "linalg": [5, 350], "choleski": 5, "cond": 5, "det": 5, "eig": [5, 151, 152], "eigh": 5, "eigval": [5, 151], "eigvalsh": 5, "inv": 5, "lstsq": 5, "matrix_pow": [5, 350], "matrix_rank": 5, "multi_dot": 5, "norm": [5, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 148, 394], "pinv": 5, "qr": 5, "slogdet": 5, "solv": [5, 394], "svd": [5, 155], "tensorinv": 5, "tensorsolv": 5, "fft": [5, 383, 394], "fft2": 5, "fftfreq": 5, "fftn": 5, "fftshift": 5, "hfft": 5, "ifft": 5, "ifft2": 5, "ifftn": 5, "ifftshift": 5, "ihfft": 5, "irfft": 5, "irfft2": 5, "irfftn": 5, "register_func": 5, "restore_al": 5, "restore_func": 5, "rfft": 5, "rfft2": 5, "rfftfreq": 5, "rfftn": 5, "beta": [5, 296], "binomi": [5, 304], "byte": [5, 75, 76, 248, 252], "chisquar": 5, "choic": [5, 49, 75, 237], "default_rng": 5, "dirichlet": 5, "exponenti": [5, 162, 298, 324], "gamma": [5, 325], "geometr": [5, 124, 160], "get_stat": [5, 285], "gumbel": 5, "hypergeometr": 5, "laplac": 5, "logist": 5, "lognorm": 5, "logseri": 5, "multinomi": 5, "multivariate_norm": 5, "negative_binomi": 5, "noncentral_chisquar": 5, "noncentral_f": 5, "normal": [5, 61, 151, 285, 300, 303, 314, 326], "pareto": 5, "permut": [5, 75, 182, 266, 363, 394], "poisson": 5, "rand": [5, 285, 315, 317, 318, 320], "randint": [5, 75, 247, 285, 316], "randn": [5, 159, 285], "random_integ": [5, 285, 313], "random_sampl": [5, 285, 312, 315, 318, 320], "ranf": 5, "rayleigh": 5, "seed": [5, 75, 247, 285], "set_stat": 5, "shuffl": 5, "standard_cauchi": 5, "standard_exponenti": 5, "standard_gamma": 5, "standard_norm": [5, 285, 314], "standard_t": 5, "triangular": [5, 147, 158], "uniform": [5, 76, 285, 312, 315, 317, 318, 320], "vonmis": 5, "wald": 5, "weibul": [5, 333], "zipf": 5, "bool": [7, 35, 42, 43, 44, 45, 75, 76, 82, 127, 128, 135, 137, 138, 139, 145, 146, 155, 157, 236, 269, 270, 338], "complex128": [7, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 339], "nan": [7, 13, 15, 16, 17, 32, 33, 137, 138, 139, 174, 184, 185, 186, 187, 188, 349, 353, 377, 394], "arg": [10, 78, 113, 114, 180, 285, 372, 378], "kwarg": [10, 11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 51, 52, 55, 58, 62, 63, 64, 73, 74, 75, 78, 82, 84, 90, 111, 112, 113, 114, 115, 117, 118, 119, 121, 126, 127, 128, 131, 134, 135, 137, 138, 139, 144, 145, 146, 161, 162, 166, 167, 168, 169, 171, 173, 179, 180, 181, 183, 184, 185, 186, 187, 220, 250, 257, 268, 270, 277, 335, 336, 340, 345, 346, 348, 349, 350, 354, 359, 361, 364, 365, 372, 373, 374, 378], "calcul": [10, 11, 72, 77, 84, 90, 111, 113, 114, 115, 173, 179, 180, 186, 187, 277, 278, 336, 349, 383], "valu": [10, 11, 12, 13, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 30, 32, 33, 40, 41, 42, 43, 44, 45, 46, 48, 54, 55, 56, 57, 58, 60, 61, 71, 72, 73, 75, 76, 77, 80, 81, 82, 88, 89, 90, 91, 97, 109, 110, 111, 112, 115, 119, 122, 123, 124, 127, 128, 131, 133, 135, 137, 138, 139, 144, 145, 146, 147, 152, 155, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 183, 188, 195, 197, 199, 212, 215, 218, 227, 233, 234, 243, 245, 249, 251, 255, 269, 270, 272, 273, 275, 276, 277, 279, 280, 281, 282, 285, 295, 312, 313, 329, 336, 337, 338, 340, 342, 343, 346, 349, 350, 353, 354, 355, 357, 358, 361, 362, 373, 375, 377, 381, 382, 390, 394], "element": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 31, 41, 42, 43, 44, 45, 47, 48, 51, 52, 55, 58, 59, 63, 64, 73, 75, 76, 77, 82, 84, 85, 87, 88, 90, 111, 113, 114, 115, 127, 128, 135, 136, 137, 138, 139, 144, 145, 146, 147, 153, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 179, 180, 181, 183, 184, 185, 231, 232, 238, 239, 240, 242, 243, 246, 247, 248, 250, 252, 255, 257, 258, 260, 262, 263, 265, 267, 268, 269, 270, 276, 277, 278, 280, 282, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 359, 360, 366, 369, 372, 373, 374, 380, 390, 394], "wise": [10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 31, 42, 43, 44, 45, 47, 48, 51, 52, 55, 58, 59, 73, 75, 82, 84, 85, 87, 90, 111, 113, 114, 115, 127, 128, 130, 135, 136, 137, 138, 139, 144, 145, 146, 153, 162, 163, 164, 165, 166, 167, 168, 169, 173, 179, 180, 181, 183, 239, 268, 270, 277, 335, 336, 340, 345, 346, 347, 349, 350, 354, 359, 360, 372, 373, 379, 390], "note": [10, 13, 15, 16, 17, 26, 27, 35, 36, 65, 75, 76, 86, 111, 113, 114, 137, 157, 170, 180, 235, 257, 269, 283, 288, 290, 291, 301, 306, 338, 372, 378], "shorthand": [10, 82, 127, 128, 145, 146, 166, 168, 270, 380], "out": [11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 42, 43, 44, 45, 47, 48, 49, 50, 55, 58, 59, 61, 66, 73, 74, 75, 82, 83, 84, 85, 87, 111, 112, 115, 116, 127, 128, 131, 135, 136, 137, 138, 139, 144, 145, 146, 156, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 182, 183, 188, 231, 232, 233, 234, 237, 240, 246, 249, 251, 256, 258, 262, 264, 265, 267, 269, 270, 274, 277, 278, 279, 284, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329, 334, 335, 336, 339, 340, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 373, 375, 377], "none": [11, 12, 13, 15, 16, 17, 18, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 55, 58, 60, 61, 62, 73, 74, 75, 76, 77, 80, 81, 82, 84, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 122, 123, 124, 127, 128, 129, 131, 132, 135, 137, 138, 139, 144, 145, 146, 148, 155, 156, 157, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 183, 188, 231, 232, 233, 234, 235, 237, 240, 247, 249, 250, 251, 255, 256, 258, 261, 262, 264, 265, 267, 270, 272, 273, 274, 275, 277, 278, 279, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 342, 346, 349, 350, 351, 352, 353, 354, 355, 357, 359, 362, 363, 364, 365, 367, 370, 373, 376, 377, 380, 381, 382, 390], "subok": [11, 12, 30, 43, 46, 54, 58, 73, 75, 81, 82, 112, 123, 127, 128, 135, 145, 146, 162, 166, 167, 168, 169, 183, 236, 270, 273, 277, 346, 349, 350, 354, 382], "y": [11, 12, 42, 43, 44, 45, 46, 54, 58, 61, 62, 73, 74, 75, 76, 86, 88, 119, 126, 135, 144, 162, 174, 176, 181, 183, 257, 266, 269, 277, 338, 340, 346, 349, 350, 354, 355, 363, 364, 380], "contain": [11, 18, 42, 43, 44, 45, 75, 76, 116, 125, 135, 144, 151, 174, 257, 285, 340, 349, 355, 367, 370, 390], "paramet": [11, 12, 13, 14, 17, 18, 24, 26, 27, 29, 30, 32, 33, 42, 43, 44, 45, 46, 48, 54, 55, 56, 58, 60, 62, 63, 64, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 171, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 233, 234, 235, 236, 243, 246, 257, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 354, 355, 356, 357, 361, 362, 364, 366, 367, 368, 369, 370, 371, 373, 380, 381, 382], "onli": [11, 13, 17, 18, 26, 27, 28, 30, 32, 33, 40, 54, 56, 57, 58, 60, 61, 71, 72, 76, 77, 80, 81, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 117, 118, 119, 120, 121, 122, 123, 124, 133, 137, 138, 139, 144, 147, 160, 161, 162, 167, 170, 172, 175, 176, 178, 188, 272, 273, 275, 279, 285, 307, 313, 329, 338, 340, 341, 342, 343, 346, 353, 357, 361, 362, 366, 369, 377, 380, 381, 382, 390], "either": [11, 12, 14, 24, 42, 43, 44, 45, 46, 55, 58, 73, 74, 76, 82, 88, 112, 115, 127, 128, 131, 135, 136, 144, 145, 146, 157, 162, 166, 167, 168, 169, 173, 174, 176, 179, 182, 183, 269, 270, 274, 276, 277, 321, 336, 337, 339, 340, 346, 349, 350, 351, 354, 355, 363, 380], "tensor": [11, 12, 42, 43, 44, 45, 46, 58, 73, 74, 75, 81, 82, 88, 123, 127, 128, 134, 135, 144, 145, 146, 151, 162, 166, 167, 168, 169, 174, 176, 182, 183, 269, 270, 273, 274, 276, 277, 339, 340, 346, 349, 350, 351, 354, 355, 361, 363, 366, 369, 380, 382], "usm_ndarrai": [11, 12, 42, 43, 44, 45, 46, 58, 73, 74, 75, 81, 82, 88, 123, 127, 128, 135, 144, 145, 146, 151, 162, 166, 167, 168, 169, 174, 176, 182, 183, 269, 270, 273, 274, 276, 277, 338, 339, 340, 346, 349, 350, 351, 354, 355, 363, 366, 369, 380, 382], "default": [11, 12, 13, 17, 18, 24, 26, 27, 28, 29, 30, 32, 33, 35, 40, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 60, 61, 71, 72, 73, 75, 76, 77, 80, 81, 82, 89, 91, 97, 109, 112, 115, 122, 123, 124, 127, 128, 131, 133, 135, 137, 138, 139, 144, 145, 146, 155, 157, 160, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 183, 188, 235, 246, 270, 272, 273, 275, 277, 279, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 336, 338, 340, 342, 343, 346, 349, 350, 353, 354, 355, 357, 362, 367, 370, 377, 381, 382, 390], "keyword": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 55, 62, 63, 64, 73, 74, 77, 90, 111, 112, 115, 126, 131, 134, 135, 144, 173, 179, 181, 183, 184, 185, 186, 187, 268, 277, 335, 336, 340, 345, 348, 354, 359, 361, 364, 373, 390], "argument": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 55, 62, 63, 64, 73, 74, 75, 76, 77, 83, 90, 111, 112, 115, 126, 131, 134, 135, 141, 142, 144, 153, 156, 173, 179, 181, 183, 184, 185, 186, 187, 235, 236, 257, 268, 277, 335, 336, 339, 340, 345, 348, 354, 359, 361, 364, 373, 390], "current": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 55, 62, 63, 64, 73, 74, 75, 76, 77, 90, 111, 112, 115, 126, 131, 132, 134, 135, 144, 173, 179, 181, 183, 184, 185, 186, 187, 236, 268, 277, 335, 336, 340, 345, 348, 354, 359, 361, 364, 373], "unsupport": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 55, 62, 63, 64, 73, 74, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 126, 131, 134, 135, 144, 156, 173, 179, 181, 183, 184, 185, 186, 187, 268, 277, 278, 335, 336, 340, 345, 348, 354, 359, 361, 364, 373], "otherwis": [11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 31, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 58, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 88, 89, 90, 111, 112, 115, 122, 123, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 153, 160, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 233, 234, 236, 246, 257, 268, 269, 270, 272, 273, 274, 276, 277, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 364, 366, 369, 373, 377, 380, 381, 382], "execut": [11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 32, 33, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 58, 60, 61, 62, 63, 64, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 111, 112, 115, 119, 122, 123, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 153, 160, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 268, 269, 270, 272, 273, 274, 276, 277, 288, 290, 291, 301, 306, 322, 334, 335, 336, 337, 340, 341, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 364, 366, 369, 373, 377, 380, 381, 382], "sequenti": [11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 58, 60, 61, 62, 63, 64, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 111, 112, 115, 122, 123, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 153, 160, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 268, 269, 270, 272, 273, 274, 276, 277, 334, 335, 336, 337, 340, 341, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 364, 366, 369, 373, 377, 380, 381, 382], "cpu": [11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 58, 60, 61, 62, 63, 64, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 111, 112, 115, 122, 123, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 153, 160, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 268, 269, 270, 272, 273, 274, 276, 277, 334, 335, 336, 337, 340, 341, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 361, 364, 366, 369, 373, 377, 380, 381, 382], "input": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 87, 90, 102, 103, 104, 105, 106, 108, 111, 112, 115, 122, 123, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 234, 246, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 307, 313, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 372, 373, 375, 377, 380, 381, 382], "dp": [11, 12, 13, 17, 43, 46, 73, 74, 75, 135, 151, 183, 266, 277, 338, 339, 344, 354, 363, 380], "x1": [12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 35, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 81, 82, 84, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 115, 123, 126, 127, 128, 131, 134, 136, 137, 138, 139, 143, 144, 145, 146, 150, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 181, 183, 184, 185, 186, 187, 188, 268, 270, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 322, 334, 335, 336, 337, 340, 341, 342, 345, 347, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 371, 373, 374, 375, 376, 377, 382], "x2": [12, 13, 14, 17, 21, 23, 24, 30, 42, 44, 45, 55, 57, 62, 73, 74, 82, 112, 115, 124, 127, 128, 131, 134, 136, 143, 144, 145, 146, 160, 166, 167, 168, 169, 170, 171, 173, 176, 179, 183, 269, 270, 274, 277, 336, 340, 342, 349, 354, 361], "order": [12, 28, 30, 32, 33, 34, 36, 54, 58, 73, 75, 76, 78, 79, 80, 81, 82, 89, 112, 122, 123, 127, 128, 145, 146, 151, 152, 157, 162, 166, 167, 168, 169, 182, 183, 235, 236, 246, 255, 270, 272, 273, 275, 334, 338, 342, 346, 349, 350, 354, 381, 382, 394], "k": [12, 54, 58, 67, 70, 73, 75, 82, 89, 112, 127, 128, 145, 146, 162, 166, 167, 168, 169, 183, 236, 246, 270, 346, 349, 350, 354, 365, 366, 367, 368, 369, 370, 371, 398], "scalar": [12, 14, 24, 37, 42, 44, 45, 55, 73, 74, 75, 76, 82, 112, 115, 127, 128, 131, 140, 144, 145, 146, 166, 168, 169, 173, 176, 179, 183, 234, 243, 247, 270, 274, 277, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 307, 308, 310, 311, 313, 316, 319, 321, 325, 327, 328, 329, 330, 331, 332, 333, 336, 340, 354, 380, 390], "both": [12, 42, 44, 45, 73, 74, 82, 127, 128, 144, 145, 146, 157, 166, 168, 169, 183, 270, 274, 277, 340, 354], "same": [12, 15, 16, 31, 35, 36, 42, 44, 45, 46, 65, 73, 74, 75, 81, 82, 86, 88, 113, 114, 116, 123, 127, 128, 144, 145, 146, 161, 166, 167, 168, 169, 180, 182, 183, 257, 270, 273, 274, 277, 283, 285, 307, 313, 329, 340, 349, 350, 351, 354, 358, 368, 371, 372, 378, 382], "b": [12, 50, 63, 64, 74, 76, 77, 82, 115, 127, 128, 134, 145, 146, 159, 166, 168, 171, 184, 185, 270, 274, 277, 286, 361, 364], "axi": [13, 15, 16, 17, 26, 27, 28, 40, 50, 60, 62, 63, 64, 72, 75, 77, 86, 91, 96, 97, 101, 102, 105, 124, 157, 160, 170, 172, 174, 175, 178, 184, 185, 188, 231, 232, 233, 234, 235, 240, 249, 250, 251, 255, 256, 261, 262, 264, 265, 267, 275, 278, 279, 281, 337, 338, 341, 351, 352, 353, 355, 357, 358, 364, 377, 390], "keepdim": [13, 17, 60, 75, 157, 172, 174, 175, 178, 188, 231, 232, 249, 251, 256, 262, 264, 267, 278, 279, 353, 355, 377], "fals": [13, 14, 17, 30, 31, 40, 46, 54, 60, 61, 75, 76, 81, 82, 109, 123, 124, 127, 128, 133, 136, 137, 138, 139, 145, 146, 155, 157, 159, 160, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 188, 231, 232, 236, 256, 262, 264, 267, 270, 273, 278, 338, 353, 355, 376, 377, 382], "whether": [13, 17, 76, 147, 338], "given": [13, 15, 16, 17, 18, 26, 27, 29, 30, 54, 61, 63, 64, 72, 74, 75, 76, 77, 80, 81, 109, 122, 123, 131, 176, 178, 184, 185, 233, 234, 235, 240, 251, 256, 258, 262, 264, 267, 272, 273, 278, 280, 285, 290, 312, 329, 341, 355, 364, 365, 381, 382, 390], "evalu": [13, 17, 75, 78, 79, 82, 134, 176, 231, 232, 274, 361], "Not": [13, 17, 75, 137, 184, 186, 187, 235, 280], "number": [13, 17, 18, 29, 41, 51, 52, 60, 75, 76, 111, 112, 124, 137, 148, 155, 157, 160, 161, 170, 184, 186, 187, 253, 258, 259, 260, 269, 285, 287, 297, 321, 336, 341, 345, 373, 394], "infin": [13, 17, 111, 112, 137, 138, 139, 336, 373, 394], "becaus": [13, 17], "x3": [13, 17, 160, 170], "rtol": [14, 136], "1e": [14, 136, 303], "05": [14, 136], "atol": [14, 136], "08": [14, 58, 136, 303, 346], "two": [14, 15, 16, 31, 38, 42, 43, 44, 45, 53, 57, 62, 70, 75, 76, 78, 79, 134, 135, 136, 143, 151, 156, 166, 168, 169, 171, 182, 255, 274, 285, 314, 356, 366, 367, 369, 370, 378], "within": [14, 18, 31, 136, 285, 329], "toler": [14, 31, 136], "1e10": [14, 136], "7": [14, 18, 48, 60, 64, 67, 68, 75, 77, 84, 111, 126, 136, 159, 171, 175, 185, 247, 269, 285, 309, 336, 339, 354, 361, 366, 369, 373, 380], "00001e10": [14, 136], "8": [14, 47, 67, 68, 76, 136, 159, 160, 170, 184, 285, 309, 328, 346, 361, 364, 366, 369, 376, 380], "propag": [15, 16, 76], "ignor": [15, 16, 75, 76, 174, 188, 267, 353, 377], "thi": [15, 16, 35, 36, 65, 68, 75, 76, 113, 114, 118, 157, 180, 235, 236, 243, 255, 257, 259, 283, 318, 320, 338, 372, 378, 380, 383], "work": [15, 16, 35, 36, 65, 113, 114, 180, 283, 372, 378, 390], "exactli": [15, 16, 35, 36, 65, 283, 285, 313], "start": [18, 124, 160, 170, 341], "stop": [18, 124, 160, 170], "step": [18, 124, 160, 170], "devic": [18, 30, 33, 35, 75, 80, 81, 89, 116, 122, 123, 160, 272, 273, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 351, 381, 382], "usm_typ": [18, 30, 33, 75, 80, 81, 89, 122, 123, 160, 272, 273, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329, 381, 382], "sycl_queu": [18, 30, 33, 75, 80, 81, 89, 122, 123, 160, 272, 273, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 381, 382], "evenli": [18, 29, 124, 160, 170], "interv": [18, 160, 285, 313, 315, 317, 318, 320, 328, 329], "d": [18, 68, 76, 89, 92, 93, 94, 98, 99, 103, 104, 106, 107, 108, 121, 151, 156, 157, 176, 269, 290, 338, 344, 380, 390], "care": 18, "handl": [18, 76, 269, 394], "endpoint": [18, 124, 160, 170], "trigonometr": [19, 20, 21, 23, 24, 25, 58, 59, 84, 85, 87, 163, 164, 165, 346, 347, 394], "invers": [19, 20, 21, 22, 23, 24, 25, 43, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 135, 162, 164, 331, 346], "cosin": [19, 20, 21, 58, 59, 346], "tangent": [19, 20, 21, 23, 24, 25, 359, 360], "sine": [19, 20, 21, 22, 346, 347], "14159265": 19, "hyperbol": [20, 22, 25, 59, 346, 347, 360, 394], "comput": [20, 21, 24, 40, 42, 43, 44, 45, 48, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 129, 134, 135, 148, 149, 150, 152, 156, 157, 158, 166, 167, 168, 169, 174, 175, 180, 188, 353, 355, 359, 360, 361, 373, 377], "e": [20, 22, 75, 76, 162, 263, 285], "10": [20, 22, 26, 27, 29, 54, 64, 68, 75, 76, 122, 124, 129, 144, 162, 165, 170, 175, 187, 257, 285, 287, 297, 309, 339, 340, 366, 369, 380], "65745445": 20, "99322285": 20, "arc": [21, 23, 24], "quadrant": [21, 23, 24], "correctli": [21, 23, 24, 157, 269], "5707963267948966": 21, "72538256": 22, "99822295": 22, "complex": [23, 24, 51, 52, 74, 75, 76, 83, 151, 152, 159, 171, 238, 239, 349, 390, 394], "78539816": [23, 375], "57079633": [24, 284, 375], "54930614": 25, "convert": [26, 27, 32, 33, 34, 35, 37, 65, 66, 76, 283, 284, 375], "flat": [26, 27, 75, 246], "tupl": [26, 27, 68, 75, 76, 86, 157, 259, 269, 337, 338, 344, 367, 370, 390], "appli": [26, 27, 28, 166, 168, 169, 339], "index_arrai": [26, 27, 28, 75, 233, 235], "call": [26, 27, 28, 76, 156, 351, 380], "In": [26, 27, 75, 147, 235, 285, 329, 338], "case": [26, 27, 159, 338], "occurr": [26, 27, 41], "first": [26, 27, 75, 76, 85, 141, 142, 156, 235, 277, 338, 350], "11": [26, 27, 29, 68, 75, 126, 257, 304, 313, 347, 366, 369], "14": [26, 27, 42, 43, 68, 74, 135, 361], "15": [26, 27, 64, 68, 309, 355], "in_array1": [28, 60, 83], "kind": [28, 75, 76, 235, 255, 275, 394], "would": [28, 75, 76, 255, 285, 363], "pramet": [28, 40, 57, 61, 172, 175, 178, 188, 353, 377], "describ": [28, 75, 76, 157, 235, 355, 394], "algorithm": [28, 75, 235], "indirect": [28, 75, 235, 348], "stabl": [28, 75, 235, 348], "partial": [28, 348], "decim": [29, 75, 258], "37": 29, "nearest": [29, 111, 112, 336, 373], "even": [29, 76], "int": [29, 35, 41, 68, 75, 76, 82, 126, 133, 235, 275, 285, 313, 316, 338, 344, 365, 367, 368, 370, 371, 390], "ndmin": 30, "new": [30, 46, 75, 76, 80, 81, 86, 116, 120, 121, 122, 123, 182, 234, 257, 266, 272, 273, 338, 341, 352, 363, 381, 382, 390], "uniniti": [30, 81, 122, 272, 381], "than": [30, 75, 155, 255, 337], "dimens": [30, 37, 38, 39, 61, 68, 75, 76, 86, 133, 153, 157, 182, 234, 246, 253, 285, 315, 317, 318, 320, 337, 338, 344, 348, 351, 366, 367, 368, 369, 370, 371, 390, 394], "a1": 31, "a2": 31, "equal_nan": [31, 136], "have": [31, 46, 76, 161, 182, 304, 390], "consist": 31, "pass": [32, 33, 75, 76, 257], "subclass": [32, 33, 142], "through": [32, 33, 76, 390], "which": [32, 33, 75, 76, 147, 155, 157, 233, 234, 235, 267, 269, 351, 367, 370, 390], "alwai": [32, 338], "contigu": [32, 33, 34, 75, 246, 334, 338], "float": [32, 33, 35, 76, 126, 155, 157, 170, 285, 314, 315, 317, 318, 320, 326, 329, 390, 394], "point": [32, 33, 76, 160, 285, 314, 326, 394], "major": [32, 33, 34, 75, 236, 246], "check": [32, 33, 147], "inf": [32, 33, 137, 138, 139, 148, 157, 162, 163, 165, 349], "grid": [32, 33, 133, 176], "object": [33, 54, 75, 76, 86, 116, 120, 147, 151, 157, 161, 177, 257, 271, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 338, 390], "satisfi": [34, 88], "If": [35, 74, 75, 76, 155, 156, 157, 174, 233, 234, 235, 236, 259, 285, 307, 329, 337, 338, 349, 355, 390], "depend": [35, 151, 157, 343, 380], "capabl": 35, "ari": [37, 38, 39], "least": [37, 38, 39, 76, 136], "whilst": 37, "higher": 37, "preserv": [37, 75, 76, 233, 234], "three": [39, 285, 321], "weight": [40, 41, 61, 129, 174], "specifi": [40, 46, 71, 75, 124, 134, 157, 160, 170, 174, 175, 188, 233, 234, 235, 241, 280, 285, 298, 308, 326, 341, 353, 361, 377], "minlength": 41, "count": [41, 60, 76, 120, 154, 269, 287, 383, 394], "non": [41, 60, 137, 151, 269, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 349], "find": [41, 155, 342, 348, 374, 394], "re": [41, 50, 129, 374], "bit": [42, 43, 44, 45, 76, 135, 144, 166, 168, 169, 340, 394], "AND": [42, 43, 44, 45, 135, 166, 167, 168, 169], "truth": [42, 43, 44, 45, 82, 127, 128, 135, 145, 146, 166, 167, 168, 169, 270, 394], "OR": [42, 43, 44, 45, 135, 166, 167, 168, 169], "xor": [42, 43, 44, 45, 135, 166, 167, 168, 169], "255": [42, 44], "NOT": [43, 135, 166, 167, 168, 169], "31": [45, 124], "26": 45, "broadcast": [46, 56, 157, 166, 168, 169, 171], "cube": 47, "27": [47, 376], "truncat": [48, 111, 323, 373], "mode": [49, 53, 57, 75, 158, 237, 265, 280, 323, 328, 357], "rais": [49, 75, 85, 154, 237, 259, 265, 277, 280, 338, 350, 357], "prefer": 49, "arr": [50, 75, 76, 235, 269, 279, 282, 309, 368, 371], "cast": [50, 56, 75, 236], "same_kind": [50, 56], "join": [50, 352, 394], "sequenc": [50, 53, 57, 130, 154, 156, 309, 322, 339, 352, 379], "exist": [50, 76, 86, 338], "t": [50, 61, 75, 76, 152, 266, 327], "obtain": [51, 52, 269], "chang": [51, 52, 55, 75, 76, 235, 263, 266, 276, 282, 338, 375, 394], "imaginari": [51, 52], "part": [51, 52, 181, 390], "2j": [51, 52, 151], "1j": [51, 52, 159, 350], "j": [51, 52, 151, 350], "v": [53, 76, 151, 280], "discret": [53, 57, 72, 77, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 285, 383], "linear": [53, 57, 170, 383, 394], "convolut": [53, 57], "ca": 53, "z": [54, 119, 176, 295], "9": [55, 60, 67, 68, 73, 75, 90, 112, 159, 171, 183, 247, 277, 285, 287, 289, 309, 349, 361, 366, 369, 376, 380], "dst": 56, "src": 56, "anoth": [56, 116], "necessari": [56, 338], "valid": [57, 367, 368, 370, 371], "pi": [58, 66, 346, 347, 359, 360, 375], "000000e": [58, 346], "00": [58, 346], "371139e": 58, "m": [61, 76, 89, 147, 149, 151, 152, 155, 365, 367, 370], "rowvar": 61, "bia": 61, "ddof": [61, 75, 188, 262, 267, 353, 377], "fweight": 61, "aweight": 61, "estim": [61, 287, 304], "covari": 61, "variabl": 61, "axisa": 62, "axisb": 62, "axisc": 62, "vector": [62, 148, 155, 156, 157, 176, 378, 394], "cumul": [63, 64, 75, 184, 185, 240], "24": [63, 77, 186, 278], "120": [63, 66], "720": 63, "remov": [65, 75, 86, 261, 283, 351, 394], "larg": [65, 76, 283], "jump": [65, 283], "wrap": [65, 109, 283], "rad": 66, "30": [66, 284], "60": [66, 380], "90": [66, 380], "150": 66, "access": [68, 69, 109, 390], "main": [68, 69, 109, 132, 152], "usual": [68, 76], "di": 68, "100": [68, 124, 170, 297, 323], "now": 68, "we": 68, "d3": 68, "And": [68, 75, 236], "offset": [71, 75, 76, 241, 362, 367, 368, 370, 371], "axis1": [71, 75, 241, 356, 362], "axis2": [71, 75, 241, 356, 362], "prepend": 72, "th": [72, 77, 175, 366, 369], "quotient": 73, "over": [74, 119, 157, 160, 171, 176, 184, 278, 285, 312, 317, 328, 329, 355, 394], "arbitrari": [74, 76, 171, 339], "ax": [74, 75, 92, 94, 95, 98, 99, 100, 103, 104, 106, 108, 134, 157, 171, 174, 182, 259, 266, 341, 351, 356, 361, 363], "f8": [75, 76], "buffer": [75, 117, 338], "stride": [75, 236], "wrapper": 75, "compliant": 75, "origin": [75, 157, 182, 235, 338], "__getitem__": [75, 76, 110, 383], "__setitem__": [75, 110, 383], "val": [75, 109, 110, 226, 276], "__len__": [75, 76, 383], "perform": [75, 147, 213], "equival": [75, 86, 231, 232, 257, 266, 267, 284, 285, 313, 338, 344, 363, 390], "integ": [75, 76, 111, 112, 136, 144, 154, 157, 233, 234, 277, 285, 313, 316, 321, 336, 338, 340, 341, 350, 366, 369, 373, 390], "option": [75, 76, 155, 156, 157, 233, 234, 235, 246, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 338, 367, 368, 370, 371], "Its": [75, 233, 234], "right": [75, 131, 144, 150, 151, 233, 234, 328, 340, 342], "hold": [75, 157, 233, 234], "output": [75, 76, 82, 127, 128, 145, 146, 154, 156, 176, 227, 233, 234, 270, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 351, 394], "integer_arrai": [75, 233], "versionchang": [75, 235], "previous": [75, 235], "wa": [75, 76, 235, 285, 326, 355], "error": [75, 83, 235, 383], "At": [75, 235], "some": [75, 76, 86, 88, 111, 235, 390], "futur": [75, 76, 235], "date": [75, 235], "intend": [75, 235], "until": [75, 235, 341], "should": [75, 136, 235, 302, 337, 338, 342, 390], "explicitli": [75, 235], "avoid": [75, 235], "futurewarn": [75, 235], "quicksort": [75, 235], "mergesort": [75, 235], "heapsort": [75, 235], "field": [75, 76, 176, 235, 390], "defin": [75, 76, 235, 390], "compar": [75, 82, 235], "second": [75, 76, 85, 142, 235, 277, 350], "etc": [75, 76, 235, 304], "other": [75, 76, 111, 156, 182, 192, 193, 195, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 225, 228, 229, 230, 235, 285, 329, 383, 394], "word": [75, 111, 235, 285, 329], "yield": [75, 235, 285, 390], "maskedarrai": [75, 235], "inplac": [75, 235], "asnumpi": 75, "content": [75, 322], "popul": [75, 285, 312], "unsaf": [75, 236], "target": [75, 236], "A": [75, 76, 116, 118, 121, 152, 236, 246, 259, 285, 287, 304, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 363], "row": [75, 156, 161, 236, 246, 367, 379], "style": [75, 236, 246], "fortran": [75, 236, 246, 338], "keep": [75, 236], "close": [75, 236, 285, 313], "possibl": [75, 236, 257, 338, 351, 363], "happen": [75, 236, 287], "itself": [75, 76, 236, 390], "possibli": [75, 236], "doe": [75, 236], "assign": [75, 243], "collaps": [75, 246], "occur": [75, 246], "get_arrai": 75, "get": [75, 263, 390], "id": [75, 247], "standard": [75, 112, 115, 174, 180, 227, 247, 285, 300, 307, 314, 323, 324, 325, 326, 327, 336, 353, 355, 377, 390, 394], "random": [75, 159, 247, 383, 394], "123": [75, 247], "initi": [75, 80, 121, 172, 178, 249, 251, 256, 264, 278, 285, 355], "kth": [75, 255, 275], "introselect": [75, 255, 275], "rearrang": [75, 255, 394], "smaller": [75, 112, 255], "move": [75, 182, 255, 341, 363], "befor": [75, 255], "behind": [75, 255], "undefin": [75, 255], "dparrai": [75, 256, 264, 395], "sh": [75, 257], "unlik": [75, 257], "free": [75, 257], "allow": [75, 257, 390], "separ": [75, 76, 257], "singl": [75, 156, 174, 261, 285, 304, 313, 314, 315, 316, 317, 318, 320, 326, 390], "entri": [75, 76, 80, 261, 267], "varianc": [75, 174, 188, 262, 267, 353, 377, 394], "to_devic": 75, "target_devic": 75, "transfer": 75, "suitabl": [75, 266], "properti": [75, 190, 242, 244, 245, 248, 252, 253, 259, 260, 263, 266, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 390], "give": [75, 266, 338, 344], "without": [75, 80, 259, 266, 338, 390], "mask": [75, 76, 267, 276, 282, 357], "finit": [75, 137, 138, 139, 267], "__eq__": [75, 76, 110, 285, 383], "self": [75, 76, 110, 195, 197, 199, 212, 215, 218, 224, 245, 285], "__ne__": [75, 76, 110, 285, 383], "__lt__": [75, 76, 110, 285, 383], "__le__": [75, 76, 110, 285, 383], "__gt__": [75, 76, 110, 285, 383], "__ge__": [75, 76, 110, 285, 383], "flag": [75, 76], "about": [75, 244, 390], "layout": [75, 244, 338, 383], "items": [75, 76], "nbyte": 75, "consum": [75, 252], "length": [75, 82, 259, 288, 338, 339, 344, 351], "repres": [75, 76, 116, 133, 259, 285, 390], "diment": [75, 259], "setter": [75, 259], "involv": [75, 259], "cannot": [75, 259, 351], "displac": [75, 263], "upon": [75, 263], "unit": [75, 263], "respect": [75, 263], "g": [75, 76, 263, 285], "s1": [75, 76, 263], "s2": [75, 76, 263], "s3": [75, 263], "i1": [75, 76, 263], "i2": [75, 76, 263], "i3": [75, 263], "sycl_context": 75, "sycl_devic": 75, "align": 76, "homogen": 76, "fundament": 76, "numer": [76, 394], "match": [76, 281, 357, 358], "what": [76, 82, 287, 304], "compil": 76, "struct": 76, "obj": [76, 77, 116, 140], "dictionari": 76, "comma": 76, "string": [76, 121, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 390], "being": 76, "sticki": 76, "isalignedstruct": 76, "make": [76, 176], "mai": [76, 86, 151, 170, 390], "just": 76, "built": 76, "int16": 76, "structur": [76, 390], "f1": 76, "unsign": 76, "uint64": 76, "f2": 76, "u8": 76, "i4": 76, "protocol": [76, 116], "s10": 76, "format": [76, 118, 394], "f0": 76, "void": 76, "flexibl": 76, "hello": 76, "world": [76, 287, 304], "i8": 76, "v10": 76, "subdivid": 76, "int8": 76, "gender": 76, "ag": 76, "uint8": 76, "u1": 76, "25": [76, 83, 126, 129, 160, 183, 277, 314, 323, 376, 377], "surnam": 76, "s25": 76, "len": [76, 133, 337, 344], "new_ord": 76, "made": 76, "sub": 76, "forc": 76, "swap": 76, "opposit": 76, "endian": 76, "littl": 76, "big": 76, "new_dtyp": 76, "sys_is_l": 76, "byteord": 76, "native_cod": 76, "swapped_cod": 76, "native_dt": 76, "swapped_dt": 76, "l": [76, 147, 151], "accord": [76, 151, 152], "avail": [76, 383], "section": [76, 390], "manual": 76, "subarrai": 76, "regardless": 76, "subdtyp": 76, "8f": 76, "charact": 76, "One": [76, 338], "applic": 76, "dt": 76, "relev": 76, "ascii": 76, "show": [76, 169, 176, 323], "char": 76, "descr": 76, "__array_interface__": 76, "descript": [76, 390], "warn": [76, 303], "directli": [76, 170], "accur": 76, "reconstruct": [76, 159], "str_": 76, "grade": 76, "u16": 76, "fulli": 76, "titl": 76, "32": [76, 361], "present": 76, "unicod": 76, "meta": 76, "notic": 76, "s16": 76, "how": 76, "interpret": [76, 117, 390], "core": [76, 390], "multiarrai": 76, "constant": 76, "item_hasobject": 76, "list_pickl": 76, "item_is_point": 76, "needs_init": 76, "needs_pyapi": 76, "use_getitem": 76, "use_setitem": 76, "explan": 76, "thei": [76, 152, 390], "user": 76, "demonstr": 76, "particular": 76, "hasobject": 76, "boolean": [76, 136, 137, 138, 139, 166, 167, 168, 169, 338, 357], "recal": 76, "actual": [76, 147], "address": 76, "pointer": 76, "distinguish": 76, "won": 76, "maintain": [76, 342], "so": [76, 82, 162, 323, 349], "togeth": 76, "produc": 76, "isbuiltin": 76, "relat": 76, "read": [76, 118, 338], "machineri": 76, "extend": [76, 390], "field1": 76, "isn": 76, "platform": 76, "anyth": 76, "80": [76, 380], "biufcmmosuv": 76, "identifi": 76, "gener": [76, 152, 285, 287, 290, 321, 376, 390, 394], "u": [76, 159], "timedelta": 76, "datetim": 76, "metadata": 76, "readonli": 76, "mappingproxi": 76, "creation": [76, 79, 383, 390, 394], "ha": [76, 96, 101, 119, 351, 355, 390], "approach": 76, "although": 76, "guarante": [76, 338], "certain": 76, "project": 76, "featur": 76, "long": 76, "undocu": 76, "well": [76, 118, 287, 304, 323], "aspect": 76, "expect": 76, "ad": [76, 394], "datatyp": [76, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 155], "But": 76, "dt2": 76, "key2": 76, "value2": 76, "arr2": 76, "clear": 76, "width": 76, "un": 76, "do": [76, 287], "void640": 76, "increas": [76, 376], "walk": 76, "num": [76, 83, 124, 160, 170, 375], "roughli": 76, "precis": 76, "str": 76, "19": 76, "typestr": 76, "item_dtyp": 76, "whose": [76, 152, 368, 371], "retriev": 76, "extra": 76, "impli": 76, "tack": 76, "end": [76, 160], "to_end": 77, "to_begin": 77, "consecut": 77, "seealso": 77, "einstein": [78, 79, 134, 171, 274, 361], "summat": [78, 79, 134, 171, 274, 361], "convent": [78, 79, 134, 171, 274, 361], "operand": [78, 79, 134, 274, 361], "lowest": [78, 79, 285, 313], "cost": [78, 79], "contract": [78, 79], "express": [78, 79], "subscript": 79, "optim": 79, "greedi": 79, "consid": [79, 137, 155, 285, 313], "intermedi": 79, "dpnp_arrai": [81, 116, 123, 176, 189, 273, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 338, 366, 369, 382, 383], "scipi": 83, "math": 83, "75": [83, 126, 160], "99532227": 83, "99853728": 83, "99959305": 83, "99989938": 83, "99997791": 83, "expon": [84, 87, 277, 311, 394], "718281828": [84, 87], "389056099": [84, 87], "exponent2": 85, "expand": 86, "appear": 86, "singleton": [86, 351], "newaxi": 86, "instead": [86, 111, 124, 160, 170, 269], "minu": [87, 111, 112, 336, 373], "condit": [88, 148, 276, 282, 343, 380], "rank": [88, 155], "elsewher": [89, 365, 380], "fourier": [91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 383], "transform": [91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 383], "complex64": [91, 97], "batch": [92, 94, 98, 99, 103, 104, 106, 108], "sampl": [93, 107, 124, 160, 170, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 383, 394], "frequenc": [93, 95, 100, 107], "shift": [95, 100, 144, 340], "center": [95, 100], "spectrum": [95, 100], "signal": [96, 101], "hermitian": [96, 101, 147, 151, 155, 159, 394], "symmetri": [96, 101], "__next__": 110, "__iter__": 110, "toward": [111, 112, 336, 373], "spreadsheet": 111, "program": 111, "definit": [111, 147], "largest": 112, "divis": [112, 113, 114, 115, 173, 179, 180, 277, 336, 372], "remind": [112, 115, 180], "complementari": [112, 115, 180], "__dlpack__": 116, "dmlc": 116, "io": [116, 161], "dlpack": 116, "detail": [116, 367, 368, 370, 371, 390], "__dlpack_device__": 116, "file": [118, 125, 161], "text": [118, 121, 161], "binari": [118, 383, 394], "highli": 118, "effici": [118, 155], "known": [118, 323], "pars": 118, "simpli": 118, "written": 118, "coordin": [119, 176], "therefor": 119, "fn": 119, "fill_valu": [122, 123], "50": [124, 170, 361, 380], "scale": [124, 160, 170, 285, 292, 294, 296, 297, 298, 299, 307, 319, 324, 331], "progress": [124, 160], "1000": [124, 170, 286, 287, 292, 294, 296, 297, 298, 299, 300, 307, 308, 311, 313, 315, 318, 320, 326, 330, 331, 332, 333], "62341325": 124, "6227766": 124, "177": [124, 170], "827941": [124, 170], "directori": 125, "h": [125, 147, 176], "header": 125, "vararg": 126, "y1": [126, 364], "bin": [129, 323], "densiti": 129, "dataset": 129, "hist": [129, 323], "bin_edg": 129, "4999999999999996": 129, "tup": [130, 379], "horizont": 130, "leg": 131, "triangl": [131, 366, 367, 368, 369, 370, 371], "hypotenus": 131, "spars": [133, 176], "nat": 139, "arg1": [141, 142], "arg2": [141, 142], "typecod": 141, "lower": [141, 147, 366, 367, 368, 371], "hierarchi": 141, "determin": [142, 149, 166, 168, 169], "kroneck": 143, "left": [144, 157, 328, 340, 342], "40": 144, "decomposit": [147, 159, 394], "ordinari": 147, "symmetr": [147, 151, 155], "No": 147, "verifi": 147, "addit": 147, "array_lik": [147, 149, 152, 154, 155, 156, 157, 285, 344, 368, 371], "upper": [147, 158, 369, 370], "factor": [147, 158], "p": [148, 287, 290, 295, 301, 304], "fro": 148, "eigenvalu": [150, 151, 152, 394], "eigenvector": [150, 151, 152], "uplo": 151, "w": [151, 152], "ascend": 151, "17157288": 151, "82842712": 151, "92387953": 151, "38268343": 151, "vari": 151, "38268343j": 151, "92387953j": 151, "aren": 152, "necessarili": 152, "nor": 152, "matric": [152, 155, 157, 176], "suppli": [154, 156, 285, 314], "tol": [155, 303], "singular": [155, 159], "threshold": 155, "ep": 155, "epsilon": 155, "assum": 155, "enabl": 155, "treat": [156, 184, 186, 187, 390], "last": [156, 338, 351], "ord": 157, "abl": 157, "eight": 157, "infinit": 157, "unless": 157, "With": 157, "against": 157, "reduc": [158, 159], "q": [158, 175], "orthonorm": 158, "r": 158, "full_matric": 159, "compute_uv": 159, "2d": 159, "vh": 159, "smat": 159, "4d": 159, "retstep": 160, "logarithm": [160, 162, 163, 164, 165, 301, 394], "fname": 161, "stringio": 161, "behav": 161, "n2": 161, "natur": [162, 165], "plu": [162, 165], "30102999566": 163, "69314718": 164, "09861229": 164, "logic": [166, 168, 169, 383, 394], "uniformli": [170, 285, 329], "215": 170, "443469": 170, "464": 170, "15888336": 170, "22776602": 170, "562": 170, "34132519": 170, "0396842": 170, "34960421": 170, "rule": [171, 339, 364], "deviat": [174, 285, 300, 307, 353, 377], "while": [174, 188, 269, 353, 377], "overwrite_input": 175, "xi": 176, "xy": 176, "xn": 176, "nx": 176, "ny": 176, "xv": 176, "yv": 176, "matplotlib": [176, 323], "pyplot": [176, 323], "plt": [176, 323], "xx": 176, "yy": 176, "contourf": 176, "dpnp_iface_arraycr": [177, 271], "mgridclass": 177, "dens": 177, "5j": [177, 271], "fraction": 181, "integr": [181, 364], "destin": [182, 281, 358], "remain": [182, 338], "usm": [182, 285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329, 351], "interchang": [182, 356], "_novalu": [188, 353, 377], "alia": [189, 285, 315, 318, 320], "helper": [223, 394], "pickl": 223, "repr": 224, "136": 227, "272": 227, "408": 227, "out2": 269, "ogridclass": 271, "open": [271, 285, 315, 317, 318, 320, 329], "ind": [280, 367, 370], "1d": [281, 358], "slice": [281, 358, 370, 390], "deg": 284, "52359878": 284, "04719755": 284, "0943951": 284, "61799388": 284, "mersenn": 285, "twister": 285, "pseudo": 285, "maximumum": [285, 321], "sycldevic": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "syclqueu": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "concept": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329, 390], "filter": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "selector": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 329], "intern": 285, "state": 285, "get_sycl_queu": 285, "loc": [285, 296, 298, 299, 307, 331], "draw": [285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "gaussian": [285, 307, 331], "share": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329], "host": [285, 307, 312, 313, 314, 315, 316, 317, 318, 320, 326, 329], "drawn": [285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 313, 316, 319, 325, 326, 327, 328, 329, 330, 331, 332, 333, 343], "parameter": [285, 307, 329], "58997253": 285, "84288406": 285, "33836967": 285, "16394577": 285, "40882036": 285, "39295758": 285, "48927254": 285, "74921661": 285, "13436424": 285, "56920387": 285, "84743374": 285, "80226506": 285, "76377462": 285, "06310682": 285, "25506903": 285, "1179187": 285, "49543509": 285, "76096244": 285, "low": [285, 313, 316, 329, 390], "high": [285, 313, 316, 329], "inclus": [285, 313, 316], "exclus": [285, 313], "half": [285, 315, 317, 318, 320, 329], "appropri": [285, 313, 316, 390], "omit": [285, 313, 380], "d0": [285, 312, 314], "d1": [285, 314], "dn": [285, 312, 314], "were": [285, 314], "84401099": 285, "four": [285, 314], "88997253": 285, "54288406": 285, "63836967": 285, "46394577": 285, "70882036": 285, "69295758": 285, "78927254": 285, "04921661": 285, "continu": [285, 317], "stdev": [285, 326], "81715362": 285, "54465213": 285, "18557831": 285, "28352814": 285, "67718303": 285, "11570901": 285, "21968665": 285, "18236388": 285, "08156915": 285, "21941987": 285, "24544512": 285, "63522211": 285, "673174": 285, "exclud": [285, 329], "54": 285, "48093112": 285, "52928804": 285, "1196081": 285, "6990877": 285, "34074171": 285, "conveni": 285, "accept": 285, "alpha": [286, 291, 292, 308, 311], "trial": 287, "probabl": [287, 295, 304], "coin": 287, "compani": [287, 304], "drill": [287, 304], "wild": [287, 304], "cat": [287, 304], "oil": [287, 304], "explor": [287, 304], "success": [287, 295, 304], "nine": 287, "fail": 287, "let": 287, "000": 287, "model": 287, "20000": 287, "answer": 287, "38885": 287, "38": 287, "fallback": [288, 290, 291, 301, 306, 322], "df": [289, 305, 327, 328], "chi": [289, 305], "89920014": 289, "00867716": 289, "13710533": 289, "62318272": 289, "dfnum": [293, 306], "dfden": [293, 306], "ten": 295, "thousand": 295, "individu": 295, "35": 295, "10000": [295, 310, 319, 329], "mu": [296, 300, 307, 330], "locat": [296, 298], "ngood": 297, "nbad": 297, "nsampl": 297, "nsamp": 297, "good": 297, "bad": 297, "doubl": 298, "decai": 298, "sigma": [300, 307], "seri": 301, "pval": 302, "iinfo": 302, "throw": 302, "dice": 302, "check_valid": 303, "multivari": 303, "after": 304, "100000": 304, "nonc": [305, 306], "noncentr": [305, 306], "todo": 305, "ii": 308, "lomax": 308, "randomli": 309, "lam": 310, "randomst": 313, "1923875335537315": 314, "rese": 321, "legaci": 321, "mt19937": 321, "engin": 321, "modifi": 322, "cauchi": 323, "lorentz": 323, "plot": 323, "1000000": [323, 325, 327, 328], "3x8000": 324, "8000": 324, "student": 327, "freedom": 327, "kappa": 330, "von": 330, "mise": 330, "dispers": 330, "33": 335, "3003003": 335, "newshap": 338, "infer": 338, "write": 338, "fastest": 338, "back": 338, "slowest": 338, "account": 338, "underli": 338, "never": 338, "valueerror": [338, 351], "reus": 338, "unspecifi": 338, "arrays_and_dtyp": 339, "promot": 339, "backward": 341, "li": 341, "side": 342, "sorter": 342, "condlist": 343, "choicelist": 343, "742278e": 346, "3012989": 347, "548739": 347, "traceback": 351, "recent": 351, "118033988749895": 353, "entir": 355, "everi": 358, "22460635e": 359, "63317787e": 359, "996272": 360, "917152": 360, "whenev": 363, "dx": 364, "composit": 364, "trapezoid": 364, "By": [367, 370], "taken": [367, 370], "delta": 375, "complement": 375, "phase": 375, "49778714": 375, "28318531": 375, "vandermond": 376, "125": 376, "vertic": 379, "chosen": 380, "70": 380, "offici": 383, "convers": 383, "__neg__": 383, "__abs__": 383, "__invert__": 383, "__add__": 383, "__sub__": 383, "__mul__": 383, "__truediv__": 383, "__mod__": 383, "__pow__": 383, "__lshift__": 383, "__rshift__": 383, "__and__": 383, "__or__": 383, "__xor__": 383, "__iadd__": 383, "__isub__": 383, "__imul__": 383, "__itruediv__": 383, "__ipow__": 383, "__ilshift__": 383, "__irshift__": 383, "__iand__": 383, "__ior__": 383, "__ixor__": 383, "__reduce__": 383, "__new__": 383, "__int__": 383, "__float__": 383, "__complex__": 383, "__str__": 383, "__repr__": 383, "algebra": [383, 394], "mathemat": [383, 394], "polynomi": [383, 394], "search": [383, 394], "statist": [383, 394], "summari": 383, "modul": 383, "level": [383, 390], "util": 383, "counterpart": 390, "basic": [390, 394], "constructor": 390, "syntax": 390, "reflect": 390, "intrins": 390, "sometim": 390, "expos": 390, "them": 390, "reset": 390, "meaningfulli": 390, "associ": 390, "found": 390, "fashion": 390, "typic": 390, "briefli": 390, "explain": 390, "docstr": 390, "proce": 390, "pow": 390, "short": 390, "unari": 390, "librari": 390, "custom": 390, "represent": 390, "page": 394, "cover": 394, "elementwis": [394, 398], "pack": 394, "equat": 394, "ration": 394, "extrema": 394, "poly1d": 394, "variou": 398}, "objects": {"": [[2, 0, 0, "-", "dpnp"]], "dpnp": [[10, 1, 1, "", "abs"], [11, 1, 1, "", "absolute"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "allclose"], [15, 1, 1, "", "amax"], [16, 1, 1, "", "amin"], [17, 1, 1, "", "any"], [18, 1, 1, "", "arange"], [19, 1, 1, "", "arccos"], [20, 1, 1, "", "arccosh"], [21, 1, 1, "", "arcsin"], [22, 1, 1, "", "arcsinh"], [23, 1, 1, "", "arctan"], [24, 1, 1, "", "arctan2"], [25, 1, 1, "", "arctanh"], [26, 1, 1, "", "argmax"], [27, 1, 1, "", "argmin"], [28, 1, 1, "", "argsort"], [29, 1, 1, "", "around"], [30, 1, 1, "", "array"], [31, 1, 1, "", "array_equal"], [32, 1, 1, "", "asanyarray"], [33, 1, 1, "", "asarray"], [34, 1, 1, "", "ascontiguousarray"], [35, 1, 1, "", "asfarray"], [36, 1, 1, "", "asnumpy"], [37, 1, 1, "", "atleast_1d"], [38, 1, 1, "", "atleast_2d"], [39, 1, 1, "", "atleast_3d"], [40, 1, 1, "", "average"], [41, 1, 1, "", "bincount"], [42, 1, 1, "", "bitwise_and"], [43, 1, 1, "", "bitwise_not"], [44, 1, 1, "", "bitwise_or"], [45, 1, 1, "", "bitwise_xor"], [46, 1, 1, "", "broadcast_to"], [47, 1, 1, "", "cbrt"], [48, 1, 1, "", "ceil"], [49, 1, 1, "", "choose"], [50, 1, 1, "", "concatenate"], [51, 1, 1, "", "conj"], [52, 1, 1, "", "conjugate"], [53, 1, 1, "", "convolve"], [54, 1, 1, "", "copy"], [55, 1, 1, "", "copysign"], [56, 1, 1, "", "copyto"], [57, 1, 1, "", "correlate"], [58, 1, 1, "", "cos"], [59, 1, 1, "", "cosh"], [60, 1, 1, "", "count_nonzero"], [61, 1, 1, "", "cov"], [62, 1, 1, "", "cross"], [63, 1, 1, "", "cumprod"], [64, 1, 1, "", "cumsum"], [65, 1, 1, "", "deg2rad"], [66, 1, 1, "", "degrees"], [67, 1, 1, "", "diag"], [68, 1, 1, "", "diag_indices"], [69, 1, 1, "", "diag_indices_from"], [70, 1, 1, "", "diagflat"], [71, 1, 1, "", "diagonal"], [72, 1, 1, "", "diff"], [73, 1, 1, "", "divide"], [74, 1, 1, "", "dot"], [76, 2, 1, "", "dtype"], [77, 1, 1, "", "ediff1d"], [78, 1, 1, "", "einsum"], [79, 1, 1, "", "einsum_path"], [80, 1, 1, "", "empty"], [81, 1, 1, "", "empty_like"], [82, 1, 1, "", "equal"], [83, 1, 1, "", "erf"], [84, 1, 1, "", "exp"], [85, 1, 1, "", "exp2"], [86, 1, 1, "", "expand_dims"], [87, 1, 1, "", "expm1"], [88, 1, 1, "", "extract"], [89, 1, 1, "", "eye"], [90, 1, 1, "", "fabs"], [9, 0, 0, "-", "fft"], [109, 1, 1, "", "fill_diagonal"], [110, 2, 1, "", "flatiter"], [111, 1, 1, "", "floor"], [112, 1, 1, "", "floor_divide"], [113, 1, 1, "", "fmax"], [114, 1, 1, "", "fmin"], [115, 1, 1, "", "fmod"], [116, 1, 1, "", "from_dlpack"], [117, 1, 1, "", "frombuffer"], [118, 1, 1, "", "fromfile"], [119, 1, 1, "", "fromfunction"], [120, 1, 1, "", "fromiter"], [121, 1, 1, "", "fromstring"], [122, 1, 1, "", "full"], [123, 1, 1, "", "full_like"], [124, 1, 1, "", "geomspace"], [125, 1, 1, "", "get_include"], [126, 1, 1, "", "gradient"], [127, 1, 1, "", "greater"], [128, 1, 1, "", "greater_equal"], [129, 1, 1, "", "histogram"], [130, 1, 1, "", "hstack"], [131, 1, 1, "", "hypot"], [132, 1, 1, "", "identity"], [133, 1, 1, "", "indices"], [134, 1, 1, "", "inner"], [135, 1, 1, "", "invert"], [136, 1, 1, "", "isclose"], [137, 1, 1, "", "isfinite"], [138, 1, 1, "", "isinf"], [139, 1, 1, "", "isnan"], [140, 1, 1, "", "isscalar"], [141, 1, 1, "", "issubdtype"], [142, 1, 1, "", "issubsctype"], [143, 1, 1, "", "kron"], [144, 1, 1, "", "left_shift"], [145, 1, 1, "", "less"], [146, 1, 1, "", "less_equal"], [160, 1, 1, "", "linspace"], [161, 1, 1, "", "loadtxt"], [162, 1, 1, "", "log"], [163, 1, 1, "", "log10"], [164, 1, 1, "", "log1p"], [165, 1, 1, "", "log2"], [166, 1, 1, "", "logical_and"], [167, 1, 1, "", "logical_not"], [168, 1, 1, "", "logical_or"], [169, 1, 1, "", "logical_xor"], [170, 1, 1, "", "logspace"], [171, 1, 1, "", "matmul"], [172, 1, 1, "", "max"], [173, 1, 1, "", "maximum"], [174, 1, 1, "", "mean"], [175, 1, 1, "", "median"], [176, 1, 1, "", "meshgrid"], [177, 5, 1, "", "mgrid"], [178, 1, 1, "", "min"], [179, 1, 1, "", "minimum"], [180, 1, 1, "", "mod"], [181, 1, 1, "", "modf"], [182, 1, 1, "", "moveaxis"], [183, 1, 1, "", "multiply"], [184, 1, 1, "", "nancumprod"], [185, 1, 1, "", "nancumsum"], [186, 1, 1, "", "nanprod"], [187, 1, 1, "", "nansum"], [188, 1, 1, "", "nanvar"], [189, 3, 1, "", "ndarray"], [268, 1, 1, "", "negative"], [269, 1, 1, "", "nonzero"], [270, 1, 1, "", "not_equal"], [271, 5, 1, "", "ogrid"], [272, 1, 1, "", "ones"], [273, 1, 1, "", "ones_like"], [274, 1, 1, "", "outer"], [275, 1, 1, "", "partition"], [276, 1, 1, "", "place"], [277, 1, 1, "", "power"], [278, 1, 1, "", "prod"], [279, 1, 1, "", "ptp"], [280, 1, 1, "", "put"], [281, 1, 1, "", "put_along_axis"], [282, 1, 1, "", "putmask"], [283, 1, 1, "", "rad2deg"], [284, 1, 1, "", "radians"], [393, 0, 0, "-", "random"], [334, 1, 1, "", "ravel"], [335, 1, 1, "", "reciprocal"], [336, 1, 1, "", "remainder"], [337, 1, 1, "", "repeat"], [338, 1, 1, "", "reshape"], [339, 1, 1, "", "result_type"], [340, 1, 1, "", "right_shift"], [341, 1, 1, "", "rollaxis"], [342, 1, 1, "", "searchsorted"], [343, 1, 1, "", "select"], [344, 1, 1, "", "shape"], [345, 1, 1, "", "sign"], [346, 1, 1, "", "sin"], [347, 1, 1, "", "sinh"], [348, 1, 1, "", "sort"], [349, 1, 1, "", "sqrt"], [350, 1, 1, "", "square"], [351, 1, 1, "", "squeeze"], [352, 1, 1, "", "stack"], [353, 1, 1, "", "std"], [354, 1, 1, "", "subtract"], [355, 1, 1, "", "sum"], [356, 1, 1, "", "swapaxes"], [357, 1, 1, "", "take"], [358, 1, 1, "", "take_along_axis"], [359, 1, 1, "", "tan"], [360, 1, 1, "", "tanh"], [361, 1, 1, "", "tensordot"], [362, 1, 1, "", "trace"], [363, 1, 1, "", "transpose"], [364, 1, 1, "", "trapz"], [365, 1, 1, "", "tri"], [366, 1, 1, "", "tril"], [367, 1, 1, "", "tril_indices"], [368, 1, 1, "", "tril_indices_from"], [369, 1, 1, "", "triu"], [370, 1, 1, "", "triu_indices"], [371, 1, 1, "", "triu_indices_from"], [372, 1, 1, "", "true_divide"], [373, 1, 1, "", "trunc"], [374, 1, 1, "", "unique"], [375, 1, 1, "", "unwrap"], [376, 1, 1, "", "vander"], [377, 1, 1, "", "var"], [378, 1, 1, "", "vdot"], [379, 1, 1, "", "vstack"], [380, 1, 1, "", "where"], [381, 1, 1, "", "zeros"], [382, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[75, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[75, 3, 1, "", "T"], [75, 4, 1, "", "__eq__"], [75, 4, 1, "", "__ge__"], [75, 4, 1, "", "__getitem__"], [75, 4, 1, "", "__gt__"], [75, 4, 1, "", "__le__"], [75, 4, 1, "", "__len__"], [75, 4, 1, "", "__lt__"], [75, 4, 1, "", "__ne__"], [75, 4, 1, "", "__setitem__"], [75, 4, 1, "", "all"], [75, 4, 1, "", "any"], [75, 4, 1, "", "argmax"], [75, 4, 1, "", "argmin"], [75, 4, 1, "", "argsort"], [75, 4, 1, "", "asnumpy"], [75, 4, 1, "", "astype"], [75, 4, 1, "", "choose"], [75, 4, 1, "", "conj"], [75, 4, 1, "", "conjugate"], [75, 4, 1, "", "cumsum"], [75, 3, 1, "", "device"], [75, 4, 1, "", "diagonal"], [75, 4, 1, "", "dot"], [75, 3, 1, "", "dtype"], [75, 4, 1, "", "fill"], [75, 3, 1, "", "flags"], [75, 3, 1, "", "flat"], [75, 4, 1, "", "flatten"], [75, 4, 1, "", "get_array"], [75, 4, 1, "", "item"], [75, 3, 1, "", "itemsize"], [75, 4, 1, "", "max"], [75, 4, 1, "", "mean"], [75, 4, 1, "", "min"], [75, 3, 1, "", "nbytes"], [75, 3, 1, "", "ndim"], [75, 4, 1, "", "nonzero"], [75, 4, 1, "", "partition"], [75, 4, 1, "", "prod"], [75, 4, 1, "", "reshape"], [75, 4, 1, "", "round"], [75, 3, 1, "", "shape"], [75, 3, 1, "", "size"], [75, 4, 1, "", "squeeze"], [75, 4, 1, "", "std"], [75, 3, 1, "", "strides"], [75, 4, 1, "", "sum"], [75, 3, 1, "", "sycl_context"], [75, 3, 1, "", "sycl_device"], [75, 3, 1, "", "sycl_queue"], [75, 4, 1, "", "take"], [75, 4, 1, "", "to_device"], [75, 4, 1, "", "transpose"], [75, 3, 1, "", "usm_type"], [75, 4, 1, "", "var"]], "dpnp.dtype": [[76, 4, 1, "", "__eq__"], [76, 4, 1, "", "__ge__"], [76, 4, 1, "", "__getitem__"], [76, 4, 1, "", "__gt__"], [76, 4, 1, "", "__le__"], [76, 4, 1, "", "__len__"], [76, 4, 1, "", "__lt__"], [76, 4, 1, "", "__ne__"], [76, 3, 1, "", "alignment"], [76, 3, 1, "", "base"], [76, 3, 1, "", "byteorder"], [76, 3, 1, "", "char"], [76, 3, 1, "", "descr"], [76, 3, 1, "", "fields"], [76, 3, 1, "", "flags"], [76, 3, 1, "", "hasobject"], [76, 3, 1, "", "isalignedstruct"], [76, 3, 1, "", "isbuiltin"], [76, 3, 1, "", "isnative"], [76, 3, 1, "", "itemsize"], [76, 3, 1, "", "kind"], [76, 3, 1, "", "metadata"], [76, 3, 1, "", "name"], [76, 3, 1, "", "names"], [76, 3, 1, "", "ndim"], [76, 4, 1, "", "newbyteorder"], [76, 3, 1, "", "num"], [76, 3, 1, "", "shape"], [76, 3, 1, "", "str"], [76, 3, 1, "", "subdtype"], [76, 3, 1, "", "type"]], "dpnp.fft": [[91, 1, 1, "", "fft"], [92, 1, 1, "", "fft2"], [93, 1, 1, "", "fftfreq"], [94, 1, 1, "", "fftn"], [95, 1, 1, "", "fftshift"], [96, 1, 1, "", "hfft"], [97, 1, 1, "", "ifft"], [98, 1, 1, "", "ifft2"], [99, 1, 1, "", "ifftn"], [100, 1, 1, "", "ifftshift"], [101, 1, 1, "", "ihfft"], [102, 1, 1, "", "irfft"], [103, 1, 1, "", "irfft2"], [104, 1, 1, "", "irfftn"], [105, 1, 1, "", "rfft"], [106, 1, 1, "", "rfft2"], [107, 1, 1, "", "rfftfreq"], [108, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[110, 4, 1, "", "__eq__"], [110, 4, 1, "", "__ge__"], [110, 4, 1, "", "__getitem__"], [110, 4, 1, "", "__gt__"], [110, 4, 1, "", "__iter__"], [110, 4, 1, "", "__le__"], [110, 4, 1, "", "__lt__"], [110, 4, 1, "", "__ne__"], [110, 4, 1, "", "__next__"], [110, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[147, 1, 1, "", "cholesky"], [148, 1, 1, "", "cond"], [149, 1, 1, "", "det"], [150, 1, 1, "", "eig"], [151, 1, 1, "", "eigh"], [152, 1, 1, "", "eigvals"], [153, 1, 1, "", "inv"], [154, 1, 1, "", "matrix_power"], [155, 1, 1, "", "matrix_rank"], [156, 1, 1, "", "multi_dot"], [157, 1, 1, "", "norm"], [158, 1, 1, "", "qr"], [159, 1, 1, "", "svd"]], "dpnp.ndarray": [[190, 6, 1, "", "T"], [191, 4, 1, "", "__abs__"], [192, 4, 1, "", "__add__"], [193, 4, 1, "", "__and__"], [194, 4, 1, "", "__complex__"], [195, 4, 1, "", "__eq__"], [196, 4, 1, "", "__float__"], [197, 4, 1, "", "__ge__"], [198, 4, 1, "", "__getitem__"], [199, 4, 1, "", "__gt__"], [200, 4, 1, "", "__iadd__"], [201, 4, 1, "", "__iand__"], [202, 4, 1, "", "__ilshift__"], [203, 4, 1, "", "__imul__"], [204, 4, 1, "", "__int__"], [205, 4, 1, "", "__invert__"], [206, 4, 1, "", "__ior__"], [207, 4, 1, "", "__ipow__"], [208, 4, 1, "", "__irshift__"], [209, 4, 1, "", "__isub__"], [210, 4, 1, "", "__itruediv__"], [211, 4, 1, "", "__ixor__"], [212, 4, 1, "", "__le__"], [213, 4, 1, "", "__len__"], [214, 4, 1, "", "__lshift__"], [215, 4, 1, "", "__lt__"], [216, 4, 1, "", "__mod__"], [217, 4, 1, "", "__mul__"], [218, 4, 1, "", "__ne__"], [219, 4, 1, "", "__neg__"], [220, 4, 1, "", "__new__"], [221, 4, 1, "", "__or__"], [222, 4, 1, "", "__pow__"], [223, 4, 1, "", "__reduce__"], [224, 4, 1, "", "__repr__"], [225, 4, 1, "", "__rshift__"], [226, 4, 1, "", "__setitem__"], [227, 4, 1, "", "__str__"], [228, 4, 1, "", "__sub__"], [229, 4, 1, "", "__truediv__"], [230, 4, 1, "", "__xor__"], [231, 4, 1, "", "all"], [232, 4, 1, "", "any"], [233, 4, 1, "", "argmax"], [234, 4, 1, "", "argmin"], [235, 4, 1, "", "argsort"], [236, 4, 1, "", "astype"], [237, 4, 1, "", "choose"], [238, 4, 1, "", "conj"], [239, 4, 1, "", "conjugate"], [240, 4, 1, "", "cumsum"], [241, 4, 1, "", "diagonal"], [242, 6, 1, "", "dtype"], [243, 4, 1, "", "fill"], [244, 6, 1, "", "flags"], [245, 6, 1, "", "flat"], [246, 4, 1, "", "flatten"], [247, 4, 1, "", "item"], [248, 6, 1, "", "itemsize"], [249, 4, 1, "", "max"], [250, 4, 1, "", "mean"], [251, 4, 1, "", "min"], [252, 6, 1, "", "nbytes"], [253, 6, 1, "", "ndim"], [254, 4, 1, "", "nonzero"], [255, 4, 1, "", "partition"], [256, 4, 1, "", "prod"], [257, 4, 1, "", "reshape"], [258, 4, 1, "", "round"], [259, 6, 1, "", "shape"], [260, 6, 1, "", "size"], [261, 4, 1, "", "squeeze"], [262, 4, 1, "", "std"], [263, 6, 1, "", "strides"], [264, 4, 1, "", "sum"], [265, 4, 1, "", "take"], [266, 4, 1, "", "transpose"], [267, 4, 1, "", "var"]], "dpnp.random": [[285, 2, 1, "", "RandomState"], [286, 1, 1, "", "beta"], [287, 1, 1, "", "binomial"], [288, 1, 1, "", "bytes"], [289, 1, 1, "", "chisquare"], [290, 1, 1, "", "choice"], [291, 1, 1, "", "dirichlet"], [292, 1, 1, "", "exponential"], [293, 1, 1, "", "f"], [294, 1, 1, "", "gamma"], [295, 1, 1, "", "geometric"], [296, 1, 1, "", "gumbel"], [297, 1, 1, "", "hypergeometric"], [298, 1, 1, "", "laplace"], [299, 1, 1, "", "logistic"], [300, 1, 1, "", "lognormal"], [301, 1, 1, "", "logseries"], [302, 1, 1, "", "multinomial"], [303, 1, 1, "", "multivariate_normal"], [304, 1, 1, "", "negative_binomial"], [305, 1, 1, "", "noncentral_chisquare"], [306, 1, 1, "", "noncentral_f"], [307, 1, 1, "", "normal"], [308, 1, 1, "", "pareto"], [309, 1, 1, "", "permutation"], [310, 1, 1, "", "poisson"], [311, 1, 1, "", "power"], [312, 1, 1, "", "rand"], [313, 1, 1, "", "randint"], [314, 1, 1, "", "randn"], [315, 1, 1, "", "random"], [316, 1, 1, "", "random_integers"], [317, 1, 1, "", "random_sample"], [318, 1, 1, "", "ranf"], [319, 1, 1, "", "rayleigh"], [320, 1, 1, "", "sample"], [321, 1, 1, "", "seed"], [322, 1, 1, "", "shuffle"], [323, 1, 1, "", "standard_cauchy"], [324, 1, 1, "", "standard_exponential"], [325, 1, 1, "", "standard_gamma"], [326, 1, 1, "", "standard_normal"], [327, 1, 1, "", "standard_t"], [328, 1, 1, "", "triangular"], [329, 1, 1, "", "uniform"], [330, 1, 1, "", "vonmises"], [331, 1, 1, "", "wald"], [332, 1, 1, "", "weibull"], [333, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[285, 4, 1, "", "__eq__"], [285, 4, 1, "", "__ge__"], [285, 4, 1, "", "__gt__"], [285, 4, 1, "", "__le__"], [285, 4, 1, "", "__lt__"], [285, 4, 1, "", "__ne__"], [285, 4, 1, "", "get_state"], [285, 4, 1, "", "get_sycl_device"], [285, 4, 1, "", "get_sycl_queue"], [285, 4, 1, "", "normal"], [285, 4, 1, "", "rand"], [285, 4, 1, "", "randint"], [285, 4, 1, "", "randn"], [285, 4, 1, "", "random_sample"], [285, 4, 1, "", "standard_normal"], [285, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"dpctl": 0, "usag": 0, "exampl": 0, "c": 1, "backend": 1, "api": [1, 383], "refer": [1, 383], "dpnp": [2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 393], "A": 2, "numpi": [2, 5, 7], "compat": 2, "librari": 2, "sycl": 2, "base": 2, "devic": 2, "instal": 3, "guid": 3, "requir": 3, "python": 3, "depend": 3, "from": [3, 6], "conda": 3, "forg": 3, "sourc": 3, "binari": 4, "oper": [4, 384, 386, 387, 388, 390, 398], "elementwis": 4, "bit": [4, 398], "pack": 4, "output": 4, "format": 4, "comparison": [5, 386, 390, 398], "tabl": 5, "cupi": 5, "summari": 5, "modul": [5, 392], "level": 5, "multi": [5, 390], "dimension": [5, 390], "arrai": [5, 6, 30, 384, 386, 387, 390], "linear": [5, 385], "algebra": [5, 385], "discret": 5, "fourier": 5, "transform": 5, "random": [5, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 393], "sampl": [5, 320, 393], "creation": 6, "routin": [6, 8, 9, 384, 387, 388, 389, 394], "basic": [6, 387, 392], "other": [6, 385, 388, 390], "data": [6, 7, 8, 384, 390, 393], "numer": 6, "rang": 6, "matrix": [6, 385, 390], "The": 6, "class": 6, "differ": [7, 388], "between": 7, "type": [7, 8, 386, 390], "creat": 8, "inform": 8, "test": [8, 386], "miscellan": [8, 388, 389], "fft": [9, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "function": [9, 386, 388, 396, 397, 398], "standard": 9, "real": 9, "hermitian": 9, "helper": 9, "ab": 10, "absolut": 11, "add": 12, "all": [13, 231], "allclos": 14, "amax": 15, "amin": 16, "ani": [17, 232], "arang": 18, "arcco": 19, "arccosh": 20, "arcsin": 21, "arcsinh": 22, "arctan": 23, "arctan2": 24, "arctanh": 25, "argmax": [26, 233], "argmin": [27, 234], "argsort": [28, 235], "around": 29, "array_equ": 31, "asanyarrai": 32, "asarrai": 33, "ascontiguousarrai": 34, "asfarrai": 35, "asnumpi": 36, "atleast_1d": 37, "atleast_2d": 38, "atleast_3d": 39, "averag": [40, 397], "bincount": 41, "bitwise_and": 42, "bitwise_not": 43, "bitwise_or": 44, "bitwise_xor": 45, "broadcast_to": 46, "cbrt": 47, "ceil": 48, "choos": [49, 237], "concaten": 50, "conj": [51, 238], "conjug": [52, 239], "convolv": 53, "copi": 54, "copysign": 55, "copyto": 56, "correl": [57, 397], "co": 58, "cosh": 59, "count_nonzero": 60, "cov": 61, "cross": 62, "cumprod": 63, "cumsum": [64, 240], "deg2rad": 65, "degre": 66, "diag": 67, "diag_indic": 68, "diag_indices_from": 69, "diagflat": 70, "diagon": [71, 241], "diff": 72, "divid": 73, "dot": 74, "dpnp_arrai": 75, "dtype": [76, 242], "ediff1d": 77, "einsum": 78, "einsum_path": 79, "empti": 80, "empty_lik": 81, "equal": 82, "erf": 83, "exp": 84, "exp2": 85, "expand_dim": 86, "expm1": 87, "extract": 88, "ey": 89, "fab": 90, "fft2": 92, "fftfreq": 93, "fftn": 94, "fftshift": 95, "hfft": 96, "ifft": 97, "ifft2": 98, "ifftn": 99, "ifftshift": 100, "ihfft": 101, "irfft": 102, "irfft2": 103, "irfftn": 104, "rfft": 105, "rfft2": 106, "rfftfreq": 107, "rfftn": 108, "fill_diagon": 109, "flatit": 110, "floor": 111, "floor_divid": 112, "fmax": 113, "fmin": 114, "fmod": 115, "from_dlpack": 116, "frombuff": 117, "fromfil": 118, "fromfunct": 119, "fromit": 120, "fromstr": 121, "full": 122, "full_lik": 123, "geomspac": 124, "get_includ": 125, "gradient": 126, "greater": 127, "greater_equ": 128, "histogram": [129, 397], "hstack": 130, "hypot": 131, "ident": 132, "indic": 133, "inner": 134, "invert": 135, "isclos": 136, "isfinit": 137, "isinf": 138, "isnan": 139, "isscalar": 140, "issubdtyp": 141, "issubsctyp": 142, "kron": 143, "left_shift": 144, "less": 145, "less_equ": 146, "linalg": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "choleski": 147, "cond": 148, "det": 149, "eig": 150, "eigh": 151, "eigval": 152, "inv": 153, "matrix_pow": 154, "matrix_rank": 155, "multi_dot": 156, "norm": [157, 385], "qr": 158, "svd": 159, "linspac": 160, "loadtxt": 161, "log": 162, "log10": 163, "log1p": 164, "log2": 165, "logical_and": 166, "logical_not": 167, "logical_or": 168, "logical_xor": 169, "logspac": 170, "matmul": 171, "max": [172, 249], "maximum": 173, "mean": [174, 250], "median": 175, "meshgrid": 176, "mgrid": 177, "min": [178, 251], "minimum": 179, "mod": 180, "modf": 181, "moveaxi": 182, "multipli": 183, "nancumprod": 184, "nancumsum": 185, "nanprod": 186, "nansum": 187, "nanvar": 188, "ndarrai": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 390], "t": 190, "__abs__": 191, "__add__": 192, "__and__": 193, "__complex__": 194, "__eq__": 195, "__float__": 196, "__ge__": 197, "__getitem__": 198, "__gt__": 199, "__iadd__": 200, "__iand__": 201, "__ilshift__": 202, "__imul__": 203, "__int__": 204, "__invert__": 205, "__ior__": 206, "__ipow__": 207, "__irshift__": 208, "__isub__": 209, "__itruediv__": 210, "__ixor__": 211, "__le__": 212, "__len__": 213, "__lshift__": 214, "__lt__": 215, "__mod__": 216, "__mul__": 217, "__ne__": 218, "__neg__": 219, "__new__": 220, "__or__": 221, "__pow__": 222, "__reduce__": 223, "__repr__": 224, "__rshift__": 225, "__setitem__": 226, "__str__": 227, "__sub__": 228, "__truediv__": 229, "__xor__": 230, "astyp": 236, "fill": 243, "flag": 244, "flat": 245, "flatten": 246, "item": [247, 390], "items": 248, "nbyte": 252, "ndim": 253, "nonzero": [254, 269], "partit": [255, 275], "prod": [256, 278], "reshap": [257, 338], "round": [258, 388], "shape": [259, 344, 387, 390], "size": 260, "squeez": [261, 351], "std": [262, 353], "stride": 263, "sum": [264, 355, 388], "take": [265, 357], "transpos": [266, 363, 387], "var": [267, 377], "neg": 268, "not_equ": 270, "ogrid": 271, "ones": 272, "ones_lik": 273, "outer": 274, "place": 276, "power": [277, 311], "ptp": 279, "put": 280, "put_along_axi": 281, "putmask": 282, "rad2deg": 283, "radian": 284, "randomst": 285, "beta": 286, "binomi": 287, "byte": 288, "chisquar": 289, "choic": 290, "dirichlet": 291, "exponenti": 292, "f": 293, "gamma": 294, "geometr": 295, "gumbel": 296, "hypergeometr": 297, "laplac": 298, "logist": 299, "lognorm": 300, "logseri": 301, "multinomi": 302, "multivariate_norm": 303, "negative_binomi": 304, "noncentral_chisquar": 305, "noncentral_f": 306, "normal": 307, "pareto": 308, "permut": [309, 393], "poisson": 310, "rand": 312, "randint": 313, "randn": 314, "random_integ": 316, "random_sampl": 317, "ranf": 318, "rayleigh": 319, "seed": 321, "shuffl": 322, "standard_cauchi": 323, "standard_exponenti": 324, "standard_gamma": 325, "standard_norm": 326, "standard_t": 327, "triangular": 328, "uniform": 329, "vonmis": 330, "wald": 331, "weibul": 332, "zipf": 333, "ravel": 334, "reciproc": 335, "remaind": 336, "repeat": 337, "result_typ": 339, "right_shift": 340, "rollaxi": 341, "searchsort": 342, "select": [343, 390], "sign": 345, "sin": 346, "sinh": 347, "sort": [348, 395], "sqrt": 349, "squar": 350, "stack": 352, "subtract": 354, "swapax": 356, "take_along_axi": 358, "tan": 359, "tanh": 360, "tensordot": 361, "trace": 362, "trapz": 364, "tri": 365, "tril": 366, "tril_indic": 367, "tril_indices_from": 368, "triu": 369, "triu_indic": 370, "triu_indices_from": 371, "true_divid": 372, "trunc": 373, "uniqu": 374, "unwrap": 375, "vander": 376, "vdot": 378, "vstack": 379, "where": 380, "zero": 381, "zeros_lik": 382, "index": [384, 390], "gener": [384, 393], "like": [384, 387], "insert": 384, "iter": 384, "over": 384, "vector": 385, "product": [385, 388], "decomposit": 385, "eigenvalu": 385, "number": [385, 387, 388], "solv": 385, "equat": 385, "logic": 386, "truth": 386, "valu": 386, "infin": 386, "nan": 386, "manipul": [387, 390], "chang": 387, "dimens": 387, "kind": 387, "join": 387, "split": 387, "tile": 387, "ad": 387, "remov": 387, "element": 387, "rearrang": 387, "mathemat": 388, "trigonometr": [388, 398], "hyperbol": 388, "expon": 388, "logarithm": 388, "special": [388, 390, 396], "float": [388, 398], "point": 388, "ration": 388, "arithmet": [388, 390, 392], "handl": 388, "complex": 388, "extrema": 388, "find": 388, "util": 389, "construct": 390, "attribut": 390, "memori": 390, "layout": 390, "method": 390, "convers": 390, "calcul": 390, "multipl": 390, "pad": 391, "polynomi": 392, "packag": 392, "polyutil": 392, "poly1d": 392, "simpl": 393, "distribut": 393, "search": 395, "count": 395, "error": 396, "statist": 397, "order": 397, "varianc": 397, "univers": 398, "ufunc": 398, "avail": 398, "math": 398, "twiddl": 398}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"DPCtl Usage": [[0, "dpctl-usage"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "DPNP \u2013 A NumPy-compatible library for SYCL-based devices": [[2, "module-dpnp"]], "Installation Guide": [[3, "installation-guide"]], "Requirements": [[3, "requirements"]], "Python Dependencies": [[3, "python-dependencies"]], "Installing DPNP from conda-forge": [[3, "installing-dpnp-from-conda-forge"]], "Installing DPNP from Source": [[3, "installing-dpnp-from-source"]], "Binary Operations": [[4, "binary-operations"]], "Elementwise bit operations": [[4, "elementwise-bit-operations"]], "Bit packing": [[4, "bit-packing"]], "Output formatting": [[4, "output-formatting"]], "Comparison Table NumPy/ DPNP/ CuPy": [[5, "comparison-table-numpy-dpnp-cupy"]], "Summary": [[5, "summary"]], "Module-Level": [[5, "module-level"]], "Multi-Dimensional Array": [[5, "multi-dimensional-array"]], "Linear Algebra": [[5, "linear-algebra"], [385, "linear-algebra"]], "Discrete Fourier Transform": [[5, "discrete-fourier-transform"]], "Random Sampling": [[5, "random-sampling"]], "Array Creation Routines": [[6, "array-creation-routines"]], "Basic creation routines": [[6, "basic-creation-routines"]], "Creation from other data": [[6, "creation-from-other-data"]], "Numerical ranges": [[6, "numerical-ranges"]], "Matrix creation": [[6, "matrix-creation"]], "The Matrix class": [[6, "the-matrix-class"]], "Difference between DPNP and NumPy": [[7, "difference-between-dpnp-and-numpy"]], "Data types": [[7, "data-types"]], "Data type routines": [[8, "data-type-routines"]], "Creating data types": [[8, "creating-data-types"]], "Data type information": [[8, "data-type-information"]], "Data type testing": [[8, "data-type-testing"]], "Miscellaneous": [[8, "miscellaneous"], [388, "miscellaneous"]], "FFT Functions": [[9, "fft-functions"]], "Standard FFTs": [[9, "standard-ffts"]], "Real FFTs": [[9, "real-ffts"]], "Hermitian FFTs": [[9, "hermitian-ffts"]], "Helper routines": [[9, "helper-routines"]], "dpnp.abs": [[10, "dpnp-abs"]], "dpnp.absolute": [[11, "dpnp-absolute"]], "dpnp.add": [[12, "dpnp-add"]], "dpnp.all": [[13, "dpnp-all"]], "dpnp.allclose": [[14, "dpnp-allclose"]], "dpnp.amax": [[15, "dpnp-amax"]], "dpnp.amin": [[16, "dpnp-amin"]], "dpnp.any": [[17, "dpnp-any"]], "dpnp.arange": [[18, "dpnp-arange"]], "dpnp.arccos": [[19, "dpnp-arccos"]], "dpnp.arccosh": [[20, "dpnp-arccosh"]], "dpnp.arcsin": [[21, "dpnp-arcsin"]], "dpnp.arcsinh": [[22, "dpnp-arcsinh"]], "dpnp.arctan": [[23, "dpnp-arctan"]], "dpnp.arctan2": [[24, "dpnp-arctan2"]], "dpnp.arctanh": [[25, "dpnp-arctanh"]], "dpnp.argmax": [[26, "dpnp-argmax"]], "dpnp.argmin": [[27, "dpnp-argmin"]], "dpnp.argsort": [[28, "dpnp-argsort"]], "dpnp.around": [[29, "dpnp-around"]], "dpnp.array": [[30, "dpnp-array"]], "dpnp.array_equal": [[31, "dpnp-array-equal"]], "dpnp.asanyarray": [[32, "dpnp-asanyarray"]], "dpnp.asarray": [[33, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[34, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[35, "dpnp-asfarray"]], "dpnp.asnumpy": [[36, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[37, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[38, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[39, "dpnp-atleast-3d"]], "dpnp.average": [[40, "dpnp-average"]], "dpnp.bincount": [[41, "dpnp-bincount"]], "dpnp.bitwise_and": [[42, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[43, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[44, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[45, "dpnp-bitwise-xor"]], "dpnp.broadcast_to": [[46, "dpnp-broadcast-to"]], "dpnp.cbrt": [[47, "dpnp-cbrt"]], "dpnp.ceil": [[48, "dpnp-ceil"]], "dpnp.choose": [[49, "dpnp-choose"]], "dpnp.concatenate": [[50, "dpnp-concatenate"]], "dpnp.conj": [[51, "dpnp-conj"]], "dpnp.conjugate": [[52, "dpnp-conjugate"]], "dpnp.convolve": [[53, "dpnp-convolve"]], "dpnp.copy": [[54, "dpnp-copy"]], "dpnp.copysign": [[55, "dpnp-copysign"]], "dpnp.copyto": [[56, "dpnp-copyto"]], "dpnp.correlate": [[57, "dpnp-correlate"]], "dpnp.cos": [[58, "dpnp-cos"]], "dpnp.cosh": [[59, "dpnp-cosh"]], "dpnp.count_nonzero": [[60, "dpnp-count-nonzero"]], "dpnp.cov": [[61, "dpnp-cov"]], "dpnp.cross": [[62, "dpnp-cross"]], "dpnp.cumprod": [[63, "dpnp-cumprod"]], "dpnp.cumsum": [[64, "dpnp-cumsum"]], "dpnp.deg2rad": [[65, "dpnp-deg2rad"]], "dpnp.degrees": [[66, "dpnp-degrees"]], "dpnp.diag": [[67, "dpnp-diag"]], "dpnp.diag_indices": [[68, "dpnp-diag-indices"]], "dpnp.diag_indices_from": [[69, "dpnp-diag-indices-from"]], "dpnp.diagflat": [[70, "dpnp-diagflat"]], "dpnp.diagonal": [[71, "dpnp-diagonal"]], "dpnp.diff": [[72, "dpnp-diff"]], "dpnp.divide": [[73, "dpnp-divide"]], "dpnp.dot": [[74, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[75, "dpnp-dpnp-array-dpnp-array"]], "dpnp.dtype": [[76, "dpnp-dtype"]], "dpnp.ediff1d": [[77, "dpnp-ediff1d"]], "dpnp.einsum": [[78, "dpnp-einsum"]], "dpnp.einsum_path": [[79, "dpnp-einsum-path"]], "dpnp.empty": [[80, "dpnp-empty"]], "dpnp.empty_like": [[81, "dpnp-empty-like"]], "dpnp.equal": [[82, "dpnp-equal"]], "dpnp.erf": [[83, "dpnp-erf"]], "dpnp.exp": [[84, "dpnp-exp"]], "dpnp.exp2": [[85, "dpnp-exp2"]], "dpnp.expand_dims": [[86, "dpnp-expand-dims"]], "dpnp.expm1": [[87, "dpnp-expm1"]], "dpnp.extract": [[88, "dpnp-extract"]], "dpnp.eye": [[89, "dpnp-eye"]], "dpnp.fabs": [[90, "dpnp-fabs"]], "dpnp.fft.fft": [[91, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[92, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[93, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[94, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[95, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[96, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[97, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[98, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[99, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[100, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[101, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[102, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[103, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[104, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[105, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[106, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[107, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[108, "dpnp-fft-rfftn"]], "dpnp.fill_diagonal": [[109, "dpnp-fill-diagonal"]], "dpnp.flatiter": [[110, "dpnp-flatiter"]], "dpnp.floor": [[111, "dpnp-floor"]], "dpnp.floor_divide": [[112, "dpnp-floor-divide"]], "dpnp.fmax": [[113, "dpnp-fmax"]], "dpnp.fmin": [[114, "dpnp-fmin"]], "dpnp.fmod": [[115, "dpnp-fmod"]], "dpnp.from_dlpack": [[116, "dpnp-from-dlpack"]], "dpnp.frombuffer": [[117, "dpnp-frombuffer"]], "dpnp.fromfile": [[118, "dpnp-fromfile"]], "dpnp.fromfunction": [[119, "dpnp-fromfunction"]], "dpnp.fromiter": [[120, "dpnp-fromiter"]], "dpnp.fromstring": [[121, "dpnp-fromstring"]], "dpnp.full": [[122, "dpnp-full"]], "dpnp.full_like": [[123, "dpnp-full-like"]], "dpnp.geomspace": [[124, "dpnp-geomspace"]], "dpnp.get_include": [[125, "dpnp-get-include"]], "dpnp.gradient": [[126, "dpnp-gradient"]], "dpnp.greater": [[127, "dpnp-greater"]], "dpnp.greater_equal": [[128, "dpnp-greater-equal"]], "dpnp.histogram": [[129, "dpnp-histogram"]], "dpnp.hstack": [[130, "dpnp-hstack"]], "dpnp.hypot": [[131, "dpnp-hypot"]], "dpnp.identity": [[132, "dpnp-identity"]], "dpnp.indices": [[133, "dpnp-indices"]], "dpnp.inner": [[134, "dpnp-inner"]], "dpnp.invert": [[135, "dpnp-invert"]], "dpnp.isclose": [[136, "dpnp-isclose"]], "dpnp.isfinite": [[137, "dpnp-isfinite"]], "dpnp.isinf": [[138, "dpnp-isinf"]], "dpnp.isnan": [[139, "dpnp-isnan"]], "dpnp.isscalar": [[140, "dpnp-isscalar"]], "dpnp.issubdtype": [[141, "dpnp-issubdtype"]], "dpnp.issubsctype": [[142, "dpnp-issubsctype"]], "dpnp.kron": [[143, "dpnp-kron"]], "dpnp.left_shift": [[144, "dpnp-left-shift"]], "dpnp.less": [[145, "dpnp-less"]], "dpnp.less_equal": [[146, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[147, "dpnp-linalg-cholesky"]], "dpnp.linalg.cond": [[148, "dpnp-linalg-cond"]], "dpnp.linalg.det": [[149, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[150, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[151, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[152, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[153, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[154, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[155, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[156, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[157, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[158, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[159, "dpnp-linalg-svd"]], "dpnp.linspace": [[160, "dpnp-linspace"]], "dpnp.loadtxt": [[161, "dpnp-loadtxt"]], "dpnp.log": [[162, "dpnp-log"]], "dpnp.log10": [[163, "dpnp-log10"]], "dpnp.log1p": [[164, "dpnp-log1p"]], "dpnp.log2": [[165, "dpnp-log2"]], "dpnp.logical_and": [[166, "dpnp-logical-and"]], "dpnp.logical_not": [[167, "dpnp-logical-not"]], "dpnp.logical_or": [[168, "dpnp-logical-or"]], "dpnp.logical_xor": [[169, "dpnp-logical-xor"]], "dpnp.logspace": [[170, "dpnp-logspace"]], "dpnp.matmul": [[171, "dpnp-matmul"]], "dpnp.max": [[172, "dpnp-max"]], "dpnp.maximum": [[173, "dpnp-maximum"]], "dpnp.mean": [[174, "dpnp-mean"]], "dpnp.median": [[175, "dpnp-median"]], "dpnp.meshgrid": [[176, "dpnp-meshgrid"]], "dpnp.mgrid": [[177, "dpnp-mgrid"]], "dpnp.min": [[178, "dpnp-min"]], "dpnp.minimum": [[179, "dpnp-minimum"]], "dpnp.mod": [[180, "dpnp-mod"]], "dpnp.modf": [[181, "dpnp-modf"]], "dpnp.moveaxis": [[182, "dpnp-moveaxis"]], "dpnp.multiply": [[183, "dpnp-multiply"]], "dpnp.nancumprod": [[184, "dpnp-nancumprod"]], "dpnp.nancumsum": [[185, "dpnp-nancumsum"]], "dpnp.nanprod": [[186, "dpnp-nanprod"]], "dpnp.nansum": [[187, "dpnp-nansum"]], "dpnp.nanvar": [[188, "dpnp-nanvar"]], "dpnp.ndarray": [[189, "dpnp-ndarray"]], "dpnp.ndarray.T": [[190, "dpnp-ndarray-t"]], "dpnp.ndarray.__abs__": [[191, "dpnp-ndarray-abs"]], "dpnp.ndarray.__add__": [[192, "dpnp-ndarray-add"]], "dpnp.ndarray.__and__": [[193, "dpnp-ndarray-and"]], "dpnp.ndarray.__complex__": [[194, "dpnp-ndarray-complex"]], "dpnp.ndarray.__eq__": [[195, "dpnp-ndarray-eq"]], "dpnp.ndarray.__float__": [[196, "dpnp-ndarray-float"]], "dpnp.ndarray.__ge__": [[197, "dpnp-ndarray-ge"]], "dpnp.ndarray.__getitem__": [[198, "dpnp-ndarray-getitem"]], "dpnp.ndarray.__gt__": [[199, "dpnp-ndarray-gt"]], "dpnp.ndarray.__iadd__": [[200, "dpnp-ndarray-iadd"]], "dpnp.ndarray.__iand__": [[201, "dpnp-ndarray-iand"]], "dpnp.ndarray.__ilshift__": [[202, "dpnp-ndarray-ilshift"]], "dpnp.ndarray.__imul__": [[203, "dpnp-ndarray-imul"]], "dpnp.ndarray.__int__": [[204, "dpnp-ndarray-int"]], "dpnp.ndarray.__invert__": [[205, "dpnp-ndarray-invert"]], "dpnp.ndarray.__ior__": [[206, "dpnp-ndarray-ior"]], "dpnp.ndarray.__ipow__": [[207, "dpnp-ndarray-ipow"]], "dpnp.ndarray.__irshift__": [[208, "dpnp-ndarray-irshift"]], "dpnp.ndarray.__isub__": [[209, "dpnp-ndarray-isub"]], "dpnp.ndarray.__itruediv__": [[210, "dpnp-ndarray-itruediv"]], "dpnp.ndarray.__ixor__": [[211, "dpnp-ndarray-ixor"]], "dpnp.ndarray.__le__": [[212, "dpnp-ndarray-le"]], "dpnp.ndarray.__len__": [[213, "dpnp-ndarray-len"]], "dpnp.ndarray.__lshift__": [[214, "dpnp-ndarray-lshift"]], "dpnp.ndarray.__lt__": [[215, "dpnp-ndarray-lt"]], "dpnp.ndarray.__mod__": [[216, "dpnp-ndarray-mod"]], "dpnp.ndarray.__mul__": [[217, "dpnp-ndarray-mul"]], "dpnp.ndarray.__ne__": [[218, "dpnp-ndarray-ne"]], "dpnp.ndarray.__neg__": [[219, "dpnp-ndarray-neg"]], "dpnp.ndarray.__new__": [[220, "dpnp-ndarray-new"]], "dpnp.ndarray.__or__": [[221, "dpnp-ndarray-or"]], "dpnp.ndarray.__pow__": [[222, "dpnp-ndarray-pow"]], "dpnp.ndarray.__reduce__": [[223, "dpnp-ndarray-reduce"]], "dpnp.ndarray.__repr__": [[224, "dpnp-ndarray-repr"]], "dpnp.ndarray.__rshift__": [[225, "dpnp-ndarray-rshift"]], "dpnp.ndarray.__setitem__": [[226, "dpnp-ndarray-setitem"]], "dpnp.ndarray.__str__": [[227, "dpnp-ndarray-str"]], "dpnp.ndarray.__sub__": [[228, "dpnp-ndarray-sub"]], "dpnp.ndarray.__truediv__": [[229, "dpnp-ndarray-truediv"]], "dpnp.ndarray.__xor__": [[230, "dpnp-ndarray-xor"]], "dpnp.ndarray.all": [[231, "dpnp-ndarray-all"]], "dpnp.ndarray.any": [[232, "dpnp-ndarray-any"]], "dpnp.ndarray.argmax": [[233, "dpnp-ndarray-argmax"]], "dpnp.ndarray.argmin": [[234, "dpnp-ndarray-argmin"]], "dpnp.ndarray.argsort": [[235, "dpnp-ndarray-argsort"]], "dpnp.ndarray.astype": [[236, "dpnp-ndarray-astype"]], "dpnp.ndarray.choose": [[237, "dpnp-ndarray-choose"]], "dpnp.ndarray.conj": [[238, "dpnp-ndarray-conj"]], "dpnp.ndarray.conjugate": [[239, "dpnp-ndarray-conjugate"]], "dpnp.ndarray.cumsum": [[240, "dpnp-ndarray-cumsum"]], "dpnp.ndarray.diagonal": [[241, "dpnp-ndarray-diagonal"]], "dpnp.ndarray.dtype": [[242, "dpnp-ndarray-dtype"]], "dpnp.ndarray.fill": [[243, "dpnp-ndarray-fill"]], "dpnp.ndarray.flags": [[244, "dpnp-ndarray-flags"]], "dpnp.ndarray.flat": [[245, "dpnp-ndarray-flat"]], "dpnp.ndarray.flatten": [[246, "dpnp-ndarray-flatten"]], "dpnp.ndarray.item": [[247, "dpnp-ndarray-item"]], "dpnp.ndarray.itemsize": [[248, "dpnp-ndarray-itemsize"]], "dpnp.ndarray.max": [[249, "dpnp-ndarray-max"]], "dpnp.ndarray.mean": [[250, "dpnp-ndarray-mean"]], "dpnp.ndarray.min": [[251, "dpnp-ndarray-min"]], "dpnp.ndarray.nbytes": [[252, "dpnp-ndarray-nbytes"]], "dpnp.ndarray.ndim": [[253, "dpnp-ndarray-ndim"]], "dpnp.ndarray.nonzero": [[254, "dpnp-ndarray-nonzero"]], "dpnp.ndarray.partition": [[255, "dpnp-ndarray-partition"]], "dpnp.ndarray.prod": [[256, "dpnp-ndarray-prod"]], "dpnp.ndarray.reshape": [[257, "dpnp-ndarray-reshape"]], "dpnp.ndarray.round": [[258, "dpnp-ndarray-round"]], "dpnp.ndarray.shape": [[259, "dpnp-ndarray-shape"]], "dpnp.ndarray.size": [[260, "dpnp-ndarray-size"]], "dpnp.ndarray.squeeze": [[261, "dpnp-ndarray-squeeze"]], "dpnp.ndarray.std": [[262, "dpnp-ndarray-std"]], "dpnp.ndarray.strides": [[263, "dpnp-ndarray-strides"]], "dpnp.ndarray.sum": [[264, "dpnp-ndarray-sum"]], "dpnp.ndarray.take": [[265, "dpnp-ndarray-take"]], "dpnp.ndarray.transpose": [[266, "dpnp-ndarray-transpose"]], "dpnp.ndarray.var": [[267, "dpnp-ndarray-var"]], "dpnp.negative": [[268, "dpnp-negative"]], "dpnp.nonzero": [[269, "dpnp-nonzero"]], "dpnp.not_equal": [[270, "dpnp-not-equal"]], "dpnp.ogrid": [[271, "dpnp-ogrid"]], "dpnp.ones": [[272, "dpnp-ones"]], "dpnp.ones_like": [[273, "dpnp-ones-like"]], "dpnp.outer": [[274, "dpnp-outer"]], "dpnp.partition": [[275, "dpnp-partition"]], "dpnp.place": [[276, "dpnp-place"]], "dpnp.power": [[277, "dpnp-power"]], "dpnp.prod": [[278, "dpnp-prod"]], "dpnp.ptp": [[279, "dpnp-ptp"]], "dpnp.put": [[280, "dpnp-put"]], "dpnp.put_along_axis": [[281, "dpnp-put-along-axis"]], "dpnp.putmask": [[282, "dpnp-putmask"]], "dpnp.rad2deg": [[283, "dpnp-rad2deg"]], "dpnp.radians": [[284, "dpnp-radians"]], "dpnp.random.RandomState": [[285, "dpnp-random-randomstate"]], "dpnp.random.beta": [[286, "dpnp-random-beta"]], "dpnp.random.binomial": [[287, "dpnp-random-binomial"]], "dpnp.random.bytes": [[288, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[289, "dpnp-random-chisquare"]], "dpnp.random.choice": [[290, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[291, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[292, "dpnp-random-exponential"]], "dpnp.random.f": [[293, "dpnp-random-f"]], "dpnp.random.gamma": [[294, "dpnp-random-gamma"]], "dpnp.random.geometric": [[295, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[296, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[297, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[298, "dpnp-random-laplace"]], "dpnp.random.logistic": [[299, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[300, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[301, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[302, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[303, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[304, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[305, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[306, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[307, "dpnp-random-normal"]], "dpnp.random.pareto": [[308, "dpnp-random-pareto"]], "dpnp.random.permutation": [[309, "dpnp-random-permutation"]], "dpnp.random.poisson": [[310, "dpnp-random-poisson"]], "dpnp.random.power": [[311, "dpnp-random-power"]], "dpnp.random.rand": [[312, "dpnp-random-rand"]], "dpnp.random.randint": [[313, "dpnp-random-randint"]], "dpnp.random.randn": [[314, "dpnp-random-randn"]], "dpnp.random.random": [[315, "dpnp-random-random"]], "dpnp.random.random_integers": [[316, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[317, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[318, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[319, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[320, "dpnp-random-sample"]], "dpnp.random.seed": [[321, "dpnp-random-seed"]], "dpnp.random.shuffle": [[322, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[323, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[324, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[325, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[326, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[327, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[328, "dpnp-random-triangular"]], "dpnp.random.uniform": [[329, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[330, "dpnp-random-vonmises"]], "dpnp.random.wald": [[331, "dpnp-random-wald"]], "dpnp.random.weibull": [[332, "dpnp-random-weibull"]], "dpnp.random.zipf": [[333, "dpnp-random-zipf"]], "dpnp.ravel": [[334, "dpnp-ravel"]], "dpnp.reciprocal": [[335, "dpnp-reciprocal"]], "dpnp.remainder": [[336, "dpnp-remainder"]], "dpnp.repeat": [[337, "dpnp-repeat"]], "dpnp.reshape": [[338, "dpnp-reshape"]], "dpnp.result_type": [[339, "dpnp-result-type"]], "dpnp.right_shift": [[340, "dpnp-right-shift"]], "dpnp.rollaxis": [[341, "dpnp-rollaxis"]], "dpnp.searchsorted": [[342, "dpnp-searchsorted"]], "dpnp.select": [[343, "dpnp-select"]], "dpnp.shape": [[344, "dpnp-shape"]], "dpnp.sign": [[345, "dpnp-sign"]], "dpnp.sin": [[346, "dpnp-sin"]], "dpnp.sinh": [[347, "dpnp-sinh"]], "dpnp.sort": [[348, "dpnp-sort"]], "dpnp.sqrt": [[349, "dpnp-sqrt"]], "dpnp.square": [[350, "dpnp-square"]], "dpnp.squeeze": [[351, "dpnp-squeeze"]], "dpnp.stack": [[352, "dpnp-stack"]], "dpnp.std": [[353, "dpnp-std"]], "dpnp.subtract": [[354, "dpnp-subtract"]], "dpnp.sum": [[355, "dpnp-sum"]], "dpnp.swapaxes": [[356, "dpnp-swapaxes"]], "dpnp.take": [[357, "dpnp-take"]], "dpnp.take_along_axis": [[358, "dpnp-take-along-axis"]], "dpnp.tan": [[359, "dpnp-tan"]], "dpnp.tanh": [[360, "dpnp-tanh"]], "dpnp.tensordot": [[361, "dpnp-tensordot"]], "dpnp.trace": [[362, "dpnp-trace"]], "dpnp.transpose": [[363, "dpnp-transpose"]], "dpnp.trapz": [[364, "dpnp-trapz"]], "dpnp.tri": [[365, "dpnp-tri"]], "dpnp.tril": [[366, "dpnp-tril"]], "dpnp.tril_indices": [[367, "dpnp-tril-indices"]], "dpnp.tril_indices_from": [[368, "dpnp-tril-indices-from"]], "dpnp.triu": [[369, "dpnp-triu"]], "dpnp.triu_indices": [[370, "dpnp-triu-indices"]], "dpnp.triu_indices_from": [[371, "dpnp-triu-indices-from"]], "dpnp.true_divide": [[372, "dpnp-true-divide"]], "dpnp.trunc": [[373, "dpnp-trunc"]], "dpnp.unique": [[374, "dpnp-unique"]], "dpnp.unwrap": [[375, "dpnp-unwrap"]], "dpnp.vander": [[376, "dpnp-vander"]], "dpnp.var": [[377, "dpnp-var"]], "dpnp.vdot": [[378, "dpnp-vdot"]], "dpnp.vstack": [[379, "dpnp-vstack"]], "dpnp.where": [[380, "dpnp-where"]], "dpnp.zeros": [[381, "dpnp-zeros"]], "dpnp.zeros_like": [[382, "dpnp-zeros-like"]], "API Reference": [[383, "api-reference"]], "Array Indexing Routines": [[384, "array-indexing-routines"]], "Generating index arrays": [[384, "generating-index-arrays"]], "Indexing-like operations": [[384, "indexing-like-operations"]], "Inserting data into arrays": [[384, "inserting-data-into-arrays"]], "Iterating over arrays": [[384, "iterating-over-arrays"]], "Matrix and vector products": [[385, "matrix-and-vector-products"]], "Decompositions": [[385, "decompositions"]], "Matrix eigenvalues": [[385, "matrix-eigenvalues"]], "Norms and other numbers": [[385, "norms-and-other-numbers"]], "Solving linear equations": [[385, "solving-linear-equations"]], "Logic Functions": [[386, "logic-functions"]], "Truth value testing": [[386, "truth-value-testing"]], "Infinities and NaNs": [[386, "infinities-and-nans"]], "Array type testing": [[386, "array-type-testing"]], "Logic operations": [[386, "logic-operations"]], "Comparison": [[386, "comparison"]], "Array Manipulation Routines": [[387, "array-manipulation-routines"]], "Basic operations": [[387, "basic-operations"]], "Changing array shape": [[387, "changing-array-shape"]], "Transpose-like operations": [[387, "transpose-like-operations"]], "Changing number of dimensions": [[387, "changing-number-of-dimensions"]], "Changing kind of array": [[387, "changing-kind-of-array"]], "Joining arrays": [[387, "joining-arrays"]], "Splitting arrays": [[387, "splitting-arrays"]], "Tiling arrays": [[387, "tiling-arrays"]], "Adding and removing elements": [[387, "adding-and-removing-elements"]], "Rearranging elements": [[387, "rearranging-elements"]], "Mathematical Functions": [[388, "mathematical-functions"]], "Trigonometric functions": [[388, "trigonometric-functions"], [398, "trigonometric-functions"]], "Hyperbolic functions": [[388, "hyperbolic-functions"]], "Rounding": [[388, "rounding"]], "Sums, products, differences": [[388, "sums-products-differences"]], "Exponents and logarithms": [[388, "exponents-and-logarithms"]], "Other special functions": [[388, "other-special-functions"]], "Floating point routines": [[388, "floating-point-routines"]], "Rational routines": [[388, "rational-routines"]], "Arithmetic operations": [[388, "arithmetic-operations"]], "Handling complex numbers": [[388, "handling-complex-numbers"]], "Extrema Finding": [[388, "extrema-finding"]], "Miscellaneous routines": [[389, "miscellaneous-routines"]], "Utility": [[389, "utility"]], "Multi-Dimensional Array (ndarray)": [[390, "multi-dimensional-array-ndarray"]], "Constructing arrays": [[390, "constructing-arrays"]], "Indexing arrays": [[390, "indexing-arrays"]], "Array attributes": [[390, "array-attributes"]], "Memory layout": [[390, "memory-layout"]], "Data type": [[390, "data-type"]], "Other attributes": [[390, "other-attributes"]], "Array methods": [[390, "array-methods"]], "Array conversion": [[390, "array-conversion"]], "Shape manipulation": [[390, "shape-manipulation"]], "Item selection and manipulation": [[390, "item-selection-and-manipulation"]], "Calculation": [[390, "calculation"]], "Arithmetic, matrix multiplication, and comparison operations": [[390, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Special methods": [[390, "special-methods"]], "Padding": [[391, "padding"]], "Polynomials": [[392, "polynomials"]], "Polynomial Package": [[392, "polynomial-package"]], "Polynomial Module": [[392, "polynomial-module"]], "Polyutils": [[392, "polyutils"]], "Poly1d": [[392, "poly1d"]], "Basics": [[392, "basics"]], "Arithmetic": [[392, "arithmetic"]], "Random Sampling (dpnp.random)": [[393, "random-sampling-dpnp-random"]], "Simple random data": [[393, "simple-random-data"]], "Permutations": [[393, "permutations"]], "Distributions": [[393, "distributions"]], "Random generator": [[393, "random-generator"]], "Routines": [[394, "routines"]], "Sorting, Searching, and Counting": [[395, "sorting-searching-and-counting"]], "Sorting": [[395, "sorting"]], "Searching": [[395, "searching"]], "Counting": [[395, "counting"]], "Special Functions": [[396, "special-functions"]], "Error Function": [[396, "error-function"]], "Statistical Functions": [[397, "statistical-functions"]], "Order statistics": [[397, "order-statistics"]], "Averages and variances": [[397, "averages-and-variances"]], "Histograms": [[397, "histograms"]], "Correlations": [[397, "correlations"]], "Universal Functions (ufunc)": [[398, "universal-functions-ufunc"]], "Available ufuncs": [[398, "available-ufuncs"]], "Math operations": [[398, "math-operations"]], "Bit-twiddling functions": [[398, "bit-twiddling-functions"]], "Comparison functions": [[398, "comparison-functions"]], "Floating functions": [[398, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"]], "module": [[2, "module-dpnp"], [9, "module-dpnp.fft"], [393, "module-dpnp.random"]], "dpnp.fft": [[9, "module-dpnp.fft"]], "abs() (in module dpnp)": [[10, "dpnp.abs"]], "absolute() (in module dpnp)": [[11, "dpnp.absolute"]], "add() (in module dpnp)": [[12, "dpnp.add"]], "all() (in module dpnp)": [[13, "dpnp.all"]], "allclose() (in module dpnp)": [[14, "dpnp.allclose"]], "amax() (in module dpnp)": [[15, "dpnp.amax"]], "amin() (in module dpnp)": [[16, "dpnp.amin"]], "any() (in module dpnp)": [[17, "dpnp.any"]], "arange() (in module dpnp)": [[18, "dpnp.arange"]], "arccos() (in module dpnp)": [[19, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[20, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[21, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[22, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[23, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[24, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[25, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[26, "dpnp.argmax"]], "argmin() (in module dpnp)": [[27, "dpnp.argmin"]], "argsort() (in module dpnp)": [[28, "dpnp.argsort"]], "around() (in module dpnp)": [[29, "dpnp.around"]], "array() (in module dpnp)": [[30, "dpnp.array"]], "array_equal() (in module dpnp)": [[31, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[32, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[33, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[34, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[35, "dpnp.asfarray"]], "asnumpy() (in module dpnp)": [[36, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[37, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[38, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[39, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[40, "dpnp.average"]], "bincount() (in module dpnp)": [[41, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[42, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[43, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[44, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[45, "dpnp.bitwise_xor"]], "broadcast_to() (in module dpnp)": [[46, "dpnp.broadcast_to"]], "cbrt() (in module dpnp)": [[47, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[48, "dpnp.ceil"]], "choose() (in module dpnp)": [[49, "dpnp.choose"]], "concatenate() (in module dpnp)": [[50, "dpnp.concatenate"]], "conj() (in module dpnp)": [[51, "dpnp.conj"]], "conjugate() (in module dpnp)": [[52, "dpnp.conjugate"]], "convolve() (in module dpnp)": [[53, "dpnp.convolve"]], "copy() (in module dpnp)": [[54, "dpnp.copy"]], "copysign() (in module dpnp)": [[55, "dpnp.copysign"]], "copyto() (in module dpnp)": [[56, "dpnp.copyto"]], "correlate() (in module dpnp)": [[57, "dpnp.correlate"]], "cos() (in module dpnp)": [[58, "dpnp.cos"]], "cosh() (in module dpnp)": [[59, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[60, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[61, "dpnp.cov"]], "cross() (in module dpnp)": [[62, "dpnp.cross"]], "cumprod() (in module dpnp)": [[63, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[64, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[65, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[66, "dpnp.degrees"]], "diag() (in module dpnp)": [[67, "dpnp.diag"]], "diag_indices() (in module dpnp)": [[68, "dpnp.diag_indices"]], "diag_indices_from() (in module dpnp)": [[69, "dpnp.diag_indices_from"]], "diagflat() (in module dpnp)": [[70, "dpnp.diagflat"]], "diagonal() (in module dpnp)": [[71, "dpnp.diagonal"]], "diff() (in module dpnp)": [[72, "dpnp.diff"]], "divide() (in module dpnp)": [[73, "dpnp.divide"]], "dot() (in module dpnp)": [[74, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.conjugate"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[75, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.get_array"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.prod"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.sum"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[75, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[75, "dpnp.dpnp_array.dpnp_array.var"]], "__eq__() (dpnp.dtype method)": [[76, "dpnp.dtype.__eq__"]], "__ge__() (dpnp.dtype method)": [[76, "dpnp.dtype.__ge__"]], "__getitem__() (dpnp.dtype method)": [[76, "dpnp.dtype.__getitem__"]], "__gt__() (dpnp.dtype method)": [[76, "dpnp.dtype.__gt__"]], "__le__() (dpnp.dtype method)": [[76, "dpnp.dtype.__le__"]], "__len__() (dpnp.dtype method)": [[76, "dpnp.dtype.__len__"]], "__lt__() (dpnp.dtype method)": [[76, "dpnp.dtype.__lt__"]], "__ne__() (dpnp.dtype method)": [[76, "dpnp.dtype.__ne__"]], "alignment (dpnp.dtype attribute)": [[76, "dpnp.dtype.alignment"]], "base (dpnp.dtype attribute)": [[76, "dpnp.dtype.base"]], "byteorder (dpnp.dtype attribute)": [[76, "dpnp.dtype.byteorder"]], "char (dpnp.dtype attribute)": [[76, "dpnp.dtype.char"]], "descr (dpnp.dtype attribute)": [[76, "dpnp.dtype.descr"]], "dtype (class in dpnp)": [[76, "dpnp.dtype"]], "fields (dpnp.dtype attribute)": [[76, "dpnp.dtype.fields"]], "flags (dpnp.dtype attribute)": [[76, "dpnp.dtype.flags"]], "hasobject (dpnp.dtype attribute)": [[76, "dpnp.dtype.hasobject"]], "isalignedstruct (dpnp.dtype attribute)": [[76, "dpnp.dtype.isalignedstruct"]], "isbuiltin (dpnp.dtype attribute)": [[76, "dpnp.dtype.isbuiltin"]], "isnative (dpnp.dtype attribute)": [[76, "dpnp.dtype.isnative"]], "itemsize (dpnp.dtype attribute)": [[76, "dpnp.dtype.itemsize"]], "kind (dpnp.dtype attribute)": [[76, "dpnp.dtype.kind"]], "metadata (dpnp.dtype attribute)": [[76, "dpnp.dtype.metadata"]], "name (dpnp.dtype attribute)": [[76, "dpnp.dtype.name"]], "names (dpnp.dtype attribute)": [[76, "dpnp.dtype.names"]], "ndim (dpnp.dtype attribute)": [[76, "dpnp.dtype.ndim"]], "newbyteorder() (dpnp.dtype method)": [[76, "dpnp.dtype.newbyteorder"]], "num (dpnp.dtype attribute)": [[76, "dpnp.dtype.num"]], "shape (dpnp.dtype attribute)": [[76, "dpnp.dtype.shape"]], "str (dpnp.dtype attribute)": [[76, "dpnp.dtype.str"]], "subdtype (dpnp.dtype attribute)": [[76, "dpnp.dtype.subdtype"]], "type (dpnp.dtype attribute)": [[76, "dpnp.dtype.type"]], "ediff1d() (in module dpnp)": [[77, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[78, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[79, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[80, "dpnp.empty"]], "empty_like() (in module dpnp)": [[81, "dpnp.empty_like"]], "equal() (in module dpnp)": [[82, "dpnp.equal"]], "erf() (in module dpnp)": [[83, "dpnp.erf"]], "exp() (in module dpnp)": [[84, "dpnp.exp"]], "exp2() (in module dpnp)": [[85, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[86, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[87, "dpnp.expm1"]], "extract() (in module dpnp)": [[88, "dpnp.extract"]], "eye() (in module dpnp)": [[89, "dpnp.eye"]], "fabs() (in module dpnp)": [[90, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[91, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[92, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[93, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[94, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[95, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[96, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[97, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[98, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[99, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[100, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[101, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[102, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[103, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[104, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[105, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[106, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[107, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[108, "dpnp.fft.rfftn"]], "fill_diagonal() (in module dpnp)": [[109, "dpnp.fill_diagonal"]], "__eq__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__eq__"]], "__ge__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__ge__"]], "__getitem__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__getitem__"]], "__gt__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__gt__"]], "__iter__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__iter__"]], "__le__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__le__"]], "__lt__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__lt__"]], "__ne__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__ne__"]], "__next__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__next__"]], "__setitem__() (dpnp.flatiter method)": [[110, "dpnp.flatiter.__setitem__"]], "flatiter (class in dpnp)": [[110, "dpnp.flatiter"]], "floor() (in module dpnp)": [[111, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[112, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[113, "dpnp.fmax"]], "fmin() (in module dpnp)": [[114, "dpnp.fmin"]], "fmod() (in module dpnp)": [[115, "dpnp.fmod"]], "from_dlpack() (in module dpnp)": [[116, "dpnp.from_dlpack"]], "frombuffer() (in module dpnp)": [[117, "dpnp.frombuffer"]], "fromfile() (in module dpnp)": [[118, "dpnp.fromfile"]], "fromfunction() (in module dpnp)": [[119, "dpnp.fromfunction"]], "fromiter() (in module dpnp)": [[120, "dpnp.fromiter"]], "fromstring() (in module dpnp)": [[121, "dpnp.fromstring"]], "full() (in module dpnp)": [[122, "dpnp.full"]], "full_like() (in module dpnp)": [[123, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[124, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[125, "dpnp.get_include"]], "gradient() (in module dpnp)": [[126, "dpnp.gradient"]], "greater() (in module dpnp)": [[127, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[128, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[129, "dpnp.histogram"]], "hstack() (in module dpnp)": [[130, "dpnp.hstack"]], "hypot() (in module dpnp)": [[131, "dpnp.hypot"]], "identity() (in module dpnp)": [[132, "dpnp.identity"]], "indices() (in module dpnp)": [[133, "dpnp.indices"]], "inner() (in module dpnp)": [[134, "dpnp.inner"]], "invert() (in module dpnp)": [[135, "dpnp.invert"]], "isclose() (in module dpnp)": [[136, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[137, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[138, "dpnp.isinf"]], "isnan() (in module dpnp)": [[139, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[140, "dpnp.isscalar"]], "issubdtype() (in module dpnp)": [[141, "dpnp.issubdtype"]], "issubsctype() (in module dpnp)": [[142, "dpnp.issubsctype"]], "kron() (in module dpnp)": [[143, "dpnp.kron"]], "left_shift() (in module dpnp)": [[144, "dpnp.left_shift"]], "less() (in module dpnp)": [[145, "dpnp.less"]], "less_equal() (in module dpnp)": [[146, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[147, "dpnp.linalg.cholesky"]], "cond() (in module dpnp.linalg)": [[148, "dpnp.linalg.cond"]], "det() (in module dpnp.linalg)": [[149, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[150, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[151, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[152, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[153, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[154, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[155, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[156, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[157, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[158, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[159, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[160, "dpnp.linspace"]], "loadtxt() (in module dpnp)": [[161, "dpnp.loadtxt"]], "log() (in module dpnp)": [[162, "dpnp.log"]], "log10() (in module dpnp)": [[163, "dpnp.log10"]], "log1p() (in module dpnp)": [[164, "dpnp.log1p"]], "log2() (in module dpnp)": [[165, "dpnp.log2"]], "logical_and() (in module dpnp)": [[166, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[167, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[168, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[169, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[170, "dpnp.logspace"]], "matmul() (in module dpnp)": [[171, "dpnp.matmul"]], "max() (in module dpnp)": [[172, "dpnp.max"]], "maximum() (in module dpnp)": [[173, "dpnp.maximum"]], "mean() (in module dpnp)": [[174, "dpnp.mean"]], "median() (in module dpnp)": [[175, "dpnp.median"]], "meshgrid() (in module dpnp)": [[176, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[177, "dpnp.mgrid"]], "min() (in module dpnp)": [[178, "dpnp.min"]], "minimum() (in module dpnp)": [[179, "dpnp.minimum"]], "mod() (in module dpnp)": [[180, "dpnp.mod"]], "modf() (in module dpnp)": [[181, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[182, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[183, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[184, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[185, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[186, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[187, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[188, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[189, "dpnp.ndarray"]], "t (dpnp.ndarray property)": [[190, "dpnp.ndarray.T"]], "__abs__() (dpnp.ndarray method)": [[191, "dpnp.ndarray.__abs__"]], "__add__() (dpnp.ndarray method)": [[192, "dpnp.ndarray.__add__"]], "__and__() (dpnp.ndarray method)": [[193, "dpnp.ndarray.__and__"]], "__complex__() (dpnp.ndarray method)": [[194, "dpnp.ndarray.__complex__"]], "__eq__() (dpnp.ndarray method)": [[195, "dpnp.ndarray.__eq__"]], "__float__() (dpnp.ndarray method)": [[196, "dpnp.ndarray.__float__"]], "__ge__() (dpnp.ndarray method)": [[197, "dpnp.ndarray.__ge__"]], "__getitem__() (dpnp.ndarray method)": [[198, "dpnp.ndarray.__getitem__"]], "__gt__() (dpnp.ndarray method)": [[199, "dpnp.ndarray.__gt__"]], "__iadd__() (dpnp.ndarray method)": [[200, "dpnp.ndarray.__iadd__"]], "__iand__() (dpnp.ndarray method)": [[201, "dpnp.ndarray.__iand__"]], "__ilshift__() (dpnp.ndarray method)": [[202, "dpnp.ndarray.__ilshift__"]], "__imul__() (dpnp.ndarray method)": [[203, "dpnp.ndarray.__imul__"]], "__int__() (dpnp.ndarray method)": [[204, "dpnp.ndarray.__int__"]], "__invert__() (dpnp.ndarray method)": [[205, "dpnp.ndarray.__invert__"]], "__ior__() (dpnp.ndarray method)": [[206, "dpnp.ndarray.__ior__"]], "__ipow__() (dpnp.ndarray method)": [[207, "dpnp.ndarray.__ipow__"]], "__irshift__() (dpnp.ndarray method)": [[208, "dpnp.ndarray.__irshift__"]], "__isub__() (dpnp.ndarray method)": [[209, "dpnp.ndarray.__isub__"]], "__itruediv__() (dpnp.ndarray method)": [[210, "dpnp.ndarray.__itruediv__"]], "__ixor__() (dpnp.ndarray method)": [[211, "dpnp.ndarray.__ixor__"]], "__le__() (dpnp.ndarray method)": [[212, "dpnp.ndarray.__le__"]], "__len__() (dpnp.ndarray method)": [[213, "dpnp.ndarray.__len__"]], "__lshift__() (dpnp.ndarray method)": [[214, "dpnp.ndarray.__lshift__"]], "__lt__() (dpnp.ndarray method)": [[215, "dpnp.ndarray.__lt__"]], "__mod__() (dpnp.ndarray method)": [[216, "dpnp.ndarray.__mod__"]], "__mul__() (dpnp.ndarray method)": [[217, "dpnp.ndarray.__mul__"]], "__ne__() (dpnp.ndarray method)": [[218, "dpnp.ndarray.__ne__"]], "__neg__() (dpnp.ndarray method)": [[219, "dpnp.ndarray.__neg__"]], "__new__() (dpnp.ndarray method)": [[220, "dpnp.ndarray.__new__"]], "__or__() (dpnp.ndarray method)": [[221, "dpnp.ndarray.__or__"]], "__pow__() (dpnp.ndarray method)": [[222, "dpnp.ndarray.__pow__"]], "__reduce__() (dpnp.ndarray method)": [[223, "dpnp.ndarray.__reduce__"]], "__repr__() (dpnp.ndarray method)": [[224, "dpnp.ndarray.__repr__"]], "__rshift__() (dpnp.ndarray method)": [[225, "dpnp.ndarray.__rshift__"]], "__setitem__() (dpnp.ndarray method)": [[226, "dpnp.ndarray.__setitem__"]], "__str__() (dpnp.ndarray method)": [[227, "dpnp.ndarray.__str__"]], "__sub__() (dpnp.ndarray method)": [[228, "dpnp.ndarray.__sub__"]], "__truediv__() (dpnp.ndarray method)": [[229, "dpnp.ndarray.__truediv__"]], "__xor__() (dpnp.ndarray method)": [[230, "dpnp.ndarray.__xor__"]], "all() (dpnp.ndarray method)": [[231, "dpnp.ndarray.all"]], "any() (dpnp.ndarray method)": [[232, "dpnp.ndarray.any"]], "argmax() (dpnp.ndarray method)": [[233, "dpnp.ndarray.argmax"]], "argmin() (dpnp.ndarray method)": [[234, "dpnp.ndarray.argmin"]], "argsort() (dpnp.ndarray method)": [[235, "dpnp.ndarray.argsort"]], "astype() (dpnp.ndarray method)": [[236, "dpnp.ndarray.astype"]], "choose() (dpnp.ndarray method)": [[237, "dpnp.ndarray.choose"]], "conj() (dpnp.ndarray method)": [[238, "dpnp.ndarray.conj"]], "conjugate() (dpnp.ndarray method)": [[239, "dpnp.ndarray.conjugate"]], "cumsum() (dpnp.ndarray method)": [[240, "dpnp.ndarray.cumsum"]], "diagonal() (dpnp.ndarray method)": [[241, "dpnp.ndarray.diagonal"]], "dtype (dpnp.ndarray property)": [[242, "dpnp.ndarray.dtype"]], "fill() (dpnp.ndarray method)": [[243, "dpnp.ndarray.fill"]], "flags (dpnp.ndarray property)": [[244, "dpnp.ndarray.flags"]], "flat (dpnp.ndarray property)": [[245, "dpnp.ndarray.flat"]], "flatten() (dpnp.ndarray method)": [[246, "dpnp.ndarray.flatten"]], "item() (dpnp.ndarray method)": [[247, "dpnp.ndarray.item"]], "itemsize (dpnp.ndarray property)": [[248, "dpnp.ndarray.itemsize"]], "max() (dpnp.ndarray method)": [[249, "dpnp.ndarray.max"]], "mean() (dpnp.ndarray method)": [[250, "dpnp.ndarray.mean"]], "min() (dpnp.ndarray method)": [[251, "dpnp.ndarray.min"]], "nbytes (dpnp.ndarray property)": [[252, "dpnp.ndarray.nbytes"]], "ndim (dpnp.ndarray property)": [[253, "dpnp.ndarray.ndim"]], "nonzero() (dpnp.ndarray method)": [[254, "dpnp.ndarray.nonzero"]], "partition() (dpnp.ndarray method)": [[255, "dpnp.ndarray.partition"]], "prod() (dpnp.ndarray method)": [[256, "dpnp.ndarray.prod"]], "reshape() (dpnp.ndarray method)": [[257, "dpnp.ndarray.reshape"]], "round() (dpnp.ndarray method)": [[258, "dpnp.ndarray.round"]], "shape (dpnp.ndarray property)": [[259, "dpnp.ndarray.shape"]], "size (dpnp.ndarray property)": [[260, "dpnp.ndarray.size"]], "squeeze() (dpnp.ndarray method)": [[261, "dpnp.ndarray.squeeze"]], "std() (dpnp.ndarray method)": [[262, "dpnp.ndarray.std"]], "strides (dpnp.ndarray property)": [[263, "dpnp.ndarray.strides"]], "sum() (dpnp.ndarray method)": [[264, "dpnp.ndarray.sum"]], "take() (dpnp.ndarray method)": [[265, "dpnp.ndarray.take"]], "transpose() (dpnp.ndarray method)": [[266, "dpnp.ndarray.transpose"]], "var() (dpnp.ndarray method)": [[267, "dpnp.ndarray.var"]], "negative() (in module dpnp)": [[268, "dpnp.negative"]], "nonzero() (in module dpnp)": [[269, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[270, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[271, "dpnp.ogrid"]], "ones() (in module dpnp)": [[272, "dpnp.ones"]], "ones_like() (in module dpnp)": [[273, "dpnp.ones_like"]], "outer() (in module dpnp)": [[274, "dpnp.outer"]], "partition() (in module dpnp)": [[275, "dpnp.partition"]], "place() (in module dpnp)": [[276, "dpnp.place"]], "power() (in module dpnp)": [[277, "dpnp.power"]], "prod() (in module dpnp)": [[278, "dpnp.prod"]], "ptp() (in module dpnp)": [[279, "dpnp.ptp"]], "put() (in module dpnp)": [[280, "dpnp.put"]], "put_along_axis() (in module dpnp)": [[281, "dpnp.put_along_axis"]], "putmask() (in module dpnp)": [[282, "dpnp.putmask"]], "rad2deg() (in module dpnp)": [[283, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[284, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[285, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[285, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[286, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[287, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[288, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[289, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[290, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[291, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[292, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[293, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[294, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[295, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[296, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[297, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[298, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[299, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[300, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[301, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[302, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[303, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[304, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[305, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[306, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[307, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[308, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[309, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[310, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[311, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[312, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[313, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[314, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[315, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[316, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[317, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[318, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[319, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[320, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[321, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[322, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[323, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[324, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[325, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[326, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[327, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[328, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[329, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[330, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[331, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[332, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[333, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[334, "dpnp.ravel"]], "reciprocal() (in module dpnp)": [[335, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[336, "dpnp.remainder"]], "repeat() (in module dpnp)": [[337, "dpnp.repeat"]], "reshape() (in module dpnp)": [[338, "dpnp.reshape"]], "result_type() (in module dpnp)": [[339, "dpnp.result_type"]], "right_shift() (in module dpnp)": [[340, "dpnp.right_shift"]], "rollaxis() (in module dpnp)": [[341, "dpnp.rollaxis"]], "searchsorted() (in module dpnp)": [[342, "dpnp.searchsorted"]], "select() (in module dpnp)": [[343, "dpnp.select"]], "shape() (in module dpnp)": [[344, "dpnp.shape"]], "sign() (in module dpnp)": [[345, "dpnp.sign"]], "sin() (in module dpnp)": [[346, "dpnp.sin"]], "sinh() (in module dpnp)": [[347, "dpnp.sinh"]], "sort() (in module dpnp)": [[348, "dpnp.sort"]], "sqrt() (in module dpnp)": [[349, "dpnp.sqrt"]], "square() (in module dpnp)": [[350, "dpnp.square"]], "squeeze() (in module dpnp)": [[351, "dpnp.squeeze"]], "stack() (in module dpnp)": [[352, "dpnp.stack"]], "std() (in module dpnp)": [[353, "dpnp.std"]], "subtract() (in module dpnp)": [[354, "dpnp.subtract"]], "sum() (in module dpnp)": [[355, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[356, "dpnp.swapaxes"]], "take() (in module dpnp)": [[357, "dpnp.take"]], "take_along_axis() (in module dpnp)": [[358, "dpnp.take_along_axis"]], "tan() (in module dpnp)": [[359, "dpnp.tan"]], "tanh() (in module dpnp)": [[360, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[361, "dpnp.tensordot"]], "trace() (in module dpnp)": [[362, "dpnp.trace"]], "transpose() (in module dpnp)": [[363, "dpnp.transpose"]], "trapz() (in module dpnp)": [[364, "dpnp.trapz"]], "tri() (in module dpnp)": [[365, "dpnp.tri"]], "tril() (in module dpnp)": [[366, "dpnp.tril"]], "tril_indices() (in module dpnp)": [[367, "dpnp.tril_indices"]], "tril_indices_from() (in module dpnp)": [[368, "dpnp.tril_indices_from"]], "triu() (in module dpnp)": [[369, "dpnp.triu"]], "triu_indices() (in module dpnp)": [[370, "dpnp.triu_indices"]], "triu_indices_from() (in module dpnp)": [[371, "dpnp.triu_indices_from"]], "true_divide() (in module dpnp)": [[372, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[373, "dpnp.trunc"]], "unique() (in module dpnp)": [[374, "dpnp.unique"]], "unwrap() (in module dpnp)": [[375, "dpnp.unwrap"]], "vander() (in module dpnp)": [[376, "dpnp.vander"]], "var() (in module dpnp)": [[377, "dpnp.var"]], "vdot() (in module dpnp)": [[378, "dpnp.vdot"]], "vstack() (in module dpnp)": [[379, "dpnp.vstack"]], "where() (in module dpnp)": [[380, "dpnp.where"]], "zeros() (in module dpnp)": [[381, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[382, "dpnp.zeros_like"]], "dpnp.random": [[393, "module-dpnp.random"]]}})