Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/difference", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round_", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.sign", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.triu", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/difference.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round_.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table", "Array Creation Routines", "Difference with NumPy*", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_to", "dpnp.cbrt", "dpnp.ceil", "dpnp.concatenate", "dpnp.conj", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diagflat", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.fromfile", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.power", "dpnp.prod", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.right_shift", "dpnp.rollaxis", "dpnp.round_", "dpnp.searchsorted", "dpnp.sign", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.triu", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 6, 70, 183, 211, 214, 262, 270, 287], "api": [0, 2, 3, 6, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 251], "manag": 0, "specif": 0, "sycl": [0, 3, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "resourc": 0, "base": [0, 4, 110, 141, 143, 146, 151, 179], "python": [0, 2, 3, 70, 251], "packag": [0, 3, 283], "an": [0, 3, 4, 11, 15, 16, 18, 26, 27, 28, 30, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 49, 52, 70, 71, 72, 73, 74, 75, 76, 80, 107, 109, 111, 112, 120, 127, 131, 137, 139, 153, 155, 162, 163, 174, 175, 176, 178, 179, 183, 185, 190, 191, 193, 202, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 231, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 251, 252, 257, 259, 260, 261, 264, 270, 271, 272], "below": [0, 4, 137, 139, 259, 261], "demonstr": [0, 4], "how": [0, 4], "extens": [0, 1, 3, 4, 111, 273], "numpi": [0, 1, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 283], "can": [0, 3, 4, 12, 42, 44, 45, 68, 69, 70, 76, 107, 113, 114, 127, 128, 129, 147, 149, 150, 164, 172, 173, 177, 179, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 236, 237, 250], "easili": 0, "combin": [0, 80], "devic": [0, 2, 3, 18, 30, 33, 35, 70, 74, 75, 82, 108, 109, 142, 175, 176, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 247, 271, 272], "interfac": 0, "dpctl": [0, 4, 11, 12, 42, 43, 44, 45, 46, 56, 68, 69, 70, 75, 76, 109, 113, 114, 120, 127, 128, 129, 133, 143, 147, 148, 149, 150, 155, 157, 163, 164, 172, 173, 176, 177, 179, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 237, 242, 245, 246, 247, 250, 251, 257, 260, 261, 270, 272], "liter": 0, "queue": [0, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "from": [0, 3, 26, 27, 28, 32, 33, 54, 63, 64, 70, 79, 107, 157, 174, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 246, 247, 265, 270, 283], "allow": [0, 70], "set": [0, 30, 70, 74, 108, 137, 139, 175, 176, 271, 272], "input": [0, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 83, 95, 96, 97, 98, 99, 101, 102, 103, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 205, 211, 227, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 265, 267, 270, 271, 272], "current": [0, 11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 53, 60, 61, 62, 68, 69, 70, 71, 83, 102, 103, 106, 112, 117, 118, 119, 120, 127, 154, 160, 162, 164, 165, 166, 167, 168, 171, 179, 233, 234, 237, 241, 244, 250, 253, 255, 258, 263], "usabl": 0, "insid": 0, "context": 0, "": [0, 3, 4, 70, 85, 87, 91, 92, 96, 97, 99, 101, 137, 139, 141, 183, 184, 185, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 279], "scope": [0, 4], "thi": [0, 15, 16, 35, 36, 63, 70, 104, 105, 107, 111, 139, 161, 181, 216, 218, 236, 262, 268, 270], "wai": [0, 3, 4, 70, 107], "arrai": [0, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 91, 92, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 283], "creation": [0, 73, 273, 283], "function": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 32, 33, 35, 36, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 135, 138, 139, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 181, 182, 183, 186, 188, 189, 199, 204, 220, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 258, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 283], "dpnp": [0, 3, 4, 6, 8, 273, 276, 279, 283, 284, 287], "which": [0, 3, 4, 32, 33, 70, 130, 137, 139, 172, 247], "i": [0, 3, 4, 6, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 112, 117, 118, 120, 121, 122, 123, 124, 125, 127, 130, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 163, 165, 166, 167, 168, 169, 171, 172, 175, 176, 178, 180, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 265, 267, 270, 271, 272, 279], "defin": [0, 70], "alloc": [0, 3, 4, 163, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 247], "us": [0, 4, 28, 70, 76, 80, 102, 107, 110, 111, 113, 114, 128, 129, 130, 142, 147, 149, 151, 157, 172, 173, 183, 186, 188, 189, 199, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 224, 227, 236, 258], "import": [0, 3, 4, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 102, 103, 106, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 208, 217, 221, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 271, 272], "np": [0, 3, 4, 10, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 102, 103, 106, 108, 109, 110, 112, 113, 114, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 180, 182, 208, 217, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272], "device_context": 0, "opencl": 0, "gpu": [0, 3, 4], "x": [0, 3, 4, 10, 11, 13, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 65, 70, 71, 74, 75, 77, 78, 79, 80, 81, 83, 102, 106, 108, 109, 110, 112, 119, 120, 122, 123, 124, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 160, 162, 163, 165, 166, 171, 172, 175, 176, 177, 179, 201, 207, 232, 233, 234, 235, 236, 241, 242, 243, 245, 246, 247, 251, 252, 253, 254, 255, 258, 263, 264, 266, 270, 271, 272], "1": [0, 3, 4, 6, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 32, 33, 34, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 109, 110, 112, 114, 115, 118, 119, 121, 127, 128, 129, 133, 135, 138, 139, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 190, 192, 194, 196, 197, 198, 200, 201, 202, 205, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 222, 224, 227, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 271, 272], "2": [0, 3, 4, 10, 11, 12, 18, 20, 22, 26, 27, 28, 29, 30, 32, 33, 34, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 85, 91, 96, 99, 102, 103, 106, 112, 113, 114, 115, 119, 127, 128, 129, 133, 135, 138, 139, 141, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 191, 195, 201, 207, 210, 212, 223, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 271, 272], "3": [0, 3, 4, 6, 12, 18, 19, 26, 27, 28, 29, 30, 32, 33, 34, 40, 42, 45, 46, 47, 49, 51, 52, 55, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 102, 106, 112, 115, 117, 118, 119, 127, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 167, 168, 172, 173, 174, 176, 177, 179, 180, 183, 187, 191, 198, 201, 207, 210, 211, 212, 222, 226, 229, 232, 233, 234, 235, 236, 237, 238, 244, 245, 247, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 264, 265, 266, 267, 270, 272], "sum": [0, 3, 4, 6, 12, 62, 69, 70, 115, 152, 166, 168, 185, 200, 202, 256, 283], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279], "more": [0, 3, 4, 30, 137, 138, 260, 261], "inform": [0, 70], "pleas": [0, 3, 279], "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279], "document": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279], "time": [0, 12, 42, 44, 45, 68, 69, 76, 113, 114, 124, 127, 128, 129, 147, 149, 150, 164, 173, 177, 179, 185, 200, 237, 250], "def": 0, "run": [0, 4], "executor": 0, "size": [0, 6, 30, 55, 59, 60, 70, 110, 139, 142, 151, 175, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 247, 249, 267, 271], "test_typ": 0, "repetit": 0, "reshap": [0, 6, 26, 27, 34, 65, 70, 80, 153, 159, 207], "arang": [0, 6, 26, 27, 34, 40, 41, 64, 65, 70, 76, 78, 79, 81, 109, 110, 115, 142, 144, 145, 147, 148, 149, 150, 151, 153, 157, 159, 173, 176, 182, 207, 270, 272], "dtype": [0, 8, 11, 12, 18, 24, 30, 32, 33, 34, 35, 42, 43, 44, 45, 49, 53, 56, 59, 68, 70, 74, 75, 76, 82, 103, 106, 108, 109, 110, 112, 113, 114, 117, 118, 120, 127, 128, 129, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 160, 164, 169, 173, 175, 176, 179, 180, 183, 205, 211, 227, 234, 237, 242, 245, 246, 249, 250, 251, 256, 259, 267, 271, 272], "_": 0, "rang": [0, 115, 202, 207, 265, 283], "start_tim": 0, "perf_count": 0, "result": [0, 4, 10, 11, 12, 42, 43, 44, 45, 48, 53, 60, 61, 62, 68, 70, 71, 83, 102, 106, 112, 119, 120, 122, 123, 124, 127, 139, 147, 148, 149, 150, 154, 160, 162, 164, 165, 166, 171, 177, 179, 183, 185, 215, 234, 236, 237, 241, 250, 251, 255, 263], "end_tim": 0, "append": [0, 6, 67], "return": [0, 11, 12, 14, 15, 16, 18, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 56, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 82, 102, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 153, 155, 157, 159, 162, 163, 164, 165, 166, 172, 173, 175, 176, 177, 178, 179, 183, 186, 205, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 231, 232, 233, 234, 236, 237, 241, 242, 244, 245, 246, 247, 250, 251, 255, 256, 257, 260, 261, 268, 270, 271, 272], "median": [0, 6], "get_dtyp": 0, "_dtypes_list": 0, "int32": [0, 8, 42, 43, 44, 45, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 120, 183, 185, 193, 195, 200, 202, 208, 211, 227], "int64": [0, 8, 42, 43, 44, 45, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 120], "float32": [0, 8, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 183, 205, 210, 212, 213, 215, 216, 218, 224, 227], "select_default_devic": 0, "has_aspect_fp64": 0, "float64": [0, 8, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 183, 184, 187, 190, 191, 192, 194, 196, 197, 198, 205, 206, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 259], "test_repetit": 0, "5": [0, 6, 13, 18, 25, 26, 29, 34, 40, 41, 42, 44, 45, 48, 49, 51, 55, 58, 60, 61, 62, 65, 68, 70, 71, 77, 102, 106, 110, 112, 115, 117, 127, 133, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 172, 174, 175, 176, 179, 183, 184, 185, 187, 190, 202, 206, 207, 208, 209, 212, 215, 230, 232, 233, 236, 237, 238, 241, 251, 255, 257, 259, 260, 261, 263, 265, 266, 270, 271, 272], "type_nam": 0, "name": [0, 6], "print": [0, 4, 12, 30, 33, 41, 49, 51, 68, 74, 115, 164, 183, 202, 207, 250, 264], "f": [0, 6, 70, 74, 75, 82, 108, 109, 175, 176, 204, 236, 271, 272], "test": [0, 2, 13, 17, 122, 123, 124, 185, 283], "type": [0, 3, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 83, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 263, 265, 267, 270, 271, 272, 273, 283], "each": [0, 11, 41, 56, 70, 133, 134, 157, 185, 202, 242, 245], "64": [0, 4, 29], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 11, 12, 13, 14, 17, 24, 30, 31, 42, 43, 44, 45, 52, 53, 54, 56, 59, 68, 70, 76, 80, 103, 106, 110, 113, 114, 115, 117, 120, 121, 122, 123, 124, 125, 127, 128, 129, 137, 139, 141, 142, 143, 147, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 164, 173, 179, 180, 188, 234, 236, 237, 242, 245, 246, 250, 251, 262, 266, 270], "els": 0, "msg": 0, "n": [0, 4, 67, 71, 82, 84, 86, 87, 89, 90, 92, 94, 95, 97, 98, 100, 101, 118, 137, 139, 157, 185, 200, 202, 212, 222, 246, 259, 266], "4": [0, 12, 13, 18, 29, 30, 34, 40, 42, 44, 49, 51, 56, 60, 61, 62, 65, 66, 68, 70, 71, 74, 76, 79, 103, 106, 108, 110, 112, 113, 114, 115, 117, 129, 142, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 172, 174, 176, 179, 180, 183, 184, 187, 207, 212, 228, 232, 234, 235, 236, 238, 241, 244, 245, 249, 250, 251, 255, 257, 258, 260, 261, 266, 267, 270, 272], "3e": 0, "ratio": 0, "6": [0, 4, 12, 18, 26, 27, 29, 34, 44, 45, 49, 53, 60, 61, 62, 64, 65, 68, 70, 71, 76, 81, 83, 109, 141, 142, 151, 165, 166, 172, 176, 182, 183, 200, 202, 207, 212, 232, 236, 238, 251, 255, 258, 260, 261, 265, 270, 272], "2f": 0, "__name__": 0, "__main__": 0, "try": [0, 4], "gpu_queu": 0, "get_sycl_devic": [0, 183], "print_device_info": 0, "except": [0, 4, 70, 236], "importerror": 0, "data": [1, 3, 4, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 68, 69, 70, 71, 76, 77, 78, 79, 81, 83, 102, 103, 106, 107, 112, 113, 114, 117, 120, 121, 122, 123, 124, 127, 128, 129, 133, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 177, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 263, 265, 267, 270, 273, 283], "parallel": [1, 3, 4, 273], "overview": 2, "quick": [2, 3], "start": [2, 3, 18, 110, 142, 151, 238], "guid": [2, 3], "driver": 2, "interpret": 2, "instal": 2, "exampl": [2, 3, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 102, 103, 106, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 271, 272], "multi": [2, 70, 85, 87, 91, 92, 96, 97, 99, 101, 158, 174, 273], "dimension": [2, 4, 37, 51, 55, 66, 70, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 157, 158, 174, 251, 273], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 81, 83, 102, 103, 106, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 179, 182, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 265, 267, 270, 273], "univers": [2, 273], "ufunc": [2, 273], "routin": [2, 273], "special": [2, 77, 273, 283], "differ": [2, 3, 67, 70, 71, 134, 139, 152, 250, 273, 283], "comparison": [2, 76, 113, 114, 128, 129, 173, 273, 283], "tabl": [2, 139, 273], "miscellan": [2, 273, 283], "c": [2, 4, 30, 32, 33, 34, 36, 52, 70, 74, 75, 82, 108, 109, 111, 152, 175, 176, 232, 236, 271, 272], "backend": [2, 111, 186, 188, 189, 199, 204, 220], "The": [3, 4, 12, 15, 16, 18, 26, 27, 50, 56, 59, 68, 70, 71, 76, 80, 113, 114, 118, 128, 129, 133, 134, 138, 139, 143, 147, 149, 163, 164, 173, 179, 183, 186, 188, 189, 199, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 236, 242, 250, 251, 270, 283], "librari": [3, 4], "implement": [3, 6], "subset": [3, 247, 283], "execut": [3, 4, 11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 32, 33, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 82, 83, 102, 103, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 135, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 186, 188, 189, 199, 204, 220, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 258, 260, 261, 263, 267, 270, 271, 272], "ani": [3, 6, 13, 15, 16, 70, 183, 227, 245], "drop": 3, "replac": [3, 35, 188], "core": 3, "numer": [3, 4, 283], "being": 3, "develop": [3, 4], "part": [3, 50, 162], "intel": [3, 4], "ai": 3, "analyt": 3, "toolkit": 3, "distribut": [3, 4, 151, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 283], "also": [3, 80, 221], "avail": [3, 4, 273], "anaconda": 3, "cloud": 3, "page": [3, 283], "learn": [3, 4], "Being": 3, "mean": [3, 6, 40, 70, 139, 156, 183, 196, 198, 201, 205, 224, 228, 229, 236, 249, 267, 283], "usag": [3, 4], "veri": [3, 157], "similar": [3, 32, 33, 110, 142, 151, 183, 211], "class": [3, 70, 183, 211, 245, 246, 259], "compat": [3, 236, 283], "altern": [3, 4, 152], "abov": [3, 260], "instanc": [3, 70, 157, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "creat": [3, 4, 30, 32, 33, 66, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "ident": [3, 6, 222], "one": [3, 4, 30, 35, 37, 51, 54, 55, 70, 74, 76, 84, 86, 89, 90, 94, 95, 98, 100, 108, 139, 143, 146, 157, 165, 176, 202, 247, 271], "kei": [3, 28, 70, 244], "memori": [3, 32, 33, 34, 70, 236], "default": [3, 11, 12, 13, 17, 18, 24, 26, 27, 28, 29, 30, 32, 33, 35, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 58, 59, 67, 68, 70, 71, 74, 75, 76, 82, 84, 90, 103, 106, 108, 109, 110, 113, 114, 117, 120, 122, 123, 124, 127, 128, 129, 137, 139, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 164, 169, 173, 175, 176, 178, 179, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 234, 236, 237, 240, 242, 245, 246, 249, 250, 251, 256, 267, 271, 272], "system": [3, 4], "integr": [3, 4, 162, 258], "discret": [3, 51, 55, 67, 71, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 183, 273], "otherwis": [3, 11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 31, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 74, 75, 76, 77, 82, 83, 102, 103, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 135, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 258, 260, 261, 263, 267, 270, 271, 272], "host": [3, 4, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227], "do": [3, 4, 185], "have": [3, 4, 31, 46, 163, 202], "most": [3, 4, 247], "manipul": [3, 273, 283], "ar": [3, 4, 8, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 37, 40, 42, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 83, 102, 103, 106, 107, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 177, 178, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 211, 214, 215, 217, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263, 265, 267, 270], "done": 3, "see": [3, 70, 139, 200, 239], "complet": [3, 4], "list": [3, 6, 70, 235], "support": [3, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 135, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 265, 267, 270, 271, 272, 287], "along": [3, 4, 13, 15, 16, 17, 26, 27, 40, 49, 61, 62, 67, 70, 71, 119, 139, 153, 155, 156, 159, 165, 166, 169, 238, 248, 249, 255, 256, 258, 267], "limit": [3, 8, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 135, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 211, 214, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 265, 267, 270, 271, 272], "To": 4, "program": [4, 102], "beyond": 4, "cpu": [4, 11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 82, 83, 102, 103, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 135, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 258, 260, 261, 263, 267, 270, 271, 272], "you": 4, "need": [4, 70, 111], "appropri": [4, 111, 183, 211, 214], "hardwar": 4, "work": [4, 15, 16, 35, 36, 63, 104, 105, 161, 181, 262, 268], "fine": 4, "laptop": 4, "graphic": 4, "In": [4, 26, 27, 70, 130, 183, 227, 236], "major": [4, 32, 33, 34, 70], "case": [4, 26, 27, 141, 236], "your": 4, "window": 4, "alreadi": 4, "ha": [4, 89, 94, 247, 251], "all": [4, 6, 17, 31, 70, 78, 130, 185, 245, 247], "necessari": [4, 54, 236], "But": 4, "want": 4, "up": 4, "date": [4, 70], "alwai": [4, 32, 236], "updat": 4, "latest": 4, "follow": [4, 8, 80, 283], "instruct": 4, "step": [4, 18, 110, 142, 151], "8": [4, 14, 47, 65, 121, 141, 142, 151, 165, 183, 207, 226, 242, 255, 258, 260, 261, 266, 270], "9": [4, 53, 58, 65, 68, 70, 83, 103, 141, 152, 164, 179, 183, 185, 187, 207, 245, 255, 260, 261, 266, 270], "10": [4, 20, 22, 26, 27, 29, 52, 62, 70, 108, 110, 115, 127, 143, 146, 151, 156, 168, 183, 185, 195, 207, 237, 260, 261, 270], "If": [4, 35, 69, 70, 137, 138, 139, 155, 183, 205, 227, 235, 236, 245, 251], "yet": [4, 6], "easiest": 4, "It": 4, "essenti": 4, "machin": 4, "optim": [4, 73], "includ": [4, 111, 151, 183, 227], "anoth": [4, 54], "vendor": 4, "too": 4, "manual": 4, "shown": 4, "next": 4, "section": 4, "recommend": [4, 172], "org": 4, "channel": 4, "command": 4, "forg": 4, "pip": 4, "http": 4, "pypi": 4, "simpl": [4, 150, 283], "These": [4, 80, 283], "its": [4, 6, 50, 70, 84, 90, 117, 133, 134, 220, 236, 257], "depend": [4, 35, 133, 139, 270], "control": 4, "requir": [4, 6, 34, 70], "compil": [4, 111], "runtim": 4, "onemkl": 4, "befor": [4, 70], "strongli": 4, "advis": 4, "version": [4, 70, 172], "activ": 4, "local": 4, "environ": 4, "env": 4, "And": [4, 70], "sourc": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "recip": 4, "finanli": 4, "setuptool": 4, "o": 4, "On": 4, "linux": 4, "cython": 4, "dpcpp_linux": 4, "mkl": 4, "devel": 4, "dpcpp": 4, "tbb": 4, "onedpl": 4, "cmake": 4, "ninja": 4, "pytest": 4, "dpcpp_win": 4, "setup": 4, "py": 4, "g": [4, 70, 183], "dcmake_c_compil": 4, "path": 4, "icx": 4, "dcmake_cxx_compil": 4, "icpx": 4, "script": 4, "build_loc": 4, "suit": 4, "calcul": [4, 10, 11, 67, 71, 78, 83, 102, 104, 105, 106, 154, 160, 161, 167, 168, 179, 180, 234, 245], "asarrai": [4, 6, 32, 36], "y": [4, 11, 12, 42, 43, 44, 45, 46, 52, 56, 59, 60, 68, 69, 70, 80, 112, 120, 127, 143, 155, 157, 162, 164, 172, 179, 236, 237, 242, 245, 246, 250, 251, 257, 258, 270], "locat": [4, 111, 194, 196], "same": [4, 12, 15, 16, 31, 35, 36, 42, 44, 45, 46, 63, 68, 69, 70, 75, 76, 80, 104, 105, 109, 113, 114, 127, 128, 129, 147, 148, 149, 150, 161, 163, 164, 173, 176, 177, 179, 181, 183, 205, 211, 227, 237, 245, 246, 247, 250, 262, 268, 272], "shape": [4, 6, 26, 27, 30, 31, 34, 46, 54, 55, 59, 60, 70, 74, 75, 80, 108, 109, 135, 137, 141, 147, 148, 149, 150, 152, 153, 159, 163, 175, 176, 183, 192, 195, 200, 201, 206, 210, 211, 212, 213, 214, 215, 216, 218, 223, 224, 230, 234, 236, 238, 245, 246, 247, 252, 257, 271, 272, 283], "0": [4, 6, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 41, 43, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 64, 65, 66, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 100, 102, 103, 106, 109, 110, 112, 115, 117, 118, 119, 120, 122, 123, 124, 133, 135, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 155, 157, 158, 159, 162, 163, 165, 166, 169, 172, 174, 175, 176, 182, 183, 185, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 205, 207, 208, 209, 210, 213, 215, 216, 217, 218, 221, 224, 226, 227, 228, 233, 234, 235, 238, 239, 241, 242, 243, 246, 247, 248, 249, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 265, 267, 270, 271, 272], "expect": 4, "comput": [4, 20, 21, 24, 40, 42, 43, 44, 45, 48, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 115, 119, 120, 131, 132, 134, 138, 139, 140, 147, 148, 149, 150, 155, 156, 161, 169, 249, 251, 253, 254, 255, 263, 267], "paradigm": 4, "empti": [4, 6, 30, 70, 75, 108, 109, 155, 175, 176, 271, 272], "found": 4, "here": 6, "correspond": [6, 26, 27, 70, 133, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "column": [6, 32, 33, 34, 70, 116, 133, 138], "v1": 6, "23": [6, 183], "v0": 6, "12": [6, 26, 27, 207, 260, 261], "cupi": 6, "v8": 6, "397": 6, "208": 6, "286": 6, "56": 6, "29": 6, "47": 6, "20": [6, 127, 185, 200], "13": [6, 26, 27, 43, 70, 120, 166], "16": [6, 42, 112, 164, 179, 253], "21": [6, 62], "18": [6, 71], "51": 6, "48": [6, 165], "total": [6, 70], "545": 6, "316": [6, 151], "415": 6, "ab": [6, 11, 83], "absolut": [6, 10, 83], "add": 6, "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "allclos": [6, 31, 121, 141], "alltru": 6, "amax": [6, 16, 26], "amin": [6, 15, 27], "angl": [6, 23, 24, 63, 64, 181, 182, 265], "apply_along_axi": 6, "apply_over_ax": 6, "arcco": [6, 21], "arccosh": 6, "arcsin": [6, 19, 242], "arcsinh": [6, 20], "arctan": [6, 19, 21, 24], "arctan2": [6, 21, 23], "arctanh": [6, 20], "argmax": [6, 15, 27, 70], "argmin": [6, 16, 26, 70], "argpartit": [6, 28], "argsort": [6, 70, 244, 257], "argwher": 6, "around": [6, 70, 239], "array2str": 6, "array_equ": 6, "array_equiv": [6, 31], "array_repr": 6, "array_split": 6, "array_str": 6, "asanyarrai": [6, 33], "asarray_chkfinit": [6, 32, 33], "ascontiguousarrai": [6, 32, 33], "asfarrai": [6, 32, 33], "asfortranarrai": [6, 32, 33, 34], "asmatrix": 6, "atleast_1d": [6, 80], "atleast_2d": [6, 80], "atleast_3d": [6, 80], "averag": [6, 70, 155], "bartlett": 6, "base_repr": 6, "binary_repr": 6, "bincount": 6, "bitwise_and": [6, 43, 44, 45, 120, 147], "bitwise_not": 6, "bitwise_or": [6, 42, 43, 45, 120, 149], "bitwise_xor": [6, 42, 43, 44, 120, 150], "blackman": 6, "block": 6, "bmat": 6, "broadcast_arrai": 6, "broadcast_shap": 6, "broadcast_to": 6, "busday_count": 6, "busday_offset": 6, "byte_bound": 6, "can_cast": 6, "cbrt": 6, "ceil": [6, 102, 103, 263], "choos": [6, 21, 23, 24, 70], "clip": 6, "column_stack": 6, "common_typ": 6, "compare_chararrai": 6, "compress": 6, "concaten": 6, "conj": [6, 70], "conjug": [6, 50, 69, 70, 130, 133, 152], "convolv": [6, 55], "copi": [6, 30, 54, 70, 157, 178, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 236, 244, 247, 260, 261], "copysign": 6, "copyto": 6, "corrcoef": [6, 59], "correl": [6, 283], "co": [6, 19, 21, 242], "cosh": [6, 20], "count_nonzero": [6, 172], "cov": [6, 201], "cross": [6, 55], "cumprod": [6, 165], "cumproduct": 6, "cumsum": [6, 70, 166], "datetime_as_str": 6, "datetime_data": 6, "deg2rad": [6, 181, 182, 265], "degre": [6, 63, 181, 182, 225, 265], "delet": 6, "deprec": 6, "deprecate_with_doc": 6, "diag": [6, 141], "diag_indic": 6, "diag_indices_from": 6, "diagflat": 6, "diagon": [6, 65, 66, 70, 82, 118, 130, 256, 259, 260, 261], "diff": [6, 71, 115], "digit": 6, "disp": 6, "divid": [6, 103, 106, 135, 161, 234, 262], "divmod": 6, "dot": [6, 70, 72, 73, 119, 136, 138, 141, 152, 255, 268], "dsplit": 6, "dstack": 6, "ediff1d": 6, "einsum": [6, 73, 119, 152, 177, 255], "einsum_path": [6, 72], "empty_lik": [6, 30, 74, 109, 176, 272], "equal": [6, 13, 14, 17, 31, 54, 55, 59, 70, 103, 113, 114, 121, 128, 129, 135, 173, 183, 193, 227, 234, 244, 247], "exp": [6, 143, 145], "exp2": [6, 78], "expand_dim": [6, 26, 27], "expm1": [6, 78, 145], "extract": [6, 65], "ey": [6, 50, 150], "fab": 6, "fastcopyandtranspos": 6, "fill_diagon": 6, "find_common_typ": 6, "fix": 6, "flatnonzero": [6, 172], "flip": [6, 185], "fliplr": 6, "flipud": 6, "float_pow": 6, "floor": [6, 48, 103, 234, 263], "floor_divid": [6, 106, 161], "fmax": [6, 15, 16, 105, 154, 160, 179], "fmin": [6, 15, 16, 104, 154, 160, 179], "fmod": [6, 104, 105, 154, 160, 161, 179, 234], "format_float_posit": 6, "format_float_scientif": 6, "frexp": 6, "from_dlpack": 6, "frombuff": 6, "fromfil": 6, "fromfunct": [6, 32, 33], "fromit": [6, 32, 33], "frompyfunc": 6, "fromregex": 6, "fromstr": 6, "full": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "full_lik": [6, 30, 75, 108, 176, 272], "gcd": 6, "genfromtxt": 6, "geomspac": [6, 142, 151], "get_array_wrap": 6, "get_includ": 6, "get_printopt": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "gradient": 6, "greater": [6, 70, 76, 114, 128, 129, 137, 173], "greater_equ": [6, 76, 113, 128, 129, 173], "ham": 6, "han": 6, "heavisid": 6, "histogram": [6, 283], "histogram2d": 6, "histogram_bin_edg": 6, "histogramdd": 6, "hsplit": 6, "hstack": 6, "hypot": 6, "i0": 6, "imag": 6, "in1d": 6, "indic": [6, 15, 16, 26, 27, 28, 70, 172, 236, 240, 241, 257], "info": 6, "inner": [6, 72, 73, 177], "insert": [6, 80, 240], "interp": 6, "intersect1d": 6, "invert": [6, 43], "is_busdai": 6, "isclos": 6, "iscomplex": 6, "iscomplexobj": 6, "isfinit": [6, 123, 124], "isfortran": 6, "isin": 6, "isinf": [6, 122, 124], "isnan": [6, 122, 123], "isnat": [6, 124], "isneginf": [6, 122, 123, 124], "isposinf": [6, 122, 123, 124], "isreal": 6, "isrealobj": 6, "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "iter": [6, 32, 33, 70], "ix_": 6, "kaiser": 6, "kron": 6, "lcm": 6, "ldexp": 6, "left_shift": [6, 237], "less": [6, 76, 113, 114, 129, 173, 235], "less_equ": [6, 76, 113, 114, 128, 173], "lexsort": [6, 28, 70, 244], "linspac": [6, 18, 77, 110, 151, 157, 265], "load": 6, "loadtxt": 6, "log": [6, 81, 110, 142, 146, 151, 198], "log10": [6, 143, 146], "log1p": [6, 81, 143, 146], "log2": [6, 143], "logaddexp": 6, "logaddexp2": 6, "logical_and": [6, 42, 148, 149, 150], "logical_not": [6, 43, 120, 147, 149, 150], "logical_or": [6, 44, 147, 148, 150], "logical_xor": [6, 45, 147, 148, 149], "logspac": [6, 110, 142], "lookfor": 6, "mask_indic": 6, "mat": 6, "matmul": [6, 141], "max": [6, 15, 26, 70, 137, 200], "maximum": [6, 15, 16, 26, 27, 70, 104, 105, 153, 160, 179], "maximum_sctyp": 6, "may_share_memori": 6, "meshgrid": [6, 158, 174], "min": [6, 16, 27, 70], "min_scalar_typ": 6, "minimum": [6, 15, 16, 26, 27, 70, 104, 105, 154, 159, 179], "mintypecod": 6, "mod": 6, "modf": 6, "moveaxi": [6, 238, 257], "msort": 6, "multipli": 6, "nan_to_num": 6, "nanargmax": 6, "nanargmin": 6, "nancumprod": [6, 166], "nancumsum": 6, "nanmax": [6, 15, 16], "nanmean": [6, 155, 249, 267], "nanmedian": 6, "nanmin": [6, 15, 16], "nanpercentil": 6, "nanprod": 6, "nanquantil": 6, "nanstd": [6, 155, 249, 267], "nansum": 6, "nanvar": [6, 155, 249, 267], "ndim": [6, 30, 34, 59, 70, 175, 238, 252, 271], "neg": [6, 13, 17, 41, 122, 123, 124, 179, 202, 245], "nested_it": 6, "nextaft": 6, "nonzero": [6, 70, 270], "not_equ": [6, 76, 113, 114, 128, 129], "obj2sctyp": 6, "ones": [6, 30, 74, 75, 76, 80, 82, 108, 109, 117, 118, 152, 167, 176, 238, 257, 259, 271, 272], "ones_lik": [6, 30, 75, 109, 175, 272], "outer": [6, 72, 73, 126], "packbit": 6, "pad": [6, 273, 283], "partit": [6, 70, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 244], "percentil": [6, 156], "piecewis": 6, "place": [6, 70, 220, 236], "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "posit": [6, 13, 17, 32, 33, 42, 70, 80, 122, 123, 124, 130, 163, 179, 185, 209, 238, 245, 246, 257], "power": [6, 79, 136, 246], "printopt": 6, "prod": [6, 70, 167], "product": [6, 60, 61, 69, 72, 73, 119, 126, 136, 138, 152, 164, 165, 177, 180, 255, 268, 283], "promote_typ": 6, "ptp": 6, "put": 6, "put_along_axi": 6, "putmask": 6, "quantil": 6, "rad2deg": [6, 63, 64, 265], "radian": [6, 63, 64, 181, 265], "ravel": [6, 70, 139], "ravel_multi_index": 6, "real": [6, 95, 96, 97, 98, 99, 101, 130, 133, 134, 137, 185, 202, 245, 283], "real_if_clos": 6, "recfromcsv": 6, "recfromtxt": 6, "reciproc": 6, "remaind": [6, 103, 104, 105, 106, 154, 160, 161, 179], "repeat": [6, 133, 134], "resiz": [6, 80], "result_typ": 6, "right_shift": [6, 127], "rint": 6, "roll": [6, 238], "rollaxi": 6, "root": [6, 42, 47, 245, 246], "rot90": 6, "round": [6, 29, 70, 102, 103, 234, 239, 263, 283], "round_": 6, "row_stack": 6, "safe_ev": 6, "save": 6, "savetxt": 6, "savez": 6, "savez_compress": 6, "sctype2char": 6, "searchsort": [6, 244], "select": [6, 247], "set_numeric_op": 6, "set_printopt": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setxor1d": 6, "shares_memori": 6, "show_config": 6, "sign": [6, 50, 53], "signbit": 6, "sin": [6, 21, 157], "sinc": 6, "sinh": [6, 20, 242], "sometru": 6, "sort": [6, 28, 70, 240, 257, 273, 283], "sort_complex": 6, "space": [6, 18, 110, 142, 151], "split": [6, 283], "sqrt": [6, 246], "squar": [6, 42, 118, 130, 132, 133, 136, 187, 203, 245], "squeez": [6, 70, 80], "stack": [6, 116, 137, 269], "std": [6, 70, 155, 267], "subtract": 6, "swapax": [6, 163], "take": [6, 70, 236], "take_along_axi": [6, 26, 27, 28], "tan": [6, 21, 24], "tanh": [6, 20], "tensordot": [6, 69, 119, 152], "tile": [6, 235, 283], "trace": 6, "transpos": [6, 70, 130, 163, 283], "trapz": 6, "tri": 6, "tril": 6, "tril_indic": 6, "tril_indices_from": 6, "trim_zero": 6, "triu": 6, "triu_indic": 6, "triu_indices_from": 6, "true_divid": 6, "trunc": [6, 48, 102], "typenam": 6, "union1d": 6, "uniqu": [6, 41], "unpackbit": 6, "unravel_index": [6, 26, 27], "unwrap": [6, 63, 181], "vander": 6, "var": [6, 70, 155, 249], "vdot": [6, 69, 152], "vsplit": 6, "vstack": 6, "where": [6, 11, 12, 13, 17, 24, 42, 43, 44, 45, 53, 54, 56, 68, 70, 76, 102, 103, 106, 113, 114, 117, 120, 121, 122, 123, 124, 127, 128, 129, 130, 140, 143, 147, 148, 149, 150, 153, 154, 155, 159, 160, 164, 173, 179, 180, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 234, 237, 240, 242, 245, 246, 250, 251], "who": 6, "zero": [6, 13, 17, 30, 58, 74, 75, 82, 88, 93, 102, 108, 109, 137, 141, 163, 168, 172, 175, 176, 179, 183, 185, 213, 215, 216, 218, 251, 259, 260, 261, 272], "zeros_lik": [6, 30, 75, 109, 176, 271], "astyp": [6, 70, 172], "byteswap": 6, "dump": 6, "fill": [6, 30, 70, 74, 75, 108, 109, 175, 176, 271, 272], "flatten": [6, 66, 70, 172, 232], "getfield": 6, "item": [6, 70], "itemset": 6, "newbyteord": 6, "setfield": 6, "setflag": 6, "tobyt": 6, "tofil": [6, 107], "tolist": 6, "tostr": 6, "view": [6, 38, 39, 70, 236, 247, 257], "linalg": [6, 246], "choleski": 6, "cond": 6, "det": 6, "eig": [6, 133, 134], "eigh": 6, "eigval": [6, 133], "eigvalsh": 6, "inv": 6, "lstsq": 6, "matrix_pow": [6, 246], "matrix_rank": 6, "multi_dot": 6, "norm": [6, 84, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 283], "pinv": 6, "qr": 6, "slogdet": 6, "solv": [6, 283], "svd": [6, 137], "tensorinv": 6, "tensorsolv": 6, "fft": [6, 273, 283], "fft2": 6, "fftfreq": 6, "fftn": 6, "fftshift": 6, "hfft": 6, "ifft": 6, "ifft2": 6, "ifftn": 6, "ifftshift": 6, "ihfft": 6, "irfft": 6, "irfft2": 6, "irfftn": 6, "register_func": 6, "restore_al": 6, "restore_func": 6, "rfft": 6, "rfft2": 6, "rfftfreq": 6, "rfftn": 6, "beta": [6, 194], "binomi": [6, 202], "byte": [6, 70], "chisquar": 6, "choic": [6, 70], "default_rng": 6, "dirichlet": 6, "exponenti": [6, 143, 196, 222], "gamma": [6, 223], "geometr": [6, 110, 142], "get_stat": [6, 183], "gumbel": 6, "hypergeometr": 6, "laplac": 6, "logist": 6, "lognorm": 6, "logseri": 6, "multinomi": 6, "multivariate_norm": 6, "negative_binomi": 6, "noncentral_chisquar": 6, "noncentral_f": 6, "normal": [6, 59, 133, 183, 198, 201, 212, 224], "pareto": 6, "permut": [6, 70, 163, 257, 283], "poisson": 6, "rand": [6, 183, 213, 215, 216, 218], "randint": [6, 70, 183, 214], "randn": [6, 141, 183], "random_integ": [6, 183, 211], "random_sampl": [6, 183, 210, 213, 216, 218], "ranf": 6, "rayleigh": 6, "seed": [6, 70, 183], "set_stat": 6, "shuffl": 6, "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 183, 212], "standard_t": 6, "triangular": [6, 130, 140], "uniform": [6, 183, 210, 213, 215, 216, 218], "vonmis": 6, "wald": 6, "weibul": [6, 231], "zipf": 6, "bool": [8, 35, 42, 43, 44, 45, 70, 76, 113, 114, 120, 122, 123, 124, 128, 129, 137, 139, 172, 173, 236], "complex128": [8, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "nan": [8, 13, 15, 16, 17, 32, 33, 122, 123, 124, 155, 165, 166, 167, 168, 169, 245, 249, 267, 283], "arg": [10, 72, 104, 105, 161, 183, 262, 268], "kwarg": [10, 11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 50, 53, 56, 60, 61, 62, 68, 69, 70, 72, 76, 78, 83, 102, 103, 104, 105, 106, 107, 112, 113, 114, 117, 119, 120, 122, 123, 124, 127, 128, 129, 143, 147, 148, 149, 150, 152, 154, 160, 161, 162, 164, 165, 166, 167, 168, 171, 173, 179, 233, 234, 237, 241, 242, 244, 245, 246, 250, 253, 255, 258, 259, 262, 263, 264, 268], "valu": [10, 11, 12, 13, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 30, 32, 33, 40, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 58, 59, 67, 68, 70, 71, 74, 75, 76, 82, 83, 84, 90, 102, 103, 106, 108, 109, 110, 113, 114, 117, 120, 122, 123, 124, 127, 128, 129, 130, 134, 137, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 164, 169, 172, 173, 175, 176, 178, 179, 183, 193, 210, 211, 227, 234, 235, 236, 237, 240, 242, 245, 246, 249, 250, 251, 255, 256, 263, 265, 267, 271, 272, 283], "element": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 31, 41, 42, 43, 44, 45, 47, 48, 50, 53, 56, 57, 61, 62, 68, 70, 71, 76, 78, 79, 81, 83, 102, 104, 105, 106, 113, 114, 120, 121, 122, 123, 124, 127, 128, 129, 130, 135, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 160, 161, 162, 164, 165, 166, 171, 172, 173, 179, 180, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 250, 251, 253, 254, 260, 261, 262, 263, 264, 270, 283], "wise": [10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 31, 42, 43, 44, 45, 47, 48, 50, 53, 56, 57, 68, 70, 76, 78, 79, 81, 83, 102, 104, 105, 106, 113, 114, 116, 120, 121, 122, 123, 124, 127, 128, 129, 135, 143, 144, 145, 146, 147, 148, 149, 150, 154, 160, 161, 162, 164, 171, 173, 179, 233, 234, 237, 241, 242, 243, 245, 246, 250, 253, 254, 262, 263, 269], "note": [10, 13, 15, 16, 17, 26, 27, 35, 36, 63, 70, 80, 102, 104, 105, 122, 139, 151, 161, 172, 181, 186, 188, 189, 199, 204, 236, 262, 268], "shorthand": [10, 76, 113, 114, 128, 129, 147, 149, 173, 270], "out": [11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 42, 43, 44, 45, 47, 48, 49, 53, 56, 57, 59, 64, 68, 69, 70, 76, 77, 78, 79, 81, 102, 103, 106, 113, 114, 117, 120, 121, 122, 123, 124, 127, 128, 129, 138, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 159, 160, 163, 164, 169, 172, 173, 177, 179, 180, 182, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 232, 233, 234, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 263, 265, 267], "none": [11, 12, 13, 15, 16, 17, 18, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 53, 56, 58, 59, 60, 68, 69, 70, 71, 74, 75, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 113, 114, 115, 117, 118, 120, 122, 123, 124, 127, 128, 129, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 164, 169, 173, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 263, 266, 267, 270, 271, 272], "subok": [11, 12, 30, 43, 46, 52, 56, 68, 70, 75, 76, 103, 109, 113, 114, 120, 128, 129, 143, 147, 148, 149, 150, 164, 173, 176, 179, 242, 245, 246, 250, 272], "contain": [11, 18, 42, 43, 44, 45, 70, 111, 120, 127, 133, 155, 183, 237, 245, 251], "paramet": [11, 12, 13, 14, 17, 18, 24, 26, 27, 29, 30, 32, 33, 42, 43, 44, 45, 46, 48, 52, 53, 54, 56, 58, 60, 61, 62, 67, 68, 69, 70, 71, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 250, 251, 252, 255, 256, 258, 260, 261, 263, 270, 271, 272], "onli": [11, 13, 17, 18, 26, 27, 28, 30, 32, 33, 40, 52, 54, 55, 56, 58, 59, 67, 71, 74, 75, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 108, 109, 110, 122, 123, 124, 127, 130, 142, 143, 148, 151, 153, 156, 157, 159, 169, 175, 176, 178, 183, 205, 211, 227, 236, 237, 238, 240, 242, 249, 255, 256, 260, 261, 267, 270, 271, 272], "either": [11, 12, 14, 24, 42, 43, 44, 45, 46, 53, 56, 68, 69, 76, 103, 106, 113, 114, 117, 120, 121, 127, 128, 129, 139, 143, 147, 148, 149, 150, 154, 155, 157, 160, 163, 164, 172, 173, 177, 179, 219, 234, 235, 237, 242, 245, 246, 247, 250, 251, 257, 270], "tensor": [11, 12, 42, 43, 44, 45, 46, 56, 68, 69, 70, 75, 76, 109, 113, 114, 119, 120, 127, 128, 129, 133, 143, 147, 148, 149, 150, 155, 157, 163, 164, 172, 173, 176, 177, 179, 237, 242, 245, 246, 247, 250, 251, 255, 257, 260, 261, 270, 272], "usm_ndarrai": [11, 12, 42, 43, 44, 45, 46, 56, 68, 69, 70, 75, 76, 109, 113, 114, 120, 127, 128, 129, 133, 143, 147, 148, 149, 150, 155, 157, 163, 164, 172, 173, 176, 177, 179, 236, 237, 242, 245, 246, 247, 250, 251, 257, 260, 261, 270, 272], "keyword": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 53, 60, 61, 62, 68, 69, 71, 83, 102, 103, 106, 112, 117, 119, 120, 127, 154, 160, 162, 164, 165, 166, 167, 168, 171, 179, 233, 234, 237, 241, 244, 250, 253, 255, 258, 263], "argument": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 53, 60, 61, 62, 68, 69, 70, 71, 77, 83, 102, 103, 106, 112, 117, 119, 120, 127, 135, 138, 154, 160, 162, 164, 165, 166, 167, 168, 171, 179, 233, 234, 237, 241, 244, 250, 253, 255, 258, 263], "unsupport": [11, 12, 14, 21, 23, 24, 42, 43, 44, 45, 48, 53, 60, 61, 62, 68, 69, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 112, 117, 119, 120, 127, 138, 154, 160, 162, 164, 165, 166, 167, 168, 171, 179, 180, 233, 234, 237, 241, 244, 250, 253, 255, 258, 263], "sequenti": [11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 82, 83, 102, 103, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 135, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 258, 260, 261, 263, 267, 270, 271, 272], "dp": [11, 12, 13, 17, 43, 46, 68, 69, 70, 120, 133, 164, 179, 236, 250, 257, 270], "x1": [12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 35, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 109, 112, 113, 114, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 132, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 173, 176, 177, 178, 179, 180, 181, 182, 220, 232, 233, 234, 235, 237, 238, 240, 241, 243, 244, 249, 250, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 265, 266, 267, 272], "x2": [12, 13, 14, 17, 21, 23, 24, 30, 42, 44, 45, 53, 55, 60, 68, 69, 76, 103, 106, 110, 113, 114, 117, 119, 121, 126, 127, 128, 129, 142, 147, 148, 149, 150, 151, 152, 154, 157, 160, 164, 172, 173, 177, 179, 234, 237, 240, 245, 250, 255], "order": [12, 28, 30, 32, 33, 34, 36, 52, 56, 68, 70, 72, 73, 74, 75, 76, 82, 103, 108, 109, 113, 114, 128, 129, 133, 134, 139, 143, 147, 148, 149, 150, 163, 164, 173, 175, 176, 178, 232, 236, 240, 242, 245, 246, 250, 271, 272, 283], "k": [12, 52, 56, 65, 66, 68, 70, 76, 82, 103, 113, 114, 128, 129, 143, 147, 148, 149, 150, 164, 173, 242, 245, 246, 250, 259, 260, 261, 287], "scalar": [12, 14, 24, 37, 42, 44, 45, 53, 68, 69, 70, 76, 103, 106, 113, 114, 117, 125, 127, 128, 129, 147, 149, 150, 154, 157, 160, 164, 173, 177, 179, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 211, 214, 217, 219, 223, 225, 226, 227, 228, 229, 230, 231, 234, 237, 250, 270], "both": [12, 42, 44, 45, 68, 69, 76, 113, 114, 127, 128, 129, 139, 147, 149, 150, 164, 173, 177, 179, 237, 250], "b": [12, 49, 61, 62, 69, 71, 76, 106, 113, 114, 119, 128, 129, 141, 147, 149, 152, 165, 166, 173, 177, 179, 184, 255, 258], "axi": [13, 15, 16, 17, 26, 27, 28, 40, 49, 58, 60, 61, 62, 67, 70, 71, 80, 84, 89, 90, 94, 95, 98, 110, 139, 142, 151, 153, 155, 156, 159, 165, 166, 169, 178, 180, 235, 236, 238, 247, 248, 249, 251, 258, 267], "keepdim": [13, 17, 58, 70, 139, 153, 155, 156, 159, 169, 180, 249, 251, 267], "fals": [13, 14, 17, 30, 31, 40, 46, 52, 58, 59, 70, 75, 76, 109, 110, 113, 114, 121, 122, 123, 124, 128, 129, 137, 139, 141, 142, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 169, 173, 176, 180, 236, 249, 251, 266, 267, 272], "whether": [13, 17, 130, 236], "given": [13, 15, 16, 17, 18, 26, 27, 29, 30, 52, 59, 61, 62, 67, 69, 70, 71, 74, 75, 108, 109, 117, 157, 159, 165, 166, 175, 176, 180, 183, 188, 210, 227, 238, 239, 251, 258, 259, 271, 272], "evalu": [13, 17, 70, 72, 73, 76, 119, 157, 177, 255], "Not": [13, 17, 70, 122, 165, 167, 168], "number": [13, 17, 18, 29, 41, 50, 58, 70, 102, 103, 110, 122, 137, 139, 142, 151, 165, 167, 168, 172, 183, 185, 195, 219, 234, 238, 239, 241, 263, 283], "infin": [13, 17, 102, 103, 122, 123, 124, 234, 263, 283], "becaus": [13, 17], "x3": [13, 17, 142, 151], "rtol": [14, 121], "1e": [14, 121, 201], "05": [14, 121], "atol": [14, 121], "08": [14, 56, 121, 201, 242], "two": [14, 15, 16, 31, 38, 42, 43, 44, 45, 51, 55, 60, 66, 70, 72, 73, 119, 120, 121, 126, 133, 138, 147, 149, 150, 152, 163, 177, 183, 212, 252, 260, 261, 268], "within": [14, 18, 31, 121, 183, 227], "toler": [14, 31, 121], "1e10": [14, 121], "7": [14, 18, 48, 58, 62, 65, 70, 71, 78, 102, 112, 121, 141, 152, 156, 166, 172, 183, 207, 234, 250, 255, 260, 261, 263, 270], "00001e10": [14, 121], "propag": [15, 16], "ignor": [15, 16, 70, 155, 169, 249, 267], "exactli": [15, 16, 35, 36, 63, 181, 183, 211], "stop": [18, 110, 142, 151], "like": [18, 30, 33, 74, 82, 108, 118, 175, 183, 227, 236, 271, 283], "usm_typ": [18, 30, 33, 70, 74, 75, 82, 108, 109, 142, 175, 176, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 271, 272], "sycl_queu": [18, 30, 33, 70, 74, 75, 82, 108, 109, 142, 175, 176, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 271, 272], "evenli": [18, 29, 110, 142, 151], "interv": [18, 142, 183, 211, 213, 215, 216, 218, 226, 227], "d": [18, 82, 85, 86, 87, 91, 92, 96, 97, 99, 100, 101, 133, 138, 139, 157, 172, 188, 236, 270], "care": 18, "handl": [18, 172, 283], "endpoint": [18, 110, 142, 151], "trigonometr": [19, 20, 21, 23, 24, 25, 56, 57, 78, 79, 81, 144, 145, 146, 242, 243, 283], "invers": [19, 20, 21, 22, 23, 24, 25, 43, 80, 81, 90, 91, 92, 93, 94, 95, 96, 97, 120, 143, 145, 229, 242], "cosin": [19, 20, 21, 56, 57, 242], "tangent": [19, 20, 21, 23, 24, 25, 253, 254], "sine": [19, 20, 21, 22, 242, 243], "14159265": 19, "hyperbol": [20, 22, 25, 57, 242, 243, 254, 283], "e": [20, 22, 70, 143, 183], "65745445": 20, "99322285": 20, "arc": [21, 23, 24], "quadrant": [21, 23, 24], "correctli": [21, 23, 24, 139, 172], "5707963267948966": 21, "72538256": 22, "99822295": 22, "complex": [23, 24, 50, 69, 70, 77, 133, 134, 141, 152, 245, 283], "78539816": [23, 265], "57079633": [24, 182, 265], "54930614": 25, "convert": [26, 27, 32, 33, 34, 35, 37, 63, 64, 181, 182, 265], "flat": [26, 27, 70], "index": [26, 27, 70, 80, 157, 236], "tupl": [26, 27, 70, 80, 139, 172, 235, 236], "appli": [26, 27, 28, 147, 149, 150], "index_arrai": [26, 27, 28, 70], "call": [26, 27, 28, 138, 247, 270], "multipl": [26, 27, 28, 70, 133, 134, 244], "occurr": [26, 27, 41], "first": [26, 27, 70, 79, 138, 179, 236, 246], "11": [26, 27, 29, 70, 112, 202, 211, 243, 260, 261], "14": [26, 27, 42, 43, 69, 120, 255], "15": [26, 27, 62, 207, 251], "in_array1": [28, 58, 77], "kind": [28, 70, 178, 283], "would": [28, 70, 183, 257], "pramet": [28, 40, 55, 59, 153, 156, 159, 169, 249, 267], "describ": [28, 70, 139, 251, 283], "algorithm": [28, 70], "indirect": [28, 70, 244], "stabl": [28, 70, 244], "partial": [28, 244], "decim": [29, 70, 239], "37": 29, "nearest": [29, 102, 103, 234, 263], "even": 29, "int": [29, 35, 41, 70, 76, 112, 178, 183, 211, 214, 236, 259], "ndmin": 30, "new": [30, 46, 70, 74, 75, 80, 108, 109, 163, 175, 176, 236, 238, 248, 257, 271, 272], "uniniti": [30, 75, 108, 175, 271], "than": [30, 70, 137, 235], "dimens": [30, 37, 38, 39, 59, 70, 80, 135, 139, 163, 183, 213, 215, 216, 218, 235, 236, 244, 247, 260, 261, 283], "a1": 31, "a2": 31, "equal_nan": [31, 121], "consist": 31, "pass": [32, 33, 70], "subclass": [32, 33], "through": [32, 33], "contigu": [32, 33, 34, 70, 232, 236], "float": [32, 33, 35, 112, 137, 139, 151, 183, 212, 213, 215, 216, 218, 224, 227, 283], "point": [32, 33, 142, 183, 212, 224, 283], "check": [32, 33, 130], "inf": [32, 33, 122, 123, 124, 139, 143, 144, 146, 245], "construct": [32, 33, 65, 70, 107, 158, 174], "grid": [32, 33, 157], "object": [33, 52, 70, 80, 130, 133, 139, 158, 174, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 236], "satisfi": 34, "capabl": 35, "ari": [37, 38, 39], "least": [37, 38, 39, 121], "whilst": 37, "higher": 37, "preserv": [37, 70], "three": [39, 183, 219], "weight": [40, 41, 59, 115, 155], "specifi": [40, 46, 70, 110, 119, 139, 142, 151, 155, 156, 169, 183, 196, 206, 224, 238, 249, 255, 267], "arithmet": [40, 110, 155, 156, 249, 267, 283], "minlength": 41, "count": [41, 58, 136, 172, 185, 273, 283], "non": [41, 58, 122, 133, 172, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 245], "find": [41, 137, 240, 244, 264], "re": [41, 49, 115, 264], "bit": [42, 43, 44, 45, 120, 127, 147, 149, 150, 237, 283], "AND": [42, 43, 44, 45, 120, 147, 148, 149, 150], "truth": [42, 43, 44, 45, 76, 113, 114, 120, 128, 129, 147, 148, 149, 150, 173, 283], "OR": [42, 43, 44, 45, 120, 147, 148, 149, 150], "xor": [42, 43, 44, 45, 120, 147, 148, 149, 150], "255": [42, 44], "NOT": [43, 120, 147, 148, 149, 150], "31": [45, 110], "26": 45, "broadcast": [46, 54, 139, 147, 149, 150, 152], "must": [46, 70, 130, 138, 139], "cube": 47, "27": [47, 266], "truncat": [48, 102, 221, 263], "arr": [49, 70, 172, 207], "cast": [49, 54, 70], "same_kind": [49, 54], "join": [49, 248, 283], "sequenc": [49, 51, 55, 116, 136, 138, 207, 220, 248, 269], "exist": [49, 80, 236], "t": [49, 59, 70, 134, 225, 276], "obtain": [50, 172], "chang": [50, 53, 70, 236, 265, 283], "imaginari": 50, "2j": [50, 133], "1j": [50, 141, 246], "j": [50, 133, 246], "v": [51, 133], "mode": [51, 55, 70, 140, 221, 226], "linear": [51, 55, 151, 273, 283], "convolut": [51, 55], "ca": 51, "z": [52, 157, 193], "dst": 54, "src": 54, "valid": 55, "pi": [56, 64, 242, 243, 253, 254, 265], "000000e": [56, 242], "00": [56, 242], "371139e": 56, "m": [59, 82, 130, 131, 133, 134, 137, 259], "rowvar": 59, "bia": 59, "ddof": [59, 70, 169, 249, 267], "fweight": 59, "aweight": 59, "estim": [59, 185, 202], "covari": 59, "matrix": [59, 130, 133, 134, 136, 137, 139, 140, 152, 246, 261, 266, 283], "variabl": 59, "axisa": 60, "axisb": 60, "axisc": 60, "vector": [60, 137, 138, 139, 157, 268, 283], "cumul": [61, 62, 70, 165, 166], "24": [61, 71, 167, 180], "120": [61, 64], "720": 61, "remov": [63, 70, 80, 181, 247, 283], "larg": [63, 181], "jump": [63, 181], "wrap": [63, 181], "rad": 64, "30": [64, 182], "60": [64, 270], "90": [64, 270], "150": 64, "prepend": 67, "th": [67, 71, 156, 260, 261], "quotient": 68, "over": [69, 139, 142, 152, 157, 165, 180, 183, 210, 215, 226, 227, 251], "arbitrari": [69, 152], "ax": [69, 70, 85, 87, 88, 91, 92, 93, 96, 97, 99, 101, 119, 139, 152, 155, 163, 238, 247, 252, 255, 257], "f8": 70, "buffer": [70, 236], "offset": [70, 256], "stride": 70, "wrapper": 70, "method": [70, 107, 137, 183, 236, 257], "compliant": 70, "origin": [70, 139, 163, 236], "__getitem__": 70, "__setitem__": 70, "val": 70, "__len__": 70, "perform": [70, 130], "oper": [70, 76, 80, 113, 114, 128, 129, 130, 147, 148, 149, 150, 173, 273, 283], "equival": [70, 80, 182, 183, 211, 236, 239, 257], "integ": [70, 102, 103, 121, 127, 136, 139, 179, 183, 211, 214, 219, 234, 236, 237, 238, 246, 260, 261, 263], "option": [70, 137, 138, 139, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 236], "Its": 70, "right": [70, 117, 127, 132, 133, 226, 237, 240], "hold": [70, 139], "output": [70, 76, 113, 114, 128, 129, 136, 138, 157, 173, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 247, 283], "integer_arrai": 70, "versionchang": 70, "previous": 70, "wa": [70, 183, 224, 251], "error": [70, 77, 273], "At": 70, "some": [70, 80, 102], "futur": 70, "intend": 70, "until": [70, 238], "should": [70, 111, 121, 200, 235, 236, 240], "explicitli": 70, "when": [70, 139, 151, 270], "avoid": 70, "futurewarn": 70, "quicksort": 70, "mergesort": 70, "heapsort": 70, "field": [70, 157], "compar": [70, 76], "second": [70, 79, 179, 246], "etc": [70, 202, 283], "other": [70, 102, 138, 163, 183, 227, 283], "word": [70, 102, 183, 227], "yield": [70, 183], "maskedarrai": 70, "inplac": 70, "asnumpi": 70, "content": [70, 220], "popul": [70, 183, 210], "unsaf": 70, "target": 70, "A": [70, 107, 134, 183, 185, 202, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 257], "row": [70, 138, 269], "style": 70, "fortran": [70, 236], "keep": 70, "close": [70, 183, 211], "possibl": [70, 236, 247, 257], "happen": [70, 185], "itself": 70, "possibli": 70, "doe": 70, "rais": [70, 79, 136, 179, 236, 246], "axis1": [70, 252, 256], "axis2": [70, 252, 256], "assign": 70, "collaps": 70, "occur": 70, "get_arrai": 70, "get": 70, "id": 70, "standard": [70, 103, 106, 155, 161, 183, 198, 205, 212, 221, 222, 223, 224, 225, 234, 249, 251, 267, 283], "random": [70, 141, 273, 283], "123": 70, "initi": [70, 74, 153, 159, 180, 183, 251], "kth": [70, 178], "introselect": [70, 178], "rearrang": [70, 283], "smaller": [70, 103], "move": [70, 163, 238, 257], "behind": 70, "undefin": 70, "dparrai": [70, 276, 284], "sh": 70, "unlik": 70, "free": 70, "separ": 70, "singl": [70, 138, 155, 183, 202, 211, 212, 213, 214, 215, 216, 218, 224], "entri": [70, 74], "varianc": [70, 155, 169, 249, 267, 283], "to_devic": 70, "target_devic": 70, "transfer": 70, "suitabl": 70, "properti": [70, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "give": [70, 236], "without": [70, 74, 236], "mask": 70, "finit": [70, 122, 123, 124], "__eq__": [70, 183], "self": [70, 183], "__ne__": [70, 183], "__lt__": [70, 183], "__le__": [70, 183], "__gt__": [70, 183], "__ge__": [70, 183], "attribut": 70, "flag": 70, "about": 70, "layout": [70, 236], "items": 70, "nbyte": 70, "consum": 70, "length": [70, 76, 186, 236, 247], "repres": [70, 183], "diment": 70, "setter": 70, "involv": 70, "cannot": [70, 247], "displac": 70, "upon": 70, "unit": 70, "respect": 70, "s1": 70, "s2": 70, "s3": 70, "i1": 70, "i2": 70, "i3": 70, "sycl_context": 70, "sycl_devic": 70, "to_end": 71, "to_begin": 71, "between": [71, 134, 200, 214, 265], "consecut": 71, "obj": [71, 125], "seealso": 71, "einstein": [72, 73, 119, 152, 177, 255], "summat": [72, 73, 119, 152, 177, 255], "convent": [72, 73, 119, 152, 177, 255], "operand": [72, 73, 119, 177, 255], "lowest": [72, 73, 183, 211], "cost": [72, 73], "contract": [72, 73], "express": [72, 73], "subscript": 73, "greedi": 73, "consid": [73, 122, 137, 183, 211], "intermedi": 73, "dpnp_arrai": [75, 109, 157, 170, 176, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 236, 260, 261, 272, 273], "what": [76, 185, 202], "so": [76, 143, 221, 245], "scipi": 77, "math": 77, "num": [77, 110, 142, 151, 265], "25": [77, 112, 115, 142, 164, 179, 212, 221, 266, 267], "75": [77, 112, 142], "99532227": 77, "99853728": 77, "99959305": 77, "99989938": 77, "99997791": 77, "expon": [78, 81, 179, 209, 283], "718281828": [78, 81], "389056099": [78, 81], "exponent2": 79, "expand": 80, "appear": 80, "singleton": [80, 247], "newaxi": 80, "mai": [80, 133, 151], "instead": [80, 102, 110, 142, 151, 172], "minu": [81, 102, 103, 234, 263], "elsewher": [82, 259, 270], "fourier": [84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 273], "transform": [84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 273], "complex64": [84, 90], "datatyp": [84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 137], "batch": [85, 87, 91, 92, 96, 97, 99, 101], "sampl": [86, 100, 110, 142, 151, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 273, 283], "frequenc": [86, 88, 93, 100], "shift": [88, 93, 127, 237], "compon": [88, 93], "center": [88, 93], "spectrum": [88, 93], "signal": [89, 94], "hermitian": [89, 94, 130, 133, 137, 141, 283], "symmetri": [89, 94], "toward": [102, 103, 234, 263], "spreadsheet": 102, "definit": [102, 130], "largest": 103, "divis": [103, 104, 105, 106, 154, 160, 161, 179, 234, 262], "remind": [103, 106, 161], "complementari": [103, 106, 161], "file": [107, 111], "text": 107, "binari": [107, 273, 283], "highli": 107, "effici": [107, 137], "read": [107, 236], "known": [107, 221], "well": [107, 185, 202, 221], "pars": 107, "simpli": 107, "format": [107, 283], "written": 107, "fill_valu": [108, 109], "50": [110, 151, 255, 270], "scale": [110, 142, 151, 183, 190, 192, 194, 195, 196, 197, 205, 217, 222, 229], "progress": [110, 142], "1000": [110, 151, 184, 185, 190, 192, 194, 195, 196, 197, 198, 205, 206, 209, 211, 213, 216, 218, 224, 228, 229, 230, 231], "100": [110, 151, 195, 221], "62341325": 110, "6227766": 110, "177": [110, 151], "827941": [110, 151], "directori": 111, "h": [111, 130, 157], "header": 111, "modul": [111, 273], "against": [111, 139], "vararg": 112, "y1": [112, 258], "bin": [115, 221], "densiti": 115, "dataset": 115, "hist": [115, 221], "bin_edg": 115, "4999999999999996": 115, "tup": [116, 269], "horizont": 116, "leg": 117, "triangl": [117, 260, 261], "hypotenus": 117, "main": [118, 134], "boolean": [121, 122, 123, 124, 147, 148, 149, 150, 236], "nat": 124, "kroneck": 126, "left": [127, 139, 226, 237, 240], "40": 127, "decomposit": [130, 141, 283], "l": [130, 133], "lower": [130, 260], "ordinari": 130, "symmetr": [130, 133, 137], "No": 130, "verifi": 130, "addit": 130, "actual": 130, "array_lik": [130, 131, 134, 136, 137, 138, 139, 183], "upper": [130, 140, 261], "factor": [130, 140], "determin": [131, 147, 149, 150], "eigenvalu": [132, 133, 134, 283], "eigenvector": [132, 133, 134], "uplo": 133, "w": [133, 134], "ascend": 133, "accord": [133, 134], "17157288": 133, "82842712": 133, "92387953": 133, "38268343": 133, "vari": 133, "38268343j": 133, "92387953j": 133, "gener": [134, 183, 185, 188, 219, 266, 283], "aren": 134, "whose": 134, "thei": 134, "necessarili": 134, "nor": 134, "matric": [134, 137, 139, 157, 283], "suppli": [136, 138, 183, 212], "tol": [137, 201], "rank": 137, "singular": [137, 141], "threshold": 137, "ep": 137, "epsilon": 137, "assum": 137, "enabl": 137, "treat": [138, 165, 167, 168], "last": [138, 236, 247], "ord": 139, "abl": 139, "eight": 139, "infinit": 139, "unless": 139, "under": 139, "With": 139, "reduc": [140, 141], "q": [140, 156], "orthonorm": 140, "r": 140, "full_matric": 141, "compute_uv": 141, "reconstruct": 141, "2d": 141, "u": 141, "vh": 141, "smat": 141, "4d": 141, "retstep": 142, "end": 142, "logarithm": [142, 143, 144, 145, 146, 199, 283], "natur": [143, 146], "plu": [143, 146], "30102999566": 144, "69314718": 145, "09861229": 145, "logic": [147, 149, 150, 273, 283], "show": [150, 157, 221], "uniformli": [151, 183, 227], "directli": 151, "215": 151, "443469": 151, "464": 151, "15888336": 151, "22776602": 151, "562": 151, "34132519": 151, "0396842": 151, "34960421": 151, "rule": [152, 258], "deviat": [155, 183, 198, 205, 249, 267], "while": [155, 169, 172, 249, 267], "overwrite_input": 156, "xi": 157, "spars": 157, "xy": 157, "coordin": 157, "make": 157, "xn": 157, "nx": 157, "ny": 157, "xv": 157, "yv": 157, "matplotlib": [157, 221], "pyplot": [157, 221], "plt": [157, 221], "xx": 157, "yy": 157, "contourf": 157, "dpnp_iface_arraycr": [158, 174], "mgridclass": 158, "dens": 158, "5j": [158, 174], "fraction": 162, "destin": 163, "remain": [163, 236], "usm": [163, 183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 247], "interchang": [163, 252], "_novalu": [169, 249, 267], "alia": [170, 183, 213, 216, 218], "out2": 172, "ogridclass": 174, "open": [174, 183, 213, 215, 216, 218, 227], "deg": 182, "52359878": 182, "04719755": 182, "0943951": 182, "61799388": 182, "mersenn": 183, "twister": 183, "pseudo": 183, "maximumum": [183, 219], "string": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "sycldevic": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "syclqueu": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "concept": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227, 279], "oneapi": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "filter": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "selector": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 227], "intern": 183, "state": 183, "get_sycl_queu": 183, "loc": [183, 194, 196, 197, 205, 229], "draw": [183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "gaussian": [183, 205, 229], "share": [183, 205, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227], "drawn": [183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 211, 214, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231], "parameter": [183, 205, 227], "58997253": 183, "84288406": 183, "33836967": 183, "16394577": 183, "40882036": 183, "39295758": 183, "48927254": 183, "74921661": 183, "13436424": 183, "56920387": 183, "84743374": 183, "80226506": 183, "76377462": 183, "06310682": 183, "25506903": 183, "1179187": 183, "49543509": 183, "76096244": 183, "low": [183, 211, 214, 227], "high": [183, 211, 214, 227], "inclus": [183, 211, 214], "exclus": [183, 211], "half": [183, 213, 215, 216, 218, 227], "omit": [183, 211, 270], "d0": [183, 210, 212], "d1": [183, 212], "dn": [183, 210, 212], "were": [183, 212], "84401099": 183, "four": [183, 212], "88997253": 183, "54288406": 183, "63836967": 183, "46394577": 183, "70882036": 183, "69295758": 183, "78927254": 183, "04921661": 183, "continu": [183, 215], "stdev": [183, 224], "81715362": 183, "54465213": 183, "18557831": 183, "28352814": 183, "67718303": 183, "11570901": 183, "21968665": 183, "18236388": 183, "08156915": 183, "21941987": 183, "24544512": 183, "63522211": 183, "673174": 183, "exclud": [183, 227], "54": 183, "48093112": 183, "52928804": 183, "1196081": 183, "6990877": 183, "34074171": 183, "conveni": 183, "accept": 183, "alpha": [184, 189, 190, 206, 209], "p": [185, 188, 193, 199, 202], "trial": 185, "probabl": [185, 193, 202], "coin": 185, "world": [185, 202], "compani": [185, 202], "drill": [185, 202], "wild": [185, 202], "cat": [185, 202], "oil": [185, 202], "explor": [185, 202], "success": [185, 193, 202], "nine": 185, "fail": 185, "let": 185, "000": 185, "model": 185, "20000": 185, "answer": 185, "38885": 185, "38": 185, "fallback": [186, 188, 189, 199, 204, 220], "df": [187, 203, 225, 226], "chi": [187, 203], "89920014": 187, "00867716": 187, "13710533": 187, "62318272": 187, "dfnum": [191, 204], "dfden": [191, 204], "ten": 193, "thousand": 193, "individu": 193, "35": 193, "10000": [193, 208, 217, 227], "mu": [194, 198, 205, 228], "ngood": 195, "nbad": 195, "nsampl": 195, "nsamp": 195, "good": 195, "bad": 195, "doubl": 196, "decai": 196, "sigma": [198, 205], "seri": 199, "pval": 200, "iinfo": 200, "throw": 200, "dice": 200, "check_valid": 201, "warn": 201, "multivari": 201, "after": 202, "100000": 202, "nonc": [203, 204], "noncentr": [203, 204], "todo": 203, "ii": 206, "lomax": 206, "randomli": 207, "lam": 208, "randomst": 211, "1923875335537315": 212, "rese": 219, "legaci": 219, "mt19937": 219, "engin": 219, "modifi": 220, "cauchi": 221, "lorentz": 221, "plot": 221, "1000000": [221, 223, 225, 226], "3x8000": 222, "8000": 222, "student": 225, "freedom": 225, "kappa": 228, "von": 228, "mise": 228, "dispers": 228, "33": 233, "3003003": 233, "len": 235, "newshap": 236, "One": 236, "infer": 236, "write": 236, "fastest": 236, "back": 236, "slowest": 236, "account": 236, "underli": 236, "never": 236, "valueerror": [236, 247], "reus": 236, "guarante": 236, "unspecifi": 236, "backward": 238, "li": 238, "detail": 239, "side": 240, "sorter": 240, "maintain": 240, "742278e": 242, "3012989": 243, "548739": 243, "traceback": 247, "recent": 247, "118033988749895": 249, "entir": 251, "22460635e": 253, "63317787e": 253, "996272": 254, "917152": 254, "32": 255, "whenev": 257, "dx": 258, "composit": 258, "trapezoid": 258, "delta": 265, "complement": 265, "phase": 265, "49778714": 265, "28318531": 265, "increas": 266, "vandermond": 266, "125": 266, "vertic": 269, "condit": 270, "chosen": 270, "70": 270, "80": 270, "algebra": [273, 283], "mathemat": [273, 283], "polynomi": [273, 283], "search": [273, 283], "statist": [273, 283], "summari": 273, "level": 273, "util": 273, "counterpart": 279, "basic": [279, 283], "cover": 283, "ad": 283, "elementwis": [283, 287], "pack": 283, "helper": 283, "equat": 283, "poly1d": 283, "variou": 287}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[10, 1, 1, "", "abs"], [11, 1, 1, "", "absolute"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "allclose"], [15, 1, 1, "", "amax"], [16, 1, 1, "", "amin"], [17, 1, 1, "", "any"], [18, 1, 1, "", "arange"], [19, 1, 1, "", "arccos"], [20, 1, 1, "", "arccosh"], [21, 1, 1, "", "arcsin"], [22, 1, 1, "", "arcsinh"], [23, 1, 1, "", "arctan"], [24, 1, 1, "", "arctan2"], [25, 1, 1, "", "arctanh"], [26, 1, 1, "", "argmax"], [27, 1, 1, "", "argmin"], [28, 1, 1, "", "argsort"], [29, 1, 1, "", "around"], [30, 1, 1, "", "array"], [31, 1, 1, "", "array_equal"], [32, 1, 1, "", "asanyarray"], [33, 1, 1, "", "asarray"], [34, 1, 1, "", "ascontiguousarray"], [35, 1, 1, "", "asfarray"], [36, 1, 1, "", "asnumpy"], [37, 1, 1, "", "atleast_1d"], [38, 1, 1, "", "atleast_2d"], [39, 1, 1, "", "atleast_3d"], [40, 1, 1, "", "average"], [41, 1, 1, "", "bincount"], [42, 1, 1, "", "bitwise_and"], [43, 1, 1, "", "bitwise_not"], [44, 1, 1, "", "bitwise_or"], [45, 1, 1, "", "bitwise_xor"], [46, 1, 1, "", "broadcast_to"], [47, 1, 1, "", "cbrt"], [48, 1, 1, "", "ceil"], [49, 1, 1, "", "concatenate"], [50, 1, 1, "", "conj"], [51, 1, 1, "", "convolve"], [52, 1, 1, "", "copy"], [53, 1, 1, "", "copysign"], [54, 1, 1, "", "copyto"], [55, 1, 1, "", "correlate"], [56, 1, 1, "", "cos"], [57, 1, 1, "", "cosh"], [58, 1, 1, "", "count_nonzero"], [59, 1, 1, "", "cov"], [60, 1, 1, "", "cross"], [61, 1, 1, "", "cumprod"], [62, 1, 1, "", "cumsum"], [63, 1, 1, "", "deg2rad"], [64, 1, 1, "", "degrees"], [65, 1, 1, "", "diag"], [66, 1, 1, "", "diagflat"], [67, 1, 1, "", "diff"], [68, 1, 1, "", "divide"], [69, 1, 1, "", "dot"], [71, 1, 1, "", "ediff1d"], [72, 1, 1, "", "einsum"], [73, 1, 1, "", "einsum_path"], [74, 1, 1, "", "empty"], [75, 1, 1, "", "empty_like"], [76, 1, 1, "", "equal"], [77, 1, 1, "", "erf"], [78, 1, 1, "", "exp"], [79, 1, 1, "", "exp2"], [80, 1, 1, "", "expand_dims"], [81, 1, 1, "", "expm1"], [82, 1, 1, "", "eye"], [83, 1, 1, "", "fabs"], [9, 0, 0, "-", "fft"], [102, 1, 1, "", "floor"], [103, 1, 1, "", "floor_divide"], [104, 1, 1, "", "fmax"], [105, 1, 1, "", "fmin"], [106, 1, 1, "", "fmod"], [107, 1, 1, "", "fromfile"], [108, 1, 1, "", "full"], [109, 1, 1, "", "full_like"], [110, 1, 1, "", "geomspace"], [111, 1, 1, "", "get_include"], [112, 1, 1, "", "gradient"], [113, 1, 1, "", "greater"], [114, 1, 1, "", "greater_equal"], [115, 1, 1, "", "histogram"], [116, 1, 1, "", "hstack"], [117, 1, 1, "", "hypot"], [118, 1, 1, "", "identity"], [119, 1, 1, "", "inner"], [120, 1, 1, "", "invert"], [121, 1, 1, "", "isclose"], [122, 1, 1, "", "isfinite"], [123, 1, 1, "", "isinf"], [124, 1, 1, "", "isnan"], [125, 1, 1, "", "isscalar"], [126, 1, 1, "", "kron"], [127, 1, 1, "", "left_shift"], [128, 1, 1, "", "less"], [129, 1, 1, "", "less_equal"], [142, 1, 1, "", "linspace"], [143, 1, 1, "", "log"], [144, 1, 1, "", "log10"], [145, 1, 1, "", "log1p"], [146, 1, 1, "", "log2"], [147, 1, 1, "", "logical_and"], [148, 1, 1, "", "logical_not"], [149, 1, 1, "", "logical_or"], [150, 1, 1, "", "logical_xor"], [151, 1, 1, "", "logspace"], [152, 1, 1, "", "matmul"], [153, 1, 1, "", "max"], [154, 1, 1, "", "maximum"], [155, 1, 1, "", "mean"], [156, 1, 1, "", "median"], [157, 1, 1, "", "meshgrid"], [158, 5, 1, "", "mgrid"], [159, 1, 1, "", "min"], [160, 1, 1, "", "minimum"], [161, 1, 1, "", "mod"], [162, 1, 1, "", "modf"], [163, 1, 1, "", "moveaxis"], [164, 1, 1, "", "multiply"], [165, 1, 1, "", "nancumprod"], [166, 1, 1, "", "nancumsum"], [167, 1, 1, "", "nanprod"], [168, 1, 1, "", "nansum"], [169, 1, 1, "", "nanvar"], [170, 3, 1, "", "ndarray"], [171, 1, 1, "", "negative"], [172, 1, 1, "", "nonzero"], [173, 1, 1, "", "not_equal"], [174, 5, 1, "", "ogrid"], [175, 1, 1, "", "ones"], [176, 1, 1, "", "ones_like"], [177, 1, 1, "", "outer"], [178, 1, 1, "", "partition"], [179, 1, 1, "", "power"], [180, 1, 1, "", "prod"], [181, 1, 1, "", "rad2deg"], [182, 1, 1, "", "radians"], [282, 0, 0, "-", "random"], [232, 1, 1, "", "ravel"], [233, 1, 1, "", "reciprocal"], [234, 1, 1, "", "remainder"], [235, 1, 1, "", "repeat"], [236, 1, 1, "", "reshape"], [237, 1, 1, "", "right_shift"], [238, 1, 1, "", "rollaxis"], [239, 1, 1, "", "round_"], [240, 1, 1, "", "searchsorted"], [241, 1, 1, "", "sign"], [242, 1, 1, "", "sin"], [243, 1, 1, "", "sinh"], [244, 1, 1, "", "sort"], [245, 1, 1, "", "sqrt"], [246, 1, 1, "", "square"], [247, 1, 1, "", "squeeze"], [248, 1, 1, "", "stack"], [249, 1, 1, "", "std"], [250, 1, 1, "", "subtract"], [251, 1, 1, "", "sum"], [252, 1, 1, "", "swapaxes"], [253, 1, 1, "", "tan"], [254, 1, 1, "", "tanh"], [255, 1, 1, "", "tensordot"], [256, 1, 1, "", "trace"], [257, 1, 1, "", "transpose"], [258, 1, 1, "", "trapz"], [259, 1, 1, "", "tri"], [260, 1, 1, "", "tril"], [261, 1, 1, "", "triu"], [262, 1, 1, "", "true_divide"], [263, 1, 1, "", "trunc"], [264, 1, 1, "", "unique"], [265, 1, 1, "", "unwrap"], [266, 1, 1, "", "vander"], [267, 1, 1, "", "var"], [268, 1, 1, "", "vdot"], [269, 1, 1, "", "vstack"], [270, 1, 1, "", "where"], [271, 1, 1, "", "zeros"], [272, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[70, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[70, 3, 1, "", "T"], [70, 4, 1, "", "__eq__"], [70, 4, 1, "", "__ge__"], [70, 4, 1, "", "__getitem__"], [70, 4, 1, "", "__gt__"], [70, 4, 1, "", "__le__"], [70, 4, 1, "", "__len__"], [70, 4, 1, "", "__lt__"], [70, 4, 1, "", "__ne__"], [70, 4, 1, "", "__setitem__"], [70, 4, 1, "", "all"], [70, 4, 1, "", "any"], [70, 4, 1, "", "argmax"], [70, 4, 1, "", "argmin"], [70, 4, 1, "", "argsort"], [70, 4, 1, "", "asnumpy"], [70, 4, 1, "", "astype"], [70, 4, 1, "", "choose"], [70, 4, 1, "", "conj"], [70, 4, 1, "", "conjugate"], [70, 4, 1, "", "cumsum"], [70, 3, 1, "", "device"], [70, 4, 1, "", "diagonal"], [70, 4, 1, "", "dot"], [70, 3, 1, "", "dtype"], [70, 4, 1, "", "fill"], [70, 3, 1, "", "flags"], [70, 3, 1, "", "flat"], [70, 4, 1, "", "flatten"], [70, 4, 1, "", "get_array"], [70, 4, 1, "", "item"], [70, 3, 1, "", "itemsize"], [70, 4, 1, "", "max"], [70, 4, 1, "", "mean"], [70, 4, 1, "", "min"], [70, 3, 1, "", "nbytes"], [70, 3, 1, "", "ndim"], [70, 4, 1, "", "nonzero"], [70, 4, 1, "", "partition"], [70, 4, 1, "", "prod"], [70, 4, 1, "", "reshape"], [70, 4, 1, "", "round"], [70, 3, 1, "", "shape"], [70, 3, 1, "", "size"], [70, 4, 1, "", "squeeze"], [70, 4, 1, "", "std"], [70, 3, 1, "", "strides"], [70, 4, 1, "", "sum"], [70, 3, 1, "", "sycl_context"], [70, 3, 1, "", "sycl_device"], [70, 3, 1, "", "sycl_queue"], [70, 4, 1, "", "take"], [70, 4, 1, "", "to_device"], [70, 4, 1, "", "transpose"], [70, 3, 1, "", "usm_type"], [70, 4, 1, "", "var"]], "dpnp.fft": [[84, 1, 1, "", "fft"], [85, 1, 1, "", "fft2"], [86, 1, 1, "", "fftfreq"], [87, 1, 1, "", "fftn"], [88, 1, 1, "", "fftshift"], [89, 1, 1, "", "hfft"], [90, 1, 1, "", "ifft"], [91, 1, 1, "", "ifft2"], [92, 1, 1, "", "ifftn"], [93, 1, 1, "", "ifftshift"], [94, 1, 1, "", "ihfft"], [95, 1, 1, "", "irfft"], [96, 1, 1, "", "irfft2"], [97, 1, 1, "", "irfftn"], [98, 1, 1, "", "rfft"], [99, 1, 1, "", "rfft2"], [100, 1, 1, "", "rfftfreq"], [101, 1, 1, "", "rfftn"]], "dpnp.linalg": [[130, 1, 1, "", "cholesky"], [131, 1, 1, "", "det"], [132, 1, 1, "", "eig"], [133, 1, 1, "", "eigh"], [134, 1, 1, "", "eigvals"], [135, 1, 1, "", "inv"], [136, 1, 1, "", "matrix_power"], [137, 1, 1, "", "matrix_rank"], [138, 1, 1, "", "multi_dot"], [139, 1, 1, "", "norm"], [140, 1, 1, "", "qr"], [141, 1, 1, "", "svd"]], "dpnp.random": [[183, 2, 1, "", "RandomState"], [184, 1, 1, "", "beta"], [185, 1, 1, "", "binomial"], [186, 1, 1, "", "bytes"], [187, 1, 1, "", "chisquare"], [188, 1, 1, "", "choice"], [189, 1, 1, "", "dirichlet"], [190, 1, 1, "", "exponential"], [191, 1, 1, "", "f"], [192, 1, 1, "", "gamma"], [193, 1, 1, "", "geometric"], [194, 1, 1, "", "gumbel"], [195, 1, 1, "", "hypergeometric"], [196, 1, 1, "", "laplace"], [197, 1, 1, "", "logistic"], [198, 1, 1, "", "lognormal"], [199, 1, 1, "", "logseries"], [200, 1, 1, "", "multinomial"], [201, 1, 1, "", "multivariate_normal"], [202, 1, 1, "", "negative_binomial"], [203, 1, 1, "", "noncentral_chisquare"], [204, 1, 1, "", "noncentral_f"], [205, 1, 1, "", "normal"], [206, 1, 1, "", "pareto"], [207, 1, 1, "", "permutation"], [208, 1, 1, "", "poisson"], [209, 1, 1, "", "power"], [210, 1, 1, "", "rand"], [211, 1, 1, "", "randint"], [212, 1, 1, "", "randn"], [213, 1, 1, "", "random"], [214, 1, 1, "", "random_integers"], [215, 1, 1, "", "random_sample"], [216, 1, 1, "", "ranf"], [217, 1, 1, "", "rayleigh"], [218, 1, 1, "", "sample"], [219, 1, 1, "", "seed"], [220, 1, 1, "", "shuffle"], [221, 1, 1, "", "standard_cauchy"], [222, 1, 1, "", "standard_exponential"], [223, 1, 1, "", "standard_gamma"], [224, 1, 1, "", "standard_normal"], [225, 1, 1, "", "standard_t"], [226, 1, 1, "", "triangular"], [227, 1, 1, "", "uniform"], [228, 1, 1, "", "vonmises"], [229, 1, 1, "", "wald"], [230, 1, 1, "", "weibull"], [231, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[183, 4, 1, "", "__eq__"], [183, 4, 1, "", "__ge__"], [183, 4, 1, "", "__gt__"], [183, 4, 1, "", "__le__"], [183, 4, 1, "", "__lt__"], [183, 4, 1, "", "__ne__"], [183, 4, 1, "", "get_state"], [183, 4, 1, "", "get_sycl_device"], [183, 4, 1, "", "get_sycl_queue"], [183, 4, 1, "", "normal"], [183, 4, 1, "", "rand"], [183, 4, 1, "", "randint"], [183, 4, 1, "", "randn"], [183, 4, 1, "", "random_sample"], [183, 4, 1, "", "standard_normal"], [183, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"interplai": 0, "data": [0, 2, 7, 8, 282], "parallel": [0, 2], "control": 0, "librari": 0, "exampl": [0, 4], "c": 1, "backend": 1, "api": [1, 273], "refer": [1, 273], "extens": 2, "numpi": [2, 8], "develop": 2, "inform": 2, "overview": 3, "quick": 4, "start": 4, "guid": 4, "devic": 4, "driver": 4, "python": 4, "interpret": 4, "instal": 4, "packag": [4, 281], "from": [4, 7], "anaconda": 4, "build": 4, "conda": 4, "scikit": 4, "test": [4, 275], "binari": 5, "oper": [5, 275, 276, 277, 287], "elementwis": 5, "bit": [5, 287], "pack": 5, "output": 5, "format": 5, "comparison": [6, 275, 287], "tabl": 6, "summari": 6, "modul": [6, 281], "level": 6, "multi": [6, 279], "dimension": [6, 279], "arrai": [6, 7, 30, 275, 276, 279], "linear": [6, 274], "algebra": [6, 274], "discret": 6, "fourier": 6, "transform": 6, "random": [6, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 282], "sampl": [6, 218, 282], "creation": 7, "routin": [7, 9, 276, 277, 278, 283], "basic": [7, 276, 281], "other": [7, 277], "numer": 7, "rang": 7, "matrix": [7, 274], "differ": [8, 277], "type": [8, 275], "fft": [9, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "function": [9, 275, 277, 285, 286, 287], "standard": 9, "real": 9, "hermitian": 9, "helper": 9, "dpnp": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282], "ab": 10, "absolut": 11, "add": 12, "all": 13, "allclos": 14, "amax": 15, "amin": 16, "ani": 17, "arang": 18, "arcco": 19, "arccosh": 20, "arcsin": 21, "arcsinh": 22, "arctan": 23, "arctan2": 24, "arctanh": 25, "argmax": 26, "argmin": 27, "argsort": 28, "around": 29, "array_equ": 31, "asanyarrai": 32, "asarrai": 33, "ascontiguousarrai": 34, "asfarrai": 35, "asnumpi": 36, "atleast_1d": 37, "atleast_2d": 38, "atleast_3d": 39, "averag": 40, "bincount": 41, "bitwise_and": 42, "bitwise_not": 43, "bitwise_or": 44, "bitwise_xor": 45, "broadcast_to": 46, "cbrt": 47, "ceil": 48, "concaten": 49, "conj": 50, "convolv": 51, "copi": 52, "copysign": 53, "copyto": 54, "correl": [55, 286], "co": 56, "cosh": 57, "count_nonzero": 58, "cov": 59, "cross": 60, "cumprod": 61, "cumsum": 62, "deg2rad": 63, "degre": 64, "diag": 65, "diagflat": 66, "diff": 67, "divid": 68, "dot": 69, "dpnp_arrai": 70, "ediff1d": 71, "einsum": 72, "einsum_path": 73, "empti": 74, "empty_lik": 75, "equal": 76, "erf": 77, "exp": 78, "exp2": 79, "expand_dim": 80, "expm1": 81, "ey": 82, "fab": 83, "fft2": 85, "fftfreq": 86, "fftn": 87, "fftshift": 88, "hfft": 89, "ifft": 90, "ifft2": 91, "ifftn": 92, "ifftshift": 93, "ihfft": 94, "irfft": 95, "irfft2": 96, "irfftn": 97, "rfft": 98, "rfft2": 99, "rfftfreq": 100, "rfftn": 101, "floor": 102, "floor_divid": 103, "fmax": 104, "fmin": 105, "fmod": 106, "fromfil": 107, "full": 108, "full_lik": 109, "geomspac": 110, "get_includ": 111, "gradient": 112, "greater": 113, "greater_equ": 114, "histogram": [115, 286], "hstack": 116, "hypot": 117, "ident": 118, "inner": 119, "invert": 120, "isclos": 121, "isfinit": 122, "isinf": 123, "isnan": 124, "isscalar": 125, "kron": 126, "left_shift": 127, "less": 128, "less_equ": 129, "linalg": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "choleski": 130, "det": 131, "eig": 132, "eigh": 133, "eigval": 134, "inv": 135, "matrix_pow": 136, "matrix_rank": 137, "multi_dot": 138, "norm": [139, 274], "qr": 140, "svd": 141, "linspac": 142, "log": 143, "log10": 144, "log1p": 145, "log2": 146, "logical_and": 147, "logical_not": 148, "logical_or": 149, "logical_xor": 150, "logspac": 151, "matmul": 152, "max": 153, "maximum": 154, "mean": [155, 286], "median": 156, "meshgrid": 157, "mgrid": 158, "min": 159, "minimum": 160, "mod": 161, "modf": 162, "moveaxi": 163, "multipli": 164, "nancumprod": 165, "nancumsum": 166, "nanprod": 167, "nansum": 168, "nanvar": 169, "ndarrai": [170, 279], "neg": 171, "nonzero": 172, "not_equ": 173, "ogrid": 174, "ones": 175, "ones_lik": 176, "outer": 177, "partit": 178, "power": [179, 209], "prod": 180, "rad2deg": 181, "radian": 182, "randomst": 183, "beta": 184, "binomi": 185, "byte": 186, "chisquar": 187, "choic": 188, "dirichlet": 189, "exponenti": 190, "f": 191, "gamma": 192, "geometr": 193, "gumbel": 194, "hypergeometr": 195, "laplac": 196, "logist": 197, "lognorm": 198, "logseri": 199, "multinomi": 200, "multivariate_norm": 201, "negative_binomi": 202, "noncentral_chisquar": 203, "noncentral_f": 204, "normal": 205, "pareto": 206, "permut": [207, 282], "poisson": 208, "rand": 210, "randint": 211, "randn": 212, "random_integ": 214, "random_sampl": 215, "ranf": 216, "rayleigh": 217, "seed": 219, "shuffl": 220, "standard_cauchi": 221, "standard_exponenti": 222, "standard_gamma": 223, "standard_norm": 224, "standard_t": 225, "triangular": 226, "uniform": 227, "vonmis": 228, "wald": 229, "weibul": 230, "zipf": 231, "ravel": 232, "reciproc": 233, "remaind": 234, "repeat": 235, "reshap": 236, "right_shift": 237, "rollaxi": 238, "round_": 239, "searchsort": 240, "sign": 241, "sin": 242, "sinh": 243, "sort": [244, 284], "sqrt": 245, "squar": 246, "squeez": 247, "stack": 248, "std": 249, "subtract": 250, "sum": [251, 277], "swapax": 252, "tan": 253, "tanh": 254, "tensordot": 255, "trace": 256, "transpos": [257, 276], "trapz": 258, "tri": 259, "tril": 260, "triu": 261, "true_divid": 262, "trunc": 263, "uniqu": 264, "unwrap": 265, "vander": 266, "var": 267, "vdot": 268, "vstack": 269, "where": 270, "zero": 271, "zeros_lik": 272, "vector": 274, "product": [274, 277], "decomposit": 274, "eigenvalu": 274, "etc": 274, "solv": 274, "equat": 274, "special": [274, 277, 285], "matric": 274, "logic": 275, "truth": 275, "valu": 275, "infin": 275, "nan": 275, "manipul": 276, "chang": 276, "shape": 276, "like": 276, "number": [276, 277], "dimens": 276, "kind": 276, "join": 276, "split": 276, "tile": 276, "ad": 276, "remov": 276, "element": 276, "rearrang": 276, "mathemat": 277, "trigonometr": [277, 287], "hyperbol": 277, "round": 277, "expon": 277, "logarithm": 277, "float": [277, 287], "point": 277, "arithmet": [277, 281], "handl": 277, "complex": 277, "miscellan": [277, 278], "util": 278, "pad": 280, "polynomi": 281, "polyutil": 281, "poly1d": 281, "simpl": 282, "distribut": 282, "gener": 282, "search": 284, "count": 284, "error": 285, "statist": 286, "order": 286, "varianc": 286, "univers": 287, "ufunc": 287, "avail": 287, "math": 287, "twiddl": 287}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Interplay with the Data Parallel Control Library": [[0, "interplay-with-the-data-parallel-control-library"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "Data Parallel Extension for NumPy*": [[2, "module-dpnp"]], "Development information": [[2, null]], "Overview": [[3, "id1"]], "Quick Start Guide": [[4, "id1"]], "Device Drivers": [[4, "device-drivers"]], "Python Interpreter": [[4, "python-interpreter"]], "Installation": [[4, "installation"]], "Install Package from Anaconda": [[4, "install-package-from-anaconda"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Testing": [[4, "testing"]], "Examples": [[4, "examples"]], "Binary Operations": [[5, "binary-operations"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Bit packing": [[5, "bit-packing"]], "Output formatting": [[5, "output-formatting"]], "Comparison Table": [[6, "comparison-table"]], "Summary": [[6, "summary"]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Linear Algebra": [[6, "linear-algebra"], [274, "linear-algebra"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Random Sampling": [[6, "random-sampling"]], "Array Creation Routines": [[7, "array-creation-routines"]], "Basic creation routines": [[7, "basic-creation-routines"]], "Creation from other data": [[7, "creation-from-other-data"]], "Numerical ranges": [[7, "numerical-ranges"]], "Matrix creation": [[7, "matrix-creation"]], "Difference with NumPy*": [[8, "difference-with-numpy"]], "Data types": [[8, "data-types"]], "FFT Functions": [[9, "fft-functions"]], "Standard FFTs": [[9, "standard-ffts"]], "Real FFTs": [[9, "real-ffts"]], "Hermitian FFTs": [[9, "hermitian-ffts"]], "Helper routines": [[9, "helper-routines"]], "dpnp.abs": [[10, "dpnp-abs"]], "dpnp.absolute": [[11, "dpnp-absolute"]], "dpnp.add": [[12, "dpnp-add"]], "dpnp.all": [[13, "dpnp-all"]], "dpnp.allclose": [[14, "dpnp-allclose"]], "dpnp.amax": [[15, "dpnp-amax"]], "dpnp.amin": [[16, "dpnp-amin"]], "dpnp.any": [[17, "dpnp-any"]], "dpnp.arange": [[18, "dpnp-arange"]], "dpnp.arccos": [[19, "dpnp-arccos"]], "dpnp.arccosh": [[20, "dpnp-arccosh"]], "dpnp.arcsin": [[21, "dpnp-arcsin"]], "dpnp.arcsinh": [[22, "dpnp-arcsinh"]], "dpnp.arctan": [[23, "dpnp-arctan"]], "dpnp.arctan2": [[24, "dpnp-arctan2"]], "dpnp.arctanh": [[25, "dpnp-arctanh"]], "dpnp.argmax": [[26, "dpnp-argmax"]], "dpnp.argmin": [[27, "dpnp-argmin"]], "dpnp.argsort": [[28, "dpnp-argsort"]], "dpnp.around": [[29, "dpnp-around"]], "dpnp.array": [[30, "dpnp-array"]], "dpnp.array_equal": [[31, "dpnp-array-equal"]], "dpnp.asanyarray": [[32, "dpnp-asanyarray"]], "dpnp.asarray": [[33, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[34, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[35, "dpnp-asfarray"]], "dpnp.asnumpy": [[36, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[37, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[38, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[39, "dpnp-atleast-3d"]], "dpnp.average": [[40, "dpnp-average"]], "dpnp.bincount": [[41, "dpnp-bincount"]], "dpnp.bitwise_and": [[42, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[43, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[44, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[45, "dpnp-bitwise-xor"]], "dpnp.broadcast_to": [[46, "dpnp-broadcast-to"]], "dpnp.cbrt": [[47, "dpnp-cbrt"]], "dpnp.ceil": [[48, "dpnp-ceil"]], "dpnp.concatenate": [[49, "dpnp-concatenate"]], "dpnp.conj": [[50, "dpnp-conj"]], "dpnp.convolve": [[51, "dpnp-convolve"]], "dpnp.copy": [[52, "dpnp-copy"]], "dpnp.copysign": [[53, "dpnp-copysign"]], "dpnp.copyto": [[54, "dpnp-copyto"]], "dpnp.correlate": [[55, "dpnp-correlate"]], "dpnp.cos": [[56, "dpnp-cos"]], "dpnp.cosh": [[57, "dpnp-cosh"]], "dpnp.count_nonzero": [[58, "dpnp-count-nonzero"]], "dpnp.cov": [[59, "dpnp-cov"]], "dpnp.cross": [[60, "dpnp-cross"]], "dpnp.cumprod": [[61, "dpnp-cumprod"]], "dpnp.cumsum": [[62, "dpnp-cumsum"]], "dpnp.deg2rad": [[63, "dpnp-deg2rad"]], "dpnp.degrees": [[64, "dpnp-degrees"]], "dpnp.diag": [[65, "dpnp-diag"]], "dpnp.diagflat": [[66, "dpnp-diagflat"]], "dpnp.diff": [[67, "dpnp-diff"]], "dpnp.divide": [[68, "dpnp-divide"]], "dpnp.dot": [[69, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[70, "dpnp-dpnp-array-dpnp-array"]], "dpnp.ediff1d": [[71, "dpnp-ediff1d"]], "dpnp.einsum": [[72, "dpnp-einsum"]], "dpnp.einsum_path": [[73, "dpnp-einsum-path"]], "dpnp.empty": [[74, "dpnp-empty"]], "dpnp.empty_like": [[75, "dpnp-empty-like"]], "dpnp.equal": [[76, "dpnp-equal"]], "dpnp.erf": [[77, "dpnp-erf"]], "dpnp.exp": [[78, "dpnp-exp"]], "dpnp.exp2": [[79, "dpnp-exp2"]], "dpnp.expand_dims": [[80, "dpnp-expand-dims"]], "dpnp.expm1": [[81, "dpnp-expm1"]], "dpnp.eye": [[82, "dpnp-eye"]], "dpnp.fabs": [[83, "dpnp-fabs"]], "dpnp.fft.fft": [[84, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[85, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[86, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[87, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[88, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[89, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[90, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[91, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[92, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[93, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[94, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[95, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[96, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[97, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[98, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[99, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[100, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[101, "dpnp-fft-rfftn"]], "dpnp.floor": [[102, "dpnp-floor"]], "dpnp.floor_divide": [[103, "dpnp-floor-divide"]], "dpnp.fmax": [[104, "dpnp-fmax"]], "dpnp.fmin": [[105, "dpnp-fmin"]], "dpnp.fmod": [[106, "dpnp-fmod"]], "dpnp.fromfile": [[107, "dpnp-fromfile"]], "dpnp.full": [[108, "dpnp-full"]], "dpnp.full_like": [[109, "dpnp-full-like"]], "dpnp.geomspace": [[110, "dpnp-geomspace"]], "dpnp.get_include": [[111, "dpnp-get-include"]], "dpnp.gradient": [[112, "dpnp-gradient"]], "dpnp.greater": [[113, "dpnp-greater"]], "dpnp.greater_equal": [[114, "dpnp-greater-equal"]], "dpnp.histogram": [[115, "dpnp-histogram"]], "dpnp.hstack": [[116, "dpnp-hstack"]], "dpnp.hypot": [[117, "dpnp-hypot"]], "dpnp.identity": [[118, "dpnp-identity"]], "dpnp.inner": [[119, "dpnp-inner"]], "dpnp.invert": [[120, "dpnp-invert"]], "dpnp.isclose": [[121, "dpnp-isclose"]], "dpnp.isfinite": [[122, "dpnp-isfinite"]], "dpnp.isinf": [[123, "dpnp-isinf"]], "dpnp.isnan": [[124, "dpnp-isnan"]], "dpnp.isscalar": [[125, "dpnp-isscalar"]], "dpnp.kron": [[126, "dpnp-kron"]], "dpnp.left_shift": [[127, "dpnp-left-shift"]], "dpnp.less": [[128, "dpnp-less"]], "dpnp.less_equal": [[129, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[130, "dpnp-linalg-cholesky"]], "dpnp.linalg.det": [[131, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[132, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[133, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[134, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[135, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[136, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[137, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[138, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[139, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[140, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[141, "dpnp-linalg-svd"]], "dpnp.linspace": [[142, "dpnp-linspace"]], "dpnp.log": [[143, "dpnp-log"]], "dpnp.log10": [[144, "dpnp-log10"]], "dpnp.log1p": [[145, "dpnp-log1p"]], "dpnp.log2": [[146, "dpnp-log2"]], "dpnp.logical_and": [[147, "dpnp-logical-and"]], "dpnp.logical_not": [[148, "dpnp-logical-not"]], "dpnp.logical_or": [[149, "dpnp-logical-or"]], "dpnp.logical_xor": [[150, "dpnp-logical-xor"]], "dpnp.logspace": [[151, "dpnp-logspace"]], "dpnp.matmul": [[152, "dpnp-matmul"]], "dpnp.max": [[153, "dpnp-max"]], "dpnp.maximum": [[154, "dpnp-maximum"]], "dpnp.mean": [[155, "dpnp-mean"]], "dpnp.median": [[156, "dpnp-median"]], "dpnp.meshgrid": [[157, "dpnp-meshgrid"]], "dpnp.mgrid": [[158, "dpnp-mgrid"]], "dpnp.min": [[159, "dpnp-min"]], "dpnp.minimum": [[160, "dpnp-minimum"]], "dpnp.mod": [[161, "dpnp-mod"]], "dpnp.modf": [[162, "dpnp-modf"]], "dpnp.moveaxis": [[163, "dpnp-moveaxis"]], "dpnp.multiply": [[164, "dpnp-multiply"]], "dpnp.nancumprod": [[165, "dpnp-nancumprod"]], "dpnp.nancumsum": [[166, "dpnp-nancumsum"]], "dpnp.nanprod": [[167, "dpnp-nanprod"]], "dpnp.nansum": [[168, "dpnp-nansum"]], "dpnp.nanvar": [[169, "dpnp-nanvar"]], "dpnp.ndarray": [[170, "dpnp-ndarray"]], "dpnp.negative": [[171, "dpnp-negative"]], "dpnp.nonzero": [[172, "dpnp-nonzero"]], "dpnp.not_equal": [[173, "dpnp-not-equal"]], "dpnp.ogrid": [[174, "dpnp-ogrid"]], "dpnp.ones": [[175, "dpnp-ones"]], "dpnp.ones_like": [[176, "dpnp-ones-like"]], "dpnp.outer": [[177, "dpnp-outer"]], "dpnp.partition": [[178, "dpnp-partition"]], "dpnp.power": [[179, "dpnp-power"]], "dpnp.prod": [[180, "dpnp-prod"]], "dpnp.rad2deg": [[181, "dpnp-rad2deg"]], "dpnp.radians": [[182, "dpnp-radians"]], "dpnp.random.RandomState": [[183, "dpnp-random-randomstate"]], "dpnp.random.beta": [[184, "dpnp-random-beta"]], "dpnp.random.binomial": [[185, "dpnp-random-binomial"]], "dpnp.random.bytes": [[186, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[187, "dpnp-random-chisquare"]], "dpnp.random.choice": [[188, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[189, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[190, "dpnp-random-exponential"]], "dpnp.random.f": [[191, "dpnp-random-f"]], "dpnp.random.gamma": [[192, "dpnp-random-gamma"]], "dpnp.random.geometric": [[193, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[194, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[195, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[196, "dpnp-random-laplace"]], "dpnp.random.logistic": [[197, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[198, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[199, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[200, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[201, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[202, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[203, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[204, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[205, "dpnp-random-normal"]], "dpnp.random.pareto": [[206, "dpnp-random-pareto"]], "dpnp.random.permutation": [[207, "dpnp-random-permutation"]], "dpnp.random.poisson": [[208, "dpnp-random-poisson"]], "dpnp.random.power": [[209, "dpnp-random-power"]], "dpnp.random.rand": [[210, "dpnp-random-rand"]], "dpnp.random.randint": [[211, "dpnp-random-randint"]], "dpnp.random.randn": [[212, "dpnp-random-randn"]], "dpnp.random.random": [[213, "dpnp-random-random"]], "dpnp.random.random_integers": [[214, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[215, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[216, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[217, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[218, "dpnp-random-sample"]], "dpnp.random.seed": [[219, "dpnp-random-seed"]], "dpnp.random.shuffle": [[220, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[221, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[222, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[223, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[224, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[225, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[226, "dpnp-random-triangular"]], "dpnp.random.uniform": [[227, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[228, "dpnp-random-vonmises"]], "dpnp.random.wald": [[229, "dpnp-random-wald"]], "dpnp.random.weibull": [[230, "dpnp-random-weibull"]], "dpnp.random.zipf": [[231, "dpnp-random-zipf"]], "dpnp.ravel": [[232, "dpnp-ravel"]], "dpnp.reciprocal": [[233, "dpnp-reciprocal"]], "dpnp.remainder": [[234, "dpnp-remainder"]], "dpnp.repeat": [[235, "dpnp-repeat"]], "dpnp.reshape": [[236, "dpnp-reshape"]], "dpnp.right_shift": [[237, "dpnp-right-shift"]], "dpnp.rollaxis": [[238, "dpnp-rollaxis"]], "dpnp.round_": [[239, "dpnp-round"]], "dpnp.searchsorted": [[240, "dpnp-searchsorted"]], "dpnp.sign": [[241, "dpnp-sign"]], "dpnp.sin": [[242, "dpnp-sin"]], "dpnp.sinh": [[243, "dpnp-sinh"]], "dpnp.sort": [[244, "dpnp-sort"]], "dpnp.sqrt": [[245, "dpnp-sqrt"]], "dpnp.square": [[246, "dpnp-square"]], "dpnp.squeeze": [[247, "dpnp-squeeze"]], "dpnp.stack": [[248, "dpnp-stack"]], "dpnp.std": [[249, "dpnp-std"]], "dpnp.subtract": [[250, "dpnp-subtract"]], "dpnp.sum": [[251, "dpnp-sum"]], "dpnp.swapaxes": [[252, "dpnp-swapaxes"]], "dpnp.tan": [[253, "dpnp-tan"]], "dpnp.tanh": [[254, "dpnp-tanh"]], "dpnp.tensordot": [[255, "dpnp-tensordot"]], "dpnp.trace": [[256, "dpnp-trace"]], "dpnp.transpose": [[257, "dpnp-transpose"]], "dpnp.trapz": [[258, "dpnp-trapz"]], "dpnp.tri": [[259, "dpnp-tri"]], "dpnp.tril": [[260, "dpnp-tril"]], "dpnp.triu": [[261, "dpnp-triu"]], "dpnp.true_divide": [[262, "dpnp-true-divide"]], "dpnp.trunc": [[263, "dpnp-trunc"]], "dpnp.unique": [[264, "dpnp-unique"]], "dpnp.unwrap": [[265, "dpnp-unwrap"]], "dpnp.vander": [[266, "dpnp-vander"]], "dpnp.var": [[267, "dpnp-var"]], "dpnp.vdot": [[268, "dpnp-vdot"]], "dpnp.vstack": [[269, "dpnp-vstack"]], "dpnp.where": [[270, "dpnp-where"]], "dpnp.zeros": [[271, "dpnp-zeros"]], "dpnp.zeros_like": [[272, "dpnp-zeros-like"]], "API Reference": [[273, "api-reference"]], "Matrix and vector products": [[274, "matrix-and-vector-products"]], "Decompositions": [[274, "decompositions"]], "Matrix eigenvalues": [[274, "matrix-eigenvalues"]], "Norms etc.": [[274, "norms-etc"]], "Solving linear equations": [[274, "solving-linear-equations"]], "Special Matrices": [[274, "special-matrices"]], "Logic Functions": [[275, "logic-functions"]], "Truth value testing": [[275, "truth-value-testing"]], "Infinities and NaNs": [[275, "infinities-and-nans"]], "Array type testing": [[275, "array-type-testing"]], "Logic operations": [[275, "logic-operations"]], "Comparison": [[275, "comparison"]], "Array Manipulation Routines": [[276, "array-manipulation-routines"]], "Basic operations": [[276, "basic-operations"]], "Changing array shape": [[276, "changing-array-shape"]], "Transpose-like operations": [[276, "transpose-like-operations"]], "Changing number of dimensions": [[276, "changing-number-of-dimensions"]], "Changing kind of array": [[276, "changing-kind-of-array"]], "Joining arrays": [[276, "joining-arrays"]], "Splitting arrays": [[276, "splitting-arrays"]], "Tiling arrays": [[276, "tiling-arrays"]], "Adding and removing elements": [[276, "adding-and-removing-elements"]], "Rearranging elements": [[276, "rearranging-elements"]], "Mathematical Functions": [[277, "mathematical-functions"]], "Trigonometric functions": [[277, "trigonometric-functions"], [287, "trigonometric-functions"]], "Hyperbolic functions": [[277, "hyperbolic-functions"]], "Rounding": [[277, "rounding"]], "Sums, products, differences": [[277, "sums-products-differences"]], "Exponents and logarithms": [[277, "exponents-and-logarithms"]], "Other special functions": [[277, "other-special-functions"]], "Floating point routines": [[277, "floating-point-routines"]], "Arithmetic operations": [[277, "arithmetic-operations"]], "Handling complex numbers": [[277, "handling-complex-numbers"]], "Miscellaneous": [[277, "miscellaneous"]], "Miscellaneous routines": [[278, "miscellaneous-routines"]], "Utility": [[278, "utility"]], "Multi-Dimensional Array (ndarray)": [[279, "multi-dimensional-array-ndarray"]], "Padding": [[280, "padding"]], "Polynomials": [[281, "polynomials"]], "Polynomial Package": [[281, "polynomial-package"]], "Polynomial Module": [[281, "polynomial-module"]], "Polyutils": [[281, "polyutils"]], "Poly1d": [[281, "poly1d"]], "Basics": [[281, "basics"]], "Arithmetic": [[281, "arithmetic"]], "Random Sampling (dpnp.random)": [[282, "random-sampling-dpnp-random"]], "Simple random data": [[282, "simple-random-data"]], "Permutations": [[282, "permutations"]], "Distributions": [[282, "distributions"]], "Random generator": [[282, "random-generator"]], "Routines": [[283, "routines"]], "Sorting, Searching, and Counting": [[284, "sorting-searching-and-counting"]], "Sorting": [[284, "sorting"]], "Searching": [[284, "searching"]], "Counting": [[284, "counting"]], "Special Functions": [[285, "special-functions"]], "Error Function": [[285, "error-function"]], "Statistical Functions": [[286, "statistical-functions"]], "Order statistics": [[286, "order-statistics"]], "Means and variances": [[286, "means-and-variances"]], "Histograms": [[286, "histograms"]], "Correlations": [[286, "correlations"]], "Universal Functions (ufunc)": [[287, "universal-functions-ufunc"]], "Available ufuncs": [[287, "available-ufuncs"]], "Math operations": [[287, "math-operations"]], "Bit-twiddling functions": [[287, "bit-twiddling-functions"]], "Comparison functions": [[287, "comparison-functions"]], "Floating functions": [[287, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"], [3, "module-dpnp"]], "module": [[2, "module-dpnp"], [3, "module-dpnp"], [9, "module-dpnp.fft"], [282, "module-dpnp.random"]], "dpnp.fft": [[9, "module-dpnp.fft"]], "abs() (in module dpnp)": [[10, "dpnp.abs"]], "absolute() (in module dpnp)": [[11, "dpnp.absolute"]], "add() (in module dpnp)": [[12, "dpnp.add"]], "all() (in module dpnp)": [[13, "dpnp.all"]], "allclose() (in module dpnp)": [[14, "dpnp.allclose"]], "amax() (in module dpnp)": [[15, "dpnp.amax"]], "amin() (in module dpnp)": [[16, "dpnp.amin"]], "any() (in module dpnp)": [[17, "dpnp.any"]], "arange() (in module dpnp)": [[18, "dpnp.arange"]], "arccos() (in module dpnp)": [[19, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[20, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[21, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[22, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[23, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[24, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[25, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[26, "dpnp.argmax"]], "argmin() (in module dpnp)": [[27, "dpnp.argmin"]], "argsort() (in module dpnp)": [[28, "dpnp.argsort"]], "around() (in module dpnp)": [[29, "dpnp.around"]], "array() (in module dpnp)": [[30, "dpnp.array"]], "array_equal() (in module dpnp)": [[31, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[32, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[33, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[34, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[35, "dpnp.asfarray"]], "asnumpy() (in module dpnp)": [[36, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[37, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[38, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[39, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[40, "dpnp.average"]], "bincount() (in module dpnp)": [[41, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[42, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[43, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[44, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[45, "dpnp.bitwise_xor"]], "broadcast_to() (in module dpnp)": [[46, "dpnp.broadcast_to"]], "cbrt() (in module dpnp)": [[47, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[48, "dpnp.ceil"]], "concatenate() (in module dpnp)": [[49, "dpnp.concatenate"]], "conj() (in module dpnp)": [[50, "dpnp.conj"]], "convolve() (in module dpnp)": [[51, "dpnp.convolve"]], "copy() (in module dpnp)": [[52, "dpnp.copy"]], "copysign() (in module dpnp)": [[53, "dpnp.copysign"]], "copyto() (in module dpnp)": [[54, "dpnp.copyto"]], "correlate() (in module dpnp)": [[55, "dpnp.correlate"]], "cos() (in module dpnp)": [[56, "dpnp.cos"]], "cosh() (in module dpnp)": [[57, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[58, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[59, "dpnp.cov"]], "cross() (in module dpnp)": [[60, "dpnp.cross"]], "cumprod() (in module dpnp)": [[61, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[62, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[63, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[64, "dpnp.degrees"]], "diag() (in module dpnp)": [[65, "dpnp.diag"]], "diagflat() (in module dpnp)": [[66, "dpnp.diagflat"]], "diff() (in module dpnp)": [[67, "dpnp.diff"]], "divide() (in module dpnp)": [[68, "dpnp.divide"]], "dot() (in module dpnp)": [[69, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.conjugate"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[70, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.get_array"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.prod"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.sum"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[70, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[70, "dpnp.dpnp_array.dpnp_array.var"]], "ediff1d() (in module dpnp)": [[71, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[72, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[73, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[74, "dpnp.empty"]], "empty_like() (in module dpnp)": [[75, "dpnp.empty_like"]], "equal() (in module dpnp)": [[76, "dpnp.equal"]], "erf() (in module dpnp)": [[77, "dpnp.erf"]], "exp() (in module dpnp)": [[78, "dpnp.exp"]], "exp2() (in module dpnp)": [[79, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[80, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[81, "dpnp.expm1"]], "eye() (in module dpnp)": [[82, "dpnp.eye"]], "fabs() (in module dpnp)": [[83, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[84, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[85, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[86, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[87, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[88, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[89, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[90, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[91, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[92, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[93, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[94, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[95, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[96, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[97, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[98, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[99, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[100, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[101, "dpnp.fft.rfftn"]], "floor() (in module dpnp)": [[102, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[103, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[104, "dpnp.fmax"]], "fmin() (in module dpnp)": [[105, "dpnp.fmin"]], "fmod() (in module dpnp)": [[106, "dpnp.fmod"]], "fromfile() (in module dpnp)": [[107, "dpnp.fromfile"]], "full() (in module dpnp)": [[108, "dpnp.full"]], "full_like() (in module dpnp)": [[109, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[110, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[111, "dpnp.get_include"]], "gradient() (in module dpnp)": [[112, "dpnp.gradient"]], "greater() (in module dpnp)": [[113, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[114, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[115, "dpnp.histogram"]], "hstack() (in module dpnp)": [[116, "dpnp.hstack"]], "hypot() (in module dpnp)": [[117, "dpnp.hypot"]], "identity() (in module dpnp)": [[118, "dpnp.identity"]], "inner() (in module dpnp)": [[119, "dpnp.inner"]], "invert() (in module dpnp)": [[120, "dpnp.invert"]], "isclose() (in module dpnp)": [[121, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[122, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[123, "dpnp.isinf"]], "isnan() (in module dpnp)": [[124, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[125, "dpnp.isscalar"]], "kron() (in module dpnp)": [[126, "dpnp.kron"]], "left_shift() (in module dpnp)": [[127, "dpnp.left_shift"]], "less() (in module dpnp)": [[128, "dpnp.less"]], "less_equal() (in module dpnp)": [[129, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[130, "dpnp.linalg.cholesky"]], "det() (in module dpnp.linalg)": [[131, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[132, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[133, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[134, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[135, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[136, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[137, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[138, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[139, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[140, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[141, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[142, "dpnp.linspace"]], "log() (in module dpnp)": [[143, "dpnp.log"]], "log10() (in module dpnp)": [[144, "dpnp.log10"]], "log1p() (in module dpnp)": [[145, "dpnp.log1p"]], "log2() (in module dpnp)": [[146, "dpnp.log2"]], "logical_and() (in module dpnp)": [[147, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[148, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[149, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[150, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[151, "dpnp.logspace"]], "matmul() (in module dpnp)": [[152, "dpnp.matmul"]], "max() (in module dpnp)": [[153, "dpnp.max"]], "maximum() (in module dpnp)": [[154, "dpnp.maximum"]], "mean() (in module dpnp)": [[155, "dpnp.mean"]], "median() (in module dpnp)": [[156, "dpnp.median"]], "meshgrid() (in module dpnp)": [[157, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[158, "dpnp.mgrid"]], "min() (in module dpnp)": [[159, "dpnp.min"]], "minimum() (in module dpnp)": [[160, "dpnp.minimum"]], "mod() (in module dpnp)": [[161, "dpnp.mod"]], "modf() (in module dpnp)": [[162, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[163, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[164, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[165, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[166, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[167, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[168, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[169, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[170, "dpnp.ndarray"]], "negative() (in module dpnp)": [[171, "dpnp.negative"]], "nonzero() (in module dpnp)": [[172, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[173, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[174, "dpnp.ogrid"]], "ones() (in module dpnp)": [[175, "dpnp.ones"]], "ones_like() (in module dpnp)": [[176, "dpnp.ones_like"]], "outer() (in module dpnp)": [[177, "dpnp.outer"]], "partition() (in module dpnp)": [[178, "dpnp.partition"]], "power() (in module dpnp)": [[179, "dpnp.power"]], "prod() (in module dpnp)": [[180, "dpnp.prod"]], "rad2deg() (in module dpnp)": [[181, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[182, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[183, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[183, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[184, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[185, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[186, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[187, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[188, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[189, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[190, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[191, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[192, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[193, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[194, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[195, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[196, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[197, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[198, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[199, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[200, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[201, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[202, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[203, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[204, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[205, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[206, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[207, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[208, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[209, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[210, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[211, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[212, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[213, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[214, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[215, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[216, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[217, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[218, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[219, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[220, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[221, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[222, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[223, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[224, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[225, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[226, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[227, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[228, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[229, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[230, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[231, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[232, "dpnp.ravel"]], "reciprocal() (in module dpnp)": [[233, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[234, "dpnp.remainder"]], "repeat() (in module dpnp)": [[235, "dpnp.repeat"]], "reshape() (in module dpnp)": [[236, "dpnp.reshape"]], "right_shift() (in module dpnp)": [[237, "dpnp.right_shift"]], "rollaxis() (in module dpnp)": [[238, "dpnp.rollaxis"]], "round_() (in module dpnp)": [[239, "dpnp.round_"]], "searchsorted() (in module dpnp)": [[240, "dpnp.searchsorted"]], "sign() (in module dpnp)": [[241, "dpnp.sign"]], "sin() (in module dpnp)": [[242, "dpnp.sin"]], "sinh() (in module dpnp)": [[243, "dpnp.sinh"]], "sort() (in module dpnp)": [[244, "dpnp.sort"]], "sqrt() (in module dpnp)": [[245, "dpnp.sqrt"]], "square() (in module dpnp)": [[246, "dpnp.square"]], "squeeze() (in module dpnp)": [[247, "dpnp.squeeze"]], "stack() (in module dpnp)": [[248, "dpnp.stack"]], "std() (in module dpnp)": [[249, "dpnp.std"]], "subtract() (in module dpnp)": [[250, "dpnp.subtract"]], "sum() (in module dpnp)": [[251, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[252, "dpnp.swapaxes"]], "tan() (in module dpnp)": [[253, "dpnp.tan"]], "tanh() (in module dpnp)": [[254, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[255, "dpnp.tensordot"]], "trace() (in module dpnp)": [[256, "dpnp.trace"]], "transpose() (in module dpnp)": [[257, "dpnp.transpose"]], "trapz() (in module dpnp)": [[258, "dpnp.trapz"]], "tri() (in module dpnp)": [[259, "dpnp.tri"]], "tril() (in module dpnp)": [[260, "dpnp.tril"]], "triu() (in module dpnp)": [[261, "dpnp.triu"]], "true_divide() (in module dpnp)": [[262, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[263, "dpnp.trunc"]], "unique() (in module dpnp)": [[264, "dpnp.unique"]], "unwrap() (in module dpnp)": [[265, "dpnp.unwrap"]], "vander() (in module dpnp)": [[266, "dpnp.vander"]], "var() (in module dpnp)": [[267, "dpnp.var"]], "vdot() (in module dpnp)": [[268, "dpnp.vdot"]], "vstack() (in module dpnp)": [[269, "dpnp.vstack"]], "where() (in module dpnp)": [[270, "dpnp.where"]], "zeros() (in module dpnp)": [[271, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[272, "dpnp.zeros_like"]], "dpnp.random": [[282, "module-dpnp.random"]]}})