Search.setIndex({"alltitles": {"API Reference": [[652, null]], "Adding and removing elements": [[656, "adding-and-removing-elements"]], "Arithmetic": [[660, "arithmetic"]], "Arithmetic operations": [[657, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[659, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array API standard compatibility": [[5, null]], "Array attributes": [[659, "array-attributes"]], "Array contents": [[655, "array-contents"]], "Array conversion": [[659, "array-conversion"]], "Array creation routines": [[8, null]], "Array manipulation routines": [[656, null]], "Array methods": [[659, "array-methods"]], "Array type testing": [[655, "array-type-testing"]], "Available array data types": [[10, null]], "Available ufuncs": [[666, "available-ufuncs"]], "Averages and variances": [[665, "averages-and-variances"]], "Background information": [[11, "background-information"]], "Basic operations": [[656, "basic-operations"]], "Basics": [[660, "basics"]], "Bit packing": [[6, "bit-packing"]], "Bit-twiddling functions": [[666, "bit-twiddling-functions"]], "Bit-wise operations": [[6, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[8, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[659, "calculation"]], "Changing array shape": [[656, "changing-array-shape"]], "Changing kind of array": [[656, "changing-kind-of-array"]], "Changing number of dimensions": [[656, "changing-number-of-dimensions"]], "Comparison": [[655, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[7, null]], "Comparison functions": [[666, "comparison-functions"]], "Constructing arrays": [[659, "constructing-arrays"]], "Correlations": [[665, "correlations"]], "Counting": [[663, "counting"]], "Creating data types": [[9, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[659, "data-type"]], "Data type information": [[9, "data-type-information"]], "Data type routines": [[9, null]], "Data type testing": [[9, "data-type-testing"]], "Decompositions": [[654, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[7, "discrete-fourier-transform"], [11, null]], "Distributions": [[661, "distributions"]], "Element-wise bit operations": [[6, "element-wise-bit-operations"]], "Error Function": [[664, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[654, "exceptions"]], "Exponents and logarithms": [[657, "exponents-and-logarithms"]], "Extrema finding": [[657, "extrema-finding"]], "Floating functions": [[666, "floating-functions"]], "Floating point routines": [[657, "floating-point-routines"]], "From existing data": [[8, "from-existing-data"]], "From shape or value": [[8, "from-shape-or-value"]], "Functional programming": [[12, null]], "Generating index arrays": [[653, "generating-index-arrays"]], "Handling complex numbers": [[657, "handling-complex-numbers"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Higher dimensions": [[11, "higher-dimensions"]], "Histograms": [[665, "histograms"]], "Hyperbolic functions": [[657, "hyperbolic-functions"]], "Implementation details": [[11, "implementation-details"]], "Indexing arrays": [[659, "indexing-arrays"]], "Indexing routines": [[653, null]], "Indexing-like operations": [[653, "indexing-like-operations"]], "Inserting data into arrays": [[653, "inserting-data-into-arrays"]], "Inspection": [[5, "inspection"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[659, "item-selection-and-manipulation"]], "Iterating over arrays": [[653, "iterating-over-arrays"]], "Joining arrays": [[656, "joining-arrays"]], "Linear Algebra": [[7, "linear-algebra"]], "Linear algebra": [[654, null]], "Logic functions": [[655, null]], "Logical operations": [[655, "logical-operations"]], "Math operations": [[666, "math-operations"]], "Mathematical functions": [[657, null]], "Matrix and vector products": [[654, "matrix-and-vector-products"]], "Matrix eigenvalues": [[654, "matrix-eigenvalues"]], "Memory layout": [[659, "memory-layout"]], "Miscellaneous": [[9, "miscellaneous"], [657, "miscellaneous"]], "Miscellaneous routines": [[658, null]], "Module-Level": [[7, "module-level"]], "Multi-Dimensional Array": [[7, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[659, null]], "Normalization": [[11, "normalization"]], "Norms and other numbers": [[654, "norms-and-other-numbers"]], "Numerical ranges": [[8, "numerical-ranges"]], "Order statistics": [[665, "order-statistics"]], "Other attributes": [[659, "other-attributes"]], "Other matrix operations": [[654, "other-matrix-operations"]], "Other special functions": [[657, "other-special-functions"]], "Output formatting": [[6, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[661, "permutations"]], "Poly1d": [[660, "poly1d"]], "Polynomial Module": [[660, "polynomial-module"]], "Polynomial Package": [[660, "polynomial-package"]], "Polynomials": [[660, null]], "Polyutils": [[660, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[7, "random-sampling"]], "Random generator": [[661, "random-generator"]], "Random sampling (dpnp.random)": [[661, null]], "Rational routines": [[657, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Real and Hermitian transforms": [[11, "real-and-hermitian-transforms"]], "Rearranging elements": [[656, "rearranging-elements"]], "Rounding": [[657, "rounding"]], "Routines": [[662, null]], "Searching": [[663, "searching"]], "Shape manipulation": [[659, "shape-manipulation"]], "Simple random data": [[661, "simple-random-data"]], "Solving linear equations": [[654, "solving-linear-equations"]], "Sorting": [[663, "sorting"]], "Sorting, searching, and counting": [[663, null]], "Special Functions": [[664, null]], "Special methods": [[659, "special-methods"]], "Splitting arrays": [[656, "splitting-arrays"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[665, null]], "Summary": [[7, "summary"]], "Sums, products, differences": [[657, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[8, "the-matrix-class"]], "Tiling arrays": [[656, "tiling-arrays"]], "Transpose-like operations": [[656, "transpose-like-operations"]], "Trigonometric functions": [[657, "trigonometric-functions"], [666, "trigonometric-functions"]], "Truth value testing": [[655, "truth-value-testing"]], "Universal Functions (ufunc)": [[666, null]], "Utility": [[658, "utility"]], "dpnp.__array_namespace_info__": [[13, null]], "dpnp.abs": [[14, null]], "dpnp.absolute": [[15, null]], "dpnp.acos": [[16, null]], "dpnp.acosh": [[17, null]], "dpnp.add": [[18, null]], "dpnp.all": [[19, null]], "dpnp.allclose": [[20, null]], "dpnp.amax": [[21, null]], "dpnp.amin": [[22, null]], "dpnp.angle": [[23, null]], "dpnp.any": [[24, null]], "dpnp.append": [[25, null]], "dpnp.apply_along_axis": [[26, null]], "dpnp.apply_over_axes": [[27, null]], "dpnp.arange": [[28, null]], "dpnp.arccos": [[29, null]], "dpnp.arccosh": [[30, null]], "dpnp.arcsin": [[31, null]], "dpnp.arcsinh": [[32, null]], "dpnp.arctan": [[33, null]], "dpnp.arctan2": [[34, null]], "dpnp.arctanh": [[35, null]], "dpnp.argmax": [[36, null]], "dpnp.argmin": [[37, null]], "dpnp.argsort": [[38, null]], "dpnp.argwhere": [[39, null]], "dpnp.around": [[40, null]], "dpnp.array": [[41, null]], "dpnp.array_equal": [[42, null]], "dpnp.array_equiv": [[43, null]], "dpnp.array_split": [[44, null]], "dpnp.asanyarray": [[45, null]], "dpnp.asarray": [[46, null]], "dpnp.asarray_chkfinite": [[47, null]], "dpnp.ascontiguousarray": [[48, null]], "dpnp.asfarray": [[49, null]], "dpnp.asfortranarray": [[50, null]], "dpnp.asin": [[51, null]], "dpnp.asinh": [[52, null]], "dpnp.asnumpy": [[53, null]], "dpnp.astype": [[54, null]], "dpnp.atan": [[55, null]], "dpnp.atan2": [[56, null]], "dpnp.atanh": [[57, null]], "dpnp.atleast_1d": [[58, null]], "dpnp.atleast_2d": [[59, null]], "dpnp.atleast_3d": [[60, null]], "dpnp.average": [[61, null]], "dpnp.binary_repr": [[62, null]], "dpnp.bincount": [[63, null]], "dpnp.bitwise_and": [[64, null]], "dpnp.bitwise_invert": [[65, null]], "dpnp.bitwise_left_shift": [[66, null]], "dpnp.bitwise_not": [[67, null]], "dpnp.bitwise_or": [[68, null]], "dpnp.bitwise_right_shift": [[69, null]], "dpnp.bitwise_xor": [[70, null]], "dpnp.broadcast_arrays": [[71, null]], "dpnp.broadcast_shapes": [[72, null]], "dpnp.broadcast_to": [[73, null]], "dpnp.byte_bounds": [[74, null]], "dpnp.can_cast": [[75, null]], "dpnp.cbrt": [[76, null]], "dpnp.ceil": [[77, null]], "dpnp.choose": [[78, null]], "dpnp.clip": [[79, null]], "dpnp.column_stack": [[80, null]], "dpnp.compress": [[81, null]], "dpnp.concat": [[82, null]], "dpnp.concatenate": [[83, null]], "dpnp.conj": [[84, null]], "dpnp.conjugate": [[85, null]], "dpnp.convolve": [[86, null]], "dpnp.copy": [[87, null]], "dpnp.copysign": [[88, null]], "dpnp.copyto": [[89, null]], "dpnp.corrcoef": [[90, null]], "dpnp.correlate": [[91, null]], "dpnp.cos": [[92, null]], "dpnp.cosh": [[93, null]], "dpnp.count_nonzero": [[94, null]], "dpnp.cov": [[95, null]], "dpnp.cross": [[96, null]], "dpnp.cumlogsumexp": [[97, null]], "dpnp.cumprod": [[98, null]], "dpnp.cumsum": [[99, null]], "dpnp.cumulative_prod": [[100, null]], "dpnp.cumulative_sum": [[101, null]], "dpnp.deg2rad": [[102, null]], "dpnp.degrees": [[103, null]], "dpnp.delete": [[104, null]], "dpnp.diag": [[105, null]], "dpnp.diag_indices": [[106, null]], "dpnp.diag_indices_from": [[107, null]], "dpnp.diagflat": [[108, null]], "dpnp.diagonal": [[109, null]], "dpnp.diff": [[110, null]], "dpnp.digitize": [[111, null]], "dpnp.divide": [[112, null]], "dpnp.dot": [[113, null]], "dpnp.dpnp_array.dpnp_array": [[114, null]], "dpnp.dpnp_array.dpnp_array.T": [[115, null]], "dpnp.dpnp_array.dpnp_array.all": [[116, null]], "dpnp.dpnp_array.dpnp_array.any": [[117, null]], "dpnp.dpnp_array.dpnp_array.argmax": [[118, null]], "dpnp.dpnp_array.dpnp_array.argmin": [[119, null]], "dpnp.dpnp_array.dpnp_array.argsort": [[120, null]], "dpnp.dpnp_array.dpnp_array.asnumpy": [[121, null]], "dpnp.dpnp_array.dpnp_array.astype": [[122, null]], "dpnp.dpnp_array.dpnp_array.choose": [[123, null]], "dpnp.dpnp_array.dpnp_array.clip": [[124, null]], "dpnp.dpnp_array.dpnp_array.compress": [[125, null]], "dpnp.dpnp_array.dpnp_array.conj": [[126, null]], "dpnp.dpnp_array.dpnp_array.conjugate": [[127, null]], "dpnp.dpnp_array.dpnp_array.copy": [[128, null]], "dpnp.dpnp_array.dpnp_array.cumprod": [[129, null]], "dpnp.dpnp_array.dpnp_array.cumsum": [[130, null]], "dpnp.dpnp_array.dpnp_array.device": [[131, null]], "dpnp.dpnp_array.dpnp_array.diagonal": [[132, null]], "dpnp.dpnp_array.dpnp_array.dot": [[133, null]], "dpnp.dpnp_array.dpnp_array.dtype": [[134, null]], "dpnp.dpnp_array.dpnp_array.fill": [[135, null]], "dpnp.dpnp_array.dpnp_array.flags": [[136, null]], "dpnp.dpnp_array.dpnp_array.flat": [[137, null]], "dpnp.dpnp_array.dpnp_array.flatten": [[138, null]], "dpnp.dpnp_array.dpnp_array.get_array": [[139, null]], "dpnp.dpnp_array.dpnp_array.imag": [[140, null]], "dpnp.dpnp_array.dpnp_array.item": [[141, null]], "dpnp.dpnp_array.dpnp_array.itemsize": [[142, null]], "dpnp.dpnp_array.dpnp_array.mT": [[143, null]], "dpnp.dpnp_array.dpnp_array.max": [[144, null]], "dpnp.dpnp_array.dpnp_array.mean": [[145, null]], "dpnp.dpnp_array.dpnp_array.min": [[146, null]], "dpnp.dpnp_array.dpnp_array.nbytes": [[147, null]], "dpnp.dpnp_array.dpnp_array.ndim": [[148, null]], "dpnp.dpnp_array.dpnp_array.nonzero": [[149, null]], "dpnp.dpnp_array.dpnp_array.partition": [[150, null]], "dpnp.dpnp_array.dpnp_array.prod": [[151, null]], "dpnp.dpnp_array.dpnp_array.put": [[152, null]], "dpnp.dpnp_array.dpnp_array.ravel": [[153, null]], "dpnp.dpnp_array.dpnp_array.real": [[154, null]], "dpnp.dpnp_array.dpnp_array.repeat": [[155, null]], "dpnp.dpnp_array.dpnp_array.reshape": [[156, null]], "dpnp.dpnp_array.dpnp_array.round": [[157, null]], "dpnp.dpnp_array.dpnp_array.searchsorted": [[158, null]], "dpnp.dpnp_array.dpnp_array.shape": [[159, null]], "dpnp.dpnp_array.dpnp_array.size": [[160, null]], "dpnp.dpnp_array.dpnp_array.sort": [[161, null]], "dpnp.dpnp_array.dpnp_array.squeeze": [[162, null]], "dpnp.dpnp_array.dpnp_array.std": [[163, null]], "dpnp.dpnp_array.dpnp_array.strides": [[164, null]], "dpnp.dpnp_array.dpnp_array.sum": [[165, null]], "dpnp.dpnp_array.dpnp_array.swapaxes": [[166, null]], "dpnp.dpnp_array.dpnp_array.sycl_context": [[167, null]], "dpnp.dpnp_array.dpnp_array.sycl_device": [[168, null]], "dpnp.dpnp_array.dpnp_array.sycl_queue": [[169, null]], "dpnp.dpnp_array.dpnp_array.take": [[170, null]], "dpnp.dpnp_array.dpnp_array.to_device": [[171, null]], "dpnp.dpnp_array.dpnp_array.trace": [[172, null]], "dpnp.dpnp_array.dpnp_array.transpose": [[173, null]], "dpnp.dpnp_array.dpnp_array.usm_type": [[174, null]], "dpnp.dpnp_array.dpnp_array.var": [[175, null]], "dpnp.dsplit": [[176, null]], "dpnp.dstack": [[177, null]], "dpnp.dtype": [[178, null]], "dpnp.dtype.alignment": [[179, null]], "dpnp.dtype.base": [[180, null]], "dpnp.dtype.byteorder": [[181, null]], "dpnp.dtype.char": [[182, null]], "dpnp.dtype.descr": [[183, null]], "dpnp.dtype.fields": [[184, null]], "dpnp.dtype.flags": [[185, null]], "dpnp.dtype.hasobject": [[186, null]], "dpnp.dtype.isalignedstruct": [[187, null]], "dpnp.dtype.isbuiltin": [[188, null]], "dpnp.dtype.isnative": [[189, null]], "dpnp.dtype.itemsize": [[190, null]], "dpnp.dtype.kind": [[191, null]], "dpnp.dtype.metadata": [[192, null]], "dpnp.dtype.name": [[193, null]], "dpnp.dtype.names": [[194, null]], "dpnp.dtype.ndim": [[195, null]], "dpnp.dtype.newbyteorder": [[196, null]], "dpnp.dtype.num": [[197, null]], "dpnp.dtype.shape": [[198, null]], "dpnp.dtype.str": [[199, null]], "dpnp.dtype.subdtype": [[200, null]], "dpnp.dtype.type": [[201, null]], "dpnp.ediff1d": [[202, null]], "dpnp.einsum": [[203, null]], "dpnp.einsum_path": [[204, null]], "dpnp.empty": [[205, null]], "dpnp.empty_like": [[206, null]], "dpnp.equal": [[207, null]], "dpnp.erf": [[208, null]], "dpnp.exp": [[209, null]], "dpnp.exp2": [[210, null]], "dpnp.expand_dims": [[211, null]], "dpnp.expm1": [[212, null]], "dpnp.extract": [[213, null]], "dpnp.eye": [[214, null]], "dpnp.fabs": [[215, null]], "dpnp.fft.fft": [[216, null]], "dpnp.fft.fft2": [[217, null]], "dpnp.fft.fftfreq": [[218, null]], "dpnp.fft.fftn": [[219, null]], "dpnp.fft.fftshift": [[220, null]], "dpnp.fft.hfft": [[221, null]], "dpnp.fft.ifft": [[222, null]], "dpnp.fft.ifft2": [[223, null]], "dpnp.fft.ifftn": [[224, null]], "dpnp.fft.ifftshift": [[225, null]], "dpnp.fft.ihfft": [[226, null]], "dpnp.fft.irfft": [[227, null]], "dpnp.fft.irfft2": [[228, null]], "dpnp.fft.irfftn": [[229, null]], "dpnp.fft.rfft": [[230, null]], "dpnp.fft.rfft2": [[231, null]], "dpnp.fft.rfftfreq": [[232, null]], "dpnp.fft.rfftn": [[233, null]], "dpnp.fill_diagonal": [[234, null]], "dpnp.finfo": [[235, null]], "dpnp.fix": [[236, null]], "dpnp.flatiter": [[237, null]], "dpnp.flatnonzero": [[238, null]], "dpnp.flip": [[239, null]], "dpnp.fliplr": [[240, null]], "dpnp.flipud": [[241, null]], "dpnp.float_power": [[242, null]], "dpnp.floor": [[243, null]], "dpnp.floor_divide": [[244, null]], "dpnp.fmax": [[245, null]], "dpnp.fmin": [[246, null]], "dpnp.fmod": [[247, null]], "dpnp.from_dlpack": [[248, null]], "dpnp.frombuffer": [[249, null]], "dpnp.fromfile": [[250, null]], "dpnp.fromfunction": [[251, null]], "dpnp.fromiter": [[252, null]], "dpnp.fromstring": [[253, null]], "dpnp.full": [[254, null]], "dpnp.full_like": [[255, null]], "dpnp.gcd": [[256, null]], "dpnp.geomspace": [[257, null]], "dpnp.get_include": [[258, null]], "dpnp.gradient": [[259, null]], "dpnp.greater": [[260, null]], "dpnp.greater_equal": [[261, null]], "dpnp.heaviside": [[262, null]], "dpnp.histogram": [[263, null]], "dpnp.histogram2d": [[264, null]], "dpnp.histogram_bin_edges": [[265, null]], "dpnp.histogramdd": [[266, null]], "dpnp.hsplit": [[267, null]], "dpnp.hstack": [[268, null]], "dpnp.hypot": [[269, null]], "dpnp.i0": [[270, null]], "dpnp.identity": [[271, null]], "dpnp.iinfo": [[272, null]], "dpnp.imag": [[273, null]], "dpnp.indices": [[274, null]], "dpnp.inner": [[275, null]], "dpnp.insert": [[276, null]], "dpnp.invert": [[277, null]], "dpnp.isclose": [[278, null]], "dpnp.iscomplex": [[279, null]], "dpnp.iscomplexobj": [[280, null]], "dpnp.isdtype": [[281, null]], "dpnp.isfinite": [[282, null]], "dpnp.isfortran": [[283, null]], "dpnp.isinf": [[284, null]], "dpnp.isnan": [[285, null]], "dpnp.isneginf": [[286, null]], "dpnp.isposinf": [[287, null]], "dpnp.isreal": [[288, null]], "dpnp.isrealobj": [[289, null]], "dpnp.isscalar": [[290, null]], "dpnp.issubdtype": [[291, null]], "dpnp.iterable": [[292, null]], "dpnp.ix_": [[293, null]], "dpnp.kron": [[294, null]], "dpnp.lcm": [[295, null]], "dpnp.ldexp": [[296, null]], "dpnp.left_shift": [[297, null]], "dpnp.less": [[298, null]], "dpnp.less_equal": [[299, null]], "dpnp.linalg.cholesky": [[300, null]], "dpnp.linalg.cond": [[301, null]], "dpnp.linalg.cross": [[302, null]], "dpnp.linalg.det": [[303, null]], "dpnp.linalg.diagonal": [[304, null]], "dpnp.linalg.eig": [[305, null]], "dpnp.linalg.eigh": [[306, null]], "dpnp.linalg.eigvals": [[307, null]], "dpnp.linalg.eigvalsh": [[308, null]], "dpnp.linalg.inv": [[309, null]], "dpnp.linalg.lstsq": [[310, null]], "dpnp.linalg.matmul": [[311, null]], "dpnp.linalg.matrix_norm": [[312, null]], "dpnp.linalg.matrix_power": [[313, null]], "dpnp.linalg.matrix_rank": [[314, null]], "dpnp.linalg.multi_dot": [[315, null]], "dpnp.linalg.norm": [[316, null]], "dpnp.linalg.outer": [[317, null]], "dpnp.linalg.pinv": [[318, null]], "dpnp.linalg.qr": [[319, null]], "dpnp.linalg.slogdet": [[320, null]], "dpnp.linalg.solve": [[321, null]], "dpnp.linalg.svd": [[322, null]], "dpnp.linalg.svdvals": [[323, null]], "dpnp.linalg.tensordot": [[324, null]], "dpnp.linalg.tensorinv": [[325, null]], "dpnp.linalg.tensorsolve": [[326, null]], "dpnp.linalg.trace": [[327, null]], "dpnp.linalg.vecdot": [[328, null]], "dpnp.linalg.vector_norm": [[329, null]], "dpnp.linspace": [[330, null]], "dpnp.loadtxt": [[331, null]], "dpnp.log": [[332, null]], "dpnp.log10": [[333, null]], "dpnp.log1p": [[334, null]], "dpnp.log2": [[335, null]], "dpnp.logaddexp": [[336, null]], "dpnp.logaddexp2": [[337, null]], "dpnp.logical_and": [[338, null]], "dpnp.logical_not": [[339, null]], "dpnp.logical_or": [[340, null]], "dpnp.logical_xor": [[341, null]], "dpnp.logspace": [[342, null]], "dpnp.logsumexp": [[343, null]], "dpnp.mask_indices": [[344, null]], "dpnp.matmul": [[345, null]], "dpnp.matrix_transpose": [[346, null]], "dpnp.max": [[347, null]], "dpnp.maximum": [[348, null]], "dpnp.mean": [[349, null]], "dpnp.median": [[350, null]], "dpnp.meshgrid": [[351, null]], "dpnp.mgrid": [[352, null]], "dpnp.min": [[353, null]], "dpnp.minimum": [[354, null]], "dpnp.mod": [[355, null]], "dpnp.modf": [[356, null]], "dpnp.moveaxis": [[357, null]], "dpnp.multiply": [[358, null]], "dpnp.nan_to_num": [[359, null]], "dpnp.nanargmax": [[360, null]], "dpnp.nanargmin": [[361, null]], "dpnp.nancumprod": [[362, null]], "dpnp.nancumsum": [[363, null]], "dpnp.nanmax": [[364, null]], "dpnp.nanmean": [[365, null]], "dpnp.nanmedian": [[366, null]], "dpnp.nanmin": [[367, null]], "dpnp.nanprod": [[368, null]], "dpnp.nanstd": [[369, null]], "dpnp.nansum": [[370, null]], "dpnp.nanvar": [[371, null]], "dpnp.ndarray": [[372, null]], "dpnp.ndarray.T": [[373, null]], "dpnp.ndarray.__abs__": [[374, null]], "dpnp.ndarray.__add__": [[375, null]], "dpnp.ndarray.__and__": [[376, null]], "dpnp.ndarray.__array__": [[377, null]], "dpnp.ndarray.__bool__": [[378, null]], "dpnp.ndarray.__complex__": [[379, null]], "dpnp.ndarray.__copy__": [[380, null]], "dpnp.ndarray.__eq__": [[381, null]], "dpnp.ndarray.__float__": [[382, null]], "dpnp.ndarray.__floordiv__": [[383, null]], "dpnp.ndarray.__ge__": [[384, null]], "dpnp.ndarray.__getitem__": [[385, null]], "dpnp.ndarray.__gt__": [[386, null]], "dpnp.ndarray.__iadd__": [[387, null]], "dpnp.ndarray.__iand__": [[388, null]], "dpnp.ndarray.__ifloordiv__": [[389, null]], "dpnp.ndarray.__ilshift__": [[390, null]], "dpnp.ndarray.__imatmul__": [[391, null]], "dpnp.ndarray.__imod__": [[392, null]], "dpnp.ndarray.__imul__": [[393, null]], "dpnp.ndarray.__int__": [[394, null]], "dpnp.ndarray.__invert__": [[395, null]], "dpnp.ndarray.__ior__": [[396, null]], "dpnp.ndarray.__ipow__": [[397, null]], "dpnp.ndarray.__irshift__": [[398, null]], "dpnp.ndarray.__isub__": [[399, null]], "dpnp.ndarray.__itruediv__": [[400, null]], "dpnp.ndarray.__ixor__": [[401, null]], "dpnp.ndarray.__le__": [[402, null]], "dpnp.ndarray.__len__": [[403, null]], "dpnp.ndarray.__lshift__": [[404, null]], "dpnp.ndarray.__lt__": [[405, null]], "dpnp.ndarray.__matmul__": [[406, null]], "dpnp.ndarray.__mod__": [[407, null]], "dpnp.ndarray.__mul__": [[408, null]], "dpnp.ndarray.__ne__": [[409, null]], "dpnp.ndarray.__neg__": [[410, null]], "dpnp.ndarray.__new__": [[411, null]], "dpnp.ndarray.__or__": [[412, null]], "dpnp.ndarray.__pos__": [[413, null]], "dpnp.ndarray.__pow__": [[414, null]], "dpnp.ndarray.__radd__": [[415, null]], "dpnp.ndarray.__rand__": [[416, null]], "dpnp.ndarray.__repr__": [[417, null]], "dpnp.ndarray.__rfloordiv__": [[418, null]], "dpnp.ndarray.__rlshift__": [[419, null]], "dpnp.ndarray.__rmatmul__": [[420, null]], "dpnp.ndarray.__rmod__": [[421, null]], "dpnp.ndarray.__rmul__": [[422, null]], "dpnp.ndarray.__ror__": [[423, null]], "dpnp.ndarray.__rpow__": [[424, null]], "dpnp.ndarray.__rrshift__": [[425, null]], "dpnp.ndarray.__rshift__": [[426, null]], "dpnp.ndarray.__rsub__": [[427, null]], "dpnp.ndarray.__rtruediv__": [[428, null]], "dpnp.ndarray.__rxor__": [[429, null]], "dpnp.ndarray.__setitem__": [[430, null]], "dpnp.ndarray.__str__": [[431, null]], "dpnp.ndarray.__sub__": [[432, null]], "dpnp.ndarray.__truediv__": [[433, null]], "dpnp.ndarray.__xor__": [[434, null]], "dpnp.ndarray.all": [[435, null]], "dpnp.ndarray.any": [[436, null]], "dpnp.ndarray.argmax": [[437, null]], "dpnp.ndarray.argmin": [[438, null]], "dpnp.ndarray.argsort": [[439, null]], "dpnp.ndarray.asnumpy": [[440, null]], "dpnp.ndarray.astype": [[441, null]], "dpnp.ndarray.choose": [[442, null]], "dpnp.ndarray.clip": [[443, null]], "dpnp.ndarray.compress": [[444, null]], "dpnp.ndarray.conj": [[445, null]], "dpnp.ndarray.conjugate": [[446, null]], "dpnp.ndarray.copy": [[447, null]], "dpnp.ndarray.cumprod": [[448, null]], "dpnp.ndarray.cumsum": [[449, null]], "dpnp.ndarray.device": [[450, null]], "dpnp.ndarray.diagonal": [[451, null]], "dpnp.ndarray.dot": [[452, null]], "dpnp.ndarray.dtype": [[453, null]], "dpnp.ndarray.fill": [[454, null]], "dpnp.ndarray.flags": [[455, null]], "dpnp.ndarray.flat": [[456, null]], "dpnp.ndarray.flatten": [[457, null]], "dpnp.ndarray.get_array": [[458, null]], "dpnp.ndarray.imag": [[459, null]], "dpnp.ndarray.item": [[460, null]], "dpnp.ndarray.itemsize": [[461, null]], "dpnp.ndarray.mT": [[462, null]], "dpnp.ndarray.max": [[463, null]], "dpnp.ndarray.mean": [[464, null]], "dpnp.ndarray.min": [[465, null]], "dpnp.ndarray.nbytes": [[466, null]], "dpnp.ndarray.ndim": [[467, null]], "dpnp.ndarray.nonzero": [[468, null]], "dpnp.ndarray.partition": [[469, null]], "dpnp.ndarray.prod": [[470, null]], "dpnp.ndarray.put": [[471, null]], "dpnp.ndarray.ravel": [[472, null]], "dpnp.ndarray.real": [[473, null]], "dpnp.ndarray.repeat": [[474, null]], "dpnp.ndarray.reshape": [[475, null]], "dpnp.ndarray.round": [[476, null]], "dpnp.ndarray.searchsorted": [[477, null]], "dpnp.ndarray.shape": [[478, null]], "dpnp.ndarray.size": [[479, null]], "dpnp.ndarray.sort": [[480, null]], "dpnp.ndarray.squeeze": [[481, null]], "dpnp.ndarray.std": [[482, null]], "dpnp.ndarray.strides": [[483, null]], "dpnp.ndarray.sum": [[484, null]], "dpnp.ndarray.swapaxes": [[485, null]], "dpnp.ndarray.sycl_context": [[486, null]], "dpnp.ndarray.sycl_device": [[487, null]], "dpnp.ndarray.sycl_queue": [[488, null]], "dpnp.ndarray.take": [[489, null]], "dpnp.ndarray.to_device": [[490, null]], "dpnp.ndarray.trace": [[491, null]], "dpnp.ndarray.transpose": [[492, null]], "dpnp.ndarray.usm_type": [[493, null]], "dpnp.ndarray.var": [[494, null]], "dpnp.ndim": [[495, null]], "dpnp.ndindex": [[496, null]], "dpnp.negative": [[497, null]], "dpnp.nextafter": [[498, null]], "dpnp.nonzero": [[499, null]], "dpnp.not_equal": [[500, null]], "dpnp.ogrid": [[501, null]], "dpnp.ones": [[502, null]], "dpnp.ones_like": [[503, null]], "dpnp.outer": [[504, null]], "dpnp.pad": [[505, null]], "dpnp.partition": [[506, null]], "dpnp.permute_dims": [[507, null]], "dpnp.place": [[508, null]], "dpnp.positive": [[509, null]], "dpnp.pow": [[510, null]], "dpnp.power": [[511, null]], "dpnp.prod": [[512, null]], "dpnp.proj": [[513, null]], "dpnp.ptp": [[514, null]], "dpnp.put": [[515, null]], "dpnp.put_along_axis": [[516, null]], "dpnp.putmask": [[517, null]], "dpnp.rad2deg": [[518, null]], "dpnp.radians": [[519, null]], "dpnp.random.RandomState": [[520, null]], "dpnp.random.RandomState.get_state": [[521, null]], "dpnp.random.RandomState.get_sycl_device": [[522, null]], "dpnp.random.RandomState.get_sycl_queue": [[523, null]], "dpnp.random.RandomState.normal": [[524, null]], "dpnp.random.RandomState.rand": [[525, null]], "dpnp.random.RandomState.randint": [[526, null]], "dpnp.random.RandomState.randn": [[527, null]], "dpnp.random.RandomState.random_sample": [[528, null]], "dpnp.random.RandomState.standard_normal": [[529, null]], "dpnp.random.RandomState.uniform": [[530, null]], "dpnp.random.beta": [[531, null]], "dpnp.random.binomial": [[532, null]], "dpnp.random.bytes": [[533, null]], "dpnp.random.chisquare": [[534, null]], "dpnp.random.choice": [[535, null]], "dpnp.random.dirichlet": [[536, null]], "dpnp.random.exponential": [[537, null]], "dpnp.random.f": [[538, null]], "dpnp.random.gamma": [[539, null]], "dpnp.random.geometric": [[540, null]], "dpnp.random.gumbel": [[541, null]], "dpnp.random.hypergeometric": [[542, null]], "dpnp.random.laplace": [[543, null]], "dpnp.random.logistic": [[544, null]], "dpnp.random.lognormal": [[545, null]], "dpnp.random.logseries": [[546, null]], "dpnp.random.multinomial": [[547, null]], "dpnp.random.multivariate_normal": [[548, null]], "dpnp.random.negative_binomial": [[549, null]], "dpnp.random.noncentral_chisquare": [[550, null]], "dpnp.random.noncentral_f": [[551, null]], "dpnp.random.normal": [[552, null]], "dpnp.random.pareto": [[553, null]], "dpnp.random.permutation": [[554, null]], "dpnp.random.poisson": [[555, null]], "dpnp.random.power": [[556, null]], "dpnp.random.rand": [[557, null]], "dpnp.random.randint": [[558, null]], "dpnp.random.randn": [[559, null]], "dpnp.random.random": [[560, null]], "dpnp.random.random_integers": [[561, null]], "dpnp.random.random_sample": [[562, null]], "dpnp.random.ranf": [[563, null]], "dpnp.random.rayleigh": [[564, null]], "dpnp.random.sample": [[565, null]], "dpnp.random.seed": [[566, null]], "dpnp.random.shuffle": [[567, null]], "dpnp.random.standard_cauchy": [[568, null]], "dpnp.random.standard_exponential": [[569, null]], "dpnp.random.standard_gamma": [[570, null]], "dpnp.random.standard_normal": [[571, null]], "dpnp.random.standard_t": [[572, null]], "dpnp.random.triangular": [[573, null]], "dpnp.random.uniform": [[574, null]], "dpnp.random.vonmises": [[575, null]], "dpnp.random.wald": [[576, null]], "dpnp.random.weibull": [[577, null]], "dpnp.random.zipf": [[578, null]], "dpnp.ravel": [[579, null]], "dpnp.ravel_multi_index": [[580, null]], "dpnp.real": [[581, null]], "dpnp.real_if_close": [[582, null]], "dpnp.reciprocal": [[583, null]], "dpnp.reduce_hypot": [[584, null]], "dpnp.remainder": [[585, null]], "dpnp.repeat": [[586, null]], "dpnp.require": [[587, null]], "dpnp.reshape": [[588, null]], "dpnp.resize": [[589, null]], "dpnp.result_type": [[590, null]], "dpnp.right_shift": [[591, null]], "dpnp.rint": [[592, null]], "dpnp.roll": [[593, null]], "dpnp.rollaxis": [[594, null]], "dpnp.rot90": [[595, null]], "dpnp.round": [[596, null]], "dpnp.row_stack": [[597, null]], "dpnp.rsqrt": [[598, null]], "dpnp.searchsorted": [[599, null]], "dpnp.select": [[600, null]], "dpnp.shape": [[601, null]], "dpnp.sign": [[602, null]], "dpnp.signbit": [[603, null]], "dpnp.sin": [[604, null]], "dpnp.sinc": [[605, null]], "dpnp.sinh": [[606, null]], "dpnp.size": [[607, null]], "dpnp.sort": [[608, null]], "dpnp.sort_complex": [[609, null]], "dpnp.spacing": [[610, null]], "dpnp.split": [[611, null]], "dpnp.sqrt": [[612, null]], "dpnp.square": [[613, null]], "dpnp.squeeze": [[614, null]], "dpnp.stack": [[615, null]], "dpnp.std": [[616, null]], "dpnp.subtract": [[617, null]], "dpnp.sum": [[618, null]], "dpnp.swapaxes": [[619, null]], "dpnp.take": [[620, null]], "dpnp.take_along_axis": [[621, null]], "dpnp.tan": [[622, null]], "dpnp.tanh": [[623, null]], "dpnp.tensordot": [[624, null]], "dpnp.tile": [[625, null]], "dpnp.trace": [[626, null]], "dpnp.transpose": [[627, null]], "dpnp.trapezoid": [[628, null]], "dpnp.tri": [[629, null]], "dpnp.tril": [[630, null]], "dpnp.tril_indices": [[631, null]], "dpnp.tril_indices_from": [[632, null]], "dpnp.trim_zeros": [[633, null]], "dpnp.triu": [[634, null]], "dpnp.triu_indices": [[635, null]], "dpnp.triu_indices_from": [[636, null]], "dpnp.true_divide": [[637, null]], "dpnp.trunc": [[638, null]], "dpnp.unique": [[639, null]], "dpnp.unravel_index": [[640, null]], "dpnp.unstack": [[641, null]], "dpnp.unwrap": [[642, null]], "dpnp.vander": [[643, null]], "dpnp.var": [[644, null]], "dpnp.vdot": [[645, null]], "dpnp.vecdot": [[646, null]], "dpnp.vsplit": [[647, null]], "dpnp.vstack": [[648, null]], "dpnp.where": [[649, null]], "dpnp.zeros": [[650, null]], "dpnp.zeros_like": [[651, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/array_api", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.__array_namespace_info__", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.apply_over_axes", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.compress", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.cumulative_prod", "reference/generated/dpnp.cumulative_sum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dpnp_array.dpnp_array.T", "reference/generated/dpnp.dpnp_array.dpnp_array.all", "reference/generated/dpnp.dpnp_array.dpnp_array.any", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy", "reference/generated/dpnp.dpnp_array.dpnp_array.astype", "reference/generated/dpnp.dpnp_array.dpnp_array.choose", "reference/generated/dpnp.dpnp_array.dpnp_array.clip", "reference/generated/dpnp.dpnp_array.dpnp_array.compress", "reference/generated/dpnp.dpnp_array.dpnp_array.conj", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate", "reference/generated/dpnp.dpnp_array.dpnp_array.copy", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum", "reference/generated/dpnp.dpnp_array.dpnp_array.device", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal", "reference/generated/dpnp.dpnp_array.dpnp_array.dot", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype", "reference/generated/dpnp.dpnp_array.dpnp_array.fill", "reference/generated/dpnp.dpnp_array.dpnp_array.flags", "reference/generated/dpnp.dpnp_array.dpnp_array.flat", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array", "reference/generated/dpnp.dpnp_array.dpnp_array.imag", "reference/generated/dpnp.dpnp_array.dpnp_array.item", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize", "reference/generated/dpnp.dpnp_array.dpnp_array.mT", "reference/generated/dpnp.dpnp_array.dpnp_array.max", "reference/generated/dpnp.dpnp_array.dpnp_array.mean", "reference/generated/dpnp.dpnp_array.dpnp_array.min", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero", "reference/generated/dpnp.dpnp_array.dpnp_array.partition", "reference/generated/dpnp.dpnp_array.dpnp_array.prod", "reference/generated/dpnp.dpnp_array.dpnp_array.put", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel", "reference/generated/dpnp.dpnp_array.dpnp_array.real", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape", "reference/generated/dpnp.dpnp_array.dpnp_array.round", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted", "reference/generated/dpnp.dpnp_array.dpnp_array.shape", "reference/generated/dpnp.dpnp_array.dpnp_array.size", "reference/generated/dpnp.dpnp_array.dpnp_array.sort", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze", "reference/generated/dpnp.dpnp_array.dpnp_array.std", "reference/generated/dpnp.dpnp_array.dpnp_array.strides", "reference/generated/dpnp.dpnp_array.dpnp_array.sum", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue", "reference/generated/dpnp.dpnp_array.dpnp_array.take", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device", "reference/generated/dpnp.dpnp_array.dpnp_array.trace", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type", "reference/generated/dpnp.dpnp_array.dpnp_array.var", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.dtype.alignment", "reference/generated/dpnp.dtype.base", "reference/generated/dpnp.dtype.byteorder", "reference/generated/dpnp.dtype.char", "reference/generated/dpnp.dtype.descr", "reference/generated/dpnp.dtype.fields", "reference/generated/dpnp.dtype.flags", "reference/generated/dpnp.dtype.hasobject", "reference/generated/dpnp.dtype.isalignedstruct", "reference/generated/dpnp.dtype.isbuiltin", "reference/generated/dpnp.dtype.isnative", "reference/generated/dpnp.dtype.itemsize", "reference/generated/dpnp.dtype.kind", "reference/generated/dpnp.dtype.metadata", "reference/generated/dpnp.dtype.name", "reference/generated/dpnp.dtype.names", "reference/generated/dpnp.dtype.ndim", "reference/generated/dpnp.dtype.newbyteorder", "reference/generated/dpnp.dtype.num", "reference/generated/dpnp.dtype.shape", "reference/generated/dpnp.dtype.str", "reference/generated/dpnp.dtype.subdtype", "reference/generated/dpnp.dtype.type", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram2d", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.histogramdd", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.i0", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isdtype", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.iterable", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmedian", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__array__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.asnumpy", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.compress", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.device", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dot", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.get_array", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.sycl_context", "reference/generated/dpnp.ndarray.sycl_device", "reference/generated/dpnp.ndarray.sycl_queue", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.to_device", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.usm_type", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.ndindex", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.RandomState.get_state", "reference/generated/dpnp.random.RandomState.get_sycl_device", "reference/generated/dpnp.random.RandomState.get_sycl_queue", "reference/generated/dpnp.random.RandomState.normal", "reference/generated/dpnp.random.RandomState.rand", "reference/generated/dpnp.random.RandomState.randint", "reference/generated/dpnp.random.RandomState.randn", "reference/generated/dpnp.random.RandomState.random_sample", "reference/generated/dpnp.random.RandomState.standard_normal", "reference/generated/dpnp.random.RandomState.uniform", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/array_api.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.__array_namespace_info__.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.apply_over_axes.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.compress.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.cumulative_prod.rst", "reference/generated/dpnp.cumulative_sum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.T.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.all.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.any.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.astype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.choose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.clip.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.compress.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conj.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.copy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.fill.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flags.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.imag.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.item.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mT.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.max.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mean.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.min.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.partition.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.prod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.put.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.real.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.round.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.shape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.size.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.std.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.strides.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.take.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.trace.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.var.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.dtype.alignment.rst", "reference/generated/dpnp.dtype.base.rst", "reference/generated/dpnp.dtype.byteorder.rst", "reference/generated/dpnp.dtype.char.rst", "reference/generated/dpnp.dtype.descr.rst", "reference/generated/dpnp.dtype.fields.rst", "reference/generated/dpnp.dtype.flags.rst", "reference/generated/dpnp.dtype.hasobject.rst", "reference/generated/dpnp.dtype.isalignedstruct.rst", "reference/generated/dpnp.dtype.isbuiltin.rst", "reference/generated/dpnp.dtype.isnative.rst", "reference/generated/dpnp.dtype.itemsize.rst", "reference/generated/dpnp.dtype.kind.rst", "reference/generated/dpnp.dtype.metadata.rst", "reference/generated/dpnp.dtype.name.rst", "reference/generated/dpnp.dtype.names.rst", "reference/generated/dpnp.dtype.ndim.rst", "reference/generated/dpnp.dtype.newbyteorder.rst", "reference/generated/dpnp.dtype.num.rst", "reference/generated/dpnp.dtype.shape.rst", "reference/generated/dpnp.dtype.str.rst", "reference/generated/dpnp.dtype.subdtype.rst", "reference/generated/dpnp.dtype.type.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram2d.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.histogramdd.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.i0.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isdtype.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.iterable.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmedian.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__array__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.asnumpy.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.compress.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.device.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dot.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.get_array.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.sycl_context.rst", "reference/generated/dpnp.ndarray.sycl_device.rst", "reference/generated/dpnp.ndarray.sycl_queue.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.to_device.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.usm_type.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.ndindex.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.RandomState.get_state.rst", "reference/generated/dpnp.random.RandomState.get_sycl_device.rst", "reference/generated/dpnp.random.RandomState.get_sycl_queue.rst", "reference/generated/dpnp.random.RandomState.normal.rst", "reference/generated/dpnp.random.RandomState.rand.rst", "reference/generated/dpnp.random.RandomState.randint.rst", "reference/generated/dpnp.random.RandomState.randn.rst", "reference/generated/dpnp.random.RandomState.random_sample.rst", "reference/generated/dpnp.random.RandomState.standard_normal.rst", "reference/generated/dpnp.random.RandomState.uniform.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[374, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[375, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[376, "dpnp.ndarray.__and__", false]], "__array__() (dpnp.ndarray method)": [[377, "dpnp.ndarray.__array__", false]], "__array_namespace_info__() (in module dpnp)": [[13, "dpnp.__array_namespace_info__", false]], "__bool__() (dpnp.ndarray method)": [[378, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[379, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[380, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.ndarray method)": [[381, "dpnp.ndarray.__eq__", false]], "__float__() (dpnp.ndarray method)": [[382, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[383, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.ndarray method)": [[384, "dpnp.ndarray.__ge__", false]], "__getitem__() (dpnp.ndarray method)": [[385, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.ndarray method)": [[386, "dpnp.ndarray.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[387, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[388, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[389, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[390, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[391, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[392, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[393, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[394, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[395, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[396, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[397, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[398, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[399, "dpnp.ndarray.__isub__", false]], "__itruediv__() (dpnp.ndarray method)": [[400, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[401, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.ndarray method)": [[402, "dpnp.ndarray.__le__", false]], "__len__() (dpnp.ndarray method)": [[403, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[404, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.ndarray method)": [[405, "dpnp.ndarray.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[406, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[407, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[408, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.ndarray method)": [[409, "dpnp.ndarray.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[410, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[411, "dpnp.ndarray.__new__", false]], "__or__() (dpnp.ndarray method)": [[412, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[413, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[414, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[415, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[416, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[417, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[418, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[419, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[420, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[421, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[422, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[423, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[424, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[425, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[426, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[427, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[428, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[429, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.ndarray method)": [[430, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[431, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[432, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[433, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[434, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[14, "dpnp.abs", false]], "absolute() (in module dpnp)": [[15, "dpnp.absolute", false]], "acos() (in module dpnp)": [[16, "dpnp.acos", false]], "acosh() (in module dpnp)": [[17, "dpnp.acosh", false]], "add() (in module dpnp)": [[18, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[179, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[116, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[435, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[19, "dpnp.all", false]], "allclose() (in module dpnp)": [[20, "dpnp.allclose", false]], "amax() (in module dpnp)": [[21, "dpnp.amax", false]], "amin() (in module dpnp)": [[22, "dpnp.amin", false]], "angle() (in module dpnp)": [[23, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[117, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[436, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[24, "dpnp.any", false]], "append() (in module dpnp)": [[25, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[26, "dpnp.apply_along_axis", false]], "apply_over_axes() (in module dpnp)": [[27, "dpnp.apply_over_axes", false]], "arange() (in module dpnp)": [[28, "dpnp.arange", false]], "arccos() (in module dpnp)": [[29, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[30, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[31, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[32, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[33, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[34, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[35, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[118, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[437, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[36, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[119, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[438, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[37, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[120, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[439, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[38, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[39, "dpnp.argwhere", false]], "around() (in module dpnp)": [[40, "dpnp.around", false]], "array() (in module dpnp)": [[41, "dpnp.array", false]], "array_equal() (in module dpnp)": [[42, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[43, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[44, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[45, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[46, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[47, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[48, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[49, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[50, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[51, "dpnp.asin", false]], "asinh() (in module dpnp)": [[52, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[121, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (dpnp.ndarray method)": [[440, "dpnp.ndarray.asnumpy", false]], "asnumpy() (in module dpnp)": [[53, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[122, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[441, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[54, "dpnp.astype", false]], "atan() (in module dpnp)": [[55, "dpnp.atan", false]], "atan2() (in module dpnp)": [[56, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[57, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[58, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[59, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[60, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[61, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[180, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[531, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[62, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[63, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[532, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[64, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[65, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[66, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[67, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[68, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[69, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[70, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[71, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[72, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[73, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[74, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[181, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[533, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[75, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[76, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[77, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[182, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[534, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[535, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[300, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[123, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[442, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[78, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[124, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[443, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[79, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[80, "dpnp.column_stack", false]], "compress() (dpnp.dpnp_array.dpnp_array method)": [[125, "dpnp.dpnp_array.dpnp_array.compress", false]], "compress() (dpnp.ndarray method)": [[444, "dpnp.ndarray.compress", false]], "compress() (in module dpnp)": [[81, "dpnp.compress", false]], "concat() (in module dpnp)": [[82, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[83, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[301, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[126, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[445, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[84, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[127, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[446, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[85, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[86, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[128, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[447, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[87, "dpnp.copy", false]], "copysign() (in module dpnp)": [[88, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[89, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[90, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[91, "dpnp.correlate", false]], "cos() (in module dpnp)": [[92, "dpnp.cos", false]], "cosh() (in module dpnp)": [[93, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[94, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[95, "dpnp.cov", false]], "cross() (in module dpnp)": [[96, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[302, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[97, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[129, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[448, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[98, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[130, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[449, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[99, "dpnp.cumsum", false]], "cumulative_prod() (in module dpnp)": [[100, "dpnp.cumulative_prod", false]], "cumulative_sum() (in module dpnp)": [[101, "dpnp.cumulative_sum", false]], "deg2rad() (in module dpnp)": [[102, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[103, "dpnp.degrees", false]], "delete() (in module dpnp)": [[104, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[183, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[303, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array property)": [[131, "dpnp.dpnp_array.dpnp_array.device", false]], "device (dpnp.ndarray property)": [[450, "dpnp.ndarray.device", false]], "diag() (in module dpnp)": [[105, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[106, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[107, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[108, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[132, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[451, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[109, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[304, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[110, "dpnp.diff", false]], "digitize() (in module dpnp)": [[111, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[536, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[112, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[133, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (dpnp.ndarray method)": [[452, "dpnp.ndarray.dot", false]], "dot() (in module dpnp)": [[113, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[11, "module-dpnp.fft", false]], "dpnp.linalg": [[654, "module-dpnp.linalg", false]], "dpnp_array (class in dpnp.dpnp_array)": [[114, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[176, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[177, "dpnp.dstack", false]], "dtype (class in dpnp)": [[178, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array property)": [[134, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[453, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[202, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[305, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[306, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[307, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[308, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[203, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[204, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[205, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[206, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[207, "dpnp.equal", false]], "erf() (in module dpnp)": [[208, "dpnp.erf", false]], "exp() (in module dpnp)": [[209, "dpnp.exp", false]], "exp2() (in module dpnp)": [[210, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[211, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[212, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[537, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[213, "dpnp.extract", false]], "eye() (in module dpnp)": [[214, "dpnp.eye", false]], "f() (in module dpnp.random)": [[538, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[215, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[216, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[217, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[218, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[219, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[220, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[184, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[135, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[454, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[234, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[235, "dpnp.finfo", false]], "fix() (in module dpnp)": [[236, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array property)": [[136, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[185, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[455, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array property)": [[137, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[456, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[237, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[238, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[138, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[457, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[239, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[240, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[241, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[242, "dpnp.float_power", false]], "floor() (in module dpnp)": [[243, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[244, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[245, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[246, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[247, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[248, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[249, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[250, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[251, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[252, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[253, "dpnp.fromstring", false]], "full() (in module dpnp)": [[254, "dpnp.full", false]], "full_like() (in module dpnp)": [[255, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[539, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[256, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[540, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[257, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[139, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_array() (dpnp.ndarray method)": [[458, "dpnp.ndarray.get_array", false]], "get_include() (in module dpnp)": [[258, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[521, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[522, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[523, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[259, "dpnp.gradient", false]], "greater() (in module dpnp)": [[260, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[261, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[541, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[186, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[262, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[221, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[263, "dpnp.histogram", false]], "histogram2d() (in module dpnp)": [[264, "dpnp.histogram2d", false]], "histogram_bin_edges() (in module dpnp)": [[265, "dpnp.histogram_bin_edges", false]], "histogramdd() (in module dpnp)": [[266, "dpnp.histogramdd", false]], "hsplit() (in module dpnp)": [[267, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[268, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[542, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[269, "dpnp.hypot", false]], "i0() (in module dpnp)": [[270, "dpnp.i0", false]], "identity() (in module dpnp)": [[271, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[222, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[223, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[224, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[225, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[226, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[272, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array property)": [[140, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[459, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[273, "dpnp.imag", false]], "indices() (in module dpnp)": [[274, "dpnp.indices", false]], "inner() (in module dpnp)": [[275, "dpnp.inner", false]], "insert() (in module dpnp)": [[276, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[309, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[277, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[227, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[228, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[229, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[187, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[188, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[278, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[279, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[280, "dpnp.iscomplexobj", false]], "isdtype() (in module dpnp)": [[281, "dpnp.isdtype", false]], "isfinite() (in module dpnp)": [[282, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[283, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[284, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[285, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[189, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[286, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[287, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[288, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[289, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[290, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[291, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[141, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[460, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array property)": [[142, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[190, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[461, "dpnp.ndarray.itemsize", false]], "iterable() (in module dpnp)": [[292, "dpnp.iterable", false]], "ix_() (in module dpnp)": [[293, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[191, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[294, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[543, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[295, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[296, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[297, "dpnp.left_shift", false]], "less() (in module dpnp)": [[298, "dpnp.less", false]], "less_equal() (in module dpnp)": [[299, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[330, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[331, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[332, "dpnp.log", false]], "log10() (in module dpnp)": [[333, "dpnp.log10", false]], "log1p() (in module dpnp)": [[334, "dpnp.log1p", false]], "log2() (in module dpnp)": [[335, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[336, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[337, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[338, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[339, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[340, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[341, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[544, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[545, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[546, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[342, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[343, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[310, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[344, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[345, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[311, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[312, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[313, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[314, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[346, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[144, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[463, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[347, "dpnp.max", false]], "maximum() (in module dpnp)": [[348, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[145, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[464, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[349, "dpnp.mean", false]], "median() (in module dpnp)": [[350, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[351, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[192, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[352, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[146, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[465, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[353, "dpnp.min", false]], "minimum() (in module dpnp)": [[354, "dpnp.minimum", false]], "mod() (in module dpnp)": [[355, "dpnp.mod", false]], "modf() (in module dpnp)": [[356, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [11, "module-dpnp.fft", false], [654, "module-dpnp.linalg", false]], "moveaxis() (in module dpnp)": [[357, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array property)": [[143, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[462, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[315, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[547, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[358, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[548, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[193, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[194, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[359, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[360, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[361, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[362, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[363, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[364, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[365, "dpnp.nanmean", false]], "nanmedian() (in module dpnp)": [[366, "dpnp.nanmedian", false]], "nanmin() (in module dpnp)": [[367, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[368, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[369, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[370, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[371, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array property)": [[147, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[466, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[372, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array property)": [[148, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[195, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[467, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[495, "dpnp.ndim", false]], "ndindex (class in dpnp)": [[496, "dpnp.ndindex", false]], "negative() (in module dpnp)": [[497, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[549, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[196, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[498, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[550, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[551, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[149, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[468, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[499, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[316, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[524, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[552, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[500, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[197, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[501, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[502, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[503, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[504, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[317, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[505, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[553, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[150, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[469, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[506, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[554, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[507, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[318, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[508, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[555, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[509, "dpnp.positive", false]], "pow() (in module dpnp)": [[510, "dpnp.pow", false]], "power() (in module dpnp)": [[511, "dpnp.power", false]], "power() (in module dpnp.random)": [[556, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[151, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[470, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[512, "dpnp.prod", false]], "proj() (in module dpnp)": [[513, "dpnp.proj", false]], "ptp() (in module dpnp)": [[514, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[152, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[471, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[515, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[516, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[517, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[319, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[518, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[519, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[525, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[557, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[526, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[558, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[527, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[559, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[560, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[561, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[528, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[562, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[520, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[563, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[153, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[472, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[579, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[580, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[564, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array property)": [[154, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[473, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[581, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[582, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[583, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[584, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[585, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[155, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[474, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[586, "dpnp.repeat", false]], "require() (in module dpnp)": [[587, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[156, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[475, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[588, "dpnp.reshape", false]], "resize() (in module dpnp)": [[589, "dpnp.resize", false]], "result_type() (in module dpnp)": [[590, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[230, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[231, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[232, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[233, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[591, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[592, "dpnp.rint", false]], "roll() (in module dpnp)": [[593, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[594, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[595, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[157, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[476, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[596, "dpnp.round", false]], "row_stack() (in module dpnp)": [[597, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[598, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[565, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[158, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[477, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[599, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[566, "dpnp.random.seed", false]], "select() (in module dpnp)": [[600, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array property)": [[159, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[198, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[478, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[601, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[567, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[602, "dpnp.sign", false]], "signbit() (in module dpnp)": [[603, "dpnp.signbit", false]], "sin() (in module dpnp)": [[604, "dpnp.sin", false]], "sinc() (in module dpnp)": [[605, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[606, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array property)": [[160, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[479, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[607, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[320, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[321, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[161, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[480, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[608, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[609, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[610, "dpnp.spacing", false]], "split() (in module dpnp)": [[611, "dpnp.split", false]], "sqrt() (in module dpnp)": [[612, "dpnp.sqrt", false]], "square() (in module dpnp)": [[613, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[162, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[481, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[614, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[615, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[568, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[569, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[570, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[529, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[571, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[572, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[163, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[482, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[616, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[199, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array property)": [[164, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[483, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[200, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[617, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[165, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[484, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[618, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[322, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[323, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[166, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[485, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[619, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array property)": [[167, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_context (dpnp.ndarray property)": [[486, "dpnp.ndarray.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array property)": [[168, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_device (dpnp.ndarray property)": [[487, "dpnp.ndarray.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array property)": [[169, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "sycl_queue (dpnp.ndarray property)": [[488, "dpnp.ndarray.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array property)": [[115, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[373, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[170, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[489, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[620, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[621, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[622, "dpnp.tan", false]], "tanh() (in module dpnp)": [[623, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[624, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[324, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[325, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[326, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[625, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[171, "dpnp.dpnp_array.dpnp_array.to_device", false]], "to_device() (dpnp.ndarray method)": [[490, "dpnp.ndarray.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[172, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[491, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[626, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[327, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[173, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[492, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[627, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[628, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[629, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[573, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[630, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[631, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[632, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[633, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[634, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[635, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[636, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[637, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[638, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[201, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[530, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[574, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[639, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[640, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[641, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[642, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array property)": [[174, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "usm_type (dpnp.ndarray property)": [[493, "dpnp.ndarray.usm_type", false]], "vander() (in module dpnp)": [[643, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[175, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[494, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[644, "dpnp.var", false]], "vdot() (in module dpnp)": [[645, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[646, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[328, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[329, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[575, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[647, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[648, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[576, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[577, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[649, "dpnp.where", false]], "zeros() (in module dpnp)": [[650, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[651, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[578, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[13, 1, 1, "", "__array_namespace_info__"], [14, 1, 1, "", "abs"], [15, 1, 1, "", "absolute"], [16, 1, 1, "", "acos"], [17, 1, 1, "", "acosh"], [18, 1, 1, "", "add"], [19, 1, 1, "", "all"], [20, 1, 1, "", "allclose"], [21, 1, 1, "", "amax"], [22, 1, 1, "", "amin"], [23, 1, 1, "", "angle"], [24, 1, 1, "", "any"], [25, 1, 1, "", "append"], [26, 1, 1, "", "apply_along_axis"], [27, 1, 1, "", "apply_over_axes"], [28, 1, 1, "", "arange"], [29, 1, 1, "", "arccos"], [30, 1, 1, "", "arccosh"], [31, 1, 1, "", "arcsin"], [32, 1, 1, "", "arcsinh"], [33, 1, 1, "", "arctan"], [34, 1, 1, "", "arctan2"], [35, 1, 1, "", "arctanh"], [36, 1, 1, "", "argmax"], [37, 1, 1, "", "argmin"], [38, 1, 1, "", "argsort"], [39, 1, 1, "", "argwhere"], [40, 1, 1, "", "around"], [41, 1, 1, "", "array"], [42, 1, 1, "", "array_equal"], [43, 1, 1, "", "array_equiv"], [44, 1, 1, "", "array_split"], [45, 1, 1, "", "asanyarray"], [46, 1, 1, "", "asarray"], [47, 1, 1, "", "asarray_chkfinite"], [48, 1, 1, "", "ascontiguousarray"], [49, 1, 1, "", "asfarray"], [50, 1, 1, "", "asfortranarray"], [51, 1, 1, "", "asin"], [52, 1, 1, "", "asinh"], [53, 1, 1, "", "asnumpy"], [54, 1, 1, "", "astype"], [55, 1, 1, "", "atan"], [56, 1, 1, "", "atan2"], [57, 1, 1, "", "atanh"], [58, 1, 1, "", "atleast_1d"], [59, 1, 1, "", "atleast_2d"], [60, 1, 1, "", "atleast_3d"], [61, 1, 1, "", "average"], [62, 1, 1, "", "binary_repr"], [63, 1, 1, "", "bincount"], [64, 1, 1, "", "bitwise_and"], [65, 1, 1, "", "bitwise_invert"], [66, 1, 1, "", "bitwise_left_shift"], [67, 1, 1, "", "bitwise_not"], [68, 1, 1, "", "bitwise_or"], [69, 1, 1, "", "bitwise_right_shift"], [70, 1, 1, "", "bitwise_xor"], [71, 1, 1, "", "broadcast_arrays"], [72, 1, 1, "", "broadcast_shapes"], [73, 1, 1, "", "broadcast_to"], [74, 1, 1, "", "byte_bounds"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "cbrt"], [77, 1, 1, "", "ceil"], [78, 1, 1, "", "choose"], [79, 1, 1, "", "clip"], [80, 1, 1, "", "column_stack"], [81, 1, 1, "", "compress"], [82, 1, 1, "", "concat"], [83, 1, 1, "", "concatenate"], [84, 1, 1, "", "conj"], [85, 1, 1, "", "conjugate"], [86, 1, 1, "", "convolve"], [87, 1, 1, "", "copy"], [88, 1, 1, "", "copysign"], [89, 1, 1, "", "copyto"], [90, 1, 1, "", "corrcoef"], [91, 1, 1, "", "correlate"], [92, 1, 1, "", "cos"], [93, 1, 1, "", "cosh"], [94, 1, 1, "", "count_nonzero"], [95, 1, 1, "", "cov"], [96, 1, 1, "", "cross"], [97, 1, 1, "", "cumlogsumexp"], [98, 1, 1, "", "cumprod"], [99, 1, 1, "", "cumsum"], [100, 1, 1, "", "cumulative_prod"], [101, 1, 1, "", "cumulative_sum"], [102, 1, 1, "", "deg2rad"], [103, 1, 1, "", "degrees"], [104, 1, 1, "", "delete"], [105, 1, 1, "", "diag"], [106, 1, 1, "", "diag_indices"], [107, 1, 1, "", "diag_indices_from"], [108, 1, 1, "", "diagflat"], [109, 1, 1, "", "diagonal"], [110, 1, 1, "", "diff"], [111, 1, 1, "", "digitize"], [112, 1, 1, "", "divide"], [113, 1, 1, "", "dot"], [176, 1, 1, "", "dsplit"], [177, 1, 1, "", "dstack"], [178, 2, 1, "", "dtype"], [202, 1, 1, "", "ediff1d"], [203, 1, 1, "", "einsum"], [204, 1, 1, "", "einsum_path"], [205, 1, 1, "", "empty"], [206, 1, 1, "", "empty_like"], [207, 1, 1, "", "equal"], [208, 1, 1, "", "erf"], [209, 1, 1, "", "exp"], [210, 1, 1, "", "exp2"], [211, 1, 1, "", "expand_dims"], [212, 1, 1, "", "expm1"], [213, 1, 1, "", "extract"], [214, 1, 1, "", "eye"], [215, 1, 1, "", "fabs"], [11, 0, 0, "-", "fft"], [234, 1, 1, "", "fill_diagonal"], [235, 1, 1, "", "finfo"], [236, 1, 1, "", "fix"], [237, 2, 1, "", "flatiter"], [238, 1, 1, "", "flatnonzero"], [239, 1, 1, "", "flip"], [240, 1, 1, "", "fliplr"], [241, 1, 1, "", "flipud"], [242, 1, 1, "", "float_power"], [243, 1, 1, "", "floor"], [244, 1, 1, "", "floor_divide"], [245, 1, 1, "", "fmax"], [246, 1, 1, "", "fmin"], [247, 1, 1, "", "fmod"], [248, 1, 1, "", "from_dlpack"], [249, 1, 1, "", "frombuffer"], [250, 1, 1, "", "fromfile"], [251, 1, 1, "", "fromfunction"], [252, 1, 1, "", "fromiter"], [253, 1, 1, "", "fromstring"], [254, 1, 1, "", "full"], [255, 1, 1, "", "full_like"], [256, 1, 1, "", "gcd"], [257, 1, 1, "", "geomspace"], [258, 1, 1, "", "get_include"], [259, 1, 1, "", "gradient"], [260, 1, 1, "", "greater"], [261, 1, 1, "", "greater_equal"], [262, 1, 1, "", "heaviside"], [263, 1, 1, "", "histogram"], [264, 1, 1, "", "histogram2d"], [265, 1, 1, "", "histogram_bin_edges"], [266, 1, 1, "", "histogramdd"], [267, 1, 1, "", "hsplit"], [268, 1, 1, "", "hstack"], [269, 1, 1, "", "hypot"], [270, 1, 1, "", "i0"], [271, 1, 1, "", "identity"], [272, 1, 1, "", "iinfo"], [273, 1, 1, "", "imag"], [274, 1, 1, "", "indices"], [275, 1, 1, "", "inner"], [276, 1, 1, "", "insert"], [277, 1, 1, "", "invert"], [278, 1, 1, "", "isclose"], [279, 1, 1, "", "iscomplex"], [280, 1, 1, "", "iscomplexobj"], [281, 1, 1, "", "isdtype"], [282, 1, 1, "", "isfinite"], [283, 1, 1, "", "isfortran"], [284, 1, 1, "", "isinf"], [285, 1, 1, "", "isnan"], [286, 1, 1, "", "isneginf"], [287, 1, 1, "", "isposinf"], [288, 1, 1, "", "isreal"], [289, 1, 1, "", "isrealobj"], [290, 1, 1, "", "isscalar"], [291, 1, 1, "", "issubdtype"], [292, 1, 1, "", "iterable"], [293, 1, 1, "", "ix_"], [294, 1, 1, "", "kron"], [295, 1, 1, "", "lcm"], [296, 1, 1, "", "ldexp"], [297, 1, 1, "", "left_shift"], [298, 1, 1, "", "less"], [299, 1, 1, "", "less_equal"], [654, 0, 0, "-", "linalg"], [330, 1, 1, "", "linspace"], [331, 1, 1, "", "loadtxt"], [332, 1, 1, "", "log"], [333, 1, 1, "", "log10"], [334, 1, 1, "", "log1p"], [335, 1, 1, "", "log2"], [336, 1, 1, "", "logaddexp"], [337, 1, 1, "", "logaddexp2"], [338, 1, 1, "", "logical_and"], [339, 1, 1, "", "logical_not"], [340, 1, 1, "", "logical_or"], [341, 1, 1, "", "logical_xor"], [342, 1, 1, "", "logspace"], [343, 1, 1, "", "logsumexp"], [344, 1, 1, "", "mask_indices"], [345, 1, 1, "", "matmul"], [346, 1, 1, "", "matrix_transpose"], [347, 1, 1, "", "max"], [348, 1, 1, "", "maximum"], [349, 1, 1, "", "mean"], [350, 1, 1, "", "median"], [351, 1, 1, "", "meshgrid"], [352, 6, 1, "", "mgrid"], [353, 1, 1, "", "min"], [354, 1, 1, "", "minimum"], [355, 1, 1, "", "mod"], [356, 1, 1, "", "modf"], [357, 1, 1, "", "moveaxis"], [358, 1, 1, "", "multiply"], [359, 1, 1, "", "nan_to_num"], [360, 1, 1, "", "nanargmax"], [361, 1, 1, "", "nanargmin"], [362, 1, 1, "", "nancumprod"], [363, 1, 1, "", "nancumsum"], [364, 1, 1, "", "nanmax"], [365, 1, 1, "", "nanmean"], [366, 1, 1, "", "nanmedian"], [367, 1, 1, "", "nanmin"], [368, 1, 1, "", "nanprod"], [369, 1, 1, "", "nanstd"], [370, 1, 1, "", "nansum"], [371, 1, 1, "", "nanvar"], [372, 5, 1, "", "ndarray"], [495, 1, 1, "", "ndim"], [496, 2, 1, "", "ndindex"], [497, 1, 1, "", "negative"], [498, 1, 1, "", "nextafter"], [499, 1, 1, "", "nonzero"], [500, 1, 1, "", "not_equal"], [501, 6, 1, "", "ogrid"], [502, 1, 1, "", "ones"], [503, 1, 1, "", "ones_like"], [504, 1, 1, "", "outer"], [505, 1, 1, "", "pad"], [506, 1, 1, "", "partition"], [507, 1, 1, "", "permute_dims"], [508, 1, 1, "", "place"], [509, 1, 1, "", "positive"], [510, 1, 1, "", "pow"], [511, 1, 1, "", "power"], [512, 1, 1, "", "prod"], [513, 1, 1, "", "proj"], [514, 1, 1, "", "ptp"], [515, 1, 1, "", "put"], [516, 1, 1, "", "put_along_axis"], [517, 1, 1, "", "putmask"], [518, 1, 1, "", "rad2deg"], [519, 1, 1, "", "radians"], [579, 1, 1, "", "ravel"], [580, 1, 1, "", "ravel_multi_index"], [581, 1, 1, "", "real"], [582, 1, 1, "", "real_if_close"], [583, 1, 1, "", "reciprocal"], [584, 1, 1, "", "reduce_hypot"], [585, 1, 1, "", "remainder"], [586, 1, 1, "", "repeat"], [587, 1, 1, "", "require"], [588, 1, 1, "", "reshape"], [589, 1, 1, "", "resize"], [590, 1, 1, "", "result_type"], [591, 1, 1, "", "right_shift"], [592, 1, 1, "", "rint"], [593, 1, 1, "", "roll"], [594, 1, 1, "", "rollaxis"], [595, 1, 1, "", "rot90"], [596, 1, 1, "", "round"], [597, 1, 1, "", "row_stack"], [598, 1, 1, "", "rsqrt"], [599, 1, 1, "", "searchsorted"], [600, 1, 1, "", "select"], [601, 1, 1, "", "shape"], [602, 1, 1, "", "sign"], [603, 1, 1, "", "signbit"], [604, 1, 1, "", "sin"], [605, 1, 1, "", "sinc"], [606, 1, 1, "", "sinh"], [607, 1, 1, "", "size"], [608, 1, 1, "", "sort"], [609, 1, 1, "", "sort_complex"], [610, 1, 1, "", "spacing"], [611, 1, 1, "", "split"], [612, 1, 1, "", "sqrt"], [613, 1, 1, "", "square"], [614, 1, 1, "", "squeeze"], [615, 1, 1, "", "stack"], [616, 1, 1, "", "std"], [617, 1, 1, "", "subtract"], [618, 1, 1, "", "sum"], [619, 1, 1, "", "swapaxes"], [620, 1, 1, "", "take"], [621, 1, 1, "", "take_along_axis"], [622, 1, 1, "", "tan"], [623, 1, 1, "", "tanh"], [624, 1, 1, "", "tensordot"], [625, 1, 1, "", "tile"], [626, 1, 1, "", "trace"], [627, 1, 1, "", "transpose"], [628, 1, 1, "", "trapezoid"], [629, 1, 1, "", "tri"], [630, 1, 1, "", "tril"], [631, 1, 1, "", "tril_indices"], [632, 1, 1, "", "tril_indices_from"], [633, 1, 1, "", "trim_zeros"], [634, 1, 1, "", "triu"], [635, 1, 1, "", "triu_indices"], [636, 1, 1, "", "triu_indices_from"], [637, 1, 1, "", "true_divide"], [638, 1, 1, "", "trunc"], [639, 1, 1, "", "unique"], [640, 1, 1, "", "unravel_index"], [641, 1, 1, "", "unstack"], [642, 1, 1, "", "unwrap"], [643, 1, 1, "", "vander"], [644, 1, 1, "", "var"], [645, 1, 1, "", "vdot"], [646, 1, 1, "", "vecdot"], [647, 1, 1, "", "vsplit"], [648, 1, 1, "", "vstack"], [649, 1, 1, "", "where"], [650, 1, 1, "", "zeros"], [651, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[114, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[115, 3, 1, "", "T"], [116, 4, 1, "", "all"], [117, 4, 1, "", "any"], [118, 4, 1, "", "argmax"], [119, 4, 1, "", "argmin"], [120, 4, 1, "", "argsort"], [121, 4, 1, "", "asnumpy"], [122, 4, 1, "", "astype"], [123, 4, 1, "", "choose"], [124, 4, 1, "", "clip"], [125, 4, 1, "", "compress"], [126, 4, 1, "", "conj"], [127, 4, 1, "", "conjugate"], [128, 4, 1, "", "copy"], [129, 4, 1, "", "cumprod"], [130, 4, 1, "", "cumsum"], [131, 3, 1, "", "device"], [132, 4, 1, "", "diagonal"], [133, 4, 1, "", "dot"], [134, 3, 1, "", "dtype"], [135, 4, 1, "", "fill"], [136, 3, 1, "", "flags"], [137, 3, 1, "", "flat"], [138, 4, 1, "", "flatten"], [139, 4, 1, "", "get_array"], [140, 3, 1, "", "imag"], [141, 4, 1, "", "item"], [142, 3, 1, "", "itemsize"], [143, 3, 1, "", "mT"], [144, 4, 1, "", "max"], [145, 4, 1, "", "mean"], [146, 4, 1, "", "min"], [147, 3, 1, "", "nbytes"], [148, 3, 1, "", "ndim"], [149, 4, 1, "", "nonzero"], [150, 4, 1, "", "partition"], [151, 4, 1, "", "prod"], [152, 4, 1, "", "put"], [153, 4, 1, "", "ravel"], [154, 3, 1, "", "real"], [155, 4, 1, "", "repeat"], [156, 4, 1, "", "reshape"], [157, 4, 1, "", "round"], [158, 4, 1, "", "searchsorted"], [159, 3, 1, "", "shape"], [160, 3, 1, "", "size"], [161, 4, 1, "", "sort"], [162, 4, 1, "", "squeeze"], [163, 4, 1, "", "std"], [164, 3, 1, "", "strides"], [165, 4, 1, "", "sum"], [166, 4, 1, "", "swapaxes"], [167, 3, 1, "", "sycl_context"], [168, 3, 1, "", "sycl_device"], [169, 3, 1, "", "sycl_queue"], [170, 4, 1, "", "take"], [171, 4, 1, "", "to_device"], [172, 4, 1, "", "trace"], [173, 4, 1, "", "transpose"], [174, 3, 1, "", "usm_type"], [175, 4, 1, "", "var"]], "dpnp.dtype": [[179, 5, 1, "", "alignment"], [180, 5, 1, "", "base"], [181, 5, 1, "", "byteorder"], [182, 5, 1, "", "char"], [183, 5, 1, "", "descr"], [184, 5, 1, "", "fields"], [185, 5, 1, "", "flags"], [186, 5, 1, "", "hasobject"], [187, 5, 1, "", "isalignedstruct"], [188, 5, 1, "", "isbuiltin"], [189, 5, 1, "", "isnative"], [190, 5, 1, "", "itemsize"], [191, 5, 1, "", "kind"], [192, 5, 1, "", "metadata"], [193, 5, 1, "", "name"], [194, 5, 1, "", "names"], [195, 5, 1, "", "ndim"], [196, 4, 1, "", "newbyteorder"], [197, 5, 1, "", "num"], [198, 5, 1, "", "shape"], [199, 5, 1, "", "str"], [200, 5, 1, "", "subdtype"], [201, 5, 1, "", "type"]], "dpnp.fft": [[216, 1, 1, "", "fft"], [217, 1, 1, "", "fft2"], [218, 1, 1, "", "fftfreq"], [219, 1, 1, "", "fftn"], [220, 1, 1, "", "fftshift"], [221, 1, 1, "", "hfft"], [222, 1, 1, "", "ifft"], [223, 1, 1, "", "ifft2"], [224, 1, 1, "", "ifftn"], [225, 1, 1, "", "ifftshift"], [226, 1, 1, "", "ihfft"], [227, 1, 1, "", "irfft"], [228, 1, 1, "", "irfft2"], [229, 1, 1, "", "irfftn"], [230, 1, 1, "", "rfft"], [231, 1, 1, "", "rfft2"], [232, 1, 1, "", "rfftfreq"], [233, 1, 1, "", "rfftn"]], "dpnp.linalg": [[300, 1, 1, "", "cholesky"], [301, 1, 1, "", "cond"], [302, 1, 1, "", "cross"], [303, 1, 1, "", "det"], [304, 1, 1, "", "diagonal"], [305, 1, 1, "", "eig"], [306, 1, 1, "", "eigh"], [307, 1, 1, "", "eigvals"], [308, 1, 1, "", "eigvalsh"], [309, 1, 1, "", "inv"], [310, 1, 1, "", "lstsq"], [311, 1, 1, "", "matmul"], [312, 1, 1, "", "matrix_norm"], [313, 1, 1, "", "matrix_power"], [314, 1, 1, "", "matrix_rank"], [315, 1, 1, "", "multi_dot"], [316, 1, 1, "", "norm"], [317, 1, 1, "", "outer"], [318, 1, 1, "", "pinv"], [319, 1, 1, "", "qr"], [320, 1, 1, "", "slogdet"], [321, 1, 1, "", "solve"], [322, 1, 1, "", "svd"], [323, 1, 1, "", "svdvals"], [324, 1, 1, "", "tensordot"], [325, 1, 1, "", "tensorinv"], [326, 1, 1, "", "tensorsolve"], [327, 1, 1, "", "trace"], [328, 1, 1, "", "vecdot"], [329, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[373, 3, 1, "", "T"], [374, 4, 1, "", "__abs__"], [375, 4, 1, "", "__add__"], [376, 4, 1, "", "__and__"], [377, 4, 1, "", "__array__"], [378, 4, 1, "", "__bool__"], [379, 4, 1, "", "__complex__"], [380, 4, 1, "", "__copy__"], [381, 4, 1, "", "__eq__"], [382, 4, 1, "", "__float__"], [383, 4, 1, "", "__floordiv__"], [384, 4, 1, "", "__ge__"], [385, 4, 1, "", "__getitem__"], [386, 4, 1, "", "__gt__"], [387, 4, 1, "", "__iadd__"], [388, 4, 1, "", "__iand__"], [389, 4, 1, "", "__ifloordiv__"], [390, 4, 1, "", "__ilshift__"], [391, 4, 1, "", "__imatmul__"], [392, 4, 1, "", "__imod__"], [393, 4, 1, "", "__imul__"], [394, 4, 1, "", "__int__"], [395, 4, 1, "", "__invert__"], [396, 4, 1, "", "__ior__"], [397, 4, 1, "", "__ipow__"], [398, 4, 1, "", "__irshift__"], [399, 4, 1, "", "__isub__"], [400, 4, 1, "", "__itruediv__"], [401, 4, 1, "", "__ixor__"], [402, 4, 1, "", "__le__"], [403, 4, 1, "", "__len__"], [404, 4, 1, "", "__lshift__"], [405, 4, 1, "", "__lt__"], [406, 4, 1, "", "__matmul__"], [407, 4, 1, "", "__mod__"], [408, 4, 1, "", "__mul__"], [409, 4, 1, "", "__ne__"], [410, 4, 1, "", "__neg__"], [411, 4, 1, "", "__new__"], [412, 4, 1, "", "__or__"], [413, 4, 1, "", "__pos__"], [414, 4, 1, "", "__pow__"], [415, 4, 1, "", "__radd__"], [416, 4, 1, "", "__rand__"], [417, 4, 1, "", "__repr__"], [418, 4, 1, "", "__rfloordiv__"], [419, 4, 1, "", "__rlshift__"], [420, 4, 1, "", "__rmatmul__"], [421, 4, 1, "", "__rmod__"], [422, 4, 1, "", "__rmul__"], [423, 4, 1, "", "__ror__"], [424, 4, 1, "", "__rpow__"], [425, 4, 1, "", "__rrshift__"], [426, 4, 1, "", "__rshift__"], [427, 4, 1, "", "__rsub__"], [428, 4, 1, "", "__rtruediv__"], [429, 4, 1, "", "__rxor__"], [430, 4, 1, "", "__setitem__"], [431, 4, 1, "", "__str__"], [432, 4, 1, "", "__sub__"], [433, 4, 1, "", "__truediv__"], [434, 4, 1, "", "__xor__"], [435, 4, 1, "", "all"], [436, 4, 1, "", "any"], [437, 4, 1, "", "argmax"], [438, 4, 1, "", "argmin"], [439, 4, 1, "", "argsort"], [440, 4, 1, "", "asnumpy"], [441, 4, 1, "", "astype"], [442, 4, 1, "", "choose"], [443, 4, 1, "", "clip"], [444, 4, 1, "", "compress"], [445, 4, 1, "", "conj"], [446, 4, 1, "", "conjugate"], [447, 4, 1, "", "copy"], [448, 4, 1, "", "cumprod"], [449, 4, 1, "", "cumsum"], [450, 3, 1, "", "device"], [451, 4, 1, "", "diagonal"], [452, 4, 1, "", "dot"], [453, 3, 1, "", "dtype"], [454, 4, 1, "", "fill"], [455, 3, 1, "", "flags"], [456, 3, 1, "", "flat"], [457, 4, 1, "", "flatten"], [458, 4, 1, "", "get_array"], [459, 3, 1, "", "imag"], [460, 4, 1, "", "item"], [461, 3, 1, "", "itemsize"], [462, 3, 1, "", "mT"], [463, 4, 1, "", "max"], [464, 4, 1, "", "mean"], [465, 4, 1, "", "min"], [466, 3, 1, "", "nbytes"], [467, 3, 1, "", "ndim"], [468, 4, 1, "", "nonzero"], [469, 4, 1, "", "partition"], [470, 4, 1, "", "prod"], [471, 4, 1, "", "put"], [472, 4, 1, "", "ravel"], [473, 3, 1, "", "real"], [474, 4, 1, "", "repeat"], [475, 4, 1, "", "reshape"], [476, 4, 1, "", "round"], [477, 4, 1, "", "searchsorted"], [478, 3, 1, "", "shape"], [479, 3, 1, "", "size"], [480, 4, 1, "", "sort"], [481, 4, 1, "", "squeeze"], [482, 4, 1, "", "std"], [483, 3, 1, "", "strides"], [484, 4, 1, "", "sum"], [485, 4, 1, "", "swapaxes"], [486, 3, 1, "", "sycl_context"], [487, 3, 1, "", "sycl_device"], [488, 3, 1, "", "sycl_queue"], [489, 4, 1, "", "take"], [490, 4, 1, "", "to_device"], [491, 4, 1, "", "trace"], [492, 4, 1, "", "transpose"], [493, 3, 1, "", "usm_type"], [494, 4, 1, "", "var"]], "dpnp.random": [[520, 2, 1, "", "RandomState"], [531, 1, 1, "", "beta"], [532, 1, 1, "", "binomial"], [533, 1, 1, "", "bytes"], [534, 1, 1, "", "chisquare"], [535, 1, 1, "", "choice"], [536, 1, 1, "", "dirichlet"], [537, 1, 1, "", "exponential"], [538, 1, 1, "", "f"], [539, 1, 1, "", "gamma"], [540, 1, 1, "", "geometric"], [541, 1, 1, "", "gumbel"], [542, 1, 1, "", "hypergeometric"], [543, 1, 1, "", "laplace"], [544, 1, 1, "", "logistic"], [545, 1, 1, "", "lognormal"], [546, 1, 1, "", "logseries"], [547, 1, 1, "", "multinomial"], [548, 1, 1, "", "multivariate_normal"], [549, 1, 1, "", "negative_binomial"], [550, 1, 1, "", "noncentral_chisquare"], [551, 1, 1, "", "noncentral_f"], [552, 1, 1, "", "normal"], [553, 1, 1, "", "pareto"], [554, 1, 1, "", "permutation"], [555, 1, 1, "", "poisson"], [556, 1, 1, "", "power"], [557, 1, 1, "", "rand"], [558, 1, 1, "", "randint"], [559, 1, 1, "", "randn"], [560, 1, 1, "", "random"], [561, 1, 1, "", "random_integers"], [562, 1, 1, "", "random_sample"], [563, 1, 1, "", "ranf"], [564, 1, 1, "", "rayleigh"], [565, 1, 1, "", "sample"], [566, 1, 1, "", "seed"], [567, 1, 1, "", "shuffle"], [568, 1, 1, "", "standard_cauchy"], [569, 1, 1, "", "standard_exponential"], [570, 1, 1, "", "standard_gamma"], [571, 1, 1, "", "standard_normal"], [572, 1, 1, "", "standard_t"], [573, 1, 1, "", "triangular"], [574, 1, 1, "", "uniform"], [575, 1, 1, "", "vonmises"], [576, 1, 1, "", "wald"], [577, 1, 1, "", "weibull"], [578, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[521, 4, 1, "", "get_state"], [522, 4, 1, "", "get_sycl_device"], [523, 4, 1, "", "get_sycl_queue"], [524, 4, 1, "", "normal"], [525, 4, 1, "", "rand"], [526, 4, 1, "", "randint"], [527, 4, 1, "", "randn"], [528, 4, 1, "", "random_sample"], [529, 4, 1, "", "standard_normal"], [530, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:attribute", "6": "py:data"}, "terms": {"": [0, 3, 4, 5, 11, 25, 62, 96, 99, 134, 173, 178, 184, 191, 196, 202, 217, 219, 221, 223, 224, 226, 228, 229, 231, 233, 234, 249, 250, 310, 314, 316, 318, 322, 323, 324, 354, 453, 492, 524, 525, 526, 527, 528, 529, 530, 531, 532, 537, 538, 539, 541, 542, 543, 544, 545, 547, 549, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 588, 616, 624, 625, 644, 659], "0": [0, 4, 7, 11, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 66, 69, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 128, 132, 135, 140, 141, 143, 154, 157, 159, 161, 163, 172, 173, 175, 176, 178, 184, 188, 195, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 270, 271, 274, 275, 276, 278, 282, 284, 285, 286, 287, 292, 293, 294, 295, 297, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 320, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 447, 451, 454, 459, 460, 462, 473, 476, 478, 480, 482, 491, 492, 494, 495, 496, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 516, 519, 524, 525, 526, 527, 528, 529, 530, 532, 537, 539, 540, 541, 543, 544, 545, 547, 548, 549, 552, 554, 555, 556, 557, 560, 562, 563, 564, 565, 568, 571, 573, 574, 575, 580, 583, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 649, 650, 651, 659], "00": [92, 204, 216, 604], "000": [359, 532], "00000000005e": 212, "000000001": 64, "00000000e": [216, 359], "000000082740371e": 212, "000000e": [92, 604], "00001101": [64, 65, 67, 68, 70, 277], "00001e10": [20, 278], "00010000": 68, "00010001": [64, 70], "00011100": 70, "00011101": 68, "0001e10": 278, "000e": 204, "000j": 359, "0011": 62, "002": 359, "00225109": 90, "00867716": 534, "01": [90, 204], "02": [90, 204, 359], "03": 359, "03047091": 90, "03088525e": 205, "0342579": 90, "0396842": 342, "04": 204, "04719755": 519, "04921661": 527, "04923628": 605, "05": [20, 204, 278], "05846808": 605, "0614962j": [217, 231], "06310682": 525, "06682066": 605, "07": 359, "07012729": 90, "0728188e": 90, "07944154": [97, 320], "08": [20, 92, 204, 242, 278, 548, 604], "08156915": 529, "0824829": 369, "08409186": 605, "08504448": 605, "08903844": 605, "09373496": 90, "0943951": 519, "09640474": 337, "09861229": [97, 320, 334], "0d": 39, "0dev5": 7, "0j": [23, 113, 140, 154, 279, 280, 288, 289, 311, 345, 459, 473, 602], "0th": [324, 624], "1": [0, 3, 4, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 135, 138, 140, 141, 143, 148, 150, 154, 159, 161, 172, 173, 176, 177, 178, 188, 190, 192, 195, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 278, 279, 280, 283, 288, 289, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 451, 454, 457, 459, 460, 462, 467, 469, 473, 478, 480, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 537, 539, 541, 543, 544, 545, 547, 548, 549, 552, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 569, 571, 574, 579, 580, 581, 582, 583, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659], "10": [0, 4, 17, 18, 27, 30, 32, 36, 37, 52, 61, 66, 69, 79, 87, 97, 98, 99, 100, 101, 104, 106, 107, 110, 111, 156, 176, 178, 203, 204, 212, 213, 220, 232, 248, 254, 257, 263, 264, 265, 266, 267, 273, 278, 293, 294, 296, 297, 327, 328, 332, 333, 334, 335, 342, 343, 350, 358, 366, 369, 371, 475, 505, 514, 516, 526, 530, 532, 542, 554, 584, 590, 591, 593, 596, 599, 611, 615, 616, 621, 630, 631, 632, 634, 635, 636, 641, 644, 646, 647, 649], "100": [106, 171, 232, 257, 266, 278, 294, 315, 342, 490, 505, 542, 568, 582, 642], "1000": [75, 257, 315, 342, 531, 532, 537, 539, 541, 542, 543, 544, 545, 552, 553, 556, 558, 560, 563, 565, 571, 575, 576, 577, 578, 582, 628], "10000": [315, 540, 555, 564, 574], "100000": [99, 101, 549], "1000000": [568, 570, 572, 573], "101": [62, 66, 69, 297, 591], "1010": [69, 591], "10100": [66, 297], "1024": 0, "10394325": 605, "105": 204, "11": [27, 36, 37, 61, 62, 93, 104, 106, 107, 156, 176, 213, 259, 267, 316, 327, 369, 371, 475, 549, 558, 596, 599, 606, 616, 630, 631, 632, 634, 635, 636, 641, 644, 647, 649], "110": [203, 275], "1100": 64, "11100": 70, "11101": [62, 68], "11110010": [65, 67, 277], "111111": 359, "113": 336, "11570901": 529, "11643488": 605, "1179187": 525, "11803399": 616, "119": 203, "1196081": 530, "12": [5, 11, 27, 36, 37, 60, 64, 96, 103, 104, 106, 107, 111, 176, 197, 203, 213, 217, 231, 256, 267, 273, 295, 323, 342, 512, 514, 519, 554, 580, 599, 630, 631, 632, 634, 635, 636, 641, 644, 647, 649], "120": [98, 100, 103], "123": [90, 141, 204, 460], "124": 27, "125": [242, 510, 511, 643], "12613779": 605, "127": 257, "128": [0, 257, 359], "12th": 203, "13": [7, 11, 27, 36, 37, 64, 65, 67, 68, 70, 106, 107, 113, 176, 203, 267, 276, 277, 311, 345, 580, 599, 631, 632, 635, 636, 640, 641, 647], "130": 203, "134": 275, "13436424": [525, 528], "135": [34, 56], "13710533": 534, "139884456208480": 19, "13j": 582, "14": [27, 36, 37, 64, 65, 67, 106, 107, 113, 176, 236, 267, 275, 277, 324, 369, 371, 599, 616, 624, 631, 632, 635, 636, 641, 644, 647], "140": 642, "140053638309840": 24, "14157194": 628, "14159265": [16, 29, 34, 56, 102, 519], "1424356": 90, "14243561": 90, "14423775e": 216, "14j": 582, "15": [27, 36, 37, 99, 101, 106, 107, 111, 176, 203, 221, 226, 267, 316, 333, 369, 371, 554, 599, 616, 631, 632, 635, 636, 641, 644, 647], "150": 103, "15591488": 605, "15716429": 90, "15888336": 342, "15j": 582, "16": [7, 27, 64, 68, 106, 107, 176, 183, 184, 185, 190, 194, 216, 242, 252, 257, 259, 267, 329, 358, 371, 510, 511, 582, 600, 622, 631, 632, 635, 636, 641, 647], "1621": [580, 640], "16227766": [301, 584], "16394577": 524, "164": 337, "1643624": 90, "16506351": 616, "166": 337, "16j": 216, "17": [7, 27, 64, 70, 90, 216, 217, 231, 641], "17050326": 264, "17157288": [306, 308], "17281316e": 216, "17615308": 90, "177": [257, 342], "17j": 216, "18": [7, 27, 98, 100, 190, 202, 203, 219, 302, 312, 316, 342, 641], "180": [34, 56, 102, 103, 203, 518, 642, 666], "1805": 11, "18236388": 529, "18557831": 529, "1875": [371, 644], "1887902": 519, "18920668": 605, "19": [11, 27, 94, 197, 580, 641, 642], "19083664": 90, "19083665": 90, "1923875335537315": 559, "19245009": 598, "1924881e": 242, "1965": 11, "19722458": 97, "1985": 316, "1d": [26, 202, 264, 515, 516, 621, 628], "1e": [20, 212, 278, 305, 333, 334, 336, 337, 548], "1e10": [20, 278], "1j": [14, 15, 23, 32, 33, 42, 52, 55, 84, 85, 91, 140, 154, 227, 273, 279, 288, 305, 317, 322, 459, 473, 504, 581, 609, 613], "1th": [324, 624], "2": [0, 3, 4, 7, 11, 14, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 141, 143, 148, 150, 159, 160, 171, 173, 176, 177, 178, 183, 184, 188, 190, 192, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 279, 283, 288, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 451, 452, 454, 457, 460, 462, 467, 469, 478, 479, 490, 492, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 518, 519, 524, 525, 526, 527, 530, 534, 538, 542, 548, 554, 557, 559, 570, 572, 573, 576, 578, 579, 581, 582, 583, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 606, 607, 609, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651], "20": [27, 66, 98, 100, 111, 203, 232, 256, 264, 274, 278, 294, 295, 296, 297, 316, 516, 532, 547, 599, 621, 641, 642], "20000": 532, "2007": 11, "200e": 204, "2023": 5, "20477401j": [217, 231], "2048": 0, "2066992e": 90, "21": [27, 99, 101, 182, 190, 197, 641], "210": 103, "2123185": 90, "215": 342, "21623621": 605, "21941987": 529, "21968665": 529, "22": [27, 515, 580, 640, 641], "220": 642, "220446049250313e": 582, "222222": 359, "22222222": 371, "22460635e": 622, "22464680e": 216, "22497216": 316, "22776602": 342, "23": [27, 63, 530, 580, 641], "230": 203, "23387232": 605, "23598776": 519, "23606798": 316, "24": [27, 36, 37, 96, 98, 100, 159, 202, 203, 275, 294, 302, 324, 325, 327, 478, 512, 624, 626, 641], "240": 103, "24264069": 316, "24544512": 529, "24721913": 369, "25": [178, 203, 208, 218, 259, 263, 265, 309, 330, 358, 371, 559, 568, 600, 643, 644], "255": [64, 68], "25506903": 525, "256": [0, 257], "26": [70, 203], "260": 642, "26606588": 270, "26618007j": 335, "27": [76, 242, 342, 510, 511, 598, 643], "270": 103, "2795853": 270, "28": [70, 203], "28000000e": 359, "2800000e": 359, "283185307179586": 642, "28318531": 642, "28352814": 529, "2858386e": 90, "28904982": 337, "29": 68, "297": 11, "2d": [322, 345, 595, 639], "2e": [99, 101], "2f": 0, "2j": [84, 85, 113, 216, 273, 279, 288, 306, 308, 311, 345, 581, 602, 609, 645], "2k": 642, "3": [0, 3, 4, 7, 16, 18, 25, 26, 27, 28, 29, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 128, 132, 138, 141, 143, 148, 150, 159, 160, 161, 173, 176, 177, 178, 190, 192, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 219, 220, 221, 225, 226, 228, 229, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 254, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 283, 288, 289, 290, 292, 293, 294, 297, 301, 302, 303, 304, 305, 309, 310, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 447, 451, 457, 460, 462, 467, 469, 478, 479, 480, 492, 495, 496, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 515, 519, 524, 527, 529, 534, 538, 545, 548, 554, 557, 558, 559, 569, 573, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 607, 608, 609, 611, 612, 614, 615, 616, 617, 619, 620, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "30": [96, 103, 160, 203, 232, 479, 516, 519, 621, 645], "300": [103, 642], "3003003": 583, "301": 11, "30102999566": 333, "3012989": 606, "30258509": [97, 343], "307": 7, "308": 359, "308j": 359, "31": [7, 70, 257, 580, 640], "312": 205, "316": 342, "32": [184, 203, 257, 324, 368, 370, 624], "33": 583, "330": [7, 103], "333": 315, "33333333": 359, "3333333e": 359, "33340275": 628, "33486982e": 216, "33836967": 524, "340": 642, "34074171": 530, "34132519": 342, "34846923": [312, 316], "34960421": 342, "35": [203, 540], "35106603e": [312, 316], "35348576": 329, "35355338": 598, "36": 96, "360": 642, "37": [580, 596, 640], "371139e": 92, "38": [275, 532], "380": 642, "38268343": 306, "38268343j": 306, "38629436": 97, "38885": 532, "389056099": [209, 212], "391": 7, "39295758": 524, "39783284": 90, "3e": [0, 99, 101, 582], "3j": [113, 311, 345, 609], "3rd": [82, 83, 176, 611], "3x3": 344, "3x8000": 569, "4": [0, 18, 19, 25, 26, 27, 28, 36, 37, 39, 41, 42, 44, 58, 60, 61, 62, 64, 68, 71, 79, 80, 81, 82, 83, 86, 89, 90, 92, 94, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 128, 132, 138, 143, 148, 150, 159, 161, 173, 176, 177, 179, 190, 195, 198, 202, 203, 204, 205, 207, 210, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 238, 239, 242, 244, 245, 246, 250, 251, 252, 254, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 279, 283, 288, 293, 294, 296, 299, 302, 303, 304, 309, 311, 312, 313, 314, 316, 320, 323, 324, 325, 326, 327, 329, 330, 335, 338, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 360, 361, 363, 365, 366, 369, 371, 447, 451, 457, 462, 467, 469, 478, 480, 492, 495, 499, 501, 503, 505, 507, 510, 511, 512, 514, 515, 519, 524, 527, 528, 531, 534, 554, 559, 575, 579, 580, 581, 582, 585, 586, 588, 589, 593, 594, 595, 596, 597, 600, 602, 605, 607, 608, 611, 612, 615, 616, 617, 619, 620, 624, 625, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651], "40": [66, 203, 232, 296, 297, 516, 621], "40882036": 524, "4096": 0, "41": [7, 580, 605, 640], "4106871": 264, "41421356": [301, 316], "42": 600, "420": 642, "44": [508, 515], "4400": [203, 324, 624], "443469": 342, "445": 7, "44509285e": 216, "45": [23, 34, 56, 329], "45206687": 90, "4532": [203, 324, 624], "46": 203, "460": [7, 642], "46394577": 527, "464": 342, "46436927": 90, "4643693": 90, "4664": [203, 324, 624], "47": 7, "4730": [203, 324, 624], "47901995": [369, 616], "4796": [203, 324, 624], "48": [7, 96], "48093112": 530, "4824247": 264, "48613152": 90, "48613155": 90, "4874": [203, 324, 624], "48927254": 524, "49": 7, "4928": [203, 324, 624], "49443826": 369, "49543509": 525, "49778714": 642, "499128": 113, "4d": 322, "4e": 582, "4j": [273, 581, 645], "4x4": [631, 635], "5": [0, 18, 19, 24, 25, 26, 27, 28, 35, 36, 39, 44, 57, 58, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 77, 79, 81, 82, 83, 86, 89, 90, 91, 94, 96, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 122, 128, 141, 143, 160, 176, 202, 203, 204, 208, 213, 217, 218, 220, 228, 231, 232, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 279, 283, 288, 293, 294, 296, 297, 300, 302, 304, 306, 308, 309, 315, 316, 317, 321, 324, 327, 328, 329, 330, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 366, 369, 371, 441, 447, 460, 462, 479, 495, 499, 501, 502, 503, 504, 505, 507, 510, 511, 514, 515, 519, 524, 525, 527, 529, 530, 531, 532, 534, 537, 549, 553, 554, 555, 556, 559, 562, 577, 579, 580, 581, 582, 583, 585, 588, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 607, 609, 611, 615, 616, 618, 619, 620, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "50": [217, 231, 232, 257, 294, 324, 336, 337, 342, 516, 621, 624, 628, 649], "500": [294, 642], "5018": [203, 324, 624], "50455115": 605, "5091786": 93, "512": 0, "5147297e": 90, "5162": [203, 324, 624], "52069395e": 216, "52359878": 519, "52928804": 530, "53": 7, "5306": [203, 324, 624], "53553391": 616, "53702235": 90, "5399045e": 242, "54": [7, 530], "540": 642, "54288406": 527, "54465213": 529, "547": 7, "548739": 606, "54930614": [35, 57], "55": [508, 515, 600], "55555556": 371, "562": 342, "5620499351813308": [14, 15], "56920387": [525, 528], "5707963267948966": [31, 51], "57079633": [23, 34, 56, 519, 642], "5790461": 90, "57904613": 90, "58997253": 524, "591953": 93, "5e": [336, 337], "5j": [91, 352, 501, 609], "6": [0, 4, 18, 25, 26, 27, 28, 36, 37, 39, 44, 58, 61, 63, 68, 70, 72, 79, 81, 82, 83, 89, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 128, 141, 143, 159, 176, 185, 193, 202, 203, 207, 212, 213, 218, 221, 232, 239, 242, 255, 256, 259, 266, 267, 268, 273, 274, 275, 276, 283, 293, 294, 295, 302, 304, 312, 316, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 342, 344, 346, 350, 362, 363, 366, 368, 371, 447, 460, 462, 478, 495, 499, 503, 505, 508, 510, 511, 514, 524, 527, 530, 547, 549, 554, 559, 579, 580, 581, 587, 588, 593, 594, 595, 596, 597, 600, 607, 609, 611, 615, 617, 618, 619, 620, 624, 626, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 649, 651], "60": [27, 96, 103, 203, 295, 324, 516, 621, 624, 642, 649], "600": 294, "60943791": 97, "6173796": 90, "61799388": 519, "62": 275, "62009203": 264, "6227766": 257, "62318272": 534, "62341325": 257, "624": 204, "63": 257, "63317787e": 622, "63522211": 529, "63836967": 527, "64": [0, 4, 203, 242, 257, 368, 370, 510, 511, 596], "64000": 203, "65157276": 90, "6515728": 90, "65354985": 90, "65745445": [17, 30], "6580445": 90, "6604428": 264, "66519143": 519, "6666666666666665": 365, "66666667": 371, "67": 203, "67305985": 249, "673174": 529, "67718303": 529, "6875": 644, "6883078": 90, "69295758": 527, "69314718": [97, 320, 334], "6990877": 530, "6j": [273, 581, 645], "7": [18, 20, 25, 26, 27, 28, 44, 58, 63, 72, 77, 79, 89, 90, 94, 96, 99, 101, 104, 105, 106, 107, 109, 110, 112, 141, 143, 176, 202, 209, 213, 239, 243, 257, 259, 267, 275, 276, 278, 293, 294, 304, 312, 316, 322, 324, 327, 329, 344, 346, 350, 355, 358, 366, 369, 371, 460, 462, 499, 505, 513, 514, 524, 554, 580, 581, 585, 590, 592, 593, 595, 611, 616, 617, 618, 619, 620, 624, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 647, 649], "70": [294, 645, 649], "700": 294, "700e": 204, "70710677": [140, 154, 459, 473], "70710678": [301, 305], "70710678j": 305, "70882036": 527, "7110255": 90, "71102554": 90, "71238898": 519, "718281828": [209, 212], "72": 96, "720": [98, 100, 642], "72075441": 342, "72450536": 90, "72538256": [32, 52], "74165739": 316, "742278e": 604, "74596669": [312, 316], "7485727": 90, "74857277": 90, "74921661": 524, "75": [61, 208, 218, 259, 265, 309, 330], "7516936": 264, "754": 235, "75682673": 605, "75958653": 519, "76096244": 525, "76377462": 525, "76813555": 264, "77447665": 337, "78539816": [23, 33, 34, 55, 56, 642], "78927254": 527, "79175947": 97, "7937219": 90, "79727215": 90, "7972722": 90, "79769313e": 359, "7j": 513, "8": [4, 18, 20, 25, 26, 27, 44, 58, 65, 67, 76, 79, 89, 96, 104, 105, 106, 107, 109, 110, 133, 143, 159, 176, 179, 181, 185, 190, 193, 195, 200, 203, 204, 213, 216, 218, 232, 233, 239, 242, 257, 259, 266, 267, 273, 276, 277, 278, 293, 303, 304, 316, 320, 322, 323, 324, 325, 327, 328, 329, 330, 342, 344, 346, 369, 371, 452, 462, 478, 499, 505, 510, 511, 512, 514, 530, 554, 573, 580, 581, 593, 595, 598, 604, 611, 616, 620, 624, 626, 628, 630, 631, 632, 634, 635, 636, 640, 641, 642, 643, 644, 646, 647, 649], "80": [190, 203, 649], "8000": 569, "8012391e": 90, "80226506": [525, 528], "8058837395885292": 329, "8104691": 90, "81715362": 529, "827941": [257, 342], "82842712": [306, 308], "8399546e": 90, "84086883": 90, "84288406": 524, "84401099": [527, 529], "84743374": [525, 528], "84803548": 316, "85": 203, "86": 275, "87649168": 336, "88": 202, "88079259": 270, "88178420e": 216, "881943016134134": 329, "88194302": 329, "88997253": 527, "8900264": 90, "89002645": 90, "89920014": 534, "8f": [180, 200], "8j": 645, "9": [4, 18, 25, 26, 27, 44, 58, 79, 89, 90, 96, 99, 101, 104, 105, 106, 107, 109, 112, 141, 176, 203, 205, 213, 216, 219, 220, 225, 236, 242, 244, 252, 257, 259, 266, 267, 278, 293, 304, 305, 310, 312, 316, 318, 319, 322, 323, 324, 327, 329, 342, 344, 358, 359, 369, 371, 460, 499, 514, 530, 532, 534, 554, 580, 581, 593, 611, 612, 616, 617, 624, 630, 631, 632, 634, 635, 636, 637, 640, 641, 642, 643, 644, 647, 649], "90": [23, 103, 518, 595, 649], "9011005": 90, "917152": 623, "92": 27, "92387953": 306, "92387953j": 306, "9305482": 90, "93548928": 605, "9377134e": 90, "9387854e": 90, "9393724": 90, "9393725": 90, "94": 203, "94591015": 97, "94615364": 264, "95": 310, "9520904e": 90, "95799250e": 216, "96109843": 264, "968541": 90, "9685411": 90, "9724453": 90, "98": [311, 345], "98024613": 342, "9875833": 90, "99": [202, 334, 516], "9909503": 90, "99095035": 90, "99322285": [17, 30], "994938": 90, "9949381": 90, "9951523": 90, "99532227": 208, "996272": 623, "99822295": [32, 52], "99853728": 208, "999": [204, 276], "9990000e": 359, "99959305": 208, "99989938": 208, "9999": 359, "99997791": 208, "9999999": 90, "99999994": 90, "999999e": 278, "A": [11, 14, 15, 16, 17, 18, 20, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 80, 81, 84, 85, 87, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 122, 128, 138, 141, 171, 176, 178, 181, 182, 185, 188, 191, 193, 197, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 233, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 266, 267, 269, 270, 271, 273, 274, 276, 277, 281, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 300, 304, 306, 307, 308, 310, 314, 315, 316, 319, 320, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 348, 350, 352, 354, 355, 358, 362, 363, 366, 368, 370, 441, 447, 457, 460, 490, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 513, 518, 519, 520, 522, 523, 527, 529, 532, 549, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 579, 580, 581, 583, 585, 588, 591, 592, 595, 598, 602, 603, 604, 605, 606, 610, 611, 612, 613, 617, 619, 620, 622, 623, 624, 625, 627, 629, 631, 633, 635, 637, 638, 643, 646, 647, 649, 650, 651, 666], "AND": [19, 64, 65, 67, 68, 70, 277, 338, 339, 340, 341], "And": [4, 53, 54, 106, 122, 441, 631, 635], "As": 639, "At": 496, "Be": 305, "Being": 3, "But": [4, 192], "By": [36, 37, 47, 54, 96, 122, 217, 221, 223, 227, 229, 233, 257, 310, 330, 342, 345, 347, 349, 353, 360, 361, 364, 365, 367, 368, 369, 370, 371, 441, 586, 593, 607, 616, 620, 629, 631, 633, 635, 644, 646], "For": [0, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 135, 138, 140, 141, 148, 154, 156, 159, 164, 173, 176, 177, 190, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 454, 457, 459, 460, 467, 473, 475, 478, 483, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659, 666], "If": [4, 11, 14, 15, 18, 19, 20, 24, 25, 27, 28, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 56, 61, 62, 64, 66, 68, 69, 70, 74, 79, 81, 82, 83, 88, 90, 94, 96, 97, 98, 99, 100, 101, 104, 105, 109, 110, 112, 113, 120, 122, 143, 161, 171, 176, 178, 184, 200, 202, 203, 204, 207, 211, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 242, 244, 245, 246, 247, 248, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 278, 283, 286, 287, 288, 295, 296, 297, 298, 299, 300, 302, 310, 312, 313, 314, 315, 316, 318, 319, 322, 324, 326, 327, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 347, 348, 349, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 462, 480, 490, 498, 500, 507, 508, 510, 511, 512, 515, 516, 524, 530, 552, 557, 574, 581, 582, 584, 585, 586, 587, 588, 589, 591, 593, 596, 597, 599, 608, 611, 614, 615, 616, 617, 618, 619, 620, 621, 624, 625, 626, 627, 628, 633, 637, 639, 642, 643, 644, 645, 646, 647, 648, 649, 659, 666], "In": [4, 11, 36, 37, 62, 90, 96, 98, 99, 100, 101, 203, 204, 222, 223, 224, 227, 229, 248, 259, 292, 300, 307, 315, 319, 321, 337, 342, 362, 363, 365, 368, 369, 370, 371, 512, 515, 530, 574, 579, 580, 588, 589, 616, 618, 620, 638, 644], "It": [4, 11, 19, 24, 25, 26, 36, 37, 79, 81, 98, 99, 100, 101, 111, 113, 171, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 259, 276, 306, 308, 337, 345, 349, 350, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 490, 505, 512, 588, 589, 600, 610, 616, 618, 620, 644, 666], "Its": [79, 325, 516, 626], "NOT": [65, 67, 277, 338, 339, 340, 341], "No": [46, 47, 203, 300], "Not": [19, 24, 47, 282, 359, 362, 363, 364, 367, 368, 370, 512], "OR": [24, 64, 65, 67, 68, 70, 277, 338, 339, 340, 341], "On": 4, "One": [58, 59, 60, 96, 177, 181, 227, 292, 317, 505, 588], "Ones": 41, "Or": [259, 628], "That": 344, "The": [3, 4, 11, 13, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 120, 122, 128, 140, 143, 148, 150, 154, 159, 161, 177, 178, 179, 183, 184, 185, 190, 192, 194, 196, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 277, 278, 280, 281, 282, 283, 284, 285, 289, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 439, 441, 447, 459, 462, 467, 469, 473, 478, 480, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 509, 510, 511, 512, 514, 515, 516, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 533, 535, 536, 546, 551, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 579, 580, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 644, 646, 648, 649, 650, 651, 659, 662, 666], "Then": [11, 48, 50, 344], "There": [11, 330, 616, 639, 644], "These": [4, 5, 25, 197, 203, 204, 211, 344, 357, 516, 621, 631, 635, 659, 662], "To": [4, 221, 227, 229, 242, 499, 642], "With": [36, 37, 61, 94, 100, 101, 267, 312, 316, 329, 347, 353, 360, 361, 368, 370, 512, 618, 647], "_": [0, 265, 615, 628], "__array_interface__": 183, "__array_namespace_info__": 5, "__bool__": 659, "__dlpack__": 248, "__dlpack_device__": 248, "__main__": 0, "__name__": 0, "__sycl_usm_array_interface__": 49, "_core": 185, "_dtypes_list": 0, "_f": 316, "_k": 91, "_n": 91, "a1": [42, 43], "a2": [42, 43], "a_": [11, 91, 316], "a_ax": [324, 624], "a_i": [328, 616, 644, 646], "a_k": 11, "a_m": 11, "a_resamp": 227, "ab": [7, 11, 15, 20, 278, 316, 369, 371, 616, 644], "abc": [203, 292], "abcd": 204, "abl": 316, "about": [48, 50, 136, 235, 305, 455, 505, 587, 659], "abov": [3, 16, 17, 29, 30, 31, 32, 35, 51, 52, 57, 91, 97, 105, 108, 219, 224, 229, 233, 274, 304, 319, 327, 343, 359, 584, 629, 630, 634], "abscissa": 264, "absolut": [7, 14, 20, 23, 62, 215, 256, 278, 295, 320, 369, 371, 513, 582, 616, 642, 644, 666], "ac": 91, "accept": [26, 203, 317, 530, 631, 635], "access": [5, 11, 106, 107, 234, 344, 631, 635, 659], "accord": [19, 24, 61, 69, 75, 179, 194, 233, 235, 305, 306, 307, 308, 343, 349, 350, 365, 366, 369, 371, 505, 584, 591, 616, 644], "accordingli": [96, 364, 367], "account": [579, 588], "accumul": [97, 98, 99, 100, 101, 203, 263, 327, 362, 363, 368, 370, 512, 618, 626], "accur": [183, 212, 259, 334, 336], "accuraci": [222, 223, 224, 227, 229], "achiev": 203, "aco": [7, 29], "acosh": [7, 30], "across": [109, 265, 362, 363, 368, 370], "activ": 4, "actual": [186, 263, 265, 300, 315], "ad": [20, 62, 192, 204, 211, 227, 278, 303, 320, 337, 642, 662], "add": [7, 90, 178, 666], "addit": [26, 90, 97, 300, 365, 639], "address": 186, "adjac": [304, 327, 610, 642], "advanc": 203, "advers": 203, "advis": 4, "affect": [28, 109, 203, 234, 263, 265], "after": [177, 234, 498, 505, 549, 593], "after_1": 505, "after_n": 505, "ag": 178, "against": [20, 36, 37, 71, 72, 73, 79, 94, 258, 278, 312, 316, 318, 329, 347, 353, 360, 361, 368, 370, 512, 516, 618, 621], "ai": [3, 516, 621], "ai_max": 621, "ai_min": 621, "ainv": [309, 325], "al": 11, "algebra": [652, 662], "algorithm": [11, 38, 120, 161, 203, 204, 216, 222, 230, 439, 480, 608], "alia": [11, 16, 17, 21, 22, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 65, 66, 67, 69, 82, 83, 112, 206, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 255, 277, 297, 355, 372, 503, 507, 510, 511, 530, 560, 563, 565, 579, 585, 588, 591, 597, 627, 637, 642, 648, 651], "alias": [10, 221, 222, 227, 229, 605], "align": [178, 187], "all": [4, 7, 10, 20, 23, 24, 25, 42, 43, 47, 54, 61, 80, 90, 94, 103, 110, 122, 126, 135, 150, 177, 181, 194, 196, 203, 204, 209, 210, 212, 214, 219, 220, 224, 225, 228, 229, 233, 234, 239, 240, 241, 248, 249, 250, 252, 257, 259, 264, 266, 268, 271, 273, 293, 300, 302, 314, 318, 321, 329, 330, 342, 347, 350, 353, 360, 361, 364, 366, 367, 441, 445, 454, 469, 505, 512, 532, 581, 582, 593, 597, 600, 614, 618, 633, 639, 641, 646, 648, 659, 666], "allclos": [7, 42, 278, 309, 318, 319, 321, 322, 326], "alloc": [3, 4, 25, 28, 41, 45, 46, 47, 48, 49, 50, 54, 61, 87, 97, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 236, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 271, 274, 286, 287, 330, 331, 342, 343, 344, 349, 350, 352, 365, 366, 369, 371, 441, 447, 490, 501, 502, 503, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 584, 614, 616, 629, 631, 635, 643, 644, 646, 650, 651], "allow": [44, 54, 100, 101, 104, 122, 156, 203, 263, 265, 281, 283, 337, 344, 350, 366, 441, 475, 620, 659], "almost": [39, 305, 631], "along": [3, 4, 19, 21, 22, 24, 25, 26, 27, 36, 37, 38, 44, 61, 80, 81, 82, 83, 94, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 118, 119, 120, 125, 129, 130, 144, 146, 151, 152, 160, 161, 163, 165, 170, 172, 175, 176, 177, 202, 213, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 239, 240, 241, 245, 246, 251, 257, 259, 264, 266, 267, 268, 274, 276, 316, 319, 324, 325, 326, 327, 328, 329, 330, 342, 343, 347, 348, 349, 350, 351, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 437, 438, 439, 444, 448, 449, 463, 465, 470, 471, 479, 480, 482, 484, 489, 491, 494, 505, 508, 512, 514, 515, 516, 579, 584, 586, 593, 594, 595, 597, 600, 607, 608, 611, 615, 616, 618, 620, 621, 624, 625, 626, 628, 631, 632, 633, 635, 636, 639, 641, 642, 644, 646, 647, 648, 659], "alpha": [531, 536, 537, 553, 556], "alreadi": [4, 11, 46, 47, 58, 59, 60, 504, 505, 639], "also": [3, 4, 11, 16, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 88, 90, 112, 159, 178, 184, 187, 196, 203, 207, 211, 219, 224, 228, 229, 230, 233, 242, 244, 245, 246, 247, 251, 253, 256, 259, 260, 261, 262, 263, 269, 278, 283, 295, 297, 298, 299, 300, 336, 337, 344, 348, 354, 355, 357, 358, 478, 499, 500, 510, 511, 568, 585, 591, 605, 617, 620, 637, 639, 659], "alter": 109, "altern": [3, 4, 19, 24, 98, 99, 100, 101, 113, 173, 345, 347, 349, 350, 353, 362, 363, 365, 366, 368, 369, 370, 371, 492, 512, 616, 618, 644], "although": [23, 192, 223, 224, 225, 625], "alwai": [4, 11, 16, 17, 29, 30, 31, 32, 33, 35, 38, 45, 51, 52, 54, 55, 57, 109, 122, 176, 202, 215, 242, 248, 267, 306, 308, 369, 371, 441, 499, 588, 609, 616, 644, 647], "amax": [7, 63, 347], "ambigu": 659, "amin": [7, 353], "among": 202, "amplitud": 11, "an": [0, 3, 4, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 92, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 141, 144, 148, 150, 152, 155, 156, 159, 160, 161, 162, 166, 170, 171, 173, 176, 177, 178, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 289, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 307, 310, 314, 315, 316, 318, 319, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 380, 439, 440, 441, 442, 443, 444, 447, 460, 463, 467, 469, 471, 474, 475, 478, 479, 480, 481, 485, 489, 490, 492, 495, 496, 497, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 525, 532, 537, 538, 540, 549, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 659, 666], "anaconda": 3, "analog": [217, 219, 221, 223, 224, 226], "analysi": 11, "analyt": [3, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57], "angl": [7, 11, 16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 102, 103, 273, 518, 519, 581, 582, 642, 666], "ani": [3, 7, 19, 20, 25, 26, 41, 45, 46, 47, 48, 49, 50, 54, 71, 72, 73, 87, 105, 108, 110, 122, 148, 184, 186, 192, 196, 203, 204, 217, 219, 223, 224, 229, 233, 234, 254, 255, 257, 259, 265, 268, 280, 289, 290, 313, 326, 330, 342, 344, 364, 367, 441, 467, 505, 530, 574, 587, 605, 610, 643, 659], "anoth": [4, 89, 90, 91, 128, 152, 213, 223, 224, 447, 471, 508, 515, 594], "answer": 532, "anti": [109, 234, 304, 605], "anyth": 190, "ap": 310, "apart": 628, "api": [0, 2, 3, 7, 13, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 96, 98, 99, 100, 101, 105, 106, 108, 109, 122, 128, 171, 179, 185, 188, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 302, 304, 311, 312, 317, 318, 327, 328, 329, 330, 331, 342, 344, 345, 352, 441, 447, 490, 501, 502, 503, 504, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 626, 629, 631, 635, 643, 645, 646, 650, 651], "appear": [211, 240, 241, 639], "append": [0, 7, 66, 104, 110, 202, 204, 211, 222, 223, 224, 276, 297, 304], "appli": [26, 27, 36, 37, 38, 61, 75, 104, 120, 161, 203, 324, 359, 439, 480, 580, 589, 590, 608, 616, 624, 628, 644], "applic": [11, 181, 605], "apply_along_axi": [7, 27, 662], "apply_over_ax": [7, 26, 662], "approach": [159, 192, 222, 223, 224, 478], "appropri": [4, 36, 37, 81, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 258, 326, 360, 361, 364, 367, 526, 558, 561, 589, 620, 659], "approxim": [235, 628], "ar": [3, 4, 5, 11, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 47, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 112, 113, 122, 149, 150, 159, 178, 184, 185, 187, 192, 194, 196, 197, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 275, 276, 277, 278, 281, 282, 283, 284, 285, 292, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 322, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 441, 468, 469, 478, 495, 497, 498, 499, 500, 505, 506, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 524, 526, 528, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 552, 553, 555, 556, 558, 561, 562, 564, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 589, 591, 592, 593, 596, 597, 598, 599, 600, 602, 603, 604, 607, 608, 610, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 628, 632, 633, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 648, 649, 659, 666], "arang": [0, 7, 18, 27, 36, 37, 39, 44, 58, 59, 60, 61, 63, 79, 88, 103, 104, 105, 106, 107, 109, 112, 113, 132, 143, 176, 203, 207, 209, 210, 212, 213, 216, 238, 239, 242, 247, 248, 255, 256, 257, 259, 263, 267, 274, 275, 276, 293, 294, 295, 296, 304, 311, 312, 316, 324, 327, 329, 330, 333, 334, 338, 339, 340, 341, 342, 344, 345, 347, 351, 353, 355, 358, 451, 462, 500, 503, 505, 508, 510, 511, 515, 519, 554, 585, 587, 588, 590, 593, 595, 600, 611, 617, 624, 626, 628, 631, 632, 635, 636, 637, 641, 647, 649, 651], "arbitrari": [53, 113, 186, 203, 275, 345, 590, 631, 635], "arbitrarili": 203, "arc": [23, 31, 33, 51, 55], "arcco": [7, 16, 17, 30, 31, 33, 34, 51, 55, 56, 92], "arccosh": [7, 16, 17, 29, 32, 35, 52, 57, 93], "arcsin": [7, 16, 29, 32, 33, 34, 51, 52, 55, 56, 604], "arcsinh": [7, 17, 30, 31, 35, 51, 52, 57, 606], "arctan": [7, 16, 23, 29, 31, 34, 35, 51, 55, 56, 57, 622], "arctan2": [7, 23, 31, 33, 51, 55, 56], "arctanh": [7, 17, 30, 32, 33, 34, 52, 55, 56, 57, 623], "area": [628, 633], "arg": [26, 71, 72, 141, 293, 460, 525, 527, 557], "arg1": 291, "arg2": 291, "argmax": [0, 7, 37, 360, 516, 621, 659], "argmin": [7, 36, 361, 621, 659], "argpartit": [7, 38, 516, 621, 659], "argsort": [7, 161, 480, 507, 516, 599, 608, 621, 627, 659], "argument": [0, 11, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 79, 82, 83, 88, 92, 93, 102, 103, 112, 113, 141, 156, 173, 184, 204, 208, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 256, 262, 269, 270, 273, 277, 281, 290, 291, 295, 296, 297, 302, 304, 311, 315, 316, 317, 324, 327, 328, 333, 334, 335, 336, 337, 344, 345, 348, 354, 355, 356, 358, 460, 475, 492, 496, 497, 498, 505, 509, 510, 511, 513, 515, 518, 519, 557, 581, 582, 583, 585, 588, 590, 591, 592, 598, 602, 603, 604, 605, 606, 610, 615, 616, 617, 622, 623, 624, 628, 637, 638, 644, 646, 659, 666], "argwher": [7, 499], "ari": [44, 58, 59, 60, 176, 202, 267, 611, 647], "arithmet": [61, 257, 349, 350, 365, 366, 369, 371, 509, 616, 618, 644, 652, 662], "around": [7, 114, 257, 505, 515, 580, 596], "arr": [25, 26, 47, 104, 107, 190, 192, 265, 276, 517, 554, 579, 580, 632, 636, 641], "arr2": [192, 641], "arr_t": [54, 122, 441], "arrai": [0, 2, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 175, 176, 177, 178, 188, 190, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 380, 437, 438, 439, 440, 441, 442, 443, 444, 447, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 464, 466, 467, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 662, 666], "array2str": 7, "array_equ": [7, 20, 276], "array_equiv": [7, 42], "array_lik": [25, 41, 45, 46, 47, 48, 49, 50, 53, 61, 81, 87, 89, 105, 108, 202, 213, 254, 255, 257, 276, 280, 289, 324, 330, 342, 495, 505, 508, 515, 516, 520, 595, 601, 607, 620, 624, 643], "array_of_diagon": 109, "array_repr": 7, "array_split": [7, 82, 83, 611], "array_str": 7, "array_util": 74, "arrays_and_dtyp": 590, "art": 11, "asanyarrai": [7, 46, 47, 50, 587], "asarrai": [4, 7, 45, 47, 48, 50, 53, 495, 587, 607], "asarray_chkfinit": [7, 45, 46], "ascend": [38, 120, 161, 306, 308, 439, 480, 599, 608], "ascii": 181, "ascontiguousarrai": [7, 45, 46, 47, 50, 587], "asfarrai": [45, 46], "asfortranarrai": [7, 45, 46, 47, 48, 587], "asin": [7, 31], "asinh": [7, 32], "asmatrix": 7, "aspect": 192, "assembl": [82, 83, 177, 268, 597, 615, 641, 648], "assert": [350, 366], "assign": [135, 159, 264, 266, 454, 478, 631, 635], "associ": [61, 248, 263, 265, 659], "assum": [11, 61, 96, 204, 221, 227, 229, 304, 314, 318, 322, 344, 616, 628, 644], "astyp": [7, 90, 257, 264, 499], "atan": [7, 33], "atan2": [7, 34], "atanh": [7, 35], "atleast_1d": [7, 59, 60, 211], "atleast_2d": [7, 58, 60, 211], "atleast_3d": [7, 58, 59, 211], "atol": [20, 278], "attain": 0, "attempt": [113, 315], "attribut": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 235, 255, 272, 319, 503, 651, 652], "automat": [263, 265], "avail": [2, 3, 4, 11, 95, 179, 208, 356, 360, 361, 364, 367, 368, 652, 659], "averag": [7, 26, 145, 349, 350, 365, 366, 369, 371, 464, 618, 662], "avg": 61, "avoid": [41, 46, 59, 60, 221, 227, 229, 588], "aweight": 95, "ax": [19, 24, 26, 27, 36, 37, 61, 94, 96, 97, 110, 113, 166, 173, 203, 211, 217, 219, 220, 223, 224, 225, 228, 229, 231, 233, 239, 259, 275, 302, 312, 316, 321, 324, 325, 326, 327, 329, 343, 345, 346, 347, 349, 350, 353, 357, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 485, 492, 504, 505, 507, 512, 584, 589, 593, 594, 595, 614, 616, 618, 619, 624, 625, 626, 627, 639, 644, 646], "axi": [19, 21, 22, 24, 25, 26, 27, 36, 37, 38, 44, 61, 80, 81, 82, 83, 94, 96, 97, 98, 99, 100, 101, 104, 109, 110, 116, 117, 118, 119, 120, 125, 129, 130, 138, 144, 145, 146, 150, 151, 152, 155, 160, 161, 162, 163, 165, 170, 173, 175, 176, 177, 202, 203, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 239, 240, 241, 245, 246, 251, 257, 259, 264, 267, 268, 274, 276, 302, 310, 316, 324, 328, 329, 330, 342, 343, 345, 347, 348, 349, 350, 353, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 437, 438, 439, 444, 448, 449, 457, 463, 464, 465, 469, 470, 471, 474, 479, 480, 481, 482, 484, 489, 492, 494, 505, 506, 507, 508, 512, 514, 515, 516, 579, 584, 586, 588, 589, 593, 594, 595, 597, 600, 607, 608, 611, 614, 615, 616, 618, 619, 620, 621, 624, 625, 626, 627, 628, 633, 639, 641, 642, 644, 646, 647, 648, 659], "axis1": [109, 132, 166, 172, 451, 485, 491, 619, 626], "axis2": [109, 132, 166, 172, 451, 485, 491, 619, 626], "axisa": 96, "axisb": 96, "axisc": 96, "axiserror": [38, 608], "b": [11, 18, 20, 25, 26, 36, 37, 42, 43, 64, 70, 80, 82, 83, 89, 96, 99, 100, 101, 113, 133, 177, 178, 185, 191, 193, 196, 203, 204, 207, 249, 250, 260, 261, 268, 275, 276, 278, 283, 294, 298, 299, 302, 303, 310, 311, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 338, 340, 345, 346, 347, 350, 353, 366, 452, 498, 500, 504, 510, 511, 531, 590, 597, 610, 615, 624, 625, 633, 645, 646, 648, 666], "b_ax": [324, 624], "b_i": [328, 646], "back": [138, 248, 251, 457, 579, 588, 589, 594, 633], "backend": [2, 258, 533, 535, 536, 546, 551, 567], "backward": [11, 54, 122, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 259, 441, 588, 593, 594], "bad": 542, "baltimor": 316, "bandlimit": 605, "bar": [616, 644], "bartlett": 7, "base": [0, 4, 62, 200, 203, 210, 213, 242, 257, 263, 265, 322, 332, 333, 334, 335, 336, 337, 342, 343, 345, 508, 510, 511, 515, 517, 646], "base_repr": [7, 62], "basic": [75, 203, 659, 662], "batch": 329, "bc": [303, 320], "bcde": 204, "becaus": [11, 19, 24, 221, 227, 229, 616, 642, 644, 659], "becom": [11, 18, 34, 56, 64, 66, 68, 69, 70, 88, 112, 173, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 263, 269, 295, 296, 297, 298, 299, 336, 337, 338, 340, 341, 348, 354, 355, 358, 492, 498, 500, 510, 511, 585, 591, 617, 637], "been": [177, 270, 516, 594, 616, 621], "befor": [4, 25, 27, 38, 82, 83, 97, 120, 150, 161, 202, 222, 223, 224, 240, 241, 276, 326, 343, 347, 353, 369, 371, 439, 469, 480, 505, 512, 584, 593, 594, 608, 616, 618, 625, 644, 645], "before_1": 505, "before_n": 505, "begin": [202, 204, 257, 330, 342, 505, 600], "behav": [276, 331, 515], "behavior": [38, 120, 128, 161, 231, 327, 359, 439, 447, 480, 589, 608, 625], "behind": [150, 469], "being": [3, 90, 91, 178, 245, 246, 266, 348, 354, 505], "belong": [111, 263, 264, 266], "below": [0, 4, 10, 16, 29, 31, 32, 35, 51, 52, 57, 90, 105, 108, 196, 227, 304, 314, 316, 327, 629, 630, 634, 642, 659], "bessel": [270, 616, 644], "best": 204, "beta": [7, 541], "between": [20, 28, 44, 74, 75, 90, 110, 202, 235, 250, 253, 259, 275, 276, 278, 330, 342, 505, 547, 561, 610, 617, 628, 642], "beyond": [4, 593], "bi": 264, "bia": [95, 616, 644], "bias": 616, "big": [181, 196], "bin": [62, 63, 111, 216, 218, 232, 263, 264, 265, 266, 568], "bin_area": 264, "bin_count": [264, 266], "bin_edg": [263, 265], "bin_valu": 264, "bin_volum": [264, 266], "binari": [62, 64, 65, 66, 67, 68, 69, 70, 249, 250, 252, 253, 277, 297, 591], "binary_repr": [7, 64, 65, 66, 67, 68, 69, 70, 277, 297, 591], "bincount": [7, 111, 263], "binomi": [7, 549], "bins_0": 265, "bins_1": 265, "bit": [62, 64, 65, 66, 67, 68, 69, 70, 181, 184, 185, 193, 235, 272, 277, 297, 338, 340, 341, 368, 370, 591, 603, 652, 662], "bitwis": [64, 68, 70], "bitwise_and": [7, 65, 67, 68, 70, 277, 338], "bitwise_count": 7, "bitwise_invert": [7, 67, 277], "bitwise_left_shift": [7, 297], "bitwise_not": 7, "bitwise_or": [7, 64, 65, 67, 70, 277, 340], "bitwise_right_shift": [7, 591], "bitwise_xor": [7, 64, 65, 67, 68, 277, 341], "biufcmmosuv": 191, "blackman": 7, "block": [7, 82, 83, 177, 234, 268, 294, 597, 615, 641, 648], "bmat": 7, "bool": [10, 19, 20, 23, 24, 36, 37, 38, 41, 42, 43, 46, 49, 54, 61, 75, 89, 90, 94, 97, 100, 101, 104, 111, 120, 122, 161, 178, 204, 207, 234, 248, 257, 260, 261, 263, 264, 266, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 298, 299, 300, 312, 314, 316, 318, 322, 329, 330, 342, 343, 347, 349, 350, 351, 353, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 480, 499, 500, 512, 584, 588, 600, 603, 608, 616, 618, 620, 639, 643, 644, 659], "bool_": 10, "boolean": [64, 65, 67, 68, 70, 89, 97, 100, 101, 104, 186, 187, 189, 191, 213, 242, 248, 270, 274, 276, 277, 278, 281, 282, 284, 286, 287, 288, 293, 338, 340, 343, 344, 349, 350, 365, 366, 368, 369, 371, 499, 508, 584, 616, 620, 644], "boolean_sequ": 293, "both": [11, 18, 20, 25, 34, 42, 43, 56, 61, 64, 66, 68, 69, 70, 79, 88, 96, 112, 113, 207, 223, 230, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 275, 278, 294, 295, 296, 297, 298, 299, 311, 316, 324, 336, 337, 338, 340, 341, 345, 348, 354, 355, 358, 370, 498, 500, 510, 511, 585, 588, 591, 617, 624, 626, 631, 633, 635, 637, 645, 646, 649], "bound": [515, 516, 580, 599, 620, 621, 633], "boundari": [259, 515, 580], "box": 633, "branch": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57], "briefli": 659, "broadcast": [18, 19, 20, 24, 34, 36, 37, 43, 56, 61, 64, 66, 68, 69, 70, 71, 72, 73, 79, 88, 89, 94, 112, 203, 207, 213, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 286, 287, 295, 296, 297, 298, 299, 311, 312, 316, 318, 329, 336, 337, 338, 340, 341, 343, 345, 347, 348, 349, 350, 353, 354, 355, 358, 360, 361, 365, 366, 368, 369, 370, 371, 498, 500, 510, 511, 512, 515, 516, 584, 585, 586, 591, 616, 617, 618, 621, 625, 637, 644, 646, 649], "broadcast_arrai": [7, 72, 73], "broadcast_shap": 7, "broadcast_to": [7, 71, 72, 625], "brought": 11, "buffer": [49, 98, 99, 100, 101, 114, 248, 249, 250, 252, 253, 331, 347, 353, 362, 363], "buffer_lik": 249, "buffererror": 248, "build": 662, "build_loc": 4, "built": [62, 178, 181, 182, 188, 197], "busday_count": 7, "busday_offset": 7, "byte": [7, 54, 74, 122, 142, 147, 178, 179, 181, 189, 191, 194, 196, 203, 249, 250, 331, 441, 461, 466], "byteord": 196, "byteswap": 7, "bz2": 331, "c": [2, 4, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 91, 92, 93, 96, 101, 102, 103, 112, 113, 114, 122, 128, 138, 153, 156, 178, 179, 184, 185, 188, 191, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 258, 260, 261, 262, 269, 270, 273, 275, 277, 282, 283, 284, 285, 294, 295, 296, 297, 298, 299, 303, 310, 315, 316, 320, 324, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 354, 355, 358, 441, 447, 457, 472, 475, 497, 498, 499, 500, 502, 503, 509, 510, 511, 513, 518, 519, 579, 580, 581, 583, 585, 587, 588, 589, 591, 592, 598, 602, 603, 604, 605, 606, 610, 612, 613, 617, 622, 623, 624, 625, 637, 638, 639, 640, 646, 649, 650, 651, 666], "c_": 91, "c_contigu": [48, 50, 128, 447, 587], "c_k": 91, "ca": 86, "cach": 248, "calcul": [11, 14, 15, 18, 23, 34, 56, 61, 96, 97, 99, 101, 110, 112, 202, 203, 207, 209, 210, 212, 216, 225, 242, 243, 244, 247, 259, 265, 269, 305, 306, 307, 308, 310, 316, 318, 334, 336, 337, 343, 345, 349, 350, 355, 358, 365, 366, 369, 371, 500, 505, 510, 511, 512, 584, 585, 616, 617, 637, 644, 645, 652, 666], "call": [11, 23, 25, 27, 34, 36, 37, 38, 48, 50, 56, 63, 178, 222, 223, 224, 227, 230, 251, 276, 305, 307, 315, 323, 344, 350, 366, 369, 371, 380, 499, 614, 616, 620, 625, 628, 644, 666], "callabl": [251, 344], "cambridg": 11, "can": [0, 3, 4, 5, 11, 18, 20, 25, 26, 27, 28, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70, 75, 87, 88, 90, 96, 105, 106, 108, 109, 112, 113, 122, 128, 133, 159, 161, 171, 178, 184, 190, 192, 194, 196, 203, 204, 205, 206, 207, 214, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 232, 234, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 268, 269, 271, 274, 275, 277, 278, 280, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 309, 310, 313, 314, 316, 318, 324, 326, 327, 330, 331, 336, 337, 338, 340, 341, 342, 344, 345, 348, 352, 354, 355, 358, 368, 370, 441, 447, 452, 478, 480, 490, 496, 497, 498, 499, 500, 501, 502, 503, 509, 510, 511, 516, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 579, 580, 585, 587, 588, 591, 610, 617, 620, 621, 624, 626, 628, 629, 631, 635, 636, 637, 639, 643, 645, 649, 650, 651, 659, 666], "can_cast": [7, 662], "cannot": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 82, 83, 360, 361, 588, 611, 614, 615], "capabl": [13, 28, 41, 45, 46, 48, 50, 61, 215, 257, 330, 342, 345, 646], "cardin": 605, "cardinali": 605, "care": [28, 305], "cartesian": [264, 351], "case": [4, 19, 24, 28, 36, 37, 41, 45, 46, 47, 48, 50, 61, 87, 96, 98, 99, 100, 101, 105, 108, 110, 141, 203, 204, 205, 206, 214, 218, 221, 226, 230, 232, 248, 249, 250, 251, 252, 254, 255, 257, 259, 271, 292, 305, 319, 322, 324, 330, 331, 337, 342, 352, 362, 363, 368, 370, 460, 501, 502, 503, 512, 579, 588, 589, 618, 624, 629, 642, 643, 650, 651, 659], "cast": [19, 24, 54, 75, 82, 83, 89, 97, 98, 99, 100, 101, 122, 203, 242, 268, 276, 305, 343, 345, 349, 350, 359, 362, 363, 365, 366, 368, 369, 370, 371, 441, 512, 584, 597, 615, 616, 618, 644, 646, 648], "cat": [532, 549], "cauchi": 568, "cbrt": [7, 612], "cdef": 204, "cdot": [91, 324, 328, 624, 646], "cdoubl": 10, "ceil": [7, 40, 236, 243, 244, 592, 596, 638], "center": [217, 218, 219, 220, 224, 225, 232], "central": [259, 550, 551], "certain": [192, 344], "ch": 11, "chain": [113, 133, 203, 204, 452], "chang": [27, 54, 87, 91, 96, 122, 138, 164, 173, 192, 196, 203, 213, 362, 363, 441, 457, 483, 492, 497, 508, 509, 515, 516, 517, 579, 588, 589, 594, 642, 662], "charact": [181, 182, 191, 250], "check": [19, 24, 45, 46, 47, 75, 221, 280, 283, 289, 292, 300, 318, 321, 659], "check_valid": 548, "chi": [534, 550], "chisquar": 7, "choic": [7, 78, 123, 216, 217, 219, 222, 223, 224, 228, 229, 231, 233, 306, 308, 442], "choicelist": [81, 600], "choleski": 7, "choos": [7, 23, 31, 33, 51, 55, 81, 204, 600, 649, 659], "chosen": [39, 263, 639, 649], "chunk": 63, "circ": 666, "circl": [320, 628], "clamp": [515, 516, 620, 621], "clariti": 234, "class": [3, 4, 114, 178, 237, 249, 250, 251, 253, 274, 331, 496, 520, 526, 558, 629, 662], "classic": 203, "clear": [192, 296, 659], "clip": [7, 515, 516, 580, 620, 621, 659], "close": [16, 17, 23, 29, 30, 31, 33, 51, 53, 54, 55, 122, 203, 211, 273, 330, 441, 526, 530, 558, 581, 582, 592, 596, 628], "closer": 638, "cloud": 3, "cmake": 4, "co": [7, 16, 17, 29, 30, 31, 51, 93, 307, 604, 622, 628], "coars": [317, 504], "code": [49, 181, 182, 191, 196, 281, 291, 587], "codeplai": 4, "coeffici": [90, 310, 321, 326], "coerc": [49, 249, 250, 251, 252, 253, 331], "coin": 532, "col": 274, "collaps": [138, 457, 639], "collect": 292, "column": [7, 45, 46, 47, 48, 50, 53, 54, 80, 82, 83, 90, 98, 99, 100, 101, 109, 122, 177, 214, 234, 240, 241, 259, 267, 268, 271, 305, 306, 310, 315, 319, 321, 322, 441, 579, 580, 587, 597, 611, 615, 629, 631, 635, 640, 643, 648], "column_stack": [7, 82, 83, 177, 268, 597, 615, 648], "com": 4, "combin": [0, 178, 187, 211, 219, 224, 229, 233, 259, 264], "combinatori": 204, "come": 639, "comma": [178, 203], "command": 4, "common": [18, 34, 56, 64, 66, 68, 69, 70, 88, 91, 112, 207, 222, 223, 224, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 295, 296, 297, 298, 299, 324, 336, 337, 338, 340, 341, 348, 354, 355, 358, 498, 499, 500, 510, 511, 585, 591, 616, 617, 624, 637, 644], "common_typ": 7, "compani": [532, 549], "compar": [20, 38, 42, 120, 161, 207, 245, 246, 265, 278, 317, 348, 354, 439, 480, 608], "comparison": [2, 20, 207, 260, 261, 298, 299, 500, 652, 662], "compat": [2, 3, 4, 11, 19, 24, 54, 61, 96, 98, 99, 100, 101, 109, 122, 264, 302, 304, 311, 312, 317, 318, 327, 328, 329, 343, 345, 349, 350, 364, 365, 366, 367, 369, 371, 441, 504, 584, 588, 616, 626, 644, 645, 646, 652, 662], "compil": [4, 178, 179, 188, 258, 587], "complement": [62, 642], "complementari": [244, 642], "complet": [3, 4, 204, 250, 251, 319, 594, 616, 644, 659], "complex": [11, 13, 14, 15, 16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 41, 42, 51, 52, 55, 56, 57, 75, 91, 97, 113, 126, 127, 191, 204, 208, 215, 216, 217, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 242, 245, 246, 273, 279, 280, 281, 288, 289, 296, 305, 306, 307, 308, 311, 319, 320, 322, 328, 343, 345, 348, 354, 359, 369, 371, 445, 446, 513, 581, 582, 584, 609, 616, 639, 644, 645, 646, 659, 662], "complex128": [10, 13, 61, 281, 590], "complex64": [10, 61, 74, 91, 160, 242, 479], "compliant": 114, "complic": [203, 666], "compon": [11, 42, 96, 220, 225, 232, 235, 273, 314, 324, 359, 581, 624], "compos": 88, "composit": [99, 101, 294, 618, 628], "compress": [7, 213, 600, 620, 659], "comput": [4, 11, 16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 40, 51, 52, 55, 56, 57, 61, 63, 64, 65, 67, 68, 70, 76, 84, 85, 90, 91, 92, 93, 97, 98, 99, 100, 101, 110, 111, 203, 209, 210, 211, 212, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 243, 259, 260, 261, 262, 263, 264, 265, 266, 273, 274, 277, 294, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 338, 339, 340, 341, 343, 345, 349, 350, 355, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 497, 504, 509, 513, 581, 583, 584, 585, 592, 596, 598, 602, 603, 604, 606, 612, 616, 618, 622, 623, 624, 628, 631, 635, 644, 646], "compute_uv": [301, 322, 323], "concat": [7, 83], "concaten": [7, 80, 82, 177, 268, 276, 597, 611, 615, 621, 641, 648], "concept": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651, 659], "cond": [7, 309], "condit": [39, 54, 81, 113, 122, 125, 213, 301, 309, 315, 441, 444, 499, 508, 515, 517, 600, 649], "condlist": 600, "confus": 247, "conj": [7, 85, 221, 273, 300, 305, 513], "conjug": [7, 11, 84, 91, 113, 126, 227, 230, 273, 300, 305, 306, 307, 308, 311, 328, 345, 445, 513, 645, 646], "consecut": [110, 202, 259], "conserv": 351, "consid": [20, 28, 41, 42, 45, 46, 48, 50, 204, 232, 257, 264, 278, 282, 306, 308, 314, 330, 342, 345, 526, 558, 589, 610, 639, 646], "consist": [42, 43, 202, 216, 217, 219, 222, 223, 224, 228, 229, 231, 233, 250, 265, 292, 324, 326, 330, 621, 624], "constant": [10, 185, 259, 505], "constant_valu": 505, "constraint": 61, "construct": [45, 46, 47, 78, 81, 105, 108, 109, 123, 178, 214, 248, 249, 250, 251, 252, 253, 271, 293, 296, 331, 352, 442, 501, 600, 605, 625, 626, 649, 652], "constructor": 659, "consum": [147, 466], "contain": [5, 11, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 47, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 88, 89, 90, 92, 93, 96, 97, 109, 112, 156, 178, 186, 207, 209, 210, 212, 217, 218, 219, 222, 227, 230, 232, 238, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 260, 261, 263, 264, 265, 269, 273, 274, 277, 297, 298, 299, 302, 304, 306, 319, 322, 324, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 348, 349, 354, 355, 358, 360, 361, 364, 365, 367, 369, 371, 475, 497, 499, 500, 507, 509, 510, 511, 513, 520, 581, 583, 584, 585, 591, 592, 596, 598, 602, 603, 604, 605, 606, 612, 613, 616, 617, 622, 623, 624, 627, 631, 632, 633, 635, 636, 637, 638, 644, 659], "content": [48, 121, 350, 366, 440, 567, 662], "context": [11, 616, 644], "contigu": [45, 46, 47, 48, 50, 74, 113, 153, 203, 283, 315, 472, 579, 587, 588], "continu": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 528, 562, 605], "contourf": 351, "contract": [203, 204, 324, 624], "contrari": [302, 304, 311, 327, 328], "contrast": [203, 515], "contribut": [11, 61, 263, 265], "control": [4, 54, 75, 82, 83, 89, 122, 203, 268, 345, 441, 597, 615, 646, 648], "conveni": [133, 173, 452, 492, 530], "convent": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 113, 203, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 264, 275, 311, 324, 326, 345, 504, 624, 646], "convers": [54, 122, 203, 441, 652], "convert": [25, 36, 37, 41, 45, 46, 47, 48, 49, 50, 53, 58, 59, 60, 87, 102, 103, 105, 108, 178, 203, 204, 211, 254, 255, 257, 276, 280, 289, 330, 342, 518, 519, 580, 587, 640, 642, 643], "convolut": [11, 86, 91], "convolv": [7, 91], "coolei": 11, "coordin": [94, 251, 259, 264, 274, 293, 351, 580, 640], "copi": [7, 25, 28, 38, 41, 42, 45, 46, 47, 48, 49, 50, 54, 58, 59, 60, 81, 89, 104, 105, 106, 108, 109, 120, 121, 122, 138, 141, 150, 156, 159, 161, 171, 178, 205, 206, 213, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 276, 330, 331, 342, 344, 350, 351, 352, 359, 366, 377, 380, 439, 440, 441, 457, 460, 469, 475, 478, 480, 490, 501, 502, 503, 506, 508, 509, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 579, 587, 588, 589, 599, 608, 614, 629, 630, 631, 634, 635, 643, 650, 651, 659], "copysign": [7, 497, 509], "copyto": [7, 128, 213, 447, 508], "core": [3, 203, 646, 659], "corner": [217, 219, 223, 224, 505], "corrcoef": [7, 95], "correct": [14, 15, 16, 17, 18, 23, 25, 29, 30, 31, 32, 33, 34, 35, 39, 40, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 82, 83, 84, 85, 88, 92, 93, 102, 103, 112, 207, 209, 210, 212, 215, 221, 227, 229, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 269, 270, 273, 277, 282, 284, 285, 295, 296, 297, 298, 299, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 354, 355, 358, 497, 498, 500, 509, 510, 511, 513, 518, 519, 581, 583, 585, 587, 591, 592, 596, 598, 602, 603, 604, 605, 606, 610, 612, 613, 615, 616, 617, 622, 623, 637, 638, 644], "correctli": [23, 31, 33, 36, 37, 51, 55, 94, 312, 316, 329, 347, 353, 360, 361, 368, 370, 499, 512, 618], "correl": [7, 90, 662], "correspond": [7, 11, 28, 36, 37, 41, 44, 45, 46, 47, 48, 49, 50, 54, 79, 82, 83, 87, 102, 103, 105, 106, 108, 109, 122, 128, 134, 171, 176, 205, 206, 214, 217, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 266, 267, 271, 274, 293, 302, 305, 306, 324, 328, 330, 331, 342, 344, 345, 352, 441, 447, 453, 490, 501, 502, 503, 507, 518, 519, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 593, 600, 601, 611, 616, 624, 627, 628, 629, 631, 635, 643, 644, 646, 647, 650, 651, 659], "correspondingli": [11, 611], "cosh": [7, 17, 30, 92, 606, 623], "cosin": [16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 604, 606, 622, 623], "cost": [203, 204], "costli": 204, "could": [161, 221, 227, 229, 480], "count": [19, 24, 63, 94, 111, 186, 204, 239, 249, 250, 252, 253, 259, 263, 265, 499, 512, 532, 607, 618, 639, 652, 662], "count_nonzero": [7, 499], "counterclockwis": [240, 241, 595], "counterpart": [11, 221, 227, 229, 659], "cov": [7, 90, 548], "covari": [90, 95], "cover": [631, 635, 662], "cpu": [4, 28, 41, 45, 46, 47, 48, 50, 87, 95, 105, 108, 205, 206, 208, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 271, 330, 331, 342, 352, 356, 368, 501, 502, 503, 629, 643, 650, 651], "creat": [3, 4, 28, 41, 43, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 107, 108, 109, 122, 128, 178, 204, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 359, 441, 447, 501, 502, 503, 505, 516, 520, 525, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 626, 629, 631, 632, 635, 636, 643, 650, 651, 659, 662], "creation": [192, 204, 652, 659, 662, 666], "crop": [216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 633], "cross": [7, 91, 293], "csingl": 10, "ct": 11, "ctype": 587, "cube": [76, 242, 612], "cubic": 204, "cuda": 4, "cumprod": [7, 100, 362, 659], "cumsum": [7, 101, 110, 363, 618, 628, 659], "cumul": [97, 98, 99, 100, 101, 110, 129, 130, 362, 363, 448, 449, 618, 628], "cumulative_prod": [7, 98], "cumulative_sum": [7, 99], "cupi": [2, 652], "current": [11, 14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 88, 92, 93, 102, 103, 112, 159, 192, 196, 204, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 250, 256, 262, 265, 269, 271, 277, 295, 296, 297, 333, 334, 335, 336, 337, 348, 354, 355, 356, 358, 478, 497, 498, 505, 509, 510, 511, 513, 518, 519, 583, 585, 587, 591, 592, 598, 602, 603, 604, 606, 610, 617, 622, 623, 637, 638], "curv": 628, "custom": 659, "customarili": 11, "cut": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 310, 646], "cutoff": 318, "cycl": [218, 232, 293, 589], "cyclic": 515, "cython": 4, "d": [0, 19, 24, 26, 27, 28, 61, 80, 81, 82, 83, 90, 98, 99, 105, 106, 107, 108, 109, 113, 138, 177, 182, 214, 218, 220, 225, 232, 234, 238, 240, 241, 253, 266, 267, 268, 271, 275, 293, 303, 304, 306, 307, 311, 315, 316, 320, 324, 327, 345, 351, 362, 363, 370, 457, 499, 510, 511, 512, 515, 535, 579, 588, 597, 599, 601, 615, 618, 620, 624, 625, 626, 639, 643, 646, 648, 659], "d0": [527, 557, 559], "d1": [527, 557, 559], "d2": [616, 644], "d3": 106, "data": [1, 3, 4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 102, 103, 105, 108, 111, 112, 113, 120, 121, 122, 156, 161, 171, 173, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 221, 227, 229, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 295, 296, 297, 298, 299, 304, 310, 317, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 348, 349, 350, 354, 355, 356, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 439, 440, 441, 475, 480, 490, 492, 495, 497, 498, 500, 502, 503, 508, 509, 510, 511, 513, 515, 516, 518, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 621, 622, 623, 626, 629, 633, 637, 638, 644, 646, 648, 649, 650, 651, 652, 662], "datatyp": [192, 314], "date": 4, "datetim": 191, "datetime_as_str": 7, "datetime_data": 7, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [95, 163, 175, 369, 371, 482, 494, 616, 644], "decai": 543, "decim": [40, 62, 157, 235, 236, 476, 592, 596], "decomposit": [300, 309, 314, 318, 322, 323, 662], "decompress": 331, "decreas": [111, 628], "decreasingli": [11, 217, 219, 223, 224], "deem": 248, "def": [0, 26, 505], "default": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 120, 122, 128, 138, 161, 171, 196, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 308, 310, 312, 314, 315, 316, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 457, 480, 490, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 518, 519, 520, 524, 530, 534, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 568, 569, 571, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 659], "default_devic": 13, "default_dtyp": 13, "default_rng": 7, "defg": 204, "defici": 314, "defin": [11, 13, 34, 56, 91, 96, 104, 184, 185, 188, 206, 216, 245, 246, 255, 262, 263, 264, 265, 276, 302, 304, 316, 328, 348, 354, 359, 503, 509, 582, 595, 616, 644, 646, 651, 659], "definit": [91, 96, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 243, 300, 616, 628, 644], "deg": [23, 519], "deg2rad": [7, 518, 519, 642], "degre": [7, 23, 102, 369, 371, 518, 519, 572, 595, 616, 642, 644, 666], "del": 666, "delet": [7, 25, 276], "delta": [11, 369, 371, 616, 642, 644], "demonstr": [0, 4, 185], "denomin": [616, 644], "denot": [91, 270, 328, 646], "dens": [274, 293, 352], "densiti": [263, 264, 266], "depend": [4, 13, 27, 38, 39, 81, 109, 120, 161, 215, 221, 227, 229, 248, 304, 306, 310, 316, 319, 321, 322, 330, 368, 370, 439, 480, 600, 608, 649], "depth": [80, 82, 83, 176, 177, 268, 597, 611, 615, 648], "deriv": [248, 259], "descend": [38, 120, 161, 322, 439, 480, 608], "describ": [97, 178, 184, 185, 195, 198, 200, 266, 316, 327, 343, 584, 662], "descript": [97, 183, 222, 224, 263, 343, 584, 659], "design": [11, 62], "desir": [28, 41, 45, 46, 48, 50, 53, 73, 205, 206, 214, 222, 223, 224, 254, 255, 257, 271, 330, 342, 502, 503, 579, 625, 629, 650, 651], "destin": [82, 83, 268, 357, 515, 516, 597, 615, 621, 648], "destruct": 666, "det": [7, 320], "detail": [40, 217, 219, 223, 224, 228, 229, 231, 233, 312, 329, 596, 631, 632, 635, 636, 639, 659], "determin": [16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 76, 88, 92, 93, 102, 103, 112, 209, 210, 212, 244, 245, 246, 247, 250, 251, 253, 269, 297, 303, 304, 310, 319, 320, 327, 332, 333, 334, 335, 336, 337, 338, 340, 341, 345, 348, 354, 355, 358, 498, 510, 511, 518, 519, 580, 583, 585, 591, 598, 600, 602, 604, 605, 606, 610, 612, 613, 617, 622, 623, 626, 637, 638, 640, 646], "devel": 4, "develop": [3, 4], "deviat": [163, 349, 365, 369, 371, 482, 527, 545, 552, 616, 644], "devic": [0, 2, 3, 13, 28, 41, 45, 46, 47, 48, 49, 50, 54, 61, 87, 97, 105, 106, 108, 114, 122, 128, 171, 203, 205, 206, 214, 215, 218, 232, 236, 248, 249, 250, 251, 252, 253, 254, 255, 257, 270, 271, 274, 330, 331, 342, 343, 344, 345, 349, 350, 352, 365, 366, 369, 371, 441, 447, 490, 501, 502, 503, 520, 522, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 584, 614, 616, 629, 631, 635, 643, 644, 646, 650, 651], "device_id": 248, "device_typ": 248, "df": [534, 550, 572, 573], "dfden": [538, 551], "dfnum": [538, 551], "dft": [11, 216, 221, 222, 226, 227, 230], "di": [106, 107], "diag": [7, 26, 81, 108, 109, 203, 214, 240, 241, 271, 305, 307, 322, 600, 626], "diag_indic": [7, 107, 234], "diag_indices_from": [7, 106, 234], "diagflat": [7, 105, 109, 626], "diagon": [7, 81, 105, 106, 107, 108, 172, 203, 214, 234, 271, 300, 306, 307, 308, 327, 344, 491, 600, 626, 629, 630, 631, 632, 634, 635, 636, 659], "dice": 547, "dict": [178, 505], "dictionari": [178, 184, 192], "diff": [7, 99, 101, 202, 259, 263], "differ": [3, 11, 20, 27, 28, 41, 44, 45, 46, 47, 48, 50, 61, 87, 91, 97, 99, 100, 101, 105, 108, 110, 128, 178, 182, 192, 196, 197, 202, 205, 206, 214, 217, 218, 222, 223, 225, 228, 231, 232, 235, 240, 241, 242, 249, 250, 251, 252, 254, 255, 257, 259, 266, 271, 276, 278, 308, 316, 327, 330, 331, 342, 343, 345, 352, 447, 501, 502, 503, 508, 510, 511, 516, 584, 589, 595, 616, 617, 621, 629, 631, 635, 642, 643, 644, 650, 651, 662], "differenti": 605, "digit": [7, 11, 63, 235, 263], "dim": [20, 580], "dimens": [19, 24, 25, 26, 27, 36, 37, 41, 58, 59, 60, 61, 80, 82, 83, 89, 94, 95, 96, 100, 101, 106, 109, 110, 138, 143, 148, 159, 176, 180, 195, 200, 211, 223, 224, 236, 240, 241, 259, 264, 266, 268, 274, 275, 293, 302, 304, 312, 314, 316, 319, 323, 324, 327, 328, 329, 343, 346, 347, 349, 350, 351, 352, 353, 357, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 457, 462, 467, 478, 495, 496, 499, 501, 512, 516, 528, 530, 557, 560, 562, 563, 565, 579, 580, 584, 588, 595, 601, 611, 614, 615, 616, 618, 619, 620, 621, 624, 625, 626, 631, 632, 633, 635, 636, 639, 640, 641, 644, 646, 647, 659, 662], "dimension": [2, 4, 26, 38, 63, 86, 91, 94, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 162, 202, 203, 216, 217, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 249, 250, 252, 259, 264, 267, 274, 276, 292, 293, 302, 310, 317, 319, 321, 325, 326, 343, 347, 351, 352, 353, 360, 361, 364, 367, 369, 371, 481, 495, 496, 501, 504, 512, 584, 608, 616, 618, 620, 625, 628, 639, 644, 645, 647, 652], "direct": [11, 96, 110, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 240, 241, 259, 302, 498, 595], "directli": [183, 184, 251, 274, 342, 499, 621], "directori": 258, "dirichlet": 7, "discard": 638, "discont": 642, "discontinu": 642, "discret": [3, 86, 91, 99, 101, 110, 202, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 259, 526, 530, 605, 652, 662], "dispers": 575, "displac": [164, 483], "disregard": 589, "distanc": [259, 610], "distinct": [245, 246, 348, 354, 589], "distinguish": 186, "distribut": [3, 4, 342, 369, 371, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 662], "divid": [7, 44, 176, 177, 244, 247, 267, 355, 585, 611, 637, 647], "divis": [112, 244, 247, 355, 510, 511, 585, 611, 637, 638], "divisor": [256, 295, 369, 371, 616, 644], "divmod": [7, 659], "dldevicetyp": 248, "dn": [527, 557, 559], "do": [3, 4, 193, 344, 350, 366, 532, 594, 628], "docstr": [91, 659], "document": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 172, 173, 175, 176, 177, 185, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659], "doe": [25, 28, 44, 75, 81, 104, 141, 203, 213, 215, 230, 245, 246, 248, 264, 276, 319, 359, 362, 363, 460, 508, 589, 611, 620], "domain": [11, 221, 226], "done": [3, 54, 122, 171, 203, 326, 441, 490, 639, 642], "dot": [7, 203, 204, 275, 300, 307, 309, 315, 318, 319, 321, 322, 324, 325, 326, 328, 345, 624, 645, 646], "doubl": [10, 324, 543, 624], "down": 241, "dp": [112, 303, 306, 320, 321, 510, 511, 617, 637], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 114, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 360, 361, 364, 367, 368, 441, 447, 490, 501, 502, 503, 514, 520, 522, 523, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "dpnp": [0, 2, 3, 4, 5, 11, 652, 659, 662, 663, 666], "dpnp_arrai": [28, 41, 45, 46, 47, 48, 50, 54, 87, 105, 106, 108, 205, 206, 214, 218, 232, 235, 249, 250, 251, 252, 253, 254, 255, 257, 271, 272, 274, 330, 331, 342, 344, 352, 372, 441, 447, 490, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651, 652], "dpnp_iface_arraycr": [352, 501], "draw": [524, 525, 526, 528, 529, 530, 531, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577], "drawn": [81, 524, 526, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 552, 553, 555, 556, 558, 561, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 600], "drill": [532, 549], "driver": 2, "drop": [3, 192], "dsplit": [7, 82, 83, 177, 611], "dst": 89, "dstack": [7, 80, 82, 83, 268, 597, 611, 615, 648], "dt": [171, 181, 183, 184, 188, 190, 191, 192, 194, 197, 198, 490, 628], "dt2": 192, "dtype": [0, 10, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 112, 114, 122, 129, 130, 145, 151, 160, 163, 165, 171, 172, 175, 203, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 274, 276, 277, 281, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 315, 318, 322, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 377, 441, 448, 449, 464, 470, 479, 482, 484, 490, 491, 494, 497, 498, 500, 502, 503, 509, 510, 511, 512, 513, 518, 519, 524, 526, 530, 552, 558, 574, 583, 584, 585, 587, 590, 591, 592, 596, 597, 598, 602, 603, 604, 605, 606, 609, 610, 612, 613, 615, 616, 617, 618, 620, 622, 623, 626, 629, 630, 634, 637, 638, 644, 646, 647, 648, 650, 651, 659], "due": [230, 666], "dump": 7, "dx": [259, 628], "dy": 259, "dz": 259, "e": [10, 11, 17, 30, 32, 52, 66, 97, 98, 100, 109, 183, 205, 206, 211, 214, 217, 221, 222, 223, 224, 227, 229, 230, 242, 250, 254, 255, 259, 271, 297, 305, 320, 325, 329, 332, 350, 366, 502, 503, 530, 582, 586, 589, 616, 619, 629, 641, 644, 650, 651], "ea": 204, "each": [0, 14, 15, 16, 17, 18, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 44, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 81, 84, 85, 88, 90, 92, 93, 98, 99, 100, 101, 106, 109, 111, 112, 157, 176, 182, 184, 197, 204, 207, 209, 210, 212, 217, 219, 221, 223, 224, 227, 228, 229, 231, 233, 240, 241, 242, 243, 244, 247, 251, 259, 260, 261, 263, 264, 265, 266, 267, 270, 273, 277, 282, 284, 285, 293, 297, 298, 299, 302, 305, 306, 307, 308, 310, 323, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 355, 357, 358, 359, 476, 496, 497, 499, 500, 505, 509, 510, 511, 513, 516, 532, 549, 580, 581, 583, 585, 586, 589, 591, 592, 593, 596, 598, 602, 603, 604, 606, 611, 612, 613, 615, 617, 621, 622, 623, 625, 628, 631, 632, 635, 636, 637, 638, 639, 640, 646, 647, 659], "easier": 620, "easiest": [4, 505], "easili": [0, 265], "edg": [79, 111, 263, 264, 265, 266, 505, 633], "edge_ord": 259, "edges_i": 264, "edges_x": 264, "ediff1d": [7, 110, 259], "effect": [204, 242, 245, 246, 348, 354, 510, 511, 642], "effici": [11, 216, 230, 250, 314, 318, 322], "efgh": 204, "eig": [7, 306, 307, 308], "eigenvalu": [305, 306, 307, 308, 662], "eigenvector": [305, 306, 307, 308], "eigh": [7, 305, 307, 308], "eight": 316, "eigval": [7, 305, 306, 308], "eigvalsh": [7, 305, 306, 307], "einstein": [113, 203, 204, 275, 324, 326, 345, 504, 624, 646], "einsum": [7, 113, 204, 275, 324, 326, 345, 504, 624, 646], "einsum_path": [7, 203], "either": [27, 42, 43, 50, 61, 96, 97, 109, 181, 192, 217, 219, 221, 223, 224, 227, 229, 231, 233, 234, 259, 270, 275, 304, 306, 308, 316, 319, 343, 360, 361, 364, 367, 368, 370, 580, 584, 589, 599, 600, 616, 621, 628, 644], "element": [4, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 47, 51, 52, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 84, 85, 88, 89, 92, 93, 97, 98, 99, 100, 101, 104, 107, 109, 110, 111, 112, 116, 117, 120, 126, 127, 129, 130, 134, 135, 138, 141, 142, 145, 147, 149, 150, 155, 156, 157, 158, 160, 161, 163, 164, 170, 175, 178, 180, 184, 190, 202, 204, 207, 209, 210, 212, 213, 214, 215, 217, 219, 223, 224, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 259, 260, 261, 262, 263, 265, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 302, 304, 307, 313, 324, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 351, 353, 354, 355, 356, 358, 359, 362, 363, 364, 367, 368, 369, 370, 371, 435, 436, 439, 445, 446, 448, 449, 453, 454, 457, 460, 461, 464, 466, 468, 469, 474, 475, 476, 477, 479, 480, 482, 483, 489, 494, 496, 497, 498, 499, 500, 508, 509, 510, 511, 512, 513, 515, 517, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 612, 613, 616, 617, 618, 620, 622, 623, 624, 625, 626, 628, 630, 632, 634, 636, 637, 638, 639, 640, 642, 644, 646, 649, 659, 662, 666], "element_count": [160, 479, 607], "elimin": 26, "ellipsi": 203, "els": [0, 181, 196, 320, 378], "elsewher": [214, 271, 629, 649], "empti": [4, 7, 41, 135, 206, 217, 219, 223, 224, 228, 229, 231, 233, 250, 254, 255, 310, 454, 502, 503, 505, 508, 611, 650, 651, 659], "empty_lik": [7, 41, 205, 255, 503, 651], "en": 91, "enabl": [171, 234, 314, 318, 322, 490], "enable_profil": [171, 490], "encount": [362, 363, 364, 367, 600], "end": [25, 28, 74, 104, 109, 200, 202, 204, 222, 257, 276, 330, 342, 505], "end_tim": 0, "end_valu": 505, "endian": [181, 196], "endpoint": [28, 257, 330, 342, 628], "engin": 566, "enlarg": 589, "enough": 263, "ensur": [264, 587], "entir": [61, 97, 221, 263, 265, 343, 349, 364, 365, 367, 369, 371, 505, 584, 616, 644], "entiti": 589, "entri": [44, 81, 104, 162, 176, 184, 205, 213, 221, 227, 229, 234, 239, 240, 241, 266, 267, 481, 611, 614, 646, 647], "enumer": 248, "env": 4, "environ": 4, "ep": [235, 314, 318, 498, 582, 610], "epsilon": [314, 582], "epsneg": 235, "equal": [7, 19, 20, 24, 26, 38, 42, 43, 44, 61, 63, 66, 69, 82, 83, 95, 99, 101, 120, 150, 161, 176, 214, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 278, 280, 281, 289, 291, 297, 298, 299, 304, 313, 318, 319, 326, 330, 342, 355, 439, 469, 480, 500, 505, 530, 540, 574, 585, 591, 592, 596, 597, 602, 605, 608, 611, 614, 615, 629, 631, 635, 641, 647, 648], "equal_nan": [20, 42, 278, 639], "equat": [310, 321, 325, 326, 662], "equiv": [54, 75, 82, 83, 89, 122, 203, 268, 313, 345, 441, 597, 615, 646, 648], "equival": [11, 18, 19, 21, 22, 24, 26, 27, 36, 37, 38, 40, 43, 61, 62, 81, 87, 96, 97, 102, 103, 104, 112, 113, 116, 117, 132, 148, 156, 159, 173, 176, 177, 204, 211, 213, 238, 245, 246, 247, 266, 267, 293, 323, 324, 325, 329, 343, 346, 355, 358, 380, 435, 436, 451, 467, 475, 478, 492, 495, 499, 504, 507, 509, 518, 519, 526, 558, 584, 585, 588, 595, 596, 601, 617, 618, 620, 624, 627, 637, 639, 641, 646, 647, 659, 666], "error": [62, 97, 176, 203, 208, 221, 226, 267, 305, 343, 580, 584, 611, 614, 647, 652, 659], "essenti": 4, "estim": [95, 265, 369, 371, 532, 549, 616, 628, 644], "et": 11, "etc": [11, 41, 46, 188, 217, 219, 223, 224, 228, 229, 231, 233, 549], "euclidean": 310, "euler_gamma": 10, "evalu": [19, 20, 24, 116, 117, 203, 204, 207, 270, 280, 283, 289, 324, 326, 351, 435, 436, 504, 600, 624], "even": [11, 143, 181, 218, 220, 221, 222, 225, 226, 227, 229, 230, 232, 280, 283, 289, 350, 366, 369, 462, 505, 592, 596], "evenli": [28, 257, 330, 342, 592, 628], "event": 337, "everi": [62, 74, 229, 516, 621], "everywher": [227, 605], "exact": [213, 315, 508], "exactli": [11, 53, 253, 321, 526, 558, 600], "examin": 310, "exampl": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 140, 141, 143, 148, 150, 154, 156, 159, 160, 161, 164, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 451, 452, 454, 457, 459, 460, 462, 467, 469, 473, 475, 478, 479, 480, 483, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659, 666], "exce": [337, 611], "except": [4, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 82, 83, 84, 85, 87, 88, 92, 93, 102, 103, 110, 111, 112, 113, 122, 141, 205, 206, 207, 209, 210, 212, 214, 215, 228, 229, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 267, 268, 269, 271, 277, 282, 284, 285, 292, 295, 296, 297, 298, 299, 315, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 347, 348, 349, 353, 354, 355, 358, 364, 365, 367, 368, 369, 370, 371, 441, 460, 497, 498, 500, 502, 503, 509, 510, 511, 512, 513, 518, 519, 579, 583, 585, 586, 587, 591, 592, 598, 602, 603, 604, 606, 608, 610, 611, 612, 613, 616, 617, 618, 622, 623, 637, 638, 644, 646, 650, 651, 662], "exclud": [14, 15, 25, 330, 530, 574], "exclus": [526, 558], "execut": [3, 4, 26, 45, 46, 47, 95, 171, 208, 251, 356, 368, 490, 533, 535, 536, 546, 551, 567, 666], "executor": 0, "exist": [11, 80, 82, 83, 177, 183, 211, 248, 268, 276, 597, 611, 615, 641, 648, 662], "exp": [7, 11, 210, 212, 216, 320, 334, 336, 343], "exp2": [7, 209, 212], "expand": [110, 211], "expand_dim": [7, 36, 37], "expect": [4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 30, 31, 32, 33, 34, 35, 40, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 84, 85, 88, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 112, 113, 192, 207, 209, 210, 212, 215, 227, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 269, 270, 273, 277, 278, 282, 284, 285, 295, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 348, 349, 350, 353, 354, 355, 358, 362, 363, 365, 366, 368, 369, 370, 371, 497, 498, 500, 509, 510, 511, 512, 513, 518, 519, 581, 583, 584, 585, 591, 592, 596, 598, 602, 603, 604, 605, 606, 610, 612, 613, 616, 617, 618, 622, 623, 637, 638, 644, 649], "explain": [219, 224, 229, 233, 659], "explan": 185, "explicit": [203, 248], "explicitli": [109, 217, 219, 223, 224, 228, 229, 231, 233, 266], "exploit": [11, 230], "explor": [204, 532, 549], "expm1": [7, 209, 210, 334], "expon": [11, 209, 210, 212, 242, 296, 313, 336, 337, 343, 510, 511, 556, 662], "exponenti": [7, 11, 204, 336, 337, 343, 543, 569], "expos": [249, 659], "express": [11, 16, 17, 26, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 203, 204, 296, 331, 616, 644, 666], "extend": [11, 188, 294, 505, 659], "extens": [0, 1, 3, 4, 10, 258, 331, 652], "extra": [200, 227, 253], "extract": [7, 81, 105, 108, 109, 203, 214, 238, 271, 274, 344, 508, 600, 620, 626], "extrapol": 589, "extrema": 662, "ey": [7, 74, 84, 85, 94, 133, 223, 224, 245, 246, 271, 275, 294, 309, 313, 314, 325, 326, 327, 341, 348, 354, 452, 601, 626], "f": [0, 7, 11, 14, 15, 16, 17, 18, 23, 26, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 128, 138, 191, 203, 205, 206, 207, 209, 210, 212, 214, 215, 218, 230, 232, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 259, 260, 261, 262, 269, 270, 273, 277, 282, 283, 284, 285, 295, 296, 297, 298, 299, 313, 316, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 354, 355, 358, 441, 447, 457, 497, 498, 500, 502, 503, 509, 510, 511, 513, 518, 519, 551, 579, 580, 581, 583, 585, 587, 588, 591, 592, 598, 602, 603, 604, 605, 606, 610, 612, 613, 617, 622, 623, 633, 637, 638, 640, 646, 649, 650, 651], "f0": 178, "f1": 178, "f2": 178, "f4": 75, "f8": [75, 178, 183, 188, 191], "f_contigu": [48, 50, 283, 587], "f_k": 11, "fab": [7, 14, 15], "fact": 307, "factor": [11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 300, 319], "fail": [159, 478, 532], "fall": [264, 266], "fallback": [305, 307, 533, 535, 536, 546, 551, 567], "fals": [19, 20, 21, 22, 23, 24, 36, 37, 38, 41, 42, 43, 46, 48, 50, 54, 61, 64, 65, 67, 70, 71, 73, 75, 81, 87, 90, 94, 95, 97, 99, 100, 101, 104, 111, 116, 117, 118, 119, 120, 122, 144, 145, 146, 151, 161, 163, 165, 175, 178, 203, 204, 206, 207, 213, 234, 248, 251, 255, 257, 260, 261, 263, 264, 266, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 298, 299, 300, 301, 312, 314, 316, 318, 322, 323, 329, 330, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 353, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 378, 435, 436, 437, 438, 439, 441, 463, 464, 465, 470, 480, 482, 484, 494, 499, 500, 503, 512, 514, 584, 587, 588, 600, 603, 608, 616, 618, 639, 643, 644, 649, 651], "famili": 11, "fanci": 620, "fashion": [337, 659], "fast": [11, 216, 217, 219, 223, 224, 229, 230, 233], "faster": [11, 26, 62, 245, 246], "fastest": [138, 283, 457, 579, 588], "fb": [204, 633], "featur": 192, "fetch": 588, "few": 234, "fft": [5, 7, 662], "fft2": [7, 216, 219, 223], "fftfreq": [7, 11, 216, 220, 225, 232], "fftn": [7, 216, 217, 224, 230, 233], "fftshift": [7, 11, 217, 219, 224, 225], "fh": 250, "field": [178, 186, 187, 188, 192, 194, 196, 200, 351, 616, 644], "field1": [188, 191], "file": [249, 250, 252, 253, 258, 331], "filenam": [250, 331], "fill": [7, 25, 41, 128, 205, 206, 234, 254, 255, 263, 265, 351, 359, 447, 502, 503, 589, 629, 650, 651], "fill_diagon": 7, "fill_valu": [254, 255], "filt": 633, "filter": [11, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 605, 629, 631, 635, 643, 650, 651], "final": [4, 11, 90, 229, 230, 231, 233, 257, 342], "find": [39, 63, 90, 111, 120, 158, 161, 215, 263, 314, 318, 322, 439, 477, 480, 498, 499, 586, 599, 608, 610, 639, 662], "fine": 4, "finfo": [318, 498, 582, 610], "finfo_object": 235, "finit": [47, 282, 284, 285, 286, 287, 359, 610], "first": [18, 19, 20, 24, 26, 27, 34, 36, 37, 38, 42, 43, 56, 61, 64, 66, 68, 69, 70, 74, 80, 82, 83, 88, 90, 91, 96, 97, 100, 101, 109, 112, 113, 138, 178, 184, 204, 207, 210, 217, 219, 221, 223, 224, 239, 242, 244, 245, 246, 247, 256, 259, 260, 261, 263, 264, 265, 267, 269, 270, 275, 276, 278, 281, 283, 291, 294, 295, 297, 298, 299, 302, 304, 311, 315, 324, 325, 327, 328, 331, 336, 337, 338, 340, 341, 344, 345, 347, 348, 350, 351, 353, 354, 355, 358, 360, 361, 366, 457, 496, 500, 504, 505, 508, 510, 511, 512, 579, 585, 588, 591, 593, 595, 597, 599, 600, 608, 609, 613, 617, 618, 619, 621, 624, 626, 633, 637, 639, 641, 645, 646, 647, 648], "fit": [310, 586], "fix": [7, 40, 77, 109, 178, 190, 200, 243, 515, 592, 596, 638], "flag": [48, 50, 128, 178, 187, 283, 447, 587], "flanneri": 11, "flat": [36, 37, 138, 141, 202, 237, 457, 460, 496, 579, 580, 586, 640], "flatit": 496, "flatnonzero": [7, 499], "flatten": [7, 25, 36, 37, 38, 81, 82, 83, 94, 98, 99, 104, 105, 108, 109, 120, 137, 153, 161, 202, 234, 238, 263, 265, 276, 329, 347, 350, 353, 360, 361, 362, 363, 366, 368, 370, 439, 456, 472, 480, 499, 504, 516, 579, 580, 586, 593, 608, 620, 621, 626, 639, 640, 645], "flexibl": [113, 178, 190, 193, 250, 315], "flip": [7, 65, 67, 109, 234, 240, 241, 277, 304, 532, 595], "fliplr": [7, 109, 234, 239, 241, 304, 595], "flipud": [7, 109, 234, 239, 240, 304, 595], "float": [13, 14, 15, 23, 28, 34, 45, 46, 49, 56, 61, 75, 88, 97, 179, 182, 183, 188, 191, 192, 193, 195, 197, 205, 206, 210, 214, 215, 218, 232, 235, 236, 242, 249, 250, 251, 252, 253, 254, 255, 259, 263, 265, 270, 271, 273, 281, 296, 310, 313, 314, 316, 318, 329, 330, 331, 336, 337, 342, 343, 347, 349, 350, 353, 359, 365, 366, 369, 371, 498, 502, 503, 510, 511, 527, 528, 529, 530, 534, 557, 559, 560, 562, 563, 565, 568, 569, 571, 574, 581, 582, 583, 584, 598, 605, 616, 629, 642, 644, 650, 651, 659, 662], "float16": [10, 242], "float32": [0, 10, 47, 49, 54, 63, 75, 90, 91, 98, 99, 100, 101, 122, 180, 200, 203, 242, 264, 281, 441, 498, 524, 525, 527, 528, 529, 530, 552, 557, 559, 560, 562, 563, 565, 571, 574, 587, 590], "float64": [0, 10, 13, 49, 54, 61, 75, 122, 183, 184, 185, 190, 193, 194, 203, 281, 441, 524, 525, 527, 528, 529, 530, 531, 537, 538, 539, 541, 543, 544, 545, 552, 553, 556, 557, 559, 560, 562, 563, 564, 565, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 590, 605, 610, 647], "float_pow": [7, 510, 511], "floor": [7, 40, 77, 236, 244, 355, 585, 592, 596, 638], "floor_divid": [7, 355, 585], "flop": 204, "flush": 250, "fmax": [7, 246, 347, 348, 354, 364, 510, 511], "fmin": [7, 245, 348, 353, 354, 367, 510, 511], "fmod": [7, 355, 510, 511, 585], "fn": 251, "fname": 331, "follow": [4, 11, 13, 26, 61, 171, 185, 211, 227, 235, 248, 264, 272, 306, 308, 316, 318, 324, 490, 505, 587, 624, 659, 662], "forc": [196, 203], "forg": 4, "form": [11, 25, 41, 45, 46, 47, 48, 49, 50, 62, 80, 87, 105, 108, 173, 177, 203, 204, 223, 224, 227, 254, 255, 257, 280, 289, 293, 304, 312, 323, 327, 330, 342, 346, 492, 505, 589, 597, 643, 648], "format": [178, 183, 248, 250, 253, 662], "format_float_posit": 7, "format_float_scientif": 7, "former": [16, 29, 31, 32, 33, 35, 51, 52, 55, 57, 516, 621], "forth": [324, 624], "fortran": [50, 54, 122, 138, 283, 441, 457, 579, 580, 587, 588, 640], "forward": [11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 259], "found": [4, 599, 659], "four": [527, 559], "fourier": [216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 652, 662], "fourth": 217, "frac": [11, 616, 628, 644], "fraction": [356, 638], "free": [156, 475], "freedom": [369, 371, 572, 616, 644], "freq": [218, 220, 225, 232], "freq_spectrum": 221, "frequenc": [11, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232], "freshli": [286, 287, 646], "frexp": [7, 296], "fro": [301, 312, 316, 329], "frobeniu": [301, 316], "from": [3, 11, 16, 17, 19, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 71, 75, 78, 81, 82, 83, 87, 89, 97, 102, 103, 105, 106, 108, 109, 123, 128, 162, 170, 171, 177, 178, 196, 197, 203, 205, 206, 210, 213, 214, 218, 222, 231, 232, 233, 239, 242, 248, 249, 250, 251, 252, 253, 254, 255, 259, 263, 268, 271, 274, 276, 292, 293, 296, 305, 307, 308, 314, 315, 327, 331, 343, 344, 351, 352, 369, 371, 442, 447, 481, 489, 490, 501, 502, 503, 505, 508, 512, 516, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 584, 588, 589, 590, 595, 597, 599, 600, 613, 614, 615, 616, 618, 620, 621, 626, 629, 631, 633, 635, 636, 639, 641, 642, 643, 644, 648, 649, 650, 651, 662], "from_": 75, "from_dlpack": 7, "frombuff": [7, 250, 252, 253, 331], "fromfil": [7, 249, 252, 253], "fromfunct": [7, 45, 46, 47], "fromit": [7, 45, 46, 47, 249, 250, 253], "frompyfunc": 7, "fromregex": [7, 331], "fromstr": [7, 249, 250, 252, 331], "front": [62, 633], "full": [7, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 185, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "full_lik": [7, 41, 206, 254, 503, 651], "full_matric": 322, "fulli": [184, 350, 366], "func": 27, "func1d": 26, "function": [0, 2, 3, 5, 11, 13, 14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 81, 87, 91, 95, 97, 100, 101, 102, 103, 109, 112, 116, 117, 128, 132, 141, 156, 159, 173, 203, 205, 206, 208, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 233, 234, 242, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 270, 271, 283, 293, 302, 304, 305, 307, 311, 312, 315, 316, 317, 323, 324, 327, 328, 329, 331, 334, 336, 337, 343, 344, 346, 351, 355, 356, 368, 369, 371, 435, 436, 447, 451, 460, 475, 478, 492, 502, 503, 505, 510, 511, 516, 518, 519, 530, 533, 535, 536, 546, 551, 567, 579, 584, 585, 587, 589, 596, 597, 602, 605, 616, 620, 621, 624, 625, 631, 632, 635, 636, 637, 641, 644, 648, 649, 650, 651, 652, 659, 662], "fundament": [11, 178], "further": [104, 631, 635], "futur": [192, 265], "fweight": 95, "g": [4, 11, 183, 205, 206, 214, 254, 255, 271, 316, 502, 503, 530, 616, 629, 644, 650, 651, 666], "g4a2afb81a87": 7, "gamma": [7, 570], "gauss": 11, "gaussian": [524, 552, 576], "gc": 204, "gcd": [7, 295], "gen": 203, "gender": 178, "gener": [4, 11, 38, 61, 62, 90, 91, 191, 222, 227, 230, 233, 257, 275, 305, 306, 307, 308, 312, 318, 319, 329, 331, 342, 520, 521, 522, 523, 530, 532, 535, 566, 579, 610, 628, 631, 635, 643, 659, 662], "genfromtxt": [7, 331], "geometr": [7, 257, 330], "geomspac": [7, 330, 342], "get": [28, 41, 45, 46, 47, 48, 49, 50, 87, 91, 105, 106, 107, 108, 128, 139, 159, 205, 206, 214, 218, 221, 227, 229, 232, 242, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 323, 328, 330, 331, 342, 344, 352, 447, 458, 478, 501, 502, 503, 505, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 621, 629, 631, 632, 635, 636, 643, 646, 650, 651, 659], "get_bit_gener": 7, "get_dtyp": 0, "get_includ": 7, "get_printopt": 7, "get_stat": 7, "getbufs": 7, "geterr": 7, "geterrcal": 7, "getfield": [7, 184], "getter": [159, 478], "gid": 265, "give": [11, 108, 173, 242, 265, 266, 492, 588, 601, 607, 639], "given": [19, 20, 24, 25, 26, 27, 28, 36, 37, 40, 41, 42, 45, 46, 48, 50, 54, 61, 62, 80, 81, 87, 94, 95, 98, 99, 100, 101, 110, 113, 118, 119, 122, 125, 129, 130, 146, 151, 152, 157, 160, 163, 165, 175, 177, 181, 196, 202, 204, 205, 206, 213, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 245, 246, 254, 255, 257, 259, 263, 265, 266, 276, 278, 309, 316, 324, 328, 330, 342, 344, 347, 348, 350, 351, 353, 354, 362, 363, 364, 366, 367, 368, 369, 370, 371, 437, 438, 441, 444, 448, 449, 465, 470, 471, 476, 479, 482, 484, 494, 496, 499, 502, 503, 508, 512, 514, 515, 525, 530, 535, 557, 574, 584, 586, 587, 588, 592, 593, 594, 595, 597, 599, 600, 607, 611, 616, 618, 620, 624, 625, 628, 629, 639, 641, 644, 646, 648, 650, 651, 659], "global": 0, "golub": 316, "good": 542, "gpu": [0, 3, 4, 28, 41, 45, 46, 47, 48, 50, 87, 105, 108, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 271, 330, 331, 342, 352, 501, 502, 503, 629, 643, 650, 651], "grade": [183, 184, 190, 194], "gradient": [7, 110, 202, 310], "graphic": 4, "great": 11, "greater": [7, 66, 69, 150, 176, 207, 244, 261, 297, 298, 299, 314, 319, 469, 500, 505, 591, 600, 602, 614, 642], "greater_equ": [7, 207, 260, 298, 299, 500], "greatest": [244, 256, 295], "greedi": [203, 204], "grid": [45, 46, 47, 251, 274, 317, 351, 352, 501, 504], "group": [39, 499], "guarante": [192, 587, 588], "guid": [2, 3], "gumbel": 7, "gz": 331, "h": [258, 264, 266, 300, 316, 319, 351], "ha": [4, 11, 14, 15, 16, 17, 19, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 51, 52, 55, 57, 61, 68, 90, 97, 98, 99, 100, 101, 111, 192, 200, 207, 211, 221, 226, 227, 248, 251, 259, 260, 261, 268, 270, 273, 279, 280, 288, 289, 292, 298, 299, 307, 320, 322, 327, 343, 349, 350, 355, 362, 363, 365, 366, 368, 369, 370, 371, 500, 505, 512, 581, 582, 583, 584, 585, 586, 594, 598, 600, 614, 615, 616, 618, 619, 620, 625, 626, 640, 644, 659], "had": [516, 621], "hadamard": 204, "half": [17, 30, 217, 219, 220, 221, 223, 224, 330, 526, 528, 530, 557, 560, 562, 563, 565, 574, 619], "ham": 7, "han": 7, "hand": [96, 302, 326], "handl": [28, 186, 188, 215, 331, 499, 516, 580, 620, 621, 662], "happen": [54, 61, 122, 441, 532, 628], "hardwar": 4, "has_aspect_fp64": 0, "have": [3, 4, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 51, 52, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 73, 76, 77, 80, 82, 83, 84, 85, 88, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 112, 113, 177, 181, 192, 193, 207, 209, 210, 212, 215, 223, 224, 233, 235, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 268, 269, 270, 273, 277, 278, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 304, 310, 312, 315, 317, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 348, 349, 350, 354, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 497, 498, 500, 508, 509, 510, 511, 512, 513, 518, 519, 549, 581, 583, 584, 585, 586, 587, 588, 591, 592, 596, 597, 598, 602, 603, 604, 605, 606, 610, 612, 613, 615, 616, 617, 618, 622, 623, 625, 637, 638, 642, 644, 646, 648, 659], "hd": 204, "header": 258, "heapsort": [38, 608], "heavisid": 7, "hello": 178, "help": 666, "helper": 662, "henc": [211, 259], "here": [7, 178, 203, 221, 226, 227, 631, 635], "hermit": [306, 308], "hermitian": [221, 226, 227, 229, 230, 300, 305, 306, 307, 308, 314, 318, 322, 323, 662], "hfft": [7, 11, 226], "hierarchi": [281, 291], "high": [74, 227, 526, 530, 558, 561, 574], "higher": [26, 143, 203, 267, 276, 462, 645, 647], "highest": [216, 633], "highli": 250, "hist": [263, 264, 568], "hist_0": 265, "hist_1": 265, "histogram": [7, 63, 111, 264, 265, 266, 599, 662], "histogram2d": [7, 266], "histogram_bin_edg": [7, 263], "histogramdd": [7, 263, 264], "hold": [79, 98, 99, 100, 101, 263, 316, 350, 362, 363, 366, 368, 370, 579, 626], "homogen": 178, "hopkin": 316, "horizont": [80, 82, 83, 109, 177, 234, 239, 264, 267, 268, 304, 595, 597, 611, 615, 648], "host": [3, 4, 28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 171, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 447, 490, 501, 502, 503, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 629, 631, 635, 643, 650, 651], "household": 319, "how": [0, 4, 185, 188, 227, 230, 259, 515, 516, 580, 620, 621, 631, 635], "howev": [161, 369, 371, 480, 620], "hsplit": [7, 82, 83, 611], "hstack": [7, 80, 82, 83, 177, 597, 611, 615, 648], "http": [4, 91], "hyperbol": [16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 604, 606, 622, 623, 662], "hypergeometr": 7, "hypot": [7, 584], "hypotenus": [269, 584], "hypothet": 371, "i": [0, 3, 4, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 128, 141, 143, 150, 156, 159, 161, 164, 171, 173, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 380, 439, 441, 447, 460, 462, 469, 475, 478, 480, 483, 490, 492, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659, 666], "i0": 7, "i1": [164, 178, 181, 483], "i2": [164, 178, 180, 181, 188, 196, 200, 483], "i3": [164, 483], "i4": [75, 178, 179, 191, 195, 198], "i7": 203, "i8": [75, 178], "i_0": 270, "iaxi": 505, "iaxis_pad_width": 505, "icpx": 4, "icx": 4, "id": [19, 24], "ideal": 605, "ident": [3, 7, 19, 24, 26, 47, 97, 192, 214, 225, 234, 321, 328, 569, 646], "identifi": 191, "idx": 276, "ieee": 235, "ifft": [7, 216, 223, 224, 226, 227, 232], "ifft2": [7, 217, 222, 224], "ifftn": [7, 219, 222, 223], "ifftshift": [7, 11, 220, 224], "ignor": [36, 37, 96, 196, 245, 246, 253, 263, 265, 347, 348, 349, 353, 354, 360, 361, 364, 365, 366, 367, 369, 371, 616, 644], "ihfft": [7, 221], "ii": [26, 203, 553], "iinfo": 547, "iinfo_object": 272, "ij": [203, 204, 351], "ijk": 203, "il": 204, "il1": 631, "il2": 631, "illustr": 307, "ilm": 203, "im": [317, 504], "imag": [7, 11, 23, 42, 581, 582, 589, 659], "imaginari": [23, 42, 140, 227, 245, 246, 273, 279, 280, 288, 289, 305, 306, 308, 313, 348, 354, 359, 459, 581, 582, 609, 639], "implement": [3, 4, 5, 7, 49, 216, 248], "impli": [200, 248, 579], "implicit": 203, "import": [0, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 140, 141, 143, 148, 150, 154, 159, 160, 161, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 451, 452, 454, 457, 459, 460, 462, 467, 469, 473, 478, 479, 480, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 555, 557, 564, 568, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "improv": 203, "in1d": 7, "in_array1": 208, "includ": [4, 11, 19, 24, 25, 28, 41, 45, 46, 47, 48, 49, 50, 61, 87, 97, 100, 101, 105, 108, 111, 203, 204, 215, 254, 255, 257, 258, 263, 265, 280, 289, 318, 330, 342, 343, 349, 350, 364, 365, 366, 367, 369, 371, 530, 574, 584, 605, 616, 643, 644], "include_initi": [97, 100, 101], "inclus": [526, 558, 561, 600], "increas": [111, 194, 211, 222, 227, 263, 266, 505, 589, 643], "ind": [38, 111, 325, 515, 516, 631, 632, 635, 636], "independ": 302, "index": [4, 13, 25, 36, 37, 38, 39, 78, 81, 123, 138, 141, 164, 184, 204, 214, 217, 223, 231, 238, 248, 274, 276, 283, 293, 351, 360, 361, 442, 457, 460, 483, 496, 499, 515, 516, 579, 580, 588, 589, 599, 600, 611, 620, 621, 631, 633, 635, 639, 640, 649, 652, 662], "index_arrai": [36, 37, 38], "indic": [7, 11, 26, 36, 37, 38, 39, 44, 63, 97, 100, 101, 104, 106, 107, 111, 118, 119, 120, 149, 152, 158, 161, 170, 176, 181, 186, 187, 188, 189, 203, 204, 213, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 238, 248, 251, 263, 267, 276, 281, 325, 326, 344, 345, 352, 360, 361, 437, 438, 439, 468, 471, 477, 480, 489, 496, 499, 507, 515, 516, 580, 599, 602, 603, 608, 611, 620, 621, 627, 631, 632, 635, 636, 639, 640, 646, 647, 649], "indices_or_sect": [44, 176, 267, 611, 647], "indirect": [38, 120, 161, 439, 480, 608], "individu": [496, 540], "inequ": 500, "inexact": [242, 359, 368, 370], "inf": [10, 16, 17, 20, 29, 30, 31, 34, 35, 45, 46, 47, 51, 56, 57, 88, 112, 278, 282, 284, 285, 286, 287, 301, 312, 316, 329, 332, 333, 335, 348, 354, 359, 360, 361, 364, 367, 370, 513, 610, 612, 637], "infer": [47, 97, 343, 584, 588], "infin": [16, 17, 19, 24, 29, 30, 31, 32, 33, 35, 47, 51, 52, 55, 57, 244, 282, 284, 285, 286, 287, 355, 359, 364, 367, 370, 585, 638], "infinit": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 301, 316, 369, 371, 605], "infj": [32, 33, 52, 55], "info": [7, 13], "inform": [0, 48, 50, 136, 179, 221, 227, 229, 235, 455, 587, 659, 662], "initi": [21, 22, 97, 100, 101, 144, 146, 151, 165, 205, 253, 347, 353, 364, 367, 368, 370, 463, 465, 470, 484, 512, 520, 618], "inner": [7, 26, 96, 203, 204, 311, 315, 345, 504], "innermost": [304, 312, 327, 346], "input": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 77, 79, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 122, 138, 148, 176, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 311, 312, 314, 316, 317, 319, 320, 322, 323, 324, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 441, 457, 467, 495, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 524, 526, 530, 552, 558, 574, 579, 581, 582, 583, 584, 585, 586, 587, 591, 592, 593, 594, 596, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 645, 646, 647, 650, 651], "insert": [7, 25, 26, 27, 36, 37, 104, 109, 111, 158, 203, 211, 257, 263, 330, 342, 360, 361, 364, 367, 477, 516, 588, 599, 600, 662], "inspect": [13, 652], "instal": 2, "instanc": [3, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 121, 122, 128, 171, 205, 206, 214, 218, 221, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 271, 274, 321, 330, 331, 342, 344, 345, 352, 440, 441, 447, 490, 496, 501, 502, 503, 520, 522, 523, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 646, 650, 651], "instead": [39, 54, 109, 113, 122, 203, 211, 243, 257, 263, 265, 274, 283, 315, 330, 337, 342, 347, 353, 369, 371, 441, 499, 512, 580, 589, 618, 659], "instruct": 4, "insuffici": 62, "int": [10, 19, 24, 25, 26, 27, 28, 36, 37, 38, 40, 41, 44, 49, 61, 62, 63, 72, 73, 81, 82, 83, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 120, 122, 141, 148, 160, 161, 173, 176, 178, 184, 188, 205, 206, 207, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 265, 266, 267, 271, 272, 274, 276, 302, 304, 310, 313, 316, 324, 325, 326, 327, 328, 329, 330, 342, 343, 344, 347, 349, 350, 353, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 460, 467, 479, 480, 492, 495, 496, 502, 503, 505, 506, 507, 512, 515, 516, 520, 526, 557, 558, 561, 580, 584, 586, 588, 589, 593, 594, 595, 596, 607, 608, 611, 614, 615, 616, 618, 619, 620, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 646, 647, 650, 651, 659], "int16": [178, 180], "int32": [0, 10, 49, 75, 178, 185, 193, 205, 206, 214, 249, 252, 254, 255, 271, 331, 368, 370, 502, 503, 526, 530, 532, 540, 542, 547, 549, 555, 558, 574, 590, 618, 629, 650, 651], "int64": [0, 10, 13, 75, 171, 178, 190, 368, 370, 490, 590], "int8": [178, 512], "int_": 10, "int_0": 628, "int_t": 628, "intc": 10, "integ": [28, 40, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 77, 97, 98, 99, 100, 101, 111, 161, 173, 176, 188, 191, 236, 239, 242, 243, 244, 248, 256, 263, 267, 270, 272, 277, 281, 293, 295, 296, 297, 313, 316, 324, 325, 327, 329, 343, 347, 349, 353, 355, 362, 363, 364, 365, 367, 368, 369, 370, 371, 480, 492, 510, 511, 512, 515, 520, 526, 530, 558, 561, 566, 580, 584, 585, 586, 588, 591, 592, 593, 595, 596, 599, 600, 601, 611, 613, 616, 618, 620, 624, 626, 638, 639, 640, 642, 644, 647, 659], "integer_lik": [324, 624], "integr": [3, 4, 13, 61, 97, 99, 101, 242, 263, 281, 343, 349, 350, 356, 365, 366, 369, 371, 510, 511, 584, 616, 618, 628, 644], "intel": [3, 203], "intend": [173, 492], "intent": 242, "interchang": [166, 357, 485, 619], "interfac": [0, 249], "interior": 259, "intermedi": [98, 100, 203, 204], "intern": [38, 120, 161, 439, 480, 521, 608], "interp": 7, "interpol": [227, 589, 605], "interpret": [2, 45, 46, 47, 53, 73, 87, 141, 185, 221, 227, 229, 249, 293, 344, 460, 499, 515, 659], "intersect1d": 7, "interv": [11, 16, 17, 28, 29, 30, 31, 33, 51, 55, 111, 211, 257, 330, 342, 526, 528, 530, 557, 558, 560, 562, 563, 565, 573, 574, 619], "intp": [368, 370], "intrins": 659, "introduc": [593, 616, 644], "introduct": 11, "introselect": [150, 469, 506], "inv": [7, 301, 318], "invers": [11, 16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 296, 309, 318, 325, 326, 334, 576, 604, 606, 622, 623, 639], "invert": [7, 65, 67, 309, 318, 325], "invok": 659, "involv": 325, "io": 331, "irfft": [7, 218, 221, 226, 228, 229, 230, 232], "irfft2": [7, 227, 229, 231], "irfftn": [7, 227, 228, 233], "irrespect": 38, "is_busdai": 7, "isalignedstruct": 178, "isclos": [7, 20], "iscomplex": [7, 280, 288], "iscomplexobj": [7, 279, 289], "isdtyp": 7, "isfinit": [7, 284, 285, 286, 287, 359, 364, 367, 370], "isfortran": 7, "isin": 7, "isinf": [7, 282, 285, 286, 287, 359], "isinst": 292, "isnan": [7, 282, 284, 286, 287, 359, 362, 363, 364, 367, 368, 370], "isnat": 7, "isneginf": [7, 282, 284, 285, 287, 359], "isposinf": [7, 282, 284, 285, 286, 359], "isreal": [7, 279, 289], "isrealobj": [7, 280, 288], "isscalar": 7, "issu": 223, "issubdtyp": [7, 281], "item": [7, 39, 249, 250, 252, 639, 652], "item_dtyp": 200, "item_hasobject": 185, "item_is_point": 185, "items": 74, "iter": [7, 45, 46, 47, 137, 138, 204, 237, 249, 250, 252, 253, 456, 457, 496, 516, 579, 589, 621, 641, 662], "its": [4, 7, 11, 14, 15, 19, 24, 27, 38, 61, 105, 173, 221, 227, 229, 235, 263, 265, 271, 305, 306, 307, 308, 315, 318, 326, 349, 365, 369, 371, 492, 507, 567, 579, 584, 588, 608, 616, 627, 628, 629, 644, 659], "itself": [54, 122, 178, 181, 296, 359, 441, 659], "iu": 344, "iu1": [344, 635], "iu2": 635, "ix_": 7, "ixgrid": 293, "j": [41, 84, 85, 91, 173, 203, 217, 219, 221, 222, 223, 224, 226, 227, 230, 231, 233, 242, 251, 273, 274, 294, 300, 305, 306, 316, 317, 324, 327, 335, 345, 359, 492, 504, 513, 516, 581, 609, 613, 621, 624], "j1": 294, "jame": 11, "ji": 203, "jil": 203, "jj": 26, "jk": [203, 204], "jl": 204, "john": [11, 316], "join": [80, 82, 83, 177, 268, 276, 597, 611, 615, 641, 648, 662], "jump": [102, 518], "just": [74, 80, 109, 178, 217, 223, 228, 230, 231, 276], "k": [11, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 91, 92, 93, 102, 103, 105, 108, 112, 122, 128, 203, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 255, 256, 260, 261, 262, 269, 270, 273, 277, 282, 284, 285, 294, 295, 296, 297, 298, 299, 310, 319, 321, 322, 323, 324, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 348, 354, 355, 358, 380, 441, 447, 497, 498, 500, 503, 509, 510, 511, 513, 518, 519, 579, 581, 583, 585, 591, 592, 595, 598, 602, 603, 604, 605, 606, 610, 612, 613, 617, 622, 623, 624, 629, 630, 631, 632, 634, 635, 636, 637, 638, 642, 646, 649, 651, 666], "kaiser": 7, "kappa": 575, "kdlcpu": 248, "kdloneapi": 248, "keep": [53, 54, 122, 441, 639], "keepdim": [19, 21, 22, 24, 27, 36, 37, 61, 94, 116, 117, 118, 119, 144, 145, 146, 151, 163, 165, 175, 312, 316, 329, 343, 347, 349, 350, 353, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 437, 438, 463, 464, 465, 470, 482, 484, 494, 512, 514, 516, 584, 616, 618, 621, 644], "kei": [3, 38, 120, 161, 183, 184, 192, 385, 430, 439, 480, 608], "kernel": 605, "key2": 192, "keyword": [11, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 87, 88, 92, 93, 96, 102, 103, 105, 106, 108, 112, 128, 205, 206, 209, 210, 212, 214, 215, 218, 232, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 269, 271, 274, 277, 295, 296, 297, 302, 304, 311, 317, 327, 328, 331, 333, 334, 335, 336, 337, 344, 345, 348, 352, 354, 355, 356, 358, 359, 369, 371, 447, 497, 498, 501, 502, 503, 505, 509, 510, 511, 513, 518, 519, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 583, 585, 588, 591, 592, 598, 602, 603, 604, 606, 610, 616, 617, 622, 623, 629, 631, 635, 637, 638, 643, 644, 646, 649, 650, 651, 659], "ki": 203, "kind": [38, 54, 75, 82, 83, 89, 97, 120, 122, 150, 161, 203, 235, 268, 270, 281, 315, 343, 345, 439, 441, 469, 480, 506, 584, 588, 597, 608, 615, 646, 648, 662], "kk": 26, "kl": [11, 203, 204], "known": [11, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 250, 568], "kron": 7, "kroneck": 294, "kth": [150, 469, 506], "kwarg": [14, 15, 16, 17, 18, 26, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 88, 92, 93, 102, 103, 112, 124, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 251, 256, 260, 261, 262, 269, 277, 282, 284, 285, 295, 296, 297, 298, 299, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 354, 355, 356, 358, 411, 443, 497, 498, 500, 505, 509, 510, 511, 513, 518, 519, 583, 585, 591, 592, 598, 602, 603, 604, 606, 610, 612, 613, 617, 622, 623, 637, 638], "l": [11, 44, 196, 300, 306, 308, 327], "la": [305, 307, 308], "label": 203, "laid": 50, "lam": 555, "lambda": 251, "lanczo": 605, "lapack": [305, 307], "laplac": 7, "laptop": 4, "larg": [11, 102, 185, 263, 318, 359, 518, 642, 666], "larger": [203, 216, 217, 219, 222, 223, 224, 226, 228, 229, 230, 231, 233, 235, 589, 616, 626, 642, 644], "largest": [11, 204, 230, 235, 243, 272, 310, 316, 355, 359, 585], "largest_singular_valu": 318, "last": [19, 24, 25, 26, 38, 63, 74, 96, 109, 110, 120, 138, 143, 161, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 239, 257, 259, 275, 283, 304, 315, 323, 324, 327, 330, 342, 345, 439, 457, 462, 480, 496, 505, 512, 579, 588, 593, 599, 608, 614, 618, 624, 641, 642, 646], "later": [505, 666], "latest": 4, "latter": [16, 29, 31, 32, 33, 35, 51, 52, 55, 57, 245, 246, 348, 354, 516, 621], "layout": [4, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 128, 136, 203, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 260, 261, 262, 269, 270, 273, 277, 282, 284, 285, 295, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 354, 355, 358, 447, 455, 497, 498, 500, 502, 503, 509, 510, 511, 513, 518, 519, 579, 581, 583, 585, 587, 588, 591, 592, 598, 602, 603, 604, 605, 606, 610, 612, 613, 617, 622, 623, 637, 638, 646, 649, 650, 651, 652], "lcm": [7, 256], "ldexp": 7, "ldot": 11, "lead": [222, 223, 224, 362, 363], "learn": [3, 4, 337], "least": [58, 59, 60, 61, 62, 107, 177, 197, 204, 211, 234, 240, 245, 246, 250, 280, 310, 319, 348, 354, 597, 648], "left": [11, 33, 36, 37, 40, 55, 66, 69, 94, 109, 111, 158, 240, 241, 297, 307, 312, 316, 329, 347, 353, 360, 361, 368, 370, 477, 512, 573, 591, 596, 599, 618, 628, 643], "left_shift": [7, 66, 69, 591], "leftmost": 264, "leg": [269, 584], "legaci": 566, "legal": 276, "len": [104, 219, 220, 221, 224, 226, 227, 228, 229, 233, 274, 310, 347, 351, 352, 353, 369, 371, 403, 601, 616, 643, 644], "length": [28, 44, 61, 62, 63, 81, 98, 99, 100, 101, 110, 207, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 253, 257, 259, 263, 266, 268, 305, 322, 323, 324, 342, 347, 350, 351, 353, 362, 363, 366, 505, 516, 533, 588, 590, 597, 599, 600, 601, 614, 621, 624, 625, 648], "less": [7, 27, 81, 98, 99, 100, 101, 143, 207, 260, 261, 263, 265, 299, 310, 318, 327, 362, 363, 368, 370, 462, 500, 512, 600, 602, 616, 618, 626], "less_equ": [7, 207, 260, 261, 298, 500], "let": [328, 532, 588, 646], "level": [652, 659], "level_zero": [28, 41, 45, 46, 47, 48, 50, 87, 105, 108, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 271, 330, 331, 342, 352, 501, 502, 503, 629, 643, 650, 651], "lexicograph": 639, "lexsort": [7, 38, 120, 161, 439, 480, 608], "li": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 593, 594], "lib": 74, "librari": [3, 4, 616, 644, 659], "light": 11, "like": [28, 41, 45, 46, 48, 50, 54, 58, 59, 60, 80, 104, 122, 138, 148, 177, 203, 205, 214, 229, 249, 250, 251, 252, 253, 254, 257, 271, 276, 330, 331, 342, 344, 441, 457, 467, 495, 502, 516, 530, 574, 579, 587, 588, 621, 650, 662], "likelihood": [369, 371], "likewis": [64, 68, 70], "limit": [3, 4, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 84, 85, 87, 88, 92, 93, 95, 102, 103, 112, 122, 124, 184, 205, 206, 207, 208, 209, 210, 212, 214, 215, 235, 236, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 269, 271, 272, 277, 282, 284, 285, 295, 296, 297, 298, 299, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 347, 348, 349, 353, 354, 355, 356, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 441, 443, 497, 498, 500, 502, 503, 506, 509, 510, 511, 512, 513, 514, 517, 518, 519, 524, 526, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 552, 553, 555, 556, 558, 561, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 583, 585, 587, 591, 592, 598, 602, 603, 604, 605, 606, 608, 610, 612, 613, 616, 617, 618, 622, 623, 637, 638, 644, 646, 650, 651], "linalg": [5, 7, 96, 109, 113, 203, 204, 345, 346, 504, 613, 624, 626, 645, 646], "line": [310, 331], "linear": [11, 86, 91, 310, 321, 342, 505, 652, 662], "linear_ramp": 505, "linspac": [0, 7, 28, 208, 257, 317, 342, 351, 504, 605, 628, 642], "linux": 4, "list": [3, 7, 10, 25, 41, 44, 45, 46, 47, 48, 50, 58, 59, 60, 71, 82, 83, 87, 105, 108, 173, 176, 177, 194, 203, 204, 220, 225, 234, 254, 255, 257, 259, 266, 267, 268, 280, 289, 324, 330, 331, 342, 345, 350, 366, 492, 507, 580, 586, 587, 589, 590, 597, 600, 611, 615, 624, 627, 640, 641, 643, 646, 647, 648, 649], "list_pickl": 185, "littl": [181, 196], "ln": 342, "load": [7, 250, 331], "loadtxt": [7, 250], "loan": 316, "loc": [524, 541, 543, 544, 552, 576], "local": 4, "locat": [0, 4, 258, 286, 287, 344, 504, 541, 543, 599, 646], "log": [7, 212, 257, 320, 330, 333, 334, 335, 336, 342, 343, 545], "log10": [7, 332, 334, 335], "log1p": [7, 210, 212, 332, 333, 335], "log2": [7, 332, 333, 334, 337], "log_bas": 342, "logabsdet": 320, "logaddexp": [7, 97, 337, 343], "logaddexp2": [7, 336, 343], "logarithm": [97, 303, 320, 330, 332, 333, 334, 335, 336, 337, 343, 546, 662], "logic": [19, 24, 338, 339, 340, 341, 652, 662], "logical_and": [7, 64, 339, 340, 341], "logical_not": [7, 65, 67, 277, 338, 340, 341], "logical_or": [7, 68, 338, 339, 341], "logical_xor": [7, 70, 338, 339, 340], "logist": 7, "lognorm": 7, "logseri": 7, "logspac": [7, 257, 330], "logsumexp": [97, 336, 337], "lomax": 553, "long": [192, 313], "longer": [221, 227, 666], "look": [498, 621], "loop": [26, 203], "loos": 202, "lorentz": 568, "lose": [221, 227, 229], "low": [74, 217, 219, 223, 224, 526, 530, 558, 561, 574, 659], "lower": [105, 214, 263, 265, 266, 281, 291, 300, 306, 308, 344, 616, 629, 630, 631, 632, 635, 636, 644], "lowest": [61, 203, 204, 256, 295, 526, 558, 633], "lstsq": 7, "m": [4, 11, 26, 95, 177, 191, 203, 214, 217, 219, 221, 223, 224, 227, 228, 229, 233, 239, 240, 241, 300, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 327, 344, 345, 346, 350, 516, 595, 600, 620, 621, 629, 630, 631, 632, 634, 635, 636], "machin": [4, 11, 235, 272, 310, 337, 582], "machineri": 188, "made": [41, 46, 58, 196, 248, 294, 359, 588, 611], "magnitud": [14, 15, 88, 215, 513], "mai": [13, 19, 23, 24, 54, 75, 79, 82, 83, 89, 91, 99, 101, 122, 159, 178, 186, 192, 203, 204, 211, 217, 219, 221, 222, 223, 224, 226, 227, 230, 233, 248, 259, 264, 265, 268, 301, 305, 306, 310, 312, 316, 319, 337, 342, 345, 359, 365, 369, 371, 441, 478, 516, 579, 582, 589, 597, 605, 615, 625, 646, 648, 659], "main": [5, 105, 106, 107, 108, 109, 214, 234, 271, 304, 308, 327, 344, 626, 629, 630, 631, 634, 635], "mainstai": 11, "maintain": [38, 111, 120, 158, 161, 187, 263, 439, 477, 480, 599, 608, 621], "major": [4, 45, 46, 47, 48, 50, 53, 54, 122, 441, 499, 579, 580, 587, 640], "make": [48, 50, 80, 178, 317, 351, 504, 587, 605, 639, 642], "manag": 0, "mandelbrot": [317, 504], "mani": [11, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 579, 616, 644, 659], "manipul": [3, 106, 652, 662], "mantissa": 296, "manual": [4, 179, 188, 625], "mappingproxi": 192, "mask": [104, 185, 276, 293, 344, 499, 508, 517, 620, 631, 635], "mask_func": 344, "mask_indic": [7, 631, 635], "mass": 263, "match": [14, 15, 46, 82, 83, 89, 94, 97, 110, 178, 248, 250, 259, 275, 324, 343, 345, 515, 516, 584, 615, 620, 621, 624, 649], "math": [11, 208], "mathbf": [328, 646], "mathemat": [316, 652, 662], "matlab": 247, "matmul": [7, 113, 319, 322, 645], "matplotlib": [351, 568], "matric": [234, 251, 274, 293, 303, 304, 305, 307, 309, 312, 314, 316, 318, 319, 320, 321, 322, 323, 327, 345, 346, 351, 662], "matrix": [90, 95, 113, 143, 203, 275, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 327, 345, 346, 351, 462, 613, 634, 643, 645, 646, 652, 662], "matrix_norm": [7, 316], "matrix_pow": [7, 613], "matrix_rank": 7, "matrix_transpos": 7, "matter": 639, "matvec": 7, "max": [0, 7, 21, 36, 63, 79, 124, 235, 245, 246, 263, 264, 265, 272, 310, 314, 316, 318, 348, 353, 354, 364, 443, 547, 621, 625, 642, 659], "max_arg": 0, "max_val": 0, "maxima": [245, 347, 348], "maximum": [0, 7, 21, 36, 37, 79, 118, 144, 204, 245, 246, 266, 347, 353, 354, 360, 361, 364, 367, 369, 371, 437, 463, 505, 510, 511, 514, 516, 642], "may_share_memori": 7, "md": 316, "mean": [3, 7, 11, 20, 28, 41, 43, 45, 46, 47, 48, 49, 50, 54, 61, 87, 94, 105, 106, 108, 122, 128, 138, 163, 173, 175, 203, 205, 206, 214, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 233, 249, 250, 251, 252, 253, 254, 255, 259, 271, 274, 301, 316, 331, 344, 350, 352, 365, 366, 369, 371, 441, 447, 457, 482, 492, 494, 501, 502, 503, 505, 520, 527, 529, 543, 545, 548, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 575, 576, 579, 588, 595, 616, 618, 629, 631, 635, 643, 644, 650, 651, 659], "meaningfulli": 659, "meant": 659, "median": [0, 7, 366, 505], "meet": [41, 600], "memori": [3, 14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 128, 136, 164, 186, 203, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 260, 261, 262, 269, 270, 273, 277, 282, 283, 284, 285, 295, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 350, 351, 354, 355, 358, 366, 447, 455, 483, 497, 498, 500, 502, 503, 509, 510, 511, 513, 518, 519, 579, 581, 583, 585, 587, 588, 591, 592, 598, 602, 603, 604, 605, 606, 610, 612, 613, 617, 622, 623, 637, 638, 646, 649, 650, 651, 652, 666], "merg": [38, 120, 161, 439, 480, 608], "mergesort": [38, 120, 161, 439, 480, 608], "mersenn": 520, "mesh": 293, "meshgrid": [7, 251, 274, 293, 352, 501], "met": [113, 315], "meta": 184, "metadata": 178, "method": [11, 19, 21, 22, 24, 38, 54, 81, 87, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 184, 196, 248, 250, 292, 314, 318, 322, 346, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 458, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 489, 490, 491, 492, 494, 495, 499, 507, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 588, 601, 618, 620, 627, 652], "mgrid": [217, 219, 228, 231, 274, 293], "mgridclass": 352, "middl": [11, 109, 217, 219, 223, 224, 307, 350, 366], "might": [203, 222, 223, 224], "min": [7, 22, 37, 79, 124, 235, 245, 246, 263, 264, 265, 272, 301, 304, 310, 316, 319, 322, 323, 347, 348, 354, 367, 443, 621, 659], "min_scalar_typ": 7, "minima": [246, 353, 354], "minimum": [7, 22, 36, 37, 41, 63, 79, 119, 146, 242, 245, 246, 266, 347, 348, 353, 360, 361, 364, 367, 438, 465, 505, 510, 511, 514], "minlength": 63, "mintypecod": 7, "minu": [62, 212, 244, 355, 585, 638], "mirror": 505, "miscellan": [2, 652, 662], "mise": 575, "miss": 331, "mix": [311, 345], "mk": 11, "mkl": 4, "mn": 11, "mod": [7, 213, 585, 642], "mode": [78, 86, 91, 123, 152, 170, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 319, 442, 471, 489, 505, 515, 516, 568, 573, 580, 599, 620, 621], "model": [4, 532], "modf": 7, "modifi": [87, 109, 234, 270, 350, 366, 505, 567], "modul": [216, 258, 652], "moduletyp": 13, "modulu": [247, 355, 585], "moment": 90, "monoton": [111, 263, 266], "moor": 318, "more": [0, 3, 4, 38, 41, 58, 59, 60, 100, 101, 177, 179, 203, 204, 212, 228, 231, 240, 241, 250, 265, 268, 274, 296, 302, 304, 310, 311, 313, 314, 315, 317, 318, 322, 324, 327, 328, 334, 336, 589, 595, 615, 624, 628, 639, 642, 659, 666], "most": [3, 4, 25, 63, 109, 110, 197, 204, 216, 222, 292, 359, 520, 566, 589, 614], "move": [150, 357, 469, 507, 593, 594, 627, 639], "moveaxi": [7, 507, 593, 594, 627, 641], "msg": 0, "mt": 346, "mt19937": 566, "mu": [541, 545, 552, 575], "multi": [2, 114, 164, 274, 293, 302, 352, 483, 501, 580, 639, 652], "multi_dot": [7, 113, 203, 204], "multi_index": 580, "multiarrai": 185, "multidimension": [263, 264, 266, 275, 496, 649], "multinomi": 7, "multipl": [4, 11, 26, 27, 36, 37, 38, 44, 61, 82, 83, 90, 96, 97, 120, 161, 176, 187, 203, 217, 219, 223, 224, 228, 229, 231, 233, 256, 265, 267, 268, 276, 293, 295, 302, 305, 306, 307, 308, 309, 315, 343, 347, 349, 353, 364, 365, 367, 369, 371, 439, 480, 579, 584, 597, 600, 608, 611, 615, 616, 628, 633, 639, 641, 644, 647, 648, 652], "multipli": [7, 98, 203, 296, 307, 368, 512], "multivalu": [16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57], "multivari": 548, "multivariate_norm": 7, "must": [14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 51, 52, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 76, 77, 79, 80, 82, 83, 84, 85, 88, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 110, 112, 113, 120, 161, 177, 207, 209, 210, 211, 212, 215, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 247, 248, 250, 253, 256, 259, 260, 261, 262, 263, 265, 268, 269, 270, 273, 277, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 300, 302, 304, 315, 316, 317, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 348, 349, 350, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 480, 497, 498, 500, 507, 508, 509, 510, 511, 512, 513, 515, 516, 518, 519, 557, 581, 583, 584, 585, 586, 591, 592, 593, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 610, 612, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 637, 638, 644, 646, 648, 649], "mx": 310, "mxn": [304, 312, 327, 346], "my_func": 26, "n": [0, 4, 11, 39, 44, 62, 91, 99, 101, 106, 107, 110, 111, 173, 176, 177, 196, 202, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 251, 259, 264, 266, 267, 271, 293, 304, 310, 312, 313, 314, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 344, 345, 346, 350, 351, 366, 369, 371, 492, 496, 505, 507, 508, 515, 516, 532, 547, 549, 559, 569, 599, 601, 611, 613, 616, 619, 620, 621, 624, 627, 628, 629, 630, 631, 632, 634, 635, 636, 643, 644, 646, 647, 659], "n1": 351, "n2": [331, 351], "n3": 351, "naiv": 204, "name": [0, 7, 26, 178, 183, 184, 190, 318, 605], "namedtupl": 319, "namespac": [5, 13], "nan": [10, 16, 17, 19, 20, 24, 29, 30, 31, 32, 33, 35, 36, 37, 42, 45, 46, 47, 51, 52, 55, 57, 112, 242, 245, 246, 278, 282, 284, 285, 286, 287, 333, 347, 348, 349, 353, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 510, 511, 512, 610, 612, 616, 637, 639, 644], "nan_to_num": 7, "nanargmax": [7, 36, 361], "nanargmin": [7, 37, 360], "nancumprod": 7, "nancumsum": 7, "nanmax": [7, 245, 246, 347, 348, 354, 367], "nanmean": [7, 349, 369, 371, 616, 644], "nanmedian": 7, "nanmin": [7, 245, 246, 348, 353, 354, 364], "nanpercentil": 7, "nanprod": [7, 512], "nanquantil": 7, "nanstd": [7, 349, 365, 371, 616, 644], "nansum": 7, "nanvar": [7, 349, 365, 369, 616, 644], "nativ": [181, 189, 196], "native_cod": [181, 196], "native_dt": 196, "natur": [320, 332, 333, 334, 335, 336, 337, 343], "nbad": 542, "nd": [141, 460], "ndarrai": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 128, 135, 138, 140, 141, 148, 154, 156, 159, 160, 161, 171, 173, 176, 177, 184, 186, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 663], "ndenumer": 496, "ndim": [7, 39, 41, 48, 50, 58, 59, 60, 95, 106, 109, 234, 294, 316, 322, 323, 346, 347, 353, 502, 507, 625, 627, 650], "ndindex": 26, "ndmin": 41, "ne": 605, "nearest": [40, 77, 236, 243, 244, 355, 585, 592, 596, 610, 638], "necessari": [4, 19, 24, 28, 41, 45, 46, 48, 50, 58, 89, 91, 98, 99, 100, 101, 202, 213, 221, 227, 229, 234, 248, 257, 330, 342, 345, 349, 350, 362, 363, 365, 366, 368, 369, 370, 371, 512, 589, 616, 618, 644, 666], "necessarili": [305, 307], "need": [4, 20, 41, 46, 63, 109, 203, 258, 350, 366, 587, 620, 621, 649], "needs_init": 185, "needs_pyapi": 185, "neg": [7, 11, 19, 24, 40, 62, 63, 88, 108, 109, 111, 159, 211, 214, 217, 219, 222, 223, 224, 227, 230, 239, 242, 253, 259, 263, 282, 284, 285, 286, 287, 313, 324, 359, 364, 367, 369, 370, 371, 478, 509, 510, 511, 512, 515, 516, 549, 557, 580, 596, 616, 618, 620, 621, 624, 626, 644], "negat": 600, "negative_binomi": 7, "neginf": 359, "neither": [113, 245, 246, 311, 322, 345, 364, 367], "nest": [49, 177, 268, 597, 615, 641, 648], "nested_it": 7, "net": [245, 246, 348, 354], "never": 642, "new": [25, 26, 41, 54, 71, 72, 73, 80, 82, 83, 94, 97, 98, 99, 100, 101, 104, 109, 122, 156, 159, 173, 177, 178, 187, 188, 196, 202, 205, 206, 211, 245, 246, 252, 253, 254, 255, 257, 268, 271, 276, 330, 342, 343, 344, 348, 350, 354, 357, 362, 363, 366, 368, 370, 441, 475, 478, 492, 502, 503, 507, 584, 588, 589, 593, 594, 597, 611, 615, 625, 627, 641, 648, 649, 650, 651, 659], "new_dtyp": 196, "new_ord": 196, "new_shap": 589, "newaxi": 211, "newli": [14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 47, 51, 52, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 128, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 254, 255, 256, 260, 261, 262, 269, 270, 273, 277, 282, 284, 285, 295, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 354, 355, 358, 441, 447, 497, 498, 500, 502, 503, 509, 510, 511, 513, 518, 519, 581, 583, 585, 591, 592, 598, 602, 603, 604, 605, 606, 610, 612, 613, 617, 622, 623, 637, 638, 646, 650, 651], "newshap": 588, "next": [4, 235, 498], "nextaft": 7, "ngood": 542, "ni": [26, 351, 516, 620, 621], "nine": 532, "ninja": 4, "nj": [26, 516, 620, 621], "njm": 203, "nk": [26, 516, 620, 621], "nl": 11, "nlk": 203, "nn": 351, "noisi": 310, "non": [28, 39, 41, 45, 46, 47, 48, 49, 50, 54, 61, 63, 87, 94, 105, 106, 108, 111, 122, 128, 149, 159, 171, 205, 206, 213, 214, 218, 227, 230, 232, 238, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 265, 271, 274, 279, 282, 293, 302, 324, 330, 331, 342, 344, 352, 359, 360, 361, 364, 367, 369, 371, 441, 447, 468, 478, 490, 499, 501, 502, 503, 508, 510, 511, 520, 550, 551, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 616, 624, 629, 631, 635, 643, 644, 649, 650, 651], "nonc": [550, 551], "noncentral_chisquar": 7, "noncentral_f": 7, "none": [11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 133, 141, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 165, 170, 171, 172, 173, 175, 184, 192, 194, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 301, 310, 312, 314, 315, 316, 318, 322, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 377, 435, 436, 437, 438, 439, 441, 442, 443, 444, 447, 448, 449, 452, 460, 463, 464, 465, 469, 470, 471, 474, 475, 476, 477, 480, 481, 482, 484, 489, 490, 491, 492, 494, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 524, 526, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 591, 592, 593, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 626, 627, 628, 629, 631, 633, 635, 637, 638, 639, 640, 642, 643, 644, 646, 648, 649, 650, 651, 659], "nonzero": [7, 39, 94, 238, 293, 649, 659], "nor": [245, 246, 307, 364, 367], "norm": [7, 11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 301, 307, 310, 312, 329, 662], "normal": [7, 95, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 263, 264, 266, 305, 306, 319, 328, 337, 369, 371, 527, 529, 545, 548, 559, 571, 580, 605, 646], "not_equ": [7, 207, 260, 261, 298, 299], "notabl": 292, "note": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 55, 56, 57, 62, 65, 66, 67, 69, 82, 83, 87, 91, 96, 102, 104, 109, 111, 112, 128, 156, 196, 203, 204, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 243, 245, 246, 248, 249, 250, 251, 252, 253, 263, 264, 274, 276, 277, 282, 296, 297, 302, 304, 305, 312, 316, 321, 324, 329, 331, 342, 350, 355, 358, 366, 369, 370, 371, 447, 475, 499, 505, 507, 508, 510, 511, 515, 518, 533, 535, 536, 546, 551, 579, 585, 587, 588, 589, 591, 595, 605, 608, 610, 616, 617, 619, 624, 625, 627, 628, 633, 637, 639, 641, 642, 644, 645], "notic": [184, 227, 230], "notimplementederror": [14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 269, 271, 277, 282, 284, 285, 295, 296, 297, 298, 299, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 347, 348, 349, 353, 354, 355, 358, 364, 365, 367, 369, 370, 371, 441, 497, 498, 500, 502, 503, 509, 510, 511, 512, 513, 518, 519, 579, 583, 585, 587, 591, 592, 598, 602, 603, 604, 606, 608, 610, 612, 613, 616, 617, 618, 622, 623, 637, 638, 644, 646, 650, 651], "now": [19, 24, 48, 50, 90, 106, 307, 310, 344], "np": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 132, 133, 135, 138, 140, 141, 143, 148, 150, 154, 159, 160, 161, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 451, 452, 454, 457, 459, 460, 462, 467, 469, 473, 478, 479, 480, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 512, 513, 514, 515, 516, 518, 519, 555, 557, 564, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "nr": 11, "nsamp": 542, "nsampl": 542, "nth": [324, 624], "nuc": [312, 316, 329], "nuclear": 316, "num": [0, 62, 208, 257, 330, 342, 628, 642], "number": [11, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39, 40, 41, 47, 51, 52, 55, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 94, 106, 108, 110, 111, 148, 157, 160, 181, 190, 195, 197, 202, 203, 204, 211, 214, 215, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 235, 236, 244, 249, 250, 252, 253, 257, 259, 263, 264, 265, 266, 271, 272, 277, 278, 279, 280, 282, 289, 293, 296, 297, 301, 309, 314, 316, 319, 320, 322, 325, 326, 330, 337, 342, 355, 359, 362, 363, 364, 367, 368, 369, 370, 371, 467, 476, 479, 495, 499, 505, 507, 508, 512, 513, 520, 532, 542, 566, 585, 586, 589, 591, 592, 593, 594, 595, 596, 603, 607, 610, 616, 619, 625, 627, 629, 633, 638, 639, 643, 644, 659, 662], "number_of_dimens": [148, 467, 495], "numer": [3, 4, 11, 14, 15, 16, 17, 18, 20, 29, 30, 31, 32, 33, 35, 40, 51, 52, 55, 57, 84, 85, 88, 92, 93, 112, 178, 207, 209, 212, 222, 223, 224, 227, 229, 244, 245, 246, 260, 261, 273, 278, 281, 282, 284, 285, 298, 299, 316, 317, 332, 333, 334, 335, 348, 354, 358, 497, 500, 509, 510, 511, 513, 581, 592, 596, 602, 603, 604, 606, 617, 622, 623, 637, 662], "numpi": [0, 1, 3, 4, 10, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 134, 135, 138, 140, 141, 148, 154, 159, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 440, 453, 454, 457, 459, 460, 467, 473, 478, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 659, 662], "nvidia": 4, "nx": [264, 266, 351], "ny": [264, 266, 351], "nyquist": [11, 217, 219, 220, 221, 222, 223, 224, 227, 229, 230, 232], "o": [4, 19, 24, 191], "obj": [36, 37, 38, 104, 178, 248, 263, 276, 292], "object": [28, 41, 45, 46, 47, 48, 49, 50, 53, 54, 87, 105, 106, 108, 114, 122, 128, 139, 141, 156, 171, 178, 181, 184, 186, 190, 191, 193, 196, 199, 200, 205, 206, 211, 214, 218, 232, 235, 237, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 272, 274, 276, 292, 301, 306, 316, 324, 330, 331, 342, 344, 352, 441, 447, 458, 460, 475, 490, 496, 501, 502, 503, 520, 521, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 588, 624, 629, 631, 635, 643, 650, 651, 659], "observ": [90, 616, 644], "obsolet": 283, "obtain": [11, 109, 248, 300, 304, 327, 499], "obviou": 11, "occupi": [235, 272], "occur": [25, 54, 75, 82, 83, 89, 104, 122, 203, 268, 276, 305, 345, 359, 441, 597, 615, 646, 648], "occurr": [36, 37, 63, 111, 263, 360, 361, 639], "odd": [11, 218, 221, 225, 226, 227, 229, 230, 232, 350, 366, 505], "off": [28, 221, 226, 304, 305, 310, 327], "offset": [109, 114, 132, 172, 178, 184, 194, 249, 250, 304, 327, 344, 451, 491, 626, 631, 632, 635, 636], "often": [104, 262, 616, 644], "ogrid": [274, 293, 649], "ogridclass": 501, "oil": [532, 549], "old": 589, "omit": [526, 558], "onc": 309, "one": [3, 4, 27, 36, 37, 38, 41, 43, 49, 58, 59, 60, 61, 86, 89, 91, 94, 100, 101, 104, 128, 138, 141, 142, 178, 191, 205, 207, 211, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 241, 242, 245, 246, 250, 254, 259, 265, 268, 271, 274, 276, 280, 293, 307, 312, 313, 316, 324, 329, 332, 333, 335, 344, 347, 348, 351, 352, 353, 354, 360, 361, 368, 370, 447, 457, 460, 461, 499, 501, 503, 508, 512, 549, 580, 594, 600, 608, 614, 615, 616, 618, 620, 624, 628, 631, 632, 635, 636, 639, 644, 650, 659], "oneapi": [4, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "onedpl": 4, "onemkl": [4, 305, 307], "ones": [7, 41, 48, 50, 61, 97, 100, 101, 104, 112, 133, 203, 205, 206, 207, 211, 214, 233, 254, 255, 269, 271, 294, 310, 314, 317, 343, 344, 362, 368, 452, 503, 504, 507, 512, 584, 590, 594, 627, 629, 637, 650, 651], "ones_lik": [7, 41, 206, 255, 502, 651], "onli": [11, 19, 24, 28, 36, 37, 38, 41, 44, 45, 46, 48, 50, 54, 58, 61, 62, 87, 95, 100, 101, 122, 141, 159, 161, 178, 188, 203, 204, 205, 206, 214, 220, 230, 234, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 265, 274, 283, 300, 306, 308, 311, 314, 316, 317, 318, 319, 321, 322, 330, 331, 342, 344, 345, 347, 349, 353, 359, 360, 361, 364, 365, 367, 368, 369, 371, 441, 460, 478, 480, 502, 503, 506, 508, 509, 512, 524, 526, 530, 552, 558, 574, 579, 587, 588, 605, 608, 616, 618, 621, 633, 635, 639, 642, 644, 646, 649, 650, 651, 659], "open": [250, 274, 293, 330, 501, 526, 528, 530, 557, 560, 562, 563, 565, 574, 619], "opencl": [28, 41, 45, 46, 47, 48, 50, 87, 105, 108, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 271, 330, 331, 342, 352, 501, 502, 503, 629, 643, 650, 651], "oper": [11, 18, 26, 64, 65, 66, 67, 68, 69, 70, 112, 185, 192, 203, 204, 207, 211, 234, 244, 247, 260, 261, 277, 297, 298, 299, 300, 338, 340, 345, 347, 353, 355, 358, 359, 360, 361, 497, 500, 509, 510, 511, 515, 585, 591, 617, 625, 637, 639, 641, 642, 646, 652, 662], "operand": [203, 204, 324, 326, 504, 624], "opposit": [11, 196, 213, 221, 226, 508, 579], "optim": [4, 203, 204, 263, 265], "option": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 120, 122, 128, 138, 161, 171, 173, 178, 184, 196, 202, 203, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 278, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 308, 310, 312, 314, 315, 316, 318, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 457, 480, 490, 492, 497, 498, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 515, 516, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 666], "ord": [312, 316, 329], "order": [11, 14, 15, 16, 17, 18, 20, 23, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 84, 85, 87, 88, 92, 93, 102, 103, 109, 111, 112, 114, 120, 122, 128, 138, 150, 153, 156, 158, 161, 173, 181, 189, 194, 196, 197, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 217, 219, 222, 223, 224, 227, 229, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 259, 260, 261, 262, 263, 269, 270, 273, 277, 282, 283, 284, 285, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 312, 316, 322, 324, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 351, 354, 355, 357, 358, 380, 439, 441, 447, 457, 469, 472, 475, 477, 480, 492, 497, 498, 499, 500, 502, 503, 506, 507, 509, 510, 511, 513, 518, 519, 579, 580, 581, 583, 585, 587, 588, 589, 591, 592, 595, 598, 599, 602, 603, 604, 605, 606, 608, 610, 612, 613, 617, 622, 623, 624, 627, 637, 638, 639, 640, 643, 646, 649, 650, 651, 662], "ordin": [264, 310, 321], "ordinari": [227, 275, 300], "org": 91, "orient": [96, 516, 621], "origin": [27, 71, 109, 114, 171, 221, 227, 229, 248, 312, 316, 329, 351, 357, 368, 370, 490, 588, 589, 593, 639], "ortho": [11, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233], "orthogon": [307, 319], "orthonorm": 319, "other": [43, 54, 71, 72, 73, 110, 122, 192, 222, 223, 224, 227, 229, 243, 248, 251, 271, 305, 307, 315, 316, 321, 357, 375, 376, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 441, 530, 574, 589, 594, 616, 633, 639, 644, 646, 652, 662], "otherwis": [3, 14, 15, 16, 17, 18, 19, 20, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 84, 85, 87, 88, 90, 92, 93, 94, 95, 102, 103, 105, 110, 112, 122, 156, 171, 184, 195, 198, 200, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 269, 270, 271, 275, 277, 282, 284, 285, 292, 295, 296, 297, 298, 299, 310, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 353, 354, 355, 356, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 441, 475, 490, 497, 498, 500, 502, 503, 509, 510, 511, 512, 513, 518, 519, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 587, 588, 591, 592, 598, 599, 602, 603, 604, 606, 608, 610, 612, 613, 614, 616, 617, 618, 622, 623, 626, 637, 638, 644, 646, 649, 650, 651], "otim": [324, 624], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 123, 124, 125, 128, 129, 130, 133, 138, 141, 144, 145, 146, 151, 157, 163, 165, 170, 171, 172, 173, 175, 177, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 309, 311, 312, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 437, 438, 442, 443, 444, 447, 448, 449, 452, 457, 460, 463, 464, 465, 470, 476, 482, 484, 489, 490, 491, 492, 494, 497, 498, 499, 500, 501, 502, 503, 504, 507, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 637, 638, 642, 643, 644, 645, 646, 648, 649, 650, 651], "outer": [7, 96, 109, 203, 204, 266, 294], "outlier": 264, "output": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 84, 85, 87, 88, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 112, 113, 122, 128, 178, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 269, 270, 271, 273, 274, 277, 278, 279, 282, 284, 285, 293, 295, 296, 297, 298, 299, 315, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 361, 362, 363, 365, 366, 368, 369, 370, 371, 441, 447, 497, 498, 500, 501, 502, 503, 509, 510, 511, 512, 513, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 585, 586, 588, 591, 592, 596, 598, 600, 602, 603, 604, 605, 606, 608, 610, 612, 613, 614, 616, 617, 618, 620, 622, 623, 625, 626, 629, 631, 635, 637, 638, 639, 642, 643, 644, 646, 649, 650, 651, 662, 666], "outsid": [263, 264, 265], "over": [11, 19, 24, 26, 27, 61, 63, 81, 97, 98, 99, 100, 101, 113, 138, 203, 204, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 251, 257, 263, 264, 265, 275, 292, 302, 312, 316, 324, 328, 329, 330, 342, 343, 345, 347, 349, 351, 353, 362, 363, 364, 365, 367, 368, 369, 370, 371, 457, 496, 512, 516, 525, 528, 530, 557, 562, 573, 574, 579, 584, 589, 616, 618, 620, 621, 624, 628, 642, 644, 646, 662], "overal": [217, 219, 223, 224, 228, 229, 231, 233], "overflow": 242, "overlin": [91, 328, 646], "overrid": [96, 206, 255, 503, 651], "overview": 2, "overwrite_input": [350, 366], "p": [11, 301, 310, 313, 532, 535, 540, 546, 549, 642], "pack": [109, 579, 662], "packag": [0, 3], "packbit": 7, "pad": [7, 91, 178, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 589], "pad_valu": 505, "pad_width": 505, "padder": 505, "padding_func": 505, "page": [3, 662], "pair": [11, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 302, 305], "parallel": [1, 3, 4, 10, 38, 120, 161, 439, 480, 608, 652], "paramet": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 128, 135, 138, 141, 156, 161, 171, 173, 176, 177, 178, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 454, 457, 460, 475, 480, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "parameter": [524, 530, 552, 574], "parametr": 628, "pareto": 7, "pars": [250, 331], "part": [3, 11, 16, 17, 23, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 140, 154, 227, 245, 246, 273, 279, 280, 288, 289, 305, 306, 308, 344, 348, 354, 356, 459, 473, 505, 581, 582, 609, 631, 635, 638, 639, 659], "partial": [38, 120, 161, 350, 366, 439, 480, 608], "particular": [185, 315], "particularli": 203, "partit": [7, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 120, 122, 128, 161, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 439, 441, 447, 480, 490, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 608, 629, 631, 635, 643, 650, 651, 659], "pass": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 156, 183, 184, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 265, 266, 271, 274, 293, 310, 331, 344, 352, 359, 447, 475, 496, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 587, 629, 631, 632, 635, 636, 643, 646, 650, 651], "past": 74, "path": [4, 203, 204, 250, 331], "path_info": 204, "pathlib": 331, "pattern": 61, "pearson": 90, "penros": 318, "per": [203, 218, 232, 369, 580], "percentil": [7, 350, 366], "perf_count": 0, "perform": [19, 24, 46, 47, 63, 79, 110, 171, 203, 217, 219, 222, 223, 224, 228, 229, 231, 233, 239, 300, 323, 490, 512, 618], "perhap": 587, "period": [11, 642], "permit": 250, "permut": [7, 173, 203, 357, 492, 507, 627, 662], "permute_dim": [7, 627], "perpendicular": 96, "pg": 316, "phase": [11, 23, 642], "phase_deg": 642, "pi": [0, 10, 11, 16, 29, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 102, 103, 216, 518, 604, 605, 606, 622, 623, 628, 642, 666], "pickl": [250, 331], "piecewis": 7, "pinv": 7, "pip": 4, "place": [7, 19, 20, 24, 25, 26, 40, 79, 81, 82, 83, 91, 98, 99, 100, 101, 104, 113, 138, 159, 161, 173, 211, 213, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 248, 274, 276, 278, 345, 347, 349, 350, 353, 359, 362, 363, 365, 366, 368, 369, 370, 371, 457, 478, 480, 492, 501, 505, 512, 515, 516, 567, 588, 589, 593, 596, 608, 615, 616, 618, 620, 626, 644, 659], "plane": 595, "platform": [98, 99, 100, 101, 189, 362, 363, 368, 370, 512, 618], "pleas": [0, 3, 44, 176, 203, 263, 264, 267, 647, 659], "plot": 568, "plt": [351, 568], "plu": [332, 333, 335], "plugin": 4, "point": [11, 14, 15, 23, 28, 34, 40, 45, 46, 56, 61, 74, 88, 97, 191, 205, 206, 210, 214, 215, 216, 221, 222, 226, 227, 228, 229, 230, 235, 236, 242, 249, 250, 251, 253, 254, 255, 259, 264, 270, 271, 273, 281, 296, 310, 313, 330, 331, 336, 337, 343, 349, 350, 359, 365, 366, 369, 371, 498, 502, 503, 527, 529, 559, 571, 581, 583, 584, 596, 598, 599, 605, 616, 628, 629, 644, 650, 651, 662], "pointer": [74, 186], "poisson": 7, "poli": 7, "polyadd": 7, "polyd": 7, "polydiv": 7, "polyfit": 7, "polyint": 7, "polymul": 7, "polysub": 7, "polyv": 7, "popul": [14, 15, 16, 17, 18, 23, 29, 30, 31, 32, 33, 34, 35, 40, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 84, 85, 88, 92, 93, 102, 103, 112, 121, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 256, 260, 261, 262, 269, 270, 273, 277, 282, 284, 285, 295, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 354, 355, 358, 369, 371, 440, 497, 498, 500, 509, 510, 511, 513, 518, 519, 525, 557, 581, 583, 585, 591, 592, 596, 598, 602, 603, 604, 605, 606, 610, 612, 613, 616, 617, 622, 623, 637, 638, 644], "portion": [263, 265], "posinf": 359, "posit": [7, 11, 19, 20, 24, 28, 40, 45, 46, 47, 62, 76, 88, 108, 109, 150, 164, 211, 214, 215, 217, 219, 222, 223, 224, 227, 230, 232, 235, 242, 250, 278, 282, 284, 285, 286, 287, 300, 313, 325, 357, 359, 364, 367, 370, 469, 483, 497, 507, 532, 556, 593, 594, 596, 598, 600, 612, 613, 626, 627], "possess": 305, "possibl": [11, 53, 54, 59, 60, 63, 122, 156, 176, 203, 204, 211, 245, 246, 259, 263, 266, 267, 344, 441, 475, 507, 516, 579, 588, 611, 614, 616, 619, 620, 621, 627, 644, 647], "possibli": 49, "pow": [7, 511, 659], "power": [7, 11, 210, 216, 242, 313, 510, 613, 643], "practic": [369, 371], "pre": 265, "precis": [14, 15, 61, 98, 99, 100, 101, 197, 203, 235, 242, 273, 310, 327, 344, 362, 363, 368, 370, 512, 581, 618, 626], "predecessor": 642, "prefer": [78, 87, 104, 128, 159, 447, 478, 499, 579], "prepend": [41, 110, 202, 625], "present": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 184, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 271, 274, 331, 344, 352, 364, 367, 370, 447, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 629, 631, 635, 643, 650, 651], "preserv": [54, 58, 59, 60, 79, 122, 187, 192, 203, 239, 240, 241, 242, 306, 307, 308, 350, 366, 441, 579, 587, 626, 633, 639], "press": [11, 316], "prevent": [203, 369, 371, 616, 644], "previou": [61, 505], "print": [0, 4, 47, 61, 86, 111, 171, 184, 204, 490, 496, 524, 525, 526, 527, 528, 529, 530, 549, 554], "print_device_info": 0, "printabl": 204, "printopt": 7, "prior": 110, "prob1": [336, 337], "prob12": [336, 337], "prob2": [336, 337], "probabl": [263, 264, 266, 337, 350, 366, 532, 540, 549], "proce": 659, "process": [11, 91, 605], "processor": 203, "prod": [7, 98, 100, 325, 326, 368, 659], "produc": [11, 39, 187, 331, 516, 599, 621], "product": [90, 96, 98, 100, 113, 129, 133, 203, 204, 264, 275, 293, 294, 302, 311, 315, 317, 321, 324, 325, 326, 328, 345, 358, 362, 368, 448, 452, 504, 512, 624, 645, 646, 662], "profil": [171, 490], "program": [4, 243, 652, 662], "progress": [257, 330], "project": [4, 192, 328, 513, 646], "promot": [16, 17, 18, 23, 28, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 75, 76, 88, 92, 93, 102, 103, 112, 209, 210, 212, 242, 244, 245, 246, 247, 257, 269, 297, 330, 332, 333, 334, 335, 336, 337, 342, 345, 348, 354, 355, 358, 498, 510, 511, 518, 519, 583, 585, 590, 591, 598, 602, 604, 605, 606, 610, 612, 613, 617, 622, 623, 625, 637, 638, 646], "promote_typ": 7, "propag": [192, 245, 246, 347, 348, 353, 354, 362, 363, 364, 367, 368, 370], "proper": [245, 246, 305, 307], "properti": [11, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 115, 122, 128, 131, 134, 136, 137, 140, 142, 143, 147, 148, 154, 159, 160, 164, 167, 168, 169, 171, 173, 174, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 306, 308, 319, 330, 331, 342, 344, 352, 373, 441, 447, 450, 453, 455, 456, 459, 461, 462, 466, 467, 473, 478, 479, 483, 486, 487, 488, 490, 492, 493, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651, 659], "proport": 605, "protocol": [49, 178, 199, 248], "prototyp": 206, "provid": [0, 7, 11, 36, 37, 41, 62, 81, 82, 83, 89, 97, 114, 176, 203, 204, 211, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 252, 263, 265, 268, 281, 286, 287, 314, 318, 343, 360, 361, 364, 367, 368, 369, 370, 371, 526, 558, 561, 584, 587, 597, 615, 616, 620, 628, 639, 644, 646, 648, 649, 666], "pseudo": [318, 520], "ptp": 7, "pure": [11, 221, 227, 229, 230], "purpos": [39, 310, 316], "put": [7, 11, 213, 221, 227, 229, 508, 516, 621, 659], "put_along_axi": [7, 515, 621], "putmask": [7, 515], "pval": 547, "py": 4, "pypi": 4, "pyplot": [351, 568], "pytest": 4, "python": [0, 2, 3, 5, 49, 62, 141, 185, 186, 247, 248, 355, 460, 557, 585, 586, 659], "q": [307, 313, 319, 326, 350, 366], "q_prof": [171, 490], "qquad": 11, "qr": 7, "quad": 11, "quadrant": [23, 31, 33, 51, 55, 217], "quantil": 7, "quantiti": [616, 644], "quaternion": 313, "question": 105, "queue": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 447, 490, 501, 502, 503, 520, 523, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "quick": [2, 3], "quickest": 579, "quickli": [293, 666], "quicksort": [38, 608], "quotient": [34, 56], "r": [90, 96, 103, 266, 319], "r1": 90, "r2": [90, 319], "r3": 90, "rad": 103, "rad2deg": [7, 102, 103, 642], "radian": [7, 16, 17, 23, 29, 30, 31, 33, 34, 51, 55, 56, 102, 103, 518, 642, 666], "radix": [38, 120, 161, 439, 480, 608], "radixsort": [38, 120, 161, 439, 480, 608], "rais": [14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 84, 85, 87, 88, 89, 92, 93, 97, 102, 103, 111, 112, 113, 122, 123, 143, 176, 205, 206, 207, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 267, 269, 271, 277, 282, 284, 285, 295, 296, 297, 298, 299, 313, 315, 316, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 348, 349, 353, 354, 355, 358, 360, 361, 364, 365, 367, 369, 370, 371, 441, 442, 462, 497, 498, 500, 502, 503, 509, 510, 511, 512, 513, 518, 519, 579, 580, 583, 584, 585, 587, 588, 591, 592, 598, 602, 603, 604, 606, 608, 610, 611, 612, 613, 614, 616, 617, 618, 622, 623, 637, 638, 644, 646, 647, 650, 651, 659], "ramp": 505, "rand": [7, 90, 204, 528, 530, 560, 562, 563, 565], "randint": [7, 141, 460, 530, 561], "randn": [7, 239, 240, 241, 264, 318, 319, 322, 326, 524, 529, 615], "random": [90, 141, 204, 239, 240, 241, 264, 266, 307, 315, 318, 319, 322, 326, 460, 615, 616, 644, 652, 662], "random_integ": [7, 526, 530, 558], "random_sampl": [7, 525, 530, 557, 560, 563, 565], "randomli": 554, "randomst": 558, "ranf": 7, "rang": [0, 62, 111, 252, 263, 264, 265, 266, 324, 337, 507, 514, 515, 549, 554, 580, 586, 615, 624, 627, 642, 662], "rank": [211, 213, 251, 310, 314, 327, 505, 619], "rate": [218, 232], "rather": [264, 499], "ratio": [0, 112, 244, 310, 637, 666], "ration": 662, "ravel": [7, 138, 213, 238, 316, 457, 504, 588, 659], "ravel_multi_index": [7, 640], "raveled_indic": 580, "raw": 319, "rayleigh": 7, "rcond": [310, 318], "re": [27, 36, 37, 105, 227, 593], "read": [105, 109, 138, 188, 249, 250, 252, 253, 331, 457, 579, 588], "readonli": 192, "real": [7, 13, 14, 15, 16, 17, 23, 28, 29, 30, 31, 32, 33, 34, 35, 42, 51, 52, 55, 56, 57, 76, 77, 88, 97, 216, 219, 221, 226, 227, 228, 229, 230, 231, 233, 235, 243, 245, 246, 247, 269, 273, 279, 281, 288, 289, 300, 305, 306, 307, 308, 314, 318, 319, 320, 322, 336, 337, 343, 348, 354, 355, 359, 369, 371, 532, 549, 582, 583, 584, 585, 598, 609, 610, 616, 638, 639, 644, 659, 662], "real_if_clos": [7, 23, 273, 581], "rearrang": [150, 469, 662], "reason": 229, "rebuild": 177, "recal": 186, "recalcul": [369, 371, 616, 644], "recent": [25, 63, 614], "recip": [4, 11], "reciproc": [7, 598, 612], "recommend": [203, 499, 625], "reconstruct": [183, 322, 639], "recov": 11, "reduc": [19, 24, 36, 37, 61, 319, 322, 343, 347, 349, 350, 351, 353, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 512, 584, 589, 616, 618, 644], "reduce_hypot": 269, "reduct": [19, 24], "redund": 230, "refer": [0, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 172, 173, 175, 176, 177, 178, 186, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659], "reflect": [505, 659], "reflect_typ": 505, "reflector": 319, "regardless": [180, 306, 308, 647], "regular": 331, "rel": [20, 38, 120, 161, 164, 278, 304, 314, 327, 439, 480, 483, 593, 594, 608], "relat": [91, 188], "relationship": 90, "relev": [181, 257, 330, 342], "rem": 247, "remain": [19, 24, 61, 204, 231, 233, 248, 263, 343, 349, 350, 357, 365, 366, 369, 371, 584, 588, 616, 633, 644], "remaind": [7, 244, 247, 355, 510, 511], "remov": [26, 36, 37, 102, 104, 109, 162, 211, 227, 304, 327, 481, 512, 518, 614, 618, 633, 646, 662], "reorder": [203, 239, 326, 357], "rep": 625, "repeat": [7, 27, 217, 219, 223, 224, 228, 229, 231, 233, 234, 305, 306, 307, 308, 351, 508, 589, 625, 628, 639, 659], "repeatedli": [26, 27, 203], "repetit": [0, 586, 625], "replac": [3, 11, 26, 49, 79, 213, 359, 362, 363, 508, 516, 535, 588, 600, 659], "replic": 625, "repo": 4, "repr": 417, "repres": [11, 28, 41, 45, 46, 48, 49, 50, 61, 62, 64, 65, 67, 68, 70, 90, 186, 204, 222, 230, 248, 251, 257, 259, 274, 277, 320, 330, 342, 351, 371, 505, 521, 589, 633, 639, 659], "represent": [62, 64, 65, 66, 67, 68, 69, 70, 204, 235, 272, 274, 277, 297, 359, 498, 591, 610, 659], "request": 594, "requir": [4, 7, 41, 46, 47, 48, 50, 54, 100, 101, 122, 159, 171, 179, 183, 185, 186, 203, 215, 274, 359, 441, 478, 490, 505, 588, 589], "res_cpu": 105, "res_host": 105, "resampl": 605, "rese": 566, "reset": 659, "reshap": [0, 7, 18, 27, 36, 37, 39, 58, 60, 61, 105, 106, 107, 109, 112, 113, 132, 138, 143, 159, 173, 176, 177, 203, 211, 213, 220, 225, 239, 247, 267, 274, 275, 276, 293, 294, 304, 311, 312, 316, 324, 327, 329, 344, 345, 347, 353, 358, 451, 457, 462, 478, 492, 505, 508, 554, 579, 587, 589, 593, 595, 617, 624, 626, 628, 631, 632, 635, 636, 637, 639, 641, 647, 659], "resid": [211, 215, 248], "residu": 310, "resiz": [7, 211, 659], "resolut": 235, "resolv": [97, 211, 343, 584], "resourc": 0, "respect": [18, 27, 34, 56, 62, 64, 66, 68, 69, 70, 112, 164, 207, 242, 244, 247, 259, 260, 261, 297, 298, 299, 302, 336, 337, 338, 340, 341, 355, 358, 483, 500, 510, 511, 585, 591, 617, 637, 642], "rest": 44, "restor": 593, "restrict": 328, "result": [0, 4, 11, 19, 24, 27, 34, 36, 37, 39, 41, 56, 61, 63, 64, 65, 66, 67, 68, 69, 70, 75, 79, 81, 82, 83, 88, 90, 91, 94, 97, 98, 99, 100, 101, 104, 112, 113, 178, 196, 204, 206, 207, 212, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 242, 244, 249, 250, 251, 252, 253, 255, 257, 260, 261, 263, 264, 265, 266, 274, 277, 282, 284, 285, 286, 287, 292, 296, 297, 298, 299, 300, 304, 305, 311, 312, 316, 319, 324, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 349, 350, 353, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 499, 500, 503, 504, 510, 511, 512, 515, 528, 532, 562, 584, 588, 590, 591, 592, 594, 596, 599, 602, 603, 605, 611, 615, 616, 618, 620, 621, 624, 625, 628, 633, 637, 638, 639, 641, 644, 646, 649, 651, 659], "result_dpnp": 0, "result_numpi": 0, "result_typ": [7, 75, 178, 662], "ret": 519, "retain": 588, "retriev": [109, 200, 304], "retstep": 330, "return": [0, 5, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 127, 128, 129, 130, 132, 134, 136, 137, 138, 141, 144, 145, 146, 148, 149, 150, 151, 153, 156, 157, 160, 161, 163, 164, 165, 171, 172, 173, 175, 176, 177, 180, 192, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 447, 448, 449, 451, 453, 455, 456, 457, 460, 463, 464, 465, 467, 468, 469, 470, 472, 475, 476, 479, 480, 482, 483, 484, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 533, 552, 554, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 659], "return_count": 639, "return_index": 639, "return_invers": 639, "reus": [248, 265], "revers": [91, 109, 173, 234, 239, 240, 241, 304, 492, 507, 595, 627, 628, 641, 643], "rewrit": 310, "rfft": [7, 11, 218, 221, 226, 227, 228, 229, 231, 232, 233], "rfft2": [7, 228], "rfftfreq": [7, 218], "rfftn": [7, 216, 219, 229, 230, 231], "right": [11, 33, 55, 66, 69, 79, 96, 109, 111, 240, 241, 269, 297, 302, 305, 306, 307, 308, 315, 326, 344, 573, 584, 591, 599, 626, 628, 631, 635, 643], "right_shift": [7, 66, 69, 297], "rightmost": [263, 264, 265, 326], "rint": [7, 40, 77, 236, 243, 596, 638], "rl": [317, 504], "roll": [7, 594], "rollaxi": [7, 593], "root": [7, 76, 269, 301, 369, 583, 584, 598, 612, 613, 616], "rot90": [7, 240, 241], "rotat": [240, 241, 595], "roughli": [197, 310], "round": [7, 28, 40, 77, 221, 226, 236, 243, 244, 305, 355, 585, 592, 638, 659, 662], "routin": [2, 652, 659], "row": [50, 54, 80, 82, 83, 90, 98, 99, 100, 101, 109, 122, 177, 214, 240, 241, 259, 268, 271, 274, 315, 322, 441, 499, 579, 580, 597, 611, 615, 629, 631, 639, 640, 647, 648], "row_stack": [7, 648], "rowvar": [90, 95], "rsqrt": [583, 612], "rtol": [20, 278, 314, 318], "rule": [16, 17, 18, 19, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 41, 45, 46, 48, 50, 51, 52, 55, 56, 57, 61, 64, 66, 68, 69, 70, 75, 76, 88, 89, 92, 93, 96, 99, 101, 102, 103, 112, 209, 210, 212, 244, 245, 246, 247, 257, 269, 297, 302, 330, 332, 333, 334, 335, 336, 337, 342, 343, 345, 348, 349, 350, 354, 355, 358, 365, 366, 369, 371, 498, 510, 511, 518, 519, 583, 584, 585, 590, 591, 598, 602, 604, 605, 606, 610, 612, 613, 616, 617, 618, 622, 623, 628, 637, 638, 644, 646], "run": [0, 4], "runtim": 4, "runtimewarn": [364, 367], "s1": [164, 178, 294, 483], "s10": 178, "s16": 184, "s2": [164, 181, 483], "s25": 178, "s3": [164, 483], "s_": 26, "safe": [54, 75, 82, 83, 89, 122, 203, 268, 345, 441, 597, 615, 646, 648], "sai": 588, "said": 326, "same": [4, 11, 14, 15, 18, 19, 20, 24, 25, 26, 27, 34, 36, 37, 38, 39, 40, 42, 43, 48, 50, 53, 54, 56, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 88, 90, 91, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 120, 121, 122, 156, 161, 173, 177, 206, 207, 211, 213, 222, 223, 224, 229, 234, 236, 242, 244, 245, 246, 247, 248, 255, 256, 259, 260, 261, 262, 263, 265, 268, 269, 270, 273, 275, 277, 278, 286, 287, 288, 294, 295, 296, 297, 298, 299, 302, 304, 307, 313, 318, 319, 323, 324, 327, 336, 337, 338, 340, 341, 343, 347, 348, 349, 350, 353, 354, 355, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 440, 441, 475, 480, 492, 496, 498, 500, 503, 505, 508, 510, 511, 512, 516, 524, 526, 530, 552, 558, 574, 579, 581, 584, 585, 586, 588, 591, 593, 594, 597, 599, 600, 608, 614, 615, 616, 617, 618, 620, 621, 624, 626, 630, 632, 634, 636, 637, 640, 644, 645, 648, 651, 666], "same_kind": [54, 75, 82, 83, 89, 122, 203, 268, 345, 441, 597, 615, 646, 648], "sampl": [11, 218, 225, 227, 230, 232, 257, 259, 263, 264, 266, 330, 342, 516, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 616, 621, 628, 631, 635, 644, 652, 662], "sample_count": [264, 266], "sample_r": 232, "satisfi": [41, 46, 48, 50, 54, 122, 213, 309, 441, 508, 587, 600], "save": [7, 250, 350, 366, 369, 371, 616, 644, 666], "savetxt": 7, "savez": 7, "savez_compress": 7, "scalar": [18, 20, 25, 34, 41, 42, 43, 45, 46, 48, 49, 50, 56, 64, 66, 68, 69, 70, 75, 87, 88, 89, 96, 105, 108, 110, 112, 113, 135, 141, 178, 183, 203, 204, 207, 213, 218, 232, 234, 242, 244, 245, 246, 247, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 269, 275, 276, 278, 280, 289, 290, 294, 295, 296, 297, 298, 299, 311, 321, 324, 330, 336, 337, 338, 340, 341, 342, 344, 345, 348, 351, 354, 355, 358, 454, 460, 495, 498, 500, 505, 508, 510, 511, 515, 516, 520, 524, 526, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 552, 553, 555, 556, 558, 561, 564, 566, 570, 572, 573, 574, 575, 576, 577, 578, 582, 585, 591, 599, 600, 617, 620, 624, 628, 637, 638, 643, 645, 649, 659], "scale": [11, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 257, 294, 319, 330, 342, 524, 537, 539, 541, 542, 543, 544, 552, 564, 569, 576], "scientif": 11, "scipi": 208, "scope": 4, "script": 4, "se": 369, "search": [204, 652, 662], "searchsort": [7, 111, 120, 161, 263, 439, 480, 608, 659], "second": [18, 20, 34, 42, 43, 56, 61, 64, 66, 68, 69, 70, 74, 88, 91, 96, 109, 112, 113, 178, 204, 207, 210, 217, 218, 219, 220, 223, 224, 227, 230, 232, 242, 244, 245, 246, 247, 256, 259, 260, 261, 263, 264, 265, 267, 268, 269, 275, 278, 294, 295, 297, 298, 299, 302, 304, 311, 324, 327, 328, 336, 337, 338, 340, 341, 344, 345, 347, 348, 351, 353, 354, 355, 358, 500, 504, 510, 511, 585, 591, 595, 613, 617, 619, 624, 626, 637, 645, 646], "section": [4, 44, 179, 219, 224, 229, 233, 312, 329, 659], "see": [3, 40, 90, 188, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 263, 266, 310, 312, 329, 505, 547, 596, 631, 632, 635, 636, 639, 659], "seed": [7, 90, 141, 204, 460, 520], "seek": 250, "seldom": 242, "select": [7, 38, 81, 89, 120, 125, 161, 213, 248, 347, 353, 439, 444, 480, 608, 614, 620, 628, 652], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "self": [137, 374, 375, 376, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456], "semant": [263, 266], "sens": 326, "sep": [250, 253], "separ": [11, 156, 178, 203, 250, 253, 265, 359, 475, 589], "sequenc": [27, 44, 49, 58, 59, 60, 80, 82, 83, 86, 91, 176, 177, 203, 204, 205, 206, 217, 219, 223, 224, 227, 228, 229, 231, 233, 254, 255, 257, 263, 265, 266, 267, 268, 274, 276, 292, 293, 315, 324, 330, 342, 350, 357, 366, 502, 503, 505, 508, 554, 557, 567, 586, 587, 590, 597, 611, 615, 624, 628, 641, 647, 648, 650, 651], "sequenti": [95, 208, 356, 368], "seri": [11, 227, 546], "serv": 641, "set": [11, 26, 36, 37, 38, 41, 54, 63, 78, 81, 90, 94, 105, 106, 108, 111, 120, 122, 123, 137, 159, 161, 178, 192, 203, 205, 254, 263, 265, 271, 274, 312, 314, 316, 317, 318, 329, 330, 347, 353, 360, 361, 370, 430, 439, 441, 442, 456, 478, 480, 502, 503, 504, 505, 512, 600, 602, 603, 608, 618, 631, 635, 650, 651, 659], "set_bit_gener": 7, "set_printopt": 7, "set_stat": 7, "setbufs": 7, "setdiff1d": 7, "seterr": 7, "seterrcal": 7, "setfield": [7, 184], "setflag": 7, "setup": 4, "setuptool": 4, "setxor1d": 7, "sever": [309, 616, 644], "shape": [4, 7, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 81, 82, 83, 84, 85, 88, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 121, 122, 148, 156, 160, 162, 173, 177, 178, 180, 200, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 239, 242, 243, 244, 245, 246, 247, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 282, 284, 285, 286, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299, 303, 304, 309, 310, 311, 312, 313, 315, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 440, 441, 467, 475, 479, 481, 492, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 512, 513, 515, 516, 518, 519, 525, 526, 527, 528, 529, 539, 542, 547, 548, 553, 557, 558, 559, 560, 561, 562, 563, 565, 570, 571, 577, 579, 580, 581, 583, 584, 585, 586, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 662], "share": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 447, 501, 502, 503, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 629, 631, 635, 643, 650, 651], "shared_bin": 265, "shares_memori": 7, "shift": [11, 66, 69, 217, 219, 220, 224, 225, 297, 591, 593], "short": [605, 638, 646, 659], "shortcut": 505, "shorter": [221, 227], "shorthand": [14, 15, 18, 64, 65, 66, 67, 68, 69, 70, 112, 207, 244, 260, 261, 277, 297, 298, 299, 338, 340, 345, 355, 358, 497, 500, 509, 510, 511, 585, 591, 617, 637, 649], "should": [26, 36, 37, 41, 44, 54, 81, 109, 111, 113, 122, 158, 203, 204, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 247, 250, 258, 263, 276, 293, 310, 313, 324, 345, 357, 360, 361, 364, 367, 369, 371, 441, 477, 505, 547, 580, 588, 589, 599, 610, 616, 620, 624, 626, 640, 642, 644, 646, 659], "show": [10, 43, 181, 234, 269, 341, 351, 359, 362, 363, 364, 367, 370, 568], "show_config": 7, "show_runtim": 7, "shown": 4, "shuffl": 7, "side": [158, 259, 307, 477, 599, 633], "sigma": [545, 552], "sign": [7, 11, 20, 62, 88, 184, 191, 278, 281, 303, 320, 355, 497, 509, 512, 585, 603, 618, 638], "signal": [11, 91, 218, 221, 226, 227, 229, 232, 605, 642], "signatur": [344, 345, 505, 646], "signbit": [7, 602], "signific": 203, "significantli": 62, "signum": 602, "similar": [3, 45, 46, 128, 159, 178, 257, 276, 302, 304, 311, 317, 327, 328, 330, 342, 344, 447, 478, 508, 526, 558, 631, 632, 635, 636], "simpl": [4, 341, 662], "simpli": [107, 173, 250, 263, 265, 296, 492], "sin": [0, 7, 31, 32, 51, 52, 92, 307, 351, 605, 606, 622, 628], "sinc": [7, 90, 161, 227, 305, 307, 480, 499, 641], "sine": [16, 17, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 604, 605, 606, 622, 623], "sing": 316, "singl": [10, 11, 38, 72, 73, 80, 90, 141, 162, 203, 204, 259, 276, 315, 324, 347, 353, 460, 481, 496, 512, 526, 527, 528, 529, 549, 557, 558, 559, 560, 561, 562, 563, 565, 571, 618, 624, 628, 646, 659], "singleton": [19, 24, 61, 211, 343, 349, 350, 364, 365, 366, 367, 369, 371, 584, 614, 616, 644], "singular": [309, 310, 314, 316, 318, 322, 323], "sinh": [7, 17, 30, 32, 52, 93, 604, 623], "sinu": 605, "size": [0, 7, 28, 36, 37, 41, 44, 61, 63, 74, 81, 82, 83, 94, 95, 98, 99, 106, 111, 141, 142, 159, 176, 178, 190, 193, 204, 213, 216, 218, 222, 232, 250, 257, 259, 266, 267, 268, 302, 304, 312, 316, 317, 319, 322, 324, 328, 329, 330, 342, 344, 347, 349, 353, 360, 361, 362, 363, 365, 368, 370, 460, 461, 478, 496, 502, 508, 512, 524, 526, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 589, 593, 597, 611, 614, 615, 618, 624, 635, 641, 642, 646, 647, 648, 650, 659], "skip": 109, "slice": [26, 27, 81, 104, 125, 213, 276, 360, 361, 364, 365, 367, 369, 371, 444, 515, 516, 600, 621, 628, 633, 635, 636, 659], "slogdet": [7, 303], "slower": [324, 624], "slowest": [138, 457, 579, 588], "small": [20, 212, 278, 310, 318, 334, 336, 337, 359, 635], "smaller": [110, 150, 216, 217, 219, 222, 223, 224, 226, 228, 229, 230, 231, 233, 235, 310, 355, 469, 508, 585, 642], "smallest": [235, 272, 316, 633, 639], "smallest_norm": 235, "smat": 322, "so": [11, 16, 17, 19, 24, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 61, 187, 192, 207, 221, 226, 242, 263, 276, 289, 324, 330, 337, 343, 349, 350, 351, 365, 366, 369, 371, 568, 584, 616, 624, 625, 644], "softwar": 4, "solut": [310, 321, 589], "solv": [7, 310, 325, 326, 662], "some": [28, 183, 192, 211, 213, 243, 266, 275, 310, 505, 508, 642, 649, 659], "sometim": [91, 262, 616, 644, 659], "somewhat": 313, "sophist": 313, "sort": [7, 26, 38, 44, 120, 150, 176, 267, 322, 350, 366, 439, 469, 507, 599, 609, 611, 621, 627, 628, 639, 647, 652, 659, 662], "sort_complex": 7, "sorter": [158, 477, 599], "sought": 301, "sourc": [4, 13, 19, 20, 21, 22, 24, 25, 26, 27, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 58, 59, 60, 61, 62, 63, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 141, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 202, 203, 204, 205, 206, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 274, 275, 276, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 495, 496, 499, 502, 503, 504, 505, 506, 508, 512, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 586, 587, 588, 589, 590, 593, 594, 595, 599, 600, 601, 607, 608, 609, 611, 614, 615, 616, 618, 619, 620, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651], "space": [7, 28, 218, 220, 232, 250, 257, 259, 330, 342, 628, 666], "spars": [274, 351], "speak": 316, "special": [2, 186, 208, 652, 662], "specif": [0, 4, 181, 183, 196, 251, 264, 266], "specifi": [19, 24, 25, 26, 28, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 61, 62, 73, 75, 81, 82, 83, 87, 97, 98, 99, 100, 101, 104, 105, 108, 109, 120, 132, 141, 171, 203, 204, 205, 206, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 239, 242, 249, 250, 251, 252, 254, 255, 257, 259, 271, 281, 283, 304, 306, 308, 316, 324, 325, 326, 327, 328, 329, 330, 331, 342, 343, 349, 350, 352, 362, 363, 365, 366, 368, 369, 370, 371, 439, 451, 460, 490, 501, 502, 503, 507, 508, 512, 515, 516, 526, 529, 543, 553, 571, 579, 580, 584, 587, 589, 593, 594, 595, 596, 600, 607, 615, 616, 618, 620, 621, 624, 626, 627, 628, 629, 633, 639, 641, 643, 644, 646, 650, 651], "spectrum": [11, 220, 221, 225, 226], "speed": 203, "speedup": 204, "spell": 499, "split": [7, 44, 82, 83, 176, 177, 267, 268, 597, 615, 641, 647, 648, 662], "spreadsheet": 243, "sqrt": [7, 11, 76, 140, 154, 369, 459, 473, 584, 598, 613, 616], "squar": [7, 76, 269, 271, 300, 301, 305, 306, 307, 309, 310, 313, 320, 325, 326, 344, 369, 371, 534, 550, 583, 584, 598, 600, 612, 616, 632, 636, 643, 644], "squeez": [7, 211, 659], "src": 89, "stabil": [38, 120, 161, 439, 480, 608], "stabl": [38, 120, 161, 439, 480, 608], "stack": [7, 80, 82, 83, 177, 268, 303, 304, 311, 312, 314, 318, 319, 320, 321, 323, 327, 345, 346, 499, 597, 611, 621, 641, 648], "stai": 79, "stand": 259, "standard": [2, 20, 141, 163, 235, 244, 247, 349, 355, 365, 369, 371, 460, 482, 527, 529, 545, 552, 559, 568, 569, 570, 571, 572, 585, 616, 644, 652, 659, 662], "standard_cauchi": 7, "standard_exponenti": 7, "standard_gamma": 7, "standard_norm": [7, 524, 527, 559], "standard_t": 7, "start": [2, 3, 28, 48, 50, 204, 218, 222, 232, 249, 257, 330, 342, 344, 589, 594, 631, 635], "start_tim": 0, "stat_length": 505, "state": 521, "statist": [369, 371, 505, 616, 644, 652, 662], "std": [7, 349, 365, 369, 371, 644, 659], "stdev": [529, 571], "step": [4, 28, 204, 257, 262, 330, 342], "sticki": [178, 187], "still": [61, 267, 316, 616, 633, 647], "stop": [28, 257, 330, 342], "store": [236, 257, 286, 287, 327, 330, 337, 342, 345, 504, 646], "str": [47, 49, 62, 82, 83, 197, 203, 204, 250, 253, 268, 281, 331, 431, 505, 587, 597, 615, 648], "str_": [183, 184, 190, 194], "straightforward": 274, "stream": [171, 490], "strictli": 316, "stride": [53, 54, 114, 122, 441], "string": [28, 41, 45, 46, 47, 48, 49, 50, 54, 62, 64, 65, 66, 67, 68, 69, 70, 87, 105, 106, 108, 122, 128, 171, 178, 181, 184, 191, 196, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 277, 297, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 505, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 591, 629, 631, 633, 635, 643, 650, 651, 659], "string_repr": 204, "stringio": 331, "strongli": [4, 625], "struct": [178, 187], "structur": [178, 188, 331], "student": 572, "style": [54, 122, 441, 499, 505, 579, 580, 640], "sub": [44, 82, 83, 104, 109, 176, 186, 195, 196, 198, 200, 203, 267, 268, 326, 327, 597, 611, 615, 626, 629, 641, 647, 648], "subarrai": [104, 180, 183, 274, 639], "subclass": [46, 587], "subdiagon": [304, 327], "subdivid": 178, "subdtyp": 180, "subject": 4, "subok": [14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 41, 51, 52, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 84, 85, 87, 88, 92, 93, 102, 103, 112, 122, 206, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 255, 256, 260, 261, 262, 269, 277, 282, 284, 285, 295, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 348, 354, 355, 358, 441, 497, 498, 500, 503, 509, 510, 511, 513, 518, 519, 583, 585, 591, 592, 598, 602, 603, 604, 606, 610, 612, 613, 617, 622, 623, 637, 638, 646, 651], "subscript": [203, 204], "subset": [3, 259, 614, 662], "subtract": [7, 505], "subtyp": 579, "succeed": 202, "success": [47, 532, 540, 549], "suffici": 62, "sugar": [107, 632, 636], "suggest": 109, "suit": 4, "suitabl": [39, 141, 173, 460, 492, 516, 589, 599, 621], "sum": [0, 3, 4, 7, 11, 18, 27, 61, 63, 97, 99, 100, 101, 105, 108, 109, 110, 113, 130, 172, 203, 222, 263, 264, 266, 269, 275, 301, 310, 311, 316, 324, 325, 327, 336, 337, 343, 345, 362, 363, 369, 370, 371, 449, 491, 532, 547, 549, 584, 616, 624, 626, 628, 644, 646, 659, 662], "sum_": [11, 316, 328, 646], "sum_along_diagon": 626, "sum_i": [616, 644], "sum_n": 91, "sum_of_weight": 61, "summari": 652, "summat": [113, 203, 204, 275, 324, 326, 345, 504, 624, 646], "superdiagon": [304, 327], "suppli": [221, 226, 315, 505, 527, 559], "support": [3, 4, 10, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 84, 85, 87, 88, 92, 93, 95, 102, 103, 112, 122, 159, 192, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 269, 271, 276, 277, 282, 284, 285, 295, 296, 297, 298, 299, 302, 304, 311, 317, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 347, 348, 349, 353, 354, 355, 356, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 441, 478, 497, 498, 500, 502, 503, 506, 509, 510, 511, 512, 513, 514, 517, 518, 519, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 585, 587, 591, 592, 598, 602, 603, 604, 608, 610, 612, 613, 616, 617, 618, 622, 623, 633, 637, 638, 644, 646, 650, 651, 666], "sure": 587, "surnam": 178, "surpris": [222, 223, 224], "svd": [7, 301, 309, 314, 318, 323], "svdval": 7, "swap": [181, 196, 217, 220, 619], "swapax": [7, 357, 659], "swapped_cod": [181, 196], "swapped_dt": 196, "sy": [181, 196], "sycl": [0, 3, 28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "sycl_devic": [171, 490], "sycl_queu": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 114, 128, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 447, 501, 502, 503, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "sycldevic": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 522, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "syclqueu": [28, 41, 45, 46, 47, 48, 49, 50, 54, 87, 105, 106, 108, 122, 128, 171, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 441, 447, 490, 501, 502, 503, 520, 523, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 629, 631, 635, 643, 650, 651], "sycltim": [171, 490], "symmetr": [221, 227, 229, 230, 300, 305, 306, 307, 308, 314, 318, 322, 505], "symmetri": [11, 216, 221, 226, 227, 230], "synchron": [171, 490], "syntact": [107, 632, 636], "syntax": 659, "sys_is_l": [181, 196], "system": [3, 4, 62, 321], "t": [11, 82, 83, 95, 173, 186, 221, 283, 300, 305, 307, 310, 492, 499, 572, 579, 628], "t1": 666, "tabl": [2, 10, 312, 329, 652], "tack": 200, "take": [7, 27, 80, 81, 213, 293, 344, 508, 516, 579, 588, 599, 600, 605, 621, 639, 642, 659, 666], "take_along_axi": [7, 36, 37, 38, 78, 516, 620], "taken": [61, 109, 110, 202, 204, 221, 227, 228, 229, 230, 231, 233, 262, 263, 345, 369, 371, 600, 616, 626, 629, 631, 635, 644, 645, 646], "tall": 234, "talli": 264, "tan": [7, 31, 33, 34, 35, 51, 55, 56, 57, 92, 604, 623], "tangent": [16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 604, 606, 622, 623], "tanh": [7, 17, 30, 35, 57, 93, 606, 622], "target": [54, 75, 122, 171, 248, 441, 490, 515], "tau": 319, "tbb": 4, "tempfil": 250, "temporari": [250, 666], "temporaryfil": 250, "ten": 540, "tensor": [49, 114, 171, 203, 204, 248, 324, 325, 326, 360, 361, 364, 367, 368, 490, 514, 624], "tensordot": [7, 113, 203, 275, 325, 326, 345, 504], "tensorinv": [7, 326], "tensorsolv": [7, 325], "term": [11, 18, 112, 204, 216, 217, 219, 222, 223, 224, 227, 230, 358, 617, 637], "test": [0, 2, 19, 20, 24, 207, 260, 261, 279, 281, 282, 284, 285, 286, 287, 298, 299, 368, 499, 500, 532, 659, 662], "test_repetit": 0, "test_typ": 0, "teukolski": 11, "text": [91, 249, 250, 252, 253, 331], "th": [99, 101, 105, 108, 110, 173, 202, 214, 259, 274, 350, 366, 492, 501, 507, 600, 627, 630, 632, 634, 636], "than": [26, 27, 41, 66, 69, 81, 98, 99, 100, 101, 143, 150, 176, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 240, 241, 244, 251, 260, 261, 263, 265, 268, 297, 298, 299, 310, 314, 318, 319, 324, 327, 362, 363, 368, 370, 462, 469, 499, 505, 508, 512, 589, 591, 600, 602, 614, 615, 616, 618, 624, 626, 638, 642, 666], "thei": [18, 20, 34, 43, 56, 64, 66, 68, 69, 70, 88, 112, 185, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 278, 283, 295, 296, 297, 298, 299, 307, 310, 324, 336, 337, 338, 340, 341, 348, 354, 355, 358, 498, 500, 510, 511, 585, 591, 597, 599, 617, 624, 628, 631, 635, 637, 642, 643, 648, 659], "them": [80, 314, 318, 659], "theor": 305, "theoret": 204, "therefor": [64, 70, 216, 230, 251, 306, 308, 589], "theta": 628, "thi": [11, 14, 15, 21, 22, 25, 26, 27, 28, 34, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 53, 54, 56, 79, 81, 82, 83, 87, 90, 91, 94, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 114, 120, 122, 128, 133, 135, 138, 141, 150, 156, 161, 171, 173, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 202, 203, 204, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 264, 265, 268, 280, 283, 289, 293, 302, 304, 306, 308, 310, 311, 312, 315, 316, 317, 320, 323, 327, 328, 329, 330, 331, 334, 336, 337, 342, 343, 344, 345, 347, 350, 353, 355, 357, 359, 360, 361, 364, 366, 367, 368, 369, 370, 371, 439, 441, 447, 452, 454, 457, 460, 469, 475, 480, 490, 492, 499, 505, 508, 512, 515, 516, 563, 565, 579, 584, 585, 587, 588, 589, 594, 595, 597, 608, 615, 616, 618, 620, 621, 625, 628, 632, 636, 639, 641, 642, 643, 644, 646, 648, 649], "thing": 620, "think": [505, 588], "third": [80, 82, 83, 96, 176, 177, 217, 268, 324, 597, 611, 615, 624, 648], "those": [11, 26, 79, 90, 104, 313, 516], "though": 222, "thousand": 540, "three": [58, 59, 60, 211, 313, 324, 344, 520, 566, 624, 639], "threshold": 314, "through": [46, 194, 265, 293, 305, 307, 310, 344, 587, 659], "throw": 547, "thu": [11, 221, 227, 229, 625], "tile": [7, 586, 662], "time": [0, 11, 18, 20, 34, 42, 43, 56, 64, 66, 68, 69, 70, 88, 91, 110, 112, 113, 207, 217, 219, 221, 223, 224, 226, 228, 229, 231, 233, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 275, 276, 278, 294, 295, 296, 297, 298, 299, 310, 314, 318, 324, 336, 337, 338, 340, 341, 348, 354, 355, 358, 369, 371, 498, 500, 505, 510, 511, 532, 547, 585, 591, 595, 605, 616, 617, 621, 624, 625, 637, 639, 644, 645], "time_dpnp": 0, "time_numpi": 0, "timedelta": 191, "timeit": 203, "timer": [171, 490], "timestep": 218, "tini": 235, "titl": 184, "tm": 247, "to_begin": 202, "to_devic": 7, "to_end": 202, "tobyt": 7, "todo": 550, "tofil": [7, 250], "togeth": [20, 82, 83, 187, 222, 278, 293, 615, 649], "tol": [314, 548, 582], "toler": [20, 42, 278, 314, 582], "tolist": 7, "too": [4, 217, 219, 223, 224, 228, 229, 231, 233, 649], "toolkit": 3, "tostr": 7, "total": [7, 94, 98, 100, 147, 466, 589, 607, 616, 644], "toward": [40, 77, 236, 243, 244, 263, 265, 355, 498, 585, 592, 595, 596, 616, 638, 644], "trace": [7, 105, 108, 109, 203, 659], "traceback": [25, 63, 614], "transfer": [171, 490], "transform": [204, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 652, 662], "transpos": [7, 39, 90, 115, 143, 203, 283, 300, 307, 346, 357, 373, 462, 507, 659, 662], "trapezoid": [7, 99, 101, 618], "trapz": 7, "treat": [20, 90, 104, 221, 227, 229, 250, 259, 276, 278, 306, 308, 310, 315, 321, 331, 350, 362, 363, 366, 368, 370, 512, 516, 599, 621, 625, 639, 642, 659], "treatment": 292, "tri": 7, "trial": 532, "triangl": [105, 269, 344, 584, 629, 630, 631, 632, 634, 635, 636], "triangular": [7, 300, 306, 308, 319, 344, 631, 632, 635, 636], "trigonometr": [16, 17, 23, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 92, 93, 604, 606, 622, 623, 662], "tril": [7, 105, 344, 629, 631, 632, 635], "tril_indic": [7, 344, 632, 635], "tril_indices_from": [7, 636], "trili": 632, "trili1": 632, "trim": [217, 219, 223, 224, 228, 229, 231, 233, 633], "trim_zero": 7, "triu": [7, 105, 344, 629, 631, 635, 636], "triu_indic": [7, 344, 631, 636], "triu_indices_from": [7, 632], "triui": 636, "triuim1": 636, "trivial": [305, 621], "true": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 81, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 102, 103, 111, 112, 116, 117, 120, 122, 128, 144, 145, 146, 151, 161, 163, 165, 175, 178, 181, 192, 196, 203, 204, 207, 209, 210, 211, 212, 213, 215, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 260, 261, 262, 263, 264, 266, 269, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 309, 312, 314, 316, 318, 319, 321, 322, 324, 326, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 378, 435, 436, 439, 441, 447, 463, 464, 465, 470, 480, 482, 484, 494, 497, 498, 499, 500, 508, 509, 510, 511, 512, 513, 516, 518, 519, 535, 583, 584, 585, 587, 588, 591, 592, 598, 600, 602, 603, 604, 606, 608, 610, 612, 613, 616, 617, 618, 621, 622, 623, 624, 628, 637, 638, 639, 641, 643, 644, 646, 649], "true_divid": [7, 112], "trunc": [7, 40, 77, 236, 243, 592, 596], "truncat": [40, 77, 81, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 243, 568, 592, 596, 638], "trust": [360, 361], "truth": [64, 65, 67, 68, 70, 207, 260, 261, 277, 298, 299, 338, 339, 340, 341, 500, 659, 662], "try": [4, 47], "tukei": 11, "tup": [80, 177, 268, 597, 648], "tupl": [19, 24, 25, 26, 27, 36, 37, 41, 45, 46, 47, 48, 50, 61, 72, 73, 74, 87, 94, 97, 105, 106, 107, 108, 141, 159, 173, 178, 184, 198, 200, 204, 211, 220, 225, 239, 248, 251, 254, 255, 257, 259, 263, 265, 266, 268, 274, 280, 281, 289, 293, 294, 316, 319, 326, 329, 330, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 364, 365, 366, 367, 368, 369, 370, 371, 460, 478, 492, 496, 499, 501, 505, 507, 512, 580, 584, 586, 588, 589, 593, 597, 601, 614, 615, 616, 618, 625, 627, 631, 632, 635, 636, 640, 641, 643, 644, 646, 648, 659], "turn": 80, "twister": 520, "two": [11, 20, 27, 42, 58, 59, 62, 64, 65, 67, 68, 70, 86, 90, 91, 96, 108, 109, 110, 113, 133, 143, 150, 166, 178, 184, 203, 204, 211, 216, 217, 219, 222, 223, 224, 227, 228, 229, 231, 233, 245, 246, 259, 264, 275, 277, 278, 294, 296, 304, 306, 310, 312, 315, 317, 321, 323, 324, 327, 338, 340, 341, 345, 346, 347, 348, 350, 353, 354, 357, 364, 366, 367, 452, 462, 469, 485, 504, 505, 527, 559, 579, 592, 595, 596, 600, 619, 624, 626, 631, 632, 635, 636, 645], "type": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 128, 134, 138, 141, 148, 156, 160, 161, 171, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 440, 441, 447, 453, 457, 460, 467, 475, 479, 480, 490, 492, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 662], "type_nam": 0, "typeerror": [61, 63, 89, 159, 248, 296, 478], "typenam": 7, "typestr": 199, "typic": [20, 221, 278, 599, 659], "u": [191, 300, 306, 308, 322, 344, 368, 370, 639], "u1": [178, 249, 250], "u16": 183, "u4": 75, "u8": 178, "ufunc": [2, 27, 652, 659], "uint64": 178, "uint8": [178, 249, 250], "uk": 11, "un": 193, "unalt": 505, "unari": 659, "unbias": [369, 371, 616, 644], "unchang": 233, "undefin": [23, 150, 350, 366, 469, 505], "under": [312, 329], "underli": [64, 68, 70, 579, 588], "undo": [11, 224], "undocu": 192, "unexpect": [368, 370], "unicod": [184, 191], "uniform": [7, 192, 259, 263, 265, 342, 525, 526, 528, 557, 560, 562, 563, 565], "uniformli": [342, 530, 574], "uniniti": [41, 205, 206, 254, 502, 650], "union1d": 7, "uniqu": [7, 61, 63, 91, 97, 111, 182, 197, 343, 349, 357, 365, 369, 371, 505, 584, 586, 616, 644], "unique_al": 7, "unique_count": [7, 639], "unique_indic": 639, "unique_invers": [7, 639], "unique_valu": 7, "unit": [164, 218, 232, 293, 305, 313, 320, 483], "unitari": [11, 259, 319, 322], "uniti": 263, "univ": 11, "univers": [2, 316, 652, 659], "unless": [19, 24, 54, 98, 99, 100, 101, 122, 203, 263, 305, 314, 316, 342, 362, 363, 368, 370, 441, 512, 618, 639, 646], "unlik": [91, 156, 159, 232, 475, 478], "unmodifi": 265, "unpackbit": 7, "unravel": 640, "unravel_index": [7, 36, 37, 580], "unraveled_coord": 640, "unsaf": [54, 75, 82, 83, 89, 122, 203, 268, 345, 441, 597, 615, 646, 648], "unscal": 11, "unsign": [178, 191, 281, 512, 618], "unspecifi": 588, "unstack": [7, 268, 597, 615, 648], "unsupport": [14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 88, 92, 93, 102, 103, 112, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 248, 256, 262, 269, 277, 295, 296, 297, 333, 334, 335, 336, 337, 348, 354, 355, 356, 358, 497, 498, 509, 510, 511, 513, 518, 519, 583, 585, 591, 592, 598, 602, 603, 604, 606, 610, 617, 622, 623, 637, 638], "until": [204, 593, 594], "unwrap": [7, 102, 518], "up": [4, 11, 181, 203, 241, 248, 621, 632, 639], "upcast": 41, "updat": 4, "uplo": [306, 308], "upon": [164, 483], "upper": [105, 214, 263, 265, 266, 300, 306, 308, 319, 344, 629, 631, 632, 634, 635, 636], "url": 4, "us": [4, 11, 18, 20, 25, 26, 28, 34, 38, 39, 41, 45, 46, 47, 48, 49, 50, 53, 54, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 83, 87, 90, 91, 96, 98, 99, 100, 101, 104, 105, 106, 108, 109, 112, 120, 122, 128, 138, 159, 161, 178, 185, 186, 188, 192, 194, 203, 204, 205, 206, 207, 211, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 271, 274, 275, 277, 283, 293, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 310, 314, 315, 316, 318, 324, 327, 330, 331, 337, 338, 340, 342, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 380, 439, 441, 447, 457, 478, 480, 497, 499, 500, 501, 502, 503, 505, 508, 509, 510, 511, 512, 516, 520, 522, 523, 524, 530, 533, 535, 536, 546, 551, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 571, 574, 579, 582, 585, 586, 587, 588, 589, 591, 593, 599, 600, 602, 605, 608, 609, 616, 617, 618, 620, 621, 624, 625, 626, 628, 629, 631, 632, 635, 636, 637, 639, 640, 643, 644, 646, 649, 650, 651, 659, 666], "usabl": 242, "usag": [3, 4, 218, 232], "use_getitem": 185, "use_setitem": 185, "user": [185, 188, 359, 505], "usm": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 128, 205, 206, 214, 218, 232, 248, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 447, 501, 502, 503, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 614, 629, 631, 635, 643, 650, 651], "usm_ndarrai": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 122, 135, 139, 176, 177, 202, 203, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 441, 454, 458, 495, 497, 498, 499, 500, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 651], "usm_typ": [28, 41, 45, 46, 47, 48, 49, 50, 87, 105, 106, 108, 114, 128, 205, 206, 214, 218, 232, 249, 250, 251, 252, 253, 254, 255, 257, 271, 274, 330, 331, 342, 344, 352, 447, 501, 502, 503, 524, 525, 526, 527, 528, 529, 530, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 629, 631, 635, 643, 650, 651], "usual": [106, 159, 184, 270, 311, 345, 478], "util": [5, 13, 652], "v": [86, 91, 105, 108, 158, 191, 305, 306, 328, 350, 366, 477, 515, 599, 646], "v0": 7, "v10": 178, "v13": 7, "v2": 7, "v_": 91, "v_sort": [350, 366], "val": [152, 234, 430, 471, 508], "valid": [91, 211, 344, 619, 631, 632, 635, 636], "valu": [11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 84, 85, 87, 88, 89, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 105, 110, 111, 112, 118, 119, 120, 122, 124, 128, 135, 137, 150, 152, 159, 161, 192, 196, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 221, 222, 227, 229, 230, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 273, 274, 276, 277, 278, 280, 281, 282, 284, 285, 288, 289, 293, 295, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 316, 318, 320, 321, 322, 323, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 438, 439, 441, 443, 447, 454, 456, 469, 471, 478, 480, 497, 498, 499, 500, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 525, 526, 530, 540, 557, 558, 574, 581, 583, 584, 585, 586, 587, 588, 591, 592, 593, 596, 598, 599, 600, 602, 603, 604, 605, 608, 610, 612, 613, 616, 617, 618, 620, 621, 622, 623, 626, 628, 631, 633, 635, 637, 638, 639, 642, 644, 646, 649, 650, 651, 659, 662], "value2": 192, "valueerror": [25, 41, 46, 47, 143, 248, 316, 360, 361, 462, 588, 611, 614], "van": 316, "vander": 7, "vandermond": 643, "var": [7, 349, 365, 369, 371, 616, 659], "vararg": 259, "vari": [11, 13, 19, 23, 24, 109, 204, 217, 219, 221, 222, 223, 224, 226, 227, 230, 233, 251, 264, 274, 283, 301, 304, 305, 306, 310, 312, 316, 359, 365, 369, 371, 579, 582, 605], "variabl": [63, 90, 95, 310, 321, 369, 371], "varianc": [175, 349, 365, 369, 371, 494, 616, 644, 662], "variant": [616, 644], "variou": [316, 605, 666], "vc": 91, "vdot": [7, 113, 328, 345, 646], "vecdot": [7, 645], "vecmat": 7, "vector": [96, 203, 251, 274, 275, 293, 301, 302, 311, 314, 315, 316, 317, 321, 322, 323, 328, 329, 345, 350, 351, 366, 504, 505, 645, 646, 662], "vector_norm": [7, 316], "vendor": 4, "veri": [3, 11, 20, 276, 278, 317, 351, 359, 504], "verif": 0, "verifi": 300, "version": [4, 5, 94, 96, 109, 137, 238, 345, 350, 366, 456, 499, 504, 580, 626, 640, 645, 646], "vertic": [80, 82, 83, 109, 177, 234, 239, 240, 264, 268, 304, 595, 597, 611, 615, 647, 648], "vetterlin": 11, "vh": 322, "via": [5, 227, 248], "view": [7, 44, 58, 59, 60, 71, 105, 109, 115, 143, 156, 171, 173, 176, 211, 217, 219, 223, 224, 228, 229, 231, 233, 239, 240, 241, 248, 267, 351, 357, 373, 462, 475, 490, 492, 507, 516, 579, 580, 588, 595, 611, 614, 619, 627, 640, 647], "violat": 89, "void": [178, 191], "void640": 193, "von": 575, "vonmis": 7, "vsplit": [7, 82, 83, 611], "vstack": [7, 80, 82, 83, 177, 268, 310, 597, 611, 615], "w": [11, 61, 63, 305, 306, 307, 308, 313, 587], "w_i": [264, 266], "wa": [11, 97, 192, 315, 343, 364, 367, 369, 371, 529, 571, 584, 588, 616, 644], "wai": [3, 4, 11, 150, 204, 216, 222, 223, 224, 229, 250, 324, 469, 624], "wald": 7, "walk": 194, "want": [4, 283, 621], "warn": [183, 360, 361, 548, 589], "we": [87, 90, 106, 109, 204, 234, 310, 344, 516, 621, 628], "weibul": [7, 578], "weigh": [264, 266], "weight": [61, 63, 95, 263, 264, 265, 266, 349, 365, 618], "well": [5, 192, 203, 250, 263, 265, 512, 532, 549, 568], "were": [82, 83, 251, 527, 559, 615, 616, 642, 644], "what": [11, 54, 75, 82, 83, 89, 122, 178, 186, 203, 207, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 268, 279, 345, 441, 532, 549, 597, 615, 646, 648, 659], "when": [11, 25, 28, 38, 41, 42, 45, 46, 48, 50, 53, 54, 61, 62, 81, 87, 89, 91, 111, 120, 122, 161, 187, 203, 216, 227, 229, 230, 245, 246, 248, 257, 262, 264, 276, 305, 311, 316, 319, 323, 324, 330, 337, 342, 344, 345, 350, 355, 362, 363, 364, 366, 367, 368, 370, 439, 441, 480, 579, 585, 589, 592, 594, 596, 600, 608, 616, 620, 624, 628, 639, 644, 646, 649, 666], "whenev": [211, 507, 619, 627], "where": [0, 7, 11, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 84, 85, 87, 88, 89, 91, 92, 93, 96, 97, 102, 103, 105, 106, 108, 110, 111, 112, 116, 117, 122, 128, 144, 145, 146, 151, 158, 163, 165, 175, 176, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 221, 227, 228, 229, 232, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 267, 269, 270, 271, 274, 275, 277, 278, 279, 280, 282, 284, 285, 288, 289, 295, 296, 297, 298, 299, 300, 304, 310, 314, 319, 322, 323, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353, 354, 355, 358, 364, 365, 366, 367, 368, 369, 370, 371, 435, 436, 441, 447, 463, 464, 465, 470, 477, 482, 484, 494, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 579, 583, 584, 585, 589, 591, 592, 594, 598, 599, 600, 602, 603, 604, 606, 610, 611, 612, 613, 616, 617, 618, 622, 623, 626, 627, 629, 631, 635, 637, 638, 642, 643, 644, 646, 647, 650, 651], "wherev": 89, "whether": [19, 20, 24, 27, 42, 97, 100, 101, 111, 186, 187, 189, 248, 278, 279, 281, 283, 292, 300, 319, 330, 359, 368, 370, 580, 603, 639, 640, 659], "which": [3, 4, 5, 11, 18, 19, 20, 24, 25, 26, 27, 28, 34, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 54, 56, 61, 63, 64, 66, 68, 69, 70, 71, 81, 82, 83, 87, 88, 89, 91, 94, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 120, 122, 128, 141, 161, 184, 187, 203, 204, 205, 206, 207, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 268, 269, 271, 274, 276, 282, 284, 285, 286, 287, 295, 296, 297, 298, 299, 300, 302, 304, 305, 312, 314, 316, 323, 326, 327, 328, 329, 331, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 439, 441, 447, 460, 480, 498, 499, 500, 501, 502, 503, 507, 510, 511, 512, 515, 520, 552, 557, 558, 559, 560, 561, 562, 563, 565, 571, 574, 580, 584, 585, 586, 589, 591, 593, 600, 607, 608, 611, 614, 615, 616, 617, 618, 620, 626, 627, 628, 629, 630, 631, 633, 634, 635, 637, 638, 641, 642, 643, 644, 646, 649, 650, 651, 659, 666], "whichev": 275, "while": [11, 90, 231, 233, 263, 265, 349, 365, 366, 369, 371, 499, 508, 512, 593, 616, 618, 629, 644], "whitespac": [250, 253], "whole": [217, 219, 223, 224, 228, 229, 231, 233, 631, 635], "whose": [14, 15, 16, 17, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 109, 200, 213, 214, 234, 301, 304, 306, 307, 308, 312, 323, 325, 327, 344, 346, 357, 593, 632, 636, 640], "why": 227, "wide": 234, "width": [62, 65, 67, 193, 263, 265, 277, 505], "wiki": 91, "wikipedia": 91, "wild": [532, 549], "window": [4, 218, 232], "wise": [14, 15, 16, 17, 18, 20, 23, 29, 30, 31, 32, 33, 34, 35, 40, 42, 51, 52, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 76, 77, 80, 82, 83, 84, 85, 88, 90, 92, 93, 97, 112, 127, 177, 207, 209, 210, 212, 215, 236, 242, 243, 244, 245, 246, 247, 260, 261, 262, 267, 268, 269, 273, 277, 278, 282, 284, 285, 286, 287, 296, 297, 298, 299, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 348, 353, 354, 355, 356, 358, 364, 367, 368, 446, 497, 498, 500, 509, 510, 511, 513, 581, 583, 585, 591, 592, 596, 597, 598, 602, 603, 604, 605, 606, 611, 612, 613, 615, 617, 622, 623, 637, 638, 647, 648, 652, 659, 662, 666], "wish": 659, "within": [20, 28, 42, 54, 122, 203, 221, 222, 223, 224, 226, 227, 229, 263, 265, 278, 441, 515, 522, 523, 530, 574], "without": [109, 173, 205, 234, 492, 579, 588, 589, 616, 659], "won": 186, "word": [222, 223, 224, 227, 229, 243, 307, 530, 574], "work": [4, 40, 53, 81, 141, 460, 621, 659], "world": [178, 532, 549], "would": [38, 82, 83, 120, 150, 161, 178, 251, 274, 315, 344, 345, 439, 469, 480, 507, 530, 580, 608, 611, 615, 616, 621, 627, 642, 646], "wrap": [102, 152, 170, 234, 471, 489, 505, 515, 516, 518, 580, 599, 620, 621, 642], "wrapper": 114, "writabl": 587, "write": [105, 109, 138, 234, 250, 457, 588], "writeabl": 587, "written": [4, 94, 97, 234, 250, 283, 343, 584, 649], "x": [0, 3, 4, 14, 15, 16, 17, 19, 23, 24, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 59, 60, 63, 65, 67, 71, 73, 76, 77, 84, 85, 87, 88, 90, 92, 93, 95, 96, 97, 100, 101, 102, 103, 105, 108, 110, 111, 122, 128, 140, 141, 148, 154, 159, 160, 171, 176, 178, 179, 180, 182, 183, 185, 193, 195, 200, 202, 205, 206, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 231, 232, 233, 236, 237, 238, 243, 248, 249, 250, 251, 252, 254, 255, 257, 259, 264, 266, 267, 270, 271, 273, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 296, 301, 302, 304, 307, 310, 312, 316, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 351, 352, 356, 357, 359, 369, 371, 441, 447, 459, 460, 467, 473, 478, 479, 490, 497, 499, 501, 502, 503, 509, 512, 513, 514, 518, 519, 548, 554, 579, 581, 583, 584, 586, 587, 592, 593, 594, 596, 598, 600, 602, 603, 604, 605, 606, 610, 611, 612, 613, 614, 619, 620, 622, 623, 628, 629, 638, 641, 643, 647, 649, 650, 651], "x0": [48, 50, 87, 108, 503, 643, 651], "x00": 250, "x01": [249, 250], "x02": [249, 250], "x03": [249, 250], "x04": [249, 250], "x05": 249, "x1": [18, 20, 23, 31, 33, 34, 42, 43, 51, 54, 55, 56, 64, 66, 68, 69, 70, 78, 88, 112, 122, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 293, 295, 296, 297, 298, 299, 302, 311, 317, 328, 336, 337, 338, 339, 340, 341, 345, 348, 351, 354, 355, 356, 358, 441, 497, 498, 500, 506, 509, 510, 511, 517, 567, 585, 591, 593, 617, 637, 646], "x1_i": [18, 34, 56, 64, 66, 68, 69, 70, 88, 112, 207, 242, 244, 247, 260, 261, 269, 297, 298, 299, 336, 337, 338, 340, 341, 355, 358, 500, 510, 511, 585, 591, 617, 637], "x2": [18, 19, 20, 23, 24, 31, 33, 34, 41, 42, 43, 51, 55, 56, 64, 66, 68, 69, 70, 88, 112, 207, 242, 244, 245, 246, 247, 256, 260, 261, 262, 269, 293, 295, 296, 297, 298, 299, 302, 311, 317, 328, 336, 337, 338, 339, 340, 341, 345, 348, 351, 354, 355, 358, 497, 498, 500, 509, 510, 511, 585, 591, 593, 612, 617, 637, 646], "x2_i": [18, 34, 56, 64, 66, 68, 69, 70, 88, 112, 207, 242, 244, 247, 260, 261, 269, 297, 298, 299, 336, 337, 338, 340, 341, 355, 358, 500, 510, 511, 585, 591, 617, 637], "x3": [19, 24, 242], "x_edg": 264, "x_i": [14, 15, 16, 17, 23, 29, 30, 31, 32, 33, 35, 51, 52, 55, 57, 65, 67, 76, 77, 84, 85, 92, 93, 209, 210, 212, 243, 264, 266, 273, 277, 332, 333, 334, 335, 339, 497, 509, 513, 581, 583, 592, 596, 598, 602, 603, 604, 606, 612, 613, 622, 623, 638], "xarr": 90, "xedg": 264, "xi": [335, 351], "xn": [293, 351], "xor": [64, 65, 67, 68, 70, 277, 338, 339, 340, 341], "xv": 351, "xx": 351, "xy": 351, "y": [0, 4, 16, 17, 28, 29, 30, 31, 32, 33, 35, 41, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 71, 87, 90, 95, 96, 108, 128, 148, 156, 159, 171, 178, 202, 205, 206, 211, 214, 218, 232, 248, 249, 250, 251, 252, 254, 255, 257, 259, 264, 271, 286, 287, 292, 301, 302, 310, 330, 331, 342, 351, 352, 356, 359, 447, 467, 475, 478, 490, 501, 502, 503, 587, 628, 629, 643, 649, 650, 651], "y1": 296, "y2": 296, "y_edg": 264, "y_i": [264, 266], "yarr": 90, "yedg": 264, "yet": [4, 7], "yield": [16, 17, 29, 30, 31, 32, 33, 35, 38, 51, 52, 55, 57, 368, 370, 499, 505, 530, 649, 659], "you": [4, 91, 109, 221, 226, 227, 283, 344, 350, 366, 588, 620, 621, 659, 666], "your": [4, 109, 666], "yv": 351, "yy": 351, "z": [16, 17, 19, 24, 28, 29, 30, 31, 32, 33, 35, 41, 45, 46, 47, 48, 50, 51, 52, 55, 57, 87, 96, 108, 171, 205, 206, 214, 218, 232, 249, 250, 251, 252, 254, 255, 257, 271, 330, 331, 342, 351, 352, 490, 501, 502, 503, 540, 629, 643, 650, 651], "z_i": 266, "zero": [7, 11, 19, 23, 24, 38, 39, 40, 41, 66, 77, 91, 94, 96, 97, 106, 110, 148, 149, 159, 160, 164, 205, 206, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 243, 250, 254, 255, 271, 273, 279, 280, 286, 287, 288, 289, 297, 305, 306, 308, 310, 313, 314, 318, 322, 324, 343, 344, 347, 349, 353, 357, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 467, 468, 478, 479, 483, 495, 499, 502, 503, 505, 512, 528, 532, 560, 562, 563, 565, 581, 582, 584, 589, 592, 596, 602, 608, 616, 618, 624, 629, 630, 633, 634, 638, 644, 649, 651], "zeros_lik": [7, 41, 103, 206, 255, 350, 503, 519, 650], "zipf": 7}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Array API standard compatibility", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.__array_namespace_info__", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.apply_over_axes", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.compress", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.cumulative_prod", "dpnp.cumulative_sum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dpnp_array.dpnp_array.T", "dpnp.dpnp_array.dpnp_array.all", "dpnp.dpnp_array.dpnp_array.any", "dpnp.dpnp_array.dpnp_array.argmax", "dpnp.dpnp_array.dpnp_array.argmin", "dpnp.dpnp_array.dpnp_array.argsort", "dpnp.dpnp_array.dpnp_array.asnumpy", "dpnp.dpnp_array.dpnp_array.astype", "dpnp.dpnp_array.dpnp_array.choose", "dpnp.dpnp_array.dpnp_array.clip", "dpnp.dpnp_array.dpnp_array.compress", "dpnp.dpnp_array.dpnp_array.conj", "dpnp.dpnp_array.dpnp_array.conjugate", "dpnp.dpnp_array.dpnp_array.copy", "dpnp.dpnp_array.dpnp_array.cumprod", "dpnp.dpnp_array.dpnp_array.cumsum", "dpnp.dpnp_array.dpnp_array.device", "dpnp.dpnp_array.dpnp_array.diagonal", "dpnp.dpnp_array.dpnp_array.dot", "dpnp.dpnp_array.dpnp_array.dtype", "dpnp.dpnp_array.dpnp_array.fill", "dpnp.dpnp_array.dpnp_array.flags", "dpnp.dpnp_array.dpnp_array.flat", "dpnp.dpnp_array.dpnp_array.flatten", "dpnp.dpnp_array.dpnp_array.get_array", "dpnp.dpnp_array.dpnp_array.imag", "dpnp.dpnp_array.dpnp_array.item", "dpnp.dpnp_array.dpnp_array.itemsize", "dpnp.dpnp_array.dpnp_array.mT", "dpnp.dpnp_array.dpnp_array.max", "dpnp.dpnp_array.dpnp_array.mean", "dpnp.dpnp_array.dpnp_array.min", "dpnp.dpnp_array.dpnp_array.nbytes", "dpnp.dpnp_array.dpnp_array.ndim", "dpnp.dpnp_array.dpnp_array.nonzero", "dpnp.dpnp_array.dpnp_array.partition", "dpnp.dpnp_array.dpnp_array.prod", "dpnp.dpnp_array.dpnp_array.put", "dpnp.dpnp_array.dpnp_array.ravel", "dpnp.dpnp_array.dpnp_array.real", "dpnp.dpnp_array.dpnp_array.repeat", "dpnp.dpnp_array.dpnp_array.reshape", "dpnp.dpnp_array.dpnp_array.round", "dpnp.dpnp_array.dpnp_array.searchsorted", "dpnp.dpnp_array.dpnp_array.shape", "dpnp.dpnp_array.dpnp_array.size", "dpnp.dpnp_array.dpnp_array.sort", "dpnp.dpnp_array.dpnp_array.squeeze", "dpnp.dpnp_array.dpnp_array.std", "dpnp.dpnp_array.dpnp_array.strides", "dpnp.dpnp_array.dpnp_array.sum", "dpnp.dpnp_array.dpnp_array.swapaxes", "dpnp.dpnp_array.dpnp_array.sycl_context", "dpnp.dpnp_array.dpnp_array.sycl_device", "dpnp.dpnp_array.dpnp_array.sycl_queue", "dpnp.dpnp_array.dpnp_array.take", "dpnp.dpnp_array.dpnp_array.to_device", "dpnp.dpnp_array.dpnp_array.trace", "dpnp.dpnp_array.dpnp_array.transpose", "dpnp.dpnp_array.dpnp_array.usm_type", "dpnp.dpnp_array.dpnp_array.var", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.dtype.alignment", "dpnp.dtype.base", "dpnp.dtype.byteorder", "dpnp.dtype.char", "dpnp.dtype.descr", "dpnp.dtype.fields", "dpnp.dtype.flags", "dpnp.dtype.hasobject", "dpnp.dtype.isalignedstruct", "dpnp.dtype.isbuiltin", "dpnp.dtype.isnative", "dpnp.dtype.itemsize", "dpnp.dtype.kind", "dpnp.dtype.metadata", "dpnp.dtype.name", "dpnp.dtype.names", "dpnp.dtype.ndim", "dpnp.dtype.newbyteorder", "dpnp.dtype.num", "dpnp.dtype.shape", "dpnp.dtype.str", "dpnp.dtype.subdtype", "dpnp.dtype.type", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram2d", "dpnp.histogram_bin_edges", "dpnp.histogramdd", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.i0", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isdtype", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.iterable", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmedian", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__array__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.asnumpy", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.compress", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.device", "dpnp.ndarray.diagonal", "dpnp.ndarray.dot", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.get_array", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.sycl_context", "dpnp.ndarray.sycl_device", "dpnp.ndarray.sycl_queue", "dpnp.ndarray.take", "dpnp.ndarray.to_device", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.usm_type", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.ndindex", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.RandomState.get_state", "dpnp.random.RandomState.get_sycl_device", "dpnp.random.RandomState.get_sycl_queue", "dpnp.random.RandomState.normal", "dpnp.random.RandomState.rand", "dpnp.random.RandomState.randint", "dpnp.random.RandomState.randn", "dpnp.random.RandomState.random_sample", "dpnp.random.RandomState.standard_normal", "dpnp.random.RandomState.uniform", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 8, "__abs__": 374, "__add__": 375, "__and__": 376, "__array__": 377, "__array_namespace_info__": 13, "__bool__": 378, "__complex__": 379, "__copy__": 380, "__eq__": 381, "__float__": 382, "__floordiv__": 383, "__ge__": 384, "__getitem__": 385, "__gt__": 386, "__iadd__": 387, "__iand__": 388, "__ifloordiv__": 389, "__ilshift__": 390, "__imatmul__": 391, "__imod__": 392, "__imul__": 393, "__int__": 394, "__invert__": 395, "__ior__": 396, "__ipow__": 397, "__irshift__": 398, "__isub__": 399, "__itruediv__": 400, "__ixor__": 401, "__le__": 402, "__len__": 403, "__lshift__": 404, "__lt__": 405, "__matmul__": 406, "__mod__": 407, "__mul__": 408, "__ne__": 409, "__neg__": 410, "__new__": 411, "__or__": 412, "__pos__": 413, "__pow__": 414, "__radd__": 415, "__rand__": 416, "__repr__": 417, "__rfloordiv__": 418, "__rlshift__": 419, "__rmatmul__": 420, "__rmod__": 421, "__rmul__": 422, "__ror__": 423, "__rpow__": 424, "__rrshift__": 425, "__rshift__": 426, "__rsub__": 427, "__rtruediv__": 428, "__rxor__": 429, "__setitem__": 430, "__str__": 431, "__sub__": 432, "__truediv__": 433, "__xor__": 434, "ab": 14, "absolut": 15, "aco": 16, "acosh": 17, "ad": 656, "add": 18, "algebra": [7, 654], "align": 179, "all": [19, 116, 435], "allclos": 20, "amax": 21, "amin": 22, "angl": 23, "ani": [24, 117, 436], "api": [1, 5, 652], "append": 25, "apply_along_axi": 26, "apply_over_ax": 27, "arang": 28, "arcco": 29, "arccosh": 30, "arcsin": 31, "arcsinh": 32, "arctan": 33, "arctan2": 34, "arctanh": 35, "argmax": [36, 118, 437], "argmin": [37, 119, 438], "argsort": [38, 120, 439], "argwher": 39, "arithmet": [657, 659, 660], "around": 40, "arrai": [5, 7, 8, 10, 41, 653, 655, 656, 659], "array_equ": 42, "array_equiv": 43, "array_split": 44, "asanyarrai": 45, "asarrai": 46, "asarray_chkfinit": 47, "ascontiguousarrai": 48, "asfarrai": 49, "asfortranarrai": 50, "asin": 51, "asinh": 52, "asnumpi": [53, 121, 440], "astyp": [54, 122, 441], "atan": 55, "atan2": 56, "atanh": 57, "atleast_1d": 58, "atleast_2d": 59, "atleast_3d": 60, "attribut": 659, "avail": [10, 666], "averag": [61, 665], "backend": 1, "background": 11, "base": 180, "basic": [656, 660], "beta": 531, "binary_repr": 62, "bincount": 63, "binomi": 532, "bit": [6, 666], "bitwise_and": 64, "bitwise_invert": 65, "bitwise_left_shift": 66, "bitwise_not": 67, "bitwise_or": 68, "bitwise_right_shift": 69, "bitwise_xor": 70, "broadcast_arrai": 71, "broadcast_shap": 72, "broadcast_to": 73, "build": [4, 8], "byte": 533, "byte_bound": 74, "byteord": 181, "c": 1, "calcul": 659, "can_cast": 75, "cbrt": 76, "ceil": 77, "chang": 656, "channel": 4, "char": 182, "chisquar": 534, "choic": 535, "choleski": 300, "choos": [78, 123, 442], "class": 8, "clip": [79, 124, 443], "co": 92, "column_stack": 80, "comparison": [7, 655, 659, 666], "compat": 5, "complex": 657, "compress": [81, 125, 444], "concat": 82, "concaten": 83, "cond": 301, "conda": 4, "conj": [84, 126, 445], "conjug": [85, 127, 446], "construct": 659, "content": 655, "control": 0, "convers": 659, "convolv": 86, "copi": [87, 128, 447], "copysign": 88, "copyto": 89, "corrcoef": 90, "correl": [91, 665], "cosh": 93, "count": 663, "count_nonzero": 94, "cov": 95, "creat": 9, "creation": 8, "cross": [96, 302], "cumlogsumexp": 97, "cumprod": [98, 129, 448], "cumsum": [99, 130, 449], "cumulative_prod": 100, "cumulative_sum": 101, "cupi": 7, "custom": 4, "data": [0, 2, 8, 9, 10, 653, 659, 661], "decomposit": 654, "deg2rad": 102, "degre": 103, "delet": 104, "descr": 183, "det": 303, "detail": 11, "develop": 2, "devic": [4, 131, 450], "diag": 105, "diag_indic": 106, "diag_indices_from": 107, "diagflat": 108, "diagon": [109, 132, 304, 451], "diff": 110, "differ": 657, "digit": 111, "dimens": [11, 656], "dimension": [7, 659], "dirichlet": 536, "discret": [7, 11], "distribut": 661, "divid": 112, "dot": [113, 133, 452], "dpnp": [7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 661], "dpnp_arrai": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "driver": 4, "dsplit": 176, "dstack": 177, "dtype": [134, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 453], "ediff1d": 202, "eig": 305, "eigenvalu": 654, "eigh": 306, "eigval": 307, "eigvalsh": 308, "einsum": 203, "einsum_path": 204, "element": [6, 656], "empti": 205, "empty_lik": 206, "equal": 207, "equat": 654, "erf": 208, "error": 664, "exampl": [0, 4], "except": 654, "exist": 8, "exp": 209, "exp2": 210, "expand_dim": 211, "expm1": 212, "expon": 657, "exponenti": 537, "extens": 2, "extract": 213, "extrema": 657, "ey": 214, "f": 538, "fab": 215, "fft": [11, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "fft2": 217, "fftfreq": 218, "fftn": 219, "fftshift": 220, "field": 184, "fill": [135, 454], "fill_diagon": 234, "find": 657, "finfo": 235, "fix": 236, "flag": [136, 185, 455], "flat": [137, 456], "flatit": 237, "flatnonzero": 238, "flatten": [138, 457], "flip": 239, "fliplr": 240, "flipud": 241, "float": [657, 666], "float_pow": 242, "floor": 243, "floor_divid": 244, "fmax": 245, "fmin": 246, "fmod": 247, "format": 6, "fourier": [7, 11], "from": [4, 8], "from_dlpack": 248, "frombuff": 249, "fromfil": 250, "fromfunct": 251, "fromit": 252, "fromstr": 253, "full": 254, "full_lik": 255, "function": [12, 655, 657, 664, 666], "gamma": 539, "gcd": 256, "gener": [653, 661], "geometr": 540, "geomspac": 257, "get_arrai": [139, 458], "get_includ": 258, "get_stat": 521, "get_sycl_devic": 522, "get_sycl_queu": 523, "gradient": 259, "greater": 260, "greater_equ": 261, "guid": 4, "gumbel": 541, "handl": 657, "hasobject": 186, "heavisid": 262, "helper": 11, "hermitian": 11, "hfft": 221, "higher": 11, "histogram": [263, 665], "histogram2d": 264, "histogram_bin_edg": 265, "histogramdd": 266, "hsplit": 267, "hstack": 268, "hyperbol": 657, "hypergeometr": 542, "hypot": 269, "i0": 270, "ident": 271, "ifft": 222, "ifft2": 223, "ifftn": 224, "ifftshift": 225, "ihfft": 226, "iinfo": 272, "imag": [140, 273, 459], "implement": 11, "index": [653, 659], "indic": 274, "inform": [2, 9, 11], "inner": 275, "insert": [276, 653], "inspect": 5, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 309, "invert": 277, "irfft": 227, "irfft2": 228, "irfftn": 229, "isalignedstruct": 187, "isbuiltin": 188, "isclos": 278, "iscomplex": 279, "iscomplexobj": 280, "isdtyp": 281, "isfinit": 282, "isfortran": 283, "isinf": 284, "isn": 189, "isnan": 285, "isneginf": 286, "isposinf": 287, "isreal": 288, "isrealobj": 289, "isscalar": 290, "issubdtyp": 291, "item": [141, 460, 659], "items": [142, 190, 461], "iter": [292, 653], "ix_": 293, "join": 656, "kind": [191, 656], "kron": 294, "laplac": 543, "layout": 659, "lcm": 295, "ldexp": 296, "left_shift": 297, "less": 298, "less_equ": 299, "level": 7, "librari": 0, "like": [653, 656], "linalg": [300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "linear": [7, 654], "linspac": 330, "loadtxt": 331, "log": 332, "log10": 333, "log1p": 334, "log2": 335, "logaddexp": 336, "logaddexp2": 337, "logarithm": 657, "logic": 655, "logical_and": 338, "logical_not": 339, "logical_or": 340, "logical_xor": 341, "logist": 544, "lognorm": 545, "logseri": 546, "logspac": 342, "logsumexp": 343, "lstsq": 310, "manipul": [656, 659], "mask_indic": 344, "math": 666, "mathemat": 657, "matmul": [311, 345], "matric": 8, "matrix": [8, 654, 659], "matrix_norm": 312, "matrix_pow": 313, "matrix_rank": 314, "matrix_transpos": 346, "max": [144, 347, 463], "maximum": 348, "mean": [145, 349, 464], "median": 350, "memori": 659, "meshgrid": 351, "metadata": 192, "method": 659, "mgrid": 352, "min": [146, 353, 465], "minimum": 354, "miscellan": [9, 657, 658], "mod": 355, "modf": 356, "modul": [7, 660], "moveaxi": 357, "mt": [143, 462], "multi": [7, 659], "multi_dot": 315, "multinomi": 547, "multipl": 659, "multipli": 358, "multivariate_norm": 548, "name": [193, 194], "nan_to_num": 359, "nanargmax": 360, "nanargmin": 361, "nancumprod": 362, "nancumsum": 363, "nanmax": 364, "nanmean": 365, "nanmedian": 366, "nanmin": 367, "nanprod": 368, "nanstd": 369, "nansum": 370, "nanvar": 371, "nbyte": [147, 466], "ndarrai": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 659], "ndim": [148, 195, 467, 495], "ndindex": 496, "neg": 497, "negative_binomi": 549, "newbyteord": 196, "nextaft": 498, "noncentral_chisquar": 550, "noncentral_f": 551, "nonzero": [149, 468, 499], "norm": [316, 654], "normal": [11, 524, 552], "not_equ": 500, "num": 197, "number": [654, 656, 657], "numer": 8, "numpi": [2, 7], "ogrid": 501, "ones": 502, "ones_lik": 503, "oper": [6, 653, 654, 655, 656, 657, 659, 666], "order": 665, "other": [654, 657, 659], "outer": [317, 504], "output": 6, "over": 653, "overview": 3, "pack": 6, "packag": [4, 660], "pad": 505, "parallel": [0, 2], "pareto": 553, "partit": [150, 469, 506], "permut": [554, 661], "permute_dim": 507, "pinv": 318, "place": 508, "point": 657, "poisson": 555, "poly1d": 660, "polynomi": 660, "polyutil": 660, "posit": 509, "pow": 510, "power": [511, 556], "prod": [151, 470, 512], "product": [654, 657], "program": 12, "proj": 513, "ptp": 514, "put": [152, 471, 515], "put_along_axi": 516, "putmask": 517, "python": 4, "qr": 319, "quick": 4, "r": 4, "rad2deg": 518, "radian": 519, "rand": [525, 557], "randint": [526, 558], "randn": [527, 559], "random": [7, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 661], "random_integ": 561, "random_sampl": [528, 562], "randomst": [520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "ranf": 563, "rang": 8, "ration": 657, "ravel": [153, 472, 579], "ravel_multi_index": 580, "rayleigh": 564, "real": [11, 154, 473, 581], "real_if_clos": 582, "rearrang": 656, "reciproc": 583, "reduce_hypot": 584, "refer": [1, 652], "remaind": 585, "remov": 656, "repeat": [155, 474, 586], "requir": 587, "reshap": [156, 475, 588], "resiz": 589, "result_typ": 590, "rfft": 230, "rfft2": 231, "rfftfreq": 232, "rfftn": 233, "right_shift": 591, "rint": 592, "roll": 593, "rollaxi": 594, "rot90": 595, "round": [157, 476, 596, 657], "routin": [8, 9, 11, 653, 656, 657, 658, 662], "row_stack": 597, "rsqrt": 598, "sampl": [7, 565, 661], "scikit": 4, "search": 663, "searchsort": [158, 477, 599], "seed": 566, "select": [600, 659], "shape": [8, 159, 198, 478, 601, 656, 659], "shuffl": 567, "sign": 602, "signbit": 603, "simpl": 661, "sin": 604, "sinc": 605, "sinh": 606, "size": [160, 479, 607], "slogdet": 320, "solv": [321, 654], "sort": [161, 480, 608, 663], "sort_complex": 609, "space": 610, "special": [657, 659, 664], "split": [611, 656], "sqrt": 612, "squar": 613, "squeez": [162, 481, 614], "stack": 615, "standard": [5, 11], "standard_cauchi": 568, "standard_exponenti": 569, "standard_gamma": 570, "standard_norm": [529, 571], "standard_t": 572, "start": 4, "statist": 665, "std": [163, 482, 616], "str": 199, "stride": [164, 483], "subdtyp": 200, "subtract": 617, "sum": [165, 484, 618, 657], "summari": 7, "svd": 322, "svdval": 323, "swapax": [166, 485, 619], "sycl": 4, "sycl_context": [167, 486], "sycl_devic": [168, 487], "sycl_queu": [169, 488], "t": [115, 373], "tabl": 7, "take": [170, 489, 620], "take_along_axi": 621, "tan": 622, "tanh": 623, "target": 4, "tensordot": [324, 624], "tensorinv": 325, "tensorsolv": 326, "test": [4, 9, 655], "tile": [625, 656], "to_devic": [171, 490], "trace": [172, 327, 491, 626], "transform": [7, 11], "transpos": [173, 492, 627, 656], "trapezoid": 628, "tri": 629, "triangular": 573, "trigonometr": [657, 666], "tril": 630, "tril_indic": 631, "tril_indices_from": 632, "trim_zero": 633, "triu": 634, "triu_indic": 635, "triu_indices_from": 636, "true_divid": 637, "trunc": 638, "truth": 655, "twiddl": 666, "type": [9, 10, 201, 655, 659], "ufunc": 666, "uniform": [530, 574], "uniqu": 639, "univers": 666, "unravel_index": 640, "unstack": 641, "unwrap": 642, "usm_typ": [174, 493], "util": 658, "valu": [8, 655], "vander": 643, "var": [175, 494, 644], "varianc": 665, "vdot": 645, "vecdot": [328, 646], "vector": 654, "vector_norm": 329, "vonmis": 575, "vsplit": 647, "vstack": 648, "wald": 576, "weibul": 577, "where": 649, "wise": 6, "zero": 650, "zeros_lik": 651, "zipf": 578}})