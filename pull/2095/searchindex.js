Search.setIndex({"alltitles": {"API Reference": [[489, null]], "Adding and removing elements": [[493, "adding-and-removing-elements"]], "Arithmetic": [[498, "arithmetic"]], "Arithmetic operations": [[494, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[496, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[493, null]], "Array attributes": [[496, "array-attributes"]], "Array conversion": [[496, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[496, "array-methods"]], "Array type testing": [[492, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[504, "available-ufuncs"]], "Averages and variances": [[503, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[493, "basic-operations"]], "Basics": [[498, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[504, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[496, "calculation"]], "Changing array shape": [[493, "changing-array-shape"]], "Changing kind of array": [[493, "changing-kind-of-array"]], "Changing number of dimensions": [[493, "changing-number-of-dimensions"]], "Comparison": [[492, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[504, "comparison-functions"]], "Constructing arrays": [[496, "constructing-arrays"]], "Correlations": [[503, "correlations"]], "Counting": [[501, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[496, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[491, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[499, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[502, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[494, "exponents-and-logarithms"]], "Extrema finding": [[494, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[504, "floating-functions"]], "Floating point routines": [[494, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[490, "generating-index-arrays"]], "Handling complex numbers": [[494, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[503, "histograms"]], "Hyperbolic functions": [[494, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[496, "indexing-arrays"]], "Indexing routines": [[490, null]], "Indexing-like operations": [[490, "indexing-like-operations"]], "Infinities and NaNs": [[492, "infinities-and-nans"]], "Inserting data into arrays": [[490, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[496, "item-selection-and-manipulation"]], "Iterating over arrays": [[490, "iterating-over-arrays"]], "Joining arrays": [[493, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [491, null]], "Logic Functions": [[492, null]], "Logic operations": [[492, "logic-operations"]], "Math operations": [[504, "math-operations"]], "Mathematical functions": [[494, null]], "Matrix and vector products": [[491, "matrix-and-vector-products"]], "Matrix eigenvalues": [[491, "matrix-eigenvalues"]], "Memory layout": [[496, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [494, "miscellaneous"]], "Miscellaneous routines": [[495, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[496, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[491, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[503, "order-statistics"]], "Other attributes": [[496, "other-attributes"]], "Other special functions": [[494, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[497, null]], "Permutations": [[499, "permutations"]], "Poly1d": [[498, "poly1d"]], "Polynomial Module": [[498, "polynomial-module"]], "Polynomial Package": [[498, "polynomial-package"]], "Polynomials": [[498, null]], "Polyutils": [[498, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[499, null]], "Random generator": [[499, "random-generator"]], "Rational routines": [[494, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[493, "rearranging-elements"]], "Rounding": [[494, "rounding"]], "Routines": [[500, null]], "Searching": [[501, "searching"]], "Shape manipulation": [[496, "shape-manipulation"]], "Simple random data": [[499, "simple-random-data"]], "Solving linear equations": [[491, "solving-linear-equations"]], "Sorting": [[501, "sorting"]], "Sorting, Searching, and Counting": [[501, null]], "Special Functions": [[502, null]], "Special methods": [[496, "special-methods"]], "Splitting arrays": [[493, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[503, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[494, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[493, "tiling-arrays"]], "Transpose-like operations": [[493, "transpose-like-operations"]], "Trigonometric functions": [[494, "trigonometric-functions"], [504, "trigonometric-functions"]], "Truth value testing": [[492, "truth-value-testing"]], "Universal Functions (ufunc)": [[504, null]], "Utility": [[495, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_not": [[59, null]], "dpnp.bitwise_or": [[60, null]], "dpnp.bitwise_xor": [[61, null]], "dpnp.broadcast_arrays": [[62, null]], "dpnp.broadcast_to": [[63, null]], "dpnp.can_cast": [[64, null]], "dpnp.cbrt": [[65, null]], "dpnp.ceil": [[66, null]], "dpnp.choose": [[67, null]], "dpnp.clip": [[68, null]], "dpnp.column_stack": [[69, null]], "dpnp.concat": [[70, null]], "dpnp.concatenate": [[71, null]], "dpnp.conj": [[72, null]], "dpnp.conjugate": [[73, null]], "dpnp.convolve": [[74, null]], "dpnp.copy": [[75, null]], "dpnp.copysign": [[76, null]], "dpnp.copyto": [[77, null]], "dpnp.correlate": [[78, null]], "dpnp.cos": [[79, null]], "dpnp.cosh": [[80, null]], "dpnp.count_nonzero": [[81, null]], "dpnp.cov": [[82, null]], "dpnp.cross": [[83, null]], "dpnp.cumlogsumexp": [[84, null]], "dpnp.cumprod": [[85, null]], "dpnp.cumsum": [[86, null]], "dpnp.deg2rad": [[87, null]], "dpnp.degrees": [[88, null]], "dpnp.diag": [[89, null]], "dpnp.diag_indices": [[90, null]], "dpnp.diag_indices_from": [[91, null]], "dpnp.diagflat": [[92, null]], "dpnp.diagonal": [[93, null]], "dpnp.diff": [[94, null]], "dpnp.digitize": [[95, null]], "dpnp.divide": [[96, null]], "dpnp.dot": [[97, null]], "dpnp.dpnp_array.dpnp_array": [[98, null]], "dpnp.dsplit": [[99, null]], "dpnp.dstack": [[100, null]], "dpnp.dtype": [[101, null]], "dpnp.ediff1d": [[102, null]], "dpnp.einsum": [[103, null]], "dpnp.einsum_path": [[104, null]], "dpnp.empty": [[105, null]], "dpnp.empty_like": [[106, null]], "dpnp.equal": [[107, null]], "dpnp.erf": [[108, null]], "dpnp.exp": [[109, null]], "dpnp.exp2": [[110, null]], "dpnp.expand_dims": [[111, null]], "dpnp.expm1": [[112, null]], "dpnp.extract": [[113, null]], "dpnp.eye": [[114, null]], "dpnp.fabs": [[115, null]], "dpnp.fft.fft": [[116, null]], "dpnp.fft.fft2": [[117, null]], "dpnp.fft.fftfreq": [[118, null]], "dpnp.fft.fftn": [[119, null]], "dpnp.fft.fftshift": [[120, null]], "dpnp.fft.hfft": [[121, null]], "dpnp.fft.ifft": [[122, null]], "dpnp.fft.ifft2": [[123, null]], "dpnp.fft.ifftn": [[124, null]], "dpnp.fft.ifftshift": [[125, null]], "dpnp.fft.ihfft": [[126, null]], "dpnp.fft.irfft": [[127, null]], "dpnp.fft.irfft2": [[128, null]], "dpnp.fft.irfftn": [[129, null]], "dpnp.fft.rfft": [[130, null]], "dpnp.fft.rfft2": [[131, null]], "dpnp.fft.rfftfreq": [[132, null]], "dpnp.fft.rfftn": [[133, null]], "dpnp.fill_diagonal": [[134, null]], "dpnp.finfo": [[135, null]], "dpnp.fix": [[136, null]], "dpnp.flatiter": [[137, null]], "dpnp.flatnonzero": [[138, null]], "dpnp.flip": [[139, null]], "dpnp.fliplr": [[140, null]], "dpnp.flipud": [[141, null]], "dpnp.float_power": [[142, null]], "dpnp.floor": [[143, null]], "dpnp.floor_divide": [[144, null]], "dpnp.fmax": [[145, null]], "dpnp.fmin": [[146, null]], "dpnp.fmod": [[147, null]], "dpnp.from_dlpack": [[148, null]], "dpnp.frombuffer": [[149, null]], "dpnp.fromfile": [[150, null]], "dpnp.fromfunction": [[151, null]], "dpnp.fromiter": [[152, null]], "dpnp.fromstring": [[153, null]], "dpnp.full": [[154, null]], "dpnp.full_like": [[155, null]], "dpnp.geomspace": [[156, null]], "dpnp.get_include": [[157, null]], "dpnp.gradient": [[158, null]], "dpnp.greater": [[159, null]], "dpnp.greater_equal": [[160, null]], "dpnp.heaviside": [[161, null]], "dpnp.histogram": [[162, null]], "dpnp.histogram_bin_edges": [[163, null]], "dpnp.hsplit": [[164, null]], "dpnp.hstack": [[165, null]], "dpnp.hypot": [[166, null]], "dpnp.identity": [[167, null]], "dpnp.iinfo": [[168, null]], "dpnp.imag": [[169, null]], "dpnp.indices": [[170, null]], "dpnp.inner": [[171, null]], "dpnp.invert": [[172, null]], "dpnp.isclose": [[173, null]], "dpnp.iscomplex": [[174, null]], "dpnp.iscomplexobj": [[175, null]], "dpnp.isfinite": [[176, null]], "dpnp.isinf": [[177, null]], "dpnp.isnan": [[178, null]], "dpnp.isneginf": [[179, null]], "dpnp.isposinf": [[180, null]], "dpnp.isreal": [[181, null]], "dpnp.isrealobj": [[182, null]], "dpnp.isscalar": [[183, null]], "dpnp.issubdtype": [[184, null]], "dpnp.ix_": [[185, null]], "dpnp.kron": [[186, null]], "dpnp.left_shift": [[187, null]], "dpnp.less": [[188, null]], "dpnp.less_equal": [[189, null]], "dpnp.linalg.cholesky": [[190, null]], "dpnp.linalg.cond": [[191, null]], "dpnp.linalg.det": [[192, null]], "dpnp.linalg.eig": [[193, null]], "dpnp.linalg.eigh": [[194, null]], "dpnp.linalg.eigvals": [[195, null]], "dpnp.linalg.eigvalsh": [[196, null]], "dpnp.linalg.inv": [[197, null]], "dpnp.linalg.lstsq": [[198, null]], "dpnp.linalg.matrix_power": [[199, null]], "dpnp.linalg.matrix_rank": [[200, null]], "dpnp.linalg.multi_dot": [[201, null]], "dpnp.linalg.norm": [[202, null]], "dpnp.linalg.pinv": [[203, null]], "dpnp.linalg.qr": [[204, null]], "dpnp.linalg.slogdet": [[205, null]], "dpnp.linalg.solve": [[206, null]], "dpnp.linalg.svd": [[207, null]], "dpnp.linalg.tensorinv": [[208, null]], "dpnp.linalg.tensorsolve": [[209, null]], "dpnp.linspace": [[210, null]], "dpnp.loadtxt": [[211, null]], "dpnp.log": [[212, null]], "dpnp.log10": [[213, null]], "dpnp.log1p": [[214, null]], "dpnp.log2": [[215, null]], "dpnp.logaddexp": [[216, null]], "dpnp.logaddexp2": [[217, null]], "dpnp.logical_and": [[218, null]], "dpnp.logical_not": [[219, null]], "dpnp.logical_or": [[220, null]], "dpnp.logical_xor": [[221, null]], "dpnp.logspace": [[222, null]], "dpnp.logsumexp": [[223, null]], "dpnp.mask_indices": [[224, null]], "dpnp.matmul": [[225, null]], "dpnp.matrix_transpose": [[226, null]], "dpnp.max": [[227, null]], "dpnp.maximum": [[228, null]], "dpnp.mean": [[229, null]], "dpnp.median": [[230, null]], "dpnp.meshgrid": [[231, null]], "dpnp.mgrid": [[232, null]], "dpnp.min": [[233, null]], "dpnp.minimum": [[234, null]], "dpnp.mod": [[235, null]], "dpnp.modf": [[236, null]], "dpnp.moveaxis": [[237, null]], "dpnp.multiply": [[238, null]], "dpnp.nan_to_num": [[239, null]], "dpnp.nanargmax": [[240, null]], "dpnp.nanargmin": [[241, null]], "dpnp.nancumprod": [[242, null]], "dpnp.nancumsum": [[243, null]], "dpnp.nanmax": [[244, null]], "dpnp.nanmean": [[245, null]], "dpnp.nanmin": [[246, null]], "dpnp.nanprod": [[247, null]], "dpnp.nanstd": [[248, null]], "dpnp.nansum": [[249, null]], "dpnp.nanvar": [[250, null]], "dpnp.ndarray": [[251, null]], "dpnp.ndarray.T": [[252, null]], "dpnp.ndarray.__abs__": [[253, null]], "dpnp.ndarray.__add__": [[254, null]], "dpnp.ndarray.__and__": [[255, null]], "dpnp.ndarray.__bool__": [[256, null]], "dpnp.ndarray.__complex__": [[257, null]], "dpnp.ndarray.__copy__": [[258, null]], "dpnp.ndarray.__eq__": [[259, null]], "dpnp.ndarray.__float__": [[260, null]], "dpnp.ndarray.__floordiv__": [[261, null]], "dpnp.ndarray.__ge__": [[262, null]], "dpnp.ndarray.__getitem__": [[263, null]], "dpnp.ndarray.__gt__": [[264, null]], "dpnp.ndarray.__iadd__": [[265, null]], "dpnp.ndarray.__iand__": [[266, null]], "dpnp.ndarray.__ifloordiv__": [[267, null]], "dpnp.ndarray.__ilshift__": [[268, null]], "dpnp.ndarray.__imod__": [[269, null]], "dpnp.ndarray.__imul__": [[270, null]], "dpnp.ndarray.__int__": [[271, null]], "dpnp.ndarray.__invert__": [[272, null]], "dpnp.ndarray.__ior__": [[273, null]], "dpnp.ndarray.__ipow__": [[274, null]], "dpnp.ndarray.__irshift__": [[275, null]], "dpnp.ndarray.__isub__": [[276, null]], "dpnp.ndarray.__itruediv__": [[277, null]], "dpnp.ndarray.__ixor__": [[278, null]], "dpnp.ndarray.__le__": [[279, null]], "dpnp.ndarray.__len__": [[280, null]], "dpnp.ndarray.__lshift__": [[281, null]], "dpnp.ndarray.__lt__": [[282, null]], "dpnp.ndarray.__matmul__": [[283, null]], "dpnp.ndarray.__mod__": [[284, null]], "dpnp.ndarray.__mul__": [[285, null]], "dpnp.ndarray.__ne__": [[286, null]], "dpnp.ndarray.__neg__": [[287, null]], "dpnp.ndarray.__new__": [[288, null]], "dpnp.ndarray.__or__": [[289, null]], "dpnp.ndarray.__pos__": [[290, null]], "dpnp.ndarray.__pow__": [[291, null]], "dpnp.ndarray.__repr__": [[292, null]], "dpnp.ndarray.__rshift__": [[293, null]], "dpnp.ndarray.__setitem__": [[294, null]], "dpnp.ndarray.__str__": [[295, null]], "dpnp.ndarray.__sub__": [[296, null]], "dpnp.ndarray.__truediv__": [[297, null]], "dpnp.ndarray.__xor__": [[298, null]], "dpnp.ndarray.all": [[299, null]], "dpnp.ndarray.any": [[300, null]], "dpnp.ndarray.argmax": [[301, null]], "dpnp.ndarray.argmin": [[302, null]], "dpnp.ndarray.argsort": [[303, null]], "dpnp.ndarray.astype": [[304, null]], "dpnp.ndarray.choose": [[305, null]], "dpnp.ndarray.clip": [[306, null]], "dpnp.ndarray.conj": [[307, null]], "dpnp.ndarray.conjugate": [[308, null]], "dpnp.ndarray.copy": [[309, null]], "dpnp.ndarray.cumprod": [[310, null]], "dpnp.ndarray.cumsum": [[311, null]], "dpnp.ndarray.diagonal": [[312, null]], "dpnp.ndarray.dtype": [[313, null]], "dpnp.ndarray.fill": [[314, null]], "dpnp.ndarray.flags": [[315, null]], "dpnp.ndarray.flat": [[316, null]], "dpnp.ndarray.flatten": [[317, null]], "dpnp.ndarray.imag": [[318, null]], "dpnp.ndarray.item": [[319, null]], "dpnp.ndarray.itemsize": [[320, null]], "dpnp.ndarray.max": [[321, null]], "dpnp.ndarray.mean": [[322, null]], "dpnp.ndarray.min": [[323, null]], "dpnp.ndarray.nbytes": [[324, null]], "dpnp.ndarray.ndim": [[325, null]], "dpnp.ndarray.nonzero": [[326, null]], "dpnp.ndarray.partition": [[327, null]], "dpnp.ndarray.prod": [[328, null]], "dpnp.ndarray.put": [[329, null]], "dpnp.ndarray.ravel": [[330, null]], "dpnp.ndarray.real": [[331, null]], "dpnp.ndarray.repeat": [[332, null]], "dpnp.ndarray.reshape": [[333, null]], "dpnp.ndarray.round": [[334, null]], "dpnp.ndarray.searchsorted": [[335, null]], "dpnp.ndarray.shape": [[336, null]], "dpnp.ndarray.size": [[337, null]], "dpnp.ndarray.sort": [[338, null]], "dpnp.ndarray.squeeze": [[339, null]], "dpnp.ndarray.std": [[340, null]], "dpnp.ndarray.strides": [[341, null]], "dpnp.ndarray.sum": [[342, null]], "dpnp.ndarray.swapaxes": [[343, null]], "dpnp.ndarray.take": [[344, null]], "dpnp.ndarray.trace": [[345, null]], "dpnp.ndarray.transpose": [[346, null]], "dpnp.ndarray.var": [[347, null]], "dpnp.ndim": [[348, null]], "dpnp.negative": [[349, null]], "dpnp.nextafter": [[350, null]], "dpnp.nonzero": [[351, null]], "dpnp.not_equal": [[352, null]], "dpnp.ogrid": [[353, null]], "dpnp.ones": [[354, null]], "dpnp.ones_like": [[355, null]], "dpnp.outer": [[356, null]], "dpnp.partition": [[357, null]], "dpnp.permute_dims": [[358, null]], "dpnp.place": [[359, null]], "dpnp.positive": [[360, null]], "dpnp.pow": [[361, null]], "dpnp.power": [[362, null]], "dpnp.prod": [[363, null]], "dpnp.proj": [[364, null]], "dpnp.ptp": [[365, null]], "dpnp.put": [[366, null]], "dpnp.put_along_axis": [[367, null]], "dpnp.putmask": [[368, null]], "dpnp.rad2deg": [[369, null]], "dpnp.radians": [[370, null]], "dpnp.random.RandomState": [[371, null]], "dpnp.random.beta": [[372, null]], "dpnp.random.binomial": [[373, null]], "dpnp.random.bytes": [[374, null]], "dpnp.random.chisquare": [[375, null]], "dpnp.random.choice": [[376, null]], "dpnp.random.dirichlet": [[377, null]], "dpnp.random.exponential": [[378, null]], "dpnp.random.f": [[379, null]], "dpnp.random.gamma": [[380, null]], "dpnp.random.geometric": [[381, null]], "dpnp.random.gumbel": [[382, null]], "dpnp.random.hypergeometric": [[383, null]], "dpnp.random.laplace": [[384, null]], "dpnp.random.logistic": [[385, null]], "dpnp.random.lognormal": [[386, null]], "dpnp.random.logseries": [[387, null]], "dpnp.random.multinomial": [[388, null]], "dpnp.random.multivariate_normal": [[389, null]], "dpnp.random.negative_binomial": [[390, null]], "dpnp.random.noncentral_chisquare": [[391, null]], "dpnp.random.noncentral_f": [[392, null]], "dpnp.random.normal": [[393, null]], "dpnp.random.pareto": [[394, null]], "dpnp.random.permutation": [[395, null]], "dpnp.random.poisson": [[396, null]], "dpnp.random.power": [[397, null]], "dpnp.random.rand": [[398, null]], "dpnp.random.randint": [[399, null]], "dpnp.random.randn": [[400, null]], "dpnp.random.random": [[401, null]], "dpnp.random.random_integers": [[402, null]], "dpnp.random.random_sample": [[403, null]], "dpnp.random.ranf": [[404, null]], "dpnp.random.rayleigh": [[405, null]], "dpnp.random.sample": [[406, null]], "dpnp.random.seed": [[407, null]], "dpnp.random.shuffle": [[408, null]], "dpnp.random.standard_cauchy": [[409, null]], "dpnp.random.standard_exponential": [[410, null]], "dpnp.random.standard_gamma": [[411, null]], "dpnp.random.standard_normal": [[412, null]], "dpnp.random.standard_t": [[413, null]], "dpnp.random.triangular": [[414, null]], "dpnp.random.uniform": [[415, null]], "dpnp.random.vonmises": [[416, null]], "dpnp.random.wald": [[417, null]], "dpnp.random.weibull": [[418, null]], "dpnp.random.zipf": [[419, null]], "dpnp.ravel": [[420, null]], "dpnp.ravel_multi_index": [[421, null]], "dpnp.real": [[422, null]], "dpnp.real_if_close": [[423, null]], "dpnp.reciprocal": [[424, null]], "dpnp.reduce_hypot": [[425, null]], "dpnp.remainder": [[426, null]], "dpnp.repeat": [[427, null]], "dpnp.require": [[428, null]], "dpnp.reshape": [[429, null]], "dpnp.resize": [[430, null]], "dpnp.result_type": [[431, null]], "dpnp.right_shift": [[432, null]], "dpnp.rint": [[433, null]], "dpnp.roll": [[434, null]], "dpnp.rollaxis": [[435, null]], "dpnp.rot90": [[436, null]], "dpnp.round": [[437, null]], "dpnp.row_stack": [[438, null]], "dpnp.rsqrt": [[439, null]], "dpnp.searchsorted": [[440, null]], "dpnp.select": [[441, null]], "dpnp.shape": [[442, null]], "dpnp.sign": [[443, null]], "dpnp.signbit": [[444, null]], "dpnp.sin": [[445, null]], "dpnp.sinh": [[446, null]], "dpnp.size": [[447, null]], "dpnp.sort": [[448, null]], "dpnp.sort_complex": [[449, null]], "dpnp.split": [[450, null]], "dpnp.sqrt": [[451, null]], "dpnp.square": [[452, null]], "dpnp.squeeze": [[453, null]], "dpnp.stack": [[454, null]], "dpnp.std": [[455, null]], "dpnp.subtract": [[456, null]], "dpnp.sum": [[457, null]], "dpnp.swapaxes": [[458, null]], "dpnp.take": [[459, null]], "dpnp.take_along_axis": [[460, null]], "dpnp.tan": [[461, null]], "dpnp.tanh": [[462, null]], "dpnp.tensordot": [[463, null]], "dpnp.tile": [[464, null]], "dpnp.trace": [[465, null]], "dpnp.transpose": [[466, null]], "dpnp.trapezoid": [[467, null]], "dpnp.tri": [[468, null]], "dpnp.tril": [[469, null]], "dpnp.tril_indices": [[470, null]], "dpnp.tril_indices_from": [[471, null]], "dpnp.trim_zeros": [[472, null]], "dpnp.triu": [[473, null]], "dpnp.triu_indices": [[474, null]], "dpnp.triu_indices_from": [[475, null]], "dpnp.true_divide": [[476, null]], "dpnp.trunc": [[477, null]], "dpnp.unique": [[478, null]], "dpnp.unravel_index": [[479, null]], "dpnp.unwrap": [[480, null]], "dpnp.vander": [[481, null]], "dpnp.var": [[482, null]], "dpnp.vdot": [[483, null]], "dpnp.vsplit": [[484, null]], "dpnp.vstack": [[485, null]], "dpnp.where": [[486, null]], "dpnp.zeros": [[487, null]], "dpnp.zeros_like": [[488, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[101, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[101, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[101, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[101, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[101, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[101, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[101, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[101, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[101, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[299, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[300, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[301, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[302, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[303, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[304, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[101, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[372, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[373, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[59, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[60, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[61, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[62, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[63, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[101, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[374, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[64, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[65, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[66, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[101, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[375, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[376, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[190, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[305, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[67, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[306, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[68, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[69, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[70, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[71, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[191, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[307, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[72, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[308, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[73, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[74, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[309, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[75, "dpnp.copy", false]], "copysign() (in module dpnp)": [[76, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[77, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[78, "dpnp.correlate", false]], "cos() (in module dpnp)": [[79, "dpnp.cos", false]], "cosh() (in module dpnp)": [[80, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[81, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[82, "dpnp.cov", false]], "cross() (in module dpnp)": [[83, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[84, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[310, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[85, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[311, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[86, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[87, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[88, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[101, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[192, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[89, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[90, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[91, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[92, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[312, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[93, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[94, "dpnp.diff", false]], "digitize() (in module dpnp)": [[95, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[377, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[96, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[97, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[10, "module-dpnp.fft", false]], "dpnp.random": [[499, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[98, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[99, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[100, "dpnp.dstack", false]], "dtype (class in dpnp)": [[101, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[313, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[102, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[193, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[194, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[195, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[196, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[103, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[104, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[105, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[106, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[107, "dpnp.equal", false]], "erf() (in module dpnp)": [[108, "dpnp.erf", false]], "exp() (in module dpnp)": [[109, "dpnp.exp", false]], "exp2() (in module dpnp)": [[110, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[111, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[112, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[378, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[113, "dpnp.extract", false]], "eye() (in module dpnp)": [[114, "dpnp.eye", false]], "f() (in module dpnp.random)": [[379, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[115, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[116, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[117, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[118, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[119, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[120, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[101, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[314, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[134, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[135, "dpnp.finfo", false]], "fix() (in module dpnp)": [[136, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[101, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[315, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[316, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[137, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[138, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[317, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[139, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[140, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[141, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[142, "dpnp.float_power", false]], "floor() (in module dpnp)": [[143, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[144, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[145, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[146, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[147, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[148, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[149, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[150, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[151, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[152, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[153, "dpnp.fromstring", false]], "full() (in module dpnp)": [[154, "dpnp.full", false]], "full_like() (in module dpnp)": [[155, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[380, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[381, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[156, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[157, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[158, "dpnp.gradient", false]], "greater() (in module dpnp)": [[159, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[160, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[382, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[101, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[161, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[121, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[162, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[163, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[164, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[165, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[383, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[166, "dpnp.hypot", false]], "identity() (in module dpnp)": [[167, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[122, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[123, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[124, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[125, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[126, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[168, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[318, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[169, "dpnp.imag", false]], "indices() (in module dpnp)": [[170, "dpnp.indices", false]], "inner() (in module dpnp)": [[171, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[197, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[172, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[127, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[128, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[129, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[101, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[101, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[173, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[174, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[175, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[176, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[177, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[178, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[101, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[179, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[180, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[181, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[182, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[183, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[184, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[319, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[101, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[320, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[185, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[101, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[186, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[384, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[187, "dpnp.left_shift", false]], "less() (in module dpnp)": [[188, "dpnp.less", false]], "less_equal() (in module dpnp)": [[189, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[210, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[211, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[212, "dpnp.log", false]], "log10() (in module dpnp)": [[213, "dpnp.log10", false]], "log1p() (in module dpnp)": [[214, "dpnp.log1p", false]], "log2() (in module dpnp)": [[215, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[216, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[217, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[218, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[219, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[220, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[221, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[385, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[386, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[387, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[222, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[223, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[198, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[224, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[225, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[199, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[200, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[226, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[321, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[227, "dpnp.max", false]], "maximum() (in module dpnp)": [[228, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[322, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[229, "dpnp.mean", false]], "median() (in module dpnp)": [[230, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[231, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[101, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[232, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[323, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[233, "dpnp.min", false]], "minimum() (in module dpnp)": [[234, "dpnp.minimum", false]], "mod() (in module dpnp)": [[235, "dpnp.mod", false]], "modf() (in module dpnp)": [[236, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [10, "module-dpnp.fft", false], [499, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[237, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.mT", false]], "multi_dot() (in module dpnp.linalg)": [[201, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[388, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[238, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[389, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[101, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[101, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[239, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[240, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[241, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[242, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[243, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[244, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[245, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[246, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[247, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[248, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[249, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[250, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[324, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[251, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[101, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[325, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[348, "dpnp.ndim", false]], "negative() (in module dpnp)": [[349, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[390, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[101, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[350, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[391, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[392, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[326, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[351, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[202, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[393, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[352, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[101, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[353, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[354, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[355, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[356, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[394, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[327, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[357, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[395, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[358, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[203, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[359, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[396, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[360, "dpnp.positive", false]], "pow() (in module dpnp)": [[361, "dpnp.pow", false]], "power() (in module dpnp)": [[362, "dpnp.power", false]], "power() (in module dpnp.random)": [[397, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[328, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[363, "dpnp.prod", false]], "proj() (in module dpnp)": [[364, "dpnp.proj", false]], "ptp() (in module dpnp)": [[365, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[329, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[366, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[367, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[368, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[204, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[369, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[370, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[398, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[399, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[400, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[401, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[402, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[403, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[371, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[404, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[330, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[420, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[421, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[405, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[331, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[422, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[423, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[424, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[425, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[426, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[332, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[427, "dpnp.repeat", false]], "require() (in module dpnp)": [[428, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[333, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[429, "dpnp.reshape", false]], "resize() (in module dpnp)": [[430, "dpnp.resize", false]], "result_type() (in module dpnp)": [[431, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[130, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[131, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[132, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[133, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[432, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[433, "dpnp.rint", false]], "roll() (in module dpnp)": [[434, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[435, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[436, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[334, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[437, "dpnp.round", false]], "row_stack() (in module dpnp)": [[438, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[439, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[406, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[335, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[440, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[407, "dpnp.random.seed", false]], "select() (in module dpnp)": [[441, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[101, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[336, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[442, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[408, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[443, "dpnp.sign", false]], "signbit() (in module dpnp)": [[444, "dpnp.signbit", false]], "sin() (in module dpnp)": [[445, "dpnp.sin", false]], "sinh() (in module dpnp)": [[446, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[337, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[447, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[205, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[206, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[338, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[448, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[449, "dpnp.sort_complex", false]], "split() (in module dpnp)": [[450, "dpnp.split", false]], "sqrt() (in module dpnp)": [[451, "dpnp.sqrt", false]], "square() (in module dpnp)": [[452, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[339, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[453, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[454, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[409, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[410, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[411, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[412, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[413, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[340, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[455, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[101, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[341, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[101, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[456, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[342, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[457, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[207, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[343, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[458, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[252, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[344, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[459, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[460, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[461, "dpnp.tan", false]], "tanh() (in module dpnp)": [[462, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[463, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[208, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[209, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[464, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[345, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[465, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[346, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[466, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[467, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[468, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[414, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[469, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[470, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[471, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[472, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[473, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[474, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[475, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[476, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[477, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[101, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[371, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[415, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[478, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[479, "dpnp.unravel_index", false]], "unwrap() (in module dpnp)": [[480, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[481, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[347, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[482, "dpnp.var", false]], "vdot() (in module dpnp)": [[483, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[416, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[484, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[485, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[417, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[418, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[486, "dpnp.where", false]], "zeros() (in module dpnp)": [[487, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[488, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[419, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_not"], [60, 1, 1, "", "bitwise_or"], [61, 1, 1, "", "bitwise_xor"], [62, 1, 1, "", "broadcast_arrays"], [63, 1, 1, "", "broadcast_to"], [64, 1, 1, "", "can_cast"], [65, 1, 1, "", "cbrt"], [66, 1, 1, "", "ceil"], [67, 1, 1, "", "choose"], [68, 1, 1, "", "clip"], [69, 1, 1, "", "column_stack"], [70, 1, 1, "", "concat"], [71, 1, 1, "", "concatenate"], [72, 1, 1, "", "conj"], [73, 1, 1, "", "conjugate"], [74, 1, 1, "", "convolve"], [75, 1, 1, "", "copy"], [76, 1, 1, "", "copysign"], [77, 1, 1, "", "copyto"], [78, 1, 1, "", "correlate"], [79, 1, 1, "", "cos"], [80, 1, 1, "", "cosh"], [81, 1, 1, "", "count_nonzero"], [82, 1, 1, "", "cov"], [83, 1, 1, "", "cross"], [84, 1, 1, "", "cumlogsumexp"], [85, 1, 1, "", "cumprod"], [86, 1, 1, "", "cumsum"], [87, 1, 1, "", "deg2rad"], [88, 1, 1, "", "degrees"], [89, 1, 1, "", "diag"], [90, 1, 1, "", "diag_indices"], [91, 1, 1, "", "diag_indices_from"], [92, 1, 1, "", "diagflat"], [93, 1, 1, "", "diagonal"], [94, 1, 1, "", "diff"], [95, 1, 1, "", "digitize"], [96, 1, 1, "", "divide"], [97, 1, 1, "", "dot"], [99, 1, 1, "", "dsplit"], [100, 1, 1, "", "dstack"], [101, 2, 1, "", "dtype"], [102, 1, 1, "", "ediff1d"], [103, 1, 1, "", "einsum"], [104, 1, 1, "", "einsum_path"], [105, 1, 1, "", "empty"], [106, 1, 1, "", "empty_like"], [107, 1, 1, "", "equal"], [108, 1, 1, "", "erf"], [109, 1, 1, "", "exp"], [110, 1, 1, "", "exp2"], [111, 1, 1, "", "expand_dims"], [112, 1, 1, "", "expm1"], [113, 1, 1, "", "extract"], [114, 1, 1, "", "eye"], [115, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [134, 1, 1, "", "fill_diagonal"], [135, 1, 1, "", "finfo"], [136, 1, 1, "", "fix"], [137, 2, 1, "", "flatiter"], [138, 1, 1, "", "flatnonzero"], [139, 1, 1, "", "flip"], [140, 1, 1, "", "fliplr"], [141, 1, 1, "", "flipud"], [142, 1, 1, "", "float_power"], [143, 1, 1, "", "floor"], [144, 1, 1, "", "floor_divide"], [145, 1, 1, "", "fmax"], [146, 1, 1, "", "fmin"], [147, 1, 1, "", "fmod"], [148, 1, 1, "", "from_dlpack"], [149, 1, 1, "", "frombuffer"], [150, 1, 1, "", "fromfile"], [151, 1, 1, "", "fromfunction"], [152, 1, 1, "", "fromiter"], [153, 1, 1, "", "fromstring"], [154, 1, 1, "", "full"], [155, 1, 1, "", "full_like"], [156, 1, 1, "", "geomspace"], [157, 1, 1, "", "get_include"], [158, 1, 1, "", "gradient"], [159, 1, 1, "", "greater"], [160, 1, 1, "", "greater_equal"], [161, 1, 1, "", "heaviside"], [162, 1, 1, "", "histogram"], [163, 1, 1, "", "histogram_bin_edges"], [164, 1, 1, "", "hsplit"], [165, 1, 1, "", "hstack"], [166, 1, 1, "", "hypot"], [167, 1, 1, "", "identity"], [168, 1, 1, "", "iinfo"], [169, 1, 1, "", "imag"], [170, 1, 1, "", "indices"], [171, 1, 1, "", "inner"], [172, 1, 1, "", "invert"], [173, 1, 1, "", "isclose"], [174, 1, 1, "", "iscomplex"], [175, 1, 1, "", "iscomplexobj"], [176, 1, 1, "", "isfinite"], [177, 1, 1, "", "isinf"], [178, 1, 1, "", "isnan"], [179, 1, 1, "", "isneginf"], [180, 1, 1, "", "isposinf"], [181, 1, 1, "", "isreal"], [182, 1, 1, "", "isrealobj"], [183, 1, 1, "", "isscalar"], [184, 1, 1, "", "issubdtype"], [185, 1, 1, "", "ix_"], [186, 1, 1, "", "kron"], [187, 1, 1, "", "left_shift"], [188, 1, 1, "", "less"], [189, 1, 1, "", "less_equal"], [210, 1, 1, "", "linspace"], [211, 1, 1, "", "loadtxt"], [212, 1, 1, "", "log"], [213, 1, 1, "", "log10"], [214, 1, 1, "", "log1p"], [215, 1, 1, "", "log2"], [216, 1, 1, "", "logaddexp"], [217, 1, 1, "", "logaddexp2"], [218, 1, 1, "", "logical_and"], [219, 1, 1, "", "logical_not"], [220, 1, 1, "", "logical_or"], [221, 1, 1, "", "logical_xor"], [222, 1, 1, "", "logspace"], [223, 1, 1, "", "logsumexp"], [224, 1, 1, "", "mask_indices"], [225, 1, 1, "", "matmul"], [226, 1, 1, "", "matrix_transpose"], [227, 1, 1, "", "max"], [228, 1, 1, "", "maximum"], [229, 1, 1, "", "mean"], [230, 1, 1, "", "median"], [231, 1, 1, "", "meshgrid"], [232, 5, 1, "", "mgrid"], [233, 1, 1, "", "min"], [234, 1, 1, "", "minimum"], [235, 1, 1, "", "mod"], [236, 1, 1, "", "modf"], [237, 1, 1, "", "moveaxis"], [238, 1, 1, "", "multiply"], [239, 1, 1, "", "nan_to_num"], [240, 1, 1, "", "nanargmax"], [241, 1, 1, "", "nanargmin"], [242, 1, 1, "", "nancumprod"], [243, 1, 1, "", "nancumsum"], [244, 1, 1, "", "nanmax"], [245, 1, 1, "", "nanmean"], [246, 1, 1, "", "nanmin"], [247, 1, 1, "", "nanprod"], [248, 1, 1, "", "nanstd"], [249, 1, 1, "", "nansum"], [250, 1, 1, "", "nanvar"], [251, 3, 1, "", "ndarray"], [348, 1, 1, "", "ndim"], [349, 1, 1, "", "negative"], [350, 1, 1, "", "nextafter"], [351, 1, 1, "", "nonzero"], [352, 1, 1, "", "not_equal"], [353, 5, 1, "", "ogrid"], [354, 1, 1, "", "ones"], [355, 1, 1, "", "ones_like"], [356, 1, 1, "", "outer"], [357, 1, 1, "", "partition"], [358, 1, 1, "", "permute_dims"], [359, 1, 1, "", "place"], [360, 1, 1, "", "positive"], [361, 1, 1, "", "pow"], [362, 1, 1, "", "power"], [363, 1, 1, "", "prod"], [364, 1, 1, "", "proj"], [365, 1, 1, "", "ptp"], [366, 1, 1, "", "put"], [367, 1, 1, "", "put_along_axis"], [368, 1, 1, "", "putmask"], [369, 1, 1, "", "rad2deg"], [370, 1, 1, "", "radians"], [499, 0, 0, "-", "random"], [420, 1, 1, "", "ravel"], [421, 1, 1, "", "ravel_multi_index"], [422, 1, 1, "", "real"], [423, 1, 1, "", "real_if_close"], [424, 1, 1, "", "reciprocal"], [425, 1, 1, "", "reduce_hypot"], [426, 1, 1, "", "remainder"], [427, 1, 1, "", "repeat"], [428, 1, 1, "", "require"], [429, 1, 1, "", "reshape"], [430, 1, 1, "", "resize"], [431, 1, 1, "", "result_type"], [432, 1, 1, "", "right_shift"], [433, 1, 1, "", "rint"], [434, 1, 1, "", "roll"], [435, 1, 1, "", "rollaxis"], [436, 1, 1, "", "rot90"], [437, 1, 1, "", "round"], [438, 1, 1, "", "row_stack"], [439, 1, 1, "", "rsqrt"], [440, 1, 1, "", "searchsorted"], [441, 1, 1, "", "select"], [442, 1, 1, "", "shape"], [443, 1, 1, "", "sign"], [444, 1, 1, "", "signbit"], [445, 1, 1, "", "sin"], [446, 1, 1, "", "sinh"], [447, 1, 1, "", "size"], [448, 1, 1, "", "sort"], [449, 1, 1, "", "sort_complex"], [450, 1, 1, "", "split"], [451, 1, 1, "", "sqrt"], [452, 1, 1, "", "square"], [453, 1, 1, "", "squeeze"], [454, 1, 1, "", "stack"], [455, 1, 1, "", "std"], [456, 1, 1, "", "subtract"], [457, 1, 1, "", "sum"], [458, 1, 1, "", "swapaxes"], [459, 1, 1, "", "take"], [460, 1, 1, "", "take_along_axis"], [461, 1, 1, "", "tan"], [462, 1, 1, "", "tanh"], [463, 1, 1, "", "tensordot"], [464, 1, 1, "", "tile"], [465, 1, 1, "", "trace"], [466, 1, 1, "", "transpose"], [467, 1, 1, "", "trapezoid"], [468, 1, 1, "", "tri"], [469, 1, 1, "", "tril"], [470, 1, 1, "", "tril_indices"], [471, 1, 1, "", "tril_indices_from"], [472, 1, 1, "", "trim_zeros"], [473, 1, 1, "", "triu"], [474, 1, 1, "", "triu_indices"], [475, 1, 1, "", "triu_indices_from"], [476, 1, 1, "", "true_divide"], [477, 1, 1, "", "trunc"], [478, 1, 1, "", "unique"], [479, 1, 1, "", "unravel_index"], [480, 1, 1, "", "unwrap"], [481, 1, 1, "", "vander"], [482, 1, 1, "", "var"], [483, 1, 1, "", "vdot"], [484, 1, 1, "", "vsplit"], [485, 1, 1, "", "vstack"], [486, 1, 1, "", "where"], [487, 1, 1, "", "zeros"], [488, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[98, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[98, 3, 1, "", "T"], [98, 4, 1, "", "__eq__"], [98, 4, 1, "", "__ge__"], [98, 4, 1, "", "__getitem__"], [98, 4, 1, "", "__gt__"], [98, 4, 1, "", "__le__"], [98, 4, 1, "", "__len__"], [98, 4, 1, "", "__lt__"], [98, 4, 1, "", "__ne__"], [98, 4, 1, "", "__setitem__"], [98, 4, 1, "", "all"], [98, 4, 1, "", "any"], [98, 4, 1, "", "argmax"], [98, 4, 1, "", "argmin"], [98, 4, 1, "", "argsort"], [98, 4, 1, "", "asnumpy"], [98, 4, 1, "", "astype"], [98, 4, 1, "", "choose"], [98, 4, 1, "", "clip"], [98, 4, 1, "", "conj"], [98, 4, 1, "", "conjugate"], [98, 4, 1, "", "copy"], [98, 4, 1, "", "cumprod"], [98, 4, 1, "", "cumsum"], [98, 3, 1, "", "device"], [98, 4, 1, "", "diagonal"], [98, 4, 1, "", "dot"], [98, 3, 1, "", "dtype"], [98, 4, 1, "", "fill"], [98, 3, 1, "", "flags"], [98, 3, 1, "", "flat"], [98, 4, 1, "", "flatten"], [98, 4, 1, "", "get_array"], [98, 3, 1, "", "imag"], [98, 4, 1, "", "item"], [98, 3, 1, "", "itemsize"], [98, 3, 1, "", "mT"], [98, 4, 1, "", "max"], [98, 4, 1, "", "mean"], [98, 4, 1, "", "min"], [98, 3, 1, "", "nbytes"], [98, 3, 1, "", "ndim"], [98, 4, 1, "", "nonzero"], [98, 4, 1, "", "partition"], [98, 4, 1, "", "prod"], [98, 4, 1, "", "put"], [98, 4, 1, "", "ravel"], [98, 3, 1, "", "real"], [98, 4, 1, "", "repeat"], [98, 4, 1, "", "reshape"], [98, 4, 1, "", "round"], [98, 4, 1, "", "searchsorted"], [98, 3, 1, "", "shape"], [98, 3, 1, "", "size"], [98, 4, 1, "", "sort"], [98, 4, 1, "", "squeeze"], [98, 4, 1, "", "std"], [98, 3, 1, "", "strides"], [98, 4, 1, "", "sum"], [98, 4, 1, "", "swapaxes"], [98, 3, 1, "", "sycl_context"], [98, 3, 1, "", "sycl_device"], [98, 3, 1, "", "sycl_queue"], [98, 4, 1, "", "take"], [98, 4, 1, "", "to_device"], [98, 4, 1, "", "trace"], [98, 4, 1, "", "transpose"], [98, 3, 1, "", "usm_type"], [98, 4, 1, "", "var"]], "dpnp.dtype": [[101, 4, 1, "", "__eq__"], [101, 4, 1, "", "__ge__"], [101, 4, 1, "", "__getitem__"], [101, 4, 1, "", "__gt__"], [101, 4, 1, "", "__le__"], [101, 4, 1, "", "__len__"], [101, 4, 1, "", "__lt__"], [101, 4, 1, "", "__ne__"], [101, 3, 1, "", "alignment"], [101, 3, 1, "", "base"], [101, 3, 1, "", "byteorder"], [101, 3, 1, "", "char"], [101, 3, 1, "", "descr"], [101, 3, 1, "", "fields"], [101, 3, 1, "", "flags"], [101, 3, 1, "", "hasobject"], [101, 3, 1, "", "isalignedstruct"], [101, 3, 1, "", "isbuiltin"], [101, 3, 1, "", "isnative"], [101, 3, 1, "", "itemsize"], [101, 3, 1, "", "kind"], [101, 3, 1, "", "metadata"], [101, 3, 1, "", "name"], [101, 3, 1, "", "names"], [101, 3, 1, "", "ndim"], [101, 4, 1, "", "newbyteorder"], [101, 3, 1, "", "num"], [101, 3, 1, "", "shape"], [101, 3, 1, "", "str"], [101, 3, 1, "", "subdtype"], [101, 3, 1, "", "type"]], "dpnp.fft": [[116, 1, 1, "", "fft"], [117, 1, 1, "", "fft2"], [118, 1, 1, "", "fftfreq"], [119, 1, 1, "", "fftn"], [120, 1, 1, "", "fftshift"], [121, 1, 1, "", "hfft"], [122, 1, 1, "", "ifft"], [123, 1, 1, "", "ifft2"], [124, 1, 1, "", "ifftn"], [125, 1, 1, "", "ifftshift"], [126, 1, 1, "", "ihfft"], [127, 1, 1, "", "irfft"], [128, 1, 1, "", "irfft2"], [129, 1, 1, "", "irfftn"], [130, 1, 1, "", "rfft"], [131, 1, 1, "", "rfft2"], [132, 1, 1, "", "rfftfreq"], [133, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[137, 4, 1, "", "__eq__"], [137, 4, 1, "", "__ge__"], [137, 4, 1, "", "__getitem__"], [137, 4, 1, "", "__gt__"], [137, 4, 1, "", "__iter__"], [137, 4, 1, "", "__le__"], [137, 4, 1, "", "__lt__"], [137, 4, 1, "", "__ne__"], [137, 4, 1, "", "__next__"], [137, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[190, 1, 1, "", "cholesky"], [191, 1, 1, "", "cond"], [192, 1, 1, "", "det"], [193, 1, 1, "", "eig"], [194, 1, 1, "", "eigh"], [195, 1, 1, "", "eigvals"], [196, 1, 1, "", "eigvalsh"], [197, 1, 1, "", "inv"], [198, 1, 1, "", "lstsq"], [199, 1, 1, "", "matrix_power"], [200, 1, 1, "", "matrix_rank"], [201, 1, 1, "", "multi_dot"], [202, 1, 1, "", "norm"], [203, 1, 1, "", "pinv"], [204, 1, 1, "", "qr"], [205, 1, 1, "", "slogdet"], [206, 1, 1, "", "solve"], [207, 1, 1, "", "svd"], [208, 1, 1, "", "tensorinv"], [209, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[252, 6, 1, "", "T"], [253, 4, 1, "", "__abs__"], [254, 4, 1, "", "__add__"], [255, 4, 1, "", "__and__"], [256, 4, 1, "", "__bool__"], [257, 4, 1, "", "__complex__"], [258, 4, 1, "", "__copy__"], [259, 4, 1, "", "__eq__"], [260, 4, 1, "", "__float__"], [261, 4, 1, "", "__floordiv__"], [262, 4, 1, "", "__ge__"], [263, 4, 1, "", "__getitem__"], [264, 4, 1, "", "__gt__"], [265, 4, 1, "", "__iadd__"], [266, 4, 1, "", "__iand__"], [267, 4, 1, "", "__ifloordiv__"], [268, 4, 1, "", "__ilshift__"], [269, 4, 1, "", "__imod__"], [270, 4, 1, "", "__imul__"], [271, 4, 1, "", "__int__"], [272, 4, 1, "", "__invert__"], [273, 4, 1, "", "__ior__"], [274, 4, 1, "", "__ipow__"], [275, 4, 1, "", "__irshift__"], [276, 4, 1, "", "__isub__"], [277, 4, 1, "", "__itruediv__"], [278, 4, 1, "", "__ixor__"], [279, 4, 1, "", "__le__"], [280, 4, 1, "", "__len__"], [281, 4, 1, "", "__lshift__"], [282, 4, 1, "", "__lt__"], [283, 4, 1, "", "__matmul__"], [284, 4, 1, "", "__mod__"], [285, 4, 1, "", "__mul__"], [286, 4, 1, "", "__ne__"], [287, 4, 1, "", "__neg__"], [288, 4, 1, "", "__new__"], [289, 4, 1, "", "__or__"], [290, 4, 1, "", "__pos__"], [291, 4, 1, "", "__pow__"], [292, 4, 1, "", "__repr__"], [293, 4, 1, "", "__rshift__"], [294, 4, 1, "", "__setitem__"], [295, 4, 1, "", "__str__"], [296, 4, 1, "", "__sub__"], [297, 4, 1, "", "__truediv__"], [298, 4, 1, "", "__xor__"], [299, 4, 1, "", "all"], [300, 4, 1, "", "any"], [301, 4, 1, "", "argmax"], [302, 4, 1, "", "argmin"], [303, 4, 1, "", "argsort"], [304, 4, 1, "", "astype"], [305, 4, 1, "", "choose"], [306, 4, 1, "", "clip"], [307, 4, 1, "", "conj"], [308, 4, 1, "", "conjugate"], [309, 4, 1, "", "copy"], [310, 4, 1, "", "cumprod"], [311, 4, 1, "", "cumsum"], [312, 4, 1, "", "diagonal"], [313, 6, 1, "", "dtype"], [314, 4, 1, "", "fill"], [315, 6, 1, "", "flags"], [316, 6, 1, "", "flat"], [317, 4, 1, "", "flatten"], [318, 6, 1, "", "imag"], [319, 4, 1, "", "item"], [320, 6, 1, "", "itemsize"], [321, 4, 1, "", "max"], [322, 4, 1, "", "mean"], [323, 4, 1, "", "min"], [324, 6, 1, "", "nbytes"], [325, 6, 1, "", "ndim"], [326, 4, 1, "", "nonzero"], [327, 4, 1, "", "partition"], [328, 4, 1, "", "prod"], [329, 4, 1, "", "put"], [330, 4, 1, "", "ravel"], [331, 6, 1, "", "real"], [332, 4, 1, "", "repeat"], [333, 4, 1, "", "reshape"], [334, 4, 1, "", "round"], [335, 4, 1, "", "searchsorted"], [336, 6, 1, "", "shape"], [337, 6, 1, "", "size"], [338, 4, 1, "", "sort"], [339, 4, 1, "", "squeeze"], [340, 4, 1, "", "std"], [341, 6, 1, "", "strides"], [342, 4, 1, "", "sum"], [343, 4, 1, "", "swapaxes"], [344, 4, 1, "", "take"], [345, 4, 1, "", "trace"], [346, 4, 1, "", "transpose"], [347, 4, 1, "", "var"]], "dpnp.random": [[371, 2, 1, "", "RandomState"], [372, 1, 1, "", "beta"], [373, 1, 1, "", "binomial"], [374, 1, 1, "", "bytes"], [375, 1, 1, "", "chisquare"], [376, 1, 1, "", "choice"], [377, 1, 1, "", "dirichlet"], [378, 1, 1, "", "exponential"], [379, 1, 1, "", "f"], [380, 1, 1, "", "gamma"], [381, 1, 1, "", "geometric"], [382, 1, 1, "", "gumbel"], [383, 1, 1, "", "hypergeometric"], [384, 1, 1, "", "laplace"], [385, 1, 1, "", "logistic"], [386, 1, 1, "", "lognormal"], [387, 1, 1, "", "logseries"], [388, 1, 1, "", "multinomial"], [389, 1, 1, "", "multivariate_normal"], [390, 1, 1, "", "negative_binomial"], [391, 1, 1, "", "noncentral_chisquare"], [392, 1, 1, "", "noncentral_f"], [393, 1, 1, "", "normal"], [394, 1, 1, "", "pareto"], [395, 1, 1, "", "permutation"], [396, 1, 1, "", "poisson"], [397, 1, 1, "", "power"], [398, 1, 1, "", "rand"], [399, 1, 1, "", "randint"], [400, 1, 1, "", "randn"], [401, 1, 1, "", "random"], [402, 1, 1, "", "random_integers"], [403, 1, 1, "", "random_sample"], [404, 1, 1, "", "ranf"], [405, 1, 1, "", "rayleigh"], [406, 1, 1, "", "sample"], [407, 1, 1, "", "seed"], [408, 1, 1, "", "shuffle"], [409, 1, 1, "", "standard_cauchy"], [410, 1, 1, "", "standard_exponential"], [411, 1, 1, "", "standard_gamma"], [412, 1, 1, "", "standard_normal"], [413, 1, 1, "", "standard_t"], [414, 1, 1, "", "triangular"], [415, 1, 1, "", "uniform"], [416, 1, 1, "", "vonmises"], [417, 1, 1, "", "wald"], [418, 1, 1, "", "weibull"], [419, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[371, 4, 1, "", "__eq__"], [371, 4, 1, "", "__ge__"], [371, 4, 1, "", "__gt__"], [371, 4, 1, "", "__le__"], [371, 4, 1, "", "__lt__"], [371, 4, 1, "", "__ne__"], [371, 4, 1, "", "get_state"], [371, 4, 1, "", "get_sycl_device"], [371, 4, 1, "", "get_sycl_queue"], [371, 4, 1, "", "normal"], [371, 4, 1, "", "rand"], [371, 4, 1, "", "randint"], [371, 4, 1, "", "randn"], [371, 4, 1, "", "random_sample"], [371, 4, 1, "", "standard_normal"], [371, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 83, 86, 98, 101, 102, 117, 119, 121, 123, 124, 126, 128, 129, 131, 133, 134, 149, 150, 198, 200, 202, 207, 313, 346, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 386, 388, 390, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 464, 496], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 158, 161, 162, 163, 164, 167, 170, 171, 173, 176, 177, 178, 179, 180, 185, 186, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 210, 211, 212, 213, 214, 215, 219, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 309, 312, 314, 318, 319, 331, 334, 336, 338, 340, 345, 346, 347, 348, 351, 353, 354, 355, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 373, 378, 380, 381, 382, 384, 385, 386, 388, 389, 390, 393, 395, 396, 397, 398, 401, 403, 404, 405, 406, 409, 412, 414, 415, 416, 421, 424, 426, 427, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 486, 487, 488, 496], "00": [79, 104, 116, 445], "000": [239, 373], "00000000005e": 112, "00000000e": [116, 239], "000000082740371e": 112, "000000e": [79, 445], "00001e10": [17, 173], "0001e10": 173, "000e": 104, "000j": 239, "002": 239, "00867716": 375, "01": 104, "02": [104, 239], "03": 239, "03088525e": 105, "0396842": 222, "04": 104, "04719755": 370, "04921661": 371, "05": [17, 104, 173], "0614962j": [117, 131], "06310682": 371, "07": 239, "07944154": [84, 205], "08": [17, 79, 104, 142, 173, 389, 445], "08156915": 371, "0943951": 370, "09640474": 217, "09861229": [84, 205, 214], "0d": 34, "0dev0": 6, "0j": [20, 97, 98, 174, 175, 181, 182, 225, 318, 331, 443], "0th": 463, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 214, 215, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 303, 304, 309, 312, 314, 317, 318, 319, 325, 327, 331, 336, 338, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 373, 375, 376, 378, 380, 382, 384, 385, 386, 388, 389, 390, 393, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 410, 412, 415, 420, 421, 422, 423, 424, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 68, 75, 84, 85, 86, 90, 91, 94, 95, 98, 99, 101, 103, 104, 112, 113, 120, 132, 154, 156, 162, 163, 164, 169, 173, 185, 186, 187, 212, 213, 214, 215, 222, 223, 230, 238, 333, 365, 367, 371, 373, 383, 395, 425, 431, 432, 434, 437, 440, 450, 454, 460, 469, 470, 471, 473, 474, 475, 484, 486], "100": [90, 132, 156, 173, 186, 201, 222, 383, 409, 423, 480], "1000": [64, 156, 201, 222, 372, 373, 378, 380, 382, 383, 384, 385, 386, 393, 394, 397, 399, 401, 404, 406, 412, 416, 417, 418, 419, 423, 467], "10000": [86, 201, 381, 396, 405, 415], "100000": 390, "1000000": [409, 411, 413, 414], "1024": 0, "105": 104, "11": [31, 32, 56, 80, 90, 91, 98, 99, 113, 158, 164, 202, 333, 390, 399, 437, 440, 446, 469, 470, 471, 473, 474, 475, 484, 486], "110": [103, 171], "111111": 239, "113": 216, "11570901": 371, "1179187": 371, "118033988749895": 455, "119": 103, "1196081": 371, "12": [10, 31, 32, 55, 83, 88, 90, 91, 95, 99, 101, 103, 113, 117, 131, 164, 169, 222, 363, 365, 370, 395, 421, 440, 469, 470, 471, 473, 474, 475, 484, 486], "120": [85, 88], "123": [98, 104, 319], "125": [142, 361, 362, 481], "127": 156, "128": [0, 156, 239], "12th": 103, "13": [10, 31, 32, 59, 90, 91, 97, 99, 101, 103, 164, 172, 225, 421, 440, 470, 471, 474, 475, 479, 484], "130": 103, "134": 171, "13436424": 371, "135": [29, 51], "13710533": 375, "139884456208480": 16, "13j": 423, "14": [31, 32, 58, 59, 90, 91, 97, 99, 136, 164, 171, 172, 440, 463, 470, 471, 474, 475, 484], "140": 480, "140053638309840": 21, "14157194": 467, "14159265": [13, 24, 29, 51, 87, 370], "14423775e": 116, "14j": 423, "15": [31, 32, 86, 90, 91, 95, 99, 103, 121, 126, 164, 203, 213, 395, 440, 470, 471, 474, 475, 484], "150": 88, "15888336": 222, "15j": 423, "16": [6, 58, 90, 91, 99, 101, 116, 142, 152, 156, 158, 164, 238, 361, 362, 423, 441, 461, 470, 471, 474, 475, 484], "1621": [421, 479], "16227766": [191, 425], "16394577": 371, "164": 217, "166": 217, "16j": 116, "17": [6, 116, 117, 131], "17157288": [194, 196], "17281316e": 116, "177": [156, 222], "17j": 116, "18": [6, 85, 101, 102, 103, 119, 202, 222], "180": [29, 51, 87, 88, 103, 369, 480, 504], "1805": 10, "18236388": 371, "18557831": 371, "1887902": 370, "19": [10, 81, 101, 421, 480], "1923875335537315": 400, "19245009": 439, "1924881e": 142, "1965": 10, "19722458": 84, "1d": [102, 366, 367, 460, 467], "1e": [17, 112, 173, 193, 203, 213, 214, 216, 217, 389], "1e10": [17, 173], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 72, 73, 98, 127, 169, 174, 181, 193, 207, 318, 331, 422, 449, 452], "1th": 463, "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 174, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 304, 309, 312, 314, 317, 319, 325, 327, 336, 337, 346, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 369, 370, 371, 375, 379, 383, 389, 395, 398, 400, 411, 413, 414, 417, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488], "20": [6, 85, 95, 103, 132, 170, 173, 186, 187, 202, 367, 373, 388, 440, 460, 480], "20000": 373, "2007": 10, "200e": 104, "20477401j": [117, 131], "2048": 0, "21": [86, 101], "210": 88, "215": 222, "21941987": 371, "21968665": 371, "22": [366, 421, 479], "220": 480, "220446049250313e": 423, "222222": 239, "22460635e": 461, "22464680e": 116, "22497216": 202, "22776602": 222, "23": [6, 371, 421], "230": 103, "23598776": 370, "23606798": 202, "24": [31, 32, 83, 85, 98, 102, 103, 171, 186, 208, 336, 363, 463, 465], "240": 88, "24264069": 202, "24544512": 371, "247219128924647": 248, "25": [101, 103, 108, 118, 158, 162, 163, 197, 210, 238, 250, 400, 409, 441, 481, 482], "255": [58, 60], "25506903": 371, "256": [0, 156], "26": [61, 103], "260": 480, "26618007j": 215, "267": 6, "27": [65, 142, 222, 361, 362, 439, 481], "270": 88, "28": 103, "28000000e": 239, "2800000e": 239, "283185307179586": 480, "28318531": 480, "28352814": 371, "28904982": 217, "297": 10, "299": 6, "2d": [207, 225, 436, 478], "2e": 86, "2f": 0, "2j": [72, 73, 97, 116, 169, 174, 181, 194, 196, 225, 422, 443, 449, 483], "2k": 480, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 61, 62, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 125, 126, 128, 129, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 156, 158, 162, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 181, 182, 183, 185, 186, 187, 191, 192, 193, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 309, 312, 317, 319, 325, 327, 336, 337, 338, 346, 348, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 366, 370, 371, 375, 379, 386, 389, 395, 398, 399, 400, 410, 414, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 444, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "30": [83, 88, 98, 103, 132, 337, 367, 370, 460, 483], "300": [88, 480], "3003003": 424, "301": 10, "30102999566": 213, "3012989": 446, "30258509": [84, 223], "308": 239, "308j": 239, "31": [61, 156, 421, 479], "312": 105, "316": 222, "32": [101, 103, 156, 247, 249, 463], "33": 424, "330": 88, "333": 201, "33333333": 239, "3333333e": 239, "33340275": 467, "33486982e": 116, "33836967": 371, "340": 480, "34074171": 371, "34132519": 222, "34846923": 202, "34960421": 222, "35": [103, 381], "35106603e": 202, "35355338": 439, "36": 83, "360": 480, "37": [421, 437, 479], "371139e": 79, "38": [171, 373], "380": 480, "38268343": 194, "38268343j": 194, "38629436": 84, "38885": 373, "389056099": [109, 112], "39": 6, "392": 6, "39295758": 371, "397": 6, "3e": [0, 86, 423], "3j": [97, 225, 449], "3rd": [70, 71, 99, 450], "3x3": 224, "3x8000": 410, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 60, 62, 68, 69, 70, 71, 74, 77, 79, 81, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 138, 139, 142, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 163, 164, 165, 166, 169, 170, 171, 174, 181, 185, 186, 189, 192, 197, 199, 200, 202, 205, 208, 209, 210, 215, 218, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 243, 245, 248, 250, 309, 312, 317, 325, 327, 336, 338, 346, 348, 351, 353, 355, 358, 361, 362, 363, 365, 366, 370, 371, 372, 375, 395, 400, 416, 420, 421, 422, 423, 426, 427, 429, 430, 434, 435, 436, 437, 438, 441, 443, 447, 448, 450, 451, 454, 455, 456, 458, 459, 463, 464, 466, 467, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488], "40": [103, 132, 187, 367, 460], "40882036": 371, "4096": 0, "41": [6, 421, 479], "41421356": [191, 202], "42": 441, "420": 480, "429": 6, "44": [359, 366], "4400": [103, 463], "443469": 222, "44509285e": 116, "45": [20, 29, 51], "4532": [103, 463], "46": 103, "460": 480, "46394577": 371, "464": 222, "4664": [103, 463], "47": 6, "4730": [103, 463], "4796": [103, 463], "48": [6, 83], "48093112": 371, "4874": [103, 463], "48927254": 371, "49": 6, "4928": [103, 463], "49543509": 371, "49778714": 480, "499128": 97, "4d": 207, "4e": 423, "4j": [169, 422, 483], "4x4": [470, 474], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 61, 62, 66, 68, 70, 71, 74, 77, 78, 81, 83, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 113, 117, 118, 120, 128, 131, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 156, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 174, 181, 185, 186, 187, 190, 194, 196, 197, 201, 202, 206, 210, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 245, 248, 304, 309, 337, 348, 351, 353, 354, 355, 358, 361, 362, 365, 366, 370, 371, 372, 373, 375, 378, 390, 394, 395, 396, 397, 400, 403, 418, 420, 421, 422, 423, 424, 426, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 447, 449, 450, 454, 455, 457, 458, 459, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488], "50": [117, 131, 132, 156, 186, 216, 217, 222, 367, 460, 463, 467, 486], "500": [186, 480], "5018": [103, 463], "5091786": 80, "51": 6, "512": 0, "5162": [103, 463], "52069395e": 116, "52359878": 370, "52928804": 371, "5306": [103, 463], "5399045e": 142, "54": 371, "540": 480, "542": 6, "54288406": 371, "54465213": 371, "548739": 446, "54930614": [30, 52], "55": [359, 366, 441], "5555555555555554": 250, "56": 6, "562": 222, "5620499351813308": [11, 12], "56920387": 371, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 370, 480], "58997253": 371, "591953": 80, "5e": [216, 217], "5j": [232, 353, 449], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 39, 53, 56, 60, 61, 68, 70, 71, 77, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 107, 112, 113, 118, 121, 132, 139, 142, 155, 158, 164, 165, 169, 170, 171, 185, 186, 202, 203, 204, 207, 208, 210, 222, 224, 226, 242, 243, 247, 309, 319, 336, 348, 351, 355, 359, 361, 362, 365, 371, 388, 390, 395, 400, 420, 421, 422, 428, 429, 434, 435, 436, 437, 438, 441, 447, 449, 450, 454, 456, 457, 458, 459, 463, 465, 467, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 483, 484, 485, 486, 488], "60": [83, 88, 103, 367, 460, 463, 480, 486], "600": 186, "60943791": 84, "61799388": 370, "62": 171, "6227766": 156, "62318272": 375, "62341325": 156, "624": 104, "63": 156, "63317787e": 461, "63522211": 371, "63836967": 371, "64": [0, 4, 103, 142, 156, 247, 249, 361, 362, 437], "64000": 103, "65745445": [14, 25], "66519143": 370, "6666666666666665": 245, "67": 103, "67305985": 149, "673174": 371, "67718303": 371, "69295758": 371, "69314718": [84, 205, 214], "6990877": 371, "6j": [169, 422, 483], "7": [15, 17, 22, 23, 39, 53, 66, 68, 77, 81, 83, 86, 89, 90, 91, 93, 94, 96, 98, 99, 102, 109, 113, 139, 143, 156, 158, 164, 171, 173, 185, 186, 202, 207, 224, 226, 230, 235, 238, 319, 351, 364, 365, 371, 395, 421, 422, 426, 431, 433, 434, 436, 450, 456, 457, 458, 459, 463, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 483, 484, 486], "70": [186, 483, 486], "700": 186, "700e": 104, "70710677": [98, 318, 331], "70710678": [191, 193], "70710678j": 193, "70882036": 371, "71238898": 370, "718281828": [109, 112], "72": 83, "720": [85, 480], "72075441": 222, "72538256": [27, 47], "74165739": 202, "742278e": 445, "74596669": 202, "74921661": 371, "75": [56, 108, 118, 158, 163, 197, 210], "754": 135, "75958653": 370, "76096244": 371, "76377462": 371, "77447665": 217, "78539816": [20, 28, 29, 50, 51, 480], "78927254": 371, "79175947": 84, "79769313e": 239, "7j": 364, "8": [4, 15, 17, 22, 39, 53, 65, 68, 77, 83, 89, 90, 91, 93, 94, 98, 99, 101, 103, 104, 113, 116, 118, 132, 133, 139, 142, 156, 158, 164, 169, 173, 185, 192, 202, 205, 207, 208, 210, 222, 224, 226, 336, 351, 361, 362, 363, 365, 371, 395, 414, 421, 422, 434, 436, 439, 445, 450, 459, 463, 465, 467, 469, 470, 471, 473, 474, 475, 479, 480, 481, 484, 486], "80": [101, 103, 486], "8000": 410, "80226506": 371, "81715362": 371, "827941": [156, 222], "82842712": [194, 196], "84288406": 371, "84401099": 371, "84743374": 371, "84803548": 202, "85": 103, "86": 171, "87649168": 216, "88": 102, "88178420e": 116, "88997253": 371, "89920014": 375, "8f": 101, "8j": 483, "9": [4, 15, 22, 39, 53, 68, 77, 83, 86, 89, 90, 91, 93, 96, 98, 99, 103, 105, 113, 116, 119, 120, 125, 136, 142, 144, 152, 156, 158, 164, 173, 185, 193, 198, 202, 203, 204, 207, 222, 224, 238, 239, 319, 351, 365, 371, 373, 375, 395, 421, 422, 434, 450, 451, 456, 463, 469, 470, 471, 473, 474, 475, 476, 479, 480, 481, 484, 486], "90": [20, 88, 369, 436, 486], "917152": 462, "92387953": 194, "92387953j": 194, "94": 103, "94591015": 84, "95": 198, "95799250e": 116, "98": 225, "98024613": 222, "99": [102, 214, 367], "99322285": [14, 25], "99532227": 108, "996272": 462, "99822295": [27, 47], "99853728": 108, "999": 104, "9990000e": 239, "99959305": 108, "99989938": 108, "9999": 239, "99997791": 108, "999999e": 173, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 73, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 128, 129, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 169, 170, 172, 176, 177, 178, 179, 180, 187, 188, 189, 190, 194, 195, 196, 198, 200, 201, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 232, 234, 235, 238, 242, 243, 247, 249, 304, 309, 317, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 364, 369, 370, 371, 373, 390, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 420, 421, 424, 426, 432, 433, 436, 439, 443, 444, 445, 446, 450, 451, 452, 456, 458, 459, 461, 462, 463, 464, 466, 468, 470, 472, 474, 476, 477, 481, 484, 486, 487, 488, 504], "AND": [16, 58, 59, 60, 61, 172, 218, 219, 220, 221], "And": [4, 48, 49, 90, 98, 304, 470, 474], "As": 478, "Be": 193, "Being": 3, "But": [4, 101], "By": [31, 32, 42, 49, 83, 98, 117, 121, 123, 127, 129, 133, 156, 198, 210, 222, 225, 227, 229, 233, 240, 241, 244, 245, 246, 247, 248, 249, 250, 304, 420, 427, 434, 447, 455, 459, 468, 470, 472, 474, 482], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 317, 318, 319, 325, 331, 333, 336, 341, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496, 504], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 68, 70, 71, 81, 83, 84, 85, 86, 89, 93, 94, 97, 98, 99, 101, 102, 103, 104, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 145, 146, 148, 153, 156, 158, 162, 163, 164, 165, 169, 170, 171, 173, 179, 180, 181, 190, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 222, 223, 227, 228, 229, 231, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 338, 358, 359, 363, 366, 367, 371, 393, 415, 422, 423, 425, 427, 428, 429, 430, 434, 437, 438, 440, 448, 450, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 478, 480, 481, 482, 483, 484, 485, 486, 496, 504], "In": [4, 10, 31, 32, 85, 86, 103, 104, 122, 123, 124, 127, 129, 158, 190, 195, 201, 204, 217, 222, 242, 243, 245, 247, 249, 363, 366, 371, 415, 421, 429, 430, 457, 459, 477], "It": [4, 10, 16, 21, 22, 31, 32, 68, 85, 86, 95, 97, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 158, 194, 196, 217, 225, 229, 240, 241, 242, 243, 244, 245, 246, 248, 250, 363, 430, 441, 455, 457, 459, 482, 504], "Its": [68, 208, 367, 465], "NOT": [59, 172, 218, 219, 220, 221], "No": [41, 42, 103, 190], "Not": [16, 21, 42, 176, 239, 242, 243, 244, 246, 247, 249, 363], "OR": [21, 58, 59, 60, 61, 172, 218, 219, 220, 221], "On": 4, "One": [53, 54, 55, 83, 100, 101, 127, 429], "Or": [158, 467], "That": 224, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 63, 65, 68, 69, 70, 71, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 175, 176, 177, 178, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 304, 309, 318, 325, 327, 331, 336, 348, 349, 350, 351, 352, 353, 354, 355, 358, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 374, 376, 377, 387, 392, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 496, 500, 504], "Then": [10, 43, 45, 224], "There": [10, 210, 478], "These": [4, 22, 101, 103, 104, 111, 224, 237, 367, 460, 470, 474, 496, 500], "To": [4, 121, 127, 129, 142, 351, 480], "With": [31, 32, 56, 81, 164, 202, 227, 233, 240, 241, 247, 249, 363, 457, 484], "_": [0, 163, 454, 467], "__array_interface__": 101, "__bool__": 496, "__dlpack__": 148, "__dlpack_device__": 148, "__eq__": [98, 101, 137, 371], "__ge__": [98, 101, 137, 371], "__getitem__": [98, 101, 137], "__gt__": [98, 101, 137, 371], "__iter__": 137, "__le__": [98, 101, 137, 371], "__len__": [98, 101], "__lt__": [98, 101, 137, 371], "__main__": 0, "__name__": 0, "__ne__": [98, 101, 137, 371], "__next__": 137, "__setitem__": [98, 137], "__sycl_usm_array_interface__": 44, "_dtypes_list": 0, "a1": [37, 38], "a2": [37, 38], "a_": 10, "a_k": 10, "a_m": 10, "a_resamp": 127, "ab": [6, 10, 12, 17, 173], "abc": 103, "abcd": 104, "about": [43, 45, 98, 135, 193, 315, 428, 496], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 84, 89, 92, 119, 124, 129, 133, 170, 204, 223, 239, 425, 468, 469, 473], "absolut": [6, 11, 17, 20, 115, 173, 205, 248, 250, 364, 423, 455, 480, 482, 504], "accept": [33, 103, 371, 448, 470, 474], "access": [10, 90, 91, 134, 224, 470, 474, 496], "accord": [16, 21, 56, 64, 101, 133, 135, 193, 194, 195, 196, 223, 229, 245, 248, 250, 425, 432, 455, 482], "accordingli": [244, 246], "account": 429, "accumul": [84, 85, 86, 103, 162, 242, 243, 247, 249, 363, 457, 465], "accur": [101, 112, 158, 214, 216], "accuraci": [122, 123, 124, 127, 129], "achiev": 103, "aco": 24, "acosh": 25, "across": [93, 163, 242, 243, 247, 249], "activ": 4, "actual": [101, 162, 163, 190, 201], "ad": [17, 101, 104, 111, 127, 173, 192, 205, 217, 480, 500], "add": [6, 101, 504], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [84, 190, 245, 478], "address": 101, "adjac": 480, "advanc": 103, "advers": 103, "advis": 4, "affect": [23, 93, 103, 134, 162, 163], "after": [100, 134, 350, 390, 434], "ag": 101, "against": [17, 31, 32, 62, 63, 68, 81, 157, 173, 202, 203, 227, 233, 240, 241, 247, 249, 363, 367, 457, 460], "ai": [3, 367, 460], "ai_max": 460, "ai_min": 460, "ainv": [197, 208], "al": 10, "algebra": [489, 500], "algorithm": [10, 103, 104, 116, 122, 130], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 70, 71, 96, 106, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 155, 172, 187, 235, 251, 355, 358, 361, 362, 371, 401, 404, 406, 426, 432, 438, 466, 476, 480, 485, 488], "alias": [9, 121, 122, 127, 129], "align": 101, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 69, 81, 88, 94, 98, 100, 101, 103, 104, 109, 110, 112, 114, 119, 120, 124, 125, 128, 129, 133, 134, 139, 140, 141, 149, 150, 152, 156, 158, 165, 167, 169, 185, 190, 200, 203, 210, 222, 227, 233, 240, 241, 244, 246, 304, 307, 314, 327, 363, 373, 422, 423, 434, 438, 441, 453, 457, 478, 485, 496, 504], "allclos": [6, 37, 173, 197, 203, 204, 206, 207, 209], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 75, 84, 89, 90, 92, 98, 105, 106, 114, 118, 132, 136, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 179, 180, 210, 211, 222, 223, 224, 229, 232, 245, 248, 250, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 425, 453, 455, 468, 470, 474, 481, 482, 487, 488], "allow": [39, 49, 98, 103, 162, 163, 217, 224, 304, 333, 459, 496], "alltru": 6, "almost": [34, 193, 470], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 69, 70, 71, 81, 84, 85, 86, 89, 90, 92, 93, 94, 98, 99, 100, 102, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 141, 145, 146, 151, 156, 158, 164, 165, 170, 202, 204, 208, 209, 210, 222, 223, 227, 228, 229, 230, 231, 233, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 301, 302, 303, 310, 311, 321, 323, 328, 329, 337, 340, 342, 344, 345, 347, 359, 363, 365, 366, 367, 425, 427, 434, 435, 436, 438, 441, 447, 448, 450, 454, 455, 457, 459, 460, 463, 464, 465, 467, 470, 471, 474, 475, 478, 480, 482, 484, 485, 496], "alpha": [372, 377, 378, 394, 397], "alreadi": [4, 10, 41, 42, 53, 54, 55, 356, 478], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 61, 76, 96, 98, 101, 103, 107, 111, 119, 124, 128, 129, 130, 133, 142, 144, 145, 146, 147, 151, 153, 158, 159, 160, 161, 162, 166, 173, 187, 188, 189, 190, 216, 217, 224, 228, 234, 235, 237, 238, 336, 351, 352, 361, 362, 409, 426, 432, 456, 459, 476, 478, 496], "alter": 93, "altern": [3, 4, 16, 21, 85, 86, 97, 98, 225, 227, 229, 233, 242, 243, 245, 247, 248, 249, 250, 346, 363, 455, 457, 482], "although": [20, 101, 123, 124, 125, 464], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 93, 98, 99, 102, 115, 142, 148, 164, 194, 196, 248, 250, 304, 351, 429, 449, 455, 482, 484], "amax": [6, 227], "ambigu": 496, "amin": [6, 233], "among": 102, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182, 185, 187, 188, 189, 192, 195, 198, 200, 201, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 303, 304, 305, 306, 309, 319, 321, 325, 327, 329, 332, 333, 336, 337, 338, 339, 343, 344, 346, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 373, 378, 379, 381, 390, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 496, 504], "anaconda": 3, "analog": [117, 119, 121, 123, 124, 126], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 87, 88, 169, 369, 370, 422, 423, 480, 504], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 62, 63, 75, 89, 92, 94, 98, 101, 103, 104, 117, 119, 123, 124, 129, 133, 134, 154, 155, 156, 158, 163, 165, 175, 182, 183, 199, 209, 210, 222, 224, 244, 246, 304, 325, 371, 415, 428, 448, 481, 496], "anoth": [4, 77, 98, 113, 123, 124, 148, 309, 329, 359, 366, 435], "answer": 373, "anti": [93, 134], "anyth": 101, "ap": 198, "apart": 467, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "appear": [111, 140, 141, 478], "append": [0, 6, 94, 102, 104, 111, 122, 123, 124, 187], "appli": [31, 32, 33, 56, 64, 103, 239, 421, 430, 431, 463, 467], "applic": [10, 101], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [98, 101, 122, 123, 124, 336], "appropri": [4, 31, 32, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 157, 209, 240, 241, 244, 246, 371, 399, 402, 430, 459, 496], "approxim": [135, 467], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 94, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 156, 158, 159, 160, 161, 162, 163, 166, 171, 172, 173, 176, 177, 178, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 326, 327, 336, 348, 349, 350, 351, 352, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 396, 397, 399, 402, 403, 405, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 430, 432, 433, 434, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 467, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 496, 504], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 68, 76, 88, 89, 90, 91, 93, 96, 97, 98, 99, 103, 107, 109, 110, 112, 113, 116, 138, 139, 142, 147, 155, 156, 158, 162, 164, 170, 171, 185, 186, 202, 210, 213, 214, 218, 219, 220, 221, 222, 224, 225, 227, 231, 233, 235, 238, 312, 352, 355, 359, 361, 362, 366, 370, 395, 426, 428, 431, 434, 436, 441, 450, 456, 463, 465, 467, 470, 471, 474, 475, 476, 484, 486, 488], "arbitrari": [48, 97, 101, 103, 171, 225, 431, 470, 474], "arbitrarili": 103, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 79], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 80], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 445], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 446], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 461], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 462], "area": 467, "arg": [62, 185, 371], "arg1": 184, "arg2": 184, "argmax": [0, 6, 32, 98, 240, 367, 460, 496], "argmin": [6, 31, 98, 241, 460, 496], "argpartit": [6, 33, 367, 460, 496], "argsort": [6, 98, 358, 367, 440, 448, 460, 466, 496], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 76, 79, 80, 87, 88, 96, 97, 98, 101, 104, 108, 109, 110, 112, 142, 143, 144, 145, 146, 147, 161, 166, 169, 172, 183, 184, 187, 201, 202, 213, 214, 215, 216, 217, 224, 225, 228, 234, 235, 236, 238, 333, 346, 349, 350, 360, 361, 362, 364, 366, 369, 370, 422, 423, 424, 426, 431, 432, 433, 439, 443, 444, 445, 446, 454, 456, 461, 462, 463, 467, 476, 477, 496, 504], "argwher": [6, 351], "ari": [39, 53, 54, 55, 99, 102, 164, 450, 484], "arithmet": [56, 156, 229, 230, 245, 248, 250, 360, 455, 457, 482, 489, 500], "around": [6, 98, 156, 366, 421, 437], "arr": [22, 42, 91, 101, 163, 368, 395, 421, 471, 475], "arr2": 101, "arr_t": [49, 98, 304], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 258, 301, 302, 303, 304, 305, 306, 309, 312, 313, 314, 315, 317, 318, 319, 320, 322, 324, 325, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 500, 504], "array2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 75, 77, 89, 92, 102, 113, 154, 155, 156, 175, 182, 210, 222, 348, 359, 366, 367, 371, 436, 442, 447, 459, 463, 481], "array_of_diagon": 93, "array_repr": 6, "array_split": [6, 70, 71, 450], "array_str": 6, "arrays_and_dtyp": 431, "art": 10, "asanyarrai": [6, 41, 42, 45, 428], "asarrai": [4, 6, 40, 42, 43, 45, 48, 348, 428, 447], "asarray_chkfinit": [6, 40, 41], "ascend": [194, 196, 440], "ascii": 101, "ascontiguousarrai": [6, 40, 41, 42, 45, 428], "asfarrai": [6, 40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 428], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 98, "aspect": 101, "assembl": [70, 71, 100, 165, 438, 454, 485], "assign": [98, 314, 336, 470, 474], "associ": [56, 162, 163, 496], "assum": [10, 56, 104, 121, 127, 129, 200, 203, 207, 224, 467], "astyp": [6, 98, 156, 351], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 54, 55, 111], "atleast_2d": [6, 53, 55, 111], "atleast_3d": [6, 53, 54, 111], "atol": [17, 173], "attain": 0, "attempt": [97, 201], "attribut": [98, 101, 106, 135, 155, 168, 204, 355, 488, 489], "automat": [162, 163], "avail": [2, 3, 4, 10, 78, 82, 101, 108, 230, 236, 240, 241, 244, 246, 247, 489, 496], "averag": [6, 98, 229, 245, 322, 457, 500], "avg": 56, "avoid": [36, 41, 54, 55, 121, 127, 129], "aweight": 82, "ax": [16, 21, 31, 32, 56, 81, 84, 94, 97, 98, 103, 111, 117, 119, 120, 123, 124, 125, 128, 129, 131, 133, 139, 158, 171, 202, 206, 208, 209, 223, 225, 226, 227, 229, 233, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 343, 346, 356, 358, 363, 425, 430, 434, 435, 436, 453, 455, 457, 458, 463, 464, 465, 466, 478, 482], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 69, 70, 71, 81, 83, 84, 85, 86, 93, 94, 98, 99, 100, 102, 103, 111, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 139, 140, 141, 145, 146, 151, 156, 158, 164, 165, 170, 198, 202, 210, 222, 223, 225, 227, 228, 229, 230, 233, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 299, 300, 301, 302, 303, 310, 311, 317, 321, 322, 323, 327, 328, 329, 332, 337, 338, 339, 340, 342, 344, 346, 347, 357, 358, 359, 363, 365, 366, 367, 420, 425, 427, 429, 430, 434, 435, 436, 438, 441, 447, 448, 450, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 478, 480, 482, 484, 485, 496], "axis1": [93, 98, 312, 343, 345, 458, 465], "axis2": [93, 98, 312, 343, 345, 458, 465], "axisa": 83, "axisb": 83, "axisc": 83, "axiserror": [33, 448], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 61, 69, 70, 71, 77, 83, 86, 97, 98, 100, 101, 103, 104, 107, 149, 150, 159, 160, 165, 171, 173, 186, 188, 189, 192, 198, 201, 202, 203, 205, 206, 207, 208, 209, 218, 220, 225, 226, 227, 233, 350, 352, 356, 361, 362, 372, 431, 438, 454, 463, 464, 472, 483, 485, 504], "back": [98, 151, 317, 420, 429, 430, 435, 472], "backend": [2, 157, 374, 376, 377, 387, 392, 408], "backward": [10, 49, 98, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 158, 304, 434, 435], "bad": 383, "bartlett": 6, "base": [0, 4, 101, 103, 110, 113, 142, 156, 162, 163, 207, 212, 213, 214, 215, 216, 217, 222, 223, 225, 359, 361, 362, 366, 368], "base_repr": 6, "basic": [64, 103, 496, 500], "bc": [192, 205], "bcde": 104, "becaus": [10, 16, 21, 121, 127, 129, 480, 496], "becom": [10, 98, 162, 346], "been": [100, 367, 435, 460], "befor": [4, 22, 33, 70, 71, 84, 98, 102, 122, 123, 124, 140, 141, 209, 223, 227, 233, 248, 250, 327, 338, 363, 425, 434, 435, 448, 455, 457, 464, 482, 483], "begin": [102, 104, 156, 210, 222, 441], "behav": [211, 366], "behavior": [98, 131, 239, 309, 430, 464], "behind": [98, 327], "being": [3, 101, 145, 146, 228, 234], "belong": [95, 162], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 89, 92, 101, 127, 200, 468, 469, 473, 480, 496], "best": 104, "beta": [6, 382], "between": [17, 23, 39, 64, 94, 102, 135, 150, 153, 158, 171, 173, 210, 222, 388, 402, 456, 467, 480], "beyond": [4, 434], "bia": 82, "big": 101, "bin": [95, 116, 118, 132, 162, 163, 409], "bin_edg": [162, 163], "binari": [58, 60, 61, 149, 150, 152, 153, 489, 500], "binary_repr": 6, "bincount": [6, 95, 162], "binomi": [6, 390], "bins_0": 163, "bins_1": 163, "bit": [58, 59, 60, 61, 101, 135, 168, 172, 187, 218, 220, 221, 247, 249, 432, 444, 500], "bitwis": [58, 60, 61], "bitwise_and": [6, 59, 60, 61, 172, 218], "bitwise_invert": [59, 172], "bitwise_left_shift": 187, "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 172, 220], "bitwise_right_shift": 432, "bitwise_xor": [6, 58, 59, 60, 172, 221], "biufcmmosuv": 101, "blackman": 6, "block": [6, 70, 71, 100, 134, 165, 186, 438, 454, 485], "bmat": 6, "bool": [9, 16, 17, 21, 31, 32, 36, 37, 38, 41, 44, 49, 56, 64, 77, 81, 84, 95, 98, 101, 104, 107, 134, 148, 156, 159, 160, 162, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 200, 202, 203, 207, 210, 222, 223, 227, 229, 231, 233, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 304, 351, 352, 363, 425, 429, 441, 444, 455, 457, 459, 478, 481, 482, 496], "bool_": 9, "boolean": [58, 59, 60, 61, 77, 84, 101, 113, 142, 148, 170, 172, 173, 176, 177, 178, 179, 180, 181, 185, 218, 220, 223, 224, 229, 245, 247, 248, 250, 351, 359, 425, 429, 455, 459, 482], "boolean_sequ": 185, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 61, 68, 76, 83, 96, 97, 107, 123, 130, 142, 144, 145, 146, 147, 159, 160, 161, 166, 171, 173, 186, 187, 188, 189, 202, 216, 217, 218, 220, 221, 225, 228, 234, 235, 238, 249, 350, 352, 361, 362, 426, 432, 456, 463, 465, 470, 472, 474, 476, 483, 486], "bound": [366, 421, 440, 459, 460], "boundari": [158, 366, 421], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 496, "broadcast": [15, 16, 21, 31, 32, 38, 56, 62, 63, 68, 77, 81, 96, 103, 113, 142, 145, 146, 166, 179, 180, 202, 203, 221, 223, 225, 227, 228, 229, 233, 234, 238, 240, 241, 245, 247, 248, 249, 250, 361, 362, 363, 366, 367, 425, 427, 455, 456, 457, 460, 464, 476, 482, 486], "broadcast_arrai": [6, 63], "broadcast_shap": 6, "broadcast_to": [6, 62, 464], "brought": 10, "buffer": [44, 85, 86, 98, 148, 149, 150, 152, 153, 211, 227, 233, 242, 243, 429], "buffer_lik": 149, "buffererror": 148, "build": 500, "build_loc": 4, "built": 101, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 98, 101, 103, 149, 150, 211, 304, 320, 324], "byte_bound": 6, "byteord": 101, "byteswap": 6, "bz2": 211, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 83, 87, 88, 96, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 154, 155, 157, 159, 160, 161, 166, 169, 171, 172, 176, 177, 178, 186, 187, 188, 189, 192, 198, 201, 202, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 234, 235, 238, 304, 309, 317, 330, 349, 350, 351, 352, 354, 355, 360, 361, 362, 364, 369, 370, 420, 421, 424, 426, 428, 429, 430, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 463, 464, 476, 477, 478, 479, 486, 487, 488, 504], "c_contigu": [43, 45, 98, 309, 428], "ca": 74, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 84, 86, 94, 96, 102, 103, 107, 109, 110, 112, 116, 125, 142, 143, 144, 147, 158, 163, 166, 193, 194, 195, 196, 198, 203, 214, 216, 217, 223, 225, 229, 235, 238, 245, 248, 250, 352, 361, 362, 363, 425, 426, 455, 456, 476, 482, 483, 489, 504], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 101, 122, 123, 124, 127, 130, 151, 193, 195, 201, 224, 258, 351, 453, 459, 464, 467, 504], "callabl": [151, 224], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 64, 75, 76, 83, 89, 90, 92, 93, 96, 97, 98, 101, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 132, 134, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 170, 171, 172, 173, 175, 182, 183, 185, 186, 187, 188, 189, 190, 197, 198, 199, 209, 210, 211, 216, 217, 218, 220, 221, 222, 224, 225, 228, 232, 234, 235, 238, 247, 249, 304, 309, 336, 338, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 367, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 421, 426, 428, 429, 432, 448, 456, 459, 460, 463, 465, 467, 468, 470, 474, 475, 476, 478, 481, 483, 486, 487, 488, 496, 504], "can_cast": [6, 500], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 70, 71, 240, 241, 450, 453, 454], "capabl": [23, 36, 40, 41, 43, 45, 56, 115, 156, 210, 222, 225], "care": [23, 193], "cartesian": 231, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 75, 85, 86, 89, 92, 94, 103, 104, 105, 106, 114, 118, 121, 126, 130, 132, 149, 150, 151, 152, 154, 155, 156, 158, 167, 193, 204, 207, 210, 211, 217, 222, 232, 242, 243, 247, 249, 353, 354, 355, 363, 429, 430, 457, 463, 468, 480, 481, 487, 488, 496], "cast": [16, 21, 49, 64, 70, 71, 77, 84, 85, 86, 98, 103, 142, 165, 193, 223, 225, 229, 239, 242, 243, 245, 247, 248, 249, 250, 304, 363, 425, 438, 454, 455, 457, 482, 485], "cat": [373, 390], "cauchi": 409, "cbrt": [6, 451], "cdef": 104, "cdot": 463, "cdoubl": 9, "ceil": [6, 35, 136, 143, 144, 433, 437, 477], "center": [117, 118, 119, 120, 124, 125, 132], "central": [158, 391, 392], "certain": [101, 224], "ch": 10, "chain": [97, 98, 103, 104], "chang": [49, 75, 83, 98, 101, 103, 113, 242, 243, 304, 317, 341, 346, 349, 359, 360, 366, 367, 368, 420, 429, 430, 435, 480, 500], "char": 101, "charact": [101, 150], "check": [16, 21, 40, 41, 42, 64, 121, 175, 182, 190, 203, 206], "check_valid": 389, "chi": [375, 391], "chisquar": 6, "choic": [6, 67, 98, 116, 117, 119, 122, 123, 124, 128, 129, 131, 133, 194, 196, 305], "choicelist": 441, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 98, 104, 441, 486, 496], "chosen": [34, 162, 478, 486], "circ": 504, "circl": [205, 467], "clamp": [366, 459, 460], "clariti": 134, "class": [3, 4, 98, 101, 137, 149, 150, 151, 153, 170, 211, 371, 399, 468, 500], "classic": 103, "clear": [101, 496], "clip": [6, 98, 366, 421, 459, 460, 496], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 98, 103, 111, 169, 210, 304, 371, 399, 422, 423, 433, 437, 467], "closer": 477, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 80, 195, 445, 461, 467], "code": [44, 101, 184, 428], "codeplai": 4, "coeffici": [198, 206, 209], "coerc": [44, 149, 150, 151, 152, 153, 211], "coin": 373, "col": 170, "collaps": [98, 317, 478], "column": [6, 40, 41, 42, 43, 45, 48, 49, 69, 70, 71, 85, 86, 93, 98, 100, 114, 134, 140, 141, 158, 164, 165, 167, 193, 194, 198, 201, 204, 207, 304, 420, 421, 428, 438, 450, 454, 468, 470, 474, 479, 481, 485], "column_stack": [6, 70, 71, 100, 165, 438, 454, 485], "com": 4, "combin": [0, 101, 111, 119, 124, 129, 133, 158], "combinatori": 104, "come": 478, "comma": [101, 103], "command": 4, "common": [122, 123, 124, 351, 463], "common_typ": 6, "compani": [373, 390], "compar": [17, 37, 107, 145, 146, 163, 173, 228, 234], "compare_chararrai": 6, "comparison": [2, 107, 159, 160, 188, 189, 352, 489, 500], "compat": [3, 4, 10, 16, 21, 49, 56, 98, 223, 229, 244, 245, 246, 248, 250, 304, 425, 429, 455, 482, 500], "compil": [4, 101, 157, 428], "complement": 480, "complementari": [144, 480], "complet": [3, 4, 104, 150, 151, 204, 435, 496], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 64, 84, 97, 98, 101, 104, 108, 115, 116, 117, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 142, 145, 146, 169, 174, 175, 181, 182, 193, 194, 195, 196, 204, 205, 207, 223, 225, 228, 234, 239, 248, 250, 307, 308, 364, 422, 423, 425, 449, 455, 478, 482, 483, 496, 500], "complex128": [9, 56, 431], "complex64": [9, 56, 98, 142, 337], "compliant": 98, "complic": [103, 504], "compon": [10, 37, 120, 125, 132, 135, 169, 239, 422], "compos": 76, "composit": [86, 186, 457, 467], "compress": [6, 113, 441, 459, 496], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 65, 72, 73, 79, 80, 84, 85, 86, 94, 95, 103, 109, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 143, 158, 159, 160, 161, 162, 163, 169, 170, 172, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 221, 223, 225, 229, 230, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 349, 360, 364, 422, 424, 425, 426, 433, 437, 439, 443, 444, 445, 446, 451, 455, 457, 461, 462, 463, 467, 470, 474, 482], "compute_uv": [191, 207], "concat": 71, "concaten": [6, 69, 70, 100, 165, 438, 450, 454, 460, 485], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488, 496], "cond": [6, 197], "condit": [34, 49, 97, 98, 113, 191, 197, 201, 304, 351, 359, 366, 368, 441, 486], "condlist": 441, "confus": 147, "conj": [6, 73, 98, 121, 169, 190, 193, 364], "conjug": [6, 10, 72, 97, 98, 127, 130, 169, 190, 193, 194, 195, 196, 225, 307, 364, 483], "consecut": [94, 102, 158], "conserv": 231, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 104, 132, 156, 173, 176, 194, 196, 200, 210, 222, 225, 371, 399, 430, 478], "consist": [37, 38, 102, 116, 117, 119, 122, 123, 124, 128, 129, 131, 133, 150, 163, 209, 210, 460, 463], "constant": [9, 101, 158], "constraint": 56, "construct": [40, 41, 42, 67, 89, 92, 93, 98, 101, 114, 149, 150, 151, 152, 153, 167, 185, 211, 232, 305, 353, 441, 464, 465, 486, 489], "constructor": 496, "consum": [98, 324], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 76, 77, 79, 80, 83, 84, 93, 96, 98, 101, 107, 109, 110, 112, 117, 118, 119, 122, 127, 130, 132, 138, 142, 143, 144, 145, 146, 147, 148, 153, 157, 158, 159, 160, 162, 163, 166, 169, 170, 172, 187, 188, 189, 194, 204, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 228, 229, 234, 235, 238, 240, 241, 244, 245, 246, 248, 250, 333, 349, 351, 352, 358, 360, 361, 362, 364, 371, 422, 424, 425, 426, 432, 433, 437, 439, 443, 444, 445, 446, 451, 452, 455, 456, 461, 462, 466, 470, 471, 474, 475, 476, 477, 482, 496], "content": [43, 98, 408], "context": 10, "contigu": [40, 41, 42, 43, 45, 97, 98, 103, 201, 330, 420, 428, 429], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 371, 403], "contourf": 231, "contract": [103, 104, 463], "contrast": [103, 366], "contribut": [10, 56, 162, 163], "control": [4, 49, 64, 70, 71, 77, 98, 103, 165, 225, 304, 438, 454, 485], "conveni": [98, 346, 371], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 97, 103, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 171, 209, 225, 356, 463], "convers": [49, 98, 103, 304, 489], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 75, 87, 88, 89, 92, 101, 103, 104, 111, 154, 155, 156, 175, 182, 210, 222, 369, 370, 421, 428, 479, 480, 481], "convolut": [10, 74, 78], "convolv": [6, 78], "coolei": 10, "coordin": [81, 151, 158, 170, 185, 231, 421, 479], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 77, 89, 90, 92, 93, 98, 101, 105, 106, 113, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 231, 232, 239, 258, 304, 317, 319, 327, 333, 336, 353, 354, 355, 357, 359, 360, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 428, 429, 430, 440, 448, 453, 468, 469, 470, 473, 474, 481, 487, 488, 496], "copysign": [6, 349, 360], "copyto": [6, 98, 113, 309, 359], "core": [3, 101, 103, 496], "corner": [117, 119, 123, 124], "corrcoef": [6, 82], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 70, 71, 72, 73, 76, 79, 80, 87, 88, 96, 107, 109, 110, 112, 115, 121, 127, 129, 136, 142, 143, 144, 145, 146, 147, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 234, 235, 238, 349, 350, 352, 360, 361, 362, 364, 369, 370, 424, 426, 428, 432, 433, 437, 439, 443, 444, 445, 446, 451, 452, 454, 456, 461, 462, 476, 477], "correctli": [20, 26, 28, 31, 32, 46, 50, 81, 202, 227, 233, 240, 241, 247, 249, 351, 363, 457], "correl": [6, 500], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 68, 70, 71, 75, 87, 88, 89, 90, 92, 93, 98, 99, 105, 106, 114, 117, 118, 119, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 167, 170, 185, 193, 194, 210, 211, 222, 224, 225, 232, 304, 309, 313, 353, 354, 355, 358, 369, 370, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 434, 441, 442, 450, 455, 463, 466, 467, 468, 470, 474, 481, 482, 484, 487, 488, 496], "correspondingli": [10, 450], "cosh": [6, 14, 25, 79, 446, 462], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 445, 446, 461, 462], "cost": [103, 104], "costli": 104, "could": [98, 121, 127, 129, 338], "count": [16, 21, 57, 81, 95, 101, 104, 139, 149, 150, 152, 153, 158, 162, 163, 351, 363, 373, 447, 457, 478, 489, 500], "count_nonzero": [6, 351], "counterclockwis": [140, 141, 436], "counterpart": [10, 121, 127, 129, 496], "cov": [6, 389], "covari": 82, "cover": [470, 474, 500], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 75, 78, 82, 89, 92, 105, 106, 108, 114, 118, 132, 149, 150, 151, 152, 154, 155, 156, 167, 210, 211, 222, 230, 232, 236, 247, 353, 354, 355, 468, 481, 487, 488], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 91, 92, 93, 98, 101, 104, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 239, 304, 309, 353, 354, 355, 367, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 465, 468, 470, 471, 474, 475, 481, 487, 488, 496, 500], "creation": [101, 104, 489, 496, 500, 504], "crop": [116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "cross": [6, 78, 185], "csingl": 9, "ct": 10, "ctype": 428, "cube": [65, 142, 451], "cubic": 104, "cuda": 4, "cumprod": [6, 98, 242, 496], "cumproduct": 6, "cumsum": [6, 94, 98, 243, 457, 467, 496], "cumul": [84, 85, 86, 94, 98, 242, 243, 310, 311, 457, 467], "cupi": [2, 489], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 76, 79, 80, 87, 88, 96, 98, 101, 104, 109, 110, 112, 142, 143, 144, 145, 146, 147, 150, 161, 163, 166, 167, 172, 187, 213, 214, 215, 216, 217, 228, 234, 235, 236, 238, 336, 349, 350, 360, 361, 362, 364, 369, 370, 424, 426, 428, 432, 433, 439, 443, 444, 445, 446, 456, 461, 462, 476, 477], "curv": 467, "custom": 496, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 198], "cutoff": 203, "cycl": [118, 132, 185, 430], "cyclic": 366, "cython": 4, "d": [0, 16, 21, 23, 56, 69, 70, 71, 85, 86, 89, 90, 91, 92, 93, 97, 98, 100, 101, 114, 118, 120, 125, 132, 134, 138, 140, 141, 153, 164, 165, 167, 171, 185, 192, 194, 195, 201, 202, 205, 225, 231, 242, 243, 249, 317, 351, 361, 362, 363, 366, 376, 420, 429, 438, 440, 442, 454, 457, 459, 463, 464, 465, 472, 478, 481, 485, 496], "d0": [371, 398, 400], "d1": [371, 400], "d3": 90, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 121, 127, 129, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 182, 187, 188, 189, 198, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 250, 304, 333, 346, 348, 349, 350, 352, 354, 355, 359, 360, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 460, 461, 462, 465, 468, 476, 477, 482, 485, 486, 487, 488, 489, 500], "datatyp": [101, 200], "date": 4, "datetim": 101, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [82, 98, 248, 250, 340, 347, 455, 482], "decai": 384, "decim": [35, 98, 135, 136, 334, 433, 437], "decomposit": [190, 197, 200, 203, 207, 500], "decompress": 211, "decreas": [95, 467], "decreasingli": [10, 117, 119, 123, 124], "deem": 148, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 173, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 194, 196, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 317, 349, 350, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 366, 369, 370, 371, 375, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 412, 415, 420, 421, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 496], "default_rng": 6, "defg": 104, "defici": 200, "defin": [10, 29, 51, 83, 101, 106, 116, 145, 146, 155, 161, 162, 163, 228, 234, 239, 355, 360, 423, 436, 488, 496], "definit": [83, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 143, 190, 467], "deg": [20, 370], "deg2rad": [6, 369, 370, 480], "degre": [6, 20, 87, 248, 250, 369, 370, 413, 436, 455, 480, 482, 504], "del": 504, "delet": [6, 22], "delta": [10, 248, 250, 455, 480, 482], "demonstr": [0, 4, 101], "dens": [170, 185, 232], "densiti": 162, "depend": [4, 34, 93, 115, 121, 127, 129, 194, 198, 204, 206, 207, 210, 247, 249, 441, 486], "deprec": 6, "deprecate_with_doc": 6, "depth": [69, 70, 71, 99, 100, 165, 438, 450, 454, 485], "deriv": 158, "descend": 207, "descr": 101, "describ": [84, 101, 223, 425, 500], "descript": [84, 101, 122, 124, 162, 223, 425, 496], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 63, 105, 106, 114, 122, 123, 124, 154, 155, 156, 167, 210, 222, 354, 355, 464, 468, 487, 488], "destin": [70, 71, 165, 237, 366, 367, 438, 454, 460, 485], "destruct": 504, "det": [6, 205], "detail": [35, 117, 119, 123, 124, 128, 129, 131, 133, 148, 437, 470, 471, 474, 475, 478, 496], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 61, 65, 76, 79, 80, 87, 88, 96, 109, 110, 112, 144, 145, 146, 147, 150, 151, 153, 166, 187, 192, 198, 204, 205, 212, 213, 214, 215, 216, 217, 225, 228, 234, 235, 238, 350, 361, 362, 369, 370, 421, 424, 426, 432, 439, 441, 443, 445, 446, 451, 452, 456, 461, 462, 465, 476, 477, 479], "devel": 4, "develop": [3, 4], "deviat": [98, 229, 245, 248, 250, 340, 371, 386, 393, 455, 482], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 75, 84, 89, 90, 92, 98, 103, 105, 106, 114, 115, 118, 132, 136, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 223, 224, 225, 229, 232, 245, 248, 250, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 425, 453, 455, 468, 470, 474, 481, 482, 487, 488], "df": [375, 391, 413, 414], "dfden": [379, 392], "dfnum": [379, 392], "dft": [10, 116, 121, 122, 126, 127, 130], "di": [90, 91], "diag": [6, 92, 93, 103, 114, 140, 141, 167, 193, 195, 207, 441, 465], "diag_indic": [6, 91, 134], "diag_indices_from": [6, 90, 134], "diagflat": [6, 89, 93, 465], "diagon": [6, 89, 90, 91, 92, 98, 103, 114, 134, 167, 190, 194, 195, 196, 224, 345, 441, 465, 468, 469, 470, 471, 473, 474, 475, 496], "dice": 388, "dictionari": 101, "diff": [6, 86, 102, 158, 162], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 75, 84, 86, 89, 92, 94, 98, 101, 102, 105, 106, 114, 117, 118, 122, 123, 125, 128, 131, 132, 135, 140, 141, 142, 149, 150, 151, 152, 154, 155, 156, 158, 167, 173, 196, 210, 211, 222, 223, 225, 232, 309, 353, 354, 355, 359, 361, 362, 367, 425, 430, 436, 456, 460, 468, 470, 474, 480, 481, 487, 488, 500], "digit": [6, 10, 135, 162], "dim": [17, 421], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 69, 70, 71, 77, 81, 82, 83, 90, 93, 94, 98, 99, 101, 111, 123, 124, 136, 140, 141, 158, 165, 170, 171, 185, 200, 202, 204, 223, 226, 227, 229, 231, 232, 233, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 317, 325, 336, 348, 351, 353, 363, 367, 371, 401, 403, 404, 406, 421, 425, 429, 436, 442, 450, 453, 454, 455, 457, 458, 459, 460, 464, 465, 470, 471, 474, 475, 478, 479, 482, 484, 496, 500], "dimension": [2, 4, 33, 74, 78, 81, 84, 90, 91, 92, 93, 94, 95, 98, 102, 103, 116, 117, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 149, 150, 152, 158, 164, 170, 185, 198, 204, 208, 209, 223, 227, 231, 232, 233, 240, 241, 244, 246, 248, 250, 339, 348, 353, 356, 363, 425, 448, 455, 457, 459, 464, 467, 478, 482, 483, 484, 489], "direct": [10, 83, 94, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 140, 141, 158, 350, 436], "directli": [101, 151, 170, 222, 351, 460], "directori": 157, "dirichlet": 6, "discard": 477, "discont": 480, "discontinu": 480, "discret": [3, 10, 74, 78, 86, 94, 102, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 158, 371, 489], "disp": 6, "dispers": 416, "displac": [98, 341], "disregard": 430, "distanc": 158, "distinct": [145, 146, 228, 234, 430], "distinguish": 101, "distribut": [3, 4, 222, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 500], "divid": [6, 39, 99, 100, 144, 147, 164, 235, 426, 450, 476, 484], "divis": [96, 144, 147, 235, 361, 362, 426, 450, 476, 477], "divisor": [248, 250, 455, 482], "divmod": [6, 496], "dlpack": 148, "dmlc": 148, "dn": [371, 398, 400], "do": [3, 4, 101, 224, 373, 435, 467], "docstr": 496, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496], "doe": [22, 23, 39, 64, 103, 113, 115, 130, 145, 146, 148, 204, 239, 242, 243, 359, 430, 450, 459], "domain": [10, 121, 126], "done": [3, 49, 98, 103, 209, 304, 478, 480], "dot": [6, 98, 103, 104, 171, 190, 195, 197, 201, 203, 204, 206, 207, 208, 209, 225, 463, 483], "doubl": [9, 384, 463], "down": 141, "dp": [96, 192, 194, 205, 206, 361, 362, 456, 476], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 240, 241, 244, 246, 247, 304, 309, 353, 354, 355, 365, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "dpnp": [0, 2, 3, 4, 10, 489, 496, 500, 501, 504], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 75, 89, 90, 92, 105, 106, 114, 118, 132, 135, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 168, 170, 210, 211, 222, 224, 232, 251, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488, 489], "dpnp_iface_arraycr": [232, 353], "draw": [371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "drawn": [371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 396, 397, 399, 402, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 441], "drill": [373, 390], "driver": 2, "drop": [3, 101], "dsplit": [6, 70, 71, 100, 450], "dst": 77, "dstack": [6, 69, 70, 71, 165, 438, 450, 454, 485], "dt": [101, 467], "dt2": 101, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 64, 65, 66, 70, 71, 72, 73, 76, 79, 80, 82, 84, 85, 86, 87, 88, 90, 96, 98, 103, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 187, 188, 189, 201, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 310, 311, 322, 328, 337, 340, 342, 345, 347, 349, 350, 352, 354, 355, 360, 361, 362, 363, 364, 369, 370, 371, 393, 399, 415, 424, 425, 426, 428, 431, 432, 433, 437, 438, 439, 443, 444, 445, 446, 449, 451, 452, 454, 455, 456, 457, 459, 461, 462, 465, 468, 469, 473, 476, 477, 482, 484, 485, 487, 488, 496], "due": [130, 504], "dump": 6, "dx": [158, 467], "dy": 158, "dz": 158, "e": [9, 10, 14, 25, 27, 47, 84, 85, 93, 101, 105, 106, 111, 114, 117, 121, 122, 123, 124, 127, 129, 130, 142, 150, 154, 155, 158, 167, 187, 193, 205, 208, 212, 354, 355, 371, 423, 427, 430, 458, 468, 487, 488], "ea": 104, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 72, 73, 76, 79, 80, 85, 86, 90, 93, 95, 96, 98, 99, 101, 104, 107, 109, 110, 112, 117, 119, 121, 123, 124, 127, 128, 129, 131, 133, 140, 141, 142, 143, 144, 147, 151, 158, 159, 160, 162, 163, 164, 169, 172, 176, 177, 178, 185, 187, 188, 189, 193, 194, 195, 196, 198, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 235, 237, 238, 239, 334, 349, 351, 352, 360, 361, 362, 364, 367, 373, 390, 421, 422, 424, 426, 427, 430, 432, 433, 434, 437, 439, 443, 444, 445, 446, 450, 451, 452, 454, 456, 460, 461, 462, 464, 467, 470, 471, 474, 475, 476, 477, 478, 479, 484, 496], "easier": 459, "easiest": 4, "easili": [0, 163], "edg": [68, 95, 162, 163], "edge_ord": 158, "ediff1d": [6, 94, 158], "effect": [104, 142, 145, 146, 228, 234, 361, 362, 480], "effici": [10, 116, 130, 150, 200, 203, 207], "efgh": 104, "eig": [6, 194, 195, 196], "eigenvalu": [193, 194, 195, 196, 500], "eigenvector": [193, 194, 195, 196], "eigh": [6, 193, 195, 196], "eigval": [6, 193, 194, 196], "eigvalsh": [6, 193, 194, 195], "einstein": [97, 103, 104, 171, 209, 225, 356, 463], "einsum": [6, 97, 104, 171, 209, 225, 356, 463], "einsum_path": [6, 103], "either": [37, 38, 45, 56, 84, 93, 101, 117, 119, 121, 123, 124, 127, 129, 131, 133, 134, 158, 171, 194, 196, 202, 204, 223, 240, 241, 244, 246, 247, 249, 421, 425, 430, 440, 441, 460, 467], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 66, 68, 72, 73, 76, 77, 79, 80, 84, 85, 86, 91, 93, 94, 95, 96, 98, 101, 102, 104, 107, 109, 110, 112, 113, 114, 115, 117, 119, 123, 124, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 195, 199, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 233, 234, 235, 236, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 299, 300, 307, 308, 310, 311, 313, 314, 317, 319, 320, 322, 324, 326, 327, 332, 333, 334, 335, 337, 340, 341, 344, 347, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 366, 368, 420, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 469, 471, 473, 475, 476, 477, 478, 479, 480, 482, 486, 496, 500, 504], "element_count": [98, 337, 447], "ellipsi": 103, "els": [0, 205, 256], "elsewher": [114, 167, 468, 486], "empti": [4, 6, 36, 98, 106, 117, 119, 123, 124, 128, 129, 131, 133, 150, 154, 155, 198, 314, 354, 355, 359, 450, 487, 488], "empty_lik": [6, 36, 105, 155, 355, 488], "enabl": [134, 200, 203, 207], "encount": [242, 243, 244, 246, 441], "end": [22, 23, 93, 101, 102, 104, 122, 156, 210, 222], "end_tim": 0, "endian": 101, "endpoint": [23, 156, 210, 222, 467], "engin": 407, "enlarg": 430, "enough": 162, "ensur": 428, "entir": [56, 84, 121, 162, 163, 223, 229, 244, 245, 246, 248, 250, 425, 455, 482], "entiti": 430, "entri": [39, 98, 99, 101, 105, 113, 121, 127, 129, 134, 139, 140, 141, 164, 339, 450, 453, 484], "enumer": 148, "env": 4, "environ": 4, "ep": [135, 200, 350, 423], "epsilon": [200, 423], "epsneg": 135, "equal": [6, 16, 17, 21, 37, 38, 39, 56, 70, 71, 78, 82, 86, 98, 99, 114, 156, 158, 159, 160, 162, 163, 164, 165, 173, 175, 182, 184, 187, 188, 189, 199, 203, 204, 209, 210, 222, 235, 327, 352, 371, 381, 415, 426, 432, 433, 437, 438, 443, 450, 453, 454, 468, 470, 474, 484, 485], "equal_nan": [17, 37, 173, 478], "equat": [198, 206, 208, 209, 500], "equiv": [49, 64, 70, 71, 77, 98, 103, 165, 199, 225, 304, 438, 454, 485], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 75, 83, 84, 87, 88, 96, 97, 98, 99, 100, 104, 111, 113, 138, 145, 146, 147, 164, 185, 208, 223, 235, 238, 258, 299, 300, 312, 325, 333, 336, 346, 348, 351, 356, 358, 360, 369, 370, 371, 399, 425, 426, 429, 436, 437, 442, 448, 456, 457, 459, 463, 466, 476, 478, 484, 496, 504], "error": [84, 99, 103, 108, 121, 126, 164, 193, 223, 421, 425, 450, 453, 484, 489, 496], "essenti": 4, "estim": [82, 163, 373, 390, 467], "et": 10, "etc": [10, 36, 41, 101, 117, 119, 123, 124, 128, 129, 131, 133, 390], "euclidean": 198, "euler_gamma": 9, "evalu": [16, 17, 21, 98, 103, 104, 107, 175, 182, 209, 231, 299, 300, 356, 441, 463, 496], "even": [10, 101, 118, 120, 121, 122, 125, 126, 127, 129, 130, 132, 175, 182, 433, 437], "evenli": [23, 156, 210, 222, 433, 467], "event": 217, "everi": [129, 367, 460], "everywher": 127, "exact": [113, 201, 359], "exactli": [10, 48, 153, 371, 399, 441], "examin": 198, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 312, 314, 317, 318, 319, 325, 327, 331, 333, 336, 337, 338, 341, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 504], "exce": [217, 450], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 75, 76, 79, 80, 87, 88, 94, 95, 96, 97, 98, 105, 106, 107, 109, 110, 112, 114, 128, 129, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 164, 165, 166, 167, 172, 176, 177, 178, 187, 188, 189, 201, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 228, 229, 233, 234, 235, 238, 244, 245, 246, 247, 248, 249, 250, 304, 349, 350, 352, 354, 355, 360, 361, 362, 363, 364, 369, 370, 424, 426, 427, 428, 429, 432, 433, 439, 443, 444, 445, 446, 448, 450, 451, 452, 455, 456, 457, 461, 462, 476, 477, 482, 487, 488], "exclud": [11, 12, 22, 210, 371, 415], "exclus": [371, 399], "execut": [3, 4, 40, 41, 42, 78, 82, 108, 151, 230, 236, 247, 374, 376, 377, 387, 392, 408, 504], "executor": 0, "exist": [10, 69, 70, 71, 100, 101, 111, 148, 165, 429, 438, 450, 454, 485, 500], "exp": [6, 10, 110, 112, 116, 205, 214, 216, 223], "exp2": [6, 109, 112], "expand": [94, 111], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 88, 96, 97, 101, 107, 109, 110, 112, 115, 127, 136, 142, 143, 144, 145, 146, 147, 159, 160, 161, 166, 169, 172, 173, 176, 177, 178, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 228, 229, 233, 234, 235, 238, 242, 243, 245, 247, 248, 249, 250, 349, 350, 352, 360, 361, 362, 363, 364, 369, 370, 422, 424, 425, 426, 432, 433, 437, 439, 443, 444, 445, 446, 451, 452, 455, 456, 457, 461, 462, 476, 477, 482, 486], "explain": [119, 124, 129, 133, 496], "explan": 101, "explicit": 103, "explicitli": [93, 117, 119, 123, 124, 128, 129, 131, 133], "exploit": [10, 130], "explor": [104, 373, 390], "expm1": [6, 109, 110, 214], "expon": [10, 109, 110, 112, 142, 199, 216, 217, 223, 361, 362, 397, 500], "exponenti": [6, 10, 104, 216, 217, 223, 384, 410], "expos": [149, 496], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 103, 104, 211, 504], "extend": [10, 101, 186, 496], "extens": [0, 1, 3, 4, 9, 157, 211, 489], "extobj": 225, "extra": [101, 127, 153], "extract": [6, 89, 92, 93, 103, 114, 138, 167, 170, 224, 359, 441, 459, 465], "extrapol": 430, "extrema": 500, "ey": [6, 72, 73, 81, 98, 123, 124, 145, 146, 167, 171, 186, 197, 199, 200, 208, 209, 221, 228, 234, 442, 465], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 114, 115, 118, 130, 132, 136, 142, 143, 144, 145, 146, 147, 154, 155, 158, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 199, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 234, 235, 238, 304, 309, 317, 349, 350, 352, 354, 355, 360, 361, 362, 364, 369, 370, 392, 420, 421, 424, 426, 428, 429, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 472, 476, 477, 479, 486, 487, 488], "f0": 101, "f1": 101, "f2": 101, "f4": 64, "f8": [64, 101], "f_contigu": [43, 45, 428], "f_k": 10, "fab": [6, 11, 12], "fact": 195, "factor": [10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 190, 204], "fail": [98, 336, 373], "fallback": [193, 195, 374, 376, 377, 387, 392, 408], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 62, 63, 64, 75, 81, 82, 84, 86, 95, 98, 101, 103, 104, 106, 107, 113, 134, 148, 151, 155, 156, 159, 160, 162, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 200, 202, 203, 207, 210, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 233, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 256, 299, 300, 301, 302, 304, 321, 322, 323, 328, 340, 342, 347, 351, 352, 355, 363, 365, 425, 428, 429, 441, 444, 455, 457, 478, 481, 482, 486, 488, 496], "famili": 10, "fanci": 459, "fashion": [217, 496], "fast": [10, 116, 117, 119, 123, 124, 129, 130, 133], "fastcopyandtranspos": 6, "faster": [10, 145, 146], "fastest": [98, 317, 420, 429], "fb": [104, 472], "featur": 101, "few": 134, "fft": [6, 489, 500], "fft2": [6, 116, 119, 123], "fftfreq": [6, 10, 116, 120, 125, 132], "fftn": [6, 116, 117, 124, 130, 133], "fftshift": [6, 10, 117, 119, 124, 125], "fh": 150, "field": [101, 231], "field1": 101, "file": [149, 150, 152, 153, 157, 211], "filenam": [150, 211], "fill": [6, 22, 36, 98, 105, 106, 134, 154, 155, 162, 163, 231, 239, 309, 354, 355, 430, 468, 487, 488], "fill_diagon": 6, "fill_valu": [154, 155], "filt": 472, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "final": [4, 10, 129, 130, 131, 133, 156, 222], "find": [34, 57, 95, 98, 115, 162, 200, 203, 207, 335, 350, 351, 427, 440, 448, 478, 500], "find_common_typ": 6, "fine": 4, "finfo": [350, 423], "finfo_object": 135, "finit": [42, 176, 177, 178, 179, 180, 239], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 61, 69, 70, 71, 76, 83, 84, 93, 96, 97, 98, 101, 104, 107, 110, 117, 119, 121, 123, 124, 139, 142, 144, 145, 146, 147, 158, 159, 160, 162, 163, 164, 166, 171, 173, 184, 186, 187, 188, 189, 201, 208, 211, 216, 217, 218, 220, 221, 224, 225, 227, 228, 231, 233, 234, 235, 238, 240, 241, 317, 352, 356, 359, 361, 362, 363, 420, 426, 429, 432, 434, 436, 438, 440, 441, 448, 449, 452, 456, 457, 458, 460, 463, 465, 476, 478, 483, 484, 485], "fit": [198, 427], "fix": [6, 35, 66, 93, 101, 143, 366, 433, 437, 477], "flag": [43, 45, 98, 101, 309, 428], "flanneri": 10, "flat": [31, 32, 98, 102, 137, 317, 421, 427, 479], "flatnonzero": [6, 351], "flatten": [6, 22, 31, 32, 33, 70, 71, 81, 85, 86, 89, 92, 93, 98, 102, 134, 138, 162, 163, 227, 233, 240, 241, 242, 243, 247, 249, 316, 330, 338, 351, 356, 367, 420, 421, 427, 434, 448, 459, 460, 465, 478, 479, 483], "flexibl": [97, 101, 150, 201], "flip": [6, 59, 93, 134, 140, 141, 172, 373, 436], "fliplr": [6, 93, 134, 139, 141, 436], "flipud": [6, 93, 134, 139, 140, 436], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 64, 76, 84, 86, 101, 105, 106, 110, 114, 115, 118, 132, 135, 136, 142, 149, 150, 151, 152, 153, 154, 155, 158, 162, 163, 167, 169, 198, 199, 200, 202, 203, 210, 211, 216, 217, 222, 223, 227, 229, 233, 239, 245, 248, 250, 350, 354, 355, 361, 362, 371, 375, 400, 401, 403, 404, 406, 409, 410, 412, 415, 422, 423, 424, 425, 439, 455, 468, 480, 482, 487, 488, 496, 500], "float16": [9, 142], "float32": [0, 9, 42, 44, 49, 64, 85, 98, 101, 103, 142, 304, 350, 371, 393, 398, 400, 401, 403, 404, 406, 412, 415, 428, 431], "float64": [0, 9, 44, 49, 56, 64, 86, 98, 101, 103, 304, 371, 372, 378, 379, 380, 382, 384, 385, 386, 393, 394, 397, 398, 400, 401, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 431, 484], "float_pow": [6, 361, 362], "floor": [6, 35, 66, 136, 144, 235, 426, 433, 437, 477], "floor_divid": [6, 235, 426], "flop": 104, "flush": 150, "fmax": [6, 146, 227, 228, 234, 244, 361, 362], "fmin": [6, 145, 228, 233, 234, 246, 361, 362], "fmod": [6, 235, 361, 362, 426], "fn": 151, "fname": 211, "follow": [4, 10, 56, 101, 111, 127, 135, 148, 168, 194, 196, 203, 428, 463, 496, 500], "forc": [101, 103], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 69, 75, 89, 92, 98, 100, 103, 104, 123, 124, 127, 154, 155, 156, 175, 182, 185, 210, 222, 226, 346, 430, 438, 481, 485], "format": [101, 148, 150, 153, 500], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 367, 460], "forth": 463, "fortran": [45, 49, 98, 304, 317, 420, 421, 428, 429, 479], "forward": [10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 158], "found": [4, 440, 496], "four": [371, 400], "fourier": [10, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 489], "fourth": 117, "frac": [10, 467], "fraction": [236, 477], "free": [98, 333], "freedom": [248, 250, 413, 455, 482], "freq": [118, 120, 125, 132], "freq_spectrum": 121, "frequenc": [10, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132], "freshli": [179, 180], "frexp": 6, "fro": [191, 202], "frobeniu": 191, "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 62, 64, 67, 70, 71, 75, 77, 84, 87, 88, 89, 90, 92, 93, 98, 100, 101, 103, 105, 106, 110, 113, 114, 118, 122, 131, 132, 133, 139, 142, 148, 149, 150, 151, 152, 153, 154, 155, 158, 162, 165, 167, 170, 185, 193, 195, 196, 200, 201, 211, 223, 224, 231, 232, 305, 309, 339, 344, 353, 354, 355, 359, 363, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 425, 429, 430, 431, 436, 438, 440, 441, 452, 453, 454, 457, 459, 460, 465, 468, 470, 472, 474, 475, 478, 480, 481, 485, 486, 487, 488, 500], "from_": 64, "from_dlpack": 6, "frombuff": [6, 150, 152, 153, 211], "fromfil": [6, 149, 152, 153], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 149, 150, 153], "frompyfunc": 6, "fromregex": [6, 211], "fromstr": [6, 149, 150, 152, 211], "front": 472, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "full_lik": [6, 36, 106, 154, 355, 488], "full_matric": 207, "fulli": 101, "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 75, 78, 82, 84, 87, 88, 93, 96, 98, 103, 105, 106, 108, 112, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133, 134, 142, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 167, 185, 193, 195, 201, 211, 214, 216, 217, 223, 224, 230, 231, 235, 236, 247, 299, 300, 309, 312, 333, 336, 346, 354, 355, 361, 362, 367, 369, 370, 371, 374, 376, 377, 387, 392, 408, 425, 426, 428, 430, 437, 438, 443, 455, 459, 460, 464, 470, 471, 474, 475, 476, 482, 485, 486, 487, 488, 489, 496, 500], "fundament": [10, 101], "further": [470, 474], "futur": [101, 163], "fweight": 82, "g": [4, 10, 101, 105, 106, 114, 154, 155, 167, 354, 355, 371, 468, 487, 488, 504], "g10311c3eaa6": 6, "gamma": [6, 411], "gauss": 10, "gaussian": [371, 393, 417], "gc": 104, "gcd": 6, "gen": 103, "gender": 101, "gener": [4, 10, 33, 56, 101, 122, 127, 130, 133, 156, 171, 193, 194, 195, 196, 203, 204, 211, 222, 371, 373, 376, 407, 467, 470, 474, 481, 496, 500], "genfromtxt": [6, 211], "geometr": [6, 156, 210], "geomspac": [6, 210, 222], "get": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 91, 92, 98, 105, 106, 114, 118, 121, 127, 129, 132, 142, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 336, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 460, 468, 470, 471, 474, 475, 481, 487, 488, 496], "get_arrai": 98, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 371], "get_sycl_devic": 371, "get_sycl_queu": 371, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 101], "getter": [98, 336], "gid": 163, "github": 148, "give": [10, 92, 98, 142, 163, 346, 429, 442, 447, 478], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 69, 75, 81, 82, 85, 86, 94, 97, 98, 100, 101, 102, 104, 105, 106, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 145, 146, 154, 155, 156, 158, 162, 163, 173, 197, 210, 222, 224, 227, 228, 231, 233, 234, 242, 243, 244, 246, 247, 248, 249, 250, 301, 302, 304, 310, 311, 323, 328, 329, 334, 337, 340, 342, 347, 351, 354, 355, 359, 363, 365, 366, 371, 376, 398, 415, 425, 427, 428, 433, 434, 435, 436, 438, 440, 441, 447, 450, 455, 457, 459, 463, 464, 467, 468, 478, 482, 485, 487, 488, 496], "global": 0, "good": 383, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 75, 89, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 156, 167, 210, 211, 222, 232, 353, 354, 355, 468, 481, 487, 488], "grade": 101, "gradient": [6, 94, 102, 198], "graphic": 4, "great": 10, "greater": [6, 98, 99, 107, 144, 160, 187, 188, 189, 200, 204, 327, 352, 432, 441, 443, 453, 480], "greater_equ": [6, 107, 159, 188, 189, 352], "greatest": 144, "greedi": [103, 104], "grid": [40, 41, 42, 151, 170, 231, 232, 353], "group": [34, 351], "guarante": [101, 428, 429], "guid": [2, 3], "gumbel": 6, "gz": 211, "h": [157, 190, 204, 231], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 84, 85, 86, 95, 101, 107, 111, 121, 126, 127, 151, 158, 159, 160, 165, 169, 174, 175, 181, 182, 188, 189, 195, 205, 207, 223, 229, 235, 242, 243, 245, 247, 248, 249, 250, 352, 363, 422, 423, 424, 425, 426, 427, 435, 439, 441, 453, 454, 455, 457, 458, 459, 464, 465, 479, 482, 496], "had": [367, 460], "hadamard": 104, "half": [14, 25, 117, 119, 120, 121, 123, 124, 210, 371, 401, 403, 404, 406, 415, 458], "ham": 6, "han": 6, "hand": [83, 209], "handl": [23, 101, 115, 211, 351, 421, 459, 460, 500], "happen": [49, 56, 98, 304, 373, 467], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 101, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 69, 70, 71, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 96, 97, 100, 101, 107, 109, 110, 112, 115, 123, 124, 133, 135, 136, 142, 143, 144, 145, 146, 147, 159, 160, 161, 165, 166, 169, 172, 173, 176, 177, 178, 179, 180, 187, 188, 189, 198, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 228, 229, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 349, 350, 352, 359, 360, 361, 362, 363, 364, 369, 370, 390, 422, 424, 425, 426, 427, 428, 432, 433, 437, 438, 439, 443, 444, 445, 446, 451, 452, 454, 455, 456, 457, 461, 462, 464, 476, 477, 480, 482, 485, 496], "hd": 104, "header": 157, "heavisid": 6, "hello": 101, "help": 504, "helper": 500, "henc": [111, 158], "here": [6, 33, 101, 103, 121, 126, 127, 448, 470, 474], "hermit": [194, 196], "hermitian": [121, 126, 127, 129, 130, 190, 193, 194, 195, 196, 200, 203, 207, 500], "hfft": [6, 10, 126], "hierarchi": 184, "high": [127, 371, 399, 402, 415], "higher": [103, 164, 483, 484], "highest": 116, "highli": 150, "hist": [162, 409], "hist_0": 163, "hist_1": 163, "histogram": [6, 95, 163, 440, 500], "histogram2d": 6, "histogram_bin_edg": [6, 162], "histogramdd": [6, 162], "hold": [68, 85, 86, 162, 202, 242, 243, 247, 249, 465], "homogen": 101, "horizont": [69, 70, 71, 93, 100, 134, 139, 164, 165, 436, 438, 450, 454, 485], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 468, 470, 474, 481, 487, 488], "household": 204, "how": [0, 4, 101, 127, 130, 158, 366, 421, 459, 460, 470, 474], "howev": [98, 338, 459], "hsplit": [6, 70, 71, 450], "hstack": [6, 69, 70, 71, 100, 438, 450, 454, 485], "http": [4, 148], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 445, 446, 461, 462, 500], "hypergeometr": 6, "hypot": [6, 425], "hypotenus": [166, 425], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 304, 309, 327, 333, 336, 338, 341, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496, 504], "i0": 6, "i1": [98, 101, 341], "i2": [98, 101, 341], "i3": [98, 341], "i4": [64, 101], "i7": 103, "i8": [64, 101], "icpx": 4, "icx": 4, "id": [16, 21, 98, 319], "ident": [3, 6, 16, 21, 42, 84, 101, 114, 125, 134, 206, 410], "identifi": 101, "ieee": 135, "ifft": [6, 116, 123, 124, 126, 127, 132], "ifft2": [6, 117, 122, 124], "ifftn": [6, 119, 122, 123], "ifftshift": [6, 10, 120, 124], "ignor": [31, 32, 83, 101, 145, 146, 153, 162, 163, 227, 228, 229, 233, 234, 240, 241, 244, 245, 246, 248, 250, 455, 482], "ihfft": [6, 121], "ii": [103, 394], "iinfo": 388, "iinfo_object": 168, "ij": [103, 104, 231], "ijk": 103, "il": 104, "il1": 470, "il2": 470, "illustr": 195, "ilm": 103, "imag": [6, 10, 20, 37, 98, 422, 423, 430, 496], "imaginari": [20, 37, 98, 127, 145, 146, 169, 174, 175, 181, 182, 193, 194, 196, 199, 228, 234, 239, 318, 422, 423, 449, 478], "implement": [3, 4, 6, 44, 116, 148], "impli": 101, "implicit": 103, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 312, 317, 318, 325, 327, 331, 336, 337, 338, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 396, 405, 409, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "improv": 103, "in1d": 6, "in_array1": 108, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 75, 84, 89, 92, 95, 103, 104, 115, 154, 155, 156, 157, 162, 163, 175, 182, 203, 210, 222, 223, 229, 244, 245, 246, 248, 250, 371, 415, 425, 455, 481, 482], "include_initi": 84, "inclus": [371, 399, 402, 441], "increas": [95, 101, 111, 122, 127, 162, 430, 481], "ind": [33, 95, 208, 366, 367, 470, 471, 474, 475], "index": [22, 31, 32, 33, 34, 67, 98, 101, 104, 114, 117, 123, 131, 138, 148, 170, 185, 231, 240, 241, 305, 317, 341, 351, 366, 367, 420, 421, 429, 430, 440, 441, 450, 459, 460, 470, 474, 478, 479, 486, 489, 500], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 84, 90, 91, 95, 98, 99, 101, 103, 104, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 138, 148, 151, 162, 164, 208, 209, 224, 225, 232, 240, 241, 301, 302, 303, 326, 329, 335, 344, 351, 358, 366, 367, 421, 429, 440, 443, 444, 448, 450, 459, 460, 466, 470, 471, 474, 475, 478, 479, 484, 486], "indices_or_sect": [39, 99, 164, 450, 484], "indirect": [33, 448], "individu": 381, "inequ": 352, "inexact": [142, 239, 247, 249], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 76, 96, 173, 176, 177, 178, 179, 180, 191, 202, 212, 213, 215, 228, 234, 239, 240, 241, 244, 246, 249, 364, 451, 476], "infer": [42, 84, 223, 425, 429], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 144, 176, 177, 178, 179, 180, 235, 239, 244, 246, 249, 426, 477, 500], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 191], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 98, 101, 121, 127, 129, 135, 315, 428, 496, 500], "initi": [18, 19, 84, 98, 105, 153, 227, 233, 244, 246, 247, 249, 321, 323, 328, 342, 363, 371, 457], "inner": [6, 83, 103, 104, 201, 225, 356], "innermost": 226, "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 200, 202, 204, 205, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 317, 325, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 393, 399, 415, 420, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 476, 477, 478, 480, 481, 482, 483, 484, 487, 488], "insert": [6, 22, 31, 32, 93, 95, 98, 103, 111, 156, 162, 210, 222, 240, 241, 244, 246, 335, 367, 440, 441, 500], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 121, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 167, 170, 210, 211, 222, 224, 225, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "instead": [34, 49, 93, 97, 98, 103, 111, 143, 156, 162, 163, 170, 201, 210, 217, 222, 227, 233, 304, 351, 363, 421, 430, 457, 496], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 39, 44, 56, 63, 70, 71, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 98, 99, 101, 105, 106, 107, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 164, 167, 168, 170, 198, 199, 202, 208, 209, 210, 222, 223, 224, 227, 229, 233, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 325, 337, 346, 348, 354, 355, 357, 358, 363, 366, 367, 371, 399, 402, 421, 425, 427, 429, 430, 434, 435, 436, 437, 447, 448, 450, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 478, 479, 480, 481, 482, 484, 487, 488, 496], "int16": 101, "int32": [0, 9, 44, 64, 101, 105, 106, 114, 149, 152, 154, 155, 167, 211, 247, 249, 354, 355, 371, 373, 381, 383, 388, 390, 396, 399, 415, 431, 457, 468, 487, 488], "int64": [0, 9, 64, 101, 247, 249, 431], "int8": [101, 363], "int_": 9, "int_0": 467, "int_t": 467, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 63, 66, 84, 85, 86, 95, 98, 99, 101, 136, 139, 142, 143, 144, 148, 162, 164, 168, 172, 185, 187, 199, 202, 208, 223, 227, 229, 233, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 338, 346, 361, 362, 363, 366, 371, 399, 402, 407, 421, 425, 426, 427, 429, 432, 433, 434, 436, 437, 440, 441, 442, 450, 452, 455, 457, 459, 463, 465, 477, 478, 479, 480, 482, 484, 496], "integer_lik": 463, "integr": [3, 4, 56, 84, 86, 142, 162, 223, 229, 236, 245, 248, 250, 361, 362, 425, 455, 457, 467, 482], "intel": [3, 103], "intend": [98, 346], "intent": 142, "interchang": [98, 237, 343, 458], "interfac": [0, 149], "interior": 158, "intermedi": [85, 103, 104], "intern": 371, "interp": 6, "interpol": [127, 430], "interpret": [2, 40, 41, 42, 48, 63, 75, 101, 121, 127, 129, 149, 185, 224, 351, 366, 496], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 95, 111, 156, 210, 222, 371, 399, 401, 403, 404, 406, 414, 415, 458], "intp": [247, 249], "intrins": 496, "introduc": 434, "introduct": 10, "introselect": [98, 327, 357], "inv": [6, 191, 203], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 197, 203, 208, 209, 214, 417, 445, 446, 461, 462, 478], "invert": [6, 59, 197, 203, 208], "invok": 496, "involv": 208, "io": [148, 211], "irfft": [6, 118, 121, 126, 128, 129, 130, 132], "irfft2": [6, 127, 129, 131], "irfftn": [6, 127, 128, 133], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 101, "isbuiltin": 101, "isclos": [6, 17], "iscomplex": [6, 175, 181], "iscomplexobj": [6, 174, 182], "isfinit": [6, 177, 178, 179, 180, 239, 244, 246, 249], "isfortran": 6, "isin": 6, "isinf": [6, 176, 178, 179, 180, 239], "isn": 101, "isnan": [6, 176, 177, 179, 180, 239, 242, 243, 244, 246, 247, 249], "isnat": [6, 178], "isneginf": [6, 176, 177, 178, 180, 239], "isposinf": [6, 176, 177, 178, 179, 239], "isreal": [6, 174, 182], "isrealobj": [6, 175, 181], "isscalar": 6, "issctyp": 6, "issu": 123, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 98, 149, 150, 152, 478, 489], "item_dtyp": 101, "item_hasobject": 101, "item_is_point": 101, "items": [98, 101], "itemset": 6, "iter": [6, 40, 41, 42, 98, 104, 137, 149, 150, 152, 153, 316, 317, 367, 430, 460, 500], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 89, 98, 121, 127, 129, 135, 162, 163, 167, 193, 194, 195, 196, 201, 203, 209, 229, 245, 248, 250, 346, 358, 408, 420, 425, 429, 448, 455, 466, 467, 468, 482, 496], "itself": [49, 98, 101, 239, 304, 496], "iu": 224, "iu1": [224, 474], "iu2": 474, "ix_": 6, "ixgrid": 185, "j": [72, 73, 98, 103, 117, 119, 121, 122, 123, 124, 126, 127, 130, 131, 133, 142, 151, 169, 170, 186, 190, 193, 194, 215, 225, 239, 346, 356, 364, 367, 422, 449, 452, 460, 463], "j1": 186, "jame": 10, "ji": 103, "jil": 103, "jk": [103, 104], "jl": 104, "john": 10, "join": [69, 70, 71, 100, 165, 438, 450, 454, 485, 500], "jump": [87, 369], "just": [69, 93, 101, 117, 123, 128, 130, 131], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 89, 92, 96, 98, 103, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 155, 159, 160, 161, 166, 169, 172, 176, 177, 178, 186, 187, 188, 189, 198, 204, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 234, 235, 238, 258, 304, 309, 349, 350, 352, 355, 360, 361, 362, 364, 369, 370, 424, 426, 432, 433, 436, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 463, 468, 469, 470, 471, 473, 474, 475, 476, 477, 480, 486, 488, 504], "kaiser": 6, "kappa": 416, "keep": [48, 49, 98, 304, 478], "keepdim": [16, 18, 19, 21, 31, 32, 56, 81, 98, 202, 223, 227, 229, 230, 233, 240, 241, 244, 245, 246, 247, 248, 249, 250, 299, 300, 301, 302, 321, 322, 323, 328, 340, 342, 347, 363, 365, 367, 425, 455, 457, 460, 482], "kei": [3, 33, 98, 101, 137, 263, 294, 448], "key2": 101, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 75, 76, 79, 80, 83, 87, 88, 89, 90, 92, 96, 98, 105, 106, 109, 110, 112, 114, 118, 132, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 158, 161, 166, 167, 170, 172, 187, 211, 213, 214, 215, 216, 217, 224, 225, 228, 232, 234, 235, 236, 238, 239, 309, 349, 350, 353, 354, 355, 360, 361, 362, 364, 369, 370, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 424, 426, 432, 433, 439, 443, 444, 445, 446, 456, 461, 462, 468, 470, 474, 476, 477, 481, 486, 487, 488, 496], "ki": 103, "kind": [33, 49, 64, 70, 71, 77, 84, 98, 101, 103, 135, 165, 201, 223, 225, 303, 304, 327, 338, 357, 425, 438, 448, 454, 485, 500], "kl": [10, 103, 104], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 150, 409], "kron": 6, "kroneck": 186, "kth": [98, 327, 357], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 76, 79, 80, 87, 88, 96, 98, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 151, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 234, 235, 236, 238, 288, 306, 333, 349, 350, 352, 360, 361, 362, 364, 369, 370, 424, 426, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 476, 477], "l": [10, 39, 101, 190, 194, 196], "la": [193, 195, 196], "label": 103, "laid": 45, "lam": 396, "lambda": 151, "lapack": [193, 195], "laplac": 6, "laptop": 4, "larg": [10, 87, 101, 162, 203, 239, 369, 480, 504], "larger": [103, 116, 117, 119, 122, 123, 124, 126, 128, 129, 130, 131, 133, 135, 430, 465, 480, 496], "largest": [10, 104, 130, 135, 143, 168, 198, 235, 239, 426], "largest_singular_valu": 203, "last": [16, 21, 22, 33, 83, 93, 94, 98, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 139, 156, 158, 171, 201, 210, 222, 225, 317, 363, 420, 429, 434, 440, 448, 453, 457, 463, 480], "later": 504, "latest": [4, 148], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 145, 146, 228, 234, 367, 460], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 103, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 154, 155, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 234, 235, 238, 309, 315, 349, 350, 352, 354, 355, 360, 361, 362, 364, 369, 370, 424, 426, 428, 429, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 476, 477, 486, 487, 488, 489], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [122, 123, 124, 242, 243, 472], "learn": [3, 4, 217], "least": [53, 54, 55, 56, 91, 100, 101, 104, 111, 134, 140, 145, 146, 150, 175, 198, 204, 228, 234, 438, 485], "left": [10, 28, 31, 32, 35, 50, 81, 93, 95, 98, 140, 141, 187, 195, 202, 227, 233, 240, 241, 247, 249, 335, 363, 414, 432, 437, 440, 457, 467, 481], "left_shift": [6, 432], "leg": [166, 425], "legaci": 407, "len": [98, 101, 119, 120, 121, 124, 126, 127, 128, 129, 133, 170, 198, 227, 231, 232, 233, 280, 442, 481], "length": [23, 39, 56, 85, 86, 94, 107, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 153, 156, 158, 162, 165, 193, 207, 222, 227, 231, 233, 242, 243, 367, 374, 429, 431, 438, 440, 441, 442, 453, 460, 463, 464, 485], "less": [6, 85, 86, 107, 159, 160, 162, 163, 189, 198, 203, 242, 243, 247, 249, 352, 363, 441, 443, 457, 465], "less_equ": [6, 107, 159, 160, 188, 352], "let": 373, "level": [489, 496], "level_zero": [23, 36, 40, 41, 42, 43, 45, 75, 89, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 156, 167, 210, 211, 222, 232, 353, 354, 355, 468, 481, 487, 488], "lexicograph": 478, "lexsort": [6, 33, 448], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 434, 435], "librari": [3, 4, 496], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 69, 98, 100, 103, 105, 114, 129, 149, 150, 151, 152, 153, 154, 156, 167, 210, 211, 222, 224, 304, 317, 325, 348, 354, 367, 371, 415, 428, 429, 460, 487, 500], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 82, 87, 88, 96, 98, 101, 105, 106, 107, 108, 109, 110, 112, 114, 135, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 166, 167, 168, 172, 176, 177, 178, 187, 188, 189, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 228, 229, 230, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 304, 306, 349, 350, 352, 354, 355, 357, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 396, 397, 399, 402, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 424, 426, 428, 429, 432, 433, 439, 443, 444, 445, 446, 448, 451, 452, 455, 456, 457, 461, 462, 476, 477, 482, 487, 488], "linalg": [6, 97, 103, 104, 452], "line": [198, 211], "linear": [10, 74, 78, 198, 206, 222, 489, 500], "linspac": [0, 6, 23, 108, 156, 222, 231, 467, 480], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 62, 70, 71, 75, 89, 92, 98, 99, 100, 101, 103, 104, 120, 125, 134, 154, 155, 156, 158, 164, 165, 175, 182, 210, 211, 222, 225, 346, 358, 421, 427, 428, 430, 431, 438, 441, 450, 454, 463, 466, 479, 481, 484, 485, 486], "list_pickl": 101, "littl": 101, "ln": 222, "load": [6, 150, 211], "loadtxt": [6, 150], "loc": [371, 382, 384, 385, 393, 417], "local": 4, "locat": [0, 4, 157, 179, 180, 224, 356, 382, 384, 440], "log": [6, 112, 156, 205, 210, 213, 214, 215, 216, 222, 223, 386], "log10": [6, 212, 214, 215], "log1p": [6, 110, 112, 212, 213, 215], "log2": [6, 212, 213, 214, 217], "log_bas": 222, "logabsdet": 205, "logaddexp": [6, 84, 217, 223], "logaddexp2": [6, 216, 223], "logarithm": [84, 192, 205, 210, 212, 213, 214, 215, 216, 217, 223, 387, 500], "logic": [16, 21, 218, 219, 220, 221, 489, 500], "logical_and": [6, 58, 219, 220, 221], "logical_not": [6, 59, 172, 218, 220, 221], "logical_or": [6, 60, 218, 219, 221], "logical_xor": [6, 61, 218, 219, 220], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 156, 210], "logsumexp": [84, 216, 217], "lomax": 394, "long": [101, 199], "longer": [121, 127, 504], "look": [350, 460], "lookfor": 6, "loop": 103, "loos": 102, "lorentz": 409, "lose": [121, 127, 129], "low": [117, 119, 123, 124, 371, 399, 402, 415, 496], "lower": [89, 114, 162, 163, 184, 190, 194, 196, 224, 468, 469, 470, 471, 474, 475], "lowest": [56, 103, 104, 371, 399], "lstsq": 6, "m": [4, 10, 82, 100, 101, 103, 114, 117, 119, 121, 123, 124, 127, 128, 129, 133, 139, 140, 141, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 224, 225, 226, 367, 436, 441, 459, 460, 468, 469, 470, 471, 473, 474, 475], "machin": [4, 10, 135, 168, 198, 217, 423], "machineri": 101, "made": [36, 41, 53, 101, 148, 186, 239, 450], "magnitud": [11, 12, 76, 115, 364], "mai": [16, 20, 21, 49, 64, 68, 70, 71, 77, 86, 98, 101, 103, 104, 111, 117, 119, 121, 122, 123, 124, 126, 127, 130, 133, 158, 163, 165, 191, 193, 194, 198, 202, 204, 217, 222, 225, 239, 245, 248, 250, 304, 336, 367, 423, 430, 438, 454, 464, 485, 496], "main": [89, 90, 91, 92, 93, 114, 134, 167, 196, 224, 465, 468, 469, 470, 473, 474], "mainstai": 10, "maintain": [95, 98, 101, 162, 335, 440, 460], "major": [4, 40, 41, 42, 43, 45, 48, 49, 98, 304, 351, 420, 421, 428, 479], "make": [43, 45, 69, 101, 231, 428, 478, 480], "manag": 0, "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 496], "manipul": [3, 90, 489, 500], "manual": [4, 101, 464], "mappingproxi": 101, "mask": [101, 185, 224, 351, 359, 368, 459, 470, 474], "mask_func": 224, "mask_indic": [6, 470, 474], "mass": 162, "mat": 6, "match": [11, 12, 41, 70, 71, 77, 81, 84, 94, 101, 148, 150, 158, 171, 223, 225, 366, 367, 425, 454, 459, 460, 463, 486], "math": [10, 108], "mathemat": [489, 500], "matlab": 147, "matmul": [6, 97, 204, 207, 483], "matplotlib": [231, 409], "matric": [134, 151, 170, 185, 192, 193, 195, 197, 200, 202, 203, 204, 205, 207, 225, 226, 231, 500], "matrix": [82, 97, 98, 103, 171, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 225, 226, 231, 452, 473, 481, 483, 489, 500], "matrix_pow": [6, 452], "matrix_rank": 6, "matter": 478, "max": [0, 6, 18, 31, 68, 98, 135, 145, 146, 162, 163, 168, 198, 200, 228, 233, 234, 244, 306, 388, 460, 464, 480, 496], "max_arg": 0, "max_val": 0, "maxima": [145, 227, 228], "maximum": [0, 6, 18, 31, 32, 68, 98, 104, 145, 146, 227, 233, 234, 240, 241, 244, 246, 301, 321, 361, 362, 365, 367, 480], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 75, 81, 89, 90, 92, 98, 103, 105, 106, 114, 117, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 149, 150, 151, 152, 153, 154, 155, 158, 167, 170, 191, 202, 211, 224, 230, 232, 245, 248, 250, 304, 309, 317, 346, 353, 354, 355, 371, 384, 386, 389, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 416, 417, 420, 429, 436, 455, 457, 468, 470, 474, 481, 482, 487, 488, 496], "meaningfulli": 496, "meant": 496, "median": [0, 6], "meet": 441, "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 148, 154, 155, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 231, 234, 235, 238, 309, 315, 341, 349, 350, 352, 354, 355, 360, 361, 362, 364, 369, 370, 424, 426, 428, 429, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 476, 477, 486, 487, 488, 489, 504], "mersenn": 371, "mesh": 185, "meshgrid": [6, 151, 170, 185, 232, 353], "met": [97, 201], "meta": 101, "metadata": 101, "method": [10, 16, 18, 19, 21, 33, 49, 75, 97, 98, 101, 137, 148, 150, 200, 203, 207, 304, 309, 325, 333, 336, 348, 351, 358, 371, 429, 442, 457, 459, 466, 489], "mgrid": [117, 119, 128, 131, 170, 185], "mgridclass": 232, "middl": [10, 93, 117, 119, 123, 124, 195], "might": [103, 122, 123, 124], "min": [6, 19, 32, 68, 98, 135, 145, 146, 162, 163, 168, 191, 198, 204, 207, 227, 228, 234, 246, 306, 460, 496], "min_scalar_typ": 6, "minima": [146, 233, 234], "minimum": [6, 19, 31, 32, 68, 98, 142, 145, 146, 227, 228, 233, 240, 241, 244, 246, 302, 323, 361, 362, 365], "minlength": 57, "mintypecod": 6, "minu": [112, 144, 235, 426, 477], "miscellan": [2, 489, 500], "mise": 416, "miss": 211, "mix": 225, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 113, 426, 480], "mode": [67, 74, 78, 98, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 204, 305, 329, 344, 366, 409, 414, 421, 440, 459, 460], "model": [4, 373], "modf": 6, "modifi": [75, 93, 134, 408], "modul": [116, 157, 489], "modulu": [147, 235, 426], "monoton": [95, 162], "moor": 203, "more": [0, 3, 4, 33, 36, 53, 54, 55, 100, 101, 103, 104, 112, 128, 131, 140, 141, 148, 150, 163, 165, 170, 198, 199, 200, 201, 203, 207, 214, 216, 430, 436, 454, 463, 467, 478, 480, 496, 504], "most": [3, 4, 22, 93, 94, 101, 104, 116, 122, 239, 371, 407, 430, 453], "move": [98, 237, 327, 358, 434, 435, 466, 478], "moveaxi": [6, 358, 434, 435, 466], "msg": 0, "msort": 6, "mt": 98, "mt19937": 407, "mu": [382, 386, 393, 416], "multi": [2, 98, 170, 185, 232, 341, 353, 421, 478, 489], "multi_dot": [6, 97, 103, 104], "multi_index": 421, "multiarrai": 101, "multidimension": [162, 171, 486], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 70, 71, 83, 84, 99, 101, 103, 117, 119, 123, 124, 128, 129, 131, 133, 163, 164, 165, 185, 193, 194, 195, 196, 197, 201, 223, 227, 229, 233, 244, 245, 246, 248, 250, 425, 438, 441, 448, 450, 454, 455, 467, 478, 482, 484, 485, 489], "multipli": [6, 85, 103, 195, 247, 363], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 389, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 88, 94, 96, 97, 100, 109, 110, 111, 112, 115, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 142, 143, 144, 145, 146, 147, 150, 153, 158, 159, 160, 161, 162, 163, 165, 166, 169, 172, 176, 177, 178, 179, 180, 187, 188, 189, 190, 201, 202, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 227, 228, 229, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 349, 350, 352, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 424, 425, 426, 427, 432, 433, 434, 436, 437, 438, 439, 440, 443, 444, 445, 446, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 476, 477, 482, 485, 486], "mx": 198, "mxn": 226, "n": [0, 4, 10, 34, 39, 86, 90, 91, 94, 95, 98, 99, 100, 101, 102, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 151, 158, 164, 167, 185, 198, 199, 200, 203, 204, 207, 208, 209, 224, 225, 226, 231, 248, 250, 346, 358, 359, 366, 373, 388, 390, 400, 410, 440, 442, 450, 452, 455, 458, 459, 460, 463, 466, 467, 468, 469, 470, 471, 473, 474, 475, 481, 482, 484, 496], "n1": 231, "n2": [211, 231], "n3": 231, "naiv": 104, "name": [0, 6, 101], "namedtupl": 204, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 96, 142, 145, 146, 173, 176, 177, 178, 179, 180, 213, 227, 228, 229, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 361, 362, 363, 451, 455, 476, 478, 482, 500], "nan_to_num": 6, "nanargmax": [6, 31, 241], "nanargmin": [6, 32, 240], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 145, 146, 227, 228, 234, 246], "nanmean": [6, 229, 248, 250, 455, 482], "nanmedian": 6, "nanmin": [6, 145, 146, 228, 233, 234, 244], "nanpercentil": 6, "nanprod": [6, 363], "nanquantil": 6, "nanstd": [6, 229, 245, 250, 455, 482], "nansum": 6, "nanvar": [6, 229, 245, 248, 455, 482], "nat": 178, "nativ": 101, "native_cod": 101, "native_dt": 101, "natur": [205, 212, 213, 214, 215, 216, 217, 223], "nbad": 383, "nbyte": 98, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 501], "ndim": [6, 34, 36, 45, 53, 54, 55, 82, 90, 93, 98, 101, 134, 186, 207, 226, 227, 233, 354, 358, 464, 466, 487], "ndmin": 36, "nearest": [35, 66, 136, 143, 144, 235, 426, 433, 437, 477], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 77, 85, 86, 102, 113, 121, 127, 129, 134, 148, 156, 210, 222, 225, 229, 242, 243, 245, 247, 248, 249, 250, 363, 429, 430, 455, 457, 482, 504], "necessarili": [193, 195], "need": [4, 36, 41, 93, 103, 157, 428, 459, 460, 486], "needs_init": 101, "needs_pyapi": 101, "neg": [6, 10, 16, 21, 35, 57, 76, 92, 93, 95, 98, 111, 114, 117, 119, 122, 123, 124, 127, 130, 139, 142, 153, 158, 162, 176, 177, 178, 179, 180, 199, 239, 244, 246, 248, 249, 250, 336, 360, 361, 362, 363, 366, 390, 421, 437, 455, 457, 459, 460, 465, 482], "negat": 441, "negative_binomi": 6, "neginf": 239, "neither": [97, 145, 146, 207, 225, 244, 246], "nest": [44, 100, 165, 438, 454, 485], "nested_it": 6, "net": [145, 146, 228, 234], "never": [429, 480], "new": [22, 36, 49, 62, 63, 69, 70, 71, 81, 84, 85, 86, 93, 98, 100, 101, 102, 105, 106, 111, 145, 146, 148, 152, 153, 154, 155, 156, 165, 167, 210, 222, 223, 224, 228, 234, 237, 242, 243, 247, 249, 304, 333, 336, 346, 354, 355, 358, 425, 429, 430, 434, 435, 438, 450, 454, 464, 466, 485, 486, 487, 488, 496], "new_dtyp": 101, "new_ord": 101, "new_shap": 430, "newaxi": 111, "newbyteord": [6, 101], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 154, 155, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 234, 235, 238, 304, 309, 349, 350, 352, 354, 355, 360, 361, 362, 364, 369, 370, 424, 426, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 476, 477, 487, 488], "newshap": 429, "next": [4, 135, 350], "nextaft": 6, "ngood": 383, "ni": [231, 367, 459, 460], "nine": 373, "ninja": 4, "nj": [367, 459, 460], "njm": 103, "nk": [367, 459, 460], "nl": 10, "nlk": 103, "nn": 231, "noisi": 198, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 75, 81, 89, 90, 92, 95, 98, 105, 106, 113, 114, 118, 127, 130, 132, 138, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 167, 170, 174, 176, 185, 210, 211, 222, 224, 232, 239, 240, 241, 244, 246, 248, 250, 304, 309, 326, 336, 351, 353, 354, 355, 359, 361, 362, 371, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 455, 463, 468, 470, 474, 481, 482, 486, 487, 488], "nonc": [391, 392], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 81, 98, 138, 185, 486, 496], "nor": [145, 146, 195, 244, 246], "norm": [6, 10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 191, 195, 198, 500], "normal": [6, 82, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 162, 193, 194, 204, 217, 371, 386, 389, 400, 412, 421], "not_equ": [6, 107, 159, 160, 188, 189], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 70, 71, 75, 83, 87, 93, 95, 96, 98, 101, 103, 104, 111, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 143, 145, 146, 149, 150, 151, 152, 153, 162, 170, 172, 176, 187, 193, 211, 222, 235, 238, 248, 249, 250, 309, 333, 351, 358, 359, 361, 362, 366, 369, 374, 376, 377, 387, 392, 426, 428, 429, 430, 432, 436, 448, 455, 456, 458, 463, 464, 466, 467, 476, 478, 480, 482, 483], "notic": [101, 127, 130], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 105, 106, 107, 109, 110, 112, 114, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 166, 167, 172, 176, 177, 178, 187, 188, 189, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 228, 229, 233, 234, 235, 238, 244, 245, 246, 248, 249, 250, 304, 349, 350, 352, 354, 355, 360, 361, 362, 363, 364, 369, 370, 424, 426, 428, 432, 433, 439, 443, 444, 445, 446, 448, 451, 452, 455, 456, 457, 461, 462, 476, 477, 482, 487, 488], "now": [16, 21, 43, 45, 90, 195, 198, 224], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 312, 314, 317, 318, 319, 325, 327, 331, 336, 337, 338, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 369, 370, 396, 405, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "nr": 10, "nsamp": 383, "nsampl": 383, "nth": 463, "nuc": 202, "num": [0, 101, 108, 156, 210, 222, 467, 480], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 42, 46, 47, 50, 52, 56, 57, 62, 63, 81, 90, 92, 94, 95, 98, 101, 102, 103, 104, 111, 114, 115, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 136, 144, 149, 150, 152, 153, 156, 158, 162, 163, 167, 168, 173, 174, 175, 176, 182, 185, 191, 197, 200, 204, 205, 207, 208, 209, 210, 217, 222, 235, 239, 242, 243, 244, 246, 247, 248, 249, 250, 325, 334, 337, 348, 351, 358, 359, 363, 364, 371, 373, 383, 407, 426, 427, 430, 433, 434, 435, 436, 437, 444, 447, 455, 458, 464, 466, 468, 477, 478, 481, 482, 496, 500], "number_of_dimens": [98, 325, 348], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 72, 73, 76, 79, 80, 96, 101, 107, 109, 112, 122, 123, 124, 127, 129, 144, 145, 146, 159, 160, 169, 173, 176, 177, 178, 188, 189, 212, 213, 214, 215, 228, 234, 238, 349, 352, 360, 361, 362, 364, 422, 433, 437, 443, 444, 445, 446, 456, 461, 462, 476, 500], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 313, 317, 318, 319, 325, 331, 336, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 496, 500], "nvidia": 4, "nx": 231, "ny": 231, "nyquist": [10, 117, 119, 120, 121, 122, 123, 124, 127, 129, 130, 132], "o": [4, 16, 21, 101], "obj": [31, 32, 33, 101, 148, 162], "obj2sctyp": 6, "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 75, 89, 90, 92, 98, 101, 105, 106, 111, 114, 118, 132, 135, 137, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 168, 170, 191, 194, 202, 210, 211, 222, 224, 232, 304, 309, 333, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 429, 468, 470, 474, 481, 487, 488, 496], "obtain": [10, 93, 190, 351], "obviou": 10, "occupi": [135, 168], "occur": [22, 49, 64, 70, 71, 77, 98, 103, 165, 193, 225, 239, 304, 438, 454, 485], "occurr": [31, 32, 57, 95, 162, 240, 241, 478], "odd": [10, 118, 121, 125, 126, 127, 129, 130, 132], "off": [23, 121, 126, 193, 198], "offset": [93, 98, 101, 149, 150, 224, 312, 345, 465, 470, 471, 474, 475], "often": 161, "ogrid": [170, 185, 486], "ogridclass": 353, "oil": [373, 390], "old": 430, "omit": [371, 399], "onc": 197, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 74, 77, 78, 81, 98, 101, 105, 107, 111, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 140, 141, 142, 145, 146, 150, 154, 158, 163, 165, 167, 170, 175, 185, 195, 199, 202, 212, 213, 215, 224, 227, 228, 231, 232, 233, 234, 240, 241, 247, 249, 309, 317, 320, 351, 353, 355, 359, 363, 390, 421, 435, 441, 448, 453, 454, 457, 459, 463, 467, 470, 471, 474, 475, 478, 487, 496], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "onedpl": 4, "onemkl": [4, 193, 195], "ones": [6, 36, 43, 45, 56, 84, 96, 98, 103, 105, 106, 107, 111, 114, 133, 154, 155, 166, 167, 186, 198, 200, 223, 224, 242, 247, 355, 358, 363, 425, 431, 435, 466, 468, 476, 487, 488], "ones_lik": [6, 36, 106, 155, 354, 488], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 75, 78, 82, 98, 101, 103, 104, 105, 106, 114, 120, 130, 134, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 170, 190, 194, 196, 204, 207, 210, 211, 222, 224, 225, 227, 229, 230, 233, 239, 240, 241, 244, 245, 246, 247, 248, 250, 304, 336, 338, 354, 355, 357, 359, 360, 363, 371, 393, 399, 415, 428, 429, 448, 455, 457, 460, 474, 478, 480, 482, 486, 487, 488, 496], "open": [150, 170, 185, 210, 353, 371, 401, 403, 404, 406, 415, 458], "opencl": [23, 36, 40, 41, 42, 43, 45, 75, 89, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 156, 167, 210, 211, 222, 232, 353, 354, 355, 468, 481, 487, 488], "oper": [10, 15, 58, 59, 60, 61, 96, 101, 103, 104, 107, 111, 134, 144, 147, 159, 160, 172, 187, 188, 189, 190, 218, 220, 225, 227, 233, 235, 238, 239, 240, 241, 349, 352, 360, 361, 362, 366, 426, 432, 456, 464, 476, 478, 480, 489, 500], "operand": [103, 104, 209, 356, 463], "opposit": [10, 101, 113, 121, 126, 359], "optim": [4, 103, 104, 162, 163], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 173, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 194, 196, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 317, 346, 349, 350, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 370, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 420, 421, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 504], "ord": 202, "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 93, 95, 96, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 117, 119, 122, 123, 124, 127, 129, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 154, 155, 158, 159, 160, 161, 162, 166, 169, 172, 176, 177, 178, 187, 188, 189, 191, 193, 194, 195, 196, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 231, 234, 235, 237, 238, 258, 303, 304, 309, 317, 327, 330, 335, 338, 346, 349, 350, 351, 352, 354, 355, 357, 358, 360, 361, 362, 364, 369, 370, 420, 421, 424, 426, 428, 429, 430, 432, 433, 436, 439, 440, 443, 444, 445, 446, 448, 451, 452, 456, 461, 462, 463, 466, 476, 477, 478, 479, 481, 486, 487, 488, 500], "ordin": [198, 206], "ordinari": [127, 171, 190], "orient": [83, 367, 460], "origin": [62, 93, 98, 121, 127, 129, 202, 231, 237, 247, 249, 429, 430, 434, 478], "ortho": [10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "orthogon": [195, 204], "orthonorm": 204, "other": [33, 38, 49, 62, 63, 94, 98, 101, 122, 123, 124, 127, 129, 143, 151, 167, 193, 195, 201, 237, 254, 255, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 291, 293, 296, 297, 298, 304, 371, 415, 430, 435, 448, 478, 489, 500], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 81, 82, 87, 88, 89, 94, 96, 98, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 166, 167, 171, 172, 176, 177, 178, 187, 188, 189, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 304, 333, 349, 350, 352, 354, 355, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 425, 426, 427, 428, 429, 432, 433, 439, 440, 443, 444, 445, 446, 448, 451, 452, 453, 455, 456, 457, 461, 462, 465, 476, 477, 482, 486, 487, 488], "otim": 463, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 197, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 299, 300, 301, 302, 305, 306, 309, 310, 311, 317, 321, 322, 323, 328, 334, 340, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 476, 477, 480, 481, 482, 483, 485, 486, 487, 488], "outer": [6, 83, 93, 103, 104, 186], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 166, 167, 169, 170, 172, 173, 174, 176, 177, 178, 185, 187, 188, 189, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 238, 241, 242, 243, 245, 247, 248, 249, 250, 304, 309, 349, 350, 352, 353, 354, 355, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 426, 427, 432, 433, 437, 439, 441, 443, 444, 445, 446, 448, 451, 452, 453, 455, 456, 457, 459, 461, 462, 464, 465, 468, 470, 474, 476, 477, 478, 480, 481, 482, 486, 487, 488, 500, 504], "outsid": [162, 163], "over": [10, 16, 21, 56, 84, 85, 86, 97, 98, 103, 104, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 139, 151, 156, 162, 163, 171, 202, 210, 222, 223, 225, 227, 229, 231, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 317, 363, 367, 371, 398, 403, 414, 415, 425, 430, 455, 457, 459, 460, 463, 467, 480, 482, 500], "overal": [117, 119, 123, 124, 128, 129, 131, 133], "overflow": 142, "overrid": [83, 106, 155, 355, 488], "overview": 2, "overwrite_input": 230, "p": [10, 191, 198, 199, 373, 376, 381, 387, 390, 480], "pack": [93, 420, 500], "packag": [0, 3], "packbit": 6, "pad": [6, 101, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 430], "page": [3, 500], "pair": [10, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 193], "parallel": [1, 3, 4, 9, 489], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 314, 317, 333, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "parameter": [371, 393, 415], "parametr": 467, "pareto": 6, "pars": [150, 211], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 98, 127, 145, 146, 169, 174, 175, 181, 182, 193, 194, 196, 224, 228, 234, 236, 318, 331, 422, 423, 449, 470, 474, 477, 478, 496], "partial": [33, 448], "particular": [101, 201], "particularli": 103, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 448, 468, 470, 474, 481, 487, 488, 496], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 163, 167, 170, 185, 198, 211, 224, 232, 239, 309, 333, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 428, 468, 470, 471, 474, 475, 481, 487, 488], "path": [4, 103, 104, 150, 211], "path_info": 104, "pathlib": 211, "pattern": 56, "penros": 203, "per": [103, 118, 132, 421], "percentil": [6, 230], "perf_count": 0, "perform": [16, 21, 41, 42, 68, 94, 103, 117, 119, 122, 123, 124, 128, 129, 131, 133, 139, 190, 363, 457], "perhap": 428, "period": [10, 480], "permit": 150, "permut": [6, 98, 103, 237, 346, 358, 466, 500], "permute_dim": 466, "phase": [10, 20, 480], "phase_deg": 480, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 87, 88, 116, 369, 445, 446, 461, 462, 467, 480, 504], "pickl": [150, 211], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 68, 70, 71, 85, 86, 97, 98, 111, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 148, 170, 173, 225, 227, 229, 233, 239, 242, 243, 245, 247, 248, 249, 250, 317, 336, 338, 346, 353, 363, 366, 367, 408, 429, 430, 434, 437, 448, 454, 455, 457, 459, 465, 482, 496], "plane": 436, "platform": [85, 86, 101, 242, 243, 247, 249, 363, 457], "pleas": [0, 3, 39, 99, 103, 162, 164, 484, 496], "plot": 409, "plt": [231, 409], "plu": [212, 213, 215], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 76, 84, 101, 105, 106, 110, 114, 115, 116, 121, 122, 126, 127, 128, 129, 130, 135, 136, 142, 149, 150, 151, 153, 154, 155, 158, 167, 169, 198, 199, 210, 211, 216, 217, 223, 229, 239, 245, 248, 250, 350, 354, 355, 371, 400, 412, 422, 424, 425, 437, 439, 440, 455, 467, 468, 482, 487, 488, 500], "pointer": 101, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 72, 73, 76, 79, 80, 87, 88, 96, 98, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 234, 235, 238, 349, 350, 352, 360, 361, 362, 364, 369, 370, 371, 398, 424, 426, 432, 433, 437, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 476, 477], "portion": [162, 163], "posinf": 239, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 65, 76, 92, 93, 98, 111, 114, 115, 117, 119, 122, 123, 124, 127, 130, 132, 135, 142, 150, 173, 176, 177, 178, 179, 180, 190, 199, 208, 237, 239, 244, 246, 249, 327, 341, 349, 358, 373, 397, 434, 435, 437, 439, 441, 451, 452, 465, 466], "possess": 193, "possibl": [10, 48, 49, 54, 55, 98, 99, 103, 104, 111, 145, 146, 158, 162, 164, 224, 304, 333, 358, 429, 450, 453, 458, 459, 460, 466, 484], "possibli": 44, "pow": [362, 496], "power": [6, 10, 110, 116, 142, 199, 361, 452, 481], "pre": 163, "precis": [11, 12, 56, 85, 86, 101, 103, 135, 142, 169, 198, 224, 242, 243, 247, 249, 363, 422, 457, 465], "predecessor": 480, "prefer": [67, 75, 98, 309, 336, 351], "prepend": [94, 102, 464], "present": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 167, 170, 211, 224, 232, 244, 246, 249, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 468, 470, 474, 481, 487, 488], "preserv": [49, 53, 54, 55, 68, 98, 101, 103, 139, 140, 141, 142, 194, 195, 196, 304, 428, 465, 478], "press": 10, "prevent": 103, "previou": 56, "print": [0, 4, 42, 56, 57, 74, 95, 101, 104, 371, 390, 395], "print_device_info": 0, "printabl": 104, "printopt": 6, "prior": 94, "prob1": [216, 217], "prob12": [216, 217], "prob2": [216, 217], "probabl": [162, 217, 373, 381, 390], "proce": 496, "process": 10, "processor": 103, "prod": [6, 85, 98, 208, 209, 247, 496], "produc": [10, 34, 101, 211, 367, 440, 460], "product": [6, 83, 85, 97, 98, 103, 104, 171, 185, 186, 201, 206, 208, 209, 225, 238, 242, 247, 310, 356, 363, 463, 483, 500], "program": [4, 143], "progress": [156, 210], "project": [4, 101, 364], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 61, 64, 65, 76, 79, 80, 87, 88, 96, 109, 110, 112, 142, 144, 145, 146, 147, 156, 166, 187, 210, 212, 213, 214, 215, 216, 217, 222, 225, 228, 234, 235, 238, 350, 361, 362, 369, 370, 424, 426, 431, 432, 439, 443, 445, 446, 451, 452, 456, 461, 462, 464, 476, 477], "promote_typ": 6, "propag": [101, 145, 146, 227, 228, 233, 234, 242, 243, 244, 246, 247, 249], "proper": [145, 146, 193, 195], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 194, 196, 204, 210, 211, 222, 224, 232, 252, 304, 309, 313, 315, 316, 318, 320, 324, 325, 331, 336, 337, 341, 346, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488, 496], "protocol": [44, 101, 148], "prototyp": 106, "provid": [0, 6, 10, 31, 32, 70, 71, 77, 84, 98, 99, 103, 104, 111, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 152, 162, 163, 165, 179, 180, 223, 240, 241, 244, 246, 247, 249, 371, 399, 402, 425, 428, 438, 454, 459, 467, 478, 485, 486, 504], "pseudo": [203, 371], "ptp": 6, "pure": [10, 121, 127, 129, 130], "purpos": [34, 198], "put": [6, 10, 98, 113, 121, 127, 129, 359, 367, 460, 496], "put_along_axi": [6, 366, 460], "putmask": [6, 366], "pval": 388, "py": 4, "pyplot": [231, 409], "pytest": 4, "python": [0, 2, 3, 44, 98, 101, 147, 148, 235, 319, 426, 427, 496], "q": [195, 199, 204, 209, 230], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 117], "quantil": 6, "quaternion": 199, "question": 89, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "quick": [2, 3], "quickli": [185, 504], "quotient": [29, 51], "r": [88, 204], "r2": 204, "rad": 88, "rad2deg": [6, 87, 88, 480], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 87, 88, 369, 480, 504], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 72, 73, 75, 76, 77, 79, 80, 84, 87, 88, 95, 96, 97, 98, 99, 105, 106, 107, 109, 110, 112, 114, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 164, 166, 167, 172, 176, 177, 178, 187, 188, 189, 199, 201, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 227, 228, 229, 233, 234, 235, 238, 240, 241, 244, 245, 246, 248, 249, 250, 304, 305, 349, 350, 352, 354, 355, 360, 361, 362, 363, 364, 369, 370, 421, 424, 425, 426, 428, 429, 432, 433, 439, 443, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 461, 462, 476, 477, 482, 484, 487, 488, 496], "rand": [6, 104, 371, 401, 403, 404, 406], "randint": [6, 98, 319, 371, 402], "randn": [6, 139, 140, 141, 203, 204, 207, 209, 371, 454], "random": [98, 104, 139, 140, 141, 195, 201, 203, 204, 207, 209, 319, 454, 489, 500], "random_integ": [6, 371, 399], "random_sampl": [6, 371, 398, 401, 404, 406], "randomli": 395, "randomst": 399, "ranf": 6, "rang": [0, 95, 152, 162, 163, 217, 358, 365, 366, 390, 395, 421, 427, 454, 463, 466, 480, 500], "rank": [111, 113, 151, 198, 200, 458], "rate": [118, 132], "rather": 351, "ratio": [0, 96, 144, 198, 476, 504], "ration": 500, "ravel": [6, 98, 113, 138, 202, 317, 356, 496], "ravel_multi_index": [6, 479], "raveled_indic": 421, "raw": 204, "rayleigh": 6, "rcond": [198, 203], "re": [31, 32, 57, 89, 127, 434], "read": [89, 93, 98, 101, 149, 150, 152, 153, 211, 317, 420, 429], "readonli": 101, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 65, 66, 76, 84, 98, 116, 119, 121, 126, 127, 128, 129, 130, 131, 133, 135, 143, 145, 146, 147, 166, 169, 174, 181, 182, 190, 193, 194, 195, 196, 200, 203, 204, 205, 207, 216, 217, 223, 228, 234, 235, 239, 248, 250, 373, 390, 423, 424, 425, 426, 439, 449, 455, 477, 478, 482, 496, 500], "real_if_clos": [6, 20, 169, 422], "rearrang": [98, 327, 500], "reason": 129, "rebuild": 100, "recal": 101, "recent": [22, 453], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 439, 451], "recommend": [103, 351, 464], "reconstruct": [101, 207, 478], "recov": 10, "reduc": [16, 21, 31, 32, 56, 204, 207, 223, 227, 229, 231, 233, 240, 241, 244, 245, 246, 247, 248, 249, 250, 363, 425, 430, 455, 457, 482], "reduce_hypot": 166, "reduct": [16, 21], "redund": 130, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496], "reflect": 496, "reflector": 204, "regardless": [101, 194, 196, 484], "regular": 211, "rel": [17, 98, 173, 341, 434, 435], "relat": 101, "relev": [101, 156, 210, 222], "rem": 147, "remain": [16, 21, 56, 104, 131, 133, 162, 223, 229, 237, 245, 248, 250, 425, 429, 455, 482], "remaind": [6, 144, 147, 235, 361, 362], "remov": [31, 32, 87, 93, 98, 111, 127, 339, 363, 369, 453, 457, 500], "reorder": [103, 139, 209, 237], "rep": 464, "repeat": [6, 98, 117, 119, 123, 124, 128, 129, 131, 133, 134, 193, 194, 195, 196, 231, 359, 430, 464, 467, 478, 496], "repeatedli": 103, "repetit": [0, 427, 464], "replac": [3, 10, 44, 68, 113, 239, 242, 243, 359, 367, 376, 441, 496], "replic": 464, "repo": 4, "repr": 292, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 101, 104, 122, 130, 148, 151, 156, 158, 170, 205, 210, 222, 231, 250, 371, 430, 472, 478, 496], "represent": [58, 60, 61, 104, 135, 168, 170, 239, 350, 496], "request": 435, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 98, 101, 103, 115, 170, 239, 304, 336, 430], "res_cpu": 89, "res_host": 89, "rese": 407, "reset": 496, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 89, 90, 91, 93, 96, 97, 98, 99, 100, 103, 111, 113, 120, 125, 139, 147, 164, 170, 171, 185, 186, 202, 224, 225, 227, 233, 238, 312, 317, 336, 346, 359, 395, 420, 428, 430, 434, 436, 456, 463, 465, 467, 470, 471, 474, 475, 476, 478, 484, 496], "resid": [111, 115, 148], "residu": 198, "resiz": [6, 111, 496], "resolut": 135, "resolv": [84, 111, 223, 425], "resourc": 0, "respect": [15, 29, 51, 58, 60, 61, 96, 98, 107, 142, 144, 147, 158, 159, 160, 187, 188, 189, 216, 217, 218, 220, 221, 235, 238, 341, 352, 361, 362, 426, 432, 456, 476, 480], "rest": 39, "restor": 434, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 51, 56, 58, 59, 60, 61, 64, 68, 70, 71, 76, 81, 84, 85, 86, 96, 97, 101, 104, 106, 107, 112, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 142, 144, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 170, 172, 176, 177, 178, 179, 180, 187, 188, 189, 190, 193, 202, 204, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 233, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 351, 352, 355, 356, 361, 362, 363, 366, 371, 373, 403, 425, 429, 431, 432, 433, 435, 437, 440, 443, 444, 450, 454, 455, 457, 459, 460, 463, 464, 467, 472, 476, 477, 478, 482, 486, 488, 496], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 64, 101, 500], "ret": 370, "retriev": [93, 101], "retstep": 210, "returnreturn_count": 478, "return_index": 478, "return_invers": 478, "reus": [148, 163, 429], "revers": [93, 98, 134, 139, 140, 141, 346, 358, 436, 466, 467, 481], "rewrit": 198, "rfft": [6, 10, 118, 121, 126, 127, 128, 129, 131, 132, 133], "rfft2": [6, 128], "rfftfreq": [6, 118], "rfftn": [6, 116, 119, 129, 130, 131], "right": [10, 28, 50, 68, 83, 93, 95, 140, 141, 166, 187, 193, 194, 195, 196, 201, 209, 224, 414, 425, 432, 440, 465, 467, 470, 474, 481], "right_shift": [6, 187], "rightmost": [162, 163, 209], "rint": [6, 35, 66, 136, 143, 437, 477], "roll": [6, 435], "rollaxi": [6, 434], "root": [6, 65, 166, 191, 424, 425, 439, 451, 452], "rot90": [6, 140, 141], "rotat": [140, 141, 436], "roughli": [101, 198], "round": [6, 23, 35, 66, 98, 121, 126, 136, 143, 144, 193, 235, 426, 433, 477, 496, 500], "round_": 6, "routin": [2, 489, 496], "row": [45, 49, 69, 70, 71, 85, 86, 93, 98, 100, 114, 140, 141, 158, 165, 167, 170, 201, 207, 304, 351, 420, 421, 438, 450, 454, 468, 470, 478, 479, 484, 485], "row_stack": [6, 485], "rowvar": 82, "rsqrt": [424, 451], "rtol": [17, 173], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 61, 64, 65, 76, 77, 79, 80, 83, 86, 87, 88, 96, 109, 110, 112, 144, 145, 146, 147, 156, 166, 187, 210, 212, 213, 214, 215, 216, 217, 222, 223, 225, 228, 229, 234, 235, 238, 245, 248, 250, 350, 361, 362, 369, 370, 424, 425, 426, 431, 432, 439, 443, 445, 446, 451, 452, 455, 456, 457, 461, 462, 467, 476, 477, 482], "run": [0, 4], "runtim": 4, "runtimewarn": [244, 246], "s1": [98, 101, 186, 341], "s10": 101, "s16": 101, "s2": [98, 101, 341], "s25": 101, "s3": [98, 341], "safe": [49, 64, 70, 71, 77, 98, 103, 165, 225, 304, 438, 454, 485], "safe_ev": 6, "said": 209, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 63, 68, 69, 70, 71, 76, 84, 85, 86, 93, 94, 95, 96, 97, 98, 100, 106, 107, 111, 113, 122, 123, 124, 129, 134, 136, 142, 144, 145, 146, 147, 148, 155, 158, 159, 160, 161, 162, 163, 165, 166, 169, 171, 172, 173, 179, 180, 181, 186, 187, 188, 189, 195, 199, 204, 216, 217, 218, 220, 221, 223, 227, 228, 229, 233, 234, 235, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 333, 346, 350, 352, 355, 359, 361, 362, 363, 367, 371, 393, 399, 415, 420, 422, 425, 426, 427, 432, 434, 435, 438, 440, 441, 448, 453, 454, 455, 456, 457, 459, 460, 463, 465, 469, 471, 473, 475, 476, 479, 482, 483, 485, 488, 504], "same_kind": [49, 64, 70, 71, 77, 98, 103, 165, 225, 304, 438, 454, 485], "sampl": [10, 118, 125, 127, 130, 132, 156, 158, 162, 210, 222, 367, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 460, 467, 470, 474, 489, 500], "sample_r": 132, "satisfi": [36, 41, 43, 45, 49, 98, 113, 197, 304, 359, 428, 441], "save": [6, 150, 504], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 61, 64, 75, 76, 77, 83, 89, 92, 94, 96, 97, 98, 101, 103, 104, 107, 113, 118, 132, 134, 142, 144, 145, 146, 147, 154, 155, 156, 158, 159, 160, 161, 162, 163, 166, 171, 173, 175, 182, 183, 186, 187, 188, 189, 206, 210, 216, 217, 218, 220, 221, 222, 224, 225, 228, 231, 234, 235, 238, 314, 319, 348, 350, 352, 359, 361, 362, 366, 367, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 394, 396, 397, 399, 402, 405, 407, 411, 413, 414, 415, 416, 417, 418, 419, 423, 426, 432, 440, 441, 456, 459, 463, 467, 476, 477, 481, 483, 486, 496], "scale": [10, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 156, 186, 204, 210, 222, 371, 378, 380, 382, 383, 384, 385, 393, 405, 410, 417], "scientif": 10, "scipi": 108, "scope": 4, "script": 4, "sctype2char": 6, "search": [104, 489, 500], "searchsort": [6, 95, 98, 162, 448, 496], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 61, 76, 83, 93, 96, 97, 101, 104, 107, 110, 117, 118, 119, 120, 123, 124, 127, 130, 132, 142, 144, 145, 146, 147, 158, 159, 160, 162, 163, 164, 165, 166, 171, 173, 186, 187, 188, 189, 216, 217, 218, 220, 221, 224, 225, 227, 228, 231, 233, 234, 235, 238, 352, 356, 361, 362, 426, 432, 436, 452, 456, 458, 463, 465, 476, 483], "section": [4, 39, 101, 119, 124, 129, 133, 496], "see": [3, 35, 101, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 148, 162, 198, 388, 437, 470, 471, 474, 475, 478, 496], "seed": [6, 98, 104, 319, 371], "seek": 150, "seldom": 142, "select": [6, 77, 113, 227, 233, 453, 459, 467, 489], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "self": [98, 101, 137, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 316, 371], "semant": 162, "sens": 209, "sep": [150, 153], "separ": [10, 98, 101, 103, 150, 153, 163, 239, 333, 430], "sequenc": [39, 44, 53, 54, 55, 69, 70, 71, 74, 78, 99, 100, 103, 104, 105, 106, 117, 119, 123, 124, 127, 128, 129, 131, 133, 154, 155, 156, 162, 163, 164, 165, 170, 185, 201, 210, 222, 237, 354, 355, 359, 395, 408, 427, 428, 431, 438, 450, 454, 463, 467, 484, 485, 487, 488], "sequenti": [78, 82, 108, 230, 236, 247], "seri": [10, 127, 387], "set": [10, 31, 32, 36, 49, 67, 81, 89, 90, 92, 95, 98, 101, 103, 105, 154, 162, 163, 167, 170, 200, 202, 203, 210, 227, 233, 240, 241, 249, 294, 304, 305, 316, 336, 354, 355, 363, 441, 443, 444, 457, 470, 474, 487, 488, 496], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 101], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 197, "sh": [98, 333], "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 144, 145, 146, 147, 151, 154, 155, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 192, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 325, 333, 337, 339, 346, 348, 349, 350, 352, 353, 354, 355, 358, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 380, 383, 388, 389, 394, 398, 399, 400, 401, 402, 403, 404, 406, 411, 412, 418, 420, 421, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 468, 469, 471, 473, 474, 475, 476, 477, 479, 482, 484, 485, 486, 487, 488, 489, 500], "share": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 468, 470, 474, 481, 487, 488], "shared_bin": 163, "shares_memori": 6, "shift": [10, 117, 119, 120, 124, 125, 187, 432, 434], "short": [477, 496], "shorter": [121, 127], "shorthand": [11, 12, 15, 58, 59, 60, 61, 96, 107, 144, 159, 160, 172, 187, 188, 189, 218, 220, 225, 235, 238, 349, 352, 360, 361, 362, 426, 432, 456, 476, 486], "should": [31, 32, 39, 49, 93, 95, 97, 98, 103, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 147, 150, 157, 162, 185, 198, 199, 225, 237, 240, 241, 244, 246, 304, 335, 388, 421, 429, 430, 440, 459, 463, 465, 479, 480, 496], "show": [9, 38, 101, 134, 166, 221, 231, 239, 242, 243, 244, 246, 249, 409], "show_config": 6, "shown": 4, "shuffl": 6, "side": [98, 158, 195, 335, 440], "sigma": [386, 393], "sign": [6, 10, 17, 76, 101, 173, 192, 205, 235, 349, 360, 363, 426, 444, 457, 477], "signal": [10, 118, 121, 126, 127, 129, 132, 480], "signatur": [224, 225], "signbit": [6, 443], "signific": 103, "signum": 443, "similar": [3, 40, 41, 98, 101, 156, 210, 222, 224, 309, 336, 359, 371, 399, 470, 471, 474, 475], "simpl": [4, 221, 500], "simpli": [91, 98, 150, 162, 163, 346], "sin": [0, 6, 26, 27, 46, 47, 79, 195, 231, 446, 461, 467], "sinc": [6, 98, 127, 193, 195, 338, 351], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 445, 446, 461, 462], "singl": [9, 10, 33, 63, 69, 98, 103, 104, 158, 201, 227, 233, 339, 363, 371, 390, 399, 400, 401, 402, 403, 404, 406, 412, 457, 467, 496], "singleton": [16, 21, 56, 111, 223, 229, 244, 245, 246, 248, 250, 425, 453, 455, 482], "singular": [197, 198, 200, 203, 207], "sinh": [6, 14, 25, 27, 47, 80, 445, 462], "size": [0, 6, 23, 31, 32, 36, 39, 56, 70, 71, 78, 81, 82, 85, 86, 90, 95, 98, 99, 101, 104, 113, 116, 118, 122, 132, 150, 156, 158, 164, 165, 202, 204, 207, 210, 222, 224, 227, 229, 233, 240, 241, 242, 243, 245, 247, 249, 319, 320, 336, 354, 359, 363, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 430, 434, 438, 450, 453, 454, 457, 463, 474, 480, 484, 485, 487], "skip": 93, "slice": [113, 240, 241, 244, 245, 246, 248, 250, 366, 367, 441, 460, 467, 474, 475, 496], "slogdet": [6, 192], "slower": 463, "slowest": [98, 317, 420, 429], "small": [17, 112, 173, 198, 203, 214, 216, 217, 239, 474], "smaller": [94, 98, 116, 117, 119, 122, 123, 124, 126, 128, 129, 130, 131, 133, 135, 198, 235, 327, 359, 426, 480], "smallest": [135, 168, 478], "smallest_norm": 135, "smat": 207, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 101, 107, 121, 126, 142, 162, 182, 210, 217, 223, 229, 231, 245, 248, 250, 409, 425, 455, 463, 464, 482], "softwar": 4, "solut": [198, 206, 430], "solv": [6, 198, 208, 209, 500], "some": [23, 101, 111, 113, 143, 171, 198, 359, 480, 486, 496], "sometim": [161, 496], "sometru": 6, "somewhat": 199, "sophist": 199, "sort": [6, 33, 39, 98, 99, 164, 207, 303, 327, 358, 440, 449, 450, 460, 466, 467, 478, 484, 489, 496, 500], "sort_complex": 6, "sorter": [98, 335, 440], "sought": 191, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 62, 63, 64, 67, 68, 69, 71, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 168, 170, 171, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 348, 351, 354, 355, 356, 357, 359, 363, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 427, 428, 429, 430, 431, 434, 435, 436, 440, 441, 442, 447, 448, 449, 450, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "space": [6, 23, 118, 120, 132, 150, 156, 158, 210, 222, 467, 504], "spars": [170, 231], "special": [2, 101, 108, 489, 500], "specif": [0, 4, 101, 151], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 63, 64, 70, 71, 75, 84, 85, 86, 89, 92, 93, 98, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 139, 142, 149, 150, 151, 152, 154, 155, 156, 158, 167, 194, 196, 202, 208, 209, 210, 211, 222, 223, 229, 230, 232, 242, 243, 245, 247, 248, 249, 250, 303, 312, 353, 354, 355, 358, 359, 363, 366, 367, 371, 384, 394, 412, 420, 421, 425, 428, 430, 434, 435, 436, 437, 441, 447, 454, 455, 457, 459, 460, 463, 465, 466, 467, 468, 478, 481, 482, 487, 488], "spectrum": [10, 120, 121, 125, 126], "speed": 103, "speedup": 104, "spell": 351, "split": [6, 39, 70, 71, 99, 100, 164, 165, 438, 454, 484, 485, 500], "spreadsheet": 143, "sqrt": [6, 10, 65, 98, 318, 331, 425, 439, 452], "squar": [6, 65, 166, 167, 190, 191, 193, 194, 195, 197, 198, 199, 205, 208, 209, 224, 248, 250, 375, 391, 424, 425, 439, 441, 451, 455, 471, 475, 481, 482], "squeez": [6, 98, 111, 496], "src": 77, "stabl": [33, 448], "stack": [6, 69, 70, 71, 100, 165, 192, 200, 203, 204, 205, 225, 226, 351, 438, 450, 460, 485], "stai": 68, "stand": 158, "standard": [98, 135, 144, 147, 229, 235, 245, 248, 250, 319, 340, 371, 386, 393, 400, 409, 410, 411, 412, 413, 426, 455, 482, 496, 500], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 371, 400], "standard_t": 6, "start": [2, 3, 23, 43, 45, 104, 118, 122, 132, 149, 156, 210, 222, 224, 430, 435, 470, 474], "start_tim": 0, "state": 371, "statist": [489, 500], "std": [6, 98, 229, 245, 248, 250, 482, 496], "stdev": [371, 412], "step": [4, 23, 104, 156, 161, 210, 222], "sticki": 101, "still": [56, 164, 484], "stop": [23, 156, 210, 222], "store": [136, 156, 179, 180, 210, 217, 222, 225, 356], "str": [42, 44, 70, 71, 101, 103, 104, 150, 153, 165, 211, 295, 428, 438, 454, 472, 485], "str_": 101, "straightforward": 170, "stride": [48, 49, 98, 304], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 472, 474, 481, 487, 488, 496], "string_repr": 104, "stringio": 211, "strongli": [4, 464], "struct": 101, "structur": [101, 211], "student": 413, "style": [49, 98, 304, 351, 420, 421, 479], "sub": [39, 70, 71, 93, 99, 101, 103, 164, 165, 209, 438, 450, 454, 465, 468, 484, 485], "subarrai": [101, 170, 478], "subclass": [41, 428], "subdivid": 101, "subdtyp": 101, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 106, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 155, 159, 160, 161, 166, 169, 172, 176, 177, 178, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 234, 235, 238, 304, 349, 350, 352, 355, 360, 361, 362, 364, 369, 370, 424, 426, 432, 433, 439, 443, 444, 445, 446, 451, 452, 456, 461, 462, 476, 477, 488], "subscript": [103, 104], "subset": [3, 158, 453, 500], "subtract": 6, "subtyp": 420, "succeed": 102, "success": [42, 373, 381, 390], "sugar": [91, 471, 475], "suggest": 93, "suit": 4, "suitabl": [34, 98, 346, 367, 430, 440, 460], "sum": [0, 3, 4, 6, 10, 15, 56, 84, 86, 89, 92, 93, 94, 97, 98, 103, 122, 162, 166, 171, 191, 198, 208, 216, 217, 223, 225, 242, 243, 249, 311, 345, 373, 388, 390, 425, 463, 465, 467, 496, 500], "sum_": 10, "sum_along_diagon": 465, "sum_of_weight": 56, "summari": 489, "summat": [97, 103, 104, 171, 209, 225, 356, 463], "suppli": [121, 126, 201, 371, 400], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 72, 73, 75, 76, 78, 79, 80, 82, 87, 88, 96, 98, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 166, 167, 172, 176, 177, 178, 187, 188, 189, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 228, 229, 230, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 304, 336, 349, 350, 352, 354, 355, 357, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 426, 428, 429, 432, 439, 443, 444, 445, 448, 451, 452, 455, 456, 457, 461, 462, 476, 477, 482, 487, 488, 504], "sure": 428, "surnam": 101, "surpris": [122, 123, 124], "svd": [6, 191, 197, 200, 203], "swap": [101, 117, 120, 458], "swapax": [6, 98, 237, 496], "swapped_cod": 101, "swapped_dt": 101, "sy": 101, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "sycl_context": 98, "sycl_devic": 98, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 304, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 468, 470, 474, 481, 487, 488], "symmetr": [121, 127, 129, 130, 190, 193, 194, 195, 196, 200, 203, 207], "symmetri": [10, 116, 121, 126, 127, 130], "syntact": [91, 471, 475], "syntax": 496, "sys_is_l": 101, "system": [3, 4, 206], "t": [10, 70, 71, 82, 98, 101, 121, 190, 193, 195, 198, 346, 351, 413, 467], "t1": 504, "tabl": [2, 9, 489], "tack": 101, "take": [6, 69, 98, 113, 185, 224, 359, 367, 429, 440, 441, 460, 478, 480, 496, 504], "take_along_axi": [6, 31, 32, 33, 67, 367, 459], "taken": [56, 93, 94, 102, 104, 121, 127, 128, 129, 130, 131, 133, 161, 162, 225, 248, 250, 441, 455, 465, 468, 470, 474, 482, 483], "tall": 134, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 79, 445, 462], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 445, 446, 461, 462], "tanh": [6, 14, 25, 30, 52, 80, 446, 461], "target": [49, 64, 98, 304, 366], "target_devic": 98, "tau": 204, "tbb": 4, "tempfil": 150, "temporari": [150, 504], "temporaryfil": 150, "ten": 381, "tensor": [44, 98, 103, 104, 148, 208, 209, 240, 241, 244, 246, 247, 365, 463], "tensordot": [6, 97, 103, 171, 208, 209, 225, 356], "tensorinv": [6, 209], "tensorsolv": [6, 208], "term": [10, 15, 96, 104, 116, 117, 119, 122, 123, 124, 127, 130, 238, 456, 476], "test": [0, 2, 16, 17, 21, 107, 159, 160, 174, 176, 177, 178, 179, 180, 188, 189, 247, 351, 352, 373, 496, 500], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [149, 150, 152, 153, 211], "th": [86, 89, 92, 94, 98, 102, 114, 158, 170, 230, 346, 353, 358, 441, 466, 469, 471, 473, 475], "than": [36, 85, 86, 98, 99, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 140, 141, 144, 151, 159, 160, 162, 163, 165, 187, 188, 189, 198, 200, 203, 204, 242, 243, 247, 249, 327, 351, 359, 363, 430, 432, 441, 443, 453, 454, 457, 463, 465, 477, 480, 496, 504], "thei": [17, 38, 101, 173, 195, 198, 438, 440, 463, 467, 470, 474, 480, 481, 485, 496], "them": [69, 496], "theor": 193, "theoret": 104, "therefor": [116, 130, 151, 194, 196, 430], "theta": 467, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 68, 70, 71, 75, 81, 84, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 140, 141, 142, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 175, 182, 185, 194, 196, 198, 201, 202, 205, 210, 211, 214, 216, 217, 222, 223, 224, 225, 227, 233, 235, 237, 239, 240, 241, 244, 246, 247, 249, 304, 309, 314, 317, 327, 333, 346, 351, 359, 363, 366, 367, 404, 406, 420, 425, 426, 428, 429, 430, 435, 436, 438, 454, 457, 459, 460, 464, 467, 471, 475, 478, 480, 481, 485, 486], "thing": 459, "third": [69, 70, 71, 99, 100, 117, 165, 438, 450, 454, 485], "those": [10, 68, 199, 367], "though": 122, "thousand": 381, "three": [53, 54, 55, 111, 199, 224, 371, 407, 463, 478], "threshold": 200, "through": [41, 101, 163, 185, 193, 195, 198, 224, 428, 496], "throw": 388, "thu": [10, 121, 127, 129, 464], "tile": [6, 427, 500], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 61, 76, 94, 96, 97, 107, 117, 119, 121, 123, 124, 126, 128, 129, 131, 133, 142, 144, 145, 146, 147, 159, 160, 161, 166, 171, 173, 178, 186, 187, 188, 189, 198, 216, 217, 218, 220, 221, 228, 234, 235, 238, 350, 352, 361, 362, 373, 388, 426, 432, 436, 456, 460, 463, 464, 476, 478, 483], "time_dpnp": 0, "time_numpi": 0, "timedelta": 101, "timeit": 103, "timestep": 118, "tini": 135, "titl": 101, "tm": 147, "to_begin": 102, "to_devic": 98, "to_end": 102, "tobyt": 6, "todo": 391, "tofil": [6, 150], "togeth": [17, 70, 71, 101, 122, 173, 185, 454, 486], "tol": [200, 389, 423], "toler": [17, 37, 173, 423], "tolist": 6, "too": [4, 117, 119, 123, 124, 128, 129, 131, 133, 486], "toolkit": 3, "tostr": 6, "total": [6, 81, 85, 98, 324, 430, 447, 455, 482], "toward": [35, 66, 136, 143, 144, 162, 163, 235, 350, 426, 433, 436, 437, 477], "trace": [6, 89, 92, 93, 98, 103, 496], "traceback": [22, 453], "trail": 472, "transfer": 98, "transform": [104, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 489], "transpos": [6, 34, 98, 103, 190, 195, 226, 237, 252, 358, 496, 500], "trapezoid": [86, 457], "trapz": 6, "treat": [17, 121, 127, 129, 150, 158, 173, 194, 196, 198, 201, 211, 242, 243, 247, 249, 363, 367, 440, 460, 464, 478, 480, 496], "tri": 6, "trial": 373, "triangl": [89, 166, 224, 425, 468, 469, 470, 471, 473, 474, 475], "triangular": [6, 190, 194, 196, 204, 224, 470, 471, 474, 475], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 445, 446, 461, 462, 500], "tril": [6, 89, 224, 468, 470, 471, 474], "tril_indic": [6, 224, 471, 474], "tril_indices_from": [6, 475], "trili": 471, "trili1": 471, "trim": [117, 119, 123, 124, 128, 129, 131, 133, 472], "trim_zero": 6, "triu": [6, 89, 224, 468, 470, 474, 475], "triu_indic": [6, 224, 470, 475], "triu_indices_from": [6, 471], "triui": 475, "triuim1": 475, "trivial": [193, 460], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 64, 65, 66, 72, 73, 75, 76, 77, 79, 80, 81, 82, 86, 87, 88, 95, 96, 98, 101, 103, 104, 107, 109, 110, 111, 112, 113, 115, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 156, 159, 160, 161, 162, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 200, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 233, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 256, 299, 300, 304, 309, 321, 322, 323, 328, 340, 342, 347, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 367, 369, 370, 376, 424, 425, 426, 428, 429, 432, 433, 439, 441, 443, 444, 445, 446, 451, 452, 455, 456, 457, 460, 461, 462, 463, 467, 476, 477, 478, 481, 482, 486], "true_divid": [6, 96], "trunc": [6, 35, 66, 136, 143, 433, 437], "truncat": [35, 66, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 143, 409, 433, 437, 477], "trust": [240, 241], "truth": [58, 59, 60, 61, 107, 159, 160, 172, 188, 189, 218, 219, 220, 221, 352, 496, 500], "try": [4, 42], "tukei": 10, "tup": [69, 100, 165, 438, 485], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 63, 75, 81, 84, 89, 90, 91, 92, 98, 101, 104, 111, 120, 125, 139, 148, 151, 154, 155, 156, 158, 162, 163, 170, 175, 182, 185, 186, 202, 204, 209, 210, 222, 223, 224, 225, 227, 229, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 336, 346, 351, 353, 358, 363, 421, 425, 427, 429, 430, 434, 442, 453, 455, 457, 464, 466, 470, 471, 474, 475, 479, 481, 482, 496], "turn": 69, "twister": 371, "two": [10, 17, 37, 53, 54, 58, 59, 60, 61, 74, 78, 83, 92, 93, 94, 97, 98, 101, 103, 104, 111, 116, 117, 119, 122, 123, 124, 127, 128, 129, 131, 133, 145, 146, 158, 171, 172, 173, 186, 194, 198, 201, 206, 218, 220, 221, 225, 226, 227, 228, 233, 234, 237, 244, 246, 327, 343, 356, 371, 400, 433, 436, 437, 441, 458, 463, 465, 470, 471, 474, 475, 483], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 313, 317, 325, 333, 337, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 500], "type_nam": 0, "typeerror": [56, 77, 98, 148, 336], "typenam": 6, "typestr": 101, "typic": [17, 121, 173, 440, 496], "u": [101, 190, 194, 196, 207, 224, 247, 249, 478], "u1": [101, 149, 150], "u16": 101, "u4": 64, "u8": 101, "ufunc": [2, 489, 496], "uint64": 101, "uint8": [101, 149, 150], "uk": 10, "un": 101, "unari": 496, "unchang": 133, "undefin": [20, 98, 327], "underli": [58, 60, 61, 429], "undo": [10, 124], "undocu": 101, "unexpect": [247, 249], "unicod": 101, "uniform": [6, 101, 158, 162, 163, 222, 371, 398, 401, 403, 404, 406], "uniformli": [222, 371, 415], "uniniti": [36, 105, 106, 154, 354, 487], "union1d": 6, "uniqu": [6, 56, 57, 84, 95, 101, 223, 229, 237, 245, 248, 250, 425, 427, 455, 482], "unique_count": 478, "unique_indic": 478, "unique_invers": 478, "unit": [98, 118, 132, 185, 193, 199, 205, 341], "unitari": [10, 158, 204, 207], "uniti": 162, "univ": 10, "univers": [2, 489, 496], "unless": [16, 21, 49, 85, 86, 98, 103, 162, 193, 200, 202, 222, 242, 243, 247, 249, 304, 363, 457, 478], "unlik": [33, 98, 132, 333, 336, 448], "unmodifi": 163, "unpackbit": 6, "unravel": 479, "unravel_index": [6, 31, 32, 421], "unraveled_coord": 479, "unsaf": [49, 64, 70, 71, 77, 98, 103, 165, 225, 304, 438, 454, 485], "unscal": 10, "unsign": [101, 363, 457], "unspecifi": 429, "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 76, 79, 80, 87, 88, 96, 109, 110, 112, 142, 143, 144, 145, 146, 147, 148, 161, 166, 172, 187, 213, 214, 215, 216, 217, 228, 234, 235, 236, 238, 349, 350, 360, 361, 362, 364, 369, 370, 424, 426, 432, 433, 439, 443, 444, 445, 446, 456, 461, 462, 476, 477], "until": [104, 434, 435], "unwrap": [6, 87, 369], "up": [4, 10, 101, 103, 141, 460, 471, 478], "updat": 4, "uplo": [194, 196], "upon": [98, 341], "upper": [89, 114, 162, 163, 190, 194, 196, 204, 224, 468, 470, 471, 473, 474, 475], "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 64, 68, 70, 71, 75, 83, 85, 86, 89, 90, 92, 93, 96, 98, 101, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 170, 171, 172, 185, 187, 188, 189, 190, 191, 194, 195, 196, 198, 200, 201, 202, 203, 210, 211, 217, 218, 220, 222, 224, 225, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 258, 304, 309, 317, 336, 349, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 367, 371, 374, 376, 377, 387, 392, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 412, 415, 420, 423, 426, 427, 428, 429, 430, 432, 434, 440, 441, 443, 449, 455, 456, 457, 459, 460, 463, 464, 465, 467, 468, 470, 471, 474, 475, 476, 478, 479, 481, 482, 486, 487, 488, 496, 504], "usabl": 142, "usag": [3, 4, 118, 132], "use_getitem": 101, "use_setitem": 101, "user": [101, 239], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 453, 468, 470, 474, 481, 487, 488], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 348, 349, 350, 351, 352, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 156, 167, 170, 210, 211, 222, 224, 232, 309, 353, 354, 355, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 468, 470, 474, 481, 487, 488], "usual": [90, 98, 101, 225, 336], "util": 489, "v": [74, 89, 92, 98, 101, 193, 194, 335, 366, 440], "v0": 6, "v1": 6, "v10": 101, "v9": 6, "val": [98, 134, 137, 294, 329, 359], "valid": [78, 111, 224, 458, 470, 471, 474, 475], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 94, 95, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 121, 122, 127, 129, 130, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 175, 176, 177, 178, 181, 182, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 254, 255, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 291, 293, 294, 296, 297, 298, 301, 302, 304, 306, 309, 314, 316, 327, 329, 336, 349, 350, 351, 352, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 381, 398, 399, 415, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 437, 439, 440, 441, 443, 444, 445, 448, 451, 452, 455, 456, 457, 459, 460, 461, 462, 465, 467, 470, 474, 476, 477, 478, 480, 482, 486, 487, 488, 496, 500], "value2": 101, "valueerror": [22, 36, 41, 42, 148, 240, 241, 429, 450, 453], "vander": 6, "vandermond": 481, "var": [6, 98, 229, 245, 248, 250, 455, 496], "vararg": 158, "vari": [10, 16, 20, 21, 93, 104, 117, 119, 121, 122, 123, 124, 126, 127, 130, 133, 151, 170, 191, 193, 194, 198, 202, 239, 245, 248, 250, 423], "variabl": [82, 198, 206], "varianc": [98, 229, 245, 248, 250, 347, 455, 482, 500], "variou": 504, "vdot": [6, 97, 225], "vector": [83, 103, 151, 170, 171, 185, 191, 200, 201, 202, 207, 225, 231, 356, 483, 500], "vendor": 4, "veri": [3, 10, 17, 173, 231, 239], "verif": 0, "verifi": 190, "version": [4, 81, 98, 101, 138, 316, 351, 421, 479], "vertic": [69, 70, 71, 93, 100, 134, 139, 140, 165, 436, 438, 450, 454, 484, 485], "vetterlin": 10, "vh": 207, "via": 127, "view": [6, 39, 53, 54, 55, 62, 89, 93, 98, 99, 111, 117, 119, 123, 124, 128, 129, 131, 133, 139, 140, 141, 164, 231, 237, 252, 333, 346, 358, 367, 421, 429, 436, 450, 453, 458, 466, 479, 484], "violat": 77, "void": 101, "void640": 101, "von": 416, "vonmis": 6, "vsplit": [6, 70, 71, 450], "vstack": [6, 69, 70, 71, 100, 165, 198, 438, 450, 454], "w": [10, 56, 193, 194, 195, 196, 199, 428], "wa": [10, 84, 101, 201, 223, 244, 246, 248, 250, 371, 412, 425, 455, 482], "wai": [3, 4, 10, 98, 104, 116, 122, 123, 124, 129, 150, 327, 463], "wald": 6, "walk": 101, "want": [4, 460], "warn": [101, 240, 241, 389, 430], "we": [75, 90, 93, 104, 134, 198, 224, 367, 460, 467], "weibul": [6, 419], "weight": [56, 57, 82, 162, 163, 229, 245, 457], "well": [101, 103, 150, 162, 163, 363, 373, 390, 409], "were": [70, 71, 151, 371, 400, 454, 480], "what": [10, 49, 64, 70, 71, 77, 98, 101, 103, 107, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 165, 174, 225, 304, 373, 390, 438, 454, 485, 496], "when": [10, 22, 23, 36, 37, 40, 41, 43, 45, 48, 49, 56, 75, 77, 95, 98, 101, 103, 116, 127, 129, 130, 145, 146, 156, 161, 193, 202, 204, 210, 217, 222, 224, 225, 235, 242, 243, 244, 246, 247, 249, 304, 426, 430, 433, 435, 437, 441, 459, 463, 467, 478, 486, 504], "whenev": [111, 358, 458, 466], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 77, 79, 80, 84, 87, 88, 89, 90, 92, 94, 95, 96, 98, 99, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 118, 121, 127, 128, 129, 132, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 187, 188, 189, 190, 198, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 238, 244, 245, 246, 247, 248, 249, 250, 299, 300, 304, 309, 321, 322, 323, 328, 335, 340, 342, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 369, 370, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 412, 415, 424, 425, 426, 430, 432, 433, 435, 439, 440, 441, 443, 444, 445, 446, 450, 451, 452, 455, 456, 457, 461, 462, 465, 466, 468, 470, 474, 476, 477, 480, 481, 482, 484, 487, 488], "wherev": 77, "whether": [16, 17, 21, 37, 84, 95, 101, 148, 173, 174, 190, 204, 210, 239, 247, 249, 421, 429, 444, 478, 479], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 62, 70, 71, 75, 77, 81, 84, 85, 86, 89, 90, 92, 93, 94, 95, 97, 98, 101, 103, 104, 105, 106, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 165, 167, 170, 176, 177, 178, 179, 180, 190, 193, 200, 202, 209, 211, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 304, 309, 351, 353, 354, 355, 358, 363, 366, 371, 393, 398, 399, 400, 401, 402, 403, 404, 406, 412, 415, 421, 425, 427, 430, 434, 441, 447, 448, 450, 453, 454, 455, 457, 459, 465, 466, 467, 468, 469, 470, 473, 474, 477, 480, 481, 482, 486, 487, 488, 496, 504], "whichev": 171, "while": [10, 131, 133, 162, 163, 229, 245, 248, 250, 351, 359, 363, 434, 455, 457, 468, 482], "whitespac": [150, 153], "who": 6, "whole": [117, 119, 123, 124, 128, 129, 131, 133, 470, 474], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 93, 101, 113, 114, 134, 191, 194, 195, 196, 208, 224, 226, 237, 434, 471, 475, 479], "why": 127, "wide": 134, "width": [101, 162, 163], "wild": [373, 390], "window": [4, 118, 132], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 69, 70, 71, 72, 73, 76, 79, 80, 84, 96, 98, 100, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 159, 160, 161, 164, 165, 166, 169, 172, 173, 176, 177, 178, 179, 180, 187, 188, 189, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 228, 233, 234, 235, 236, 238, 244, 246, 247, 308, 349, 350, 352, 360, 361, 362, 364, 422, 424, 426, 432, 433, 437, 438, 439, 443, 444, 445, 446, 450, 451, 452, 454, 456, 461, 462, 476, 477, 484, 485, 496, 500, 504], "within": [17, 23, 37, 49, 98, 103, 121, 122, 123, 124, 126, 127, 129, 162, 163, 173, 304, 366, 371, 415], "without": [93, 98, 105, 134, 346, 420, 429, 430, 496], "won": 101, "word": [122, 123, 124, 127, 129, 143, 195, 371, 415], "work": [4, 35, 48, 460, 496], "world": [101, 373, 390], "would": [33, 70, 71, 98, 101, 151, 170, 201, 224, 225, 327, 358, 371, 421, 448, 450, 454, 460, 466, 480], "wrap": [87, 98, 134, 329, 344, 366, 369, 421, 440, 459, 460, 480], "wrapper": 98, "writabl": 428, "write": [89, 93, 98, 134, 150, 317, 429], "writeabl": 428, "written": [4, 81, 84, 134, 150, 223, 425, 486], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 62, 63, 65, 66, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 87, 88, 89, 92, 94, 95, 98, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 123, 124, 125, 131, 132, 133, 136, 137, 138, 143, 149, 150, 151, 152, 154, 155, 156, 158, 164, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 195, 198, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 231, 232, 236, 237, 239, 304, 309, 318, 319, 325, 331, 336, 337, 349, 351, 353, 354, 355, 360, 363, 364, 365, 369, 370, 389, 395, 420, 422, 424, 425, 427, 428, 433, 434, 435, 437, 439, 441, 443, 444, 445, 446, 450, 451, 452, 453, 458, 459, 461, 462, 467, 468, 477, 481, 484, 486, 487, 488], "x0": [43, 45, 75, 92, 355, 481, 488], "x00": 150, "x01": [149, 150], "x02": [149, 150], "x03": [149, 150], "x04": [149, 150], "x05": 149, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 61, 67, 76, 78, 96, 98, 107, 142, 144, 145, 146, 147, 159, 160, 161, 166, 185, 187, 188, 189, 216, 217, 218, 219, 220, 221, 225, 228, 230, 231, 234, 235, 236, 238, 304, 349, 350, 352, 357, 360, 361, 362, 368, 408, 426, 432, 434, 456, 476], "x1_i": [15, 29, 51, 58, 60, 61, 76, 96, 107, 142, 144, 147, 159, 160, 166, 187, 188, 189, 216, 217, 218, 220, 221, 235, 238, 352, 361, 362, 426, 432, 456, 476], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 61, 76, 78, 96, 107, 142, 144, 145, 146, 147, 159, 160, 161, 166, 185, 187, 188, 189, 216, 217, 218, 219, 220, 221, 225, 228, 231, 234, 235, 238, 349, 350, 352, 360, 361, 362, 426, 432, 434, 451, 456, 476], "x2_i": [15, 29, 51, 58, 60, 61, 76, 96, 107, 142, 144, 147, 159, 160, 166, 187, 188, 189, 216, 217, 218, 220, 221, 235, 238, 352, 361, 362, 426, 432, 456, 476], "x3": [16, 21, 142], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 65, 66, 72, 73, 79, 80, 109, 110, 112, 143, 169, 172, 212, 213, 214, 215, 219, 349, 360, 364, 422, 424, 433, 437, 439, 443, 444, 445, 446, 451, 452, 461, 462, 477], "xi": [215, 231], "xn": [185, 231], "xor": [58, 59, 60, 61, 172, 218, 219, 220, 221], "xv": 231, "xx": 231, "xy": 231, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 62, 75, 82, 83, 92, 98, 101, 102, 105, 106, 111, 114, 118, 132, 149, 150, 151, 152, 154, 155, 156, 158, 167, 179, 180, 191, 198, 210, 211, 222, 231, 232, 236, 239, 309, 325, 333, 336, 353, 354, 355, 428, 467, 468, 481, 486, 487, 488], "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 247, 249, 351, 371, 486, 496], "you": [4, 93, 121, 126, 127, 224, 459, 460, 496, 504], "your": [4, 93, 504], "yv": 231, "yy": 231, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 75, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 156, 167, 210, 211, 222, 231, 232, 353, 354, 355, 381, 468, 481, 487, 488], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 66, 81, 84, 90, 94, 98, 105, 106, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 143, 150, 154, 155, 167, 169, 174, 175, 179, 180, 181, 182, 187, 193, 194, 196, 198, 199, 200, 203, 207, 223, 224, 227, 229, 233, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 325, 326, 336, 337, 341, 348, 351, 354, 355, 363, 371, 373, 401, 403, 404, 406, 422, 423, 425, 430, 433, 437, 443, 448, 455, 457, 463, 468, 469, 472, 473, 477, 482, 486, 488], "zeros_lik": [6, 36, 88, 106, 155, 355, 370, 487], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 253, "__add__": 254, "__and__": 255, "__bool__": 256, "__complex__": 257, "__copy__": 258, "__eq__": 259, "__float__": 260, "__floordiv__": 261, "__ge__": 262, "__getitem__": 263, "__gt__": 264, "__iadd__": 265, "__iand__": 266, "__ifloordiv__": 267, "__ilshift__": 268, "__imod__": 269, "__imul__": 270, "__int__": 271, "__invert__": 272, "__ior__": 273, "__ipow__": 274, "__irshift__": 275, "__isub__": 276, "__itruediv__": 277, "__ixor__": 278, "__le__": 279, "__len__": 280, "__lshift__": 281, "__lt__": 282, "__matmul__": 283, "__mod__": 284, "__mul__": 285, "__ne__": 286, "__neg__": 287, "__new__": 288, "__or__": 289, "__pos__": 290, "__pow__": 291, "__repr__": 292, "__rshift__": 293, "__setitem__": 294, "__str__": 295, "__sub__": 296, "__truediv__": 297, "__xor__": 298, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 493, "add": 15, "algebra": [6, 491], "all": [16, 299], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 300], "api": [1, 489], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 301], "argmin": [32, 302], "argsort": [33, 303], "argwher": 34, "arithmet": [494, 496, 498], "around": 35, "arrai": [6, 7, 9, 36, 490, 492, 493, 496], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 304], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 496, "avail": [9, 504], "averag": [56, 503], "backend": 1, "background": 10, "basic": [493, 498], "beta": 372, "binari": 5, "bincount": 57, "binomi": 373, "bit": [5, 504], "bitwise_and": 58, "bitwise_not": 59, "bitwise_or": 60, "bitwise_xor": 61, "broadcast_arrai": 62, "broadcast_to": 63, "build": [4, 7], "byte": 374, "c": 1, "calcul": 496, "can_cast": 64, "cbrt": 65, "ceil": 66, "chang": 493, "channel": 4, "chisquar": 375, "choic": 376, "choleski": 190, "choos": [67, 305], "class": 7, "clip": [68, 306], "co": 79, "column_stack": 69, "comparison": [6, 492, 496, 504], "complex": 494, "concat": 70, "concaten": 71, "cond": 191, "conda": 4, "conj": [72, 307], "conjug": [73, 308], "construct": 496, "control": 0, "convers": 496, "convolv": 74, "copi": [75, 309], "copysign": 76, "copyto": 77, "correl": [78, 503], "cosh": 80, "count": 501, "count_nonzero": 81, "cov": 82, "creat": 8, "creation": 7, "cross": 83, "cumlogsumexp": 84, "cumprod": [85, 310], "cumsum": [86, 311], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 490, 496, 499], "decomposit": 491, "deg2rad": 87, "degre": 88, "det": 192, "detail": 10, "develop": 2, "devic": 4, "diag": 89, "diag_indic": 90, "diag_indices_from": 91, "diagflat": 92, "diagon": [93, 312], "diff": 94, "differ": 494, "digit": 95, "dimens": [10, 493], "dimension": [6, 496], "dirichlet": 377, "discret": 6, "distribut": 499, "divid": 96, "dot": 97, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 499], "dpnp_arrai": 98, "driver": 4, "dsplit": 99, "dstack": 100, "dtype": [101, 313], "ediff1d": 102, "eig": 193, "eigenvalu": 491, "eigh": 194, "eigval": 195, "eigvalsh": 196, "einsum": 103, "einsum_path": 104, "element": [5, 493], "empti": 105, "empty_lik": 106, "equal": 107, "equat": 491, "erf": 108, "error": 502, "exampl": [0, 4], "exist": 7, "exp": 109, "exp2": 110, "expand_dim": 111, "expm1": 112, "expon": 494, "exponenti": 378, "extens": 2, "extract": 113, "extrema": 494, "ey": 114, "f": 379, "fab": 115, "fft": [10, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "fft2": 117, "fftfreq": 118, "fftn": 119, "fftshift": 120, "fill": 314, "fill_diagon": 134, "find": 494, "finfo": 135, "fix": 136, "flag": 315, "flat": 316, "flatit": 137, "flatnonzero": 138, "flatten": 317, "flip": 139, "fliplr": 140, "flipud": 141, "float": [494, 504], "float_pow": 142, "floor": 143, "floor_divid": 144, "fmax": 145, "fmin": 146, "fmod": 147, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 148, "frombuff": 149, "fromfil": 150, "fromfunct": 151, "fromit": 152, "fromstr": 153, "full": 154, "full_lik": 155, "function": [10, 492, 494, 502, 503, 504], "gamma": 380, "gener": [490, 499], "geometr": 381, "geomspac": 156, "get_includ": 157, "gradient": 158, "greater": 159, "greater_equ": 160, "guid": 4, "gumbel": 382, "handl": 494, "heavisid": 161, "helper": 10, "hermitian": 10, "hfft": 121, "higher": 10, "histogram": [162, 503], "histogram_bin_edg": 163, "hsplit": 164, "hstack": 165, "hyperbol": 494, "hypergeometr": 383, "hypot": 166, "ident": 167, "ifft": 122, "ifft2": 123, "ifftn": 124, "ifftshift": 125, "ihfft": 126, "iinfo": 168, "imag": [169, 318], "implement": 10, "index": [490, 496], "indic": 170, "infin": 492, "inform": [2, 8, 10], "inner": 171, "insert": 490, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 197, "invert": 172, "irfft": 127, "irfft2": 128, "irfftn": 129, "isclos": 173, "iscomplex": 174, "iscomplexobj": 175, "isfinit": 176, "isinf": 177, "isnan": 178, "isneginf": 179, "isposinf": 180, "isreal": 181, "isrealobj": 182, "isscalar": 183, "issubdtyp": 184, "item": [319, 496], "items": 320, "iter": 490, "ix_": 185, "join": 493, "kind": 493, "kron": 186, "laplac": 384, "layout": 496, "left_shift": 187, "less": 188, "less_equ": 189, "level": 6, "librari": 0, "like": [490, 493], "linalg": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "linear": [6, 491], "linspac": 210, "loadtxt": 211, "log": 212, "log10": 213, "log1p": 214, "log2": 215, "logaddexp": 216, "logaddexp2": 217, "logarithm": 494, "logic": 492, "logical_and": 218, "logical_not": 219, "logical_or": 220, "logical_xor": 221, "logist": 385, "lognorm": 386, "logseri": 387, "logspac": 222, "logsumexp": 223, "lstsq": 198, "manipul": [493, 496], "mask_indic": 224, "math": 504, "mathemat": 494, "matmul": 225, "matric": 7, "matrix": [7, 491, 496], "matrix_pow": 199, "matrix_rank": 200, "matrix_transpos": 226, "max": [227, 321], "maximum": 228, "mean": [229, 322], "median": 230, "memori": 496, "meshgrid": 231, "method": 496, "mgrid": 232, "min": [233, 323], "minimum": 234, "miscellan": [8, 494, 495], "mod": 235, "modf": 236, "modul": [6, 498], "moveaxi": 237, "multi": [6, 496], "multi_dot": 201, "multinomi": 388, "multipl": 496, "multipli": 238, "multivariate_norm": 389, "nan": 492, "nan_to_num": 239, "nanargmax": 240, "nanargmin": 241, "nancumprod": 242, "nancumsum": 243, "nanmax": 244, "nanmean": 245, "nanmin": 246, "nanprod": 247, "nanstd": 248, "nansum": 249, "nanvar": 250, "nbyte": 324, "ndarrai": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 496], "ndim": [325, 348], "neg": 349, "negative_binomi": 390, "nextaft": 350, "noncentral_chisquar": 391, "noncentral_f": 392, "nonzero": [326, 351], "norm": [202, 491], "normal": [10, 393], "not_equ": 352, "number": [491, 493, 494], "numer": 7, "numpi": [2, 6], "ogrid": 353, "ones": 354, "ones_lik": 355, "oper": [5, 490, 492, 493, 494, 496, 504], "order": 503, "other": [491, 494, 496], "outer": 356, "output": 5, "over": 490, "overview": 3, "pack": 5, "packag": [4, 498], "pad": 497, "parallel": [0, 2], "pareto": 394, "partit": [327, 357], "permut": [395, 499], "permute_dim": 358, "pinv": 203, "place": 359, "point": 494, "poisson": 396, "poly1d": 498, "polynomi": 498, "polyutil": 498, "posit": 360, "pow": 361, "power": [362, 397], "prod": [328, 363], "product": [491, 494], "proj": 364, "ptp": 365, "put": [329, 366], "put_along_axi": 367, "putmask": 368, "python": 4, "qr": 204, "quick": 4, "r": 4, "rad2deg": 369, "radian": 370, "rand": 398, "randint": 399, "randn": 400, "random": [6, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 499], "random_integ": 402, "random_sampl": 403, "randomst": 371, "ranf": 404, "rang": 7, "ration": 494, "ravel": [330, 420], "ravel_multi_index": 421, "rayleigh": 405, "real": [10, 331, 422], "real_if_clos": 423, "rearrang": 493, "reciproc": 424, "reduce_hypot": 425, "refer": [1, 489], "remaind": 426, "remov": 493, "repeat": [332, 427], "requir": 428, "reshap": [333, 429], "resiz": 430, "result_typ": 431, "rfft": 130, "rfft2": 131, "rfftfreq": 132, "rfftn": 133, "right_shift": 432, "rint": 433, "roll": 434, "rollaxi": 435, "rot90": 436, "round": [334, 437, 494], "routin": [7, 8, 10, 490, 493, 494, 495, 500], "row_stack": 438, "rsqrt": 439, "sampl": [6, 406, 499], "scikit": 4, "search": 501, "searchsort": [335, 440], "seed": 407, "select": [441, 496], "shape": [7, 336, 442, 493, 496], "shuffl": 408, "sign": 443, "signbit": 444, "simpl": 499, "sin": 445, "sinh": 446, "size": [337, 447], "slogdet": 205, "solv": [206, 491], "sort": [338, 448, 501], "sort_complex": 449, "special": [494, 496, 502], "split": [450, 493], "sqrt": 451, "squar": 452, "squeez": [339, 453], "stack": 454, "standard": 10, "standard_cauchi": 409, "standard_exponenti": 410, "standard_gamma": 411, "standard_norm": 412, "standard_t": 413, "start": 4, "statist": 503, "std": [340, 455], "stride": 341, "subtract": 456, "sum": [342, 457, 494], "summari": 6, "svd": 207, "swapax": [343, 458], "sycl": 4, "t": 252, "tabl": 6, "take": [344, 459], "take_along_axi": 460, "tan": 461, "tanh": 462, "target": 4, "tensordot": 463, "tensorinv": 208, "tensorsolv": 209, "test": [4, 8, 492], "tile": [464, 493], "trace": [345, 465], "transform": [6, 10], "transpos": [346, 466, 493], "trapezoid": 467, "tri": 468, "triangular": 414, "trigonometr": [494, 504], "tril": 469, "tril_indic": 470, "tril_indices_from": 471, "trim_zero": 472, "triu": 473, "triu_indic": 474, "triu_indices_from": 475, "true_divid": 476, "trunc": 477, "truth": 492, "twiddl": 504, "type": [8, 9, 492, 496], "ufunc": 504, "uniform": 415, "uniqu": 478, "univers": 504, "unravel_index": 479, "unwrap": 480, "util": 495, "valu": [7, 492], "vander": 481, "var": [347, 482], "varianc": 503, "vdot": 483, "vector": 491, "vonmis": 416, "vsplit": 484, "vstack": 485, "wald": 417, "weibul": 418, "where": 486, "wise": 5, "zero": 487, "zeros_lik": 488, "zipf": 419}})