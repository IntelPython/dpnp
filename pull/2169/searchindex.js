Search.setIndex({"alltitles": {"API Reference": [[533, null]], "Adding and removing elements": [[537, "adding-and-removing-elements"]], "Arithmetic": [[541, "arithmetic"]], "Arithmetic operations": [[538, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[540, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array attributes": [[540, "array-attributes"]], "Array conversion": [[540, "array-conversion"]], "Array creation routines": [[7, null]], "Array manipulation routines": [[537, null]], "Array methods": [[540, "array-methods"]], "Array type testing": [[536, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[547, "available-ufuncs"]], "Averages and variances": [[546, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[537, "basic-operations"]], "Basics": [[541, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[547, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[540, "calculation"]], "Changing array shape": [[537, "changing-array-shape"]], "Changing kind of array": [[537, "changing-kind-of-array"]], "Changing number of dimensions": [[537, "changing-number-of-dimensions"]], "Comparison": [[536, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[547, "comparison-functions"]], "Constructing arrays": [[540, "constructing-arrays"]], "Correlations": [[546, "correlations"]], "Counting": [[544, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[540, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[535, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"], [10, null]], "Distributions": [[542, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[545, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[535, "exceptions"]], "Exponents and logarithms": [[538, "exponents-and-logarithms"]], "Extrema finding": [[538, "extrema-finding"]], "Floating functions": [[547, "floating-functions"]], "Floating point routines": [[538, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Functional programming": [[11, null]], "Generating index arrays": [[534, "generating-index-arrays"]], "Handling complex numbers": [[538, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[546, "histograms"]], "Hyperbolic functions": [[538, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[540, "indexing-arrays"]], "Indexing routines": [[534, null]], "Indexing-like operations": [[534, "indexing-like-operations"]], "Infinities and NaNs": [[536, "infinities-and-nans"]], "Inserting data into arrays": [[534, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[540, "item-selection-and-manipulation"]], "Iterating over arrays": [[534, "iterating-over-arrays"]], "Joining arrays": [[537, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"]], "Linear algebra": [[535, null]], "Logic Functions": [[536, null]], "Logic operations": [[536, "logic-operations"]], "Math operations": [[547, "math-operations"]], "Mathematical functions": [[538, null]], "Matrix and vector products": [[535, "matrix-and-vector-products"]], "Matrix eigenvalues": [[535, "matrix-eigenvalues"]], "Memory layout": [[540, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [538, "miscellaneous"]], "Miscellaneous routines": [[539, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[540, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[535, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[546, "order-statistics"]], "Other attributes": [[540, "other-attributes"]], "Other matrix operations": [[535, "other-matrix-operations"]], "Other special functions": [[538, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[542, "permutations"]], "Poly1d": [[541, "poly1d"]], "Polynomial Module": [[541, "polynomial-module"]], "Polynomial Package": [[541, "polynomial-package"]], "Polynomials": [[541, null]], "Polyutils": [[541, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random generator": [[542, "random-generator"]], "Random sampling (dpnp.random)": [[542, null]], "Rational routines": [[538, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[537, "rearranging-elements"]], "Rounding": [[538, "rounding"]], "Routines": [[543, null]], "Searching": [[544, "searching"]], "Shape manipulation": [[540, "shape-manipulation"]], "Simple random data": [[542, "simple-random-data"]], "Solving linear equations": [[535, "solving-linear-equations"]], "Sorting": [[544, "sorting"]], "Sorting, searching, and counting": [[544, null]], "Special Functions": [[545, null]], "Special methods": [[540, "special-methods"]], "Splitting arrays": [[537, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistics": [[546, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[538, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[537, "tiling-arrays"]], "Transpose-like operations": [[537, "transpose-like-operations"]], "Trigonometric functions": [[538, "trigonometric-functions"], [547, "trigonometric-functions"]], "Truth value testing": [[536, "truth-value-testing"]], "Universal Functions (ufunc)": [[547, null]], "Utility": [[539, "utility"]], "dpnp.abs": [[12, null]], "dpnp.absolute": [[13, null]], "dpnp.acos": [[14, null]], "dpnp.acosh": [[15, null]], "dpnp.add": [[16, null]], "dpnp.all": [[17, null]], "dpnp.allclose": [[18, null]], "dpnp.amax": [[19, null]], "dpnp.amin": [[20, null]], "dpnp.angle": [[21, null]], "dpnp.any": [[22, null]], "dpnp.append": [[23, null]], "dpnp.apply_along_axis": [[24, null]], "dpnp.arange": [[25, null]], "dpnp.arccos": [[26, null]], "dpnp.arccosh": [[27, null]], "dpnp.arcsin": [[28, null]], "dpnp.arcsinh": [[29, null]], "dpnp.arctan": [[30, null]], "dpnp.arctan2": [[31, null]], "dpnp.arctanh": [[32, null]], "dpnp.argmax": [[33, null]], "dpnp.argmin": [[34, null]], "dpnp.argsort": [[35, null]], "dpnp.argwhere": [[36, null]], "dpnp.around": [[37, null]], "dpnp.array": [[38, null]], "dpnp.array_equal": [[39, null]], "dpnp.array_equiv": [[40, null]], "dpnp.array_split": [[41, null]], "dpnp.asanyarray": [[42, null]], "dpnp.asarray": [[43, null]], "dpnp.asarray_chkfinite": [[44, null]], "dpnp.ascontiguousarray": [[45, null]], "dpnp.asfarray": [[46, null]], "dpnp.asfortranarray": [[47, null]], "dpnp.asin": [[48, null]], "dpnp.asinh": [[49, null]], "dpnp.asnumpy": [[50, null]], "dpnp.astype": [[51, null]], "dpnp.atan": [[52, null]], "dpnp.atan2": [[53, null]], "dpnp.atanh": [[54, null]], "dpnp.atleast_1d": [[55, null]], "dpnp.atleast_2d": [[56, null]], "dpnp.atleast_3d": [[57, null]], "dpnp.average": [[58, null]], "dpnp.bincount": [[59, null]], "dpnp.bitwise_and": [[60, null]], "dpnp.bitwise_invert": [[61, null]], "dpnp.bitwise_left_shift": [[62, null]], "dpnp.bitwise_not": [[63, null]], "dpnp.bitwise_or": [[64, null]], "dpnp.bitwise_right_shift": [[65, null]], "dpnp.bitwise_xor": [[66, null]], "dpnp.broadcast_arrays": [[67, null]], "dpnp.broadcast_shapes": [[68, null]], "dpnp.broadcast_to": [[69, null]], "dpnp.byte_bounds": [[70, null]], "dpnp.can_cast": [[71, null]], "dpnp.cbrt": [[72, null]], "dpnp.ceil": [[73, null]], "dpnp.choose": [[74, null]], "dpnp.clip": [[75, null]], "dpnp.column_stack": [[76, null]], "dpnp.concat": [[77, null]], "dpnp.concatenate": [[78, null]], "dpnp.conj": [[79, null]], "dpnp.conjugate": [[80, null]], "dpnp.convolve": [[81, null]], "dpnp.copy": [[82, null]], "dpnp.copysign": [[83, null]], "dpnp.copyto": [[84, null]], "dpnp.corrcoef": [[85, null]], "dpnp.correlate": [[86, null]], "dpnp.cos": [[87, null]], "dpnp.cosh": [[88, null]], "dpnp.count_nonzero": [[89, null]], "dpnp.cov": [[90, null]], "dpnp.cross": [[91, null]], "dpnp.cumlogsumexp": [[92, null]], "dpnp.cumprod": [[93, null]], "dpnp.cumsum": [[94, null]], "dpnp.deg2rad": [[95, null]], "dpnp.degrees": [[96, null]], "dpnp.delete": [[97, null]], "dpnp.diag": [[98, null]], "dpnp.diag_indices": [[99, null]], "dpnp.diag_indices_from": [[100, null]], "dpnp.diagflat": [[101, null]], "dpnp.diagonal": [[102, null]], "dpnp.diff": [[103, null]], "dpnp.digitize": [[104, null]], "dpnp.divide": [[105, null]], "dpnp.dot": [[106, null]], "dpnp.dpnp_array.dpnp_array": [[107, null]], "dpnp.dsplit": [[108, null]], "dpnp.dstack": [[109, null]], "dpnp.dtype": [[110, null]], "dpnp.ediff1d": [[111, null]], "dpnp.einsum": [[112, null]], "dpnp.einsum_path": [[113, null]], "dpnp.empty": [[114, null]], "dpnp.empty_like": [[115, null]], "dpnp.equal": [[116, null]], "dpnp.erf": [[117, null]], "dpnp.exp": [[118, null]], "dpnp.exp2": [[119, null]], "dpnp.expand_dims": [[120, null]], "dpnp.expm1": [[121, null]], "dpnp.extract": [[122, null]], "dpnp.eye": [[123, null]], "dpnp.fabs": [[124, null]], "dpnp.fft.fft": [[125, null]], "dpnp.fft.fft2": [[126, null]], "dpnp.fft.fftfreq": [[127, null]], "dpnp.fft.fftn": [[128, null]], "dpnp.fft.fftshift": [[129, null]], "dpnp.fft.hfft": [[130, null]], "dpnp.fft.ifft": [[131, null]], "dpnp.fft.ifft2": [[132, null]], "dpnp.fft.ifftn": [[133, null]], "dpnp.fft.ifftshift": [[134, null]], "dpnp.fft.ihfft": [[135, null]], "dpnp.fft.irfft": [[136, null]], "dpnp.fft.irfft2": [[137, null]], "dpnp.fft.irfftn": [[138, null]], "dpnp.fft.rfft": [[139, null]], "dpnp.fft.rfft2": [[140, null]], "dpnp.fft.rfftfreq": [[141, null]], "dpnp.fft.rfftn": [[142, null]], "dpnp.fill_diagonal": [[143, null]], "dpnp.finfo": [[144, null]], "dpnp.fix": [[145, null]], "dpnp.flatiter": [[146, null]], "dpnp.flatnonzero": [[147, null]], "dpnp.flip": [[148, null]], "dpnp.fliplr": [[149, null]], "dpnp.flipud": [[150, null]], "dpnp.float_power": [[151, null]], "dpnp.floor": [[152, null]], "dpnp.floor_divide": [[153, null]], "dpnp.fmax": [[154, null]], "dpnp.fmin": [[155, null]], "dpnp.fmod": [[156, null]], "dpnp.from_dlpack": [[157, null]], "dpnp.frombuffer": [[158, null]], "dpnp.fromfile": [[159, null]], "dpnp.fromfunction": [[160, null]], "dpnp.fromiter": [[161, null]], "dpnp.fromstring": [[162, null]], "dpnp.full": [[163, null]], "dpnp.full_like": [[164, null]], "dpnp.gcd": [[165, null]], "dpnp.geomspace": [[166, null]], "dpnp.get_include": [[167, null]], "dpnp.gradient": [[168, null]], "dpnp.greater": [[169, null]], "dpnp.greater_equal": [[170, null]], "dpnp.heaviside": [[171, null]], "dpnp.histogram": [[172, null]], "dpnp.histogram_bin_edges": [[173, null]], "dpnp.hsplit": [[174, null]], "dpnp.hstack": [[175, null]], "dpnp.hypot": [[176, null]], "dpnp.identity": [[177, null]], "dpnp.iinfo": [[178, null]], "dpnp.imag": [[179, null]], "dpnp.indices": [[180, null]], "dpnp.inner": [[181, null]], "dpnp.insert": [[182, null]], "dpnp.invert": [[183, null]], "dpnp.isclose": [[184, null]], "dpnp.iscomplex": [[185, null]], "dpnp.iscomplexobj": [[186, null]], "dpnp.isfinite": [[187, null]], "dpnp.isfortran": [[188, null]], "dpnp.isinf": [[189, null]], "dpnp.isnan": [[190, null]], "dpnp.isneginf": [[191, null]], "dpnp.isposinf": [[192, null]], "dpnp.isreal": [[193, null]], "dpnp.isrealobj": [[194, null]], "dpnp.isscalar": [[195, null]], "dpnp.issubdtype": [[196, null]], "dpnp.ix_": [[197, null]], "dpnp.kron": [[198, null]], "dpnp.lcm": [[199, null]], "dpnp.ldexp": [[200, null]], "dpnp.left_shift": [[201, null]], "dpnp.less": [[202, null]], "dpnp.less_equal": [[203, null]], "dpnp.linalg.cholesky": [[204, null]], "dpnp.linalg.cond": [[205, null]], "dpnp.linalg.cross": [[206, null]], "dpnp.linalg.det": [[207, null]], "dpnp.linalg.diagonal": [[208, null]], "dpnp.linalg.eig": [[209, null]], "dpnp.linalg.eigh": [[210, null]], "dpnp.linalg.eigvals": [[211, null]], "dpnp.linalg.eigvalsh": [[212, null]], "dpnp.linalg.inv": [[213, null]], "dpnp.linalg.lstsq": [[214, null]], "dpnp.linalg.matmul": [[215, null]], "dpnp.linalg.matrix_norm": [[216, null]], "dpnp.linalg.matrix_power": [[217, null]], "dpnp.linalg.matrix_rank": [[218, null]], "dpnp.linalg.multi_dot": [[219, null]], "dpnp.linalg.norm": [[220, null]], "dpnp.linalg.outer": [[221, null]], "dpnp.linalg.pinv": [[222, null]], "dpnp.linalg.qr": [[223, null]], "dpnp.linalg.slogdet": [[224, null]], "dpnp.linalg.solve": [[225, null]], "dpnp.linalg.svd": [[226, null]], "dpnp.linalg.svdvals": [[227, null]], "dpnp.linalg.tensordot": [[228, null]], "dpnp.linalg.tensorinv": [[229, null]], "dpnp.linalg.tensorsolve": [[230, null]], "dpnp.linalg.trace": [[231, null]], "dpnp.linalg.vecdot": [[232, null]], "dpnp.linalg.vector_norm": [[233, null]], "dpnp.linspace": [[234, null]], "dpnp.loadtxt": [[235, null]], "dpnp.log": [[236, null]], "dpnp.log10": [[237, null]], "dpnp.log1p": [[238, null]], "dpnp.log2": [[239, null]], "dpnp.logaddexp": [[240, null]], "dpnp.logaddexp2": [[241, null]], "dpnp.logical_and": [[242, null]], "dpnp.logical_not": [[243, null]], "dpnp.logical_or": [[244, null]], "dpnp.logical_xor": [[245, null]], "dpnp.logspace": [[246, null]], "dpnp.logsumexp": [[247, null]], "dpnp.mask_indices": [[248, null]], "dpnp.matmul": [[249, null]], "dpnp.matrix_transpose": [[250, null]], "dpnp.max": [[251, null]], "dpnp.maximum": [[252, null]], "dpnp.mean": [[253, null]], "dpnp.median": [[254, null]], "dpnp.meshgrid": [[255, null]], "dpnp.mgrid": [[256, null]], "dpnp.min": [[257, null]], "dpnp.minimum": [[258, null]], "dpnp.mod": [[259, null]], "dpnp.modf": [[260, null]], "dpnp.moveaxis": [[261, null]], "dpnp.multiply": [[262, null]], "dpnp.nan_to_num": [[263, null]], "dpnp.nanargmax": [[264, null]], "dpnp.nanargmin": [[265, null]], "dpnp.nancumprod": [[266, null]], "dpnp.nancumsum": [[267, null]], "dpnp.nanmax": [[268, null]], "dpnp.nanmean": [[269, null]], "dpnp.nanmin": [[270, null]], "dpnp.nanprod": [[271, null]], "dpnp.nanstd": [[272, null]], "dpnp.nansum": [[273, null]], "dpnp.nanvar": [[274, null]], "dpnp.ndarray": [[275, null]], "dpnp.ndarray.T": [[276, null]], "dpnp.ndarray.__abs__": [[277, null]], "dpnp.ndarray.__add__": [[278, null]], "dpnp.ndarray.__and__": [[279, null]], "dpnp.ndarray.__bool__": [[280, null]], "dpnp.ndarray.__complex__": [[281, null]], "dpnp.ndarray.__copy__": [[282, null]], "dpnp.ndarray.__eq__": [[283, null]], "dpnp.ndarray.__float__": [[284, null]], "dpnp.ndarray.__floordiv__": [[285, null]], "dpnp.ndarray.__ge__": [[286, null]], "dpnp.ndarray.__getitem__": [[287, null]], "dpnp.ndarray.__gt__": [[288, null]], "dpnp.ndarray.__iadd__": [[289, null]], "dpnp.ndarray.__iand__": [[290, null]], "dpnp.ndarray.__ifloordiv__": [[291, null]], "dpnp.ndarray.__ilshift__": [[292, null]], "dpnp.ndarray.__imatmul__": [[293, null]], "dpnp.ndarray.__imod__": [[294, null]], "dpnp.ndarray.__imul__": [[295, null]], "dpnp.ndarray.__int__": [[296, null]], "dpnp.ndarray.__invert__": [[297, null]], "dpnp.ndarray.__ior__": [[298, null]], "dpnp.ndarray.__ipow__": [[299, null]], "dpnp.ndarray.__irshift__": [[300, null]], "dpnp.ndarray.__isub__": [[301, null]], "dpnp.ndarray.__itruediv__": [[302, null]], "dpnp.ndarray.__ixor__": [[303, null]], "dpnp.ndarray.__le__": [[304, null]], "dpnp.ndarray.__len__": [[305, null]], "dpnp.ndarray.__lshift__": [[306, null]], "dpnp.ndarray.__lt__": [[307, null]], "dpnp.ndarray.__matmul__": [[308, null]], "dpnp.ndarray.__mod__": [[309, null]], "dpnp.ndarray.__mul__": [[310, null]], "dpnp.ndarray.__ne__": [[311, null]], "dpnp.ndarray.__neg__": [[312, null]], "dpnp.ndarray.__new__": [[313, null]], "dpnp.ndarray.__or__": [[314, null]], "dpnp.ndarray.__pos__": [[315, null]], "dpnp.ndarray.__pow__": [[316, null]], "dpnp.ndarray.__radd__": [[317, null]], "dpnp.ndarray.__rand__": [[318, null]], "dpnp.ndarray.__repr__": [[319, null]], "dpnp.ndarray.__rfloordiv__": [[320, null]], "dpnp.ndarray.__rlshift__": [[321, null]], "dpnp.ndarray.__rmatmul__": [[322, null]], "dpnp.ndarray.__rmod__": [[323, null]], "dpnp.ndarray.__rmul__": [[324, null]], "dpnp.ndarray.__ror__": [[325, null]], "dpnp.ndarray.__rpow__": [[326, null]], "dpnp.ndarray.__rrshift__": [[327, null]], "dpnp.ndarray.__rshift__": [[328, null]], "dpnp.ndarray.__rsub__": [[329, null]], "dpnp.ndarray.__rtruediv__": [[330, null]], "dpnp.ndarray.__rxor__": [[331, null]], "dpnp.ndarray.__setitem__": [[332, null]], "dpnp.ndarray.__str__": [[333, null]], "dpnp.ndarray.__sub__": [[334, null]], "dpnp.ndarray.__truediv__": [[335, null]], "dpnp.ndarray.__xor__": [[336, null]], "dpnp.ndarray.all": [[337, null]], "dpnp.ndarray.any": [[338, null]], "dpnp.ndarray.argmax": [[339, null]], "dpnp.ndarray.argmin": [[340, null]], "dpnp.ndarray.argsort": [[341, null]], "dpnp.ndarray.astype": [[342, null]], "dpnp.ndarray.choose": [[343, null]], "dpnp.ndarray.clip": [[344, null]], "dpnp.ndarray.conj": [[345, null]], "dpnp.ndarray.conjugate": [[346, null]], "dpnp.ndarray.copy": [[347, null]], "dpnp.ndarray.cumprod": [[348, null]], "dpnp.ndarray.cumsum": [[349, null]], "dpnp.ndarray.diagonal": [[350, null]], "dpnp.ndarray.dtype": [[351, null]], "dpnp.ndarray.fill": [[352, null]], "dpnp.ndarray.flags": [[353, null]], "dpnp.ndarray.flat": [[354, null]], "dpnp.ndarray.flatten": [[355, null]], "dpnp.ndarray.imag": [[356, null]], "dpnp.ndarray.item": [[357, null]], "dpnp.ndarray.itemsize": [[358, null]], "dpnp.ndarray.mT": [[359, null]], "dpnp.ndarray.max": [[360, null]], "dpnp.ndarray.mean": [[361, null]], "dpnp.ndarray.min": [[362, null]], "dpnp.ndarray.nbytes": [[363, null]], "dpnp.ndarray.ndim": [[364, null]], "dpnp.ndarray.nonzero": [[365, null]], "dpnp.ndarray.partition": [[366, null]], "dpnp.ndarray.prod": [[367, null]], "dpnp.ndarray.put": [[368, null]], "dpnp.ndarray.ravel": [[369, null]], "dpnp.ndarray.real": [[370, null]], "dpnp.ndarray.repeat": [[371, null]], "dpnp.ndarray.reshape": [[372, null]], "dpnp.ndarray.round": [[373, null]], "dpnp.ndarray.searchsorted": [[374, null]], "dpnp.ndarray.shape": [[375, null]], "dpnp.ndarray.size": [[376, null]], "dpnp.ndarray.sort": [[377, null]], "dpnp.ndarray.squeeze": [[378, null]], "dpnp.ndarray.std": [[379, null]], "dpnp.ndarray.strides": [[380, null]], "dpnp.ndarray.sum": [[381, null]], "dpnp.ndarray.swapaxes": [[382, null]], "dpnp.ndarray.take": [[383, null]], "dpnp.ndarray.trace": [[384, null]], "dpnp.ndarray.transpose": [[385, null]], "dpnp.ndarray.var": [[386, null]], "dpnp.ndim": [[387, null]], "dpnp.negative": [[388, null]], "dpnp.nextafter": [[389, null]], "dpnp.nonzero": [[390, null]], "dpnp.not_equal": [[391, null]], "dpnp.ogrid": [[392, null]], "dpnp.ones": [[393, null]], "dpnp.ones_like": [[394, null]], "dpnp.outer": [[395, null]], "dpnp.pad": [[396, null]], "dpnp.partition": [[397, null]], "dpnp.permute_dims": [[398, null]], "dpnp.place": [[399, null]], "dpnp.positive": [[400, null]], "dpnp.pow": [[401, null]], "dpnp.power": [[402, null]], "dpnp.prod": [[403, null]], "dpnp.proj": [[404, null]], "dpnp.ptp": [[405, null]], "dpnp.put": [[406, null]], "dpnp.put_along_axis": [[407, null]], "dpnp.putmask": [[408, null]], "dpnp.rad2deg": [[409, null]], "dpnp.radians": [[410, null]], "dpnp.random.RandomState": [[411, null]], "dpnp.random.beta": [[412, null]], "dpnp.random.binomial": [[413, null]], "dpnp.random.bytes": [[414, null]], "dpnp.random.chisquare": [[415, null]], "dpnp.random.choice": [[416, null]], "dpnp.random.dirichlet": [[417, null]], "dpnp.random.exponential": [[418, null]], "dpnp.random.f": [[419, null]], "dpnp.random.gamma": [[420, null]], "dpnp.random.geometric": [[421, null]], "dpnp.random.gumbel": [[422, null]], "dpnp.random.hypergeometric": [[423, null]], "dpnp.random.laplace": [[424, null]], "dpnp.random.logistic": [[425, null]], "dpnp.random.lognormal": [[426, null]], "dpnp.random.logseries": [[427, null]], "dpnp.random.multinomial": [[428, null]], "dpnp.random.multivariate_normal": [[429, null]], "dpnp.random.negative_binomial": [[430, null]], "dpnp.random.noncentral_chisquare": [[431, null]], "dpnp.random.noncentral_f": [[432, null]], "dpnp.random.normal": [[433, null]], "dpnp.random.pareto": [[434, null]], "dpnp.random.permutation": [[435, null]], "dpnp.random.poisson": [[436, null]], "dpnp.random.power": [[437, null]], "dpnp.random.rand": [[438, null]], "dpnp.random.randint": [[439, null]], "dpnp.random.randn": [[440, null]], "dpnp.random.random": [[441, null]], "dpnp.random.random_integers": [[442, null]], "dpnp.random.random_sample": [[443, null]], "dpnp.random.ranf": [[444, null]], "dpnp.random.rayleigh": [[445, null]], "dpnp.random.sample": [[446, null]], "dpnp.random.seed": [[447, null]], "dpnp.random.shuffle": [[448, null]], "dpnp.random.standard_cauchy": [[449, null]], "dpnp.random.standard_exponential": [[450, null]], "dpnp.random.standard_gamma": [[451, null]], "dpnp.random.standard_normal": [[452, null]], "dpnp.random.standard_t": [[453, null]], "dpnp.random.triangular": [[454, null]], "dpnp.random.uniform": [[455, null]], "dpnp.random.vonmises": [[456, null]], "dpnp.random.wald": [[457, null]], "dpnp.random.weibull": [[458, null]], "dpnp.random.zipf": [[459, null]], "dpnp.ravel": [[460, null]], "dpnp.ravel_multi_index": [[461, null]], "dpnp.real": [[462, null]], "dpnp.real_if_close": [[463, null]], "dpnp.reciprocal": [[464, null]], "dpnp.reduce_hypot": [[465, null]], "dpnp.remainder": [[466, null]], "dpnp.repeat": [[467, null]], "dpnp.require": [[468, null]], "dpnp.reshape": [[469, null]], "dpnp.resize": [[470, null]], "dpnp.result_type": [[471, null]], "dpnp.right_shift": [[472, null]], "dpnp.rint": [[473, null]], "dpnp.roll": [[474, null]], "dpnp.rollaxis": [[475, null]], "dpnp.rot90": [[476, null]], "dpnp.round": [[477, null]], "dpnp.row_stack": [[478, null]], "dpnp.rsqrt": [[479, null]], "dpnp.searchsorted": [[480, null]], "dpnp.select": [[481, null]], "dpnp.shape": [[482, null]], "dpnp.sign": [[483, null]], "dpnp.signbit": [[484, null]], "dpnp.sin": [[485, null]], "dpnp.sinc": [[486, null]], "dpnp.sinh": [[487, null]], "dpnp.size": [[488, null]], "dpnp.sort": [[489, null]], "dpnp.sort_complex": [[490, null]], "dpnp.spacing": [[491, null]], "dpnp.split": [[492, null]], "dpnp.sqrt": [[493, null]], "dpnp.square": [[494, null]], "dpnp.squeeze": [[495, null]], "dpnp.stack": [[496, null]], "dpnp.std": [[497, null]], "dpnp.subtract": [[498, null]], "dpnp.sum": [[499, null]], "dpnp.swapaxes": [[500, null]], "dpnp.take": [[501, null]], "dpnp.take_along_axis": [[502, null]], "dpnp.tan": [[503, null]], "dpnp.tanh": [[504, null]], "dpnp.tensordot": [[505, null]], "dpnp.tile": [[506, null]], "dpnp.trace": [[507, null]], "dpnp.transpose": [[508, null]], "dpnp.trapezoid": [[509, null]], "dpnp.tri": [[510, null]], "dpnp.tril": [[511, null]], "dpnp.tril_indices": [[512, null]], "dpnp.tril_indices_from": [[513, null]], "dpnp.trim_zeros": [[514, null]], "dpnp.triu": [[515, null]], "dpnp.triu_indices": [[516, null]], "dpnp.triu_indices_from": [[517, null]], "dpnp.true_divide": [[518, null]], "dpnp.trunc": [[519, null]], "dpnp.unique": [[520, null]], "dpnp.unravel_index": [[521, null]], "dpnp.unstack": [[522, null]], "dpnp.unwrap": [[523, null]], "dpnp.vander": [[524, null]], "dpnp.var": [[525, null]], "dpnp.vdot": [[526, null]], "dpnp.vecdot": [[527, null]], "dpnp.vsplit": [[528, null]], "dpnp.vstack": [[529, null]], "dpnp.where": [[530, null]], "dpnp.zeros": [[531, null]], "dpnp.zeros_like": [[532, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[110, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[110, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[110, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[110, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[110, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[110, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[110, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[110, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[146, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[333, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[334, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[335, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[336, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[12, "dpnp.abs", false]], "absolute() (in module dpnp)": [[13, "dpnp.absolute", false]], "acos() (in module dpnp)": [[14, "dpnp.acos", false]], "acosh() (in module dpnp)": [[15, "dpnp.acosh", false]], "add() (in module dpnp)": [[16, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[110, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[337, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[17, "dpnp.all", false]], "allclose() (in module dpnp)": [[18, "dpnp.allclose", false]], "amax() (in module dpnp)": [[19, "dpnp.amax", false]], "amin() (in module dpnp)": [[20, "dpnp.amin", false]], "angle() (in module dpnp)": [[21, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[338, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[22, "dpnp.any", false]], "append() (in module dpnp)": [[23, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[24, "dpnp.apply_along_axis", false]], "arange() (in module dpnp)": [[25, "dpnp.arange", false]], "arccos() (in module dpnp)": [[26, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[27, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[28, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[29, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[30, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[31, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[32, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[339, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[33, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[340, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[34, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[341, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[35, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[36, "dpnp.argwhere", false]], "around() (in module dpnp)": [[37, "dpnp.around", false]], "array() (in module dpnp)": [[38, "dpnp.array", false]], "array_equal() (in module dpnp)": [[39, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[40, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[41, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[42, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[43, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[44, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[45, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[46, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[47, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[48, "dpnp.asin", false]], "asinh() (in module dpnp)": [[49, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[50, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[342, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[51, "dpnp.astype", false]], "atan() (in module dpnp)": [[52, "dpnp.atan", false]], "atan2() (in module dpnp)": [[53, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[54, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[55, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[56, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[57, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[58, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[110, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[412, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[59, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[413, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[60, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[61, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[62, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[63, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[64, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[65, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[66, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[67, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[68, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[69, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[70, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[110, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[414, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[71, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[72, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[73, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[110, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[415, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[416, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[204, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[343, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[74, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[344, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[75, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[76, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[77, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[78, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[205, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[345, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[79, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[346, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[80, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[81, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[347, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[82, "dpnp.copy", false]], "copysign() (in module dpnp)": [[83, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[84, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[85, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[86, "dpnp.correlate", false]], "cos() (in module dpnp)": [[87, "dpnp.cos", false]], "cosh() (in module dpnp)": [[88, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[89, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[90, "dpnp.cov", false]], "cross() (in module dpnp)": [[91, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[206, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[92, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[348, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[93, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[349, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[94, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[95, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[96, "dpnp.degrees", false]], "delete() (in module dpnp)": [[97, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[110, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[207, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[98, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[99, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[100, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[101, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[350, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[102, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[208, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[103, "dpnp.diff", false]], "digitize() (in module dpnp)": [[104, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[417, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[105, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[106, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[107, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[108, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[109, "dpnp.dstack", false]], "dtype (class in dpnp)": [[110, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[351, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[111, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[209, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[210, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[211, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[212, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[112, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[113, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[114, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[115, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[116, "dpnp.equal", false]], "erf() (in module dpnp)": [[117, "dpnp.erf", false]], "exp() (in module dpnp)": [[118, "dpnp.exp", false]], "exp2() (in module dpnp)": [[119, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[120, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[121, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[418, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[122, "dpnp.extract", false]], "eye() (in module dpnp)": [[123, "dpnp.eye", false]], "f() (in module dpnp.random)": [[419, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[124, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[125, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[126, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[127, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[128, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[129, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[110, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[352, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[143, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[144, "dpnp.finfo", false]], "fix() (in module dpnp)": [[145, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[110, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[353, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[354, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[146, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[147, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[355, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[148, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[149, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[150, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[151, "dpnp.float_power", false]], "floor() (in module dpnp)": [[152, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[153, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[154, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[155, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[156, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[157, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[158, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[159, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[160, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[161, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[162, "dpnp.fromstring", false]], "full() (in module dpnp)": [[163, "dpnp.full", false]], "full_like() (in module dpnp)": [[164, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[420, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[165, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[421, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[166, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[167, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[168, "dpnp.gradient", false]], "greater() (in module dpnp)": [[169, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[170, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[422, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[110, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[171, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[130, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[172, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[173, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[174, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[175, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[423, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[176, "dpnp.hypot", false]], "identity() (in module dpnp)": [[177, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[131, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[132, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[133, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[134, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[135, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[178, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[356, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[179, "dpnp.imag", false]], "indices() (in module dpnp)": [[180, "dpnp.indices", false]], "inner() (in module dpnp)": [[181, "dpnp.inner", false]], "insert() (in module dpnp)": [[182, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[213, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[183, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[136, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[137, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[138, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[110, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[110, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[184, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[185, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[186, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[187, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[188, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[189, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[190, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[110, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[191, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[192, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[193, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[194, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[195, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[196, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[357, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[110, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[358, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[197, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[110, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[198, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[424, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[199, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[200, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[201, "dpnp.left_shift", false]], "less() (in module dpnp)": [[202, "dpnp.less", false]], "less_equal() (in module dpnp)": [[203, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[234, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[235, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[236, "dpnp.log", false]], "log10() (in module dpnp)": [[237, "dpnp.log10", false]], "log1p() (in module dpnp)": [[238, "dpnp.log1p", false]], "log2() (in module dpnp)": [[239, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[240, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[241, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[242, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[243, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[244, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[245, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[425, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[426, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[427, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[246, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[247, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[214, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[248, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[249, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[215, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[216, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[217, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[218, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[250, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[360, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[251, "dpnp.max", false]], "maximum() (in module dpnp)": [[252, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[361, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[253, "dpnp.mean", false]], "median() (in module dpnp)": [[254, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[255, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[110, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[256, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[362, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[257, "dpnp.min", false]], "minimum() (in module dpnp)": [[258, "dpnp.minimum", false]], "mod() (in module dpnp)": [[259, "dpnp.mod", false]], "modf() (in module dpnp)": [[260, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[261, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[359, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[219, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[428, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[262, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[429, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[110, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[110, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[263, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[264, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[265, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[266, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[267, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[268, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[269, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[270, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[271, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[272, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[273, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[274, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[363, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[275, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[110, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[364, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[387, "dpnp.ndim", false]], "negative() (in module dpnp)": [[388, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[430, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[110, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[389, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[431, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[432, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[365, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[390, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[220, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[433, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[391, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[110, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[392, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[393, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[394, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[395, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[221, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[396, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[434, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[366, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[397, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[435, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[398, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[222, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[399, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[436, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[400, "dpnp.positive", false]], "pow() (in module dpnp)": [[401, "dpnp.pow", false]], "power() (in module dpnp)": [[402, "dpnp.power", false]], "power() (in module dpnp.random)": [[437, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[367, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[403, "dpnp.prod", false]], "proj() (in module dpnp)": [[404, "dpnp.proj", false]], "ptp() (in module dpnp)": [[405, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[368, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[406, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[407, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[408, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[223, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[409, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[410, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[438, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[439, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[440, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[441, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[442, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[443, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[411, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[444, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[369, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[460, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[461, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[445, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[370, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[462, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[463, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[464, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[465, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[466, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[371, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[467, "dpnp.repeat", false]], "require() (in module dpnp)": [[468, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[372, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[469, "dpnp.reshape", false]], "resize() (in module dpnp)": [[470, "dpnp.resize", false]], "result_type() (in module dpnp)": [[471, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[139, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[140, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[141, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[142, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[472, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[473, "dpnp.rint", false]], "roll() (in module dpnp)": [[474, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[475, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[476, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[373, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[477, "dpnp.round", false]], "row_stack() (in module dpnp)": [[478, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[479, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[446, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[374, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[480, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[447, "dpnp.random.seed", false]], "select() (in module dpnp)": [[481, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[110, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[375, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[482, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[448, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[483, "dpnp.sign", false]], "signbit() (in module dpnp)": [[484, "dpnp.signbit", false]], "sin() (in module dpnp)": [[485, "dpnp.sin", false]], "sinc() (in module dpnp)": [[486, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[487, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[376, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[488, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[224, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[225, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[377, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[489, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[490, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[491, "dpnp.spacing", false]], "split() (in module dpnp)": [[492, "dpnp.split", false]], "sqrt() (in module dpnp)": [[493, "dpnp.sqrt", false]], "square() (in module dpnp)": [[494, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[378, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[495, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[496, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[449, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[450, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[451, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[452, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[453, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[379, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[497, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[110, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[380, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[110, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[498, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[381, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[499, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[226, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[227, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[382, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[500, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[276, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[383, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[501, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[502, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[503, "dpnp.tan", false]], "tanh() (in module dpnp)": [[504, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[505, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[228, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[229, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[230, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[506, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[384, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[507, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[231, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[385, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[508, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[509, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[510, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[454, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[511, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[512, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[513, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[514, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[515, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[516, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[517, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[518, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[519, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[110, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[411, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[455, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[520, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[521, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[522, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[523, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[107, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[524, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[107, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[386, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[525, "dpnp.var", false]], "vdot() (in module dpnp)": [[526, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[527, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[232, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[233, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[456, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[528, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[529, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[457, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[458, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[530, "dpnp.where", false]], "zeros() (in module dpnp)": [[531, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[532, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[459, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[12, 1, 1, "", "abs"], [13, 1, 1, "", "absolute"], [14, 1, 1, "", "acos"], [15, 1, 1, "", "acosh"], [16, 1, 1, "", "add"], [17, 1, 1, "", "all"], [18, 1, 1, "", "allclose"], [19, 1, 1, "", "amax"], [20, 1, 1, "", "amin"], [21, 1, 1, "", "angle"], [22, 1, 1, "", "any"], [23, 1, 1, "", "append"], [24, 1, 1, "", "apply_along_axis"], [25, 1, 1, "", "arange"], [26, 1, 1, "", "arccos"], [27, 1, 1, "", "arccosh"], [28, 1, 1, "", "arcsin"], [29, 1, 1, "", "arcsinh"], [30, 1, 1, "", "arctan"], [31, 1, 1, "", "arctan2"], [32, 1, 1, "", "arctanh"], [33, 1, 1, "", "argmax"], [34, 1, 1, "", "argmin"], [35, 1, 1, "", "argsort"], [36, 1, 1, "", "argwhere"], [37, 1, 1, "", "around"], [38, 1, 1, "", "array"], [39, 1, 1, "", "array_equal"], [40, 1, 1, "", "array_equiv"], [41, 1, 1, "", "array_split"], [42, 1, 1, "", "asanyarray"], [43, 1, 1, "", "asarray"], [44, 1, 1, "", "asarray_chkfinite"], [45, 1, 1, "", "ascontiguousarray"], [46, 1, 1, "", "asfarray"], [47, 1, 1, "", "asfortranarray"], [48, 1, 1, "", "asin"], [49, 1, 1, "", "asinh"], [50, 1, 1, "", "asnumpy"], [51, 1, 1, "", "astype"], [52, 1, 1, "", "atan"], [53, 1, 1, "", "atan2"], [54, 1, 1, "", "atanh"], [55, 1, 1, "", "atleast_1d"], [56, 1, 1, "", "atleast_2d"], [57, 1, 1, "", "atleast_3d"], [58, 1, 1, "", "average"], [59, 1, 1, "", "bincount"], [60, 1, 1, "", "bitwise_and"], [61, 1, 1, "", "bitwise_invert"], [62, 1, 1, "", "bitwise_left_shift"], [63, 1, 1, "", "bitwise_not"], [64, 1, 1, "", "bitwise_or"], [65, 1, 1, "", "bitwise_right_shift"], [66, 1, 1, "", "bitwise_xor"], [67, 1, 1, "", "broadcast_arrays"], [68, 1, 1, "", "broadcast_shapes"], [69, 1, 1, "", "broadcast_to"], [70, 1, 1, "", "byte_bounds"], [71, 1, 1, "", "can_cast"], [72, 1, 1, "", "cbrt"], [73, 1, 1, "", "ceil"], [74, 1, 1, "", "choose"], [75, 1, 1, "", "clip"], [76, 1, 1, "", "column_stack"], [77, 1, 1, "", "concat"], [78, 1, 1, "", "concatenate"], [79, 1, 1, "", "conj"], [80, 1, 1, "", "conjugate"], [81, 1, 1, "", "convolve"], [82, 1, 1, "", "copy"], [83, 1, 1, "", "copysign"], [84, 1, 1, "", "copyto"], [85, 1, 1, "", "corrcoef"], [86, 1, 1, "", "correlate"], [87, 1, 1, "", "cos"], [88, 1, 1, "", "cosh"], [89, 1, 1, "", "count_nonzero"], [90, 1, 1, "", "cov"], [91, 1, 1, "", "cross"], [92, 1, 1, "", "cumlogsumexp"], [93, 1, 1, "", "cumprod"], [94, 1, 1, "", "cumsum"], [95, 1, 1, "", "deg2rad"], [96, 1, 1, "", "degrees"], [97, 1, 1, "", "delete"], [98, 1, 1, "", "diag"], [99, 1, 1, "", "diag_indices"], [100, 1, 1, "", "diag_indices_from"], [101, 1, 1, "", "diagflat"], [102, 1, 1, "", "diagonal"], [103, 1, 1, "", "diff"], [104, 1, 1, "", "digitize"], [105, 1, 1, "", "divide"], [106, 1, 1, "", "dot"], [108, 1, 1, "", "dsplit"], [109, 1, 1, "", "dstack"], [110, 2, 1, "", "dtype"], [111, 1, 1, "", "ediff1d"], [112, 1, 1, "", "einsum"], [113, 1, 1, "", "einsum_path"], [114, 1, 1, "", "empty"], [115, 1, 1, "", "empty_like"], [116, 1, 1, "", "equal"], [117, 1, 1, "", "erf"], [118, 1, 1, "", "exp"], [119, 1, 1, "", "exp2"], [120, 1, 1, "", "expand_dims"], [121, 1, 1, "", "expm1"], [122, 1, 1, "", "extract"], [123, 1, 1, "", "eye"], [124, 1, 1, "", "fabs"], [143, 1, 1, "", "fill_diagonal"], [144, 1, 1, "", "finfo"], [145, 1, 1, "", "fix"], [146, 2, 1, "", "flatiter"], [147, 1, 1, "", "flatnonzero"], [148, 1, 1, "", "flip"], [149, 1, 1, "", "fliplr"], [150, 1, 1, "", "flipud"], [151, 1, 1, "", "float_power"], [152, 1, 1, "", "floor"], [153, 1, 1, "", "floor_divide"], [154, 1, 1, "", "fmax"], [155, 1, 1, "", "fmin"], [156, 1, 1, "", "fmod"], [157, 1, 1, "", "from_dlpack"], [158, 1, 1, "", "frombuffer"], [159, 1, 1, "", "fromfile"], [160, 1, 1, "", "fromfunction"], [161, 1, 1, "", "fromiter"], [162, 1, 1, "", "fromstring"], [163, 1, 1, "", "full"], [164, 1, 1, "", "full_like"], [165, 1, 1, "", "gcd"], [166, 1, 1, "", "geomspace"], [167, 1, 1, "", "get_include"], [168, 1, 1, "", "gradient"], [169, 1, 1, "", "greater"], [170, 1, 1, "", "greater_equal"], [171, 1, 1, "", "heaviside"], [172, 1, 1, "", "histogram"], [173, 1, 1, "", "histogram_bin_edges"], [174, 1, 1, "", "hsplit"], [175, 1, 1, "", "hstack"], [176, 1, 1, "", "hypot"], [177, 1, 1, "", "identity"], [178, 1, 1, "", "iinfo"], [179, 1, 1, "", "imag"], [180, 1, 1, "", "indices"], [181, 1, 1, "", "inner"], [182, 1, 1, "", "insert"], [183, 1, 1, "", "invert"], [184, 1, 1, "", "isclose"], [185, 1, 1, "", "iscomplex"], [186, 1, 1, "", "iscomplexobj"], [187, 1, 1, "", "isfinite"], [188, 1, 1, "", "isfortran"], [189, 1, 1, "", "isinf"], [190, 1, 1, "", "isnan"], [191, 1, 1, "", "isneginf"], [192, 1, 1, "", "isposinf"], [193, 1, 1, "", "isreal"], [194, 1, 1, "", "isrealobj"], [195, 1, 1, "", "isscalar"], [196, 1, 1, "", "issubdtype"], [197, 1, 1, "", "ix_"], [198, 1, 1, "", "kron"], [199, 1, 1, "", "lcm"], [200, 1, 1, "", "ldexp"], [201, 1, 1, "", "left_shift"], [202, 1, 1, "", "less"], [203, 1, 1, "", "less_equal"], [234, 1, 1, "", "linspace"], [235, 1, 1, "", "loadtxt"], [236, 1, 1, "", "log"], [237, 1, 1, "", "log10"], [238, 1, 1, "", "log1p"], [239, 1, 1, "", "log2"], [240, 1, 1, "", "logaddexp"], [241, 1, 1, "", "logaddexp2"], [242, 1, 1, "", "logical_and"], [243, 1, 1, "", "logical_not"], [244, 1, 1, "", "logical_or"], [245, 1, 1, "", "logical_xor"], [246, 1, 1, "", "logspace"], [247, 1, 1, "", "logsumexp"], [248, 1, 1, "", "mask_indices"], [249, 1, 1, "", "matmul"], [250, 1, 1, "", "matrix_transpose"], [251, 1, 1, "", "max"], [252, 1, 1, "", "maximum"], [253, 1, 1, "", "mean"], [254, 1, 1, "", "median"], [255, 1, 1, "", "meshgrid"], [256, 5, 1, "", "mgrid"], [257, 1, 1, "", "min"], [258, 1, 1, "", "minimum"], [259, 1, 1, "", "mod"], [260, 1, 1, "", "modf"], [261, 1, 1, "", "moveaxis"], [262, 1, 1, "", "multiply"], [263, 1, 1, "", "nan_to_num"], [264, 1, 1, "", "nanargmax"], [265, 1, 1, "", "nanargmin"], [266, 1, 1, "", "nancumprod"], [267, 1, 1, "", "nancumsum"], [268, 1, 1, "", "nanmax"], [269, 1, 1, "", "nanmean"], [270, 1, 1, "", "nanmin"], [271, 1, 1, "", "nanprod"], [272, 1, 1, "", "nanstd"], [273, 1, 1, "", "nansum"], [274, 1, 1, "", "nanvar"], [275, 3, 1, "", "ndarray"], [387, 1, 1, "", "ndim"], [388, 1, 1, "", "negative"], [389, 1, 1, "", "nextafter"], [390, 1, 1, "", "nonzero"], [391, 1, 1, "", "not_equal"], [392, 5, 1, "", "ogrid"], [393, 1, 1, "", "ones"], [394, 1, 1, "", "ones_like"], [395, 1, 1, "", "outer"], [396, 1, 1, "", "pad"], [397, 1, 1, "", "partition"], [398, 1, 1, "", "permute_dims"], [399, 1, 1, "", "place"], [400, 1, 1, "", "positive"], [401, 1, 1, "", "pow"], [402, 1, 1, "", "power"], [403, 1, 1, "", "prod"], [404, 1, 1, "", "proj"], [405, 1, 1, "", "ptp"], [406, 1, 1, "", "put"], [407, 1, 1, "", "put_along_axis"], [408, 1, 1, "", "putmask"], [409, 1, 1, "", "rad2deg"], [410, 1, 1, "", "radians"], [460, 1, 1, "", "ravel"], [461, 1, 1, "", "ravel_multi_index"], [462, 1, 1, "", "real"], [463, 1, 1, "", "real_if_close"], [464, 1, 1, "", "reciprocal"], [465, 1, 1, "", "reduce_hypot"], [466, 1, 1, "", "remainder"], [467, 1, 1, "", "repeat"], [468, 1, 1, "", "require"], [469, 1, 1, "", "reshape"], [470, 1, 1, "", "resize"], [471, 1, 1, "", "result_type"], [472, 1, 1, "", "right_shift"], [473, 1, 1, "", "rint"], [474, 1, 1, "", "roll"], [475, 1, 1, "", "rollaxis"], [476, 1, 1, "", "rot90"], [477, 1, 1, "", "round"], [478, 1, 1, "", "row_stack"], [479, 1, 1, "", "rsqrt"], [480, 1, 1, "", "searchsorted"], [481, 1, 1, "", "select"], [482, 1, 1, "", "shape"], [483, 1, 1, "", "sign"], [484, 1, 1, "", "signbit"], [485, 1, 1, "", "sin"], [486, 1, 1, "", "sinc"], [487, 1, 1, "", "sinh"], [488, 1, 1, "", "size"], [489, 1, 1, "", "sort"], [490, 1, 1, "", "sort_complex"], [491, 1, 1, "", "spacing"], [492, 1, 1, "", "split"], [493, 1, 1, "", "sqrt"], [494, 1, 1, "", "square"], [495, 1, 1, "", "squeeze"], [496, 1, 1, "", "stack"], [497, 1, 1, "", "std"], [498, 1, 1, "", "subtract"], [499, 1, 1, "", "sum"], [500, 1, 1, "", "swapaxes"], [501, 1, 1, "", "take"], [502, 1, 1, "", "take_along_axis"], [503, 1, 1, "", "tan"], [504, 1, 1, "", "tanh"], [505, 1, 1, "", "tensordot"], [506, 1, 1, "", "tile"], [507, 1, 1, "", "trace"], [508, 1, 1, "", "transpose"], [509, 1, 1, "", "trapezoid"], [510, 1, 1, "", "tri"], [511, 1, 1, "", "tril"], [512, 1, 1, "", "tril_indices"], [513, 1, 1, "", "tril_indices_from"], [514, 1, 1, "", "trim_zeros"], [515, 1, 1, "", "triu"], [516, 1, 1, "", "triu_indices"], [517, 1, 1, "", "triu_indices_from"], [518, 1, 1, "", "true_divide"], [519, 1, 1, "", "trunc"], [520, 1, 1, "", "unique"], [521, 1, 1, "", "unravel_index"], [522, 1, 1, "", "unstack"], [523, 1, 1, "", "unwrap"], [524, 1, 1, "", "vander"], [525, 1, 1, "", "var"], [526, 1, 1, "", "vdot"], [527, 1, 1, "", "vecdot"], [528, 1, 1, "", "vsplit"], [529, 1, 1, "", "vstack"], [530, 1, 1, "", "where"], [531, 1, 1, "", "zeros"], [532, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[107, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[107, 3, 1, "", "T"], [107, 4, 1, "", "__eq__"], [107, 4, 1, "", "__ge__"], [107, 4, 1, "", "__getitem__"], [107, 4, 1, "", "__gt__"], [107, 4, 1, "", "__le__"], [107, 4, 1, "", "__len__"], [107, 4, 1, "", "__lt__"], [107, 4, 1, "", "__ne__"], [107, 4, 1, "", "__setitem__"], [107, 4, 1, "", "all"], [107, 4, 1, "", "any"], [107, 4, 1, "", "argmax"], [107, 4, 1, "", "argmin"], [107, 4, 1, "", "argsort"], [107, 4, 1, "", "asnumpy"], [107, 4, 1, "", "astype"], [107, 4, 1, "", "choose"], [107, 4, 1, "", "clip"], [107, 4, 1, "", "conj"], [107, 4, 1, "", "conjugate"], [107, 4, 1, "", "copy"], [107, 4, 1, "", "cumprod"], [107, 4, 1, "", "cumsum"], [107, 3, 1, "", "device"], [107, 4, 1, "", "diagonal"], [107, 4, 1, "", "dot"], [107, 3, 1, "", "dtype"], [107, 4, 1, "", "fill"], [107, 3, 1, "", "flags"], [107, 3, 1, "", "flat"], [107, 4, 1, "", "flatten"], [107, 4, 1, "", "get_array"], [107, 3, 1, "", "imag"], [107, 4, 1, "", "item"], [107, 3, 1, "", "itemsize"], [107, 3, 1, "", "mT"], [107, 4, 1, "", "max"], [107, 4, 1, "", "mean"], [107, 4, 1, "", "min"], [107, 3, 1, "", "nbytes"], [107, 3, 1, "", "ndim"], [107, 4, 1, "", "nonzero"], [107, 4, 1, "", "partition"], [107, 4, 1, "", "prod"], [107, 4, 1, "", "put"], [107, 4, 1, "", "ravel"], [107, 3, 1, "", "real"], [107, 4, 1, "", "repeat"], [107, 4, 1, "", "reshape"], [107, 4, 1, "", "round"], [107, 4, 1, "", "searchsorted"], [107, 3, 1, "", "shape"], [107, 3, 1, "", "size"], [107, 4, 1, "", "sort"], [107, 4, 1, "", "squeeze"], [107, 4, 1, "", "std"], [107, 3, 1, "", "strides"], [107, 4, 1, "", "sum"], [107, 4, 1, "", "swapaxes"], [107, 3, 1, "", "sycl_context"], [107, 3, 1, "", "sycl_device"], [107, 3, 1, "", "sycl_queue"], [107, 4, 1, "", "take"], [107, 4, 1, "", "to_device"], [107, 4, 1, "", "trace"], [107, 4, 1, "", "transpose"], [107, 3, 1, "", "usm_type"], [107, 4, 1, "", "var"]], "dpnp.dtype": [[110, 4, 1, "", "__eq__"], [110, 4, 1, "", "__ge__"], [110, 4, 1, "", "__getitem__"], [110, 4, 1, "", "__gt__"], [110, 4, 1, "", "__le__"], [110, 4, 1, "", "__len__"], [110, 4, 1, "", "__lt__"], [110, 4, 1, "", "__ne__"], [110, 3, 1, "", "alignment"], [110, 3, 1, "", "base"], [110, 3, 1, "", "byteorder"], [110, 3, 1, "", "char"], [110, 3, 1, "", "descr"], [110, 3, 1, "", "fields"], [110, 3, 1, "", "flags"], [110, 3, 1, "", "hasobject"], [110, 3, 1, "", "isalignedstruct"], [110, 3, 1, "", "isbuiltin"], [110, 3, 1, "", "isnative"], [110, 3, 1, "", "itemsize"], [110, 3, 1, "", "kind"], [110, 3, 1, "", "metadata"], [110, 3, 1, "", "name"], [110, 3, 1, "", "names"], [110, 3, 1, "", "ndim"], [110, 4, 1, "", "newbyteorder"], [110, 3, 1, "", "num"], [110, 3, 1, "", "shape"], [110, 3, 1, "", "str"], [110, 3, 1, "", "subdtype"], [110, 3, 1, "", "type"]], "dpnp.fft": [[125, 1, 1, "", "fft"], [126, 1, 1, "", "fft2"], [127, 1, 1, "", "fftfreq"], [128, 1, 1, "", "fftn"], [129, 1, 1, "", "fftshift"], [130, 1, 1, "", "hfft"], [131, 1, 1, "", "ifft"], [132, 1, 1, "", "ifft2"], [133, 1, 1, "", "ifftn"], [134, 1, 1, "", "ifftshift"], [135, 1, 1, "", "ihfft"], [136, 1, 1, "", "irfft"], [137, 1, 1, "", "irfft2"], [138, 1, 1, "", "irfftn"], [139, 1, 1, "", "rfft"], [140, 1, 1, "", "rfft2"], [141, 1, 1, "", "rfftfreq"], [142, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[146, 4, 1, "", "__eq__"], [146, 4, 1, "", "__ge__"], [146, 4, 1, "", "__getitem__"], [146, 4, 1, "", "__gt__"], [146, 4, 1, "", "__iter__"], [146, 4, 1, "", "__le__"], [146, 4, 1, "", "__lt__"], [146, 4, 1, "", "__ne__"], [146, 4, 1, "", "__next__"], [146, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[204, 1, 1, "", "cholesky"], [205, 1, 1, "", "cond"], [206, 1, 1, "", "cross"], [207, 1, 1, "", "det"], [208, 1, 1, "", "diagonal"], [209, 1, 1, "", "eig"], [210, 1, 1, "", "eigh"], [211, 1, 1, "", "eigvals"], [212, 1, 1, "", "eigvalsh"], [213, 1, 1, "", "inv"], [214, 1, 1, "", "lstsq"], [215, 1, 1, "", "matmul"], [216, 1, 1, "", "matrix_norm"], [217, 1, 1, "", "matrix_power"], [218, 1, 1, "", "matrix_rank"], [219, 1, 1, "", "multi_dot"], [220, 1, 1, "", "norm"], [221, 1, 1, "", "outer"], [222, 1, 1, "", "pinv"], [223, 1, 1, "", "qr"], [224, 1, 1, "", "slogdet"], [225, 1, 1, "", "solve"], [226, 1, 1, "", "svd"], [227, 1, 1, "", "svdvals"], [228, 1, 1, "", "tensordot"], [229, 1, 1, "", "tensorinv"], [230, 1, 1, "", "tensorsolve"], [231, 1, 1, "", "trace"], [232, 1, 1, "", "vecdot"], [233, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[276, 6, 1, "", "T"], [277, 4, 1, "", "__abs__"], [278, 4, 1, "", "__add__"], [279, 4, 1, "", "__and__"], [280, 4, 1, "", "__bool__"], [281, 4, 1, "", "__complex__"], [282, 4, 1, "", "__copy__"], [283, 4, 1, "", "__eq__"], [284, 4, 1, "", "__float__"], [285, 4, 1, "", "__floordiv__"], [286, 4, 1, "", "__ge__"], [287, 4, 1, "", "__getitem__"], [288, 4, 1, "", "__gt__"], [289, 4, 1, "", "__iadd__"], [290, 4, 1, "", "__iand__"], [291, 4, 1, "", "__ifloordiv__"], [292, 4, 1, "", "__ilshift__"], [293, 4, 1, "", "__imatmul__"], [294, 4, 1, "", "__imod__"], [295, 4, 1, "", "__imul__"], [296, 4, 1, "", "__int__"], [297, 4, 1, "", "__invert__"], [298, 4, 1, "", "__ior__"], [299, 4, 1, "", "__ipow__"], [300, 4, 1, "", "__irshift__"], [301, 4, 1, "", "__isub__"], [302, 4, 1, "", "__itruediv__"], [303, 4, 1, "", "__ixor__"], [304, 4, 1, "", "__le__"], [305, 4, 1, "", "__len__"], [306, 4, 1, "", "__lshift__"], [307, 4, 1, "", "__lt__"], [308, 4, 1, "", "__matmul__"], [309, 4, 1, "", "__mod__"], [310, 4, 1, "", "__mul__"], [311, 4, 1, "", "__ne__"], [312, 4, 1, "", "__neg__"], [313, 4, 1, "", "__new__"], [314, 4, 1, "", "__or__"], [315, 4, 1, "", "__pos__"], [316, 4, 1, "", "__pow__"], [317, 4, 1, "", "__radd__"], [318, 4, 1, "", "__rand__"], [319, 4, 1, "", "__repr__"], [320, 4, 1, "", "__rfloordiv__"], [321, 4, 1, "", "__rlshift__"], [322, 4, 1, "", "__rmatmul__"], [323, 4, 1, "", "__rmod__"], [324, 4, 1, "", "__rmul__"], [325, 4, 1, "", "__ror__"], [326, 4, 1, "", "__rpow__"], [327, 4, 1, "", "__rrshift__"], [328, 4, 1, "", "__rshift__"], [329, 4, 1, "", "__rsub__"], [330, 4, 1, "", "__rtruediv__"], [331, 4, 1, "", "__rxor__"], [332, 4, 1, "", "__setitem__"], [333, 4, 1, "", "__str__"], [334, 4, 1, "", "__sub__"], [335, 4, 1, "", "__truediv__"], [336, 4, 1, "", "__xor__"], [337, 4, 1, "", "all"], [338, 4, 1, "", "any"], [339, 4, 1, "", "argmax"], [340, 4, 1, "", "argmin"], [341, 4, 1, "", "argsort"], [342, 4, 1, "", "astype"], [343, 4, 1, "", "choose"], [344, 4, 1, "", "clip"], [345, 4, 1, "", "conj"], [346, 4, 1, "", "conjugate"], [347, 4, 1, "", "copy"], [348, 4, 1, "", "cumprod"], [349, 4, 1, "", "cumsum"], [350, 4, 1, "", "diagonal"], [351, 6, 1, "", "dtype"], [352, 4, 1, "", "fill"], [353, 6, 1, "", "flags"], [354, 6, 1, "", "flat"], [355, 4, 1, "", "flatten"], [356, 6, 1, "", "imag"], [357, 4, 1, "", "item"], [358, 6, 1, "", "itemsize"], [359, 6, 1, "", "mT"], [360, 4, 1, "", "max"], [361, 4, 1, "", "mean"], [362, 4, 1, "", "min"], [363, 6, 1, "", "nbytes"], [364, 6, 1, "", "ndim"], [365, 4, 1, "", "nonzero"], [366, 4, 1, "", "partition"], [367, 4, 1, "", "prod"], [368, 4, 1, "", "put"], [369, 4, 1, "", "ravel"], [370, 6, 1, "", "real"], [371, 4, 1, "", "repeat"], [372, 4, 1, "", "reshape"], [373, 4, 1, "", "round"], [374, 4, 1, "", "searchsorted"], [375, 6, 1, "", "shape"], [376, 6, 1, "", "size"], [377, 4, 1, "", "sort"], [378, 4, 1, "", "squeeze"], [379, 4, 1, "", "std"], [380, 6, 1, "", "strides"], [381, 4, 1, "", "sum"], [382, 4, 1, "", "swapaxes"], [383, 4, 1, "", "take"], [384, 4, 1, "", "trace"], [385, 4, 1, "", "transpose"], [386, 4, 1, "", "var"]], "dpnp.random": [[411, 2, 1, "", "RandomState"], [412, 1, 1, "", "beta"], [413, 1, 1, "", "binomial"], [414, 1, 1, "", "bytes"], [415, 1, 1, "", "chisquare"], [416, 1, 1, "", "choice"], [417, 1, 1, "", "dirichlet"], [418, 1, 1, "", "exponential"], [419, 1, 1, "", "f"], [420, 1, 1, "", "gamma"], [421, 1, 1, "", "geometric"], [422, 1, 1, "", "gumbel"], [423, 1, 1, "", "hypergeometric"], [424, 1, 1, "", "laplace"], [425, 1, 1, "", "logistic"], [426, 1, 1, "", "lognormal"], [427, 1, 1, "", "logseries"], [428, 1, 1, "", "multinomial"], [429, 1, 1, "", "multivariate_normal"], [430, 1, 1, "", "negative_binomial"], [431, 1, 1, "", "noncentral_chisquare"], [432, 1, 1, "", "noncentral_f"], [433, 1, 1, "", "normal"], [434, 1, 1, "", "pareto"], [435, 1, 1, "", "permutation"], [436, 1, 1, "", "poisson"], [437, 1, 1, "", "power"], [438, 1, 1, "", "rand"], [439, 1, 1, "", "randint"], [440, 1, 1, "", "randn"], [441, 1, 1, "", "random"], [442, 1, 1, "", "random_integers"], [443, 1, 1, "", "random_sample"], [444, 1, 1, "", "ranf"], [445, 1, 1, "", "rayleigh"], [446, 1, 1, "", "sample"], [447, 1, 1, "", "seed"], [448, 1, 1, "", "shuffle"], [449, 1, 1, "", "standard_cauchy"], [450, 1, 1, "", "standard_exponential"], [451, 1, 1, "", "standard_gamma"], [452, 1, 1, "", "standard_normal"], [453, 1, 1, "", "standard_t"], [454, 1, 1, "", "triangular"], [455, 1, 1, "", "uniform"], [456, 1, 1, "", "vonmises"], [457, 1, 1, "", "wald"], [458, 1, 1, "", "weibull"], [459, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[411, 4, 1, "", "__eq__"], [411, 4, 1, "", "__ge__"], [411, 4, 1, "", "__gt__"], [411, 4, 1, "", "__le__"], [411, 4, 1, "", "__lt__"], [411, 4, 1, "", "__ne__"], [411, 4, 1, "", "get_state"], [411, 4, 1, "", "get_sycl_device"], [411, 4, 1, "", "get_sycl_queue"], [411, 4, 1, "", "normal"], [411, 4, 1, "", "rand"], [411, 4, 1, "", "randint"], [411, 4, 1, "", "randn"], [411, 4, 1, "", "random_sample"], [411, 4, 1, "", "standard_normal"], [411, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 23, 91, 94, 107, 110, 111, 126, 128, 130, 132, 133, 135, 137, 138, 140, 142, 143, 158, 159, 214, 218, 220, 222, 226, 227, 228, 351, 385, 411, 412, 413, 418, 419, 420, 422, 423, 424, 425, 426, 428, 430, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 469, 505, 506, 540], "0": [0, 4, 6, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 171, 172, 173, 174, 177, 180, 181, 182, 184, 187, 189, 190, 191, 192, 197, 198, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 347, 350, 352, 356, 357, 359, 370, 373, 375, 377, 379, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 433, 435, 436, 437, 438, 441, 443, 444, 445, 446, 449, 452, 454, 455, 456, 461, 464, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 530, 531, 532, 540], "00": [87, 113, 125, 485], "000": [263, 413], "00000000005e": 121, "00000000e": [125, 263], "000000082740371e": 121, "000000e": [87, 485], "00001e10": [18, 184], "0001e10": 184, "000e": 113, "000j": 263, "002": 263, "00225109": 85, "00867716": 415, "01": [85, 113], "02": [85, 113, 263], "03": 263, "03047091": 85, "03088525e": 114, "0342579": 85, "0396842": 246, "04": 113, "04719755": 410, "04921661": 411, "04923628": 486, "05": [18, 113, 184], "05846808": 486, "0614962j": [126, 140], "06310682": 411, "06682066": 486, "07": 263, "07012729": 85, "0728188e": 85, "07944154": [92, 224], "08": [18, 87, 113, 151, 184, 429, 485], "08156915": 411, "08409186": 486, "08504448": 486, "08903844": 486, "09373496": 85, "0943951": 410, "09640474": 241, "09861229": [92, 224, 238], "0d": 36, "0dev1": 6, "0j": [21, 106, 107, 185, 186, 193, 194, 215, 249, 356, 370, 483], "0th": [228, 505], "1": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 67, 68, 69, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 185, 186, 188, 193, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 341, 342, 347, 350, 352, 355, 356, 357, 359, 364, 366, 370, 375, 377, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 416, 418, 420, 422, 424, 425, 426, 428, 429, 430, 433, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 450, 452, 455, 460, 461, 462, 463, 464, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540], "10": [0, 4, 15, 16, 27, 29, 33, 34, 49, 58, 62, 65, 75, 82, 92, 93, 94, 97, 99, 100, 103, 104, 107, 108, 110, 112, 113, 121, 122, 129, 141, 163, 166, 172, 173, 174, 179, 184, 197, 198, 200, 201, 231, 232, 236, 237, 238, 239, 246, 247, 254, 262, 372, 396, 405, 407, 411, 413, 423, 435, 465, 471, 472, 474, 477, 480, 492, 496, 502, 511, 512, 513, 515, 516, 517, 522, 527, 528, 530], "100": [99, 141, 166, 184, 198, 219, 246, 396, 423, 449, 463, 523], "1000": [71, 166, 219, 246, 412, 413, 418, 420, 422, 423, 424, 425, 426, 433, 434, 437, 439, 441, 444, 446, 452, 456, 457, 458, 459, 463, 509], "10000": [94, 219, 421, 436, 445, 455], "100000": 430, "1000000": [449, 451, 453, 454], "1024": 0, "10394325": 486, "105": 113, "11": [33, 34, 58, 88, 97, 99, 100, 107, 108, 122, 168, 174, 220, 231, 372, 430, 439, 477, 480, 487, 511, 512, 513, 515, 516, 517, 522, 528, 530], "110": [112, 181], "111111": 263, "113": 240, "11570901": 411, "11643488": 486, "1179187": 411, "118033988749895": 497, "119": 112, "1196081": 411, "12": [10, 33, 34, 57, 91, 96, 97, 99, 100, 104, 108, 110, 112, 122, 126, 140, 165, 174, 179, 199, 227, 246, 403, 405, 410, 435, 461, 480, 511, 512, 513, 515, 516, 517, 522, 528, 530], "120": [93, 96], "123": [85, 107, 113, 357], "125": [151, 401, 402, 524], "12613779": 486, "127": 166, "128": [0, 166, 263], "12th": 112, "13": [10, 33, 34, 61, 63, 99, 100, 106, 108, 110, 112, 174, 182, 183, 215, 249, 461, 480, 512, 513, 516, 517, 521, 522, 528], "130": 112, "134": 181, "13436424": 411, "135": [31, 53], "13710533": 415, "139884456208480": 17, "13j": 463, "14": [33, 34, 60, 61, 63, 99, 100, 106, 108, 145, 174, 181, 183, 228, 480, 505, 512, 513, 516, 517, 522, 528], "140": 523, "140053638309840": 22, "14157194": 509, "14159265": [14, 26, 31, 53, 95, 410], "1424356": 85, "14243561": 85, "14423775e": 125, "14j": 463, "15": [33, 34, 94, 99, 100, 104, 108, 112, 130, 135, 174, 220, 237, 435, 480, 512, 513, 516, 517, 522, 528], "150": 96, "15591488": 486, "15716429": 85, "15888336": 246, "15j": 463, "16": [6, 60, 99, 100, 108, 110, 125, 151, 161, 166, 168, 174, 233, 262, 401, 402, 463, 481, 503, 512, 513, 516, 517, 522, 528], "1621": [461, 521], "16227766": [205, 465], "16394577": 411, "164": 241, "1643624": 85, "166": 241, "16j": 125, "17": [6, 85, 125, 126, 140, 522], "17157288": [210, 212], "17281316e": 125, "17615308": 85, "177": [166, 246], "17j": 125, "18": [6, 93, 110, 111, 112, 128, 206, 216, 220, 246, 522], "180": [31, 53, 95, 96, 112, 409, 523, 547], "1805": 10, "18236388": 411, "18557831": 411, "1887902": 410, "18920668": 486, "19": [10, 89, 110, 461, 522, 523], "19083664": 85, "19083665": 85, "1923875335537315": 440, "19245009": 479, "1924881e": 151, "1965": 10, "19722458": 92, "1985": 220, "1d": [24, 111, 406, 407, 502, 509], "1e": [18, 121, 184, 209, 237, 238, 240, 241, 429], "1e10": [18, 184], "1j": [12, 13, 21, 29, 30, 39, 49, 52, 79, 80, 107, 136, 179, 185, 193, 209, 221, 226, 356, 370, 395, 462, 490, 494], "1th": [228, 505], "2": [0, 3, 4, 10, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 58, 60, 62, 64, 65, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 185, 188, 193, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 342, 347, 350, 352, 355, 357, 359, 364, 366, 375, 376, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 409, 410, 411, 415, 419, 423, 429, 435, 438, 440, 451, 453, 454, 457, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 487, 488, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532], "20": [62, 93, 104, 112, 141, 165, 180, 184, 198, 199, 200, 201, 220, 407, 413, 428, 480, 502, 522, 523], "20000": 413, "2007": 10, "200e": 113, "20477401j": [126, 140], "2048": 0, "2066992e": 85, "21": [6, 94, 110, 522], "210": 96, "2123185": 85, "215": 246, "21623621": 486, "21941987": 411, "21968665": 411, "22": [406, 461, 521, 522], "220": 523, "220446049250313e": 463, "222222": 263, "22460635e": 503, "22464680e": 125, "22497216": 220, "22776602": 246, "23": [411, 461, 522], "230": 112, "23387232": 486, "23598776": 410, "23606798": 220, "24": [33, 34, 91, 93, 107, 111, 112, 181, 198, 206, 228, 229, 231, 375, 403, 505, 507, 522], "240": 96, "24264069": 220, "24544512": 411, "247219128924647": 272, "25": [110, 112, 117, 127, 168, 172, 173, 213, 234, 262, 274, 440, 449, 481, 524, 525], "255": [60, 64], "25506903": 411, "256": [0, 166], "26": [66, 112], "260": 523, "26618007j": 239, "27": [72, 151, 246, 401, 402, 479, 524], "270": 96, "28": 112, "28000000e": 263, "2800000e": 263, "283185307179586": 523, "28318531": 523, "28352814": 411, "2858386e": 85, "28904982": 241, "296": 6, "297": 10, "2d": [226, 249, 476, 520], "2e": 94, "2f": 0, "2j": [79, 80, 106, 125, 179, 185, 193, 210, 212, 215, 249, 462, 483, 490, 526], "2k": 523, "3": [0, 3, 4, 6, 14, 16, 23, 24, 25, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 62, 65, 66, 67, 68, 69, 72, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 128, 129, 130, 134, 135, 137, 138, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 166, 168, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 186, 188, 193, 194, 195, 197, 198, 201, 205, 206, 207, 208, 209, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 347, 350, 355, 357, 359, 364, 366, 375, 376, 377, 385, 387, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 410, 411, 415, 419, 426, 429, 435, 438, 439, 440, 450, 454, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 484, 488, 489, 490, 492, 493, 495, 496, 497, 498, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "30": [91, 96, 107, 112, 141, 376, 407, 410, 502, 526], "300": [96, 523], "3003003": 464, "301": 10, "30102999566": 237, "3012989": 487, "30258509": [92, 247], "308": 263, "308j": 263, "31": [6, 66, 166, 461, 521], "312": 114, "316": 246, "32": [110, 112, 166, 228, 271, 273, 505], "33": 464, "330": [6, 96], "333": 219, "33333333": 263, "3333333e": 263, "33340275": 509, "33486982e": 125, "33836967": 411, "340": 523, "34074171": 411, "34132519": 246, "34846923": [216, 220], "34960421": 246, "35": [112, 421], "35106603e": [216, 220], "35348576": 233, "35355338": 479, "36": 91, "360": 523, "37": [461, 477, 521], "371139e": 87, "38": [181, 413], "380": 523, "38268343": 210, "38268343j": 210, "38629436": 92, "38885": 413, "389": 6, "389056099": [118, 121], "39295758": 411, "39783284": 85, "3e": [0, 94, 463], "3j": [106, 215, 249, 490], "3rd": [77, 78, 108, 492], "3x3": 248, "3x8000": 450, "4": [0, 16, 17, 23, 24, 25, 33, 34, 36, 38, 39, 41, 55, 57, 58, 60, 64, 67, 75, 76, 77, 78, 81, 84, 85, 87, 89, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 122, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 147, 148, 151, 153, 154, 155, 159, 160, 161, 163, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 185, 188, 193, 197, 198, 200, 203, 206, 207, 208, 213, 215, 216, 217, 218, 220, 224, 227, 228, 229, 230, 231, 233, 234, 239, 242, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 264, 265, 267, 269, 272, 274, 347, 350, 355, 359, 364, 366, 375, 377, 385, 387, 390, 392, 394, 396, 398, 401, 402, 403, 405, 406, 410, 411, 412, 415, 435, 440, 456, 460, 461, 462, 463, 466, 467, 469, 470, 474, 475, 476, 477, 478, 481, 483, 486, 488, 489, 492, 493, 496, 497, 498, 500, 501, 505, 506, 508, 509, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532], "40": [6, 62, 112, 141, 200, 201, 407, 502], "40882036": 411, "4096": 0, "41": [461, 486, 521], "41421356": [205, 220], "42": 481, "420": 523, "433": 6, "44": [399, 406], "4400": [112, 228, 505], "443469": 246, "44509285e": 125, "45": [21, 31, 53, 233], "45206687": 85, "4532": [112, 228, 505], "46": 112, "460": [6, 523], "46394577": 411, "464": 246, "46436927": 85, "4643693": 85, "4664": [112, 228, 505], "47": 6, "4730": [112, 228, 505], "4796": [112, 228, 505], "48": [6, 91], "48093112": 411, "48613152": 85, "48613155": 85, "4874": [112, 228, 505], "48927254": 411, "49": 6, "4928": [112, 228, 505], "49543509": 411, "49778714": 523, "499128": 106, "4d": 226, "4e": 463, "4j": [179, 462, 526], "4x4": [512, 516], "5": [0, 16, 17, 22, 23, 24, 25, 32, 33, 36, 41, 54, 55, 58, 59, 60, 62, 64, 65, 66, 67, 68, 73, 75, 77, 78, 81, 84, 85, 86, 89, 91, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 117, 122, 126, 127, 129, 137, 140, 141, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 165, 166, 168, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 185, 188, 193, 197, 198, 200, 201, 204, 206, 208, 210, 212, 213, 219, 220, 221, 225, 228, 231, 232, 233, 234, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 269, 272, 342, 347, 357, 359, 376, 387, 390, 392, 393, 394, 395, 396, 398, 401, 402, 405, 406, 410, 411, 412, 413, 415, 418, 430, 434, 435, 436, 437, 440, 443, 458, 460, 461, 462, 463, 464, 466, 469, 472, 473, 474, 475, 476, 477, 478, 480, 481, 483, 488, 490, 492, 496, 497, 499, 500, 501, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532], "50": [126, 140, 141, 166, 198, 228, 240, 241, 246, 407, 502, 505, 509, 530], "500": [198, 523], "5018": [112, 228, 505], "50455115": 486, "5091786": 88, "512": 0, "5147297e": 85, "5162": [112, 228, 505], "52069395e": 125, "52359878": 410, "52928804": 411, "53": 6, "5306": [112, 228, 505], "53702235": 85, "5399045e": 151, "54": [6, 411], "540": 523, "54288406": 411, "54465213": 411, "545": 6, "548739": 487, "54930614": [32, 54], "55": [399, 406, 481], "5555555555555554": 274, "562": 246, "5620499351813308": [12, 13], "56920387": 411, "5707963267948966": [28, 48], "57079633": [21, 31, 53, 410, 523], "5790461": 85, "57904613": 85, "58997253": 411, "591953": 88, "5e": [240, 241], "5j": [256, 392, 490], "6": [0, 4, 16, 23, 24, 25, 33, 34, 36, 41, 55, 58, 64, 66, 68, 75, 77, 78, 84, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 116, 121, 122, 127, 130, 141, 148, 151, 164, 165, 168, 174, 175, 179, 180, 181, 182, 188, 197, 198, 199, 206, 208, 216, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 246, 248, 250, 254, 266, 267, 271, 347, 357, 359, 375, 387, 390, 394, 396, 399, 401, 402, 405, 411, 428, 430, 435, 440, 460, 461, 462, 468, 469, 474, 475, 476, 477, 478, 481, 488, 490, 492, 496, 498, 499, 500, 501, 505, 507, 509, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 526, 527, 528, 529, 530, 532], "60": [91, 96, 112, 199, 228, 407, 502, 505, 523, 530], "600": 198, "60943791": 92, "6173796": 85, "61799388": 410, "62": 181, "6227766": 166, "62318272": 415, "62341325": 166, "624": 113, "63": 166, "63317787e": 503, "63522211": 411, "63836967": 411, "64": [0, 4, 112, 151, 166, 271, 273, 401, 402, 477], "64000": 112, "65157276": 85, "6515728": 85, "65354985": 85, "65745445": [15, 27], "6580445": 85, "66519143": 410, "6666666666666665": 269, "67": 112, "67305985": 158, "673174": 411, "67718303": 411, "6883078": 85, "69295758": 411, "69314718": [92, 224, 238], "6990877": 411, "6j": [179, 462, 526], "7": [16, 18, 23, 24, 25, 41, 55, 68, 73, 75, 84, 85, 89, 91, 94, 97, 98, 99, 100, 102, 103, 105, 107, 108, 111, 118, 122, 148, 152, 166, 168, 174, 181, 182, 184, 197, 198, 208, 216, 220, 226, 228, 231, 233, 248, 250, 254, 259, 262, 357, 359, 390, 396, 404, 405, 411, 435, 461, 462, 466, 471, 473, 474, 476, 492, 498, 499, 500, 501, 505, 511, 512, 513, 515, 516, 517, 518, 519, 521, 522, 523, 526, 528, 530], "70": [198, 526, 530], "700": 198, "700e": 113, "70710677": [107, 356, 370], "70710678": [205, 209], "70710678j": 209, "70882036": 411, "7110255": 85, "71102554": 85, "71238898": 410, "718281828": [118, 121], "72": 91, "720": [93, 523], "72075441": 246, "72450536": 85, "72538256": [29, 49], "74165739": 220, "742278e": 485, "74596669": [216, 220], "7485727": 85, "74857277": 85, "74921661": 411, "75": [58, 117, 127, 168, 173, 213, 234], "754": 144, "75682673": 486, "75958653": 410, "76096244": 411, "76377462": 411, "77447665": 241, "78539816": [21, 30, 31, 52, 53, 523], "78927254": 411, "79175947": 92, "7937219": 85, "79727215": 85, "7972722": 85, "79769313e": 263, "7j": 404, "8": [4, 16, 18, 23, 24, 41, 55, 72, 75, 84, 91, 97, 98, 99, 100, 102, 103, 107, 108, 110, 112, 113, 122, 125, 127, 141, 142, 148, 151, 166, 168, 174, 179, 182, 184, 197, 207, 208, 220, 224, 226, 227, 228, 229, 231, 232, 233, 234, 246, 248, 250, 359, 375, 390, 396, 401, 402, 403, 405, 411, 435, 454, 461, 462, 474, 476, 479, 485, 492, 501, 505, 507, 509, 511, 512, 513, 515, 516, 517, 521, 522, 523, 524, 527, 528, 530], "80": [110, 112, 530], "8000": 450, "8012391e": 85, "80226506": 411, "8058837395885292": 233, "8104691": 85, "81715362": 411, "827941": [166, 246], "82842712": [210, 212], "8399546e": 85, "84086883": 85, "84288406": 411, "84401099": 411, "84743374": 411, "84803548": 220, "85": 112, "86": 181, "87649168": 240, "88": 111, "88178420e": 125, "881943016134134": 233, "88194302": 233, "88997253": 411, "8900264": 85, "89002645": 85, "89920014": 415, "8f": 110, "8j": 526, "9": [4, 16, 23, 24, 41, 55, 75, 84, 85, 91, 94, 97, 98, 99, 100, 102, 105, 107, 108, 112, 114, 122, 125, 128, 129, 134, 145, 151, 153, 161, 166, 168, 174, 184, 197, 208, 209, 214, 216, 220, 222, 223, 226, 227, 228, 231, 233, 246, 248, 262, 263, 357, 390, 405, 411, 413, 415, 435, 461, 462, 474, 492, 493, 498, 505, 511, 512, 513, 515, 516, 517, 518, 521, 522, 523, 524, 528, 530], "90": [21, 96, 409, 476, 530], "9011005": 85, "917152": 504, "92387953": 210, "92387953j": 210, "9305482": 85, "93548928": 486, "9377134e": 85, "9387854e": 85, "9393724": 85, "9393725": 85, "94": 112, "94591015": 92, "95": 214, "9520904e": 85, "95799250e": 125, "968541": 85, "9685411": 85, "9724453": 85, "98": [215, 249], "98024613": 246, "9875833": 85, "99": [111, 238, 407], "9909503": 85, "99095035": 85, "99322285": [15, 27], "994938": 85, "9949381": 85, "9951523": 85, "99532227": 117, "996272": 504, "99822295": [29, 49], "99853728": 117, "999": [113, 182], "9990000e": 263, "99959305": 117, "99989938": 117, "9999": 263, "99997791": 117, "9999999": 85, "99999994": 85, "999999e": 184, "A": [10, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 76, 79, 80, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 126, 127, 128, 131, 132, 133, 137, 138, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 174, 176, 177, 179, 180, 182, 183, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 208, 210, 211, 212, 214, 218, 219, 220, 223, 224, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 252, 254, 256, 258, 259, 262, 266, 267, 271, 273, 342, 347, 355, 357, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 404, 409, 410, 411, 413, 430, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 460, 461, 462, 464, 466, 469, 472, 473, 476, 479, 483, 484, 485, 486, 487, 491, 492, 493, 494, 498, 500, 501, 503, 504, 505, 506, 508, 510, 512, 514, 516, 518, 519, 524, 527, 528, 530, 531, 532, 547], "AND": [17, 60, 61, 63, 64, 66, 183, 242, 243, 244, 245], "And": [4, 50, 51, 99, 107, 342, 512, 516], "As": 520, "Be": 209, "Being": 3, "But": [4, 110], "By": [33, 34, 44, 51, 91, 107, 126, 130, 132, 136, 138, 142, 166, 214, 234, 246, 249, 251, 253, 257, 264, 265, 268, 269, 270, 271, 272, 273, 274, 342, 467, 474, 488, 497, 501, 510, 512, 514, 516, 525, 527], "For": [0, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 352, 355, 356, 357, 364, 370, 372, 375, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540, 547], "If": [4, 10, 12, 13, 17, 18, 22, 23, 25, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 58, 70, 75, 77, 78, 85, 89, 91, 92, 93, 94, 97, 98, 102, 103, 106, 107, 108, 110, 111, 112, 113, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 148, 154, 155, 157, 162, 166, 168, 172, 173, 174, 175, 179, 180, 181, 182, 184, 188, 191, 192, 193, 204, 206, 214, 216, 217, 218, 219, 220, 222, 223, 226, 228, 230, 231, 233, 234, 235, 246, 247, 251, 252, 253, 254, 255, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 359, 377, 398, 399, 403, 406, 407, 411, 433, 455, 462, 463, 465, 467, 468, 469, 470, 474, 477, 478, 480, 489, 492, 495, 496, 497, 499, 500, 501, 502, 505, 506, 507, 508, 509, 520, 523, 524, 525, 526, 527, 528, 529, 530, 540, 547], "In": [4, 10, 33, 34, 85, 91, 93, 94, 112, 113, 131, 132, 133, 136, 138, 168, 204, 211, 219, 223, 241, 246, 266, 267, 269, 271, 273, 403, 406, 411, 455, 460, 461, 469, 470, 499, 501, 519], "It": [4, 10, 17, 22, 23, 24, 33, 34, 75, 93, 94, 104, 106, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 168, 182, 210, 212, 241, 249, 253, 254, 264, 265, 266, 267, 268, 269, 270, 272, 274, 396, 403, 469, 470, 481, 491, 497, 499, 501, 525, 547], "Its": [75, 229, 407, 507], "NOT": [61, 63, 183, 242, 243, 244, 245], "No": [43, 44, 112, 204], "Not": [17, 22, 44, 187, 263, 266, 267, 268, 270, 271, 273, 403], "OR": [22, 60, 61, 63, 64, 66, 183, 242, 243, 244, 245], "On": 4, "One": [55, 56, 57, 91, 109, 110, 136, 221, 396, 469], "Ones": 38, "Or": [168, 509], "That": 248, "The": [3, 4, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 183, 184, 186, 187, 188, 189, 190, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 252, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 342, 347, 356, 359, 364, 366, 370, 375, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 414, 416, 417, 427, 432, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 532, 540, 543, 547], "Then": [10, 45, 47, 248], "There": [10, 234, 520], "These": [4, 23, 110, 112, 113, 120, 248, 261, 407, 502, 512, 516, 540, 543], "To": [4, 130, 136, 138, 151, 390, 523], "With": [33, 34, 58, 89, 174, 216, 220, 233, 251, 257, 264, 265, 271, 273, 403, 499, 528], "_": [0, 173, 496, 509], "__array_interface__": 110, "__bool__": 540, "__dlpack__": 157, "__dlpack_device__": 157, "__eq__": [107, 110, 146, 411], "__ge__": [107, 110, 146, 411], "__getitem__": [107, 110, 146], "__gt__": [107, 110, 146, 411], "__iter__": 146, "__le__": [107, 110, 146, 411], "__len__": [107, 110], "__lt__": [107, 110, 146, 411], "__main__": 0, "__name__": 0, "__ne__": [107, 110, 146, 411], "__next__": 146, "__setitem__": [107, 146], "__sycl_usm_array_interface__": 46, "_core": 110, "_dtypes_list": 0, "_f": 220, "a1": [39, 40], "a2": [39, 40], "a_": [10, 220], "a_ax": [228, 505], "a_i": [232, 527], "a_k": 10, "a_m": 10, "a_resamp": 136, "ab": [6, 10, 13, 18, 184, 220], "abc": 112, "abcd": 113, "abl": 220, "about": [45, 47, 107, 144, 209, 353, 396, 468, 540], "abov": [3, 14, 15, 26, 27, 28, 29, 32, 48, 49, 54, 92, 98, 101, 128, 133, 138, 142, 180, 208, 223, 231, 247, 263, 465, 510, 511, 515], "absolut": [6, 12, 18, 21, 124, 165, 184, 199, 224, 272, 274, 404, 463, 497, 523, 525, 547], "accept": [24, 112, 221, 411, 512, 516], "access": [10, 99, 100, 143, 248, 512, 516, 540], "accord": [17, 22, 58, 65, 71, 110, 142, 144, 209, 210, 211, 212, 247, 253, 254, 269, 272, 274, 396, 465, 472, 497, 525], "accordingli": [91, 268, 270], "account": [460, 469], "accumul": [92, 93, 94, 112, 172, 231, 266, 267, 271, 273, 403, 499, 507], "accur": [110, 121, 168, 238, 240], "accuraci": [131, 132, 133, 136, 138], "achiev": 112, "aco": [6, 26], "acosh": [6, 27], "across": [102, 173, 266, 267, 271, 273], "activ": 4, "actual": [110, 172, 173, 204, 219], "ad": [18, 110, 113, 120, 136, 184, 207, 224, 241, 523, 543], "add": [6, 85, 110, 547], "addit": [24, 85, 92, 204, 269, 520], "address": 110, "adjac": [208, 231, 491, 523], "advanc": 112, "advers": 112, "advis": 4, "affect": [25, 102, 112, 143, 172, 173], "after": [109, 143, 389, 396, 430, 474], "after_1": 396, "after_n": 396, "ag": 110, "against": [18, 33, 34, 67, 68, 69, 75, 89, 167, 184, 216, 220, 222, 233, 251, 257, 264, 265, 271, 273, 403, 407, 499, 502], "ai": [3, 407, 502], "ai_max": 502, "ai_min": 502, "ainv": [213, 229], "al": 10, "algebra": [533, 543], "algorithm": [10, 35, 112, 113, 125, 131, 139, 489], "alia": [10, 14, 15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 65, 77, 78, 105, 115, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 164, 183, 201, 259, 275, 394, 398, 401, 402, 411, 441, 444, 446, 460, 466, 469, 472, 478, 508, 518, 523, 529, 532], "alias": [9, 130, 131, 136, 138, 486], "align": 110, "all": [4, 6, 9, 18, 21, 22, 23, 39, 40, 44, 51, 58, 76, 85, 89, 96, 103, 107, 109, 110, 112, 113, 118, 119, 121, 123, 128, 129, 133, 134, 137, 138, 142, 143, 148, 149, 150, 158, 159, 161, 166, 168, 175, 177, 179, 197, 204, 206, 218, 222, 233, 234, 246, 251, 254, 257, 264, 265, 268, 270, 342, 345, 352, 366, 396, 403, 413, 462, 463, 474, 478, 481, 495, 499, 520, 522, 527, 529, 540, 547], "allclos": [6, 39, 184, 213, 222, 223, 225, 226, 230], "alloc": [3, 4, 23, 25, 38, 42, 43, 44, 45, 46, 47, 51, 58, 82, 92, 98, 99, 101, 107, 114, 115, 123, 127, 141, 145, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 191, 192, 234, 235, 246, 247, 248, 253, 254, 256, 269, 272, 274, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 465, 495, 497, 510, 512, 516, 524, 525, 527, 531, 532], "allow": [41, 51, 97, 107, 112, 172, 173, 188, 241, 248, 254, 342, 372, 501, 540], "almost": [36, 209, 512], "along": [3, 4, 17, 19, 20, 22, 23, 24, 33, 34, 35, 41, 58, 76, 77, 78, 89, 92, 93, 94, 97, 98, 99, 101, 102, 103, 107, 108, 109, 111, 122, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 148, 149, 150, 154, 155, 160, 166, 168, 174, 175, 180, 182, 220, 223, 228, 229, 230, 231, 232, 233, 234, 246, 247, 251, 252, 253, 254, 255, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 339, 340, 341, 348, 349, 360, 362, 367, 368, 376, 379, 381, 383, 384, 386, 396, 399, 403, 405, 406, 407, 460, 465, 467, 474, 475, 476, 478, 481, 488, 489, 492, 496, 497, 499, 501, 502, 505, 506, 507, 509, 512, 513, 516, 517, 520, 522, 523, 525, 527, 528, 529, 540], "alpha": [412, 417, 418, 434, 437], "alreadi": [4, 10, 43, 44, 55, 56, 57, 395, 396, 520], "also": [3, 4, 10, 14, 15, 16, 18, 21, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 60, 62, 64, 65, 66, 83, 85, 105, 107, 110, 112, 116, 120, 128, 133, 137, 138, 139, 142, 151, 153, 154, 155, 156, 160, 162, 165, 168, 169, 170, 171, 172, 176, 184, 188, 199, 201, 202, 203, 204, 240, 241, 248, 252, 258, 259, 261, 262, 375, 390, 391, 401, 402, 449, 466, 472, 486, 498, 501, 518, 520, 540], "alter": 102, "altern": [3, 4, 17, 22, 93, 94, 106, 107, 249, 251, 253, 254, 257, 266, 267, 269, 271, 272, 273, 274, 385, 403, 497, 499, 525], "although": [21, 110, 132, 133, 134, 506], "alwai": [4, 10, 14, 15, 26, 27, 28, 29, 30, 32, 35, 42, 48, 49, 51, 52, 54, 102, 107, 108, 111, 124, 151, 157, 174, 210, 212, 272, 274, 342, 390, 469, 490, 497, 525, 528], "amax": [6, 251], "ambigu": 540, "amin": [6, 257], "among": 111, "amplitud": 10, "an": [0, 3, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 206, 207, 208, 211, 214, 218, 219, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 282, 341, 342, 343, 344, 347, 357, 360, 364, 366, 368, 371, 372, 375, 376, 377, 378, 382, 383, 385, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 413, 418, 419, 421, 430, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 540, 547], "anaconda": 3, "analog": [126, 128, 130, 132, 133, 135], "analysi": 10, "analyt": [3, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "angl": [6, 10, 14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 95, 96, 179, 409, 410, 462, 463, 523, 547], "ani": [3, 6, 17, 18, 23, 24, 38, 42, 43, 44, 45, 46, 47, 51, 67, 68, 69, 82, 98, 101, 103, 107, 110, 112, 113, 126, 128, 132, 133, 138, 142, 143, 163, 164, 166, 168, 173, 175, 186, 194, 195, 217, 230, 234, 246, 248, 268, 270, 342, 364, 396, 411, 455, 468, 486, 491, 524, 540], "anoth": [4, 84, 85, 107, 122, 132, 133, 157, 347, 368, 399, 406, 475], "answer": 413, "anti": [102, 143, 208, 486], "anyth": 110, "ap": 214, "apart": 509, "api": [0, 2, 3, 6, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 91, 98, 99, 101, 102, 107, 110, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 206, 208, 215, 216, 221, 222, 231, 232, 233, 234, 235, 246, 248, 249, 256, 342, 347, 392, 393, 394, 395, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 507, 510, 512, 516, 524, 526, 527, 531, 532], "appear": [120, 149, 150, 520], "append": [0, 6, 62, 97, 103, 111, 113, 120, 131, 132, 133, 182, 201, 208], "appli": [24, 33, 34, 35, 58, 71, 97, 112, 228, 263, 461, 470, 471, 489, 505, 509], "applic": [10, 110, 486], "apply_along_axi": [6, 543], "apply_over_ax": [6, 24], "approach": [107, 110, 131, 132, 133, 375], "appropri": [4, 33, 34, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 167, 230, 264, 265, 268, 270, 411, 439, 442, 470, 501, 540], "approxim": [144, 509], "ar": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 165, 166, 168, 169, 170, 171, 172, 173, 176, 181, 183, 184, 187, 188, 189, 190, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 226, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 365, 366, 375, 387, 388, 389, 390, 391, 396, 397, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 436, 437, 439, 442, 443, 445, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 470, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 488, 489, 491, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 509, 513, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 540, 547], "arang": [0, 6, 16, 33, 34, 36, 41, 55, 56, 57, 58, 59, 75, 83, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 112, 116, 118, 119, 121, 122, 125, 147, 148, 151, 156, 164, 165, 166, 168, 172, 174, 180, 181, 182, 197, 198, 199, 200, 208, 215, 216, 220, 228, 231, 233, 234, 237, 238, 242, 243, 244, 245, 246, 248, 249, 251, 255, 257, 259, 262, 350, 359, 391, 394, 396, 399, 401, 402, 406, 410, 435, 466, 468, 469, 471, 474, 476, 481, 492, 498, 505, 507, 509, 512, 513, 516, 517, 518, 522, 528, 530, 532], "arbitrari": [50, 106, 110, 112, 181, 249, 471, 512, 516], "arbitrarili": 112, "arc": [21, 28, 30, 48, 52], "arcco": [6, 14, 15, 27, 28, 30, 31, 48, 52, 53, 87], "arccosh": [6, 14, 15, 26, 29, 32, 49, 54, 88], "arcsin": [6, 14, 26, 29, 30, 31, 48, 49, 52, 53, 485], "arcsinh": [6, 15, 27, 28, 32, 48, 49, 54, 487], "arctan": [6, 14, 21, 26, 28, 31, 32, 48, 52, 53, 54, 503], "arctan2": [6, 21, 28, 30, 48, 52, 53], "arctanh": [6, 15, 27, 29, 30, 31, 49, 52, 53, 54, 504], "area": 509, "arg": [24, 67, 68, 107, 197, 357, 411], "arg1": 196, "arg2": 196, "argmax": [0, 6, 34, 107, 264, 407, 502, 540], "argmin": [6, 33, 107, 265, 502, 540], "argpartit": [6, 35, 407, 502, 540], "argsort": [6, 107, 398, 407, 480, 489, 502, 508, 540], "argument": [0, 10, 12, 13, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 78, 83, 87, 88, 95, 96, 105, 106, 107, 110, 113, 117, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 165, 171, 176, 179, 183, 195, 196, 199, 200, 201, 206, 208, 215, 219, 220, 221, 228, 231, 232, 237, 238, 239, 240, 241, 248, 249, 252, 258, 259, 260, 262, 357, 372, 385, 388, 389, 396, 400, 401, 402, 404, 406, 409, 410, 462, 463, 464, 466, 469, 471, 472, 473, 479, 483, 484, 485, 486, 487, 491, 496, 498, 503, 504, 505, 509, 518, 519, 527, 540, 547], "argwher": [6, 390], "ari": [41, 55, 56, 57, 108, 111, 174, 492, 528], "arithmet": [58, 166, 253, 254, 269, 272, 274, 400, 497, 499, 525, 533, 543], "around": [6, 107, 166, 396, 406, 461, 477], "arr": [23, 24, 44, 97, 100, 110, 173, 182, 408, 435, 460, 461, 513, 517, 522], "arr2": [110, 522], "arr_t": [51, 107, 342], "arrai": [0, 2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 339, 340, 341, 342, 343, 344, 347, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 363, 364, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 543, 547], "array2str": 6, "array_equ": [6, 182], "array_equiv": [6, 39], "array_lik": [23, 38, 42, 43, 44, 45, 46, 47, 50, 58, 82, 84, 98, 101, 111, 122, 163, 164, 166, 182, 186, 194, 228, 234, 246, 387, 396, 399, 406, 407, 411, 476, 482, 488, 501, 505, 524], "array_of_diagon": 102, "array_repr": 6, "array_split": [6, 77, 78, 492], "array_str": 6, "array_util": 70, "arrays_and_dtyp": 471, "art": 10, "asanyarrai": [6, 43, 44, 47, 468], "asarrai": [4, 6, 42, 44, 45, 47, 50, 387, 468, 488], "asarray_chkfinit": [6, 42, 43], "ascend": [210, 212, 480], "ascii": 110, "ascontiguousarrai": [6, 42, 43, 44, 47, 468], "asfarrai": [42, 43], "asfortranarrai": [6, 42, 43, 44, 45, 468], "asin": [6, 28], "asinh": [6, 29], "asmatrix": 6, "asnumpi": 107, "aspect": 110, "assembl": [77, 78, 109, 175, 478, 496, 522, 529], "assert": 254, "assign": [107, 352, 375, 512, 516], "associ": [58, 172, 173, 540], "assum": [10, 58, 91, 113, 130, 136, 138, 208, 218, 222, 226, 248, 509], "astyp": [6, 85, 107, 166, 390], "atan": [6, 30], "atan2": [6, 31], "atanh": [6, 32], "atleast_1d": [6, 56, 57, 120], "atleast_2d": [6, 55, 57, 120], "atleast_3d": [6, 55, 56, 120], "atol": [18, 184], "attain": 0, "attempt": [106, 219], "attribut": [107, 110, 115, 144, 164, 178, 223, 394, 532, 533], "automat": [172, 173], "avail": [2, 3, 4, 10, 86, 90, 110, 117, 260, 264, 265, 268, 270, 271, 533, 540], "averag": [6, 24, 107, 253, 254, 269, 361, 499, 543], "avg": 58, "avoid": [38, 43, 56, 57, 130, 136, 138, 469], "aweight": 90, "ax": [17, 22, 24, 33, 34, 58, 89, 91, 92, 103, 106, 107, 112, 120, 126, 128, 129, 132, 133, 134, 137, 138, 140, 142, 148, 168, 181, 206, 216, 220, 225, 228, 229, 230, 231, 233, 247, 249, 250, 251, 253, 254, 257, 261, 264, 265, 268, 269, 270, 271, 272, 273, 274, 382, 385, 395, 396, 398, 403, 465, 470, 474, 475, 476, 495, 497, 499, 500, 505, 506, 507, 508, 520, 525, 527], "axi": [17, 19, 20, 22, 23, 24, 33, 34, 35, 41, 58, 76, 77, 78, 89, 91, 92, 93, 94, 97, 102, 103, 107, 108, 109, 111, 112, 120, 122, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 148, 149, 150, 154, 155, 160, 166, 168, 174, 175, 180, 182, 206, 214, 220, 228, 232, 233, 234, 246, 247, 249, 251, 252, 253, 254, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 341, 348, 349, 355, 360, 361, 362, 366, 367, 368, 371, 376, 377, 378, 379, 381, 383, 385, 386, 396, 397, 398, 399, 403, 405, 406, 407, 460, 465, 467, 469, 470, 474, 475, 476, 478, 481, 488, 489, 492, 495, 496, 497, 499, 500, 501, 502, 505, 506, 507, 508, 509, 520, 522, 523, 525, 527, 528, 529, 540], "axis1": [102, 107, 350, 382, 384, 500, 507], "axis2": [102, 107, 350, 382, 384, 500, 507], "axisa": 91, "axisb": 91, "axisc": 91, "axiserror": [35, 489], "b": [10, 16, 18, 23, 24, 33, 34, 39, 40, 60, 66, 76, 77, 78, 84, 91, 94, 106, 107, 109, 110, 112, 113, 116, 158, 159, 169, 170, 175, 181, 182, 184, 188, 198, 202, 203, 206, 207, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 242, 244, 249, 250, 251, 254, 257, 389, 391, 395, 401, 402, 412, 471, 478, 491, 496, 505, 506, 514, 526, 527, 529, 547], "b_ax": [228, 505], "b_i": [232, 527], "back": [107, 160, 355, 460, 469, 470, 475, 514], "backend": [2, 167, 414, 416, 417, 427, 432, 448], "backward": [10, 51, 107, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 168, 342, 469, 474, 475], "bad": 423, "baltimor": 220, "bandlimit": 486, "bartlett": 6, "base": [0, 4, 110, 112, 119, 122, 151, 166, 172, 173, 226, 236, 237, 238, 239, 240, 241, 246, 247, 249, 399, 401, 402, 406, 408, 527], "base_repr": 6, "basic": [71, 112, 540, 543], "batch": 233, "bc": [207, 224], "bcde": 113, "becaus": [10, 17, 22, 130, 136, 138, 523, 540], "becom": [10, 107, 172, 385], "been": [109, 407, 475, 502], "befor": [4, 23, 35, 77, 78, 92, 107, 111, 131, 132, 133, 149, 150, 182, 230, 247, 251, 257, 272, 274, 366, 377, 396, 403, 465, 474, 475, 489, 497, 499, 506, 525, 526], "before_1": 396, "before_n": 396, "begin": [111, 113, 166, 234, 246, 396, 481], "behav": [182, 235, 406], "behavior": [35, 107, 140, 231, 263, 347, 470, 489, 506], "behind": [107, 366], "being": [3, 85, 110, 154, 155, 252, 258, 396], "belong": [104, 172], "below": [0, 4, 9, 14, 26, 28, 29, 32, 48, 49, 54, 85, 98, 101, 110, 136, 208, 218, 220, 231, 510, 511, 515, 523, 540], "best": 113, "beta": [6, 422], "between": [18, 25, 41, 70, 71, 85, 103, 111, 144, 159, 162, 168, 181, 182, 184, 234, 246, 396, 428, 442, 491, 498, 509, 523], "beyond": [4, 474], "bia": 90, "big": 110, "bin": [104, 125, 127, 141, 172, 173, 449], "bin_edg": [172, 173], "binari": [60, 64, 66, 158, 159, 161, 162], "binary_repr": 6, "bincount": [6, 104, 172], "binomi": [6, 430], "bins_0": 173, "bins_1": 173, "bit": [60, 61, 62, 63, 64, 65, 66, 110, 144, 178, 183, 201, 242, 244, 245, 271, 273, 472, 484, 533, 543], "bitwis": [60, 64, 66], "bitwise_and": [6, 61, 63, 64, 66, 183, 242], "bitwise_count": 6, "bitwise_invert": [6, 63, 183], "bitwise_left_shift": [6, 201], "bitwise_not": 6, "bitwise_or": [6, 60, 61, 63, 66, 183, 244], "bitwise_right_shift": [6, 472], "bitwise_xor": [6, 60, 61, 63, 64, 183, 245], "biufcmmosuv": 110, "blackman": 6, "block": [6, 77, 78, 109, 143, 175, 198, 478, 496, 522, 529], "bmat": 6, "bool": [9, 17, 18, 21, 22, 33, 34, 35, 38, 39, 40, 43, 46, 51, 58, 71, 84, 85, 89, 92, 97, 104, 107, 110, 113, 116, 143, 157, 166, 169, 170, 172, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 216, 218, 220, 222, 226, 233, 234, 246, 247, 251, 253, 254, 255, 257, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 342, 390, 391, 403, 465, 469, 481, 484, 489, 497, 499, 501, 520, 524, 525, 540], "bool_": 9, "boolean": [60, 61, 63, 64, 66, 84, 92, 97, 110, 122, 151, 157, 180, 183, 184, 187, 189, 190, 191, 192, 193, 197, 242, 244, 247, 248, 253, 254, 269, 271, 272, 274, 390, 399, 465, 497, 501, 525], "boolean_sequ": 197, "both": [10, 16, 18, 23, 31, 39, 40, 53, 58, 60, 62, 64, 65, 66, 75, 83, 91, 105, 106, 116, 132, 139, 151, 153, 154, 155, 156, 165, 169, 170, 171, 176, 181, 184, 198, 199, 200, 201, 202, 203, 215, 220, 228, 240, 241, 242, 244, 245, 249, 252, 258, 259, 262, 273, 389, 391, 401, 402, 466, 469, 472, 498, 505, 507, 512, 514, 516, 518, 526, 527, 530], "bound": [406, 407, 461, 480, 501, 502], "boundari": [168, 406, 461], "branch": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "briefli": 540, "broadcast": [16, 17, 22, 33, 34, 40, 58, 67, 68, 69, 75, 84, 89, 105, 112, 122, 151, 154, 155, 176, 191, 192, 215, 216, 220, 222, 233, 245, 247, 249, 251, 252, 253, 254, 257, 258, 262, 264, 265, 269, 271, 272, 273, 274, 401, 402, 403, 406, 407, 465, 467, 497, 498, 499, 502, 506, 518, 525, 527, 530], "broadcast_arrai": [6, 68, 69], "broadcast_shap": 6, "broadcast_to": [6, 67, 68, 506], "brought": 10, "buffer": [46, 93, 94, 107, 157, 158, 159, 161, 162, 235, 251, 257, 266, 267], "buffer_lik": 158, "buffererror": 157, "build": 543, "build_loc": 4, "built": 110, "busday_count": 6, "busday_offset": 6, "byte": [6, 51, 70, 107, 110, 112, 158, 159, 235, 342, 358, 363], "byteord": 110, "byteswap": 6, "bz2": 235, "c": [2, 4, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 91, 95, 96, 105, 106, 107, 110, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 163, 164, 165, 167, 169, 170, 171, 176, 179, 181, 183, 187, 188, 189, 190, 198, 199, 200, 201, 202, 203, 207, 214, 219, 220, 224, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 258, 259, 262, 342, 347, 355, 369, 372, 388, 389, 390, 391, 393, 394, 400, 401, 402, 404, 409, 410, 460, 461, 462, 464, 466, 468, 469, 470, 472, 473, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 505, 506, 518, 519, 520, 521, 527, 530, 531, 532, 547], "c_contigu": [45, 47, 107, 347, 468], "ca": 81, "calcul": [10, 12, 13, 16, 21, 31, 53, 58, 91, 92, 94, 103, 105, 111, 112, 116, 118, 119, 121, 125, 134, 151, 152, 153, 156, 168, 173, 176, 209, 210, 211, 212, 214, 220, 222, 238, 240, 241, 247, 249, 253, 254, 259, 262, 269, 272, 274, 391, 396, 401, 402, 403, 465, 466, 497, 498, 518, 525, 526, 533, 547], "call": [10, 21, 23, 31, 33, 34, 35, 45, 47, 53, 110, 131, 132, 133, 136, 139, 160, 182, 209, 211, 219, 227, 248, 254, 282, 390, 495, 501, 506, 509, 547], "callabl": [160, 248], "cambridg": 10, "can": [0, 3, 4, 10, 16, 18, 23, 24, 25, 31, 38, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 53, 58, 60, 61, 62, 63, 64, 65, 66, 71, 82, 83, 85, 91, 98, 99, 101, 102, 105, 106, 107, 110, 112, 113, 114, 115, 116, 123, 125, 126, 127, 128, 131, 132, 133, 136, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 175, 176, 177, 180, 181, 183, 184, 186, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 208, 213, 214, 217, 218, 220, 222, 228, 230, 231, 234, 235, 240, 241, 242, 244, 245, 246, 248, 249, 252, 256, 258, 259, 262, 271, 273, 342, 347, 375, 377, 388, 389, 390, 391, 392, 393, 394, 400, 401, 402, 407, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 460, 461, 466, 468, 469, 472, 491, 498, 501, 502, 505, 507, 509, 510, 512, 516, 517, 518, 520, 524, 526, 530, 531, 532, 540, 547], "can_cast": [6, 543], "cannot": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 77, 78, 264, 265, 469, 492, 495, 496], "capabl": [25, 38, 42, 43, 45, 47, 58, 124, 166, 234, 246, 249, 527], "cardin": 486, "cardinali": 486, "care": [25, 209], "cartesian": 255, "case": [4, 17, 22, 25, 33, 34, 38, 42, 43, 44, 45, 47, 58, 82, 91, 93, 94, 98, 101, 103, 107, 112, 113, 114, 115, 123, 127, 130, 135, 139, 141, 158, 159, 160, 161, 163, 164, 166, 168, 177, 209, 223, 226, 228, 234, 235, 241, 246, 256, 266, 267, 271, 273, 357, 392, 393, 394, 403, 460, 469, 470, 499, 505, 510, 523, 524, 531, 532, 540], "cast": [17, 22, 51, 71, 77, 78, 84, 92, 93, 94, 107, 112, 151, 175, 182, 209, 247, 249, 253, 254, 263, 266, 267, 269, 271, 272, 273, 274, 342, 403, 465, 478, 496, 497, 499, 525, 527, 529], "cat": [413, 430], "cauchi": 449, "cbrt": [6, 493], "cdef": 113, "cdot": [228, 232, 505, 527], "cdoubl": 9, "ceil": [6, 37, 145, 152, 153, 473, 477, 519], "center": [126, 127, 128, 129, 133, 134, 141], "central": [168, 431, 432], "certain": [110, 248], "ch": 10, "chain": [106, 107, 112, 113], "chang": [51, 82, 91, 107, 110, 112, 122, 266, 267, 342, 355, 380, 385, 388, 399, 400, 406, 407, 408, 460, 469, 470, 475, 523, 543], "char": 110, "charact": [110, 159], "check": [17, 22, 42, 43, 44, 71, 130, 186, 188, 194, 204, 222, 225, 540], "check_valid": 429, "chi": [415, 431], "chisquar": 6, "choic": [6, 74, 107, 125, 126, 128, 131, 132, 133, 137, 138, 140, 142, 210, 212, 343], "choicelist": 481, "choleski": 6, "choos": [6, 21, 28, 30, 48, 52, 107, 113, 481, 530, 540], "chosen": [36, 172, 520, 530], "circ": 547, "circl": [224, 509], "clamp": [406, 407, 501, 502], "clariti": 143, "class": [3, 4, 107, 110, 146, 158, 159, 160, 162, 180, 235, 411, 439, 510, 543], "classic": 112, "clear": [110, 200, 540], "clip": [6, 107, 406, 407, 461, 501, 502, 540], "close": [14, 15, 21, 26, 27, 28, 30, 48, 50, 51, 52, 107, 112, 120, 179, 234, 342, 411, 439, 462, 463, 473, 477, 509], "closer": 519, "cloud": 3, "cmake": 4, "co": [6, 14, 15, 26, 27, 28, 48, 88, 211, 485, 503, 509], "coars": [221, 395], "code": [46, 110, 196, 468], "codeplai": 4, "coeffici": [85, 214, 225, 230], "coerc": [46, 158, 159, 160, 161, 162, 235], "coin": 413, "col": 180, "collaps": [107, 355, 520], "column": [6, 42, 43, 44, 45, 47, 50, 51, 76, 77, 78, 85, 93, 94, 102, 107, 109, 123, 143, 149, 150, 168, 174, 175, 177, 209, 210, 214, 219, 223, 226, 342, 460, 461, 468, 478, 492, 496, 510, 512, 516, 521, 524, 529], "column_stack": [6, 77, 78, 109, 175, 478, 496, 529], "com": 4, "combin": [0, 110, 120, 128, 133, 138, 142, 168], "combinatori": 113, "come": 520, "comma": [110, 112], "command": 4, "common": [131, 132, 133, 165, 199, 228, 390, 505], "common_typ": 6, "compani": [413, 430], "compar": [18, 35, 39, 116, 154, 155, 173, 184, 221, 252, 258, 489], "comparison": [2, 116, 169, 170, 202, 203, 391, 533, 543], "compat": [3, 4, 10, 17, 22, 51, 58, 91, 102, 107, 206, 208, 215, 216, 221, 222, 231, 232, 233, 247, 249, 253, 254, 268, 269, 270, 272, 274, 342, 395, 465, 469, 497, 507, 525, 526, 527, 543], "compil": [4, 110, 167, 468], "complement": 523, "complementari": [153, 523], "complet": [3, 4, 113, 159, 160, 223, 475, 540], "complex": [10, 12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 38, 39, 48, 49, 52, 53, 54, 71, 92, 106, 107, 110, 113, 117, 124, 125, 126, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 151, 154, 155, 179, 185, 186, 193, 194, 200, 209, 210, 211, 212, 215, 223, 224, 226, 232, 247, 249, 252, 258, 263, 272, 274, 345, 346, 404, 462, 463, 465, 490, 497, 520, 525, 526, 527, 540, 543], "complex128": [9, 58, 471], "complex64": [9, 58, 70, 107, 151, 376], "compliant": 107, "complic": [112, 547], "compon": [10, 39, 91, 129, 134, 141, 144, 179, 218, 228, 263, 462, 505], "compos": 83, "composit": [94, 198, 499, 509], "compress": [6, 122, 481, 501, 540], "comput": [4, 10, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 58, 60, 61, 63, 64, 66, 72, 79, 80, 85, 87, 88, 92, 93, 94, 103, 104, 112, 118, 119, 120, 121, 124, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 152, 168, 169, 170, 171, 172, 173, 179, 180, 183, 198, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 242, 243, 244, 245, 247, 249, 253, 254, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 388, 395, 400, 404, 462, 464, 465, 466, 473, 477, 479, 483, 484, 485, 487, 493, 497, 499, 503, 504, 505, 509, 512, 516, 525, 527], "compute_uv": [205, 226, 227], "concat": [6, 78], "concaten": [6, 76, 77, 109, 175, 182, 478, 492, 496, 502, 522, 529], "concept": [25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532, 540], "cond": [6, 213], "condit": [36, 51, 106, 107, 122, 205, 213, 219, 342, 390, 399, 406, 408, 481, 530], "condlist": 481, "confus": 156, "conj": [6, 80, 107, 130, 179, 204, 209, 404], "conjug": [6, 10, 79, 106, 107, 136, 139, 179, 204, 209, 210, 211, 212, 215, 232, 249, 345, 404, 526, 527], "consecut": [103, 111, 168], "conserv": 255, "consid": [18, 25, 38, 39, 42, 43, 45, 47, 113, 141, 166, 184, 187, 210, 212, 218, 234, 246, 249, 411, 439, 470, 491, 520, 527], "consist": [39, 40, 111, 125, 126, 128, 131, 132, 133, 137, 138, 140, 142, 159, 173, 228, 230, 234, 502, 505], "constant": [9, 110, 168, 396], "constant_valu": 396, "constraint": 58, "construct": [42, 43, 44, 74, 98, 101, 102, 107, 110, 123, 158, 159, 160, 161, 162, 177, 197, 200, 235, 256, 343, 392, 481, 486, 506, 507, 530, 533], "constructor": 540, "consum": [107, 363], "contain": [10, 12, 13, 14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 44, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 83, 84, 85, 87, 88, 91, 92, 102, 105, 107, 110, 116, 118, 119, 121, 126, 127, 128, 131, 136, 139, 141, 147, 151, 152, 153, 154, 155, 156, 157, 162, 167, 168, 169, 170, 172, 173, 176, 179, 180, 183, 201, 202, 203, 206, 208, 210, 223, 226, 228, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 252, 253, 258, 259, 262, 264, 265, 268, 269, 270, 272, 274, 372, 388, 390, 391, 398, 400, 401, 402, 404, 411, 462, 464, 465, 466, 472, 473, 477, 479, 483, 484, 485, 486, 487, 493, 494, 497, 498, 503, 504, 505, 508, 512, 513, 516, 517, 518, 519, 525, 540], "content": [45, 107, 254, 448], "context": 10, "contigu": [42, 43, 44, 45, 47, 70, 106, 107, 112, 188, 219, 369, 460, 468, 469], "continu": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 411, 443, 486], "contourf": 255, "contract": [112, 113, 228, 505], "contrari": [206, 208, 215, 231, 232], "contrast": [112, 406], "contribut": [10, 58, 172, 173], "control": [4, 51, 71, 77, 78, 84, 107, 112, 175, 249, 342, 478, 496, 527, 529], "conveni": [107, 385, 411], "convent": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 106, 112, 113, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 181, 215, 228, 230, 249, 395, 505, 527], "convers": [51, 107, 112, 342, 533], "convert": [23, 33, 34, 38, 42, 43, 44, 45, 46, 47, 50, 55, 56, 57, 82, 95, 96, 98, 101, 110, 112, 113, 120, 163, 164, 166, 182, 186, 194, 234, 246, 409, 410, 461, 468, 521, 523, 524], "convolut": [10, 81, 86], "convolv": [6, 86], "coolei": 10, "coordin": [89, 160, 168, 180, 197, 255, 461, 521], "copi": [6, 23, 25, 35, 38, 39, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 84, 97, 98, 99, 101, 102, 107, 110, 114, 115, 122, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 182, 234, 235, 246, 248, 254, 255, 256, 263, 282, 342, 355, 357, 366, 372, 375, 392, 393, 394, 397, 399, 400, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 460, 468, 469, 470, 480, 489, 495, 510, 511, 512, 515, 516, 524, 531, 532, 540], "copysign": [6, 388, 400], "copyto": [6, 107, 122, 347, 399], "core": [3, 112, 527, 540], "corner": [126, 128, 132, 133, 396], "corrcoef": [6, 90], "correct": [12, 13, 14, 15, 16, 21, 23, 26, 27, 28, 29, 30, 31, 32, 36, 37, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 77, 78, 79, 80, 83, 87, 88, 95, 96, 105, 116, 118, 119, 121, 124, 130, 136, 138, 145, 151, 152, 153, 154, 155, 156, 165, 169, 170, 171, 176, 179, 183, 187, 189, 190, 199, 200, 201, 202, 203, 225, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 252, 258, 259, 262, 388, 389, 391, 400, 401, 402, 404, 409, 410, 462, 464, 466, 468, 472, 473, 477, 479, 483, 484, 485, 486, 487, 491, 493, 494, 496, 498, 503, 504, 518, 519], "correctli": [21, 28, 30, 33, 34, 48, 52, 89, 216, 220, 233, 251, 257, 264, 265, 271, 273, 390, 403, 499], "correl": [6, 85, 543], "correspond": [6, 10, 25, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 51, 75, 77, 78, 82, 95, 96, 98, 99, 101, 102, 107, 108, 114, 115, 123, 126, 127, 128, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 174, 177, 180, 197, 206, 209, 210, 228, 232, 234, 235, 246, 248, 249, 256, 342, 347, 351, 392, 393, 394, 398, 409, 410, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 474, 481, 482, 492, 497, 505, 508, 509, 510, 512, 516, 524, 525, 527, 528, 531, 532, 540], "correspondingli": [10, 492], "cosh": [6, 15, 27, 87, 487, 504], "cosin": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 485, 487, 503, 504], "cost": [112, 113], "costli": 113, "could": [107, 130, 136, 138, 377], "count": [17, 22, 59, 89, 104, 110, 113, 148, 158, 159, 161, 162, 168, 172, 173, 390, 403, 413, 488, 499, 520, 533, 543], "count_nonzero": [6, 390], "counterclockwis": [149, 150, 476], "counterpart": [10, 130, 136, 138, 540], "cov": [6, 85, 429], "covari": [85, 90], "cover": [512, 516, 543], "cpu": [4, 25, 38, 42, 43, 44, 45, 47, 82, 86, 90, 98, 101, 114, 115, 117, 123, 127, 141, 158, 159, 160, 161, 163, 164, 166, 177, 234, 235, 246, 256, 260, 271, 392, 393, 394, 510, 524, 531, 532], "creat": [3, 4, 25, 38, 40, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 100, 101, 102, 107, 110, 113, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 263, 342, 347, 392, 393, 394, 396, 407, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 507, 510, 512, 513, 516, 517, 524, 531, 532, 540, 543], "creation": [110, 113, 533, 540, 543, 547], "crop": [125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142], "cross": [6, 86, 197], "csingl": 9, "ct": 10, "ctype": 468, "cube": [72, 151, 493], "cubic": 113, "cuda": 4, "cumprod": [6, 107, 266, 540], "cumsum": [6, 103, 107, 267, 499, 509, 540], "cumul": [92, 93, 94, 103, 107, 266, 267, 348, 349, 499, 509], "cumulative_prod": 6, "cumulative_sum": 6, "cupi": [2, 533], "current": [10, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 83, 87, 88, 95, 96, 105, 107, 110, 113, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 159, 165, 171, 173, 176, 177, 183, 199, 200, 201, 237, 238, 239, 240, 241, 252, 258, 259, 260, 262, 375, 388, 389, 396, 400, 401, 402, 404, 409, 410, 464, 466, 468, 472, 473, 479, 483, 484, 485, 487, 491, 498, 503, 504, 518, 519], "curv": 509, "custom": 540, "customarili": 10, "cut": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 214, 527], "cutoff": 222, "cycl": [127, 141, 197, 470], "cyclic": 406, "cython": 4, "d": [0, 17, 22, 24, 25, 58, 76, 77, 78, 85, 93, 94, 98, 99, 100, 101, 102, 106, 107, 109, 110, 123, 127, 129, 134, 141, 143, 147, 149, 150, 162, 174, 175, 177, 181, 197, 207, 208, 210, 211, 215, 219, 220, 224, 228, 231, 249, 255, 266, 267, 273, 355, 390, 401, 402, 403, 406, 416, 460, 469, 478, 480, 482, 496, 499, 501, 505, 506, 507, 514, 520, 524, 527, 529, 540], "d0": [411, 438, 440], "d1": [411, 440], "d3": 99, "data": [1, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 101, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 130, 136, 138, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 191, 192, 194, 199, 200, 201, 202, 203, 208, 214, 221, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 342, 372, 385, 387, 388, 389, 391, 393, 394, 399, 400, 401, 402, 404, 406, 407, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 498, 502, 503, 504, 507, 510, 518, 519, 525, 527, 529, 530, 531, 532, 533, 543], "datatyp": [110, 218], "date": 4, "datetim": 110, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [90, 107, 272, 274, 379, 386, 497, 525], "decai": 424, "decim": [37, 107, 144, 145, 373, 473, 477], "decomposit": [204, 213, 218, 222, 226, 227, 543], "decompress": 235, "decreas": [104, 509], "decreasingli": [10, 126, 128, 132, 133], "deem": 157, "def": [0, 24, 396], "default": [3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 182, 183, 184, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 214, 216, 218, 219, 220, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 355, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 415, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 452, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 540], "default_rng": 6, "defg": 113, "defici": 218, "defin": [10, 31, 53, 91, 97, 110, 115, 125, 154, 155, 164, 171, 172, 173, 182, 206, 208, 220, 232, 252, 258, 263, 394, 400, 463, 476, 527, 532, 540], "definit": [91, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 152, 204, 509], "deg": [21, 410], "deg2rad": [6, 409, 410, 523], "degre": [6, 21, 95, 272, 274, 409, 410, 453, 476, 497, 523, 525, 547], "del": 547, "delet": [6, 23, 182], "delta": [10, 272, 274, 497, 523, 525], "demonstr": [0, 4, 110], "denot": [232, 527], "dens": [180, 197, 256], "densiti": 172, "depend": [4, 36, 102, 124, 130, 136, 138, 208, 210, 214, 220, 223, 225, 226, 234, 271, 273, 481, 530], "depth": [76, 77, 78, 108, 109, 175, 478, 492, 496, 529], "deriv": 168, "descend": 226, "descr": 110, "describ": [92, 110, 220, 231, 247, 465, 543], "descript": [92, 110, 131, 133, 172, 247, 465, 540], "design": 10, "desir": [25, 38, 42, 43, 45, 47, 50, 69, 114, 115, 123, 131, 132, 133, 163, 164, 166, 177, 234, 246, 393, 394, 460, 506, 510, 531, 532], "destin": [77, 78, 175, 261, 406, 407, 478, 496, 502, 529], "destruct": 547, "det": [6, 224], "detail": [37, 126, 128, 132, 133, 137, 138, 140, 142, 157, 216, 233, 477, 512, 513, 516, 517, 520, 540], "determin": [14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 60, 62, 64, 65, 66, 72, 83, 87, 88, 95, 96, 105, 118, 119, 121, 153, 154, 155, 156, 159, 160, 162, 176, 201, 207, 208, 214, 223, 224, 231, 236, 237, 238, 239, 240, 241, 249, 252, 258, 259, 262, 389, 401, 402, 409, 410, 461, 464, 466, 472, 479, 481, 483, 485, 486, 487, 491, 493, 494, 498, 503, 504, 507, 518, 519, 521, 527], "devel": 4, "develop": [3, 4], "deviat": [107, 253, 269, 272, 274, 379, 411, 426, 433, 497, 525], "devic": [0, 2, 3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 58, 82, 92, 98, 99, 101, 107, 112, 114, 115, 123, 124, 127, 141, 145, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 247, 248, 249, 253, 254, 256, 269, 272, 274, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 465, 495, 497, 510, 512, 516, 524, 525, 527, 531, 532], "df": [415, 431, 453, 454], "dfden": [419, 432], "dfnum": [419, 432], "dft": [10, 125, 130, 131, 135, 136, 139], "di": [99, 100], "diag": [6, 24, 101, 102, 112, 123, 149, 150, 177, 209, 211, 226, 481, 507], "diag_indic": [6, 100, 143], "diag_indices_from": [6, 99, 143], "diagflat": [6, 98, 102, 507], "diagon": [6, 98, 99, 100, 101, 107, 112, 123, 143, 177, 204, 210, 211, 212, 231, 248, 384, 481, 507, 510, 511, 512, 513, 515, 516, 517, 540], "dice": 428, "dict": [110, 396], "dictionari": 110, "diff": [6, 94, 111, 168, 172], "differ": [3, 10, 18, 25, 38, 41, 42, 43, 44, 45, 47, 58, 82, 92, 94, 98, 101, 103, 107, 110, 111, 114, 115, 123, 126, 127, 131, 132, 134, 137, 140, 141, 144, 149, 150, 151, 158, 159, 160, 161, 163, 164, 166, 168, 177, 182, 184, 212, 220, 231, 234, 235, 246, 247, 249, 256, 347, 392, 393, 394, 399, 401, 402, 407, 465, 470, 476, 498, 502, 510, 512, 516, 523, 524, 531, 532, 543], "differenti": 486, "digit": [6, 10, 144, 172], "dim": [18, 461], "dimens": [17, 22, 23, 24, 33, 34, 38, 55, 56, 57, 58, 76, 77, 78, 84, 89, 90, 91, 99, 102, 103, 107, 108, 110, 120, 132, 133, 145, 149, 150, 168, 175, 180, 181, 197, 206, 208, 216, 218, 220, 223, 227, 228, 231, 232, 233, 247, 250, 251, 253, 254, 255, 256, 257, 261, 264, 265, 268, 269, 270, 271, 272, 273, 274, 355, 359, 364, 375, 387, 390, 392, 403, 407, 411, 441, 443, 444, 446, 460, 461, 465, 469, 476, 482, 492, 495, 496, 497, 499, 500, 501, 502, 505, 506, 507, 512, 513, 516, 517, 520, 521, 522, 525, 527, 528, 540, 543], "dimension": [2, 4, 24, 35, 81, 86, 89, 92, 97, 99, 100, 101, 102, 103, 104, 107, 111, 112, 125, 126, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 158, 159, 161, 168, 174, 180, 182, 197, 206, 214, 221, 223, 229, 230, 247, 251, 255, 256, 257, 264, 265, 268, 270, 272, 274, 378, 387, 392, 395, 403, 465, 489, 497, 499, 501, 506, 509, 520, 525, 526, 528, 533], "direct": [10, 91, 103, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 149, 150, 168, 206, 389, 476], "directli": [110, 160, 180, 246, 390, 502], "directori": 167, "dirichlet": 6, "discard": 519, "discont": 523, "discontinu": 523, "discret": [3, 81, 86, 94, 103, 111, 125, 126, 127, 128, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 168, 411, 486, 533, 543], "dispers": 456, "displac": [107, 380], "disregard": 470, "distanc": [168, 491], "distinct": [154, 155, 252, 258, 470], "distinguish": 110, "distribut": [3, 4, 246, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 543], "divid": [6, 41, 108, 109, 153, 156, 174, 259, 466, 492, 518, 528], "divis": [105, 153, 156, 259, 401, 402, 466, 492, 518, 519], "divisor": [165, 199, 272, 274, 497, 525], "divmod": [6, 540], "dlpack": 157, "dmlc": 157, "dn": [411, 438, 440], "do": [3, 4, 110, 248, 254, 413, 475, 509], "docstr": 540, "document": [0, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540], "doe": [23, 25, 41, 71, 97, 107, 112, 122, 124, 139, 154, 155, 157, 182, 223, 263, 266, 267, 357, 399, 470, 492, 501], "domain": [10, 130, 135], "done": [3, 51, 107, 112, 230, 342, 520, 523], "dot": [6, 107, 112, 113, 181, 204, 211, 213, 219, 222, 223, 225, 226, 228, 229, 230, 232, 249, 505, 526, 527], "doubl": [9, 228, 424, 505], "down": 150, "dp": [105, 207, 210, 224, 225, 401, 402, 498, 518], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 264, 265, 268, 270, 271, 342, 347, 392, 393, 394, 405, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "dpnp": [0, 2, 3, 4, 10, 533, 540, 543, 544, 547], "dpnp_arrai": [25, 38, 42, 43, 44, 45, 47, 51, 82, 98, 99, 101, 114, 115, 123, 127, 141, 144, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 178, 180, 234, 235, 246, 248, 256, 275, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532, 533], "dpnp_iface_arraycr": [256, 392], "draw": [411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "drawn": [411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 436, 437, 439, 442, 445, 451, 452, 453, 454, 455, 456, 457, 458, 459, 481], "drill": [413, 430], "driver": 2, "drop": [3, 110], "dsplit": [6, 77, 78, 109, 492], "dst": 84, "dstack": [6, 76, 77, 78, 175, 478, 492, 496, 529], "dt": [110, 509], "dt2": 110, "dtype": [0, 9, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 77, 78, 79, 80, 83, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 105, 107, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 182, 183, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 219, 222, 226, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 348, 349, 361, 367, 376, 379, 381, 384, 386, 388, 389, 391, 393, 394, 400, 401, 402, 403, 404, 409, 410, 411, 433, 439, 455, 464, 465, 466, 468, 471, 472, 473, 477, 478, 479, 483, 484, 485, 486, 487, 490, 491, 493, 494, 496, 497, 498, 499, 501, 503, 504, 507, 510, 511, 515, 518, 519, 525, 527, 528, 529, 531, 532, 540], "due": [139, 547], "dump": 6, "dx": [168, 509], "dy": 168, "dz": 168, "e": [9, 10, 15, 27, 29, 49, 62, 92, 93, 102, 110, 114, 115, 120, 123, 126, 130, 131, 132, 133, 136, 138, 139, 151, 159, 163, 164, 168, 177, 201, 209, 224, 229, 233, 236, 254, 393, 394, 411, 463, 467, 470, 500, 510, 522, 531, 532], "ea": 113, "each": [0, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 30, 31, 32, 41, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 79, 80, 83, 85, 87, 88, 93, 94, 99, 102, 104, 105, 107, 108, 110, 113, 116, 118, 119, 121, 126, 128, 130, 132, 133, 136, 137, 138, 140, 142, 149, 150, 151, 152, 153, 156, 160, 168, 169, 170, 172, 173, 174, 179, 183, 187, 189, 190, 197, 201, 202, 203, 206, 209, 210, 211, 212, 214, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 259, 261, 262, 263, 373, 388, 390, 391, 396, 400, 401, 402, 404, 407, 413, 430, 461, 462, 464, 466, 467, 470, 472, 473, 474, 477, 479, 483, 484, 485, 487, 492, 493, 494, 496, 498, 502, 503, 504, 506, 509, 512, 513, 516, 517, 518, 519, 520, 521, 527, 528, 540], "easier": 501, "easiest": [4, 396], "easili": [0, 173], "edg": [75, 104, 172, 173, 396], "edge_ord": 168, "ediff1d": [6, 103, 168], "effect": [113, 151, 154, 155, 252, 258, 401, 402, 523], "effici": [10, 125, 139, 159, 218, 222, 226], "efgh": 113, "eig": [6, 210, 211, 212], "eigenvalu": [209, 210, 211, 212, 543], "eigenvector": [209, 210, 211, 212], "eigh": [6, 209, 211, 212], "eight": 220, "eigval": [6, 209, 210, 212], "eigvalsh": [6, 209, 210, 211], "einstein": [106, 112, 113, 181, 228, 230, 249, 395, 505, 527], "einsum": [6, 106, 113, 181, 228, 230, 249, 395, 505, 527], "einsum_path": [6, 112], "either": [39, 40, 47, 58, 91, 92, 102, 110, 126, 128, 130, 132, 133, 136, 138, 140, 142, 143, 168, 181, 208, 210, 212, 220, 223, 247, 264, 265, 268, 270, 271, 273, 461, 465, 470, 480, 481, 502, 509], "element": [4, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 44, 48, 49, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 83, 84, 87, 88, 92, 93, 94, 97, 100, 102, 103, 104, 105, 107, 110, 111, 113, 116, 118, 119, 121, 122, 123, 124, 126, 128, 132, 133, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 206, 208, 211, 217, 228, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 257, 258, 259, 260, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 337, 338, 345, 346, 348, 349, 351, 352, 355, 357, 358, 361, 363, 365, 366, 371, 372, 373, 374, 376, 379, 380, 383, 386, 388, 389, 390, 391, 399, 400, 401, 402, 403, 404, 406, 408, 460, 462, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 497, 498, 499, 501, 503, 504, 505, 506, 507, 509, 511, 513, 515, 517, 518, 519, 520, 521, 523, 525, 527, 530, 540, 543, 547], "element_count": [107, 376, 488], "elimin": 24, "ellipsi": 112, "els": [0, 110, 224, 280], "elsewher": [123, 177, 510, 530], "empti": [4, 6, 38, 107, 115, 126, 128, 132, 133, 137, 138, 140, 142, 159, 163, 164, 214, 352, 393, 394, 396, 399, 492, 531, 532, 540], "empty_lik": [6, 38, 114, 164, 394, 532], "enabl": [143, 218, 222, 226], "encount": [266, 267, 268, 270, 481], "end": [23, 25, 70, 97, 102, 110, 111, 113, 131, 166, 182, 234, 246, 396], "end_tim": 0, "end_valu": 396, "endian": 110, "endpoint": [25, 166, 234, 246, 509], "engin": 447, "enlarg": 470, "enough": 172, "ensur": 468, "entir": [58, 92, 130, 172, 173, 247, 253, 268, 269, 270, 272, 274, 396, 465, 497, 525], "entiti": 470, "entri": [41, 97, 107, 108, 110, 114, 122, 130, 136, 138, 143, 148, 149, 150, 174, 378, 492, 495, 527, 528], "enumer": 157, "env": 4, "environ": 4, "ep": [144, 218, 222, 389, 463, 491], "epsilon": [218, 463], "epsneg": 144, "equal": [6, 17, 18, 22, 24, 35, 39, 40, 41, 58, 62, 65, 77, 78, 86, 90, 94, 107, 108, 123, 166, 168, 169, 170, 172, 173, 174, 175, 184, 186, 194, 196, 201, 202, 203, 208, 217, 222, 223, 230, 234, 246, 259, 366, 391, 396, 411, 421, 455, 466, 472, 473, 477, 478, 483, 486, 489, 492, 495, 496, 510, 512, 516, 522, 528, 529], "equal_nan": [18, 39, 184, 520], "equat": [214, 225, 229, 230, 543], "equiv": [51, 71, 77, 78, 84, 107, 112, 175, 217, 249, 342, 478, 496, 527, 529], "equival": [10, 16, 17, 19, 20, 22, 24, 33, 34, 35, 37, 40, 58, 82, 91, 92, 95, 96, 97, 105, 106, 107, 108, 109, 113, 120, 122, 147, 154, 155, 156, 174, 197, 227, 228, 229, 233, 247, 250, 259, 262, 282, 337, 338, 350, 364, 372, 375, 385, 387, 390, 395, 398, 400, 409, 410, 411, 439, 465, 466, 469, 476, 477, 482, 489, 498, 499, 501, 505, 508, 518, 520, 522, 527, 528, 540, 547], "error": [92, 108, 112, 117, 130, 135, 174, 209, 247, 461, 465, 492, 495, 528, 533, 540], "essenti": 4, "estim": [90, 173, 413, 430, 509], "et": 10, "etc": [10, 38, 43, 110, 126, 128, 132, 133, 137, 138, 140, 142, 430], "euclidean": 214, "euler_gamma": 9, "evalu": [17, 18, 22, 107, 112, 113, 116, 186, 188, 194, 228, 230, 255, 337, 338, 395, 481, 505], "even": [10, 107, 110, 127, 129, 130, 131, 134, 135, 136, 138, 139, 141, 186, 188, 194, 254, 359, 396, 473, 477], "evenli": [25, 166, 234, 246, 473, 509], "event": 241, "everi": [70, 138, 407, 502], "everywher": [136, 486], "exact": [122, 219, 399], "exactli": [10, 50, 162, 411, 439, 481], "examin": 214, "exampl": [2, 3, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 350, 352, 355, 356, 357, 359, 364, 366, 370, 372, 375, 376, 377, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540, 547], "exce": [241, 492], "except": [4, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 77, 78, 79, 80, 82, 83, 87, 88, 95, 96, 103, 104, 105, 106, 107, 114, 115, 116, 118, 119, 121, 123, 124, 137, 138, 145, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 174, 175, 176, 177, 183, 187, 189, 190, 199, 200, 201, 202, 203, 219, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 257, 258, 259, 262, 268, 269, 270, 271, 272, 273, 274, 342, 357, 388, 389, 391, 393, 394, 400, 401, 402, 403, 404, 409, 410, 460, 464, 466, 467, 468, 472, 473, 479, 483, 484, 485, 487, 489, 491, 492, 493, 494, 497, 498, 499, 503, 504, 518, 519, 525, 527, 531, 532, 543], "exclud": [12, 13, 23, 234, 411, 455], "exclus": [411, 439], "execut": [3, 4, 24, 42, 43, 44, 86, 90, 117, 160, 260, 271, 414, 416, 417, 427, 432, 448, 547], "executor": 0, "exist": [10, 76, 77, 78, 109, 110, 120, 157, 175, 182, 478, 492, 496, 522, 529, 543], "exp": [6, 10, 119, 121, 125, 224, 238, 240, 247], "exp2": [6, 118, 121], "expand": [103, 120], "expand_dim": [6, 33, 34], "expect": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 79, 80, 83, 87, 88, 89, 92, 93, 94, 95, 96, 105, 106, 110, 116, 118, 119, 121, 124, 136, 145, 151, 152, 153, 154, 155, 156, 165, 169, 170, 171, 176, 179, 183, 184, 187, 189, 190, 199, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 257, 258, 259, 262, 266, 267, 269, 271, 272, 273, 274, 388, 389, 391, 400, 401, 402, 403, 404, 409, 410, 462, 464, 465, 466, 472, 473, 477, 479, 483, 484, 485, 486, 487, 491, 493, 494, 497, 498, 499, 503, 504, 518, 519, 525, 530], "explain": [128, 133, 138, 142, 540], "explan": 110, "explicit": 112, "explicitli": [102, 126, 128, 132, 133, 137, 138, 140, 142], "exploit": [10, 139], "explor": [113, 413, 430], "expm1": [6, 118, 119, 238], "expon": [10, 118, 119, 121, 151, 200, 217, 240, 241, 247, 401, 402, 437, 543], "exponenti": [6, 10, 113, 240, 241, 247, 424, 450], "expos": [158, 540], "express": [10, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 112, 113, 200, 235, 547], "extend": [10, 110, 198, 396, 540], "extens": [0, 1, 3, 4, 9, 167, 235, 533], "extra": [110, 136, 162], "extract": [6, 98, 101, 102, 112, 123, 147, 177, 180, 248, 399, 481, 501, 507], "extrapol": 470, "extrema": 543, "ey": [6, 70, 79, 80, 89, 107, 132, 133, 154, 155, 177, 181, 198, 213, 217, 218, 229, 230, 231, 245, 252, 258, 482, 507], "f": [0, 6, 10, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 105, 107, 110, 112, 114, 115, 116, 118, 119, 121, 123, 124, 127, 139, 141, 145, 151, 152, 153, 154, 155, 156, 163, 164, 165, 168, 169, 170, 171, 176, 179, 183, 187, 188, 189, 190, 199, 200, 201, 202, 203, 217, 220, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 258, 259, 262, 342, 347, 355, 388, 389, 391, 393, 394, 400, 401, 402, 404, 409, 410, 432, 460, 461, 462, 464, 466, 468, 469, 472, 473, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 514, 518, 519, 521, 527, 530, 531, 532], "f0": 110, "f1": 110, "f2": 110, "f4": 71, "f8": [71, 110], "f_contigu": [45, 47, 188, 468], "f_k": 10, "fab": [6, 12, 13], "fact": 211, "factor": [10, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 204, 223], "fail": [107, 375, 413], "fallback": [209, 211, 414, 416, 417, 427, 432, 448], "fals": [17, 18, 19, 20, 21, 22, 33, 34, 35, 38, 39, 40, 43, 45, 47, 51, 58, 60, 61, 63, 66, 67, 69, 71, 82, 85, 89, 90, 92, 94, 97, 104, 107, 110, 112, 113, 115, 116, 122, 143, 157, 160, 164, 166, 169, 170, 172, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 202, 203, 204, 205, 216, 218, 220, 222, 226, 227, 233, 234, 242, 243, 244, 245, 246, 247, 251, 253, 254, 255, 257, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 280, 337, 338, 339, 340, 342, 360, 361, 362, 367, 379, 381, 386, 390, 391, 394, 403, 405, 465, 468, 469, 481, 484, 489, 497, 499, 520, 524, 525, 530, 532], "famili": 10, "fanci": 501, "fashion": [241, 540], "fast": [10, 125, 126, 128, 132, 133, 138, 139, 142], "faster": [10, 24, 154, 155], "fastest": [107, 188, 355, 460, 469], "fb": [113, 514], "featur": 110, "fetch": 469, "few": 143, "fft": [6, 543], "fft2": [6, 125, 128, 132], "fftfreq": [6, 10, 125, 129, 134, 141], "fftn": [6, 125, 126, 133, 139, 142], "fftshift": [6, 10, 126, 128, 133, 134], "fh": 159, "field": [110, 255], "field1": 110, "file": [158, 159, 161, 162, 167, 235], "filenam": [159, 235], "fill": [6, 23, 38, 107, 114, 115, 143, 163, 164, 172, 173, 255, 263, 347, 393, 394, 470, 510, 531, 532], "fill_diagon": 6, "fill_valu": [163, 164], "filt": 514, "filter": [10, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 486, 510, 512, 516, 524, 531, 532], "final": [4, 10, 85, 138, 139, 140, 142, 166, 246], "find": [36, 59, 85, 104, 107, 124, 172, 218, 222, 226, 374, 389, 390, 467, 480, 489, 491, 520, 543], "fine": 4, "finfo": [222, 389, 463, 491], "finfo_object": 144, "finit": [44, 187, 189, 190, 191, 192, 263, 491], "first": [16, 17, 18, 22, 24, 31, 33, 34, 35, 39, 40, 53, 58, 60, 62, 64, 65, 66, 70, 76, 77, 78, 83, 85, 91, 92, 102, 105, 106, 107, 110, 113, 116, 119, 126, 128, 130, 132, 133, 148, 151, 153, 154, 155, 156, 165, 168, 169, 170, 172, 173, 174, 176, 181, 182, 184, 188, 196, 198, 199, 201, 202, 203, 206, 208, 215, 219, 228, 229, 231, 232, 235, 240, 241, 242, 244, 245, 248, 249, 251, 252, 254, 255, 257, 258, 259, 262, 264, 265, 355, 391, 395, 396, 399, 401, 402, 403, 460, 466, 469, 472, 474, 476, 478, 480, 481, 489, 490, 494, 498, 499, 500, 502, 505, 507, 518, 520, 522, 526, 527, 528, 529], "fit": [214, 467], "fix": [6, 37, 73, 102, 110, 152, 406, 473, 477, 519], "flag": [45, 47, 107, 110, 188, 347, 468], "flanneri": 10, "flat": [33, 34, 107, 111, 146, 355, 357, 460, 461, 467, 521], "flatnonzero": [6, 390], "flatten": [6, 23, 33, 34, 35, 77, 78, 89, 93, 94, 97, 98, 101, 102, 107, 111, 143, 147, 172, 173, 182, 233, 251, 254, 257, 264, 265, 266, 267, 271, 273, 354, 369, 377, 390, 395, 407, 460, 461, 467, 474, 489, 501, 502, 507, 520, 521, 526], "flexibl": [106, 110, 159, 219], "flip": [6, 61, 63, 102, 143, 149, 150, 183, 208, 413, 476], "fliplr": [6, 102, 143, 148, 150, 208, 476], "flipud": [6, 102, 143, 148, 149, 208, 476], "float": [12, 13, 21, 25, 31, 42, 43, 46, 53, 58, 71, 83, 92, 94, 110, 114, 115, 119, 123, 124, 127, 141, 144, 145, 151, 158, 159, 160, 161, 162, 163, 164, 165, 168, 172, 173, 177, 179, 200, 214, 217, 218, 220, 222, 233, 234, 235, 240, 241, 246, 247, 251, 253, 254, 257, 263, 269, 272, 274, 389, 393, 394, 401, 402, 411, 415, 440, 441, 443, 444, 446, 449, 450, 452, 455, 462, 463, 464, 465, 479, 486, 497, 510, 523, 525, 531, 532, 540, 543], "float16": [9, 151], "float32": [0, 9, 44, 46, 51, 71, 85, 93, 107, 110, 112, 151, 342, 389, 411, 433, 438, 440, 441, 443, 444, 446, 452, 455, 468, 471], "float64": [0, 9, 46, 51, 58, 71, 94, 107, 110, 112, 342, 411, 412, 418, 419, 420, 422, 424, 425, 426, 433, 434, 437, 438, 440, 441, 443, 444, 445, 446, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 471, 486, 491, 528], "float_pow": [6, 401, 402], "floor": [6, 37, 73, 145, 153, 259, 466, 473, 477, 519], "floor_divid": [6, 259, 466], "flop": 113, "flush": 159, "fmax": [6, 155, 251, 252, 258, 268, 401, 402], "fmin": [6, 154, 252, 257, 258, 270, 401, 402], "fmod": [6, 259, 401, 402, 466], "fn": 160, "fname": 235, "follow": [4, 10, 24, 58, 110, 120, 136, 144, 157, 178, 210, 212, 220, 222, 228, 396, 468, 505, 540, 543], "forc": [110, 112], "forg": 4, "form": [10, 23, 38, 42, 43, 44, 45, 46, 47, 76, 82, 98, 101, 107, 109, 112, 113, 132, 133, 136, 163, 164, 166, 186, 194, 197, 208, 216, 227, 231, 234, 246, 250, 385, 396, 470, 478, 524, 529], "format": [110, 157, 159, 162, 543], "format_float_posit": 6, "format_float_scientif": 6, "former": [14, 26, 28, 29, 30, 32, 48, 49, 52, 54, 407, 502], "forth": [228, 505], "fortran": [47, 51, 107, 188, 342, 355, 460, 461, 468, 469, 521], "forward": [10, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 168], "found": [4, 480, 540], "four": [411, 440], "fourier": [125, 126, 127, 128, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 533, 543], "fourth": 126, "frac": [10, 509], "fraction": [260, 519], "free": [107, 372], "freedom": [272, 274, 453, 497, 525], "freq": [127, 129, 134, 141], "freq_spectrum": 130, "frequenc": [10, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141], "freshli": [191, 192, 527], "frexp": [6, 200], "fro": [205, 216, 220, 233], "frobeniu": [205, 220], "from": [3, 10, 14, 15, 17, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 67, 71, 74, 77, 78, 82, 84, 92, 95, 96, 98, 99, 101, 102, 107, 109, 110, 112, 114, 115, 119, 122, 123, 127, 131, 140, 141, 142, 148, 151, 157, 158, 159, 160, 161, 162, 163, 164, 168, 172, 175, 177, 180, 182, 197, 200, 209, 211, 212, 218, 219, 231, 235, 247, 248, 255, 256, 343, 347, 378, 383, 392, 393, 394, 396, 399, 403, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 465, 469, 470, 471, 476, 478, 480, 481, 494, 495, 496, 499, 501, 502, 507, 510, 512, 514, 516, 517, 520, 522, 523, 524, 529, 530, 531, 532, 543], "from_": 71, "from_dlpack": 6, "frombuff": [6, 159, 161, 162, 235], "fromfil": [6, 158, 161, 162], "fromfunct": [6, 42, 43, 44], "fromit": [6, 42, 43, 44, 158, 159, 162], "frompyfunc": 6, "fromregex": [6, 235], "fromstr": [6, 158, 159, 161, 235], "front": 514, "full": [6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "full_lik": [6, 38, 115, 163, 394, 532], "full_matric": 226, "fulli": [110, 254], "func1d": 24, "function": [0, 2, 3, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 82, 86, 90, 92, 95, 96, 102, 105, 107, 112, 114, 115, 117, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 138, 139, 142, 143, 151, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 171, 172, 173, 177, 188, 197, 206, 208, 209, 211, 215, 216, 219, 220, 221, 227, 228, 231, 232, 233, 235, 238, 240, 241, 247, 248, 250, 255, 259, 260, 271, 337, 338, 347, 350, 357, 372, 375, 385, 393, 394, 396, 401, 402, 407, 409, 410, 411, 414, 416, 417, 427, 432, 448, 460, 465, 466, 468, 470, 477, 478, 483, 486, 497, 501, 502, 505, 506, 512, 513, 516, 517, 518, 522, 525, 529, 530, 531, 532, 533, 540, 543], "fundament": [10, 110], "further": [97, 512, 516], "futur": [110, 173], "fweight": 90, "g": [4, 10, 110, 114, 115, 123, 163, 164, 177, 220, 393, 394, 411, 510, 531, 532, 547], "g64516002145": 6, "gamma": [6, 451], "gauss": 10, "gaussian": [411, 433, 457], "gc": 113, "gcd": [6, 199], "gen": 112, "gender": 110, "gener": [4, 10, 35, 58, 85, 110, 131, 136, 139, 142, 166, 181, 209, 210, 211, 212, 216, 222, 223, 233, 235, 246, 411, 413, 416, 447, 460, 491, 509, 512, 516, 524, 540, 543], "genfromtxt": [6, 235], "geometr": [6, 166, 234], "geomspac": [6, 234, 246], "get": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 100, 101, 107, 114, 115, 123, 127, 130, 136, 138, 141, 151, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 227, 232, 234, 235, 246, 248, 256, 347, 375, 392, 393, 394, 396, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 502, 510, 512, 513, 516, 517, 524, 527, 531, 532, 540], "get_arrai": 107, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 411], "get_sycl_devic": 411, "get_sycl_queu": 411, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 110], "getter": [107, 375], "gid": 173, "github": 157, "give": [10, 101, 107, 151, 173, 385, 469, 482, 488, 520], "given": [17, 18, 22, 23, 24, 25, 33, 34, 37, 38, 39, 42, 43, 45, 47, 51, 58, 76, 82, 89, 90, 93, 94, 103, 106, 107, 109, 110, 111, 113, 114, 115, 122, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 154, 155, 163, 164, 166, 168, 172, 173, 182, 184, 213, 220, 228, 232, 234, 246, 248, 251, 252, 254, 255, 257, 258, 266, 267, 268, 270, 271, 272, 273, 274, 339, 340, 342, 348, 349, 362, 367, 368, 373, 376, 379, 381, 386, 390, 393, 394, 399, 403, 405, 406, 411, 416, 438, 455, 465, 467, 468, 469, 473, 474, 475, 476, 478, 480, 481, 488, 492, 497, 499, 501, 505, 506, 509, 510, 520, 522, 525, 527, 529, 531, 532, 540], "global": 0, "golub": 220, "good": 423, "gpu": [0, 3, 4, 25, 38, 42, 43, 44, 45, 47, 82, 98, 101, 114, 115, 123, 127, 141, 158, 159, 160, 161, 163, 164, 166, 177, 234, 235, 246, 256, 392, 393, 394, 510, 524, 531, 532], "grade": 110, "gradient": [6, 103, 111, 214], "graphic": 4, "great": 10, "greater": [6, 62, 65, 107, 108, 116, 153, 170, 201, 202, 203, 218, 223, 366, 391, 396, 472, 481, 483, 495, 523], "greater_equ": [6, 116, 169, 202, 203, 391], "greatest": [153, 165, 199], "greedi": [112, 113], "grid": [42, 43, 44, 160, 180, 221, 255, 256, 392, 395], "group": [36, 390], "guarante": [110, 468, 469], "guid": [2, 3], "gumbel": 6, "gz": 235, "h": [167, 204, 220, 223, 255], "ha": [4, 10, 12, 13, 14, 15, 17, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 48, 49, 52, 54, 58, 85, 92, 93, 94, 104, 110, 116, 120, 130, 135, 136, 160, 168, 169, 170, 175, 179, 185, 186, 193, 194, 202, 203, 211, 224, 226, 231, 247, 253, 254, 259, 266, 267, 269, 271, 272, 273, 274, 391, 396, 403, 462, 463, 464, 465, 466, 467, 475, 479, 481, 495, 496, 497, 499, 500, 501, 506, 507, 521, 525, 540], "had": [407, 502], "hadamard": 113, "half": [15, 27, 126, 128, 129, 130, 132, 133, 234, 411, 441, 443, 444, 446, 455, 500], "ham": 6, "han": 6, "hand": [91, 206, 230], "handl": [25, 110, 124, 235, 390, 407, 461, 501, 502, 543], "happen": [51, 58, 107, 342, 413, 509], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 110, "have": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 76, 77, 78, 79, 80, 83, 87, 88, 91, 92, 93, 94, 95, 96, 105, 106, 109, 110, 116, 118, 119, 121, 124, 132, 133, 142, 144, 145, 151, 152, 153, 154, 155, 156, 165, 169, 170, 171, 175, 176, 179, 183, 184, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 208, 214, 216, 219, 221, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 252, 253, 254, 258, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 388, 389, 391, 399, 400, 401, 402, 403, 404, 409, 410, 430, 462, 464, 465, 466, 467, 468, 469, 472, 473, 477, 478, 479, 483, 484, 485, 486, 487, 491, 493, 494, 496, 497, 498, 499, 503, 504, 506, 518, 519, 523, 525, 527, 529, 540], "hd": 113, "header": 167, "heapsort": [35, 489], "heavisid": 6, "hello": 110, "help": 547, "helper": 543, "henc": [120, 168], "here": [6, 110, 112, 130, 135, 136, 512, 516], "hermit": [210, 212], "hermitian": [130, 135, 136, 138, 139, 204, 209, 210, 211, 212, 218, 222, 226, 227, 543], "hfft": [6, 10, 135], "hierarchi": 196, "high": [70, 136, 411, 439, 442, 455], "higher": [24, 107, 112, 174, 182, 359, 526, 528], "highest": 125, "highli": 159, "hist": [172, 449], "hist_0": 173, "hist_1": 173, "histogram": [6, 104, 173, 480, 543], "histogram2d": 6, "histogram_bin_edg": [6, 172], "histogramdd": [6, 172], "hold": [75, 93, 94, 172, 220, 254, 266, 267, 271, 273, 460, 507], "homogen": 110, "hopkin": 220, "horizont": [76, 77, 78, 102, 109, 143, 148, 174, 175, 208, 476, 478, 492, 496, 529], "host": [3, 4, 25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 510, 512, 516, 524, 531, 532], "household": 223, "how": [0, 4, 110, 136, 139, 168, 406, 407, 461, 501, 502, 512, 516], "howev": [107, 377, 501], "hsplit": [6, 77, 78, 492], "hstack": [6, 76, 77, 78, 109, 478, 492, 496, 529], "http": [4, 157], "hyperbol": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 485, 487, 503, 504, 543], "hypergeometr": 6, "hypot": [6, 465], "hypotenus": [176, 465], "i": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 282, 342, 347, 357, 359, 366, 372, 375, 377, 380, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540, 547], "i0": 6, "i1": [107, 110, 380], "i2": [107, 110, 380], "i3": [107, 380], "i4": [71, 110], "i7": 112, "i8": [71, 110], "iaxi": 396, "iaxis_pad_width": 396, "icpx": 4, "icx": 4, "id": [17, 22], "ideal": 486, "ident": [3, 6, 17, 22, 24, 44, 92, 110, 123, 134, 143, 225, 232, 450, 527], "identifi": 110, "idx": 182, "ieee": 144, "ifft": [6, 125, 132, 133, 135, 136, 141], "ifft2": [6, 126, 131, 133], "ifftn": [6, 128, 131, 132], "ifftshift": [6, 10, 129, 133], "ignor": [33, 34, 91, 110, 154, 155, 162, 172, 173, 251, 252, 253, 257, 258, 264, 265, 268, 269, 270, 272, 274, 497, 525], "ihfft": [6, 130], "ii": [24, 112, 434], "iinfo": 428, "iinfo_object": 178, "ij": [112, 113, 255], "ijk": 112, "il": 113, "il1": 512, "il2": 512, "illustr": 211, "ilm": 112, "im": [221, 395], "imag": [6, 10, 21, 39, 107, 462, 463, 470, 540], "imaginari": [21, 39, 107, 136, 154, 155, 179, 185, 186, 193, 194, 209, 210, 212, 217, 252, 258, 263, 356, 462, 463, 490, 520], "implement": [3, 4, 6, 46, 125, 157], "impli": [110, 460], "implicit": 112, "import": [0, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 350, 352, 355, 356, 357, 359, 364, 366, 370, 375, 376, 377, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 436, 445, 449, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "improv": 112, "in1d": 6, "in_array1": 117, "includ": [4, 10, 17, 22, 23, 25, 38, 42, 43, 44, 45, 46, 47, 58, 82, 92, 98, 101, 104, 112, 113, 124, 163, 164, 166, 167, 172, 173, 186, 194, 222, 234, 246, 247, 253, 254, 268, 269, 270, 272, 274, 411, 455, 465, 486, 497, 524, 525], "include_initi": 92, "inclus": [411, 439, 442, 481], "increas": [104, 110, 120, 131, 136, 172, 396, 470, 524], "ind": [35, 104, 229, 406, 407, 512, 513, 516, 517], "independ": 206, "index": [4, 23, 33, 34, 35, 36, 74, 107, 110, 113, 123, 126, 132, 140, 147, 157, 180, 182, 188, 197, 255, 264, 265, 343, 355, 357, 380, 390, 406, 407, 460, 461, 469, 470, 480, 481, 492, 501, 502, 512, 516, 520, 521, 530, 533, 543], "index_arrai": [33, 34, 35], "indic": [6, 10, 24, 33, 34, 35, 36, 41, 92, 97, 99, 100, 104, 107, 108, 110, 112, 113, 122, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 147, 157, 160, 172, 174, 182, 229, 230, 248, 249, 256, 264, 265, 339, 340, 341, 365, 368, 374, 383, 390, 398, 406, 407, 461, 480, 483, 484, 489, 492, 501, 502, 508, 512, 513, 516, 517, 520, 521, 527, 528, 530], "indices_or_sect": [41, 108, 174, 492, 528], "indirect": [35, 489], "individu": 421, "inequ": 391, "inexact": [151, 263, 271, 273], "inf": [9, 14, 15, 18, 26, 27, 28, 31, 32, 42, 43, 44, 48, 53, 54, 83, 105, 184, 187, 189, 190, 191, 192, 205, 216, 220, 233, 236, 237, 239, 252, 258, 263, 264, 265, 268, 270, 273, 404, 491, 493, 518], "infer": [44, 92, 247, 465, 469], "infin": [14, 15, 17, 22, 26, 27, 28, 29, 30, 32, 44, 48, 49, 52, 54, 153, 187, 189, 190, 191, 192, 259, 263, 268, 270, 273, 466, 519, 543], "infinit": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 205, 220, 486], "infj": [29, 30, 49, 52], "info": 6, "inform": [0, 45, 47, 107, 110, 130, 136, 138, 144, 353, 468, 540, 543], "initi": [19, 20, 92, 107, 114, 162, 251, 257, 268, 270, 271, 273, 360, 362, 367, 381, 403, 411, 499], "inner": [6, 24, 91, 112, 113, 215, 219, 249, 395], "innermost": [208, 216, 231, 250], "input": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 70, 72, 73, 75, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 215, 216, 218, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 355, 364, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 433, 439, 455, 460, 462, 463, 464, 465, 466, 467, 468, 472, 473, 474, 475, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 518, 519, 520, 523, 524, 525, 526, 527, 528, 531, 532], "insert": [6, 23, 24, 33, 34, 97, 102, 104, 107, 112, 120, 166, 172, 234, 246, 264, 265, 268, 270, 374, 407, 469, 480, 481, 543], "instal": 2, "instanc": [3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 130, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 177, 180, 234, 235, 246, 248, 249, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 527, 531, 532], "instead": [36, 51, 102, 106, 107, 112, 120, 152, 166, 172, 173, 180, 188, 219, 234, 241, 246, 251, 257, 342, 390, 403, 461, 470, 499, 540], "instruct": 4, "int": [9, 17, 22, 23, 24, 25, 33, 34, 35, 37, 38, 41, 46, 58, 68, 69, 77, 78, 89, 91, 92, 93, 94, 97, 98, 99, 101, 102, 103, 107, 108, 110, 114, 115, 116, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 174, 177, 178, 180, 182, 206, 208, 214, 217, 220, 228, 229, 230, 231, 232, 233, 234, 246, 247, 248, 251, 253, 254, 257, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 357, 364, 376, 385, 387, 393, 394, 396, 397, 398, 403, 406, 407, 411, 439, 442, 461, 465, 467, 469, 470, 474, 475, 476, 477, 488, 489, 492, 495, 496, 497, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 521, 522, 523, 524, 525, 527, 528, 531, 532, 540], "int16": 110, "int32": [0, 9, 46, 71, 110, 114, 115, 123, 158, 161, 163, 164, 177, 235, 271, 273, 393, 394, 411, 413, 421, 423, 428, 430, 436, 439, 455, 471, 499, 510, 531, 532], "int64": [0, 9, 71, 110, 271, 273, 471], "int8": [110, 403], "int_": 9, "int_0": 509, "int_t": 509, "intc": 9, "integ": [25, 37, 41, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 92, 93, 94, 104, 107, 108, 110, 145, 148, 151, 152, 153, 157, 165, 172, 174, 178, 183, 197, 199, 200, 201, 217, 220, 228, 229, 231, 233, 247, 251, 253, 257, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 377, 385, 401, 402, 403, 406, 411, 439, 442, 447, 461, 465, 466, 467, 469, 472, 473, 474, 476, 477, 480, 481, 482, 492, 494, 497, 499, 501, 505, 507, 519, 520, 521, 523, 525, 528, 540], "integer_lik": [228, 505], "integr": [3, 4, 58, 92, 94, 151, 172, 247, 253, 254, 260, 269, 272, 274, 401, 402, 465, 497, 499, 509, 525], "intel": [3, 112], "intend": [107, 385], "intent": 151, "interchang": [107, 261, 382, 500], "interfac": [0, 158], "interior": 168, "intermedi": [93, 112, 113], "intern": [35, 411, 489], "interp": 6, "interpol": [136, 470, 486], "interpret": [2, 42, 43, 44, 50, 69, 82, 107, 110, 130, 136, 138, 158, 197, 248, 357, 390, 406, 540], "intersect1d": 6, "interv": [10, 14, 15, 25, 26, 27, 28, 30, 48, 52, 104, 120, 166, 234, 246, 411, 439, 441, 443, 444, 446, 454, 455, 500], "intp": [271, 273], "intrins": 540, "introduc": 474, "introduct": 10, "introselect": [107, 366, 397], "inv": [6, 205, 222], "invers": [10, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 200, 213, 222, 229, 230, 238, 457, 485, 487, 503, 504, 520], "invert": [6, 61, 63, 213, 222, 229], "invok": 540, "involv": 229, "io": [157, 235], "irfft": [6, 127, 130, 135, 137, 138, 139, 141], "irfft2": [6, 136, 138, 140], "irfftn": [6, 136, 137, 142], "irrespect": 35, "is_busdai": 6, "isalignedstruct": 110, "isbuiltin": 110, "isclos": [6, 18], "iscomplex": [6, 186, 193], "iscomplexobj": [6, 185, 194], "isdtyp": 6, "isfinit": [6, 189, 190, 191, 192, 263, 268, 270, 273], "isfortran": 6, "isin": 6, "isinf": [6, 187, 190, 191, 192, 263], "isn": 110, "isnan": [6, 187, 189, 191, 192, 263, 266, 267, 268, 270, 271, 273], "isnat": [6, 190], "isneginf": [6, 187, 189, 190, 192, 263], "isposinf": [6, 187, 189, 190, 191, 263], "isreal": [6, 185, 194], "isrealobj": [6, 186, 193], "isscalar": 6, "issu": 132, "issubdtyp": 6, "item": [6, 36, 107, 158, 159, 161, 520, 533], "item_dtyp": 110, "item_hasobject": 110, "item_is_point": 110, "items": [70, 107, 110], "iter": [6, 42, 43, 44, 107, 113, 146, 158, 159, 161, 162, 354, 355, 407, 460, 470, 502, 522, 543], "its": [4, 6, 10, 12, 13, 17, 22, 35, 58, 98, 107, 130, 136, 138, 144, 172, 173, 177, 209, 210, 211, 212, 219, 222, 230, 253, 269, 272, 274, 385, 398, 448, 460, 465, 469, 489, 497, 508, 509, 510, 525, 540], "itself": [51, 107, 110, 200, 263, 342, 540], "iu": 248, "iu1": [248, 516], "iu2": 516, "ix_": 6, "ixgrid": 197, "j": [38, 79, 80, 107, 112, 126, 128, 130, 131, 132, 133, 135, 136, 139, 140, 142, 151, 160, 179, 180, 198, 204, 209, 210, 220, 221, 228, 231, 239, 249, 263, 385, 395, 404, 407, 462, 490, 494, 502, 505], "j1": 198, "jame": 10, "ji": 112, "jil": 112, "jj": 24, "jk": [112, 113], "jl": 113, "john": [10, 220], "join": [76, 77, 78, 109, 175, 182, 478, 492, 496, 522, 529, 543], "jump": [95, 409], "just": [70, 76, 102, 110, 126, 132, 137, 139, 140, 182], "k": [10, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 98, 101, 105, 107, 112, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 164, 165, 169, 170, 171, 176, 179, 183, 187, 189, 190, 198, 199, 200, 201, 202, 203, 214, 223, 225, 226, 227, 228, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 252, 258, 259, 262, 282, 342, 347, 388, 389, 391, 394, 400, 401, 402, 404, 409, 410, 460, 462, 464, 466, 472, 473, 476, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 505, 510, 511, 512, 513, 515, 516, 517, 518, 519, 523, 527, 530, 532, 547], "kaiser": 6, "kappa": 456, "keep": [50, 51, 107, 342, 520], "keepdim": [17, 19, 20, 22, 33, 34, 58, 89, 107, 216, 220, 233, 247, 251, 253, 254, 257, 264, 265, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 360, 361, 362, 367, 379, 381, 386, 403, 405, 407, 465, 497, 499, 502, 525], "kei": [3, 35, 107, 110, 146, 287, 332, 489], "kernel": 486, "key2": 110, "keyword": [10, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 82, 83, 87, 88, 91, 95, 96, 98, 99, 101, 105, 107, 114, 115, 118, 119, 121, 123, 124, 127, 141, 145, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 171, 176, 177, 180, 183, 199, 200, 201, 206, 208, 215, 221, 231, 232, 235, 237, 238, 239, 240, 241, 248, 249, 252, 256, 258, 259, 260, 262, 263, 347, 388, 389, 392, 393, 394, 396, 400, 401, 402, 404, 409, 410, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 464, 466, 469, 472, 473, 479, 483, 484, 485, 487, 491, 498, 503, 504, 510, 512, 516, 518, 519, 524, 527, 530, 531, 532, 540], "ki": 112, "kind": [35, 51, 71, 77, 78, 84, 92, 107, 110, 112, 144, 175, 219, 247, 249, 341, 342, 366, 377, 397, 465, 469, 478, 489, 496, 527, 529, 543], "kk": 24, "kl": [10, 112, 113], "known": [10, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 159, 449], "kron": 6, "kroneck": 198, "kth": [107, 366, 397], "kwarg": [12, 13, 14, 15, 16, 24, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 83, 87, 88, 95, 96, 105, 107, 116, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 160, 165, 169, 170, 171, 176, 183, 187, 189, 190, 199, 200, 201, 202, 203, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 252, 258, 259, 260, 262, 313, 344, 388, 389, 391, 396, 400, 401, 402, 404, 409, 410, 464, 466, 472, 473, 479, 483, 484, 485, 487, 491, 493, 494, 498, 503, 504, 518, 519], "l": [10, 41, 110, 204, 210, 212, 231], "la": [209, 211, 212], "label": 112, "laid": 47, "lam": 436, "lambda": 160, "lanczo": 486, "lapack": [209, 211], "laplac": 6, "laptop": 4, "larg": [10, 95, 110, 172, 222, 263, 409, 523, 547], "larger": [112, 125, 126, 128, 131, 132, 133, 135, 137, 138, 139, 140, 142, 144, 470, 507, 523], "largest": [10, 113, 139, 144, 152, 178, 214, 220, 259, 263, 466], "largest_singular_valu": 222, "last": [17, 22, 23, 24, 35, 70, 91, 102, 103, 107, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 148, 166, 168, 181, 188, 208, 219, 227, 228, 231, 234, 246, 249, 355, 359, 396, 403, 460, 469, 474, 480, 489, 495, 499, 505, 522, 523, 527], "later": [396, 547], "latest": [4, 157], "latter": [14, 26, 28, 29, 30, 32, 48, 49, 52, 54, 154, 155, 252, 258, 407, 502], "layout": [4, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 105, 107, 112, 114, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 163, 164, 165, 169, 170, 171, 176, 179, 183, 187, 189, 190, 199, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 258, 259, 262, 347, 353, 388, 389, 391, 393, 394, 400, 401, 402, 404, 409, 410, 460, 462, 464, 466, 468, 469, 472, 473, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 518, 519, 527, 530, 531, 532, 533], "lcm": [6, 165], "ldexp": 6, "ldot": 10, "lead": [131, 132, 133, 266, 267, 514], "learn": [3, 4, 241], "least": [55, 56, 57, 58, 100, 109, 110, 113, 120, 143, 149, 154, 155, 159, 186, 214, 223, 252, 258, 478, 529], "left": [10, 30, 33, 34, 37, 52, 62, 65, 89, 102, 104, 107, 149, 150, 201, 211, 216, 220, 233, 251, 257, 264, 265, 271, 273, 374, 403, 454, 472, 477, 480, 499, 509, 524], "left_shift": [6, 62, 65, 472], "leg": [176, 465], "legaci": 447, "legal": 182, "len": [97, 107, 110, 128, 129, 130, 133, 135, 136, 137, 138, 142, 180, 214, 251, 255, 256, 257, 305, 482, 524], "length": [25, 41, 58, 93, 94, 103, 116, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 162, 166, 168, 172, 175, 209, 226, 227, 228, 246, 251, 254, 255, 257, 266, 267, 396, 407, 414, 469, 471, 478, 480, 481, 482, 495, 502, 505, 506, 529], "less": [6, 93, 94, 107, 116, 169, 170, 172, 173, 203, 214, 222, 231, 266, 267, 271, 273, 359, 391, 403, 481, 483, 499, 507], "less_equ": [6, 116, 169, 170, 202, 391], "let": [232, 413, 469, 527], "level": [533, 540], "level_zero": [25, 38, 42, 43, 44, 45, 47, 82, 98, 101, 114, 115, 123, 127, 141, 158, 159, 160, 161, 163, 164, 166, 177, 234, 235, 246, 256, 392, 393, 394, 510, 524, 531, 532], "lexicograph": 520, "lexsort": [6, 35, 489], "li": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 474, 475], "lib": 70, "librari": [3, 4, 540], "light": 10, "like": [25, 38, 42, 43, 45, 47, 51, 55, 56, 57, 76, 97, 107, 109, 112, 114, 123, 138, 158, 159, 160, 161, 162, 163, 166, 177, 182, 234, 235, 246, 248, 342, 355, 364, 387, 393, 407, 411, 455, 460, 468, 469, 502, 531, 543], "limit": [3, 4, 12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 79, 80, 82, 83, 86, 87, 88, 90, 95, 96, 105, 107, 110, 114, 115, 116, 117, 118, 119, 121, 123, 124, 144, 145, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 176, 177, 178, 183, 187, 189, 190, 199, 200, 201, 202, 203, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 268, 269, 270, 271, 272, 273, 274, 342, 344, 388, 389, 391, 393, 394, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 436, 437, 439, 442, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 464, 466, 468, 472, 473, 479, 483, 484, 485, 486, 487, 489, 491, 493, 494, 497, 498, 499, 503, 504, 518, 519, 525, 527, 531, 532], "linalg": [6, 91, 102, 106, 112, 113, 249, 250, 395, 494, 505, 507, 526, 527], "line": [214, 235], "linear": [10, 81, 86, 214, 225, 246, 396, 533, 543], "linear_ramp": 396, "linspac": [0, 6, 25, 117, 166, 221, 246, 255, 395, 486, 509, 523], "linux": 4, "list": [3, 6, 9, 23, 38, 41, 42, 43, 44, 45, 47, 55, 56, 57, 67, 77, 78, 82, 98, 101, 107, 108, 109, 110, 112, 113, 129, 134, 143, 163, 164, 166, 168, 174, 175, 186, 194, 228, 234, 235, 246, 249, 254, 385, 398, 461, 467, 468, 470, 471, 478, 481, 492, 496, 505, 508, 521, 522, 524, 527, 528, 529, 530], "list_pickl": 110, "littl": 110, "ln": 246, "load": [6, 159, 235], "loadtxt": [6, 159], "loan": 220, "loc": [411, 422, 424, 425, 433, 457], "local": 4, "locat": [0, 4, 167, 191, 192, 248, 395, 422, 424, 480, 527], "log": [6, 121, 166, 224, 234, 237, 238, 239, 240, 246, 247, 426], "log10": [6, 236, 238, 239], "log1p": [6, 119, 121, 236, 237, 239], "log2": [6, 236, 237, 238, 241], "log_bas": 246, "logabsdet": 224, "logaddexp": [6, 92, 241, 247], "logaddexp2": [6, 240, 247], "logarithm": [92, 207, 224, 234, 236, 237, 238, 239, 240, 241, 247, 427, 543], "logic": [17, 22, 242, 243, 244, 245, 533, 543], "logical_and": [6, 60, 243, 244, 245], "logical_not": [6, 61, 63, 183, 242, 244, 245], "logical_or": [6, 64, 242, 243, 245], "logical_xor": [6, 66, 242, 243, 244], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 166, 234], "logsumexp": [92, 240, 241], "lomax": 434, "long": [110, 217], "longer": [130, 136, 547], "look": [389, 502], "loop": [24, 112], "loos": 111, "lorentz": 449, "lose": [130, 136, 138], "low": [70, 126, 128, 132, 133, 411, 439, 442, 455, 540], "lower": [98, 123, 172, 173, 196, 204, 210, 212, 248, 510, 511, 512, 513, 516, 517], "lowest": [58, 112, 113, 165, 199, 411, 439], "lstsq": 6, "m": [4, 10, 24, 90, 109, 110, 112, 123, 126, 128, 130, 132, 133, 136, 137, 138, 142, 148, 149, 150, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 231, 248, 249, 250, 254, 407, 476, 481, 501, 502, 510, 511, 512, 513, 515, 516, 517], "machin": [4, 10, 144, 178, 214, 241, 463], "machineri": 110, "made": [38, 43, 55, 110, 157, 198, 263, 469, 492], "magnitud": [12, 13, 83, 124, 404], "mai": [17, 21, 22, 51, 71, 75, 77, 78, 84, 94, 107, 110, 112, 113, 120, 126, 128, 130, 131, 132, 133, 135, 136, 139, 142, 168, 173, 175, 205, 209, 210, 214, 216, 220, 223, 241, 246, 249, 263, 269, 272, 274, 342, 375, 407, 460, 463, 470, 478, 486, 496, 506, 527, 529, 540], "main": [98, 99, 100, 101, 102, 123, 143, 177, 208, 212, 231, 248, 507, 510, 511, 512, 515, 516], "mainstai": 10, "maintain": [35, 104, 107, 110, 172, 374, 480, 489, 502], "major": [4, 42, 43, 44, 45, 47, 50, 51, 107, 342, 390, 460, 461, 468, 521], "make": [45, 47, 76, 110, 221, 255, 395, 468, 486, 520, 523], "manag": 0, "mandelbrot": [221, 395], "mani": [10, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 460, 540], "manipul": [3, 99, 533, 543], "mantissa": 200, "manual": [4, 110, 506], "mappingproxi": 110, "mask": [97, 110, 197, 248, 390, 399, 408, 501, 512, 516], "mask_func": 248, "mask_indic": [6, 512, 516], "mass": 172, "match": [12, 13, 43, 77, 78, 84, 89, 92, 103, 110, 157, 159, 168, 181, 228, 247, 249, 406, 407, 465, 496, 501, 502, 505, 530], "math": [10, 117], "mathbf": [232, 527], "mathemat": [220, 533, 543], "matlab": 156, "matmul": [6, 106, 223, 226, 526], "matplotlib": [255, 449], "matric": [143, 160, 180, 197, 207, 208, 209, 211, 213, 216, 218, 220, 222, 223, 224, 226, 227, 231, 249, 250, 255, 543], "matrix": [85, 90, 106, 107, 112, 181, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 231, 249, 250, 255, 359, 494, 515, 524, 526, 527, 533, 543], "matrix_norm": [6, 220], "matrix_pow": [6, 494], "matrix_rank": 6, "matrix_transpos": 6, "matter": 520, "max": [0, 6, 19, 33, 75, 107, 144, 154, 155, 172, 173, 178, 214, 218, 220, 222, 252, 257, 258, 268, 344, 428, 502, 506, 523, 540], "max_arg": 0, "max_val": 0, "maxima": [154, 251, 252], "maximum": [0, 6, 19, 33, 34, 75, 107, 113, 154, 155, 251, 257, 258, 264, 265, 268, 270, 339, 360, 396, 401, 402, 405, 407, 523], "may_share_memori": 6, "md": 220, "mean": [3, 6, 10, 25, 38, 40, 42, 43, 44, 45, 46, 47, 51, 58, 82, 89, 98, 99, 101, 107, 112, 114, 115, 123, 126, 127, 128, 132, 133, 137, 138, 139, 140, 141, 142, 158, 159, 160, 161, 162, 163, 164, 168, 177, 180, 205, 220, 235, 248, 254, 256, 269, 272, 274, 342, 347, 355, 385, 392, 393, 394, 396, 411, 424, 426, 429, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 456, 457, 460, 469, 476, 497, 499, 510, 512, 516, 524, 525, 531, 532, 540], "meaningfulli": 540, "meant": 540, "median": [0, 6, 396], "meet": [38, 481], "memori": [3, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 105, 107, 110, 112, 114, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 169, 170, 171, 176, 179, 183, 187, 188, 189, 190, 199, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 254, 255, 258, 259, 262, 347, 353, 380, 388, 389, 391, 393, 394, 400, 401, 402, 404, 409, 410, 460, 462, 464, 466, 468, 469, 472, 473, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 518, 519, 527, 530, 531, 532, 533, 547], "mergesort": [35, 489], "mersenn": 411, "mesh": 197, "meshgrid": [6, 160, 180, 197, 256, 392], "met": [106, 219], "meta": 110, "metadata": 110, "method": [10, 17, 19, 20, 22, 35, 51, 82, 106, 107, 110, 146, 157, 159, 218, 222, 226, 250, 342, 347, 357, 364, 372, 375, 387, 390, 398, 411, 469, 482, 499, 501, 508, 533], "mgrid": [126, 128, 137, 140, 180, 197], "mgridclass": 256, "middl": [10, 102, 126, 128, 132, 133, 211, 254], "might": [112, 131, 132, 133], "min": [6, 20, 34, 75, 107, 144, 154, 155, 172, 173, 178, 205, 208, 214, 220, 223, 226, 227, 251, 252, 258, 270, 344, 502, 540], "min_scalar_typ": 6, "minima": [155, 257, 258], "minimum": [6, 20, 33, 34, 38, 75, 107, 151, 154, 155, 251, 252, 257, 264, 265, 268, 270, 340, 362, 396, 401, 402, 405], "minlength": 59, "mintypecod": 6, "minu": [121, 153, 259, 466, 519], "mirror": 396, "miscellan": [2, 533, 543], "mise": 456, "miss": 235, "mix": [215, 249], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 122, 466, 523], "mode": [74, 81, 86, 107, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 223, 343, 368, 383, 396, 406, 407, 449, 454, 461, 480, 501, 502], "model": [4, 413], "modf": 6, "modifi": [82, 102, 143, 254, 396, 448], "modul": [125, 167, 533], "modulu": [156, 259, 466], "moment": 85, "monoton": [104, 172], "moor": 222, "more": [0, 3, 4, 35, 38, 55, 56, 57, 109, 110, 112, 113, 121, 137, 140, 149, 150, 157, 159, 173, 175, 180, 200, 206, 208, 214, 215, 217, 218, 219, 221, 222, 226, 228, 231, 232, 238, 240, 470, 476, 496, 505, 509, 520, 523, 540, 547], "most": [3, 4, 23, 102, 103, 110, 113, 125, 131, 263, 411, 447, 470, 495], "move": [107, 261, 366, 398, 474, 475, 508, 520], "moveaxi": [6, 398, 474, 475, 508, 522], "msg": 0, "mt": [107, 250], "mt19937": 447, "mu": [422, 426, 433, 456], "multi": [2, 107, 180, 197, 206, 256, 380, 392, 461, 520, 533], "multi_dot": [6, 106, 112, 113], "multi_index": 461, "multiarrai": 110, "multidimension": [172, 181, 530], "multinomi": 6, "multipl": [4, 10, 24, 33, 34, 35, 41, 58, 77, 78, 85, 91, 92, 108, 110, 112, 126, 128, 132, 133, 137, 138, 140, 142, 165, 173, 174, 175, 182, 197, 199, 206, 209, 210, 211, 212, 213, 219, 247, 251, 253, 257, 268, 269, 270, 272, 274, 460, 465, 478, 481, 489, 492, 496, 497, 509, 520, 522, 525, 528, 529, 533], "multipli": [6, 93, 112, 200, 211, 271, 403], "multivalu": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "multivari": 429, "multivariate_norm": 6, "must": [12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 75, 76, 77, 78, 79, 80, 83, 87, 88, 89, 92, 93, 94, 95, 96, 103, 105, 106, 109, 118, 119, 120, 121, 124, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 149, 151, 152, 153, 154, 155, 156, 159, 162, 165, 168, 169, 170, 171, 172, 173, 175, 176, 179, 183, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 206, 208, 219, 220, 221, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 388, 389, 391, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 462, 464, 465, 466, 467, 472, 473, 474, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 491, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 518, 519, 525, 527, 529, 530], "mx": 214, "mxn": [208, 216, 231, 250], "my_func": 24, "n": [0, 4, 10, 36, 41, 94, 99, 100, 103, 104, 107, 108, 109, 110, 111, 120, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 160, 168, 174, 177, 197, 208, 214, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 248, 249, 250, 254, 255, 272, 274, 385, 396, 398, 399, 406, 407, 413, 428, 430, 440, 450, 480, 482, 492, 494, 497, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 515, 516, 517, 524, 525, 527, 528, 540], "n1": 255, "n2": [235, 255], "n3": 255, "naiv": 113, "name": [0, 6, 24, 110, 222, 486], "namedtupl": 223, "nan": [9, 14, 15, 17, 18, 22, 26, 27, 28, 29, 30, 32, 33, 34, 39, 42, 43, 44, 48, 49, 52, 54, 105, 151, 154, 155, 184, 187, 189, 190, 191, 192, 237, 251, 252, 253, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 401, 402, 403, 491, 493, 497, 518, 520, 525, 543], "nan_to_num": 6, "nanargmax": [6, 33, 265], "nanargmin": [6, 34, 264], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 154, 155, 251, 252, 258, 270], "nanmean": [6, 253, 272, 274, 497, 525], "nanmedian": 6, "nanmin": [6, 154, 155, 252, 257, 258, 268], "nanpercentil": 6, "nanprod": [6, 403], "nanquantil": 6, "nanstd": [6, 253, 269, 274, 497, 525], "nansum": 6, "nanvar": [6, 253, 269, 272, 497, 525], "nat": 190, "nativ": 110, "native_cod": 110, "native_dt": 110, "natur": [224, 236, 237, 238, 239, 240, 241, 247], "nbad": 423, "nbyte": 107, "nd": [107, 357], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 544], "ndim": [6, 36, 38, 45, 47, 55, 56, 57, 90, 99, 102, 107, 110, 143, 198, 220, 226, 227, 250, 251, 257, 393, 398, 506, 508, 531], "ndindex": 24, "ndmin": 38, "ne": 486, "nearest": [37, 73, 145, 152, 153, 259, 466, 473, 477, 491, 519], "necessari": [4, 17, 22, 25, 38, 42, 43, 45, 47, 55, 84, 93, 94, 111, 122, 130, 136, 138, 143, 157, 166, 234, 246, 249, 253, 254, 266, 267, 269, 271, 272, 273, 274, 403, 470, 497, 499, 525, 547], "necessarili": [209, 211], "need": [4, 38, 43, 102, 112, 167, 254, 468, 501, 502, 530], "needs_init": 110, "needs_pyapi": 110, "neg": [6, 10, 17, 22, 37, 59, 83, 101, 102, 104, 107, 120, 123, 126, 128, 131, 132, 133, 136, 139, 148, 151, 162, 168, 172, 187, 189, 190, 191, 192, 217, 228, 263, 268, 270, 272, 273, 274, 375, 400, 401, 402, 403, 406, 407, 430, 461, 477, 497, 499, 501, 502, 505, 507, 525], "negat": 481, "negative_binomi": 6, "neginf": 263, "neither": [106, 154, 155, 215, 226, 249, 268, 270], "nest": [46, 109, 175, 478, 496, 522, 529], "nested_it": 6, "net": [154, 155, 252, 258], "never": 523, "new": [23, 24, 38, 51, 67, 68, 69, 76, 77, 78, 89, 92, 93, 94, 97, 102, 107, 109, 110, 111, 114, 115, 120, 154, 155, 157, 161, 162, 163, 164, 166, 175, 177, 182, 234, 246, 247, 248, 252, 254, 258, 261, 266, 267, 271, 273, 342, 372, 375, 385, 393, 394, 398, 465, 469, 470, 474, 475, 478, 492, 496, 506, 508, 522, 529, 530, 531, 532, 540], "new_dtyp": 110, "new_ord": 110, "new_shap": 470, "newaxi": 120, "newbyteord": 110, "newli": [12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 48, 49, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 105, 107, 114, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 163, 164, 165, 169, 170, 171, 176, 179, 183, 187, 189, 190, 199, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 258, 259, 262, 342, 347, 388, 389, 391, 393, 394, 400, 401, 402, 404, 409, 410, 462, 464, 466, 472, 473, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 518, 519, 527, 531, 532], "newshap": 469, "next": [4, 144, 389], "nextaft": 6, "ngood": 423, "ni": [24, 255, 407, 501, 502], "nine": 413, "ninja": 4, "nj": [24, 407, 501, 502], "njm": 112, "nk": [24, 407, 501, 502], "nl": 10, "nlk": 112, "nn": 255, "noisi": 214, "non": [25, 36, 38, 42, 43, 44, 45, 46, 47, 51, 58, 59, 82, 89, 98, 99, 101, 104, 107, 114, 115, 122, 123, 127, 136, 139, 141, 147, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 177, 180, 185, 187, 197, 206, 228, 234, 235, 246, 248, 256, 263, 264, 265, 268, 270, 272, 274, 342, 347, 365, 375, 390, 392, 393, 394, 399, 401, 402, 411, 431, 432, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 497, 505, 510, 512, 516, 524, 525, 530, 531, 532], "nonc": [431, 432], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 182, 183, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 205, 214, 216, 218, 219, 220, 222, 226, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 357, 360, 361, 362, 366, 367, 368, 371, 372, 373, 374, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 507, 508, 509, 510, 512, 516, 518, 519, 520, 521, 523, 524, 525, 527, 529, 530, 531, 532, 540], "nonzero": [6, 36, 89, 107, 147, 197, 530, 540], "nor": [154, 155, 211, 268, 270], "norm": [6, 10, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 205, 211, 214, 216, 233, 543], "normal": [6, 90, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 172, 209, 210, 223, 232, 241, 411, 426, 429, 440, 452, 461, 486, 527], "not_equ": [6, 116, 169, 170, 202, 203], "note": [12, 13, 14, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 50, 52, 53, 54, 61, 62, 63, 65, 77, 78, 82, 91, 95, 97, 102, 104, 105, 107, 110, 112, 113, 120, 122, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 152, 154, 155, 158, 159, 160, 161, 162, 172, 180, 182, 183, 187, 200, 201, 206, 208, 209, 216, 220, 228, 233, 235, 246, 254, 259, 262, 272, 273, 274, 347, 372, 390, 396, 398, 399, 401, 402, 406, 409, 414, 416, 417, 427, 432, 460, 466, 468, 469, 470, 472, 476, 486, 489, 491, 497, 498, 500, 505, 506, 508, 509, 518, 520, 522, 523, 525, 526], "notic": [110, 136, 139], "notimplementederror": [12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 105, 107, 114, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 176, 177, 183, 187, 189, 190, 199, 200, 201, 202, 203, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 257, 258, 259, 262, 268, 269, 270, 272, 273, 274, 342, 388, 389, 391, 393, 394, 400, 401, 402, 403, 404, 409, 410, 460, 464, 466, 468, 472, 473, 479, 483, 484, 485, 487, 489, 491, 493, 494, 497, 498, 499, 503, 504, 518, 519, 525, 527, 531, 532], "now": [17, 22, 45, 47, 85, 99, 211, 214, 248], "np": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 350, 352, 355, 356, 357, 359, 364, 366, 370, 375, 376, 377, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 436, 445, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "nr": 10, "nsamp": 423, "nsampl": 423, "nth": [228, 505], "nuc": [216, 220, 233], "nuclear": 220, "num": [0, 110, 117, 166, 234, 246, 509, 523], "number": [10, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 44, 48, 49, 52, 54, 58, 59, 67, 68, 69, 89, 99, 101, 103, 104, 107, 110, 111, 112, 113, 120, 123, 124, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 153, 158, 159, 161, 162, 166, 168, 172, 173, 177, 178, 184, 185, 186, 187, 194, 197, 200, 205, 213, 218, 220, 223, 224, 226, 229, 230, 234, 241, 246, 259, 263, 266, 267, 268, 270, 271, 272, 273, 274, 364, 373, 376, 387, 390, 396, 398, 399, 403, 404, 411, 413, 423, 447, 466, 467, 470, 473, 474, 475, 476, 477, 484, 488, 491, 497, 500, 506, 508, 510, 519, 520, 524, 525, 540, 543], "number_of_dimens": [107, 364, 387], "numer": [3, 4, 10, 12, 13, 14, 15, 16, 18, 26, 27, 28, 29, 30, 32, 37, 48, 49, 52, 54, 79, 80, 83, 87, 88, 105, 110, 116, 118, 121, 131, 132, 133, 136, 138, 153, 154, 155, 169, 170, 179, 184, 187, 189, 190, 202, 203, 220, 221, 236, 237, 238, 239, 252, 258, 262, 388, 391, 400, 401, 402, 404, 462, 473, 477, 483, 484, 485, 487, 498, 503, 504, 518, 543], "numpi": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 351, 352, 355, 356, 357, 364, 370, 375, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 543], "nvidia": 4, "nx": 255, "ny": 255, "nyquist": [10, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 141], "o": [4, 17, 22, 110], "obj": [33, 34, 35, 97, 110, 157, 172, 182], "object": [25, 38, 42, 43, 44, 45, 46, 47, 50, 51, 82, 98, 99, 101, 107, 110, 114, 115, 120, 123, 127, 141, 144, 146, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 178, 180, 182, 205, 210, 220, 228, 234, 235, 246, 248, 256, 342, 347, 357, 372, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 469, 505, 510, 512, 516, 524, 531, 532, 540], "observ": 85, "obsolet": 188, "obtain": [10, 102, 204, 208, 231, 390], "obviou": 10, "occupi": [144, 178], "occur": [23, 51, 71, 77, 78, 84, 97, 107, 112, 175, 182, 209, 249, 263, 342, 478, 496, 527, 529], "occurr": [33, 34, 59, 104, 172, 264, 265, 520], "odd": [10, 127, 130, 134, 135, 136, 138, 139, 141, 254, 396], "off": [25, 130, 135, 208, 209, 214, 231], "offset": [102, 107, 110, 158, 159, 208, 231, 248, 350, 384, 507, 512, 513, 516, 517], "often": [97, 171], "ogrid": [180, 197, 530], "ogridclass": 392, "oil": [413, 430], "old": 470, "omit": [411, 439], "onc": 213, "one": [3, 4, 33, 34, 35, 38, 40, 46, 55, 56, 57, 58, 81, 84, 86, 89, 97, 107, 110, 114, 116, 120, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 149, 150, 151, 154, 155, 159, 163, 168, 173, 175, 177, 180, 182, 186, 197, 211, 216, 217, 220, 228, 233, 236, 237, 239, 248, 251, 252, 255, 256, 257, 258, 264, 265, 271, 273, 347, 355, 357, 358, 390, 392, 394, 399, 403, 430, 461, 475, 481, 489, 495, 496, 499, 501, 505, 509, 512, 513, 516, 517, 520, 531, 540], "oneapi": [4, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "onedpl": 4, "onemkl": [4, 209, 211], "ones": [6, 38, 45, 47, 58, 92, 97, 105, 107, 112, 114, 115, 116, 120, 123, 142, 163, 164, 176, 177, 198, 214, 218, 221, 247, 248, 266, 271, 394, 395, 398, 403, 465, 471, 475, 508, 510, 518, 531, 532], "ones_lik": [6, 38, 115, 164, 393, 532], "onli": [10, 17, 22, 25, 33, 34, 35, 38, 41, 42, 43, 45, 47, 51, 55, 58, 82, 86, 90, 107, 110, 112, 113, 114, 115, 123, 129, 139, 143, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 180, 188, 204, 210, 212, 215, 218, 220, 221, 222, 223, 226, 234, 235, 246, 248, 249, 251, 253, 257, 263, 264, 265, 268, 269, 270, 271, 272, 274, 342, 357, 375, 377, 393, 394, 397, 399, 400, 403, 411, 433, 439, 455, 460, 468, 469, 486, 489, 497, 499, 502, 516, 520, 523, 525, 527, 530, 531, 532, 540], "open": [159, 180, 197, 234, 392, 411, 441, 443, 444, 446, 455, 500], "opencl": [25, 38, 42, 43, 44, 45, 47, 82, 98, 101, 114, 115, 123, 127, 141, 158, 159, 160, 161, 163, 164, 166, 177, 234, 235, 246, 256, 392, 393, 394, 510, 524, 531, 532], "oper": [10, 16, 24, 60, 61, 62, 63, 64, 65, 66, 105, 110, 112, 113, 116, 120, 143, 153, 156, 169, 170, 183, 201, 202, 203, 204, 242, 244, 249, 251, 257, 259, 262, 263, 264, 265, 388, 391, 400, 401, 402, 406, 466, 472, 498, 506, 518, 520, 522, 523, 527, 533, 543], "operand": [112, 113, 228, 230, 395, 505], "opposit": [10, 110, 122, 130, 135, 399, 460], "optim": [4, 112, 113, 172, 173], "option": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 182, 183, 184, 187, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 214, 216, 218, 219, 220, 222, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 355, 385, 388, 389, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 532, 547], "ord": [216, 220, 233], "order": [10, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 95, 96, 102, 104, 105, 107, 110, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 126, 128, 131, 132, 133, 136, 138, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 163, 164, 165, 168, 169, 170, 171, 172, 176, 179, 183, 187, 188, 189, 190, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 216, 220, 226, 228, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 255, 258, 259, 261, 262, 282, 341, 342, 347, 355, 366, 369, 372, 374, 377, 385, 388, 389, 390, 391, 393, 394, 397, 398, 400, 401, 402, 404, 409, 410, 460, 461, 462, 464, 466, 468, 469, 470, 472, 473, 476, 479, 480, 483, 484, 485, 486, 487, 489, 491, 493, 494, 498, 503, 504, 505, 508, 518, 519, 520, 521, 524, 527, 530, 531, 532, 543], "ordin": [214, 225], "ordinari": [136, 181, 204], "orient": [91, 407, 502], "origin": [67, 102, 107, 130, 136, 138, 216, 220, 233, 255, 261, 271, 273, 469, 470, 474, 520], "ortho": [10, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142], "orthogon": [211, 223], "orthonorm": 223, "other": [40, 51, 67, 68, 69, 103, 107, 110, 131, 132, 133, 136, 138, 152, 160, 177, 209, 211, 219, 220, 261, 278, 279, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 342, 411, 455, 470, 475, 520, 527, 533, 543], "otherwis": [3, 12, 13, 14, 15, 16, 17, 18, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 95, 96, 98, 103, 105, 107, 110, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 176, 177, 181, 183, 187, 189, 190, 199, 200, 201, 202, 203, 214, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 258, 259, 260, 262, 264, 265, 268, 269, 270, 271, 272, 273, 274, 342, 372, 388, 389, 391, 393, 394, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 472, 473, 479, 480, 483, 484, 485, 487, 489, 491, 493, 494, 495, 497, 498, 499, 503, 504, 507, 518, 519, 525, 527, 530, 531, 532], "otim": [228, 505], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 213, 215, 216, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 343, 344, 347, 348, 349, 355, 357, 360, 361, 362, 367, 373, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 518, 519, 523, 524, 525, 526, 527, 529, 530, 531, 532], "outarr": 24, "outer": [6, 91, 102, 112, 113, 198], "output": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 87, 88, 92, 93, 94, 95, 96, 98, 99, 101, 103, 105, 106, 107, 110, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 187, 189, 190, 197, 199, 200, 201, 202, 203, 219, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 265, 266, 267, 269, 271, 272, 273, 274, 342, 347, 388, 389, 391, 392, 393, 394, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 466, 467, 469, 472, 473, 477, 479, 481, 483, 484, 485, 486, 487, 489, 491, 493, 494, 495, 497, 498, 499, 501, 503, 504, 506, 507, 510, 512, 516, 518, 519, 520, 523, 524, 525, 527, 530, 531, 532, 543, 547], "outsid": [172, 173], "over": [10, 17, 22, 24, 58, 92, 93, 94, 106, 107, 112, 113, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 148, 160, 166, 172, 173, 181, 206, 216, 220, 228, 232, 233, 234, 246, 247, 249, 251, 253, 255, 257, 266, 267, 268, 269, 270, 271, 272, 273, 274, 355, 403, 407, 411, 438, 443, 454, 455, 460, 465, 470, 497, 499, 501, 502, 505, 509, 523, 525, 527, 543], "overal": [126, 128, 132, 133, 137, 138, 140, 142], "overflow": 151, "overlin": [232, 527], "overrid": [91, 115, 164, 394, 532], "overview": 2, "overwrite_input": 254, "p": [10, 205, 214, 217, 413, 416, 421, 427, 430, 523], "pack": [102, 460, 543], "packag": [0, 3], "packbit": 6, "pad": [6, 110, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 470], "pad_valu": 396, "pad_width": 396, "padder": 396, "padding_func": 396, "page": [3, 543], "pair": [10, 113, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 206, 209], "parallel": [1, 3, 4, 9, 533], "paramet": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 352, 355, 357, 372, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "parameter": [411, 433, 455], "parametr": 509, "pareto": 6, "pars": [159, 235], "part": [3, 10, 14, 15, 21, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 107, 136, 154, 155, 179, 185, 186, 193, 194, 209, 210, 212, 248, 252, 258, 260, 356, 370, 396, 462, 463, 490, 512, 516, 519, 520, 540], "partial": [35, 254, 489], "particular": [110, 219], "particularli": 112, "partit": [6, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 489, 510, 512, 516, 524, 531, 532, 540], "pass": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 110, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 173, 177, 180, 197, 214, 235, 248, 256, 263, 347, 372, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 468, 510, 512, 513, 516, 517, 524, 527, 531, 532], "past": 70, "path": [4, 112, 113, 159, 235], "path_info": 113, "pathlib": 235, "pattern": 58, "pearson": 85, "penros": 222, "per": [112, 127, 141, 461], "percentil": [6, 254], "perf_count": 0, "perform": [17, 22, 43, 44, 75, 103, 112, 126, 128, 131, 132, 133, 137, 138, 140, 142, 148, 204, 227, 403, 499], "perhap": 468, "period": [10, 523], "permit": 159, "permut": [6, 107, 112, 261, 385, 398, 508, 543], "permute_dim": [6, 508], "perpendicular": 91, "pg": 220, "phase": [10, 21, 523], "phase_deg": 523, "pi": [0, 9, 10, 14, 26, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 95, 96, 125, 409, 485, 486, 487, 503, 504, 509, 523, 547], "pickl": [159, 235], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 17, 18, 22, 23, 24, 37, 75, 77, 78, 93, 94, 97, 106, 107, 120, 122, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 157, 180, 182, 184, 249, 251, 253, 254, 257, 263, 266, 267, 269, 271, 272, 273, 274, 355, 375, 377, 385, 392, 396, 403, 406, 407, 448, 469, 470, 474, 477, 489, 496, 497, 499, 501, 507, 525, 540], "plane": 476, "platform": [93, 94, 110, 266, 267, 271, 273, 403, 499], "pleas": [0, 3, 41, 108, 112, 172, 174, 528, 540], "plot": 449, "plt": [255, 449], "plu": [236, 237, 239], "plugin": 4, "point": [10, 12, 13, 21, 25, 31, 37, 42, 43, 53, 58, 70, 83, 92, 110, 114, 115, 119, 123, 124, 125, 130, 131, 135, 136, 137, 138, 139, 144, 145, 151, 158, 159, 160, 162, 163, 164, 168, 177, 179, 200, 214, 217, 234, 235, 240, 241, 247, 253, 254, 263, 269, 272, 274, 389, 393, 394, 411, 440, 452, 462, 464, 465, 477, 479, 480, 486, 497, 509, 510, 525, 531, 532, 543], "pointer": [70, 110], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 79, 80, 83, 87, 88, 95, 96, 105, 107, 116, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 165, 169, 170, 171, 176, 179, 183, 187, 189, 190, 199, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 252, 258, 259, 262, 388, 389, 391, 400, 401, 402, 404, 409, 410, 411, 438, 462, 464, 466, 472, 473, 477, 479, 483, 484, 485, 486, 487, 491, 493, 494, 498, 503, 504, 518, 519], "portion": [172, 173], "posinf": 263, "posit": [6, 10, 17, 18, 22, 25, 37, 42, 43, 44, 72, 83, 101, 102, 107, 120, 123, 124, 126, 128, 131, 132, 133, 136, 139, 141, 144, 151, 159, 184, 187, 189, 190, 191, 192, 204, 217, 229, 261, 263, 268, 270, 273, 366, 380, 388, 398, 413, 437, 474, 475, 477, 479, 481, 493, 494, 507, 508], "possess": 209, "possibl": [10, 50, 51, 56, 57, 107, 108, 112, 113, 120, 154, 155, 168, 172, 174, 248, 342, 372, 398, 407, 460, 469, 492, 495, 500, 501, 502, 508, 528], "possibli": 46, "pow": [6, 402, 540], "power": [6, 10, 119, 125, 151, 217, 401, 494, 524], "pre": 173, "precis": [12, 13, 58, 93, 94, 110, 112, 144, 151, 179, 214, 231, 248, 266, 267, 271, 273, 403, 462, 499, 507], "predecessor": 523, "prefer": [74, 82, 97, 107, 347, 375, 390, 460], "prepend": [38, 103, 111, 506], "present": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 110, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 177, 180, 235, 248, 256, 268, 270, 273, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 510, 512, 516, 524, 531, 532], "preserv": [51, 55, 56, 57, 75, 107, 110, 112, 148, 149, 150, 151, 210, 211, 212, 254, 342, 460, 468, 507, 520], "press": [10, 220], "prevent": 112, "previou": [58, 396], "print": [0, 4, 44, 58, 59, 81, 104, 110, 113, 411, 430, 435], "print_device_info": 0, "printabl": 113, "printopt": 6, "prior": 103, "prob1": [240, 241], "prob12": [240, 241], "prob2": [240, 241], "probabl": [172, 241, 254, 413, 421, 430], "proce": 540, "process": [10, 486], "processor": 112, "prod": [6, 93, 107, 229, 230, 271, 540], "produc": [10, 36, 110, 235, 407, 480, 502], "product": [85, 91, 93, 106, 107, 112, 113, 181, 197, 198, 206, 215, 219, 221, 225, 228, 229, 230, 232, 249, 262, 266, 271, 348, 395, 403, 505, 526, 527, 543], "program": [4, 152, 533, 543], "progress": [166, 234], "project": [4, 110, 232, 404, 527], "promot": [14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 60, 62, 64, 65, 66, 71, 72, 83, 87, 88, 95, 96, 105, 118, 119, 121, 151, 153, 154, 155, 156, 166, 176, 201, 234, 236, 237, 238, 239, 240, 241, 246, 249, 252, 258, 259, 262, 389, 401, 402, 409, 410, 464, 466, 471, 472, 479, 483, 485, 486, 487, 491, 493, 494, 498, 503, 504, 506, 518, 519, 527], "promote_typ": 6, "propag": [110, 154, 155, 251, 252, 257, 258, 266, 267, 268, 270, 271, 273], "proper": [154, 155, 209, 211], "properti": [10, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 210, 212, 223, 234, 235, 246, 248, 256, 276, 342, 347, 351, 353, 354, 356, 358, 359, 363, 364, 370, 375, 376, 380, 385, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532, 540], "proport": 486, "protocol": [46, 110, 157], "prototyp": 115, "provid": [0, 6, 10, 33, 34, 38, 77, 78, 84, 92, 107, 108, 112, 113, 120, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 161, 172, 173, 175, 191, 192, 218, 222, 247, 264, 265, 268, 270, 271, 273, 411, 439, 442, 465, 468, 478, 496, 501, 509, 520, 527, 529, 530, 547], "pseudo": [222, 411], "ptp": 6, "pure": [10, 130, 136, 138, 139], "purpos": [36, 214, 220], "put": [6, 10, 107, 122, 130, 136, 138, 399, 407, 502, 540], "put_along_axi": [6, 406, 502], "putmask": [6, 406], "pval": 428, "py": 4, "pypi": 4, "pyplot": [255, 449], "pytest": 4, "python": [0, 2, 3, 46, 107, 110, 156, 157, 259, 357, 466, 467, 540], "q": [211, 217, 223, 230, 254], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [21, 28, 30, 48, 52, 126], "quantil": 6, "quaternion": 217, "question": 98, "queue": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "quick": [2, 3], "quickest": 460, "quickli": [197, 547], "quicksort": [35, 489], "quotient": [31, 53], "r": [85, 91, 96, 223], "r1": 85, "r2": [85, 223], "r3": 85, "rad": 96, "rad2deg": [6, 95, 96, 523], "radian": [6, 14, 15, 21, 26, 27, 28, 30, 31, 48, 52, 53, 95, 96, 409, 523, 547], "radixsort": [35, 489], "rais": [12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 79, 80, 82, 83, 84, 87, 88, 92, 95, 96, 104, 105, 106, 107, 108, 114, 115, 116, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 174, 176, 177, 183, 187, 189, 190, 199, 200, 201, 202, 203, 217, 219, 220, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 257, 258, 259, 262, 264, 265, 268, 269, 270, 272, 273, 274, 342, 343, 359, 388, 389, 391, 393, 394, 400, 401, 402, 403, 404, 409, 410, 460, 461, 464, 465, 466, 468, 469, 472, 473, 479, 483, 484, 485, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 503, 504, 518, 519, 525, 527, 528, 531, 532, 540], "ramp": 396, "rand": [6, 85, 113, 411, 441, 443, 444, 446], "randint": [6, 107, 357, 411, 442], "randn": [6, 148, 149, 150, 222, 223, 226, 230, 411, 496], "random": [85, 107, 113, 148, 149, 150, 211, 219, 222, 223, 226, 230, 357, 496, 533, 543], "random_integ": [6, 411, 439], "random_sampl": [6, 411, 438, 441, 444, 446], "randomli": 435, "randomst": 439, "ranf": 6, "rang": [0, 104, 161, 172, 173, 228, 241, 398, 405, 406, 430, 435, 461, 467, 496, 505, 508, 523, 543], "rank": [120, 122, 160, 214, 218, 231, 396, 500], "rate": [127, 141], "rather": 390, "ratio": [0, 105, 153, 214, 518, 547], "ration": 543, "ravel": [6, 107, 122, 147, 220, 355, 395, 469, 540], "ravel_multi_index": [6, 521], "raveled_indic": 461, "raw": 223, "rayleigh": 6, "rcond": [214, 222], "re": [33, 34, 59, 98, 136, 474], "read": [98, 102, 107, 110, 158, 159, 161, 162, 235, 355, 460, 469], "readonli": 110, "real": [6, 12, 13, 14, 15, 21, 25, 26, 27, 28, 29, 30, 31, 32, 39, 48, 49, 52, 53, 54, 72, 73, 83, 92, 107, 125, 128, 130, 135, 136, 137, 138, 139, 140, 142, 144, 152, 154, 155, 156, 176, 179, 185, 193, 194, 204, 209, 210, 211, 212, 218, 222, 223, 224, 226, 240, 241, 247, 252, 258, 259, 263, 272, 274, 413, 430, 463, 464, 465, 466, 479, 490, 491, 497, 519, 520, 525, 540, 543], "real_if_clos": [6, 21, 179, 462], "rearrang": [107, 366, 543], "reason": 138, "rebuild": 109, "recal": 110, "recent": [23, 495], "recip": [4, 10], "reciproc": [6, 479, 493], "recommend": [112, 390, 506], "reconstruct": [110, 226, 520], "recov": 10, "reduc": [17, 22, 33, 34, 58, 223, 226, 247, 251, 253, 254, 255, 257, 264, 265, 268, 269, 270, 271, 272, 273, 274, 403, 465, 470, 497, 499, 525], "reduce_hypot": 176, "reduct": [17, 22], "redund": 139, "refer": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540], "reflect": [396, 540], "reflect_typ": 396, "reflector": 223, "regardless": [110, 210, 212, 528], "regular": 235, "rel": [18, 35, 107, 184, 208, 218, 231, 380, 474, 475, 489], "relat": 110, "relationship": 85, "relev": [110, 166, 234, 246], "rem": 156, "remain": [17, 22, 58, 113, 140, 142, 172, 247, 253, 254, 261, 269, 272, 274, 465, 469, 497, 525], "remaind": [6, 153, 156, 259, 401, 402], "remov": [24, 33, 34, 95, 97, 102, 107, 120, 136, 208, 231, 378, 403, 409, 495, 499, 527, 543], "reorder": [112, 148, 230, 261], "rep": 506, "repeat": [6, 107, 126, 128, 132, 133, 137, 138, 140, 142, 143, 209, 210, 211, 212, 255, 399, 470, 506, 509, 520, 540], "repeatedli": [24, 112], "repetit": [0, 467, 506], "replac": [3, 10, 24, 46, 75, 122, 263, 266, 267, 399, 407, 416, 469, 481, 540], "replic": 506, "repo": 4, "repr": 319, "repres": [10, 25, 38, 42, 43, 45, 46, 47, 58, 85, 110, 113, 131, 139, 157, 160, 166, 168, 180, 224, 234, 246, 255, 274, 396, 411, 470, 514, 520, 540], "represent": [60, 64, 66, 113, 144, 178, 180, 263, 389, 491, 540], "request": 475, "requir": [4, 6, 38, 43, 44, 45, 47, 51, 107, 110, 112, 124, 180, 263, 342, 375, 396, 469, 470], "res_cpu": 98, "res_host": 98, "resampl": 486, "rese": 447, "reset": 540, "reshap": [0, 6, 16, 33, 34, 36, 55, 57, 58, 98, 99, 100, 102, 105, 106, 107, 108, 109, 112, 120, 122, 129, 134, 148, 156, 174, 180, 181, 182, 197, 198, 208, 215, 216, 220, 228, 231, 233, 248, 249, 251, 257, 262, 350, 355, 359, 375, 385, 396, 399, 435, 460, 468, 470, 474, 476, 498, 505, 507, 509, 512, 513, 516, 517, 518, 520, 522, 528, 540], "resid": [120, 124, 157], "residu": 214, "resiz": [6, 120, 540], "resolut": 144, "resolv": [92, 120, 247, 465], "resourc": 0, "respect": [16, 31, 53, 60, 62, 64, 65, 66, 105, 107, 116, 151, 153, 156, 168, 169, 170, 201, 202, 203, 206, 240, 241, 242, 244, 245, 259, 262, 380, 391, 401, 402, 466, 472, 498, 518, 523], "rest": 41, "restor": 474, "restrict": 232, "result": [0, 4, 10, 17, 22, 31, 33, 34, 36, 38, 53, 58, 60, 61, 62, 63, 64, 65, 66, 71, 75, 77, 78, 83, 85, 89, 92, 93, 94, 97, 105, 106, 110, 113, 115, 116, 121, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 151, 153, 158, 159, 160, 161, 162, 164, 166, 169, 170, 172, 173, 180, 183, 187, 189, 190, 191, 192, 200, 201, 202, 203, 204, 208, 209, 215, 216, 220, 223, 228, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 254, 257, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 390, 391, 394, 395, 401, 402, 403, 406, 411, 413, 443, 465, 469, 471, 472, 473, 475, 477, 480, 483, 484, 486, 492, 496, 497, 499, 501, 502, 505, 506, 509, 514, 518, 519, 520, 522, 525, 527, 530, 532, 540], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 71, 110, 543], "ret": 410, "retain": 469, "retriev": [102, 110, 208], "retstep": 234, "return": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 360, 361, 362, 364, 365, 366, 367, 369, 372, 373, 376, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 414, 433, 435, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540], "return_count": 520, "return_index": 520, "return_invers": 520, "reus": [157, 173], "revers": [102, 107, 143, 148, 149, 150, 208, 385, 398, 476, 508, 509, 522, 524], "rewrit": 214, "rfft": [6, 10, 127, 130, 135, 136, 137, 138, 140, 141, 142], "rfft2": [6, 137], "rfftfreq": [6, 127], "rfftn": [6, 125, 128, 138, 139, 140], "right": [10, 30, 52, 62, 65, 75, 91, 102, 104, 149, 150, 176, 201, 206, 209, 210, 211, 212, 219, 230, 248, 454, 465, 472, 480, 507, 509, 512, 516, 524], "right_shift": [6, 62, 65, 201], "rightmost": [172, 173, 230], "rint": [6, 37, 73, 145, 152, 477, 519], "rl": [221, 395], "roll": [6, 475], "rollaxi": [6, 474], "root": [6, 72, 176, 205, 464, 465, 479, 493, 494], "rot90": [6, 149, 150], "rotat": [149, 150, 476], "roughli": [110, 214], "round": [6, 25, 37, 73, 107, 130, 135, 145, 152, 153, 165, 209, 259, 466, 473, 519, 540, 543], "routin": [2, 533, 540], "row": [47, 51, 76, 77, 78, 85, 93, 94, 102, 107, 109, 123, 149, 150, 168, 175, 177, 180, 219, 226, 342, 390, 460, 461, 478, 492, 496, 510, 512, 520, 521, 528, 529], "row_stack": [6, 529], "rowvar": [85, 90], "rsqrt": [464, 493], "rtol": [18, 184, 218, 222], "rule": [14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 58, 60, 62, 64, 65, 66, 71, 72, 83, 84, 87, 88, 91, 94, 95, 96, 105, 118, 119, 121, 153, 154, 155, 156, 166, 176, 201, 206, 234, 236, 237, 238, 239, 240, 241, 246, 247, 249, 252, 253, 254, 258, 259, 262, 269, 272, 274, 389, 401, 402, 409, 410, 464, 465, 466, 471, 472, 479, 483, 485, 486, 487, 491, 493, 494, 497, 498, 499, 503, 504, 509, 518, 519, 525, 527], "run": [0, 4], "runtim": 4, "runtimewarn": [268, 270], "s1": [107, 110, 198, 380], "s10": 110, "s16": 110, "s2": [107, 110, 380], "s25": 110, "s3": [107, 380], "s_": 24, "safe": [51, 71, 77, 78, 84, 107, 112, 175, 249, 342, 478, 496, 527, 529], "sai": 469, "said": 230, "same": [4, 10, 12, 13, 16, 17, 18, 22, 23, 24, 31, 33, 34, 35, 36, 37, 39, 40, 45, 47, 50, 51, 53, 58, 60, 61, 62, 63, 64, 65, 66, 69, 75, 76, 77, 78, 83, 85, 92, 93, 94, 102, 103, 104, 105, 106, 107, 109, 115, 116, 120, 122, 131, 132, 133, 138, 143, 145, 151, 153, 154, 155, 156, 157, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 179, 181, 183, 184, 191, 192, 193, 198, 199, 200, 201, 202, 203, 206, 208, 211, 217, 222, 223, 227, 228, 231, 240, 241, 242, 244, 245, 247, 251, 252, 253, 254, 257, 258, 259, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 372, 385, 389, 391, 394, 396, 399, 401, 402, 403, 407, 411, 433, 439, 455, 460, 462, 465, 466, 467, 469, 472, 474, 475, 478, 480, 481, 489, 495, 496, 497, 498, 499, 501, 502, 505, 507, 511, 513, 515, 517, 518, 521, 525, 526, 529, 532, 547], "same_kind": [51, 71, 77, 78, 84, 107, 112, 175, 249, 342, 478, 496, 527, 529], "sampl": [10, 127, 134, 136, 139, 141, 166, 168, 172, 234, 246, 407, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 502, 509, 512, 516, 533, 543], "sample_r": 141, "satisfi": [38, 43, 45, 47, 51, 107, 122, 213, 342, 399, 468, 481], "save": [6, 159, 254, 547], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [16, 18, 23, 31, 38, 39, 40, 42, 43, 45, 46, 47, 53, 60, 62, 64, 65, 66, 71, 82, 83, 84, 91, 98, 101, 103, 105, 106, 107, 110, 112, 113, 116, 122, 127, 141, 143, 151, 153, 154, 155, 156, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 181, 182, 184, 186, 194, 195, 198, 199, 200, 201, 202, 203, 215, 225, 228, 234, 240, 241, 242, 244, 245, 246, 248, 249, 252, 255, 258, 259, 262, 352, 357, 387, 389, 391, 396, 399, 401, 402, 406, 407, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 436, 437, 439, 442, 445, 447, 451, 453, 454, 455, 456, 457, 458, 459, 463, 466, 472, 480, 481, 498, 501, 505, 509, 518, 519, 524, 526, 530, 540], "scale": [10, 113, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 166, 198, 223, 234, 246, 411, 418, 420, 422, 423, 424, 425, 433, 445, 450, 457], "scientif": 10, "scipi": 117, "scope": 4, "script": 4, "search": [113, 533, 543], "searchsort": [6, 104, 107, 172, 489, 540], "second": [16, 18, 31, 39, 40, 53, 58, 60, 62, 64, 65, 66, 70, 83, 91, 102, 105, 106, 110, 113, 116, 119, 126, 127, 128, 129, 132, 133, 136, 139, 141, 151, 153, 154, 155, 156, 165, 168, 169, 170, 172, 173, 174, 175, 176, 181, 184, 198, 199, 201, 202, 203, 206, 208, 215, 228, 231, 232, 240, 241, 242, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 262, 391, 395, 401, 402, 466, 472, 476, 494, 498, 500, 505, 507, 518, 526, 527], "section": [4, 41, 110, 128, 133, 138, 142, 216, 233, 540], "see": [3, 37, 85, 110, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 157, 172, 214, 216, 233, 396, 428, 477, 512, 513, 516, 517, 520, 540], "seed": [6, 85, 107, 113, 357, 411], "seek": 159, "seldom": 151, "select": [6, 35, 84, 122, 251, 257, 489, 495, 501, 509, 533], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "self": [107, 110, 146, 277, 278, 279, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 354, 411], "semant": 172, "sens": 230, "sep": [159, 162], "separ": [10, 107, 110, 112, 159, 162, 173, 263, 372, 470], "sequenc": [41, 46, 55, 56, 57, 76, 77, 78, 81, 86, 108, 109, 112, 113, 114, 115, 126, 128, 132, 133, 136, 137, 138, 140, 142, 163, 164, 166, 172, 173, 174, 175, 180, 182, 197, 219, 228, 234, 246, 254, 261, 393, 394, 396, 399, 435, 448, 467, 468, 471, 478, 492, 496, 505, 509, 522, 528, 529, 531, 532], "sequenti": [86, 90, 117, 260, 271], "seri": [10, 136, 427], "serv": 522, "set": [10, 24, 33, 34, 35, 38, 51, 74, 85, 89, 98, 99, 101, 104, 107, 110, 112, 114, 163, 172, 173, 177, 180, 216, 218, 220, 221, 222, 233, 234, 251, 257, 264, 265, 273, 332, 342, 343, 354, 375, 393, 394, 395, 396, 403, 481, 483, 484, 489, 499, 512, 516, 531, 532, 540], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 110], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 213, "shape": [4, 6, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 45, 48, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 109, 110, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 148, 151, 152, 153, 154, 155, 156, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 179, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 207, 208, 213, 214, 215, 216, 217, 219, 223, 224, 225, 226, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 364, 372, 376, 378, 385, 387, 388, 389, 391, 392, 393, 394, 396, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 420, 423, 428, 429, 434, 438, 439, 440, 441, 442, 443, 444, 446, 451, 452, 458, 460, 461, 462, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 515, 516, 517, 518, 519, 521, 522, 525, 527, 528, 529, 530, 531, 532, 533, 543], "share": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 510, 512, 516, 524, 531, 532], "shared_bin": 173, "shares_memori": 6, "shift": [10, 62, 65, 126, 128, 129, 133, 134, 201, 472, 474], "short": [486, 519, 527, 540], "shortcut": 396, "shorter": [130, 136], "shorthand": [12, 13, 16, 60, 61, 62, 63, 64, 65, 66, 105, 116, 153, 169, 170, 183, 201, 202, 203, 242, 244, 249, 259, 262, 388, 391, 400, 401, 402, 466, 472, 498, 518, 530], "should": [24, 33, 34, 38, 41, 51, 102, 104, 106, 107, 112, 113, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 156, 159, 167, 172, 182, 197, 214, 217, 228, 249, 261, 264, 265, 268, 270, 342, 374, 396, 428, 461, 469, 470, 480, 491, 501, 505, 507, 521, 523, 527, 540], "show": [9, 40, 110, 143, 176, 245, 255, 263, 266, 267, 268, 270, 273, 449], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [107, 168, 211, 374, 480], "sigma": [426, 433], "sign": [6, 10, 18, 83, 110, 184, 207, 224, 259, 388, 400, 403, 466, 484, 499, 519], "signal": [10, 127, 130, 135, 136, 138, 141, 486, 523], "signatur": [248, 249, 396, 527], "signbit": [6, 483], "signific": 112, "signum": 483, "similar": [3, 42, 43, 107, 110, 166, 182, 206, 208, 215, 221, 231, 232, 234, 246, 248, 347, 375, 399, 411, 439, 512, 513, 516, 517], "simpl": [4, 245, 543], "simpli": [100, 107, 159, 172, 173, 200, 385], "sin": [0, 6, 28, 29, 48, 49, 87, 211, 255, 486, 487, 503, 509], "sinc": [6, 85, 107, 136, 209, 211, 377, 390, 522], "sine": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 485, 486, 487, 503, 504], "sing": 220, "singl": [9, 10, 35, 68, 69, 76, 85, 107, 112, 113, 168, 182, 219, 228, 251, 257, 357, 378, 403, 411, 430, 439, 440, 441, 442, 443, 444, 446, 452, 499, 505, 509, 527, 540], "singleton": [17, 22, 58, 120, 247, 253, 254, 268, 269, 270, 272, 274, 465, 495, 497, 525], "singular": [213, 214, 218, 220, 222, 226, 227], "sinh": [6, 15, 27, 29, 49, 88, 485, 504], "sinu": 486, "size": [0, 6, 25, 33, 34, 38, 41, 58, 70, 77, 78, 86, 89, 90, 93, 94, 99, 104, 107, 108, 110, 113, 122, 125, 127, 131, 141, 159, 166, 168, 174, 175, 206, 208, 216, 220, 221, 223, 226, 228, 232, 233, 234, 246, 248, 251, 253, 257, 264, 265, 266, 267, 269, 271, 273, 357, 358, 375, 393, 399, 403, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 470, 474, 478, 492, 495, 496, 499, 505, 516, 522, 523, 527, 528, 529, 531, 540], "skip": 102, "slice": [24, 97, 122, 182, 264, 265, 268, 269, 270, 272, 274, 406, 407, 481, 502, 509, 516, 517, 540], "slogdet": [6, 207], "slower": [228, 505], "slowest": [107, 355, 460, 469], "small": [18, 121, 184, 214, 222, 238, 240, 241, 263, 516], "smaller": [103, 107, 125, 126, 128, 131, 132, 133, 135, 137, 138, 139, 140, 142, 144, 214, 259, 366, 399, 466, 523], "smallest": [144, 178, 220, 520], "smallest_norm": 144, "smat": 226, "so": [10, 14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 58, 110, 116, 130, 135, 151, 172, 182, 194, 228, 234, 241, 247, 253, 254, 255, 269, 272, 274, 449, 465, 497, 505, 506, 525], "softwar": 4, "solut": [214, 225, 470], "solv": [6, 214, 229, 230, 543], "some": [25, 110, 120, 122, 152, 181, 214, 396, 399, 523, 530, 540], "sometim": [171, 540], "somewhat": 217, "sophist": 217, "sort": [6, 24, 35, 41, 107, 108, 174, 226, 254, 341, 366, 398, 480, 490, 492, 502, 508, 509, 520, 528, 533, 540, 543], "sort_complex": 6, "sorter": [107, 374, 480], "sought": 205, "sourc": [4, 17, 18, 19, 20, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 74, 75, 76, 78, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 172, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 387, 390, 393, 394, 395, 396, 397, 399, 403, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 467, 468, 469, 470, 471, 474, 475, 476, 480, 481, 482, 488, 489, 490, 492, 495, 496, 497, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "space": [6, 25, 127, 129, 141, 159, 166, 168, 234, 246, 509, 547], "spars": [180, 255], "speak": 220, "special": [2, 110, 117, 533, 543], "specif": [0, 4, 110, 160], "specifi": [17, 22, 23, 24, 25, 33, 34, 35, 37, 38, 42, 43, 44, 45, 47, 58, 69, 71, 77, 78, 82, 92, 93, 94, 97, 98, 101, 102, 107, 112, 113, 114, 115, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 148, 151, 158, 159, 160, 161, 163, 164, 166, 168, 177, 188, 208, 210, 212, 220, 228, 229, 230, 231, 232, 233, 234, 235, 246, 247, 253, 254, 256, 266, 267, 269, 271, 272, 273, 274, 341, 350, 357, 392, 393, 394, 398, 399, 403, 406, 407, 411, 424, 434, 452, 460, 461, 465, 468, 470, 474, 475, 476, 477, 481, 488, 496, 497, 499, 501, 502, 505, 507, 508, 509, 510, 520, 522, 524, 525, 527, 531, 532], "spectrum": [10, 129, 130, 134, 135], "speed": 112, "speedup": 113, "spell": 390, "split": [6, 41, 77, 78, 108, 109, 174, 175, 478, 496, 522, 528, 529, 543], "spreadsheet": 152, "sqrt": [6, 10, 72, 107, 356, 370, 465, 479, 494], "squar": [6, 72, 176, 177, 204, 205, 209, 210, 211, 213, 214, 217, 224, 229, 230, 248, 272, 274, 415, 431, 464, 465, 479, 481, 493, 497, 513, 517, 524, 525], "squeez": [6, 107, 120, 540], "src": 84, "stabil": [35, 489], "stabl": [35, 489], "stack": [6, 76, 77, 78, 109, 175, 207, 208, 215, 216, 218, 222, 223, 224, 227, 231, 249, 250, 390, 478, 492, 502, 522, 529], "stai": 75, "stand": 168, "standard": [107, 144, 153, 156, 253, 259, 269, 272, 274, 357, 379, 411, 426, 433, 440, 449, 450, 451, 452, 453, 466, 497, 525, 540, 543], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 411, 440], "standard_t": 6, "start": [2, 3, 25, 45, 47, 113, 127, 131, 141, 158, 166, 234, 246, 248, 470, 475, 512, 516], "start_tim": 0, "stat_length": 396, "state": 411, "statist": [396, 533, 543], "std": [6, 107, 253, 269, 272, 274, 525, 540], "stdev": [411, 452], "step": [4, 25, 113, 166, 171, 234, 246], "sticki": 110, "still": [58, 174, 220, 528], "stop": [25, 166, 234, 246], "store": [145, 166, 191, 192, 231, 234, 241, 246, 249, 395, 527], "str": [44, 46, 77, 78, 110, 112, 113, 159, 162, 175, 235, 333, 396, 468, 478, 496, 514, 529], "str_": 110, "straightforward": 180, "strictli": 220, "stride": [50, 51, 107, 342], "string": [25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 110, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 396, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 514, 516, 524, 531, 532, 540], "string_repr": 113, "stringio": 235, "strongli": [4, 506], "struct": 110, "structur": [110, 235], "student": 453, "style": [51, 107, 342, 390, 396, 460, 461, 521], "sub": [41, 77, 78, 97, 102, 108, 110, 112, 174, 175, 230, 231, 478, 492, 496, 507, 510, 522, 528, 529], "subarrai": [97, 110, 180, 520], "subclass": [43, 468], "subdiagon": [208, 231], "subdivid": 110, "subdtyp": 110, "subject": 4, "subok": [12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 38, 48, 49, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 79, 80, 82, 83, 87, 88, 95, 96, 105, 107, 115, 116, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 164, 165, 169, 170, 171, 176, 183, 187, 189, 190, 199, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 252, 258, 259, 262, 342, 388, 389, 391, 394, 400, 401, 402, 404, 409, 410, 464, 466, 472, 473, 479, 483, 484, 485, 487, 491, 493, 494, 498, 503, 504, 518, 519, 527, 532], "subscript": [112, 113], "subset": [3, 168, 495, 543], "subtract": [6, 396], "subtyp": 460, "succeed": 111, "success": [44, 413, 421, 430], "sugar": [100, 513, 517], "suggest": 102, "suit": 4, "suitabl": [36, 107, 357, 385, 407, 470, 480, 502], "sum": [0, 3, 4, 6, 10, 16, 58, 92, 94, 98, 101, 102, 103, 106, 107, 112, 131, 172, 176, 181, 205, 214, 215, 220, 228, 229, 231, 240, 241, 247, 249, 266, 267, 273, 349, 384, 413, 428, 430, 465, 505, 507, 509, 527, 540, 543], "sum_": [10, 220, 232, 527], "sum_along_diagon": 507, "sum_of_weight": 58, "summari": 533, "summat": [106, 112, 113, 181, 228, 230, 249, 395, 505, 527], "superdiagon": [208, 231], "suppli": [130, 135, 219, 396, 411, 440], "support": [3, 4, 9, 12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 79, 80, 82, 83, 86, 87, 88, 90, 95, 96, 105, 107, 110, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 145, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 176, 177, 182, 183, 187, 189, 190, 199, 200, 201, 202, 203, 206, 208, 215, 221, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 268, 269, 270, 271, 272, 273, 274, 342, 375, 388, 389, 391, 393, 394, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 466, 468, 472, 473, 479, 483, 484, 485, 489, 491, 493, 494, 497, 498, 499, 503, 504, 518, 519, 525, 527, 531, 532, 547], "sure": 468, "surnam": 110, "surpris": [131, 132, 133], "svd": [6, 205, 213, 218, 222, 227], "svdval": 6, "swap": [110, 126, 129, 500], "swapax": [6, 107, 261, 540], "swapped_cod": 110, "swapped_dt": 110, "sy": 110, "sycl": [0, 3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "sycl_context": 107, "sycl_devic": 107, "sycl_queu": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "sycldevic": [25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "syclqueu": [25, 38, 42, 43, 44, 45, 46, 47, 51, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 342, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 510, 512, 516, 524, 531, 532], "symmetr": [130, 136, 138, 139, 204, 209, 210, 211, 212, 218, 222, 226, 396], "symmetri": [10, 125, 130, 135, 136, 139], "syntact": [100, 513, 517], "syntax": 540, "sys_is_l": 110, "system": [3, 4, 225], "t": [10, 77, 78, 90, 107, 110, 130, 188, 204, 209, 211, 214, 385, 390, 453, 460, 509], "t1": 547, "tabl": [2, 9, 216, 233, 533], "tack": 110, "take": [6, 76, 107, 122, 197, 248, 399, 407, 460, 469, 480, 481, 486, 502, 520, 523, 540, 547], "take_along_axi": [6, 33, 34, 35, 74, 407, 501], "taken": [58, 102, 103, 111, 113, 130, 136, 137, 138, 139, 140, 142, 171, 172, 249, 272, 274, 481, 497, 507, 510, 512, 516, 525, 526, 527], "tall": 143, "tan": [6, 28, 30, 31, 32, 48, 52, 53, 54, 87, 485, 504], "tangent": [14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 485, 487, 503, 504], "tanh": [6, 15, 27, 32, 54, 88, 487, 503], "target": [51, 71, 107, 342, 406], "target_devic": 107, "tau": 223, "tbb": 4, "tempfil": 159, "temporari": [159, 547], "temporaryfil": 159, "ten": 421, "tensor": [46, 107, 112, 113, 157, 228, 229, 230, 264, 265, 268, 270, 271, 405, 505], "tensordot": [6, 106, 112, 181, 229, 230, 249, 395], "tensorinv": [6, 230], "tensorsolv": [6, 229], "term": [10, 16, 105, 113, 125, 126, 128, 131, 132, 133, 136, 139, 262, 498, 518], "test": [0, 2, 17, 18, 22, 116, 169, 170, 185, 187, 189, 190, 191, 192, 202, 203, 271, 390, 391, 413, 540, 543], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [158, 159, 161, 162, 235], "th": [94, 98, 101, 103, 107, 111, 123, 168, 180, 254, 385, 392, 398, 481, 508, 511, 513, 515, 517], "than": [24, 38, 62, 65, 93, 94, 107, 108, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 149, 150, 153, 160, 169, 170, 172, 173, 175, 201, 202, 203, 214, 218, 222, 223, 228, 231, 266, 267, 271, 273, 359, 366, 390, 396, 399, 403, 470, 472, 481, 483, 495, 496, 499, 505, 507, 519, 523, 547], "thei": [18, 40, 110, 184, 188, 200, 211, 214, 228, 478, 480, 505, 509, 512, 516, 523, 524, 529, 540], "them": [76, 218, 222, 540], "theor": 209, "theoret": 113, "therefor": [125, 139, 160, 210, 212, 470], "theta": 509, "thi": [10, 12, 13, 19, 20, 23, 24, 25, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 75, 77, 78, 82, 85, 89, 92, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 173, 175, 186, 188, 194, 197, 206, 208, 210, 212, 214, 215, 216, 219, 220, 221, 224, 227, 231, 232, 233, 234, 235, 238, 240, 241, 246, 247, 248, 249, 251, 254, 257, 259, 261, 263, 264, 265, 268, 270, 271, 273, 342, 347, 352, 355, 357, 366, 372, 385, 390, 396, 399, 403, 406, 407, 444, 446, 460, 465, 466, 468, 469, 470, 475, 476, 478, 489, 496, 499, 501, 502, 506, 509, 513, 517, 520, 522, 523, 524, 527, 529, 530], "thing": 501, "think": [396, 469], "third": [76, 77, 78, 91, 108, 109, 126, 175, 228, 478, 492, 496, 505, 529], "those": [10, 24, 75, 85, 97, 217, 407], "though": 131, "thousand": 421, "three": [55, 56, 57, 120, 217, 228, 248, 411, 447, 505, 520], "threshold": 218, "through": [43, 110, 173, 197, 209, 211, 214, 248, 468, 540], "throw": 428, "thu": [10, 130, 136, 138, 506], "tile": [6, 467, 543], "time": [0, 10, 16, 18, 31, 39, 40, 53, 60, 62, 64, 65, 66, 83, 103, 105, 106, 116, 126, 128, 130, 132, 133, 135, 137, 138, 140, 142, 151, 153, 154, 155, 156, 165, 169, 170, 171, 176, 181, 182, 184, 190, 198, 199, 200, 201, 202, 203, 214, 218, 222, 228, 240, 241, 242, 244, 245, 252, 258, 259, 262, 389, 391, 396, 401, 402, 413, 428, 466, 472, 476, 486, 498, 502, 505, 506, 518, 520, 526], "time_dpnp": 0, "time_numpi": 0, "timedelta": 110, "timeit": 112, "timestep": 127, "tini": 144, "titl": 110, "tm": 156, "to_begin": 111, "to_devic": [6, 107], "to_end": 111, "tobyt": 6, "todo": 431, "tofil": [6, 159], "togeth": [18, 77, 78, 110, 131, 184, 197, 496, 530], "tol": [218, 429, 463], "toler": [18, 39, 184, 218, 463], "tolist": 6, "too": [4, 126, 128, 132, 133, 137, 138, 140, 142, 530], "toolkit": 3, "tostr": 6, "total": [6, 89, 93, 107, 363, 470, 488, 497, 525], "toward": [37, 73, 145, 152, 153, 172, 173, 259, 389, 466, 473, 476, 477, 519], "trace": [6, 98, 101, 102, 107, 112, 540], "traceback": [23, 495], "trail": 514, "transfer": 107, "transform": [113, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 533, 543], "transpos": [6, 36, 85, 107, 112, 188, 204, 211, 250, 261, 276, 359, 398, 540, 543], "trapezoid": [6, 94, 499], "trapz": 6, "treat": [18, 85, 97, 130, 136, 138, 159, 168, 184, 210, 212, 214, 219, 235, 254, 266, 267, 271, 273, 403, 407, 480, 502, 506, 520, 523, 540], "tri": 6, "trial": 413, "triangl": [98, 176, 248, 465, 510, 511, 512, 513, 515, 516, 517], "triangular": [6, 204, 210, 212, 223, 248, 512, 513, 516, 517], "trigonometr": [14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 87, 88, 485, 487, 503, 504, 543], "tril": [6, 98, 248, 510, 512, 513, 516], "tril_indic": [6, 248, 513, 516], "tril_indices_from": [6, 517], "trili": 513, "trili1": 513, "trim": [126, 128, 132, 133, 137, 138, 140, 142, 514], "trim_zero": 6, "triu": [6, 98, 248, 510, 512, 516, 517], "triu_indic": [6, 248, 512, 517], "triu_indices_from": [6, 513], "triui": 517, "triuim1": 517, "trivial": [209, 502], "true": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 94, 95, 96, 104, 105, 107, 110, 112, 113, 116, 118, 119, 120, 121, 122, 124, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 165, 166, 169, 170, 171, 172, 176, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 280, 337, 338, 342, 347, 360, 361, 362, 367, 379, 381, 386, 388, 389, 390, 391, 399, 400, 401, 402, 403, 404, 407, 409, 410, 416, 464, 465, 466, 468, 469, 472, 473, 479, 481, 483, 484, 485, 487, 489, 491, 493, 494, 497, 498, 499, 502, 503, 504, 505, 509, 518, 519, 520, 522, 524, 525, 527, 530], "true_divid": [6, 105], "trunc": [6, 37, 73, 145, 152, 473, 477], "truncat": [37, 73, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 152, 449, 473, 477, 519], "trust": [264, 265], "truth": [60, 61, 63, 64, 66, 116, 169, 170, 183, 202, 203, 242, 243, 244, 245, 391, 540, 543], "try": [4, 44], "tukei": 10, "tup": [76, 109, 175, 478, 529], "tupl": [17, 22, 23, 24, 33, 34, 38, 42, 43, 44, 45, 47, 58, 68, 69, 70, 82, 89, 92, 98, 99, 100, 101, 107, 110, 113, 120, 129, 134, 148, 157, 160, 163, 164, 166, 168, 172, 173, 175, 180, 186, 194, 197, 198, 220, 223, 230, 233, 234, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 268, 269, 270, 271, 272, 273, 274, 357, 375, 385, 390, 392, 396, 398, 403, 461, 465, 467, 469, 470, 474, 478, 482, 495, 496, 497, 499, 506, 508, 512, 513, 516, 517, 521, 522, 524, 525, 527, 529, 540], "turn": 76, "twister": 411, "two": [10, 18, 39, 55, 56, 60, 61, 63, 64, 66, 81, 85, 86, 91, 101, 102, 103, 106, 107, 110, 112, 113, 120, 125, 126, 128, 131, 132, 133, 136, 137, 138, 140, 142, 154, 155, 168, 181, 183, 184, 198, 200, 208, 210, 214, 216, 219, 221, 225, 227, 228, 231, 242, 244, 245, 249, 250, 251, 252, 254, 257, 258, 261, 268, 270, 359, 366, 382, 395, 396, 411, 440, 460, 473, 476, 477, 481, 500, 505, 507, 512, 513, 516, 517, 526], "type": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 351, 355, 357, 364, 372, 376, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 543], "type_nam": 0, "typeerror": [58, 84, 107, 157, 200, 375], "typenam": 6, "typestr": 110, "typic": [18, 130, 184, 480, 540], "u": [110, 204, 210, 212, 226, 248, 271, 273, 520], "u1": [110, 158, 159], "u16": 110, "u4": 71, "u8": 110, "ufunc": [2, 533, 540], "uint64": 110, "uint8": [110, 158, 159], "uk": 10, "un": 110, "unalt": 396, "unari": 540, "unchang": 142, "undefin": [21, 107, 254, 366, 396], "under": [216, 233], "underli": [60, 64, 66, 460, 469], "undo": [10, 133], "undocu": 110, "unexpect": [271, 273], "unicod": 110, "uniform": [6, 110, 168, 172, 173, 246, 411, 438, 441, 443, 444, 446], "uniformli": [246, 411, 455], "uniniti": [38, 114, 115, 163, 393, 531], "union1d": 6, "uniqu": [6, 58, 59, 92, 104, 110, 247, 253, 261, 269, 272, 274, 396, 465, 467, 497, 525], "unique_al": 6, "unique_count": [6, 520], "unique_indic": 520, "unique_invers": [6, 520], "unique_valu": 6, "unit": [107, 127, 141, 197, 209, 217, 224, 380], "unitari": [10, 168, 223, 226], "uniti": 172, "univ": 10, "univers": [2, 220, 533, 540], "unless": [17, 22, 51, 93, 94, 107, 112, 172, 209, 218, 220, 246, 266, 267, 271, 273, 342, 403, 499, 520, 527], "unlik": [107, 141, 372, 375], "unmodifi": 173, "unpackbit": 6, "unravel": 521, "unravel_index": [6, 33, 34, 461], "unraveled_coord": 521, "unsaf": [51, 71, 77, 78, 84, 107, 112, 175, 249, 342, 478, 496, 527, 529], "unscal": 10, "unsign": [110, 403, 499], "unspecifi": 469, "unstack": [6, 175, 478, 496, 529], "unsupport": [12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 83, 87, 88, 95, 96, 105, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 157, 165, 171, 176, 183, 199, 200, 201, 237, 238, 239, 240, 241, 252, 258, 259, 260, 262, 388, 389, 400, 401, 402, 404, 409, 410, 464, 466, 472, 473, 479, 483, 484, 485, 487, 491, 498, 503, 504, 518, 519], "until": [113, 474, 475], "unwrap": [6, 95, 409], "up": [4, 10, 110, 112, 150, 502, 513, 520], "upcast": 38, "updat": 4, "uplo": [210, 212], "upon": [107, 380], "upper": [98, 123, 172, 173, 204, 210, 212, 223, 248, 510, 512, 513, 515, 516, 517], "url": 4, "us": [4, 10, 16, 23, 24, 25, 31, 36, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 70, 71, 75, 77, 78, 82, 85, 91, 93, 94, 97, 98, 99, 101, 102, 105, 107, 110, 112, 113, 114, 115, 116, 120, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 152, 153, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 181, 183, 188, 197, 200, 201, 202, 203, 204, 205, 208, 210, 211, 212, 214, 218, 219, 220, 222, 228, 231, 234, 235, 241, 242, 244, 246, 248, 249, 251, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 282, 342, 347, 355, 375, 388, 390, 391, 392, 393, 394, 396, 399, 400, 401, 402, 403, 407, 411, 414, 416, 417, 427, 432, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 452, 455, 460, 463, 466, 467, 468, 469, 470, 472, 474, 480, 481, 483, 486, 490, 497, 498, 499, 501, 502, 505, 506, 507, 509, 510, 512, 513, 516, 517, 518, 520, 521, 524, 525, 527, 530, 531, 532, 540, 547], "usabl": 151, "usag": [3, 4, 127, 141], "use_getitem": 110, "use_setitem": 110, "user": [110, 263, 396], "usm": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 495, 510, 512, 516, 524, 531, 532], "usm_ndarrai": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 352, 387, 388, 389, 390, 391, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532], "usm_typ": [25, 38, 42, 43, 44, 45, 46, 47, 82, 98, 99, 101, 107, 114, 115, 123, 127, 141, 158, 159, 160, 161, 162, 163, 164, 166, 177, 180, 234, 235, 246, 248, 256, 347, 392, 393, 394, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 510, 512, 516, 524, 531, 532], "usual": [99, 107, 110, 215, 249, 375], "util": 533, "v": [81, 98, 101, 107, 110, 209, 210, 232, 254, 374, 406, 480, 527], "v0": 6, "v10": 110, "v13": 6, "v2": 6, "v_sort": 254, "val": [107, 143, 146, 332, 368, 399], "valid": [86, 120, 248, 500, 512, 513, 516, 517], "valu": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 98, 103, 104, 105, 107, 110, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 130, 131, 136, 138, 139, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 186, 187, 189, 190, 193, 194, 197, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 220, 222, 224, 225, 226, 227, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 278, 279, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 340, 342, 344, 347, 352, 354, 366, 368, 375, 388, 389, 390, 391, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 421, 438, 439, 455, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 477, 479, 480, 481, 483, 484, 485, 486, 489, 491, 493, 494, 497, 498, 499, 501, 502, 503, 504, 507, 509, 512, 516, 518, 519, 520, 523, 525, 527, 530, 531, 532, 540, 543], "value2": 110, "valueerror": [23, 38, 43, 44, 107, 157, 220, 264, 265, 359, 469, 492, 495], "van": 220, "vander": 6, "vandermond": 524, "var": [6, 107, 253, 269, 272, 274, 497, 540], "vararg": 168, "vari": [10, 17, 21, 22, 102, 113, 126, 128, 130, 131, 132, 133, 135, 136, 139, 142, 160, 180, 188, 205, 208, 209, 210, 214, 216, 220, 263, 269, 272, 274, 460, 463, 486], "variabl": [85, 90, 214, 225], "varianc": [107, 253, 269, 272, 274, 386, 497, 525, 543], "variou": [220, 486, 547], "vdot": [6, 106, 232, 249, 527], "vecdot": [6, 526], "vector": [91, 112, 160, 180, 181, 197, 205, 206, 215, 218, 219, 220, 221, 226, 227, 232, 233, 249, 254, 255, 395, 396, 526, 527, 543], "vector_norm": [6, 220], "vendor": 4, "veri": [3, 10, 18, 182, 184, 221, 255, 263, 395], "verif": 0, "verifi": 204, "version": [4, 89, 91, 102, 107, 110, 147, 249, 254, 354, 390, 395, 461, 507, 521, 526, 527], "vertic": [76, 77, 78, 102, 109, 143, 148, 149, 175, 208, 476, 478, 492, 496, 528, 529], "vetterlin": 10, "vh": 226, "via": 136, "view": [6, 41, 55, 56, 57, 67, 98, 102, 107, 108, 120, 126, 128, 132, 133, 137, 138, 140, 142, 148, 149, 150, 174, 255, 261, 276, 359, 372, 385, 398, 407, 460, 461, 469, 476, 492, 495, 500, 508, 521, 528], "violat": 84, "void": 110, "void640": 110, "von": 456, "vonmis": 6, "vsplit": [6, 77, 78, 492], "vstack": [6, 76, 77, 78, 109, 175, 214, 478, 492, 496], "w": [10, 58, 209, 210, 211, 212, 217, 468], "wa": [10, 92, 110, 219, 247, 268, 270, 272, 274, 411, 452, 465, 469, 497, 525], "wai": [3, 4, 10, 107, 113, 125, 131, 132, 133, 138, 159, 228, 366, 505], "wald": 6, "walk": 110, "want": [4, 188, 502], "warn": [110, 264, 265, 429, 470], "we": [82, 85, 99, 102, 113, 143, 214, 248, 407, 502, 509], "weibul": [6, 459], "weight": [58, 59, 90, 172, 173, 253, 269, 499], "well": [110, 112, 159, 172, 173, 403, 413, 430, 449], "were": [77, 78, 160, 411, 440, 496, 523], "what": [10, 51, 71, 77, 78, 84, 107, 110, 112, 116, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 175, 185, 249, 342, 413, 430, 478, 496, 527, 529, 540], "when": [10, 23, 25, 35, 38, 39, 42, 43, 45, 47, 50, 51, 58, 82, 84, 104, 107, 110, 112, 125, 136, 138, 139, 154, 155, 166, 171, 182, 209, 215, 220, 223, 227, 228, 234, 241, 246, 248, 249, 254, 259, 266, 267, 268, 270, 271, 273, 342, 460, 466, 470, 473, 475, 477, 481, 489, 501, 505, 509, 520, 527, 530, 547], "whenev": [120, 398, 500, 508], "where": [0, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 79, 80, 82, 83, 84, 87, 88, 91, 92, 95, 96, 98, 99, 101, 103, 104, 105, 107, 108, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 130, 136, 137, 138, 141, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 176, 177, 180, 181, 183, 184, 185, 186, 187, 189, 190, 193, 194, 199, 200, 201, 202, 203, 204, 208, 214, 218, 223, 226, 227, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 262, 268, 269, 270, 271, 272, 273, 274, 337, 338, 342, 347, 360, 361, 362, 367, 374, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 447, 452, 455, 460, 464, 465, 466, 470, 472, 473, 475, 479, 480, 481, 483, 484, 485, 487, 491, 492, 493, 494, 497, 498, 499, 503, 504, 507, 508, 510, 512, 516, 518, 519, 523, 524, 525, 527, 528, 531, 532], "wherev": 84, "whether": [17, 18, 22, 39, 92, 104, 110, 157, 184, 185, 188, 204, 223, 234, 263, 271, 273, 461, 484, 520, 521, 540], "which": [3, 4, 10, 17, 22, 23, 24, 25, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 51, 58, 67, 77, 78, 82, 84, 89, 92, 93, 94, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 112, 113, 114, 115, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 148, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 175, 177, 180, 182, 187, 189, 190, 191, 192, 204, 206, 208, 209, 216, 218, 220, 227, 230, 231, 232, 233, 235, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 342, 347, 357, 390, 392, 393, 394, 398, 403, 406, 411, 433, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 461, 465, 467, 470, 474, 481, 488, 489, 492, 495, 496, 497, 499, 501, 507, 508, 509, 510, 511, 512, 515, 516, 519, 522, 523, 524, 525, 527, 530, 531, 532, 540, 547], "whichev": 181, "while": [10, 85, 140, 142, 172, 173, 253, 269, 272, 274, 390, 399, 403, 474, 497, 499, 510, 525], "whitespac": [159, 162], "whole": [126, 128, 132, 133, 137, 138, 140, 142, 512, 516], "whose": [12, 13, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 102, 110, 122, 123, 143, 205, 208, 210, 211, 212, 216, 227, 229, 231, 248, 250, 261, 474, 513, 517, 521], "why": 136, "wide": 143, "width": [110, 172, 173, 396], "wild": [413, 430], "window": [4, 127, 141], "wise": [12, 13, 14, 15, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 37, 39, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 72, 73, 76, 77, 78, 79, 80, 83, 85, 87, 88, 92, 105, 107, 109, 116, 118, 119, 121, 124, 145, 151, 152, 153, 154, 155, 156, 169, 170, 171, 174, 175, 176, 179, 183, 184, 187, 189, 190, 191, 192, 200, 201, 202, 203, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 257, 258, 259, 260, 262, 268, 270, 271, 346, 388, 389, 391, 400, 401, 402, 404, 462, 464, 466, 472, 473, 477, 478, 479, 483, 484, 485, 486, 487, 492, 493, 494, 496, 498, 503, 504, 518, 519, 528, 529, 533, 540, 543, 547], "wish": 540, "within": [18, 25, 39, 51, 107, 112, 130, 131, 132, 133, 135, 136, 138, 172, 173, 184, 342, 406, 411, 455], "without": [102, 107, 114, 143, 385, 460, 469, 470, 540], "won": 110, "word": [131, 132, 133, 136, 138, 152, 211, 411, 455], "work": [4, 37, 50, 107, 357, 502, 540], "world": [110, 413, 430], "would": [35, 77, 78, 107, 110, 160, 180, 219, 248, 249, 366, 398, 411, 461, 489, 492, 496, 502, 508, 523, 527], "wrap": [95, 107, 143, 368, 383, 396, 406, 407, 409, 461, 480, 501, 502, 523], "wrapper": 107, "writabl": 468, "write": [98, 102, 107, 143, 159, 355, 469], "writeabl": 468, "written": [4, 89, 92, 143, 159, 188, 247, 465, 530], "x": [0, 3, 4, 12, 13, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 54, 55, 56, 57, 61, 63, 67, 69, 72, 73, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 95, 96, 98, 101, 103, 104, 107, 108, 110, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 140, 141, 142, 145, 146, 147, 152, 158, 159, 160, 161, 163, 164, 165, 166, 168, 174, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 200, 205, 206, 208, 211, 214, 216, 220, 223, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 255, 256, 260, 261, 263, 342, 347, 356, 357, 364, 370, 375, 376, 388, 390, 392, 393, 394, 400, 403, 404, 405, 409, 410, 429, 435, 460, 462, 464, 465, 467, 468, 473, 474, 475, 477, 479, 481, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 500, 501, 503, 504, 509, 510, 519, 522, 524, 528, 530, 531, 532], "x0": [45, 47, 82, 101, 394, 524, 532], "x00": 159, "x01": [158, 159], "x02": [158, 159], "x03": [158, 159], "x04": [158, 159], "x05": 158, "x1": [16, 18, 21, 28, 30, 31, 39, 40, 48, 51, 52, 53, 59, 60, 62, 64, 65, 66, 74, 83, 86, 105, 107, 116, 151, 153, 154, 155, 156, 165, 169, 170, 171, 176, 197, 199, 200, 201, 202, 203, 206, 215, 221, 232, 240, 241, 242, 243, 244, 245, 249, 252, 255, 258, 259, 260, 262, 342, 388, 389, 391, 397, 400, 401, 402, 408, 448, 466, 472, 474, 498, 518, 527], "x1_i": [16, 31, 53, 60, 62, 64, 65, 66, 83, 105, 116, 151, 153, 156, 169, 170, 176, 201, 202, 203, 240, 241, 242, 244, 245, 259, 262, 391, 401, 402, 466, 472, 498, 518], "x2": [16, 17, 18, 21, 22, 28, 30, 31, 38, 39, 40, 48, 52, 53, 60, 62, 64, 65, 66, 83, 86, 105, 116, 151, 153, 154, 155, 156, 165, 169, 170, 171, 176, 197, 199, 200, 201, 202, 203, 206, 215, 221, 232, 240, 241, 242, 243, 244, 245, 249, 252, 255, 258, 259, 262, 388, 389, 391, 400, 401, 402, 466, 472, 474, 493, 498, 518, 527], "x2_i": [16, 31, 53, 60, 62, 64, 65, 66, 83, 105, 116, 151, 153, 156, 169, 170, 176, 201, 202, 203, 240, 241, 242, 244, 245, 259, 262, 391, 401, 402, 466, 472, 498, 518], "x3": [17, 22, 151], "x_i": [12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 61, 63, 72, 73, 79, 80, 87, 88, 118, 119, 121, 152, 179, 183, 236, 237, 238, 239, 243, 388, 400, 404, 462, 464, 473, 477, 479, 483, 484, 485, 487, 493, 494, 503, 504, 519], "xarr": 85, "xi": [239, 255], "xn": [197, 255], "xor": [60, 61, 63, 64, 66, 183, 242, 243, 244, 245], "xv": 255, "xx": 255, "xy": 255, "y": [0, 4, 14, 15, 25, 26, 27, 28, 29, 30, 32, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 55, 67, 82, 85, 90, 91, 101, 107, 110, 111, 114, 115, 120, 123, 127, 141, 158, 159, 160, 161, 163, 164, 166, 168, 177, 191, 192, 205, 206, 214, 234, 235, 246, 255, 256, 260, 263, 347, 364, 372, 375, 392, 393, 394, 468, 509, 510, 524, 530, 531, 532], "y1": 200, "y2": 200, "yarr": 85, "yet": [4, 6], "yield": [14, 15, 26, 27, 28, 29, 30, 32, 35, 48, 49, 52, 54, 271, 273, 390, 396, 411, 530, 540], "you": [4, 102, 130, 135, 136, 188, 248, 254, 469, 501, 502, 540, 547], "your": [4, 102, 547], "yv": 255, "yy": 255, "z": [14, 15, 17, 22, 25, 26, 27, 28, 29, 30, 32, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 82, 91, 101, 114, 115, 123, 127, 141, 158, 159, 160, 161, 163, 164, 166, 177, 234, 235, 246, 255, 256, 392, 393, 394, 421, 510, 524, 531, 532], "zero": [6, 10, 17, 21, 22, 35, 36, 37, 38, 62, 73, 89, 91, 92, 99, 103, 107, 114, 115, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 152, 159, 163, 164, 177, 179, 185, 186, 191, 192, 193, 194, 201, 209, 210, 212, 214, 217, 218, 222, 226, 228, 247, 248, 251, 253, 257, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 364, 365, 375, 376, 380, 387, 390, 393, 394, 396, 403, 411, 413, 441, 443, 444, 446, 462, 463, 465, 470, 473, 477, 483, 489, 497, 499, 505, 510, 511, 514, 515, 519, 525, 530, 532], "zeros_lik": [6, 38, 96, 115, 164, 254, 394, 410, 531], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic Functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 277, "__add__": 278, "__and__": 279, "__bool__": 280, "__complex__": 281, "__copy__": 282, "__eq__": 283, "__float__": 284, "__floordiv__": 285, "__ge__": 286, "__getitem__": 287, "__gt__": 288, "__iadd__": 289, "__iand__": 290, "__ifloordiv__": 291, "__ilshift__": 292, "__imatmul__": 293, "__imod__": 294, "__imul__": 295, "__int__": 296, "__invert__": 297, "__ior__": 298, "__ipow__": 299, "__irshift__": 300, "__isub__": 301, "__itruediv__": 302, "__ixor__": 303, "__le__": 304, "__len__": 305, "__lshift__": 306, "__lt__": 307, "__matmul__": 308, "__mod__": 309, "__mul__": 310, "__ne__": 311, "__neg__": 312, "__new__": 313, "__or__": 314, "__pos__": 315, "__pow__": 316, "__radd__": 317, "__rand__": 318, "__repr__": 319, "__rfloordiv__": 320, "__rlshift__": 321, "__rmatmul__": 322, "__rmod__": 323, "__rmul__": 324, "__ror__": 325, "__rpow__": 326, "__rrshift__": 327, "__rshift__": 328, "__rsub__": 329, "__rtruediv__": 330, "__rxor__": 331, "__setitem__": 332, "__str__": 333, "__sub__": 334, "__truediv__": 335, "__xor__": 336, "ab": 12, "absolut": 13, "aco": 14, "acosh": 15, "ad": 537, "add": 16, "algebra": [6, 535], "all": [17, 337], "allclos": 18, "amax": 19, "amin": 20, "angl": 21, "ani": [22, 338], "api": [1, 533], "append": 23, "apply_along_axi": 24, "arang": 25, "arcco": 26, "arccosh": 27, "arcsin": 28, "arcsinh": 29, "arctan": 30, "arctan2": 31, "arctanh": 32, "argmax": [33, 339], "argmin": [34, 340], "argsort": [35, 341], "argwher": 36, "arithmet": [538, 540, 541], "around": 37, "arrai": [6, 7, 9, 38, 534, 536, 537, 540], "array_equ": 39, "array_equiv": 40, "array_split": 41, "asanyarrai": 42, "asarrai": 43, "asarray_chkfinit": 44, "ascontiguousarrai": 45, "asfarrai": 46, "asfortranarrai": 47, "asin": 48, "asinh": 49, "asnumpi": 50, "astyp": [51, 342], "atan": 52, "atan2": 53, "atanh": 54, "atleast_1d": 55, "atleast_2d": 56, "atleast_3d": 57, "attribut": 540, "avail": [9, 547], "averag": [58, 546], "backend": 1, "background": 10, "basic": [537, 541], "beta": 412, "bincount": 59, "binomi": 413, "bit": [5, 547], "bitwise_and": 60, "bitwise_invert": 61, "bitwise_left_shift": 62, "bitwise_not": 63, "bitwise_or": 64, "bitwise_right_shift": 65, "bitwise_xor": 66, "broadcast_arrai": 67, "broadcast_shap": 68, "broadcast_to": 69, "build": [4, 7], "byte": 414, "byte_bound": 70, "c": 1, "calcul": 540, "can_cast": 71, "cbrt": 72, "ceil": 73, "chang": 537, "channel": 4, "chisquar": 415, "choic": 416, "choleski": 204, "choos": [74, 343], "class": 7, "clip": [75, 344], "co": 87, "column_stack": 76, "comparison": [6, 536, 540, 547], "complex": 538, "concat": 77, "concaten": 78, "cond": 205, "conda": 4, "conj": [79, 345], "conjug": [80, 346], "construct": 540, "control": 0, "convers": 540, "convolv": 81, "copi": [82, 347], "copysign": 83, "copyto": 84, "corrcoef": 85, "correl": [86, 546], "cosh": 88, "count": 544, "count_nonzero": 89, "cov": 90, "creat": 8, "creation": 7, "cross": [91, 206], "cumlogsumexp": 92, "cumprod": [93, 348], "cumsum": [94, 349], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 534, 540, 542], "decomposit": 535, "deg2rad": 95, "degre": 96, "delet": 97, "det": 207, "detail": 10, "develop": 2, "devic": 4, "diag": 98, "diag_indic": 99, "diag_indices_from": 100, "diagflat": 101, "diagon": [102, 208, 350], "diff": 103, "differ": 538, "digit": 104, "dimens": [10, 537], "dimension": [6, 540], "dirichlet": 417, "discret": [6, 10], "distribut": 542, "divid": 105, "dot": 106, "dpnp": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 542], "dpnp_arrai": 107, "driver": 4, "dsplit": 108, "dstack": 109, "dtype": [110, 351], "ediff1d": 111, "eig": 209, "eigenvalu": 535, "eigh": 210, "eigval": 211, "eigvalsh": 212, "einsum": 112, "einsum_path": 113, "element": [5, 537], "empti": 114, "empty_lik": 115, "equal": 116, "equat": 535, "erf": 117, "error": 545, "exampl": [0, 4], "except": 535, "exist": 7, "exp": 118, "exp2": 119, "expand_dim": 120, "expm1": 121, "expon": 538, "exponenti": 418, "extens": 2, "extract": 122, "extrema": 538, "ey": 123, "f": 419, "fab": 124, "fft": [10, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "fft2": 126, "fftfreq": 127, "fftn": 128, "fftshift": 129, "fill": 352, "fill_diagon": 143, "find": 538, "finfo": 144, "fix": 145, "flag": 353, "flat": 354, "flatit": 146, "flatnonzero": 147, "flatten": 355, "flip": 148, "fliplr": 149, "flipud": 150, "float": [538, 547], "float_pow": 151, "floor": 152, "floor_divid": 153, "fmax": 154, "fmin": 155, "fmod": 156, "format": 5, "fourier": [6, 10], "from": [4, 7], "from_dlpack": 157, "frombuff": 158, "fromfil": 159, "fromfunct": 160, "fromit": 161, "fromstr": 162, "full": 163, "full_lik": 164, "function": [11, 536, 538, 545, 547], "gamma": 420, "gcd": 165, "gener": [534, 542], "geometr": 421, "geomspac": 166, "get_includ": 167, "gradient": 168, "greater": 169, "greater_equ": 170, "guid": 4, "gumbel": 422, "handl": 538, "heavisid": 171, "helper": 10, "hermitian": 10, "hfft": 130, "higher": 10, "histogram": [172, 546], "histogram_bin_edg": 173, "hsplit": 174, "hstack": 175, "hyperbol": 538, "hypergeometr": 423, "hypot": 176, "ident": 177, "ifft": 131, "ifft2": 132, "ifftn": 133, "ifftshift": 134, "ihfft": 135, "iinfo": 178, "imag": [179, 356], "implement": 10, "index": [534, 540], "indic": 180, "infin": 536, "inform": [2, 8, 10], "inner": 181, "insert": [182, 534], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 213, "invert": 183, "irfft": 136, "irfft2": 137, "irfftn": 138, "isclos": 184, "iscomplex": 185, "iscomplexobj": 186, "isfinit": 187, "isfortran": 188, "isinf": 189, "isnan": 190, "isneginf": 191, "isposinf": 192, "isreal": 193, "isrealobj": 194, "isscalar": 195, "issubdtyp": 196, "item": [357, 540], "items": 358, "iter": 534, "ix_": 197, "join": 537, "kind": 537, "kron": 198, "laplac": 424, "layout": 540, "lcm": 199, "ldexp": 200, "left_shift": 201, "less": 202, "less_equ": 203, "level": 6, "librari": 0, "like": [534, 537], "linalg": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "linear": [6, 535], "linspac": 234, "loadtxt": 235, "log": 236, "log10": 237, "log1p": 238, "log2": 239, "logaddexp": 240, "logaddexp2": 241, "logarithm": 538, "logic": 536, "logical_and": 242, "logical_not": 243, "logical_or": 244, "logical_xor": 245, "logist": 425, "lognorm": 426, "logseri": 427, "logspac": 246, "logsumexp": 247, "lstsq": 214, "manipul": [537, 540], "mask_indic": 248, "math": 547, "mathemat": 538, "matmul": [215, 249], "matric": 7, "matrix": [7, 535, 540], "matrix_norm": 216, "matrix_pow": 217, "matrix_rank": 218, "matrix_transpos": 250, "max": [251, 360], "maximum": 252, "mean": [253, 361], "median": 254, "memori": 540, "meshgrid": 255, "method": 540, "mgrid": 256, "min": [257, 362], "minimum": 258, "miscellan": [8, 538, 539], "mod": 259, "modf": 260, "modul": [6, 541], "moveaxi": 261, "mt": 359, "multi": [6, 540], "multi_dot": 219, "multinomi": 428, "multipl": 540, "multipli": 262, "multivariate_norm": 429, "nan": 536, "nan_to_num": 263, "nanargmax": 264, "nanargmin": 265, "nancumprod": 266, "nancumsum": 267, "nanmax": 268, "nanmean": 269, "nanmin": 270, "nanprod": 271, "nanstd": 272, "nansum": 273, "nanvar": 274, "nbyte": 363, "ndarrai": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 540], "ndim": [364, 387], "neg": 388, "negative_binomi": 430, "nextaft": 389, "noncentral_chisquar": 431, "noncentral_f": 432, "nonzero": [365, 390], "norm": [220, 535], "normal": [10, 433], "not_equ": 391, "number": [535, 537, 538], "numer": 7, "numpi": [2, 6], "ogrid": 392, "ones": 393, "ones_lik": 394, "oper": [5, 534, 535, 536, 537, 538, 540, 547], "order": 546, "other": [535, 538, 540], "outer": [221, 395], "output": 5, "over": 534, "overview": 3, "pack": 5, "packag": [4, 541], "pad": 396, "parallel": [0, 2], "pareto": 434, "partit": [366, 397], "permut": [435, 542], "permute_dim": 398, "pinv": 222, "place": 399, "point": 538, "poisson": 436, "poly1d": 541, "polynomi": 541, "polyutil": 541, "posit": 400, "pow": 401, "power": [402, 437], "prod": [367, 403], "product": [535, 538], "program": 11, "proj": 404, "ptp": 405, "put": [368, 406], "put_along_axi": 407, "putmask": 408, "python": 4, "qr": 223, "quick": 4, "r": 4, "rad2deg": 409, "radian": 410, "rand": 438, "randint": 439, "randn": 440, "random": [6, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 542], "random_integ": 442, "random_sampl": 443, "randomst": 411, "ranf": 444, "rang": 7, "ration": 538, "ravel": [369, 460], "ravel_multi_index": 461, "rayleigh": 445, "real": [10, 370, 462], "real_if_clos": 463, "rearrang": 537, "reciproc": 464, "reduce_hypot": 465, "refer": [1, 533], "remaind": 466, "remov": 537, "repeat": [371, 467], "requir": 468, "reshap": [372, 469], "resiz": 470, "result_typ": 471, "rfft": 139, "rfft2": 140, "rfftfreq": 141, "rfftn": 142, "right_shift": 472, "rint": 473, "roll": 474, "rollaxi": 475, "rot90": 476, "round": [373, 477, 538], "routin": [7, 8, 10, 534, 537, 538, 539, 543], "row_stack": 478, "rsqrt": 479, "sampl": [6, 446, 542], "scikit": 4, "search": 544, "searchsort": [374, 480], "seed": 447, "select": [481, 540], "shape": [7, 375, 482, 537, 540], "shuffl": 448, "sign": 483, "signbit": 484, "simpl": 542, "sin": 485, "sinc": 486, "sinh": 487, "size": [376, 488], "slogdet": 224, "solv": [225, 535], "sort": [377, 489, 544], "sort_complex": 490, "space": 491, "special": [538, 540, 545], "split": [492, 537], "sqrt": 493, "squar": 494, "squeez": [378, 495], "stack": 496, "standard": 10, "standard_cauchi": 449, "standard_exponenti": 450, "standard_gamma": 451, "standard_norm": 452, "standard_t": 453, "start": 4, "statist": 546, "std": [379, 497], "stride": 380, "subtract": 498, "sum": [381, 499, 538], "summari": 6, "svd": 226, "svdval": 227, "swapax": [382, 500], "sycl": 4, "t": 276, "tabl": 6, "take": [383, 501], "take_along_axi": 502, "tan": 503, "tanh": 504, "target": 4, "tensordot": [228, 505], "tensorinv": 229, "tensorsolv": 230, "test": [4, 8, 536], "tile": [506, 537], "trace": [231, 384, 507], "transform": [6, 10], "transpos": [385, 508, 537], "trapezoid": 509, "tri": 510, "triangular": 454, "trigonometr": [538, 547], "tril": 511, "tril_indic": 512, "tril_indices_from": 513, "trim_zero": 514, "triu": 515, "triu_indic": 516, "triu_indices_from": 517, "true_divid": 518, "trunc": 519, "truth": 536, "twiddl": 547, "type": [8, 9, 536, 540], "ufunc": 547, "uniform": 455, "uniqu": 520, "univers": 547, "unravel_index": 521, "unstack": 522, "unwrap": 523, "util": 539, "valu": [7, 536], "vander": 524, "var": [386, 525], "varianc": 546, "vdot": 526, "vecdot": [232, 527], "vector": 535, "vector_norm": 233, "vonmis": 456, "vsplit": 528, "vstack": 529, "wald": 457, "weibul": 458, "where": 530, "wise": 5, "zero": 531, "zeros_lik": 532, "zipf": 459}})