Search.setIndex({"alltitles": {"API Reference": [[529, null]], "Adding and removing elements": [[533, "adding-and-removing-elements"]], "Arithmetic": [[537, "arithmetic"]], "Arithmetic operations": [[534, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[536, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[533, null]], "Array attributes": [[536, "array-attributes"]], "Array conversion": [[536, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[536, "array-methods"]], "Array type testing": [[532, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[543, "available-ufuncs"]], "Averages and variances": [[542, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[533, "basic-operations"]], "Basics": [[537, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[543, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[536, "calculation"]], "Changing array shape": [[533, "changing-array-shape"]], "Changing kind of array": [[533, "changing-kind-of-array"]], "Changing number of dimensions": [[533, "changing-number-of-dimensions"]], "Comparison": [[532, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[543, "comparison-functions"]], "Constructing arrays": [[536, "constructing-arrays"]], "Correlations": [[542, "correlations"]], "Counting": [[540, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[536, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[531, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[538, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[541, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[531, "exceptions"]], "Exponents and logarithms": [[534, "exponents-and-logarithms"]], "Extrema finding": [[534, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[543, "floating-functions"]], "Floating point routines": [[534, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[530, "generating-index-arrays"]], "Handling complex numbers": [[534, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[542, "histograms"]], "Hyperbolic functions": [[534, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[536, "indexing-arrays"]], "Indexing routines": [[530, null]], "Indexing-like operations": [[530, "indexing-like-operations"]], "Infinities and NaNs": [[532, "infinities-and-nans"]], "Inserting data into arrays": [[530, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[536, "item-selection-and-manipulation"]], "Iterating over arrays": [[530, "iterating-over-arrays"]], "Joining arrays": [[533, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [531, null]], "Logic Functions": [[532, null]], "Logic operations": [[532, "logic-operations"]], "Math operations": [[543, "math-operations"]], "Mathematical functions": [[534, null]], "Matrix and vector products": [[531, "matrix-and-vector-products"]], "Matrix eigenvalues": [[531, "matrix-eigenvalues"]], "Memory layout": [[536, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [534, "miscellaneous"]], "Miscellaneous routines": [[535, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[536, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[531, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[542, "order-statistics"]], "Other attributes": [[536, "other-attributes"]], "Other matrix operations": [[531, "other-matrix-operations"]], "Other special functions": [[534, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[538, "permutations"]], "Poly1d": [[537, "poly1d"]], "Polynomial Module": [[537, "polynomial-module"]], "Polynomial Package": [[537, "polynomial-package"]], "Polynomials": [[537, null]], "Polyutils": [[537, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[538, null]], "Random generator": [[538, "random-generator"]], "Rational routines": [[534, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[533, "rearranging-elements"]], "Rounding": [[534, "rounding"]], "Routines": [[539, null]], "Searching": [[540, "searching"]], "Shape manipulation": [[536, "shape-manipulation"]], "Simple random data": [[538, "simple-random-data"]], "Solving linear equations": [[531, "solving-linear-equations"]], "Sorting": [[540, "sorting"]], "Sorting, Searching, and Counting": [[540, null]], "Special Functions": [[541, null]], "Special methods": [[536, "special-methods"]], "Splitting arrays": [[533, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[542, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[534, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[533, "tiling-arrays"]], "Transpose-like operations": [[533, "transpose-like-operations"]], "Trigonometric functions": [[534, "trigonometric-functions"], [543, "trigonometric-functions"]], "Truth value testing": [[532, "truth-value-testing"]], "Universal Functions (ufunc)": [[543, null]], "Utility": [[535, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_invert": [[59, null]], "dpnp.bitwise_left_shift": [[60, null]], "dpnp.bitwise_not": [[61, null]], "dpnp.bitwise_or": [[62, null]], "dpnp.bitwise_right_shift": [[63, null]], "dpnp.bitwise_xor": [[64, null]], "dpnp.broadcast_arrays": [[65, null]], "dpnp.broadcast_shapes": [[66, null]], "dpnp.broadcast_to": [[67, null]], "dpnp.can_cast": [[68, null]], "dpnp.cbrt": [[69, null]], "dpnp.ceil": [[70, null]], "dpnp.choose": [[71, null]], "dpnp.clip": [[72, null]], "dpnp.column_stack": [[73, null]], "dpnp.concat": [[74, null]], "dpnp.concatenate": [[75, null]], "dpnp.conj": [[76, null]], "dpnp.conjugate": [[77, null]], "dpnp.convolve": [[78, null]], "dpnp.copy": [[79, null]], "dpnp.copysign": [[80, null]], "dpnp.copyto": [[81, null]], "dpnp.correlate": [[82, null]], "dpnp.cos": [[83, null]], "dpnp.cosh": [[84, null]], "dpnp.count_nonzero": [[85, null]], "dpnp.cov": [[86, null]], "dpnp.cross": [[87, null]], "dpnp.cumlogsumexp": [[88, null]], "dpnp.cumprod": [[89, null]], "dpnp.cumsum": [[90, null]], "dpnp.deg2rad": [[91, null]], "dpnp.degrees": [[92, null]], "dpnp.delete": [[93, null]], "dpnp.diag": [[94, null]], "dpnp.diag_indices": [[95, null]], "dpnp.diag_indices_from": [[96, null]], "dpnp.diagflat": [[97, null]], "dpnp.diagonal": [[98, null]], "dpnp.diff": [[99, null]], "dpnp.digitize": [[100, null]], "dpnp.divide": [[101, null]], "dpnp.dot": [[102, null]], "dpnp.dpnp_array.dpnp_array": [[103, null]], "dpnp.dsplit": [[104, null]], "dpnp.dstack": [[105, null]], "dpnp.dtype": [[106, null]], "dpnp.ediff1d": [[107, null]], "dpnp.einsum": [[108, null]], "dpnp.einsum_path": [[109, null]], "dpnp.empty": [[110, null]], "dpnp.empty_like": [[111, null]], "dpnp.equal": [[112, null]], "dpnp.erf": [[113, null]], "dpnp.exp": [[114, null]], "dpnp.exp2": [[115, null]], "dpnp.expand_dims": [[116, null]], "dpnp.expm1": [[117, null]], "dpnp.extract": [[118, null]], "dpnp.eye": [[119, null]], "dpnp.fabs": [[120, null]], "dpnp.fft.fft": [[121, null]], "dpnp.fft.fft2": [[122, null]], "dpnp.fft.fftfreq": [[123, null]], "dpnp.fft.fftn": [[124, null]], "dpnp.fft.fftshift": [[125, null]], "dpnp.fft.hfft": [[126, null]], "dpnp.fft.ifft": [[127, null]], "dpnp.fft.ifft2": [[128, null]], "dpnp.fft.ifftn": [[129, null]], "dpnp.fft.ifftshift": [[130, null]], "dpnp.fft.ihfft": [[131, null]], "dpnp.fft.irfft": [[132, null]], "dpnp.fft.irfft2": [[133, null]], "dpnp.fft.irfftn": [[134, null]], "dpnp.fft.rfft": [[135, null]], "dpnp.fft.rfft2": [[136, null]], "dpnp.fft.rfftfreq": [[137, null]], "dpnp.fft.rfftn": [[138, null]], "dpnp.fill_diagonal": [[139, null]], "dpnp.finfo": [[140, null]], "dpnp.fix": [[141, null]], "dpnp.flatiter": [[142, null]], "dpnp.flatnonzero": [[143, null]], "dpnp.flip": [[144, null]], "dpnp.fliplr": [[145, null]], "dpnp.flipud": [[146, null]], "dpnp.float_power": [[147, null]], "dpnp.floor": [[148, null]], "dpnp.floor_divide": [[149, null]], "dpnp.fmax": [[150, null]], "dpnp.fmin": [[151, null]], "dpnp.fmod": [[152, null]], "dpnp.from_dlpack": [[153, null]], "dpnp.frombuffer": [[154, null]], "dpnp.fromfile": [[155, null]], "dpnp.fromfunction": [[156, null]], "dpnp.fromiter": [[157, null]], "dpnp.fromstring": [[158, null]], "dpnp.full": [[159, null]], "dpnp.full_like": [[160, null]], "dpnp.gcd": [[161, null]], "dpnp.geomspace": [[162, null]], "dpnp.get_include": [[163, null]], "dpnp.gradient": [[164, null]], "dpnp.greater": [[165, null]], "dpnp.greater_equal": [[166, null]], "dpnp.heaviside": [[167, null]], "dpnp.histogram": [[168, null]], "dpnp.histogram_bin_edges": [[169, null]], "dpnp.hsplit": [[170, null]], "dpnp.hstack": [[171, null]], "dpnp.hypot": [[172, null]], "dpnp.identity": [[173, null]], "dpnp.iinfo": [[174, null]], "dpnp.imag": [[175, null]], "dpnp.indices": [[176, null]], "dpnp.inner": [[177, null]], "dpnp.insert": [[178, null]], "dpnp.invert": [[179, null]], "dpnp.isclose": [[180, null]], "dpnp.iscomplex": [[181, null]], "dpnp.iscomplexobj": [[182, null]], "dpnp.isfinite": [[183, null]], "dpnp.isfortran": [[184, null]], "dpnp.isinf": [[185, null]], "dpnp.isnan": [[186, null]], "dpnp.isneginf": [[187, null]], "dpnp.isposinf": [[188, null]], "dpnp.isreal": [[189, null]], "dpnp.isrealobj": [[190, null]], "dpnp.isscalar": [[191, null]], "dpnp.issubdtype": [[192, null]], "dpnp.ix_": [[193, null]], "dpnp.kron": [[194, null]], "dpnp.lcm": [[195, null]], "dpnp.ldexp": [[196, null]], "dpnp.left_shift": [[197, null]], "dpnp.less": [[198, null]], "dpnp.less_equal": [[199, null]], "dpnp.linalg.cholesky": [[200, null]], "dpnp.linalg.cond": [[201, null]], "dpnp.linalg.cross": [[202, null]], "dpnp.linalg.det": [[203, null]], "dpnp.linalg.diagonal": [[204, null]], "dpnp.linalg.eig": [[205, null]], "dpnp.linalg.eigh": [[206, null]], "dpnp.linalg.eigvals": [[207, null]], "dpnp.linalg.eigvalsh": [[208, null]], "dpnp.linalg.inv": [[209, null]], "dpnp.linalg.lstsq": [[210, null]], "dpnp.linalg.matmul": [[211, null]], "dpnp.linalg.matrix_norm": [[212, null]], "dpnp.linalg.matrix_power": [[213, null]], "dpnp.linalg.matrix_rank": [[214, null]], "dpnp.linalg.multi_dot": [[215, null]], "dpnp.linalg.norm": [[216, null]], "dpnp.linalg.outer": [[217, null]], "dpnp.linalg.pinv": [[218, null]], "dpnp.linalg.qr": [[219, null]], "dpnp.linalg.slogdet": [[220, null]], "dpnp.linalg.solve": [[221, null]], "dpnp.linalg.svd": [[222, null]], "dpnp.linalg.svdvals": [[223, null]], "dpnp.linalg.tensordot": [[224, null]], "dpnp.linalg.tensorinv": [[225, null]], "dpnp.linalg.tensorsolve": [[226, null]], "dpnp.linalg.trace": [[227, null]], "dpnp.linalg.vecdot": [[228, null]], "dpnp.linalg.vector_norm": [[229, null]], "dpnp.linspace": [[230, null]], "dpnp.loadtxt": [[231, null]], "dpnp.log": [[232, null]], "dpnp.log10": [[233, null]], "dpnp.log1p": [[234, null]], "dpnp.log2": [[235, null]], "dpnp.logaddexp": [[236, null]], "dpnp.logaddexp2": [[237, null]], "dpnp.logical_and": [[238, null]], "dpnp.logical_not": [[239, null]], "dpnp.logical_or": [[240, null]], "dpnp.logical_xor": [[241, null]], "dpnp.logspace": [[242, null]], "dpnp.logsumexp": [[243, null]], "dpnp.mask_indices": [[244, null]], "dpnp.matmul": [[245, null]], "dpnp.matrix_transpose": [[246, null]], "dpnp.max": [[247, null]], "dpnp.maximum": [[248, null]], "dpnp.mean": [[249, null]], "dpnp.median": [[250, null]], "dpnp.meshgrid": [[251, null]], "dpnp.mgrid": [[252, null]], "dpnp.min": [[253, null]], "dpnp.minimum": [[254, null]], "dpnp.mod": [[255, null]], "dpnp.modf": [[256, null]], "dpnp.moveaxis": [[257, null]], "dpnp.multiply": [[258, null]], "dpnp.nan_to_num": [[259, null]], "dpnp.nanargmax": [[260, null]], "dpnp.nanargmin": [[261, null]], "dpnp.nancumprod": [[262, null]], "dpnp.nancumsum": [[263, null]], "dpnp.nanmax": [[264, null]], "dpnp.nanmean": [[265, null]], "dpnp.nanmin": [[266, null]], "dpnp.nanprod": [[267, null]], "dpnp.nanstd": [[268, null]], "dpnp.nansum": [[269, null]], "dpnp.nanvar": [[270, null]], "dpnp.ndarray": [[271, null]], "dpnp.ndarray.T": [[272, null]], "dpnp.ndarray.__abs__": [[273, null]], "dpnp.ndarray.__add__": [[274, null]], "dpnp.ndarray.__and__": [[275, null]], "dpnp.ndarray.__bool__": [[276, null]], "dpnp.ndarray.__complex__": [[277, null]], "dpnp.ndarray.__copy__": [[278, null]], "dpnp.ndarray.__eq__": [[279, null]], "dpnp.ndarray.__float__": [[280, null]], "dpnp.ndarray.__floordiv__": [[281, null]], "dpnp.ndarray.__ge__": [[282, null]], "dpnp.ndarray.__getitem__": [[283, null]], "dpnp.ndarray.__gt__": [[284, null]], "dpnp.ndarray.__iadd__": [[285, null]], "dpnp.ndarray.__iand__": [[286, null]], "dpnp.ndarray.__ifloordiv__": [[287, null]], "dpnp.ndarray.__ilshift__": [[288, null]], "dpnp.ndarray.__imatmul__": [[289, null]], "dpnp.ndarray.__imod__": [[290, null]], "dpnp.ndarray.__imul__": [[291, null]], "dpnp.ndarray.__int__": [[292, null]], "dpnp.ndarray.__invert__": [[293, null]], "dpnp.ndarray.__ior__": [[294, null]], "dpnp.ndarray.__ipow__": [[295, null]], "dpnp.ndarray.__irshift__": [[296, null]], "dpnp.ndarray.__isub__": [[297, null]], "dpnp.ndarray.__itruediv__": [[298, null]], "dpnp.ndarray.__ixor__": [[299, null]], "dpnp.ndarray.__le__": [[300, null]], "dpnp.ndarray.__len__": [[301, null]], "dpnp.ndarray.__lshift__": [[302, null]], "dpnp.ndarray.__lt__": [[303, null]], "dpnp.ndarray.__matmul__": [[304, null]], "dpnp.ndarray.__mod__": [[305, null]], "dpnp.ndarray.__mul__": [[306, null]], "dpnp.ndarray.__ne__": [[307, null]], "dpnp.ndarray.__neg__": [[308, null]], "dpnp.ndarray.__new__": [[309, null]], "dpnp.ndarray.__or__": [[310, null]], "dpnp.ndarray.__pos__": [[311, null]], "dpnp.ndarray.__pow__": [[312, null]], "dpnp.ndarray.__radd__": [[313, null]], "dpnp.ndarray.__rand__": [[314, null]], "dpnp.ndarray.__repr__": [[315, null]], "dpnp.ndarray.__rfloordiv__": [[316, null]], "dpnp.ndarray.__rlshift__": [[317, null]], "dpnp.ndarray.__rmatmul__": [[318, null]], "dpnp.ndarray.__rmod__": [[319, null]], "dpnp.ndarray.__rmul__": [[320, null]], "dpnp.ndarray.__ror__": [[321, null]], "dpnp.ndarray.__rpow__": [[322, null]], "dpnp.ndarray.__rrshift__": [[323, null]], "dpnp.ndarray.__rshift__": [[324, null]], "dpnp.ndarray.__rsub__": [[325, null]], "dpnp.ndarray.__rtruediv__": [[326, null]], "dpnp.ndarray.__rxor__": [[327, null]], "dpnp.ndarray.__setitem__": [[328, null]], "dpnp.ndarray.__str__": [[329, null]], "dpnp.ndarray.__sub__": [[330, null]], "dpnp.ndarray.__truediv__": [[331, null]], "dpnp.ndarray.__xor__": [[332, null]], "dpnp.ndarray.all": [[333, null]], "dpnp.ndarray.any": [[334, null]], "dpnp.ndarray.argmax": [[335, null]], "dpnp.ndarray.argmin": [[336, null]], "dpnp.ndarray.argsort": [[337, null]], "dpnp.ndarray.astype": [[338, null]], "dpnp.ndarray.choose": [[339, null]], "dpnp.ndarray.clip": [[340, null]], "dpnp.ndarray.conj": [[341, null]], "dpnp.ndarray.conjugate": [[342, null]], "dpnp.ndarray.copy": [[343, null]], "dpnp.ndarray.cumprod": [[344, null]], "dpnp.ndarray.cumsum": [[345, null]], "dpnp.ndarray.diagonal": [[346, null]], "dpnp.ndarray.dtype": [[347, null]], "dpnp.ndarray.fill": [[348, null]], "dpnp.ndarray.flags": [[349, null]], "dpnp.ndarray.flat": [[350, null]], "dpnp.ndarray.flatten": [[351, null]], "dpnp.ndarray.imag": [[352, null]], "dpnp.ndarray.item": [[353, null]], "dpnp.ndarray.itemsize": [[354, null]], "dpnp.ndarray.mT": [[355, null]], "dpnp.ndarray.max": [[356, null]], "dpnp.ndarray.mean": [[357, null]], "dpnp.ndarray.min": [[358, null]], "dpnp.ndarray.nbytes": [[359, null]], "dpnp.ndarray.ndim": [[360, null]], "dpnp.ndarray.nonzero": [[361, null]], "dpnp.ndarray.partition": [[362, null]], "dpnp.ndarray.prod": [[363, null]], "dpnp.ndarray.put": [[364, null]], "dpnp.ndarray.ravel": [[365, null]], "dpnp.ndarray.real": [[366, null]], "dpnp.ndarray.repeat": [[367, null]], "dpnp.ndarray.reshape": [[368, null]], "dpnp.ndarray.round": [[369, null]], "dpnp.ndarray.searchsorted": [[370, null]], "dpnp.ndarray.shape": [[371, null]], "dpnp.ndarray.size": [[372, null]], "dpnp.ndarray.sort": [[373, null]], "dpnp.ndarray.squeeze": [[374, null]], "dpnp.ndarray.std": [[375, null]], "dpnp.ndarray.strides": [[376, null]], "dpnp.ndarray.sum": [[377, null]], "dpnp.ndarray.swapaxes": [[378, null]], "dpnp.ndarray.take": [[379, null]], "dpnp.ndarray.trace": [[380, null]], "dpnp.ndarray.transpose": [[381, null]], "dpnp.ndarray.var": [[382, null]], "dpnp.ndim": [[383, null]], "dpnp.negative": [[384, null]], "dpnp.nextafter": [[385, null]], "dpnp.nonzero": [[386, null]], "dpnp.not_equal": [[387, null]], "dpnp.ogrid": [[388, null]], "dpnp.ones": [[389, null]], "dpnp.ones_like": [[390, null]], "dpnp.outer": [[391, null]], "dpnp.pad": [[392, null]], "dpnp.partition": [[393, null]], "dpnp.permute_dims": [[394, null]], "dpnp.place": [[395, null]], "dpnp.positive": [[396, null]], "dpnp.pow": [[397, null]], "dpnp.power": [[398, null]], "dpnp.prod": [[399, null]], "dpnp.proj": [[400, null]], "dpnp.ptp": [[401, null]], "dpnp.put": [[402, null]], "dpnp.put_along_axis": [[403, null]], "dpnp.putmask": [[404, null]], "dpnp.rad2deg": [[405, null]], "dpnp.radians": [[406, null]], "dpnp.random.RandomState": [[407, null]], "dpnp.random.beta": [[408, null]], "dpnp.random.binomial": [[409, null]], "dpnp.random.bytes": [[410, null]], "dpnp.random.chisquare": [[411, null]], "dpnp.random.choice": [[412, null]], "dpnp.random.dirichlet": [[413, null]], "dpnp.random.exponential": [[414, null]], "dpnp.random.f": [[415, null]], "dpnp.random.gamma": [[416, null]], "dpnp.random.geometric": [[417, null]], "dpnp.random.gumbel": [[418, null]], "dpnp.random.hypergeometric": [[419, null]], "dpnp.random.laplace": [[420, null]], "dpnp.random.logistic": [[421, null]], "dpnp.random.lognormal": [[422, null]], "dpnp.random.logseries": [[423, null]], "dpnp.random.multinomial": [[424, null]], "dpnp.random.multivariate_normal": [[425, null]], "dpnp.random.negative_binomial": [[426, null]], "dpnp.random.noncentral_chisquare": [[427, null]], "dpnp.random.noncentral_f": [[428, null]], "dpnp.random.normal": [[429, null]], "dpnp.random.pareto": [[430, null]], "dpnp.random.permutation": [[431, null]], "dpnp.random.poisson": [[432, null]], "dpnp.random.power": [[433, null]], "dpnp.random.rand": [[434, null]], "dpnp.random.randint": [[435, null]], "dpnp.random.randn": [[436, null]], "dpnp.random.random": [[437, null]], "dpnp.random.random_integers": [[438, null]], "dpnp.random.random_sample": [[439, null]], "dpnp.random.ranf": [[440, null]], "dpnp.random.rayleigh": [[441, null]], "dpnp.random.sample": [[442, null]], "dpnp.random.seed": [[443, null]], "dpnp.random.shuffle": [[444, null]], "dpnp.random.standard_cauchy": [[445, null]], "dpnp.random.standard_exponential": [[446, null]], "dpnp.random.standard_gamma": [[447, null]], "dpnp.random.standard_normal": [[448, null]], "dpnp.random.standard_t": [[449, null]], "dpnp.random.triangular": [[450, null]], "dpnp.random.uniform": [[451, null]], "dpnp.random.vonmises": [[452, null]], "dpnp.random.wald": [[453, null]], "dpnp.random.weibull": [[454, null]], "dpnp.random.zipf": [[455, null]], "dpnp.ravel": [[456, null]], "dpnp.ravel_multi_index": [[457, null]], "dpnp.real": [[458, null]], "dpnp.real_if_close": [[459, null]], "dpnp.reciprocal": [[460, null]], "dpnp.reduce_hypot": [[461, null]], "dpnp.remainder": [[462, null]], "dpnp.repeat": [[463, null]], "dpnp.require": [[464, null]], "dpnp.reshape": [[465, null]], "dpnp.resize": [[466, null]], "dpnp.result_type": [[467, null]], "dpnp.right_shift": [[468, null]], "dpnp.rint": [[469, null]], "dpnp.roll": [[470, null]], "dpnp.rollaxis": [[471, null]], "dpnp.rot90": [[472, null]], "dpnp.round": [[473, null]], "dpnp.row_stack": [[474, null]], "dpnp.rsqrt": [[475, null]], "dpnp.searchsorted": [[476, null]], "dpnp.select": [[477, null]], "dpnp.shape": [[478, null]], "dpnp.sign": [[479, null]], "dpnp.signbit": [[480, null]], "dpnp.sin": [[481, null]], "dpnp.sinc": [[482, null]], "dpnp.sinh": [[483, null]], "dpnp.size": [[484, null]], "dpnp.sort": [[485, null]], "dpnp.sort_complex": [[486, null]], "dpnp.spacing": [[487, null]], "dpnp.split": [[488, null]], "dpnp.sqrt": [[489, null]], "dpnp.square": [[490, null]], "dpnp.squeeze": [[491, null]], "dpnp.stack": [[492, null]], "dpnp.std": [[493, null]], "dpnp.subtract": [[494, null]], "dpnp.sum": [[495, null]], "dpnp.swapaxes": [[496, null]], "dpnp.take": [[497, null]], "dpnp.take_along_axis": [[498, null]], "dpnp.tan": [[499, null]], "dpnp.tanh": [[500, null]], "dpnp.tensordot": [[501, null]], "dpnp.tile": [[502, null]], "dpnp.trace": [[503, null]], "dpnp.transpose": [[504, null]], "dpnp.trapezoid": [[505, null]], "dpnp.tri": [[506, null]], "dpnp.tril": [[507, null]], "dpnp.tril_indices": [[508, null]], "dpnp.tril_indices_from": [[509, null]], "dpnp.trim_zeros": [[510, null]], "dpnp.triu": [[511, null]], "dpnp.triu_indices": [[512, null]], "dpnp.triu_indices_from": [[513, null]], "dpnp.true_divide": [[514, null]], "dpnp.trunc": [[515, null]], "dpnp.unique": [[516, null]], "dpnp.unravel_index": [[517, null]], "dpnp.unstack": [[518, null]], "dpnp.unwrap": [[519, null]], "dpnp.vander": [[520, null]], "dpnp.var": [[521, null]], "dpnp.vdot": [[522, null]], "dpnp.vecdot": [[523, null]], "dpnp.vsplit": [[524, null]], "dpnp.vstack": [[525, null]], "dpnp.where": [[526, null]], "dpnp.zeros": [[527, null]], "dpnp.zeros_like": [[528, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[106, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[106, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[106, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[106, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[106, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[106, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[106, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[106, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[142, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[106, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[333, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[334, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[335, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[336, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[337, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[338, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[106, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[408, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[409, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[59, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[60, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[61, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[62, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[63, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[64, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[65, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[66, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[67, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[106, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[410, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[68, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[69, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[70, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[106, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[411, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[412, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[200, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[339, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[71, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[340, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[72, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[73, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[74, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[75, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[201, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[341, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[76, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[342, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[77, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[78, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[343, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[79, "dpnp.copy", false]], "copysign() (in module dpnp)": [[80, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[81, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[82, "dpnp.correlate", false]], "cos() (in module dpnp)": [[83, "dpnp.cos", false]], "cosh() (in module dpnp)": [[84, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[85, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[86, "dpnp.cov", false]], "cross() (in module dpnp)": [[87, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[202, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[88, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[344, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[89, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[345, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[90, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[91, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[92, "dpnp.degrees", false]], "delete() (in module dpnp)": [[93, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[106, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[203, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[94, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[95, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[96, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[97, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[346, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[98, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[204, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[99, "dpnp.diff", false]], "digitize() (in module dpnp)": [[100, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[413, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[101, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[102, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[103, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[104, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[105, "dpnp.dstack", false]], "dtype (class in dpnp)": [[106, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[347, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[107, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[205, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[206, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[207, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[208, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[108, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[109, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[110, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[111, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[112, "dpnp.equal", false]], "erf() (in module dpnp)": [[113, "dpnp.erf", false]], "exp() (in module dpnp)": [[114, "dpnp.exp", false]], "exp2() (in module dpnp)": [[115, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[116, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[117, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[414, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[118, "dpnp.extract", false]], "eye() (in module dpnp)": [[119, "dpnp.eye", false]], "f() (in module dpnp.random)": [[415, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[120, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[121, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[122, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[123, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[124, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[125, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[106, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[348, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[139, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[140, "dpnp.finfo", false]], "fix() (in module dpnp)": [[141, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[106, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[349, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[350, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[142, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[143, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[351, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[144, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[145, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[146, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[147, "dpnp.float_power", false]], "floor() (in module dpnp)": [[148, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[149, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[150, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[151, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[152, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[153, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[154, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[155, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[156, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[157, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[158, "dpnp.fromstring", false]], "full() (in module dpnp)": [[159, "dpnp.full", false]], "full_like() (in module dpnp)": [[160, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[416, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[161, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[417, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[162, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[163, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[164, "dpnp.gradient", false]], "greater() (in module dpnp)": [[165, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[166, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[418, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[106, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[167, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[126, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[168, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[169, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[170, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[171, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[419, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[172, "dpnp.hypot", false]], "identity() (in module dpnp)": [[173, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[127, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[128, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[129, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[130, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[131, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[174, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[352, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[175, "dpnp.imag", false]], "indices() (in module dpnp)": [[176, "dpnp.indices", false]], "inner() (in module dpnp)": [[177, "dpnp.inner", false]], "insert() (in module dpnp)": [[178, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[209, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[179, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[132, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[133, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[134, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[106, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[106, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[180, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[181, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[182, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[183, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[184, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[185, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[186, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[106, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[187, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[188, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[189, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[190, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[191, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[192, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[353, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[106, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[354, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[193, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[106, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[194, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[420, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[195, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[196, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[197, "dpnp.left_shift", false]], "less() (in module dpnp)": [[198, "dpnp.less", false]], "less_equal() (in module dpnp)": [[199, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[230, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[231, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[232, "dpnp.log", false]], "log10() (in module dpnp)": [[233, "dpnp.log10", false]], "log1p() (in module dpnp)": [[234, "dpnp.log1p", false]], "log2() (in module dpnp)": [[235, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[236, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[237, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[238, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[239, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[240, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[241, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[421, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[422, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[423, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[242, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[243, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[210, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[244, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[245, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[211, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[212, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[213, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[214, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[246, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[356, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[247, "dpnp.max", false]], "maximum() (in module dpnp)": [[248, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[357, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[249, "dpnp.mean", false]], "median() (in module dpnp)": [[250, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[251, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[106, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[252, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[358, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[253, "dpnp.min", false]], "minimum() (in module dpnp)": [[254, "dpnp.minimum", false]], "mod() (in module dpnp)": [[255, "dpnp.mod", false]], "modf() (in module dpnp)": [[256, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[257, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[355, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[215, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[424, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[258, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[425, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[106, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[106, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[259, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[260, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[261, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[262, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[263, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[264, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[265, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[266, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[267, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[268, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[269, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[270, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[359, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[271, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[106, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[360, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[383, "dpnp.ndim", false]], "negative() (in module dpnp)": [[384, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[426, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[106, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[385, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[427, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[428, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[361, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[386, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[216, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[429, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[387, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[106, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[388, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[389, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[390, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[391, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[217, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[392, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[430, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[362, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[393, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[431, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[394, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[218, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[395, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[432, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[396, "dpnp.positive", false]], "pow() (in module dpnp)": [[397, "dpnp.pow", false]], "power() (in module dpnp)": [[398, "dpnp.power", false]], "power() (in module dpnp.random)": [[433, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[363, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[399, "dpnp.prod", false]], "proj() (in module dpnp)": [[400, "dpnp.proj", false]], "ptp() (in module dpnp)": [[401, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[364, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[402, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[403, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[404, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[219, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[405, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[406, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[434, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[435, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[436, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[437, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[438, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[439, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[407, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[440, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[365, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[456, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[457, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[441, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[366, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[458, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[459, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[460, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[461, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[462, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[367, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[463, "dpnp.repeat", false]], "require() (in module dpnp)": [[464, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[368, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[465, "dpnp.reshape", false]], "resize() (in module dpnp)": [[466, "dpnp.resize", false]], "result_type() (in module dpnp)": [[467, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[135, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[136, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[137, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[138, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[468, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[469, "dpnp.rint", false]], "roll() (in module dpnp)": [[470, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[471, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[472, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[369, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[473, "dpnp.round", false]], "row_stack() (in module dpnp)": [[474, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[475, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[442, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[370, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[476, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[443, "dpnp.random.seed", false]], "select() (in module dpnp)": [[477, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[106, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[371, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[478, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[444, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[479, "dpnp.sign", false]], "signbit() (in module dpnp)": [[480, "dpnp.signbit", false]], "sin() (in module dpnp)": [[481, "dpnp.sin", false]], "sinc() (in module dpnp)": [[482, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[483, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[372, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[484, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[220, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[221, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[373, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[485, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[486, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[487, "dpnp.spacing", false]], "split() (in module dpnp)": [[488, "dpnp.split", false]], "sqrt() (in module dpnp)": [[489, "dpnp.sqrt", false]], "square() (in module dpnp)": [[490, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[374, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[491, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[492, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[445, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[446, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[447, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[448, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[449, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[375, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[493, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[106, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[376, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[106, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[494, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[377, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[495, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[222, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[223, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[378, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[496, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[272, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[379, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[497, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[498, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[499, "dpnp.tan", false]], "tanh() (in module dpnp)": [[500, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[501, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[224, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[225, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[226, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[502, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[380, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[503, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[227, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[381, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[504, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[505, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[506, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[450, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[507, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[508, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[509, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[510, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[511, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[512, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[513, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[514, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[515, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[106, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[407, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[451, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[516, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[517, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[518, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[519, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[103, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[520, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[103, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[382, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[521, "dpnp.var", false]], "vdot() (in module dpnp)": [[522, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[523, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[228, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[229, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[452, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[524, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[525, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[453, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[454, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[526, "dpnp.where", false]], "zeros() (in module dpnp)": [[527, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[528, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[455, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_invert"], [60, 1, 1, "", "bitwise_left_shift"], [61, 1, 1, "", "bitwise_not"], [62, 1, 1, "", "bitwise_or"], [63, 1, 1, "", "bitwise_right_shift"], [64, 1, 1, "", "bitwise_xor"], [65, 1, 1, "", "broadcast_arrays"], [66, 1, 1, "", "broadcast_shapes"], [67, 1, 1, "", "broadcast_to"], [68, 1, 1, "", "can_cast"], [69, 1, 1, "", "cbrt"], [70, 1, 1, "", "ceil"], [71, 1, 1, "", "choose"], [72, 1, 1, "", "clip"], [73, 1, 1, "", "column_stack"], [74, 1, 1, "", "concat"], [75, 1, 1, "", "concatenate"], [76, 1, 1, "", "conj"], [77, 1, 1, "", "conjugate"], [78, 1, 1, "", "convolve"], [79, 1, 1, "", "copy"], [80, 1, 1, "", "copysign"], [81, 1, 1, "", "copyto"], [82, 1, 1, "", "correlate"], [83, 1, 1, "", "cos"], [84, 1, 1, "", "cosh"], [85, 1, 1, "", "count_nonzero"], [86, 1, 1, "", "cov"], [87, 1, 1, "", "cross"], [88, 1, 1, "", "cumlogsumexp"], [89, 1, 1, "", "cumprod"], [90, 1, 1, "", "cumsum"], [91, 1, 1, "", "deg2rad"], [92, 1, 1, "", "degrees"], [93, 1, 1, "", "delete"], [94, 1, 1, "", "diag"], [95, 1, 1, "", "diag_indices"], [96, 1, 1, "", "diag_indices_from"], [97, 1, 1, "", "diagflat"], [98, 1, 1, "", "diagonal"], [99, 1, 1, "", "diff"], [100, 1, 1, "", "digitize"], [101, 1, 1, "", "divide"], [102, 1, 1, "", "dot"], [104, 1, 1, "", "dsplit"], [105, 1, 1, "", "dstack"], [106, 2, 1, "", "dtype"], [107, 1, 1, "", "ediff1d"], [108, 1, 1, "", "einsum"], [109, 1, 1, "", "einsum_path"], [110, 1, 1, "", "empty"], [111, 1, 1, "", "empty_like"], [112, 1, 1, "", "equal"], [113, 1, 1, "", "erf"], [114, 1, 1, "", "exp"], [115, 1, 1, "", "exp2"], [116, 1, 1, "", "expand_dims"], [117, 1, 1, "", "expm1"], [118, 1, 1, "", "extract"], [119, 1, 1, "", "eye"], [120, 1, 1, "", "fabs"], [139, 1, 1, "", "fill_diagonal"], [140, 1, 1, "", "finfo"], [141, 1, 1, "", "fix"], [142, 2, 1, "", "flatiter"], [143, 1, 1, "", "flatnonzero"], [144, 1, 1, "", "flip"], [145, 1, 1, "", "fliplr"], [146, 1, 1, "", "flipud"], [147, 1, 1, "", "float_power"], [148, 1, 1, "", "floor"], [149, 1, 1, "", "floor_divide"], [150, 1, 1, "", "fmax"], [151, 1, 1, "", "fmin"], [152, 1, 1, "", "fmod"], [153, 1, 1, "", "from_dlpack"], [154, 1, 1, "", "frombuffer"], [155, 1, 1, "", "fromfile"], [156, 1, 1, "", "fromfunction"], [157, 1, 1, "", "fromiter"], [158, 1, 1, "", "fromstring"], [159, 1, 1, "", "full"], [160, 1, 1, "", "full_like"], [161, 1, 1, "", "gcd"], [162, 1, 1, "", "geomspace"], [163, 1, 1, "", "get_include"], [164, 1, 1, "", "gradient"], [165, 1, 1, "", "greater"], [166, 1, 1, "", "greater_equal"], [167, 1, 1, "", "heaviside"], [168, 1, 1, "", "histogram"], [169, 1, 1, "", "histogram_bin_edges"], [170, 1, 1, "", "hsplit"], [171, 1, 1, "", "hstack"], [172, 1, 1, "", "hypot"], [173, 1, 1, "", "identity"], [174, 1, 1, "", "iinfo"], [175, 1, 1, "", "imag"], [176, 1, 1, "", "indices"], [177, 1, 1, "", "inner"], [178, 1, 1, "", "insert"], [179, 1, 1, "", "invert"], [180, 1, 1, "", "isclose"], [181, 1, 1, "", "iscomplex"], [182, 1, 1, "", "iscomplexobj"], [183, 1, 1, "", "isfinite"], [184, 1, 1, "", "isfortran"], [185, 1, 1, "", "isinf"], [186, 1, 1, "", "isnan"], [187, 1, 1, "", "isneginf"], [188, 1, 1, "", "isposinf"], [189, 1, 1, "", "isreal"], [190, 1, 1, "", "isrealobj"], [191, 1, 1, "", "isscalar"], [192, 1, 1, "", "issubdtype"], [193, 1, 1, "", "ix_"], [194, 1, 1, "", "kron"], [195, 1, 1, "", "lcm"], [196, 1, 1, "", "ldexp"], [197, 1, 1, "", "left_shift"], [198, 1, 1, "", "less"], [199, 1, 1, "", "less_equal"], [230, 1, 1, "", "linspace"], [231, 1, 1, "", "loadtxt"], [232, 1, 1, "", "log"], [233, 1, 1, "", "log10"], [234, 1, 1, "", "log1p"], [235, 1, 1, "", "log2"], [236, 1, 1, "", "logaddexp"], [237, 1, 1, "", "logaddexp2"], [238, 1, 1, "", "logical_and"], [239, 1, 1, "", "logical_not"], [240, 1, 1, "", "logical_or"], [241, 1, 1, "", "logical_xor"], [242, 1, 1, "", "logspace"], [243, 1, 1, "", "logsumexp"], [244, 1, 1, "", "mask_indices"], [245, 1, 1, "", "matmul"], [246, 1, 1, "", "matrix_transpose"], [247, 1, 1, "", "max"], [248, 1, 1, "", "maximum"], [249, 1, 1, "", "mean"], [250, 1, 1, "", "median"], [251, 1, 1, "", "meshgrid"], [252, 5, 1, "", "mgrid"], [253, 1, 1, "", "min"], [254, 1, 1, "", "minimum"], [255, 1, 1, "", "mod"], [256, 1, 1, "", "modf"], [257, 1, 1, "", "moveaxis"], [258, 1, 1, "", "multiply"], [259, 1, 1, "", "nan_to_num"], [260, 1, 1, "", "nanargmax"], [261, 1, 1, "", "nanargmin"], [262, 1, 1, "", "nancumprod"], [263, 1, 1, "", "nancumsum"], [264, 1, 1, "", "nanmax"], [265, 1, 1, "", "nanmean"], [266, 1, 1, "", "nanmin"], [267, 1, 1, "", "nanprod"], [268, 1, 1, "", "nanstd"], [269, 1, 1, "", "nansum"], [270, 1, 1, "", "nanvar"], [271, 3, 1, "", "ndarray"], [383, 1, 1, "", "ndim"], [384, 1, 1, "", "negative"], [385, 1, 1, "", "nextafter"], [386, 1, 1, "", "nonzero"], [387, 1, 1, "", "not_equal"], [388, 5, 1, "", "ogrid"], [389, 1, 1, "", "ones"], [390, 1, 1, "", "ones_like"], [391, 1, 1, "", "outer"], [392, 1, 1, "", "pad"], [393, 1, 1, "", "partition"], [394, 1, 1, "", "permute_dims"], [395, 1, 1, "", "place"], [396, 1, 1, "", "positive"], [397, 1, 1, "", "pow"], [398, 1, 1, "", "power"], [399, 1, 1, "", "prod"], [400, 1, 1, "", "proj"], [401, 1, 1, "", "ptp"], [402, 1, 1, "", "put"], [403, 1, 1, "", "put_along_axis"], [404, 1, 1, "", "putmask"], [405, 1, 1, "", "rad2deg"], [406, 1, 1, "", "radians"], [456, 1, 1, "", "ravel"], [457, 1, 1, "", "ravel_multi_index"], [458, 1, 1, "", "real"], [459, 1, 1, "", "real_if_close"], [460, 1, 1, "", "reciprocal"], [461, 1, 1, "", "reduce_hypot"], [462, 1, 1, "", "remainder"], [463, 1, 1, "", "repeat"], [464, 1, 1, "", "require"], [465, 1, 1, "", "reshape"], [466, 1, 1, "", "resize"], [467, 1, 1, "", "result_type"], [468, 1, 1, "", "right_shift"], [469, 1, 1, "", "rint"], [470, 1, 1, "", "roll"], [471, 1, 1, "", "rollaxis"], [472, 1, 1, "", "rot90"], [473, 1, 1, "", "round"], [474, 1, 1, "", "row_stack"], [475, 1, 1, "", "rsqrt"], [476, 1, 1, "", "searchsorted"], [477, 1, 1, "", "select"], [478, 1, 1, "", "shape"], [479, 1, 1, "", "sign"], [480, 1, 1, "", "signbit"], [481, 1, 1, "", "sin"], [482, 1, 1, "", "sinc"], [483, 1, 1, "", "sinh"], [484, 1, 1, "", "size"], [485, 1, 1, "", "sort"], [486, 1, 1, "", "sort_complex"], [487, 1, 1, "", "spacing"], [488, 1, 1, "", "split"], [489, 1, 1, "", "sqrt"], [490, 1, 1, "", "square"], [491, 1, 1, "", "squeeze"], [492, 1, 1, "", "stack"], [493, 1, 1, "", "std"], [494, 1, 1, "", "subtract"], [495, 1, 1, "", "sum"], [496, 1, 1, "", "swapaxes"], [497, 1, 1, "", "take"], [498, 1, 1, "", "take_along_axis"], [499, 1, 1, "", "tan"], [500, 1, 1, "", "tanh"], [501, 1, 1, "", "tensordot"], [502, 1, 1, "", "tile"], [503, 1, 1, "", "trace"], [504, 1, 1, "", "transpose"], [505, 1, 1, "", "trapezoid"], [506, 1, 1, "", "tri"], [507, 1, 1, "", "tril"], [508, 1, 1, "", "tril_indices"], [509, 1, 1, "", "tril_indices_from"], [510, 1, 1, "", "trim_zeros"], [511, 1, 1, "", "triu"], [512, 1, 1, "", "triu_indices"], [513, 1, 1, "", "triu_indices_from"], [514, 1, 1, "", "true_divide"], [515, 1, 1, "", "trunc"], [516, 1, 1, "", "unique"], [517, 1, 1, "", "unravel_index"], [518, 1, 1, "", "unstack"], [519, 1, 1, "", "unwrap"], [520, 1, 1, "", "vander"], [521, 1, 1, "", "var"], [522, 1, 1, "", "vdot"], [523, 1, 1, "", "vecdot"], [524, 1, 1, "", "vsplit"], [525, 1, 1, "", "vstack"], [526, 1, 1, "", "where"], [527, 1, 1, "", "zeros"], [528, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[103, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[103, 3, 1, "", "T"], [103, 4, 1, "", "__eq__"], [103, 4, 1, "", "__ge__"], [103, 4, 1, "", "__getitem__"], [103, 4, 1, "", "__gt__"], [103, 4, 1, "", "__le__"], [103, 4, 1, "", "__len__"], [103, 4, 1, "", "__lt__"], [103, 4, 1, "", "__ne__"], [103, 4, 1, "", "__setitem__"], [103, 4, 1, "", "all"], [103, 4, 1, "", "any"], [103, 4, 1, "", "argmax"], [103, 4, 1, "", "argmin"], [103, 4, 1, "", "argsort"], [103, 4, 1, "", "asnumpy"], [103, 4, 1, "", "astype"], [103, 4, 1, "", "choose"], [103, 4, 1, "", "clip"], [103, 4, 1, "", "conj"], [103, 4, 1, "", "conjugate"], [103, 4, 1, "", "copy"], [103, 4, 1, "", "cumprod"], [103, 4, 1, "", "cumsum"], [103, 3, 1, "", "device"], [103, 4, 1, "", "diagonal"], [103, 4, 1, "", "dot"], [103, 3, 1, "", "dtype"], [103, 4, 1, "", "fill"], [103, 3, 1, "", "flags"], [103, 3, 1, "", "flat"], [103, 4, 1, "", "flatten"], [103, 4, 1, "", "get_array"], [103, 3, 1, "", "imag"], [103, 4, 1, "", "item"], [103, 3, 1, "", "itemsize"], [103, 3, 1, "", "mT"], [103, 4, 1, "", "max"], [103, 4, 1, "", "mean"], [103, 4, 1, "", "min"], [103, 3, 1, "", "nbytes"], [103, 3, 1, "", "ndim"], [103, 4, 1, "", "nonzero"], [103, 4, 1, "", "partition"], [103, 4, 1, "", "prod"], [103, 4, 1, "", "put"], [103, 4, 1, "", "ravel"], [103, 3, 1, "", "real"], [103, 4, 1, "", "repeat"], [103, 4, 1, "", "reshape"], [103, 4, 1, "", "round"], [103, 4, 1, "", "searchsorted"], [103, 3, 1, "", "shape"], [103, 3, 1, "", "size"], [103, 4, 1, "", "sort"], [103, 4, 1, "", "squeeze"], [103, 4, 1, "", "std"], [103, 3, 1, "", "strides"], [103, 4, 1, "", "sum"], [103, 4, 1, "", "swapaxes"], [103, 3, 1, "", "sycl_context"], [103, 3, 1, "", "sycl_device"], [103, 3, 1, "", "sycl_queue"], [103, 4, 1, "", "take"], [103, 4, 1, "", "to_device"], [103, 4, 1, "", "trace"], [103, 4, 1, "", "transpose"], [103, 3, 1, "", "usm_type"], [103, 4, 1, "", "var"]], "dpnp.dtype": [[106, 4, 1, "", "__eq__"], [106, 4, 1, "", "__ge__"], [106, 4, 1, "", "__getitem__"], [106, 4, 1, "", "__gt__"], [106, 4, 1, "", "__le__"], [106, 4, 1, "", "__len__"], [106, 4, 1, "", "__lt__"], [106, 4, 1, "", "__ne__"], [106, 3, 1, "", "alignment"], [106, 3, 1, "", "base"], [106, 3, 1, "", "byteorder"], [106, 3, 1, "", "char"], [106, 3, 1, "", "descr"], [106, 3, 1, "", "fields"], [106, 3, 1, "", "flags"], [106, 3, 1, "", "hasobject"], [106, 3, 1, "", "isalignedstruct"], [106, 3, 1, "", "isbuiltin"], [106, 3, 1, "", "isnative"], [106, 3, 1, "", "itemsize"], [106, 3, 1, "", "kind"], [106, 3, 1, "", "metadata"], [106, 3, 1, "", "name"], [106, 3, 1, "", "names"], [106, 3, 1, "", "ndim"], [106, 4, 1, "", "newbyteorder"], [106, 3, 1, "", "num"], [106, 3, 1, "", "shape"], [106, 3, 1, "", "str"], [106, 3, 1, "", "subdtype"], [106, 3, 1, "", "type"]], "dpnp.fft": [[121, 1, 1, "", "fft"], [122, 1, 1, "", "fft2"], [123, 1, 1, "", "fftfreq"], [124, 1, 1, "", "fftn"], [125, 1, 1, "", "fftshift"], [126, 1, 1, "", "hfft"], [127, 1, 1, "", "ifft"], [128, 1, 1, "", "ifft2"], [129, 1, 1, "", "ifftn"], [130, 1, 1, "", "ifftshift"], [131, 1, 1, "", "ihfft"], [132, 1, 1, "", "irfft"], [133, 1, 1, "", "irfft2"], [134, 1, 1, "", "irfftn"], [135, 1, 1, "", "rfft"], [136, 1, 1, "", "rfft2"], [137, 1, 1, "", "rfftfreq"], [138, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[142, 4, 1, "", "__eq__"], [142, 4, 1, "", "__ge__"], [142, 4, 1, "", "__getitem__"], [142, 4, 1, "", "__gt__"], [142, 4, 1, "", "__iter__"], [142, 4, 1, "", "__le__"], [142, 4, 1, "", "__lt__"], [142, 4, 1, "", "__ne__"], [142, 4, 1, "", "__next__"], [142, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[200, 1, 1, "", "cholesky"], [201, 1, 1, "", "cond"], [202, 1, 1, "", "cross"], [203, 1, 1, "", "det"], [204, 1, 1, "", "diagonal"], [205, 1, 1, "", "eig"], [206, 1, 1, "", "eigh"], [207, 1, 1, "", "eigvals"], [208, 1, 1, "", "eigvalsh"], [209, 1, 1, "", "inv"], [210, 1, 1, "", "lstsq"], [211, 1, 1, "", "matmul"], [212, 1, 1, "", "matrix_norm"], [213, 1, 1, "", "matrix_power"], [214, 1, 1, "", "matrix_rank"], [215, 1, 1, "", "multi_dot"], [216, 1, 1, "", "norm"], [217, 1, 1, "", "outer"], [218, 1, 1, "", "pinv"], [219, 1, 1, "", "qr"], [220, 1, 1, "", "slogdet"], [221, 1, 1, "", "solve"], [222, 1, 1, "", "svd"], [223, 1, 1, "", "svdvals"], [224, 1, 1, "", "tensordot"], [225, 1, 1, "", "tensorinv"], [226, 1, 1, "", "tensorsolve"], [227, 1, 1, "", "trace"], [228, 1, 1, "", "vecdot"], [229, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[272, 6, 1, "", "T"], [273, 4, 1, "", "__abs__"], [274, 4, 1, "", "__add__"], [275, 4, 1, "", "__and__"], [276, 4, 1, "", "__bool__"], [277, 4, 1, "", "__complex__"], [278, 4, 1, "", "__copy__"], [279, 4, 1, "", "__eq__"], [280, 4, 1, "", "__float__"], [281, 4, 1, "", "__floordiv__"], [282, 4, 1, "", "__ge__"], [283, 4, 1, "", "__getitem__"], [284, 4, 1, "", "__gt__"], [285, 4, 1, "", "__iadd__"], [286, 4, 1, "", "__iand__"], [287, 4, 1, "", "__ifloordiv__"], [288, 4, 1, "", "__ilshift__"], [289, 4, 1, "", "__imatmul__"], [290, 4, 1, "", "__imod__"], [291, 4, 1, "", "__imul__"], [292, 4, 1, "", "__int__"], [293, 4, 1, "", "__invert__"], [294, 4, 1, "", "__ior__"], [295, 4, 1, "", "__ipow__"], [296, 4, 1, "", "__irshift__"], [297, 4, 1, "", "__isub__"], [298, 4, 1, "", "__itruediv__"], [299, 4, 1, "", "__ixor__"], [300, 4, 1, "", "__le__"], [301, 4, 1, "", "__len__"], [302, 4, 1, "", "__lshift__"], [303, 4, 1, "", "__lt__"], [304, 4, 1, "", "__matmul__"], [305, 4, 1, "", "__mod__"], [306, 4, 1, "", "__mul__"], [307, 4, 1, "", "__ne__"], [308, 4, 1, "", "__neg__"], [309, 4, 1, "", "__new__"], [310, 4, 1, "", "__or__"], [311, 4, 1, "", "__pos__"], [312, 4, 1, "", "__pow__"], [313, 4, 1, "", "__radd__"], [314, 4, 1, "", "__rand__"], [315, 4, 1, "", "__repr__"], [316, 4, 1, "", "__rfloordiv__"], [317, 4, 1, "", "__rlshift__"], [318, 4, 1, "", "__rmatmul__"], [319, 4, 1, "", "__rmod__"], [320, 4, 1, "", "__rmul__"], [321, 4, 1, "", "__ror__"], [322, 4, 1, "", "__rpow__"], [323, 4, 1, "", "__rrshift__"], [324, 4, 1, "", "__rshift__"], [325, 4, 1, "", "__rsub__"], [326, 4, 1, "", "__rtruediv__"], [327, 4, 1, "", "__rxor__"], [328, 4, 1, "", "__setitem__"], [329, 4, 1, "", "__str__"], [330, 4, 1, "", "__sub__"], [331, 4, 1, "", "__truediv__"], [332, 4, 1, "", "__xor__"], [333, 4, 1, "", "all"], [334, 4, 1, "", "any"], [335, 4, 1, "", "argmax"], [336, 4, 1, "", "argmin"], [337, 4, 1, "", "argsort"], [338, 4, 1, "", "astype"], [339, 4, 1, "", "choose"], [340, 4, 1, "", "clip"], [341, 4, 1, "", "conj"], [342, 4, 1, "", "conjugate"], [343, 4, 1, "", "copy"], [344, 4, 1, "", "cumprod"], [345, 4, 1, "", "cumsum"], [346, 4, 1, "", "diagonal"], [347, 6, 1, "", "dtype"], [348, 4, 1, "", "fill"], [349, 6, 1, "", "flags"], [350, 6, 1, "", "flat"], [351, 4, 1, "", "flatten"], [352, 6, 1, "", "imag"], [353, 4, 1, "", "item"], [354, 6, 1, "", "itemsize"], [355, 6, 1, "", "mT"], [356, 4, 1, "", "max"], [357, 4, 1, "", "mean"], [358, 4, 1, "", "min"], [359, 6, 1, "", "nbytes"], [360, 6, 1, "", "ndim"], [361, 4, 1, "", "nonzero"], [362, 4, 1, "", "partition"], [363, 4, 1, "", "prod"], [364, 4, 1, "", "put"], [365, 4, 1, "", "ravel"], [366, 6, 1, "", "real"], [367, 4, 1, "", "repeat"], [368, 4, 1, "", "reshape"], [369, 4, 1, "", "round"], [370, 4, 1, "", "searchsorted"], [371, 6, 1, "", "shape"], [372, 6, 1, "", "size"], [373, 4, 1, "", "sort"], [374, 4, 1, "", "squeeze"], [375, 4, 1, "", "std"], [376, 6, 1, "", "strides"], [377, 4, 1, "", "sum"], [378, 4, 1, "", "swapaxes"], [379, 4, 1, "", "take"], [380, 4, 1, "", "trace"], [381, 4, 1, "", "transpose"], [382, 4, 1, "", "var"]], "dpnp.random": [[407, 2, 1, "", "RandomState"], [408, 1, 1, "", "beta"], [409, 1, 1, "", "binomial"], [410, 1, 1, "", "bytes"], [411, 1, 1, "", "chisquare"], [412, 1, 1, "", "choice"], [413, 1, 1, "", "dirichlet"], [414, 1, 1, "", "exponential"], [415, 1, 1, "", "f"], [416, 1, 1, "", "gamma"], [417, 1, 1, "", "geometric"], [418, 1, 1, "", "gumbel"], [419, 1, 1, "", "hypergeometric"], [420, 1, 1, "", "laplace"], [421, 1, 1, "", "logistic"], [422, 1, 1, "", "lognormal"], [423, 1, 1, "", "logseries"], [424, 1, 1, "", "multinomial"], [425, 1, 1, "", "multivariate_normal"], [426, 1, 1, "", "negative_binomial"], [427, 1, 1, "", "noncentral_chisquare"], [428, 1, 1, "", "noncentral_f"], [429, 1, 1, "", "normal"], [430, 1, 1, "", "pareto"], [431, 1, 1, "", "permutation"], [432, 1, 1, "", "poisson"], [433, 1, 1, "", "power"], [434, 1, 1, "", "rand"], [435, 1, 1, "", "randint"], [436, 1, 1, "", "randn"], [437, 1, 1, "", "random"], [438, 1, 1, "", "random_integers"], [439, 1, 1, "", "random_sample"], [440, 1, 1, "", "ranf"], [441, 1, 1, "", "rayleigh"], [442, 1, 1, "", "sample"], [443, 1, 1, "", "seed"], [444, 1, 1, "", "shuffle"], [445, 1, 1, "", "standard_cauchy"], [446, 1, 1, "", "standard_exponential"], [447, 1, 1, "", "standard_gamma"], [448, 1, 1, "", "standard_normal"], [449, 1, 1, "", "standard_t"], [450, 1, 1, "", "triangular"], [451, 1, 1, "", "uniform"], [452, 1, 1, "", "vonmises"], [453, 1, 1, "", "wald"], [454, 1, 1, "", "weibull"], [455, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[407, 4, 1, "", "__eq__"], [407, 4, 1, "", "__ge__"], [407, 4, 1, "", "__gt__"], [407, 4, 1, "", "__le__"], [407, 4, 1, "", "__lt__"], [407, 4, 1, "", "__ne__"], [407, 4, 1, "", "get_state"], [407, 4, 1, "", "get_sycl_device"], [407, 4, 1, "", "get_sycl_queue"], [407, 4, 1, "", "normal"], [407, 4, 1, "", "rand"], [407, 4, 1, "", "randint"], [407, 4, 1, "", "randn"], [407, 4, 1, "", "random_sample"], [407, 4, 1, "", "standard_normal"], [407, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 87, 90, 103, 106, 107, 122, 124, 126, 128, 129, 131, 133, 134, 136, 138, 139, 154, 155, 210, 214, 216, 218, 222, 223, 224, 347, 381, 407, 408, 409, 414, 415, 416, 418, 419, 420, 421, 422, 424, 426, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 465, 501, 502, 536], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 164, 167, 168, 169, 170, 173, 176, 177, 178, 180, 183, 185, 186, 187, 188, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 343, 346, 348, 352, 353, 355, 366, 369, 371, 373, 375, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 429, 431, 432, 433, 434, 437, 439, 440, 441, 442, 445, 448, 450, 451, 452, 457, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 526, 527, 528, 536], "00": [83, 109, 121, 481], "000": [259, 409], "00000000005e": 117, "00000000e": [121, 259], "000000082740371e": 117, "000000e": [83, 481], "00001e10": [17, 180], "0001e10": 180, "000e": 109, "000j": 259, "002": 259, "00867716": 411, "01": 109, "02": [109, 259], "03": 259, "03088525e": 110, "0396842": 242, "04": 109, "04719755": 406, "04921661": 407, "04923628": 482, "05": [17, 109, 180], "05846808": 482, "0614962j": [122, 136], "06310682": 407, "06682066": 482, "07": 259, "07944154": [88, 220], "08": [17, 83, 109, 147, 180, 425, 481], "08156915": 407, "08409186": 482, "08504448": 482, "08903844": 482, "0943951": 406, "09640474": 237, "09861229": [88, 220, 234], "0d": 34, "0dev1": 6, "0j": [20, 102, 103, 181, 182, 189, 190, 211, 245, 352, 366, 479], "0th": [224, 501], "1": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 180, 181, 182, 184, 189, 190, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 337, 338, 343, 346, 348, 351, 352, 353, 355, 360, 362, 366, 371, 373, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 411, 412, 414, 416, 418, 420, 421, 422, 424, 425, 426, 429, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 446, 448, 451, 456, 457, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 60, 63, 72, 79, 88, 89, 90, 93, 95, 96, 99, 100, 103, 104, 106, 108, 109, 117, 118, 125, 137, 159, 162, 168, 169, 170, 175, 180, 193, 194, 196, 197, 227, 228, 232, 233, 234, 235, 242, 243, 250, 258, 368, 392, 401, 403, 407, 409, 419, 431, 461, 467, 468, 470, 473, 476, 488, 492, 498, 507, 508, 509, 511, 512, 513, 518, 523, 524, 526], "100": [95, 137, 162, 180, 194, 215, 242, 392, 419, 445, 459, 519], "1000": [68, 162, 215, 242, 408, 409, 414, 416, 418, 419, 420, 421, 422, 429, 430, 433, 435, 437, 440, 442, 448, 452, 453, 454, 455, 459, 505], "10000": [90, 215, 417, 432, 441, 451], "100000": 426, "1000000": [445, 447, 449, 450], "1024": 0, "10394325": 482, "105": 109, "11": [31, 32, 56, 84, 93, 95, 96, 103, 104, 118, 164, 170, 216, 227, 368, 426, 435, 473, 476, 483, 507, 508, 509, 511, 512, 513, 518, 524, 526], "110": [108, 177], "111111": 259, "113": 236, "11570901": 407, "11643488": 482, "1179187": 407, "118033988749895": 493, "119": 108, "1196081": 407, "12": [10, 31, 32, 55, 87, 92, 93, 95, 96, 100, 104, 106, 108, 118, 122, 136, 161, 170, 175, 195, 223, 242, 399, 401, 406, 431, 457, 476, 507, 508, 509, 511, 512, 513, 518, 524, 526], "120": [89, 92], "123": [103, 109, 353], "125": [147, 397, 398, 520], "12613779": 482, "127": 162, "128": [0, 162, 259], "12th": 108, "13": [10, 31, 32, 59, 61, 95, 96, 102, 104, 106, 108, 170, 178, 179, 211, 245, 457, 476, 508, 509, 512, 513, 517, 518, 524], "130": 108, "134": 177, "13436424": 407, "135": [29, 51], "13710533": 411, "139884456208480": 16, "13j": 459, "14": [6, 31, 32, 58, 59, 61, 95, 96, 102, 104, 141, 170, 177, 179, 224, 476, 501, 508, 509, 512, 513, 518, 524], "140": 519, "140053638309840": 21, "14157194": 505, "14159265": [13, 24, 29, 51, 91, 406], "14423775e": 121, "14j": 459, "15": [31, 32, 90, 95, 96, 100, 104, 108, 126, 131, 170, 216, 233, 431, 476, 508, 509, 512, 513, 518, 524], "150": 92, "15591488": 482, "15888336": 242, "15j": 459, "16": [6, 58, 95, 96, 104, 106, 121, 147, 157, 162, 164, 170, 229, 258, 397, 398, 459, 477, 499, 508, 509, 512, 513, 518, 524], "1621": [457, 517], "16227766": [201, 461], "16394577": 407, "164": 237, "166": 237, "16j": 121, "17": [6, 121, 122, 136, 518], "17157288": [206, 208], "17281316e": 121, "177": [162, 242], "17j": 121, "18": [6, 89, 106, 107, 108, 124, 202, 212, 216, 242, 518], "180": [29, 51, 91, 92, 108, 405, 519, 543], "1805": 10, "18236388": 407, "18557831": 407, "1887902": 406, "18920668": 482, "19": [10, 85, 106, 457, 518, 519], "1923875335537315": 436, "19245009": 475, "1924881e": 147, "1965": 10, "19722458": 88, "1985": 216, "1d": [107, 402, 403, 498, 505], "1e": [17, 117, 180, 205, 233, 234, 236, 237, 425], "1e10": [17, 180], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 76, 77, 103, 132, 175, 181, 189, 205, 217, 222, 352, 366, 391, 458, 486, 490], "1th": [224, 501], "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 181, 184, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 338, 343, 346, 348, 351, 353, 355, 360, 362, 371, 372, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 405, 406, 407, 411, 415, 419, 425, 431, 434, 436, 447, 449, 450, 453, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 483, 484, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528], "20": [60, 89, 100, 108, 137, 161, 176, 180, 194, 195, 196, 197, 216, 403, 409, 424, 476, 498, 518, 519], "20000": 409, "2007": 10, "200e": 109, "20477401j": [122, 136], "2048": 0, "21": [90, 106, 518], "210": 92, "215": 242, "21623621": 482, "21941987": 407, "21968665": 407, "22": [402, 457, 517, 518], "220": 519, "220446049250313e": 459, "222222": 259, "22460635e": 499, "22464680e": 121, "22497216": 216, "22776602": 242, "23": [407, 457, 518], "230": 108, "23387232": 482, "23598776": 406, "23606798": 216, "24": [31, 32, 87, 89, 103, 107, 108, 177, 194, 202, 224, 225, 227, 371, 399, 501, 503, 518], "240": 92, "24264069": 216, "24544512": 407, "247219128924647": 268, "25": [106, 108, 113, 123, 164, 168, 169, 209, 230, 258, 270, 436, 445, 477, 520, 521], "255": [58, 62], "25506903": 407, "256": [0, 162], "26": [64, 108], "260": 519, "26618007j": 235, "27": [69, 147, 242, 397, 398, 475, 520], "270": 92, "28": 108, "28000000e": 259, "2800000e": 259, "283185307179586": 519, "28318531": 519, "28352814": 407, "28904982": 237, "294": 6, "297": 10, "2d": [222, 245, 472, 516], "2e": 90, "2f": 0, "2j": [76, 77, 102, 121, 175, 181, 189, 206, 208, 211, 245, 458, 479, 486, 522], "2k": 519, "3": [0, 3, 4, 6, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 133, 134, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 162, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 182, 184, 189, 190, 191, 193, 194, 197, 201, 202, 203, 204, 205, 209, 210, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 343, 346, 351, 353, 355, 360, 362, 371, 372, 373, 381, 383, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 406, 407, 411, 415, 422, 425, 431, 434, 435, 436, 446, 450, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 480, 484, 485, 486, 488, 489, 491, 492, 493, 494, 496, 497, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "30": [87, 92, 103, 108, 137, 372, 403, 406, 498, 522], "300": [92, 519], "3003003": 460, "301": 10, "30102999566": 233, "3012989": 483, "30258509": [88, 243], "308": 259, "308j": 259, "31": [6, 64, 162, 457, 517], "312": 110, "316": 242, "32": [106, 108, 162, 224, 267, 269, 501], "33": 460, "330": [6, 92], "333": 215, "33333333": 259, "3333333e": 259, "33340275": 505, "33486982e": 121, "33836967": 407, "340": 519, "34074171": 407, "34132519": 242, "34846923": [212, 216], "34960421": 242, "35": [108, 417], "35106603e": [212, 216], "35348576": 229, "35355338": 475, "36": 87, "360": 519, "37": [457, 473, 517], "371139e": 83, "38": [177, 409], "380": 519, "38268343": 206, "38268343j": 206, "38629436": 88, "38885": 409, "389": 6, "389056099": [114, 117], "39295758": 407, "3e": [0, 90, 459], "3j": [102, 211, 245, 486], "3rd": [74, 75, 104, 488], "3x3": 244, "3x8000": 446, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 62, 65, 72, 73, 74, 75, 78, 81, 83, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 143, 144, 147, 149, 150, 151, 155, 156, 157, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 184, 189, 193, 194, 196, 199, 202, 203, 204, 209, 211, 212, 213, 214, 216, 220, 223, 224, 225, 226, 227, 229, 230, 235, 238, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 260, 261, 263, 265, 268, 270, 343, 346, 351, 355, 360, 362, 371, 373, 381, 383, 386, 388, 390, 392, 394, 397, 398, 399, 401, 402, 406, 407, 408, 411, 431, 436, 452, 456, 457, 458, 459, 462, 463, 465, 466, 470, 471, 472, 473, 474, 477, 479, 482, 484, 485, 488, 489, 492, 493, 494, 496, 497, 501, 502, 504, 505, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 528], "40": [6, 60, 108, 137, 196, 197, 403, 498], "40882036": 407, "4096": 0, "41": [457, 482, 517], "41421356": [201, 216], "42": 477, "420": 519, "431": 6, "44": [395, 402], "4400": [108, 224, 501], "443469": 242, "44509285e": 121, "45": [20, 29, 51, 229], "4532": [108, 224, 501], "46": 108, "460": [6, 519], "46394577": 407, "464": 242, "4664": [108, 224, 501], "47": 6, "4730": [108, 224, 501], "4796": [108, 224, 501], "48": [6, 87], "48093112": 407, "4874": [108, 224, 501], "48927254": 407, "49": 6, "4928": [108, 224, 501], "49543509": 407, "49778714": 519, "499128": 102, "4d": 222, "4e": 459, "4j": [175, 458, 522], "4x4": [508, 512], "5": [0, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 66, 70, 72, 74, 75, 78, 81, 82, 85, 87, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 113, 118, 122, 123, 125, 133, 136, 137, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 161, 162, 164, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 184, 189, 193, 194, 196, 197, 200, 202, 204, 206, 208, 209, 215, 216, 217, 221, 224, 227, 228, 229, 230, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 265, 268, 338, 343, 353, 355, 372, 383, 386, 388, 389, 390, 391, 392, 394, 397, 398, 401, 402, 406, 407, 408, 409, 411, 414, 426, 430, 431, 432, 433, 436, 439, 454, 456, 457, 458, 459, 460, 462, 465, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 484, 486, 488, 492, 493, 495, 496, 497, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528], "50": [122, 136, 137, 162, 194, 224, 236, 237, 242, 403, 498, 501, 505, 526], "500": [194, 519], "5018": [108, 224, 501], "50455115": 482, "5091786": 84, "512": 0, "5162": [108, 224, 501], "52069395e": 121, "52359878": 406, "52928804": 407, "53": 6, "5306": [108, 224, 501], "5399045e": 147, "54": [6, 407], "540": 519, "54288406": 407, "54465213": 407, "545": 6, "548739": 483, "54930614": [30, 52], "55": [395, 402, 477], "5555555555555554": 270, "562": 242, "5620499351813308": [11, 12], "56920387": 407, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 406, 519], "58997253": 407, "591953": 84, "5e": [236, 237], "5j": [252, 388, 486], "6": [0, 4, 15, 22, 23, 31, 32, 34, 39, 53, 56, 62, 64, 66, 72, 74, 75, 81, 87, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 117, 118, 123, 126, 137, 144, 147, 160, 161, 164, 170, 171, 175, 176, 177, 178, 184, 193, 194, 195, 202, 204, 212, 216, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 242, 244, 246, 250, 262, 263, 267, 343, 353, 355, 371, 383, 386, 390, 392, 395, 397, 398, 401, 407, 424, 426, 431, 436, 456, 457, 458, 464, 465, 470, 471, 472, 473, 474, 477, 484, 486, 488, 492, 494, 495, 496, 497, 501, 503, 505, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 522, 523, 524, 525, 526, 528], "60": [87, 92, 108, 195, 224, 403, 498, 501, 519, 526], "600": 194, "60943791": 88, "61799388": 406, "62": 177, "6227766": 162, "62318272": 411, "62341325": 162, "624": 109, "63": 162, "63317787e": 499, "63522211": 407, "63836967": 407, "64": [0, 4, 108, 147, 162, 267, 269, 397, 398, 473], "64000": 108, "65745445": [14, 25], "66519143": 406, "6666666666666665": 265, "67": 108, "67305985": 154, "673174": 407, "67718303": 407, "69295758": 407, "69314718": [88, 220, 234], "6990877": 407, "6j": [175, 458, 522], "7": [15, 17, 22, 23, 39, 53, 66, 70, 72, 81, 85, 87, 90, 93, 94, 95, 96, 98, 99, 101, 103, 104, 107, 114, 118, 144, 148, 162, 164, 170, 177, 178, 180, 193, 194, 204, 212, 216, 222, 224, 227, 229, 244, 246, 250, 255, 258, 353, 355, 386, 392, 400, 401, 407, 431, 457, 458, 462, 467, 469, 470, 472, 488, 494, 495, 496, 497, 501, 507, 508, 509, 511, 512, 513, 514, 515, 517, 518, 519, 522, 524, 526], "70": [194, 522, 526], "700": 194, "700e": 109, "70710677": [103, 352, 366], "70710678": [201, 205], "70710678j": 205, "70882036": 407, "71238898": 406, "718281828": [114, 117], "72": 87, "720": [89, 519], "72075441": 242, "72538256": [27, 47], "74165739": 216, "742278e": 481, "74596669": [212, 216], "74921661": 407, "75": [56, 113, 123, 164, 169, 209, 230], "754": 140, "75682673": 482, "75958653": 406, "76096244": 407, "76377462": 407, "77447665": 237, "78539816": [20, 28, 29, 50, 51, 519], "78927254": 407, "79175947": 88, "79769313e": 259, "7j": 400, "8": [4, 15, 17, 22, 39, 53, 69, 72, 81, 87, 93, 94, 95, 96, 98, 99, 103, 104, 106, 108, 109, 118, 121, 123, 137, 138, 144, 147, 162, 164, 170, 175, 178, 180, 193, 203, 204, 216, 220, 222, 223, 224, 225, 227, 228, 229, 230, 242, 244, 246, 355, 371, 386, 392, 397, 398, 399, 401, 407, 431, 450, 457, 458, 470, 472, 475, 481, 488, 497, 501, 503, 505, 507, 508, 509, 511, 512, 513, 517, 518, 519, 520, 523, 524, 526], "80": [106, 108, 526], "8000": 446, "80226506": 407, "8058837395885292": 229, "81715362": 407, "827941": [162, 242], "82842712": [206, 208], "84288406": 407, "84401099": 407, "84743374": 407, "84803548": 216, "85": 108, "86": 177, "87649168": 236, "88": 107, "88178420e": 121, "881943016134134": 229, "88194302": 229, "88997253": 407, "89920014": 411, "8f": 106, "8j": 522, "9": [4, 15, 22, 39, 53, 72, 81, 87, 90, 93, 94, 95, 96, 98, 101, 103, 104, 108, 110, 118, 121, 124, 125, 130, 141, 147, 149, 157, 162, 164, 170, 180, 193, 204, 205, 210, 212, 216, 218, 219, 222, 223, 224, 227, 229, 242, 244, 258, 259, 353, 386, 401, 407, 409, 411, 431, 457, 458, 470, 488, 489, 494, 501, 507, 508, 509, 511, 512, 513, 514, 517, 518, 519, 520, 524, 526], "90": [20, 92, 405, 472, 526], "917152": 500, "92387953": 206, "92387953j": 206, "93548928": 482, "94": 108, "94591015": 88, "95": 210, "95799250e": 121, "98": [211, 245], "98024613": 242, "99": [107, 234, 403], "99322285": [14, 25], "99532227": 113, "996272": 500, "99822295": [27, 47], "99853728": 113, "999": [109, 178], "9990000e": 259, "99959305": 113, "99989938": 113, "9999": 259, "99997791": 113, "999999e": 180, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 76, 77, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 175, 176, 178, 179, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 204, 206, 207, 208, 210, 214, 215, 216, 219, 220, 224, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 250, 252, 254, 255, 258, 262, 263, 267, 269, 338, 343, 351, 353, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 400, 405, 406, 407, 409, 426, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 456, 457, 458, 460, 462, 465, 468, 469, 472, 475, 479, 480, 481, 482, 483, 487, 488, 489, 490, 494, 496, 497, 499, 500, 501, 502, 504, 506, 508, 510, 512, 514, 515, 520, 523, 524, 526, 527, 528, 543], "AND": [16, 58, 59, 61, 62, 64, 179, 238, 239, 240, 241], "And": [4, 48, 49, 95, 103, 338, 508, 512], "As": 516, "Be": 205, "Being": 3, "But": [4, 106], "By": [31, 32, 42, 49, 87, 103, 122, 126, 128, 132, 134, 138, 162, 210, 230, 242, 245, 247, 249, 253, 260, 261, 264, 265, 266, 267, 268, 269, 270, 338, 463, 470, 484, 493, 497, 506, 508, 510, 512, 521, 523], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 348, 351, 352, 353, 360, 366, 368, 371, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536, 543], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 72, 74, 75, 85, 87, 88, 89, 90, 93, 94, 98, 99, 102, 103, 104, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 150, 151, 153, 158, 162, 164, 168, 169, 170, 171, 175, 176, 177, 178, 180, 184, 187, 188, 189, 200, 202, 210, 212, 213, 214, 215, 216, 218, 219, 222, 224, 226, 227, 229, 230, 231, 242, 243, 247, 248, 249, 250, 251, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 355, 373, 394, 395, 399, 402, 403, 407, 429, 451, 458, 459, 461, 463, 464, 465, 466, 470, 473, 474, 476, 485, 488, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 505, 516, 519, 520, 521, 522, 523, 524, 525, 526, 536, 543], "In": [4, 10, 31, 32, 87, 89, 90, 108, 109, 127, 128, 129, 132, 134, 164, 200, 207, 215, 219, 237, 242, 262, 263, 265, 267, 269, 399, 402, 407, 451, 456, 457, 465, 466, 495, 497, 515], "It": [4, 10, 16, 21, 22, 31, 32, 72, 89, 90, 100, 102, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 164, 178, 206, 208, 237, 245, 249, 250, 260, 261, 262, 263, 264, 265, 266, 268, 270, 392, 399, 465, 466, 477, 487, 493, 495, 497, 521, 543], "Its": [72, 225, 403, 503], "NOT": [59, 61, 179, 238, 239, 240, 241], "No": [41, 42, 108, 200], "Not": [16, 21, 42, 183, 259, 262, 263, 264, 266, 267, 269, 399], "OR": [21, 58, 59, 61, 62, 64, 179, 238, 239, 240, 241], "On": 4, "One": [53, 54, 55, 87, 105, 106, 132, 217, 392, 465], "Ones": 36, "Or": [164, 505], "That": 244, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 72, 73, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 179, 180, 182, 183, 184, 185, 186, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 338, 343, 352, 355, 360, 362, 366, 371, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 410, 412, 413, 423, 428, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 520, 521, 523, 525, 526, 527, 528, 536, 539, 543], "Then": [10, 43, 45, 244], "There": [10, 230, 516], "These": [4, 22, 106, 108, 109, 116, 244, 257, 403, 498, 508, 512, 536, 539], "To": [4, 126, 132, 134, 147, 386, 519], "With": [31, 32, 56, 85, 170, 212, 216, 229, 247, 253, 260, 261, 267, 269, 399, 495, 524], "_": [0, 169, 492, 505], "__array_interface__": 106, "__bool__": 536, "__dlpack__": 153, "__dlpack_device__": 153, "__eq__": [103, 106, 142, 407], "__ge__": [103, 106, 142, 407], "__getitem__": [103, 106, 142], "__gt__": [103, 106, 142, 407], "__iter__": 142, "__le__": [103, 106, 142, 407], "__len__": [103, 106], "__lt__": [103, 106, 142, 407], "__main__": 0, "__name__": 0, "__ne__": [103, 106, 142, 407], "__next__": 142, "__setitem__": [103, 142], "__sycl_usm_array_interface__": 44, "_core": 106, "_dtypes_list": 0, "_f": 216, "a1": [37, 38], "a2": [37, 38], "a_": [10, 216], "a_ax": [224, 501], "a_i": [228, 523], "a_k": 10, "a_m": 10, "a_resamp": 132, "ab": [6, 10, 12, 17, 180, 216], "abc": 108, "abcd": 109, "abl": 216, "about": [43, 45, 103, 140, 205, 349, 392, 464, 536], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 88, 94, 97, 124, 129, 134, 138, 176, 204, 219, 227, 243, 259, 461, 506, 507, 511], "absolut": [6, 11, 17, 20, 120, 161, 180, 195, 220, 268, 270, 400, 459, 493, 519, 521, 543], "accept": [33, 108, 217, 407, 485, 508, 512], "access": [10, 95, 96, 139, 244, 508, 512, 536], "accord": [16, 21, 56, 63, 68, 106, 138, 140, 205, 206, 207, 208, 243, 249, 250, 265, 268, 270, 392, 461, 468, 493, 521], "accordingli": [87, 264, 266], "account": [456, 465], "accumul": [88, 89, 90, 108, 168, 227, 262, 263, 267, 269, 399, 495, 503], "accur": [106, 117, 164, 234, 236], "accuraci": [127, 128, 129, 132, 134], "achiev": 108, "aco": [6, 24], "acosh": [6, 25], "across": [98, 169, 262, 263, 267, 269], "activ": 4, "actual": [106, 168, 169, 200, 215], "ad": [17, 106, 109, 116, 132, 180, 203, 220, 237, 519, 539], "add": [6, 106, 543], "addit": [88, 200, 265, 516], "address": 106, "adjac": [204, 227, 487, 519], "advanc": 108, "advers": 108, "advis": 4, "affect": [23, 98, 108, 139, 168, 169], "after": [105, 139, 385, 392, 426, 470], "after_1": 392, "after_n": 392, "ag": 106, "against": [17, 31, 32, 65, 66, 67, 72, 85, 163, 180, 212, 216, 218, 229, 247, 253, 260, 261, 267, 269, 399, 403, 495, 498], "ai": [3, 403, 498], "ai_max": 498, "ai_min": 498, "ainv": [209, 225], "al": 10, "algebra": [529, 539], "algorithm": [10, 33, 108, 109, 121, 127, 135, 485], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 60, 61, 63, 74, 75, 101, 111, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 160, 179, 197, 255, 271, 390, 394, 397, 398, 407, 437, 440, 442, 456, 462, 465, 468, 474, 504, 514, 519, 525, 528], "alias": [9, 126, 127, 132, 134, 482], "align": 106, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 73, 85, 92, 99, 103, 105, 106, 108, 109, 114, 115, 117, 119, 124, 125, 129, 130, 133, 134, 138, 139, 144, 145, 146, 154, 155, 157, 162, 164, 171, 173, 175, 193, 200, 202, 214, 218, 229, 230, 242, 247, 250, 253, 260, 261, 264, 266, 338, 341, 348, 362, 392, 399, 409, 458, 459, 470, 474, 477, 491, 495, 516, 518, 523, 525, 536, 543], "allclos": [6, 37, 180, 209, 218, 219, 221, 222, 226], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 79, 88, 94, 95, 97, 103, 110, 111, 119, 123, 137, 141, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 187, 188, 230, 231, 242, 243, 244, 249, 250, 252, 265, 268, 270, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 461, 491, 493, 506, 508, 512, 520, 521, 523, 527, 528], "allow": [39, 49, 93, 103, 108, 168, 169, 184, 237, 244, 250, 338, 368, 497, 536], "almost": [34, 205, 508], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 73, 74, 75, 85, 88, 89, 90, 93, 94, 95, 97, 98, 99, 103, 104, 105, 107, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 144, 145, 146, 150, 151, 156, 162, 164, 170, 171, 176, 178, 216, 219, 224, 225, 226, 227, 228, 229, 230, 242, 243, 247, 248, 249, 250, 251, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 335, 336, 337, 344, 345, 356, 358, 363, 364, 372, 375, 377, 379, 380, 382, 392, 395, 399, 401, 402, 403, 456, 461, 463, 470, 471, 472, 474, 477, 484, 485, 488, 492, 493, 495, 497, 498, 501, 502, 503, 505, 508, 509, 512, 513, 516, 518, 519, 521, 523, 524, 525, 536], "alpha": [408, 413, 414, 430, 433], "alreadi": [4, 10, 41, 42, 53, 54, 55, 391, 392, 516], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 80, 101, 103, 106, 108, 112, 116, 124, 129, 133, 134, 135, 138, 147, 149, 150, 151, 152, 156, 158, 161, 164, 165, 166, 167, 168, 172, 180, 184, 195, 197, 198, 199, 200, 236, 237, 244, 248, 254, 255, 257, 258, 371, 386, 387, 397, 398, 445, 462, 468, 482, 494, 497, 514, 516, 536], "alter": 98, "altern": [3, 4, 16, 21, 89, 90, 102, 103, 245, 247, 249, 250, 253, 262, 263, 265, 267, 268, 269, 270, 381, 399, 493, 495, 521], "although": [20, 106, 128, 129, 130, 502], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 98, 103, 104, 107, 120, 147, 153, 170, 206, 208, 268, 270, 338, 386, 465, 486, 493, 521, 524], "amax": [6, 247], "ambigu": 536, "amin": [6, 253], "among": 107, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 190, 193, 195, 196, 197, 198, 199, 202, 203, 204, 207, 210, 214, 215, 216, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 337, 338, 339, 340, 343, 353, 356, 360, 362, 364, 367, 368, 371, 372, 373, 374, 378, 379, 381, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 414, 415, 417, 426, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 536, 543], "anaconda": 3, "analog": [122, 124, 126, 128, 129, 131], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 91, 92, 175, 405, 406, 458, 459, 519, 543], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 65, 66, 67, 79, 94, 97, 99, 103, 106, 108, 109, 122, 124, 128, 129, 134, 138, 139, 159, 160, 162, 164, 169, 171, 182, 190, 191, 213, 226, 230, 242, 244, 264, 266, 338, 360, 392, 407, 451, 464, 482, 487, 520, 536], "anoth": [4, 81, 103, 118, 128, 129, 153, 343, 364, 395, 402, 471], "answer": 409, "anti": [98, 139, 204, 482], "anyth": 106, "ap": 210, "apart": 505, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 87, 94, 95, 97, 98, 103, 106, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 202, 204, 211, 212, 217, 218, 227, 228, 229, 230, 231, 242, 244, 245, 252, 338, 343, 388, 389, 390, 391, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 503, 506, 508, 512, 520, 522, 523, 527, 528], "appear": [116, 145, 146, 516], "append": [0, 6, 60, 93, 99, 107, 109, 116, 127, 128, 129, 178, 197, 204], "appli": [31, 32, 33, 56, 68, 93, 108, 224, 259, 457, 466, 467, 485, 501, 505], "applic": [10, 106, 482], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [103, 106, 127, 128, 129, 371], "appropri": [4, 31, 32, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 163, 226, 260, 261, 264, 266, 407, 435, 438, 466, 497, 536], "approxim": [140, 505], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 161, 162, 164, 165, 166, 167, 168, 169, 172, 177, 179, 180, 183, 184, 185, 186, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 222, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 361, 362, 371, 383, 384, 385, 386, 387, 392, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 433, 435, 438, 439, 441, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 466, 468, 469, 470, 473, 474, 475, 476, 477, 479, 480, 481, 484, 485, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 501, 503, 505, 509, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 536, 543], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 72, 80, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 108, 112, 114, 115, 117, 118, 121, 143, 144, 147, 152, 160, 161, 162, 164, 168, 170, 176, 177, 178, 193, 194, 195, 196, 204, 211, 212, 216, 224, 227, 229, 230, 233, 234, 238, 239, 240, 241, 242, 244, 245, 247, 251, 253, 255, 258, 346, 355, 387, 390, 392, 395, 397, 398, 402, 406, 431, 462, 464, 465, 467, 470, 472, 477, 488, 494, 501, 503, 505, 508, 509, 512, 513, 514, 518, 524, 526, 528], "arbitrari": [48, 102, 106, 108, 177, 245, 467, 508, 512], "arbitrarili": 108, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 83], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 84], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 481], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 483], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 499], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 500], "area": 505, "arg": [65, 66, 103, 193, 353, 407], "arg1": 192, "arg2": 192, "argmax": [0, 6, 32, 103, 260, 403, 498, 536], "argmin": [6, 31, 103, 261, 498, 536], "argpartit": [6, 33, 403, 498, 536], "argsort": [6, 103, 394, 403, 476, 485, 498, 504, 536], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 72, 74, 75, 80, 83, 84, 91, 92, 101, 102, 103, 106, 109, 113, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 161, 167, 172, 175, 179, 191, 192, 195, 196, 197, 202, 204, 211, 215, 216, 217, 224, 227, 228, 233, 234, 235, 236, 237, 244, 245, 248, 254, 255, 256, 258, 353, 368, 381, 384, 385, 392, 396, 397, 398, 400, 402, 405, 406, 458, 459, 460, 462, 465, 467, 468, 469, 475, 479, 480, 481, 482, 483, 487, 492, 494, 499, 500, 501, 505, 514, 515, 523, 536, 543], "argwher": [6, 386], "ari": [39, 53, 54, 55, 104, 107, 170, 488, 524], "arithmet": [56, 162, 249, 250, 265, 268, 270, 396, 493, 495, 521, 529, 539], "around": [6, 103, 162, 392, 402, 457, 473], "arr": [22, 42, 93, 96, 106, 169, 178, 404, 431, 456, 457, 509, 513, 518], "arr2": [106, 518], "arr_t": [49, 103, 338], "arraiarray2str": 6, "array_equ": [6, 178], "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 79, 81, 94, 97, 107, 118, 159, 160, 162, 178, 182, 190, 224, 230, 242, 383, 392, 395, 402, 403, 407, 472, 478, 484, 497, 501, 520], "array_of_diagon": 98, "array_repr": 6, "array_split": [6, 74, 75, 488], "array_str": 6, "arrays_and_dtyp": 467, "art": 10, "asanyarrai": [6, 41, 42, 45, 464], "asarrai": [4, 6, 40, 42, 43, 45, 48, 383, 464, 484], "asarray_chkfinit": [6, 40, 41], "ascend": [206, 208, 476], "ascii": 106, "ascontiguousarrai": [6, 40, 41, 42, 45, 464], "asfarrai": [40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 464], "asin": [6, 26], "asinh": [6, 27], "asmatrix": 6, "asnumpi": 103, "aspect": 106, "assembl": [74, 75, 105, 171, 474, 492, 518, 525], "assert": 250, "assign": [103, 348, 371, 508, 512], "associ": [56, 168, 169, 536], "assum": [10, 56, 87, 109, 126, 132, 134, 204, 214, 218, 222, 244, 505], "astyp": [6, 103, 162, 386], "atan": [6, 28], "atan2": [6, 29], "atanh": [6, 30], "atleast_1d": [6, 54, 55, 116], "atleast_2d": [6, 53, 55, 116], "atleast_3d": [6, 53, 54, 116], "atol": [17, 180], "attain": 0, "attempt": [102, 215], "attribut": [103, 106, 111, 140, 160, 174, 219, 390, 528, 529], "automat": [168, 169], "avail": [2, 3, 4, 10, 82, 86, 106, 113, 256, 260, 261, 264, 266, 267, 529, 536], "averag": [6, 103, 249, 250, 265, 357, 495, 539], "avg": 56, "avoid": [36, 41, 54, 55, 126, 132, 134, 465], "aweight": 86, "ax": [16, 21, 31, 32, 56, 85, 87, 88, 99, 102, 103, 108, 116, 122, 124, 125, 128, 129, 130, 133, 134, 136, 138, 144, 164, 177, 202, 212, 216, 221, 224, 225, 226, 227, 229, 243, 245, 246, 247, 249, 250, 253, 257, 260, 261, 264, 265, 266, 267, 268, 269, 270, 378, 381, 391, 392, 394, 399, 461, 466, 470, 471, 472, 491, 493, 495, 496, 501, 502, 503, 504, 516, 521, 523], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 73, 74, 75, 85, 87, 88, 89, 90, 93, 98, 99, 103, 104, 105, 107, 108, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 144, 145, 146, 150, 151, 156, 162, 164, 170, 171, 176, 178, 202, 210, 216, 224, 228, 229, 230, 242, 243, 245, 247, 248, 249, 250, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 333, 334, 335, 336, 337, 344, 345, 351, 356, 357, 358, 362, 363, 364, 367, 372, 373, 374, 375, 377, 379, 381, 382, 392, 393, 394, 395, 399, 401, 402, 403, 456, 461, 463, 465, 466, 470, 471, 472, 474, 477, 484, 485, 488, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 505, 516, 518, 519, 521, 523, 524, 525, 536], "axis1": [98, 103, 346, 378, 380, 496, 503], "axis2": [98, 103, 346, 378, 380, 496, 503], "axisa": 87, "axisb": 87, "axisc": 87, "axiserror": [33, 485], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 64, 73, 74, 75, 81, 87, 90, 102, 103, 105, 106, 108, 109, 112, 154, 155, 165, 166, 171, 177, 178, 180, 184, 194, 198, 199, 202, 203, 210, 211, 212, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 238, 240, 245, 246, 247, 250, 253, 385, 387, 391, 397, 398, 408, 467, 474, 487, 492, 501, 502, 510, 522, 523, 525, 543], "b_ax": [224, 501], "b_i": [228, 523], "back": [103, 156, 351, 456, 465, 466, 471, 510], "backend": [2, 163, 410, 412, 413, 423, 428, 444], "backward": [10, 49, 103, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 164, 338, 465, 470, 471], "bad": 419, "baltimor": 216, "bandlimit": 482, "bartlett": 6, "base": [0, 4, 106, 108, 115, 118, 147, 162, 168, 169, 222, 232, 233, 234, 235, 236, 237, 242, 243, 245, 395, 397, 398, 402, 404, 523], "base_repr": 6, "basic": [68, 108, 536, 539], "batch": 229, "bc": [203, 220], "bcde": 109, "becaus": [10, 16, 21, 126, 132, 134, 519, 536], "becom": [10, 103, 168, 381], "been": [105, 403, 471, 498], "befor": [4, 22, 33, 74, 75, 88, 103, 107, 127, 128, 129, 145, 146, 178, 226, 243, 247, 253, 268, 270, 362, 373, 392, 399, 461, 470, 471, 485, 493, 495, 502, 521, 522], "before_1": 392, "before_n": 392, "begin": [107, 109, 162, 230, 242, 392, 477], "behav": [178, 231, 402], "behavior": [33, 103, 136, 227, 259, 343, 466, 485, 502], "behind": [103, 362], "being": [3, 106, 150, 151, 248, 254, 392], "belong": [100, 168], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 94, 97, 106, 132, 204, 214, 216, 227, 506, 507, 511, 519, 536], "best": 109, "beta": [6, 418], "between": [17, 23, 39, 68, 99, 107, 140, 155, 158, 164, 177, 178, 180, 230, 242, 392, 424, 438, 487, 494, 505, 519], "beyond": [4, 470], "bia": 86, "big": 106, "bin": [100, 121, 123, 137, 168, 169, 445], "bin_edg": [168, 169], "binari": [58, 62, 64, 154, 155, 157, 158], "binary_repr": 6, "bincount": [6, 100, 168], "binomi": [6, 426], "bins_0": 169, "bins_1": 169, "bit": [58, 59, 60, 61, 62, 63, 64, 106, 140, 174, 179, 197, 238, 240, 241, 267, 269, 468, 480, 529, 539], "bitwis": [58, 62, 64], "bitwise_and": [6, 59, 61, 62, 64, 179, 238], "bitwise_count": 6, "bitwise_invert": [6, 61, 179], "bitwise_left_shift": [6, 197], "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 64, 179, 240], "bitwise_right_shift": [6, 468], "bitwise_xor": [6, 58, 59, 61, 62, 179, 241], "biufcmmosuv": 106, "blackman": 6, "block": [6, 74, 75, 105, 139, 171, 194, 474, 492, 518, 525], "bmat": 6, "bool": [9, 16, 17, 20, 21, 31, 32, 33, 36, 37, 38, 41, 44, 49, 56, 68, 81, 85, 88, 93, 100, 103, 106, 109, 112, 139, 153, 162, 165, 166, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 212, 214, 216, 218, 222, 229, 230, 242, 243, 247, 249, 250, 251, 253, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 338, 386, 387, 399, 461, 465, 477, 480, 485, 493, 495, 497, 516, 520, 521, 536], "bool_": 9, "boolean": [58, 59, 61, 62, 64, 81, 88, 93, 106, 118, 147, 153, 176, 179, 180, 183, 185, 186, 187, 188, 189, 193, 238, 240, 243, 244, 249, 250, 265, 267, 268, 270, 386, 395, 461, 493, 497, 521], "boolean_sequ": 193, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 72, 80, 87, 101, 102, 112, 128, 135, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 177, 180, 194, 195, 196, 197, 198, 199, 211, 216, 224, 236, 237, 238, 240, 241, 245, 248, 254, 255, 258, 269, 385, 387, 397, 398, 462, 465, 468, 494, 501, 503, 508, 510, 512, 514, 522, 523, 526], "bound": [402, 403, 457, 476, 497, 498], "boundari": [164, 402, 457], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 536, "broadcast": [15, 16, 21, 31, 32, 38, 56, 65, 66, 67, 72, 81, 85, 101, 108, 118, 147, 150, 151, 172, 187, 188, 211, 212, 216, 218, 229, 241, 243, 245, 247, 248, 249, 250, 253, 254, 258, 260, 261, 265, 267, 268, 269, 270, 397, 398, 399, 402, 403, 461, 463, 493, 494, 495, 498, 502, 514, 521, 523, 526], "broadcast_arrai": [6, 66, 67], "broadcast_shap": 6, "broadcast_to": [6, 65, 66, 502], "brought": 10, "buffer": [44, 89, 90, 103, 153, 154, 155, 157, 158, 231, 247, 253, 262, 263], "buffer_lik": 154, "buffererror": 153, "build": 539, "build_loc": 4, "built": 106, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 103, 106, 108, 154, 155, 231, 338, 354, 359], "byteord": 106, "byteswap": 6, "bz2": 231, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 87, 91, 92, 101, 102, 103, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 163, 165, 166, 167, 172, 175, 177, 179, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 203, 210, 215, 216, 220, 224, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 254, 255, 258, 338, 343, 351, 365, 368, 384, 385, 386, 387, 389, 390, 396, 397, 398, 400, 405, 406, 456, 457, 458, 460, 462, 464, 465, 466, 468, 469, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 501, 502, 514, 515, 516, 517, 523, 526, 527, 528, 543], "c_contigu": [43, 45, 103, 343, 464], "ca": 78, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 87, 88, 90, 99, 101, 107, 108, 112, 114, 115, 117, 121, 130, 147, 148, 149, 152, 164, 169, 172, 205, 206, 207, 208, 210, 216, 218, 234, 236, 237, 243, 245, 249, 250, 255, 258, 265, 268, 270, 387, 392, 397, 398, 399, 461, 462, 493, 494, 514, 521, 522, 529, 543], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 106, 127, 128, 129, 132, 135, 156, 178, 205, 207, 215, 223, 244, 250, 278, 386, 491, 497, 502, 505, 543], "callabl": [156, 244], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 68, 79, 80, 87, 94, 95, 97, 98, 101, 102, 103, 106, 108, 109, 110, 111, 112, 119, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 137, 139, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 173, 176, 177, 179, 180, 182, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 209, 210, 213, 214, 216, 218, 224, 226, 227, 230, 231, 236, 237, 238, 240, 241, 242, 244, 245, 248, 252, 254, 255, 258, 267, 269, 338, 343, 371, 373, 384, 385, 386, 387, 388, 389, 390, 396, 397, 398, 403, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 456, 457, 462, 464, 465, 468, 485, 487, 494, 497, 498, 501, 503, 505, 506, 508, 512, 513, 514, 516, 520, 522, 526, 527, 528, 536, 543], "can_cast": [6, 539], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 74, 75, 260, 261, 465, 488, 491, 492], "capabl": [23, 36, 40, 41, 43, 45, 56, 120, 162, 230, 242, 245, 523], "cardin": 482, "cardinali": 482, "care": [23, 205], "cartesian": 251, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 79, 87, 89, 90, 94, 97, 99, 103, 108, 109, 110, 111, 119, 123, 126, 131, 135, 137, 154, 155, 156, 157, 159, 160, 162, 164, 173, 205, 219, 222, 224, 230, 231, 237, 242, 252, 262, 263, 267, 269, 353, 388, 389, 390, 399, 456, 465, 466, 495, 501, 506, 519, 520, 527, 528, 536], "cast": [16, 21, 49, 68, 74, 75, 81, 88, 89, 90, 103, 108, 147, 171, 178, 205, 243, 245, 249, 250, 259, 262, 263, 265, 267, 268, 269, 270, 338, 399, 461, 474, 492, 493, 495, 521, 523, 525], "cat": [409, 426], "cauchi": 445, "cbrt": [6, 489], "cdef": 109, "cdot": [224, 228, 501, 523], "cdoubl": 9, "ceil": [6, 35, 141, 148, 149, 469, 473, 515], "center": [122, 123, 124, 125, 129, 130, 137], "central": [164, 427, 428], "certain": [106, 244], "ch": 10, "chain": [102, 103, 108, 109], "chang": [49, 79, 87, 103, 106, 108, 118, 262, 263, 338, 351, 376, 381, 384, 395, 396, 402, 403, 404, 456, 465, 466, 471, 519, 539], "char": 106, "charact": [106, 155], "check": [16, 21, 40, 41, 42, 68, 126, 182, 184, 190, 200, 218, 221, 536], "check_valid": 425, "chi": [411, 427], "chisquar": 6, "choic": [6, 71, 103, 121, 122, 124, 127, 128, 129, 133, 134, 136, 138, 206, 208, 339], "choicelist": 477, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 103, 109, 477, 526, 536], "chosen": [34, 168, 516, 526], "circ": 543, "circl": [220, 505], "clamp": [402, 403, 497, 498], "clariti": 139, "class": [3, 4, 103, 106, 142, 154, 155, 156, 158, 176, 231, 407, 435, 506, 539], "classic": 108, "clear": [106, 196, 536], "clip": [6, 103, 402, 403, 457, 497, 498, 536], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 103, 108, 116, 175, 230, 338, 407, 435, 458, 459, 469, 473, 505], "closer": 515, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 84, 207, 481, 499, 505], "coars": [217, 391], "code": [44, 106, 192, 464], "codeplai": 4, "coeffici": [210, 221, 226], "coerc": [44, 154, 155, 156, 157, 158, 231], "coin": 409, "col": 176, "collaps": [103, 351, 516], "column": [6, 40, 41, 42, 43, 45, 48, 49, 73, 74, 75, 89, 90, 98, 103, 105, 119, 139, 145, 146, 164, 170, 171, 173, 205, 206, 210, 215, 219, 222, 338, 456, 457, 464, 474, 488, 492, 506, 508, 512, 517, 520, 525], "column_stack": [6, 74, 75, 105, 171, 474, 492, 525], "com": 4, "combin": [0, 106, 116, 124, 129, 134, 138, 164], "combinatori": 109, "come": 516, "comma": [106, 108], "command": 4, "common": [127, 128, 129, 161, 195, 224, 386, 501], "common_typ": 6, "compani": [409, 426], "compar": [17, 33, 37, 112, 150, 151, 169, 180, 217, 248, 254, 485], "comparison": [2, 112, 165, 166, 198, 199, 387, 529, 539], "compat": [3, 4, 10, 16, 21, 49, 56, 87, 98, 103, 202, 204, 211, 212, 217, 218, 227, 228, 229, 243, 245, 249, 250, 264, 265, 266, 268, 270, 338, 391, 461, 465, 493, 503, 521, 522, 523, 539], "compil": [4, 106, 163, 464], "complement": 519, "complementari": [149, 519], "complet": [3, 4, 109, 155, 156, 219, 471, 536], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 46, 47, 50, 51, 52, 68, 88, 102, 103, 106, 109, 113, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 147, 150, 151, 175, 181, 182, 189, 190, 196, 205, 206, 207, 208, 211, 219, 220, 222, 228, 243, 245, 248, 254, 259, 268, 270, 341, 342, 400, 458, 459, 461, 486, 493, 516, 521, 522, 523, 536, 539], "complex128": [9, 56, 467], "complex64": [9, 56, 103, 147, 372], "compliant": 103, "complic": [108, 543], "compon": [10, 37, 87, 125, 130, 137, 140, 175, 214, 224, 259, 458, 501], "compos": 80, "composit": [90, 194, 495, 505], "compress": [6, 118, 477, 497, 536], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 64, 69, 76, 77, 83, 84, 88, 89, 90, 99, 100, 108, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 148, 164, 165, 166, 167, 168, 169, 175, 176, 179, 194, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 238, 239, 240, 241, 243, 245, 249, 250, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 384, 391, 396, 400, 458, 460, 461, 462, 469, 473, 475, 479, 480, 481, 483, 489, 493, 495, 499, 500, 501, 505, 508, 512, 521, 523], "compute_uv": [201, 222, 223], "concat": [6, 75], "concaten": [6, 73, 74, 105, 171, 178, 474, 488, 492, 498, 518, 525], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528, 536], "cond": [6, 209], "condit": [34, 49, 102, 103, 118, 201, 209, 215, 338, 386, 395, 402, 404, 477, 526], "condlist": 477, "confus": 152, "conj": [6, 77, 103, 126, 175, 200, 205, 400], "conjug": [6, 10, 76, 102, 103, 132, 135, 175, 200, 205, 206, 207, 208, 211, 228, 245, 341, 400, 522, 523], "consecut": [99, 107, 164], "conserv": 251, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 109, 137, 162, 180, 183, 206, 208, 214, 230, 242, 245, 407, 435, 466, 487, 516, 523], "consist": [37, 38, 107, 121, 122, 124, 127, 128, 129, 133, 134, 136, 138, 155, 169, 224, 226, 230, 498, 501], "constant": [9, 106, 164, 392], "constant_valu": 392, "constraint": 56, "construct": [40, 41, 42, 71, 94, 97, 98, 103, 106, 119, 154, 155, 156, 157, 158, 173, 193, 196, 231, 252, 339, 388, 477, 482, 502, 503, 526, 529], "constructor": 536, "consum": [103, 359], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 80, 81, 83, 84, 87, 88, 98, 101, 103, 106, 112, 114, 115, 117, 122, 123, 124, 127, 132, 135, 137, 143, 147, 148, 149, 150, 151, 152, 153, 158, 163, 164, 165, 166, 168, 169, 172, 175, 176, 179, 197, 198, 199, 202, 204, 206, 219, 222, 224, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 248, 249, 254, 255, 258, 260, 261, 264, 265, 266, 268, 270, 368, 384, 386, 387, 394, 396, 397, 398, 400, 407, 458, 460, 461, 462, 468, 469, 473, 475, 479, 480, 481, 482, 483, 489, 490, 493, 494, 499, 500, 501, 504, 508, 509, 512, 513, 514, 515, 521, 536], "content": [43, 103, 250, 444], "context": 10, "contigu": [40, 41, 42, 43, 45, 102, 103, 108, 184, 215, 365, 456, 464, 465], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 407, 439, 482], "contourf": 251, "contract": [108, 109, 224, 501], "contrari": [202, 204, 211, 227, 228], "contrast": [108, 402], "contribut": [10, 56, 168, 169], "control": [4, 49, 68, 74, 75, 81, 103, 108, 171, 245, 338, 474, 492, 523, 525], "conveni": [103, 381, 407], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 102, 108, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 177, 211, 224, 226, 245, 391, 501, 523], "convers": [49, 103, 108, 338, 529], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 79, 91, 92, 94, 97, 106, 108, 109, 116, 159, 160, 162, 178, 182, 190, 230, 242, 405, 406, 457, 464, 517, 519, 520], "convolut": [10, 78, 82], "convolv": [6, 82], "coolei": 10, "coordin": [85, 156, 164, 176, 193, 251, 457, 517], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 81, 93, 94, 95, 97, 98, 103, 106, 110, 111, 118, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 178, 230, 231, 242, 244, 250, 251, 252, 259, 278, 338, 351, 353, 362, 368, 371, 388, 389, 390, 393, 395, 396, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 456, 464, 465, 466, 476, 485, 491, 506, 507, 508, 511, 512, 520, 527, 528, 536], "copysign": [6, 384, 396], "copyto": [6, 103, 118, 343, 395], "core": [3, 108, 523, 536], "corner": [122, 124, 128, 129, 392], "corrcoef": [6, 86], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 74, 75, 76, 77, 80, 83, 84, 91, 92, 101, 112, 114, 115, 117, 120, 126, 132, 134, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 172, 175, 179, 183, 185, 186, 195, 196, 197, 198, 199, 221, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 254, 255, 258, 384, 385, 387, 396, 397, 398, 400, 405, 406, 458, 460, 462, 464, 468, 469, 473, 475, 479, 480, 481, 482, 483, 487, 489, 490, 492, 494, 499, 500, 514, 515], "correctli": [20, 26, 28, 31, 32, 46, 50, 85, 212, 216, 229, 247, 253, 260, 261, 267, 269, 386, 399, 495], "correl": [6, 539], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 72, 74, 75, 79, 91, 92, 94, 95, 97, 98, 103, 104, 110, 111, 119, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 170, 173, 176, 193, 202, 205, 206, 224, 228, 230, 231, 242, 244, 245, 252, 338, 343, 347, 388, 389, 390, 394, 405, 406, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 470, 477, 478, 488, 493, 501, 504, 505, 506, 508, 512, 520, 521, 523, 524, 527, 528, 536], "correspondingli": [10, 488], "cosh": [6, 14, 25, 83, 483, 500], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 481, 483, 499, 500], "cost": [108, 109], "costli": 109, "could": [103, 126, 132, 134, 373], "count": [16, 21, 57, 85, 100, 106, 109, 144, 154, 155, 157, 158, 164, 168, 169, 386, 399, 409, 484, 495, 516, 529, 539], "count_nonzero": [6, 386], "counterclockwis": [145, 146, 472], "counterpart": [10, 126, 132, 134, 536], "cov": [6, 425], "covari": 86, "cover": [508, 512, 539], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 79, 82, 86, 94, 97, 110, 111, 113, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 230, 231, 242, 252, 256, 267, 388, 389, 390, 506, 520, 527, 528], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 96, 97, 98, 103, 106, 109, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 259, 338, 343, 388, 389, 390, 392, 403, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 503, 506, 508, 509, 512, 513, 520, 527, 528, 536, 539], "creation": [106, 109, 529, 536, 539, 543], "crop": [121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138], "cross": [6, 82, 193], "csingl": 9, "ct": 10, "ctype": 464, "cube": [69, 147, 489], "cubic": 109, "cuda": 4, "cumprod": [6, 103, 262, 536], "cumsum": [6, 99, 103, 263, 495, 505, 536], "cumul": [88, 89, 90, 99, 103, 262, 263, 344, 345, 495, 505], "cumulative_prod": 6, "cumulative_sum": 6, "cupi": [2, 529], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 80, 83, 84, 91, 92, 101, 103, 106, 109, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 155, 161, 167, 169, 172, 173, 179, 195, 196, 197, 233, 234, 235, 236, 237, 248, 254, 255, 256, 258, 371, 384, 385, 392, 396, 397, 398, 400, 405, 406, 460, 462, 464, 468, 469, 475, 479, 480, 481, 483, 487, 494, 499, 500, 514, 515], "curv": 505, "custom": 536, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 210, 523], "cutoff": 218, "cycl": [123, 137, 193, 466], "cyclic": 402, "cython": 4, "d": [0, 16, 21, 23, 56, 73, 74, 75, 89, 90, 94, 95, 96, 97, 98, 102, 103, 105, 106, 119, 123, 125, 130, 137, 139, 143, 145, 146, 158, 170, 171, 173, 177, 193, 203, 204, 206, 207, 211, 215, 216, 220, 224, 227, 245, 251, 262, 263, 269, 351, 386, 397, 398, 399, 402, 412, 456, 465, 474, 476, 478, 492, 495, 497, 501, 502, 503, 510, 516, 520, 523, 525, 536], "d0": [407, 434, 436], "d1": [407, 436], "d3": 95, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 94, 97, 100, 101, 102, 103, 106, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 126, 132, 134, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 185, 186, 187, 188, 190, 195, 196, 197, 198, 199, 204, 210, 217, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 338, 368, 381, 383, 384, 385, 387, 389, 390, 395, 396, 397, 398, 400, 402, 403, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 498, 499, 500, 503, 506, 514, 515, 521, 523, 525, 526, 527, 528, 529, 539], "datatyp": [106, 214], "date": 4, "datetim": 106, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [86, 103, 268, 270, 375, 382, 493, 521], "decai": 420, "decim": [35, 103, 140, 141, 369, 469, 473], "decomposit": [200, 209, 214, 218, 222, 223, 539], "decompress": 231, "decreas": [100, 505], "decreasingli": [10, 122, 124, 128, 129], "deem": 153, "def": [0, 392], "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 210, 212, 214, 215, 216, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 351, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 411, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 448, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 536], "default_rng": 6, "defg": 109, "defici": 214, "defin": [10, 29, 51, 87, 93, 106, 111, 121, 150, 151, 160, 167, 168, 169, 178, 202, 204, 216, 228, 248, 254, 259, 390, 396, 459, 472, 523, 528, 536], "definit": [87, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 148, 200, 505], "deg": [20, 406], "deg2rad": [6, 405, 406, 519], "degre": [6, 20, 91, 268, 270, 405, 406, 449, 472, 493, 519, 521, 543], "del": 543, "delet": [6, 22, 178], "delta": [10, 268, 270, 493, 519, 521], "demonstr": [0, 4, 106], "denot": [228, 523], "dens": [176, 193, 252], "densiti": 168, "depend": [4, 34, 98, 120, 126, 132, 134, 204, 206, 210, 216, 219, 221, 222, 230, 267, 269, 477, 526], "depth": [73, 74, 75, 104, 105, 171, 474, 488, 492, 525], "deriv": 164, "descend": 222, "descr": 106, "describ": [88, 106, 216, 227, 243, 461, 539], "descript": [88, 106, 127, 129, 168, 243, 461, 536], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 67, 110, 111, 119, 127, 128, 129, 159, 160, 162, 173, 230, 242, 389, 390, 456, 502, 506, 527, 528], "destin": [74, 75, 171, 257, 402, 403, 474, 492, 498, 525], "destruct": 543, "det": [6, 220], "detail": [35, 122, 124, 128, 129, 133, 134, 136, 138, 153, 212, 229, 473, 508, 509, 512, 513, 516, 536], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 69, 80, 83, 84, 91, 92, 101, 114, 115, 117, 149, 150, 151, 152, 155, 156, 158, 172, 197, 203, 204, 210, 219, 220, 227, 232, 233, 234, 235, 236, 237, 245, 248, 254, 255, 258, 385, 397, 398, 405, 406, 457, 460, 462, 468, 475, 477, 479, 481, 482, 483, 487, 489, 490, 494, 499, 500, 503, 514, 515, 517, 523], "devel": 4, "develop": [3, 4], "deviat": [103, 249, 265, 268, 270, 375, 407, 422, 429, 493, 521], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 79, 88, 94, 95, 97, 103, 108, 110, 111, 119, 120, 123, 137, 141, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 243, 244, 245, 249, 250, 252, 265, 268, 270, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 461, 491, 493, 506, 508, 512, 520, 521, 523, 527, 528], "df": [411, 427, 449, 450], "dfden": [415, 428], "dfnum": [415, 428], "dft": [10, 121, 126, 127, 131, 132, 135], "di": [95, 96], "diag": [6, 97, 98, 108, 119, 145, 146, 173, 205, 207, 222, 477, 503], "diag_indic": [6, 96, 139], "diag_indices_from": [6, 95, 139], "diagflat": [6, 94, 98, 503], "diagon": [6, 94, 95, 96, 97, 103, 108, 119, 139, 173, 200, 206, 207, 208, 227, 244, 380, 477, 503, 506, 507, 508, 509, 511, 512, 513, 536], "dice": 424, "dict": [106, 392], "dictionari": 106, "diff": [6, 90, 107, 164, 168], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 79, 88, 90, 94, 97, 99, 103, 106, 107, 110, 111, 119, 122, 123, 127, 128, 130, 133, 136, 137, 140, 145, 146, 147, 154, 155, 156, 157, 159, 160, 162, 164, 173, 178, 180, 208, 216, 227, 230, 231, 242, 243, 245, 252, 343, 388, 389, 390, 395, 397, 398, 403, 461, 466, 472, 494, 498, 506, 508, 512, 519, 520, 527, 528, 539], "differenti": 482, "digit": [6, 10, 140, 168], "dim": [17, 457], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 73, 74, 75, 81, 85, 86, 87, 95, 98, 99, 103, 104, 106, 116, 128, 129, 141, 145, 146, 164, 171, 176, 177, 193, 202, 204, 212, 214, 216, 219, 223, 224, 227, 228, 229, 243, 246, 247, 249, 250, 251, 252, 253, 257, 260, 261, 264, 265, 266, 267, 268, 269, 270, 351, 355, 360, 371, 383, 386, 388, 399, 403, 407, 437, 439, 440, 442, 456, 457, 461, 465, 472, 478, 488, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 508, 509, 512, 513, 516, 517, 518, 521, 523, 524, 536, 539], "dimension": [2, 4, 33, 78, 82, 85, 88, 93, 95, 96, 97, 98, 99, 100, 103, 107, 108, 121, 122, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 154, 155, 157, 164, 170, 176, 178, 193, 202, 210, 217, 219, 225, 226, 243, 247, 251, 252, 253, 260, 261, 264, 266, 268, 270, 374, 383, 388, 391, 399, 461, 485, 493, 495, 497, 502, 505, 516, 521, 522, 524, 529], "direct": [10, 87, 99, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 145, 146, 164, 202, 385, 472], "directli": [106, 156, 176, 242, 386, 498], "directori": 163, "dirichlet": 6, "discard": 515, "discont": 519, "discontinu": 519, "discret": [3, 10, 78, 82, 90, 99, 107, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 164, 407, 482, 529], "dispers": 452, "displac": [103, 376], "disregard": 466, "distanc": [164, 487], "distinct": [150, 151, 248, 254, 466], "distinguish": 106, "distribut": [3, 4, 242, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 539], "divid": [6, 39, 104, 105, 149, 152, 170, 255, 462, 488, 514, 524], "divis": [101, 149, 152, 255, 397, 398, 462, 488, 514, 515], "divisor": [161, 195, 268, 270, 493, 521], "divmod": [6, 536], "dlpack": 153, "dmlc": 153, "dn": [407, 434, 436], "do": [3, 4, 106, 244, 250, 409, 471, 505], "docstr": 536, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536], "doe": [22, 23, 39, 68, 93, 103, 108, 118, 120, 135, 150, 151, 153, 178, 219, 259, 262, 263, 353, 395, 466, 488, 497], "domain": [10, 126, 131], "done": [3, 49, 103, 108, 226, 338, 516, 519], "dot": [6, 103, 108, 109, 177, 200, 207, 209, 215, 218, 219, 221, 222, 224, 225, 226, 228, 245, 501, 522, 523], "doubl": [9, 224, 420, 501], "down": 146, "dp": [101, 203, 206, 220, 221, 397, 398, 494, 514], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 260, 261, 264, 266, 267, 338, 343, 388, 389, 390, 401, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "dpnp": [0, 2, 3, 4, 10, 529, 536, 539, 540, 543], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 79, 94, 95, 97, 110, 111, 119, 123, 137, 140, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 174, 176, 230, 231, 242, 244, 252, 271, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528, 529], "dpnp_iface_arraycr": [252, 388], "draw": [407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "drawn": [407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 433, 435, 438, 441, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477], "drill": [409, 426], "driver": 2, "drop": [3, 106], "dsplit": [6, 74, 75, 105, 488], "dst": 81, "dstack": [6, 73, 74, 75, 171, 474, 488, 492, 525], "dt": [106, 505], "dt2": 106, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 74, 75, 76, 77, 80, 83, 84, 86, 88, 89, 90, 91, 92, 93, 95, 101, 103, 108, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 178, 179, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 215, 218, 222, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 344, 345, 357, 363, 372, 375, 377, 380, 382, 384, 385, 387, 389, 390, 396, 397, 398, 399, 400, 405, 406, 407, 429, 435, 451, 460, 461, 462, 464, 467, 468, 469, 473, 474, 475, 479, 480, 481, 482, 483, 486, 487, 489, 490, 492, 493, 494, 495, 497, 499, 500, 503, 506, 507, 511, 514, 515, 521, 523, 524, 525, 527, 528, 536], "due": [135, 543], "dump": 6, "dx": [164, 505], "dy": 164, "dz": 164, "e": [9, 10, 14, 25, 27, 47, 60, 88, 89, 98, 106, 110, 111, 116, 119, 122, 126, 127, 128, 129, 132, 134, 135, 147, 155, 159, 160, 164, 173, 197, 205, 220, 225, 229, 232, 250, 389, 390, 407, 459, 463, 466, 496, 506, 518, 527, 528], "ea": 109, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 76, 77, 80, 83, 84, 89, 90, 95, 98, 100, 101, 103, 104, 106, 109, 112, 114, 115, 117, 122, 124, 126, 128, 129, 132, 133, 134, 136, 138, 145, 146, 147, 148, 149, 152, 156, 164, 165, 166, 168, 169, 170, 175, 179, 183, 185, 186, 193, 197, 198, 199, 202, 205, 206, 207, 208, 210, 223, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 255, 257, 258, 259, 369, 384, 386, 387, 392, 396, 397, 398, 400, 403, 409, 426, 457, 458, 460, 462, 463, 466, 468, 469, 470, 473, 475, 479, 480, 481, 483, 488, 489, 490, 492, 494, 498, 499, 500, 502, 505, 508, 509, 512, 513, 514, 515, 516, 517, 523, 524, 536], "easier": 497, "easiest": [4, 392], "easili": [0, 169], "edg": [72, 100, 168, 169, 392], "edge_ord": 164, "ediff1d": [6, 99, 164], "effect": [109, 147, 150, 151, 248, 254, 397, 398, 519], "effici": [10, 121, 135, 155, 214, 218, 222], "efgh": 109, "eig": [6, 206, 207, 208], "eigenvalu": [205, 206, 207, 208, 539], "eigenvector": [205, 206, 207, 208], "eigh": [6, 205, 207, 208], "eight": 216, "eigval": [6, 205, 206, 208], "eigvalsh": [6, 205, 206, 207], "einstein": [102, 108, 109, 177, 224, 226, 245, 391, 501, 523], "einsum": [6, 102, 109, 177, 224, 226, 245, 391, 501, 523], "einsum_path": [6, 108], "either": [37, 38, 45, 56, 87, 88, 98, 106, 122, 124, 126, 128, 129, 132, 134, 136, 138, 139, 164, 177, 204, 206, 208, 216, 219, 243, 260, 261, 264, 266, 267, 269, 457, 461, 466, 476, 477, 498, 505], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 80, 81, 83, 84, 88, 89, 90, 93, 96, 98, 99, 100, 101, 103, 106, 107, 109, 112, 114, 115, 117, 118, 119, 120, 122, 124, 128, 129, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 202, 204, 207, 213, 224, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 251, 253, 254, 255, 256, 258, 259, 262, 263, 264, 266, 267, 268, 269, 270, 333, 334, 341, 342, 344, 345, 347, 348, 351, 353, 354, 357, 359, 361, 362, 367, 368, 369, 370, 372, 375, 376, 379, 382, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 402, 404, 456, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 493, 494, 495, 497, 499, 500, 501, 502, 503, 505, 507, 509, 511, 513, 514, 515, 516, 517, 519, 521, 523, 526, 536, 539, 543], "element_count": [103, 372, 484], "ellipsi": 108, "els": [0, 106, 220, 276], "elsewher": [119, 173, 506, 526], "empti": [4, 6, 36, 103, 111, 122, 124, 128, 129, 133, 134, 136, 138, 155, 159, 160, 210, 348, 389, 390, 392, 395, 488, 527, 528, 536], "empty_lik": [6, 36, 110, 160, 390, 528], "enabl": [139, 214, 218, 222], "encount": [262, 263, 264, 266, 477], "end": [22, 23, 93, 98, 106, 107, 109, 127, 162, 178, 230, 242, 392], "end_tim": 0, "end_valu": 392, "endian": 106, "endpoint": [23, 162, 230, 242, 505], "engin": 443, "enlarg": 466, "enough": 168, "ensur": 464, "entir": [56, 88, 126, 168, 169, 243, 249, 264, 265, 266, 268, 270, 392, 461, 493, 521], "entiti": 466, "entri": [39, 93, 103, 104, 106, 110, 118, 126, 132, 134, 139, 144, 145, 146, 170, 374, 488, 491, 523, 524], "enumer": 153, "env": 4, "environ": 4, "ep": [140, 214, 218, 385, 459, 487], "epsilon": [214, 459], "epsneg": 140, "equal": [6, 16, 17, 21, 33, 37, 38, 39, 56, 60, 63, 74, 75, 82, 86, 90, 103, 104, 119, 162, 164, 165, 166, 168, 169, 170, 171, 180, 182, 190, 192, 197, 198, 199, 204, 213, 218, 219, 226, 230, 242, 255, 362, 387, 392, 407, 417, 451, 462, 468, 469, 473, 474, 479, 482, 485, 488, 491, 492, 506, 508, 512, 518, 524, 525], "equal_nan": [17, 37, 180, 516], "equat": [210, 221, 225, 226, 539], "equiv": [49, 68, 74, 75, 81, 103, 108, 171, 213, 245, 338, 474, 492, 523, 525], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 79, 87, 88, 91, 92, 93, 101, 102, 103, 104, 105, 109, 116, 118, 143, 150, 151, 152, 170, 193, 223, 224, 225, 229, 243, 246, 255, 258, 278, 333, 334, 346, 360, 368, 371, 381, 383, 386, 391, 394, 396, 405, 406, 407, 435, 461, 462, 465, 472, 473, 478, 485, 494, 495, 497, 501, 504, 514, 516, 518, 523, 524, 536, 543], "error": [88, 104, 108, 113, 126, 131, 170, 205, 243, 457, 461, 488, 491, 524, 529, 536], "essenti": 4, "estim": [86, 169, 409, 426, 505], "et": 10, "etc": [10, 36, 41, 106, 122, 124, 128, 129, 133, 134, 136, 138, 426], "euclidean": 210, "euler_gamma": 9, "evalu": [16, 17, 21, 103, 108, 109, 112, 182, 184, 190, 224, 226, 251, 333, 334, 391, 477, 501], "even": [10, 103, 106, 123, 125, 126, 127, 130, 131, 132, 134, 135, 137, 182, 184, 190, 250, 355, 392, 469, 473], "evenli": [23, 162, 230, 242, 469, 505], "event": 237, "everi": [134, 403, 498], "everywher": [132, 482], "exact": [118, 215, 395], "exactli": [10, 48, 158, 407, 435, 477], "examin": 210, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 346, 348, 351, 352, 353, 355, 360, 362, 366, 368, 371, 372, 373, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536, 543], "exce": [237, 488], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 74, 75, 76, 77, 79, 80, 83, 84, 91, 92, 99, 100, 101, 102, 103, 110, 111, 112, 114, 115, 117, 119, 120, 133, 134, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 170, 171, 172, 173, 179, 183, 185, 186, 195, 196, 197, 198, 199, 215, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 253, 254, 255, 258, 264, 265, 266, 267, 268, 269, 270, 338, 353, 384, 385, 387, 389, 390, 396, 397, 398, 399, 400, 405, 406, 456, 460, 462, 463, 464, 468, 469, 475, 479, 480, 481, 483, 485, 487, 488, 489, 490, 493, 494, 495, 499, 500, 514, 515, 521, 523, 527, 528, 539], "exclud": [11, 12, 22, 230, 407, 451], "exclus": [407, 435], "execut": [3, 4, 40, 41, 42, 82, 86, 113, 156, 256, 267, 410, 412, 413, 423, 428, 444, 543], "executor": 0, "exist": [10, 73, 74, 75, 105, 106, 116, 153, 171, 178, 474, 488, 492, 518, 525, 539], "exp": [6, 10, 115, 117, 121, 220, 234, 236, 243], "exp2": [6, 114, 117], "expand": [99, 116], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 76, 77, 80, 83, 84, 85, 88, 89, 90, 91, 92, 101, 102, 106, 112, 114, 115, 117, 120, 132, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 172, 175, 179, 180, 183, 185, 186, 195, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 253, 254, 255, 258, 262, 263, 265, 267, 268, 269, 270, 384, 385, 387, 396, 397, 398, 399, 400, 405, 406, 458, 460, 461, 462, 468, 469, 473, 475, 479, 480, 481, 482, 483, 487, 489, 490, 493, 494, 495, 499, 500, 514, 515, 521, 526], "explain": [124, 129, 134, 138, 536], "explan": 106, "explicit": 108, "explicitli": [98, 122, 124, 128, 129, 133, 134, 136, 138], "exploit": [10, 135], "explor": [109, 409, 426], "expm1": [6, 114, 115, 234], "expon": [10, 114, 115, 117, 147, 196, 213, 236, 237, 243, 397, 398, 433, 539], "exponenti": [6, 10, 109, 236, 237, 243, 420, 446], "expos": [154, 536], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 108, 109, 196, 231, 543], "extend": [10, 106, 194, 392, 536], "extens": [0, 1, 3, 4, 9, 163, 231, 529], "extra": [106, 132, 158], "extract": [6, 94, 97, 98, 108, 119, 143, 173, 176, 244, 395, 477, 497, 503], "extrapol": 466, "extrema": 539, "ey": [6, 76, 77, 85, 103, 128, 129, 150, 151, 173, 177, 194, 209, 213, 214, 225, 226, 227, 241, 248, 254, 478, 503], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 106, 108, 110, 111, 112, 114, 115, 117, 119, 120, 123, 135, 137, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 164, 165, 166, 167, 172, 175, 179, 183, 184, 185, 186, 195, 196, 197, 198, 199, 213, 216, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 254, 255, 258, 338, 343, 351, 384, 385, 387, 389, 390, 396, 397, 398, 400, 405, 406, 428, 456, 457, 458, 460, 462, 464, 465, 468, 469, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 510, 514, 515, 517, 523, 526, 527, 528], "f0": 106, "f1": 106, "f2": 106, "f4": 68, "f8": [68, 106], "f_contigu": [43, 45, 184, 464], "f_k": 10, "fab": [6, 11, 12], "fact": 207, "factor": [10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 200, 219], "fail": [103, 371, 409], "fallback": [205, 207, 410, 412, 413, 423, 428, 444], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 33, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 64, 65, 67, 68, 79, 85, 86, 88, 90, 93, 100, 103, 106, 108, 109, 111, 112, 118, 139, 153, 156, 160, 162, 165, 166, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 198, 199, 200, 201, 212, 214, 216, 218, 222, 223, 229, 230, 238, 239, 240, 241, 242, 243, 247, 249, 250, 251, 253, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 276, 333, 334, 335, 336, 338, 356, 357, 358, 363, 375, 377, 382, 386, 387, 390, 399, 401, 461, 464, 465, 477, 480, 485, 493, 495, 516, 520, 521, 526, 528], "famili": 10, "fanci": 497, "fashion": [237, 536], "fast": [10, 121, 122, 124, 128, 129, 134, 135, 138], "faster": [10, 150, 151], "fastest": [103, 184, 351, 456, 465], "fb": [109, 510], "featur": 106, "fetch": 465, "few": 139, "fft": [6, 529, 539], "fft2": [6, 121, 124, 128], "fftfreq": [6, 10, 121, 125, 130, 137], "fftn": [6, 121, 122, 129, 135, 138], "fftshift": [6, 10, 122, 124, 129, 130], "fh": 155, "field": [106, 251], "field1": 106, "file": [154, 155, 157, 158, 163, 231], "filenam": [155, 231], "fill": [6, 22, 36, 103, 110, 111, 139, 159, 160, 168, 169, 251, 259, 343, 389, 390, 466, 506, 527, 528], "fill_diagon": 6, "fill_valu": [159, 160], "filt": 510, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 482, 506, 508, 512, 520, 527, 528], "final": [4, 10, 134, 135, 136, 138, 162, 242], "find": [34, 57, 100, 103, 120, 168, 214, 218, 222, 370, 385, 386, 463, 476, 485, 487, 516, 539], "fine": 4, "finfo": [218, 385, 459, 487], "finfo_object": 140, "finit": [42, 183, 185, 186, 187, 188, 259, 487], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 62, 63, 64, 73, 74, 75, 80, 87, 88, 98, 101, 102, 103, 106, 109, 112, 115, 122, 124, 126, 128, 129, 144, 147, 149, 150, 151, 152, 161, 164, 165, 166, 168, 169, 170, 172, 177, 178, 180, 184, 192, 194, 195, 197, 198, 199, 202, 204, 211, 215, 224, 225, 227, 228, 231, 236, 237, 238, 240, 241, 244, 245, 247, 248, 250, 251, 253, 254, 255, 258, 260, 261, 351, 387, 391, 392, 395, 397, 398, 399, 456, 462, 465, 468, 470, 472, 474, 476, 477, 485, 486, 490, 494, 495, 496, 498, 501, 503, 514, 516, 518, 522, 523, 524, 525], "fit": [210, 463], "fix": [6, 35, 70, 98, 106, 148, 402, 469, 473, 515], "flag": [43, 45, 103, 106, 184, 343, 464], "flanneri": 10, "flat": [31, 32, 103, 107, 142, 351, 353, 456, 457, 463, 517], "flatnonzero": [6, 386], "flatten": [6, 22, 31, 32, 33, 74, 75, 85, 89, 90, 93, 94, 97, 98, 103, 107, 139, 143, 168, 169, 178, 229, 247, 250, 253, 260, 261, 262, 263, 267, 269, 350, 365, 373, 386, 391, 403, 456, 457, 463, 470, 485, 497, 498, 503, 516, 517, 522], "flexibl": [102, 106, 155, 215], "flip": [6, 59, 61, 98, 139, 145, 146, 179, 204, 409, 472], "fliplr": [6, 98, 139, 144, 146, 204, 472], "flipud": [6, 98, 139, 144, 145, 204, 472], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 68, 80, 88, 90, 106, 110, 111, 115, 119, 120, 123, 137, 140, 141, 147, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 173, 175, 196, 210, 213, 214, 216, 218, 229, 230, 231, 236, 237, 242, 243, 247, 249, 250, 253, 259, 265, 268, 270, 385, 389, 390, 397, 398, 407, 411, 436, 437, 439, 440, 442, 445, 446, 448, 451, 458, 459, 460, 461, 475, 482, 493, 506, 519, 521, 527, 528, 536, 539], "float16": [9, 147], "float32": [0, 9, 42, 44, 49, 68, 89, 103, 106, 108, 147, 338, 385, 407, 429, 434, 436, 437, 439, 440, 442, 448, 451, 464, 467], "float64": [0, 9, 44, 49, 56, 68, 90, 103, 106, 108, 338, 407, 408, 414, 415, 416, 418, 420, 421, 422, 429, 430, 433, 434, 436, 437, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 467, 482, 487, 524], "float_pow": [6, 397, 398], "floor": [6, 35, 70, 141, 149, 255, 462, 469, 473, 515], "floor_divid": [6, 255, 462], "flop": 109, "flush": 155, "fmax": [6, 151, 247, 248, 254, 264, 397, 398], "fmin": [6, 150, 248, 253, 254, 266, 397, 398], "fmod": [6, 255, 397, 398, 462], "fn": 156, "fname": 231, "follow": [4, 10, 56, 106, 116, 132, 140, 153, 174, 206, 208, 216, 218, 224, 392, 464, 501, 536, 539], "forc": [106, 108], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 73, 79, 94, 97, 103, 105, 108, 109, 128, 129, 132, 159, 160, 162, 182, 190, 193, 204, 212, 223, 227, 230, 242, 246, 381, 392, 466, 474, 520, 525], "format": [106, 153, 155, 158, 539], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 403, 498], "forth": [224, 501], "fortran": [45, 49, 103, 184, 338, 351, 456, 457, 464, 465, 517], "forward": [10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 164], "found": [4, 476, 536], "four": [407, 436], "fourier": [10, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 529], "fourth": 122, "frac": [10, 505], "fraction": [256, 515], "free": [103, 368], "freedom": [268, 270, 449, 493, 521], "freq": [123, 125, 130, 137], "freq_spectrum": 126, "frequenc": [10, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137], "freshli": [187, 188, 523], "frexp": [6, 196], "fro": [201, 212, 216, 229], "frobeniu": [201, 216], "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 68, 71, 74, 75, 79, 81, 88, 91, 92, 94, 95, 97, 98, 103, 105, 106, 108, 110, 111, 115, 118, 119, 123, 127, 136, 137, 138, 144, 147, 153, 154, 155, 156, 157, 158, 159, 160, 164, 168, 171, 173, 176, 178, 193, 196, 205, 207, 208, 214, 215, 227, 231, 243, 244, 251, 252, 339, 343, 374, 379, 388, 389, 390, 392, 395, 399, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 461, 465, 466, 467, 472, 474, 476, 477, 490, 491, 492, 495, 497, 498, 503, 506, 508, 510, 512, 513, 516, 518, 519, 520, 525, 526, 527, 528, 539], "from_": 68, "from_dlpack": 6, "frombuff": [6, 155, 157, 158, 231], "fromfil": [6, 154, 157, 158], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 154, 155, 158], "frompyfunc": 6, "fromregex": [6, 231], "fromstr": [6, 154, 155, 157, 231], "front": 510, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "full_lik": [6, 36, 111, 159, 390, 528], "full_matric": 222, "fulli": [106, 250], "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 79, 82, 86, 88, 91, 92, 98, 101, 103, 108, 110, 111, 113, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 134, 135, 138, 139, 147, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 173, 184, 193, 202, 204, 205, 207, 211, 212, 215, 216, 217, 223, 224, 227, 228, 229, 231, 234, 236, 237, 243, 244, 246, 251, 255, 256, 267, 333, 334, 343, 346, 353, 368, 371, 381, 389, 390, 392, 397, 398, 403, 405, 406, 407, 410, 412, 413, 423, 428, 444, 456, 461, 462, 464, 466, 473, 474, 479, 482, 493, 497, 498, 501, 502, 508, 509, 512, 513, 514, 518, 521, 525, 526, 527, 528, 529, 536, 539], "fundament": [10, 106], "further": [93, 508, 512], "futur": [106, 169], "fweight": 86, "g": [4, 10, 106, 110, 111, 119, 159, 160, 173, 216, 389, 390, 407, 506, 527, 528, 543], "gamma": [6, 447], "gauss": 10, "gaussian": [407, 429, 453], "gc": 109, "gcd": [6, 195], "gcf35d832238": 6, "gen": 108, "gender": 106, "gener": [4, 10, 33, 56, 106, 127, 132, 135, 138, 162, 177, 205, 206, 207, 208, 212, 218, 219, 229, 231, 242, 407, 409, 412, 443, 456, 487, 505, 508, 512, 520, 536, 539], "genfromtxt": [6, 231], "geometr": [6, 162, 230], "geomspac": [6, 230, 242], "get": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 96, 97, 103, 110, 111, 119, 123, 126, 132, 134, 137, 147, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 223, 228, 230, 231, 242, 244, 252, 343, 371, 388, 389, 390, 392, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 498, 506, 508, 509, 512, 513, 520, 523, 527, 528, 536], "get_arrai": 103, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 407], "get_sycl_devic": 407, "get_sycl_queu": 407, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 106], "getter": [103, 371], "gid": 169, "github": 153, "give": [10, 97, 103, 147, 169, 381, 465, 478, 484, 516], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 73, 79, 85, 86, 89, 90, 99, 102, 103, 105, 106, 107, 109, 110, 111, 118, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 150, 151, 159, 160, 162, 164, 168, 169, 178, 180, 209, 216, 224, 228, 230, 242, 244, 247, 248, 250, 251, 253, 254, 262, 263, 264, 266, 267, 268, 269, 270, 335, 336, 338, 344, 345, 358, 363, 364, 369, 372, 375, 377, 382, 386, 389, 390, 395, 399, 401, 402, 407, 412, 434, 451, 461, 463, 464, 465, 469, 470, 471, 472, 474, 476, 477, 484, 488, 493, 495, 497, 501, 502, 505, 506, 516, 518, 521, 523, 525, 527, 528, 536], "global": 0, "golub": 216, "good": 419, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 79, 94, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 230, 231, 242, 252, 388, 389, 390, 506, 520, 527, 528], "grade": 106, "gradient": [6, 99, 107, 210], "graphic": 4, "great": 10, "greater": [6, 60, 63, 103, 104, 112, 149, 166, 197, 198, 199, 214, 219, 362, 387, 392, 468, 477, 479, 491, 519], "greater_equ": [6, 112, 165, 198, 199, 387], "greatest": [149, 161, 195], "greedi": [108, 109], "grid": [40, 41, 42, 156, 176, 217, 251, 252, 388, 391], "group": [34, 386], "guarante": [106, 464, 465], "guid": [2, 3], "gumbel": 6, "gz": 231, "h": [163, 200, 216, 219, 251], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 88, 89, 90, 100, 106, 112, 116, 126, 131, 132, 156, 164, 165, 166, 171, 175, 181, 182, 189, 190, 198, 199, 207, 220, 222, 227, 243, 249, 250, 255, 262, 263, 265, 267, 268, 269, 270, 387, 392, 399, 458, 459, 460, 461, 462, 463, 471, 475, 477, 491, 492, 493, 495, 496, 497, 502, 503, 517, 521, 536], "had": [403, 498], "hadamard": 109, "half": [14, 25, 122, 124, 125, 126, 128, 129, 230, 407, 437, 439, 440, 442, 451, 496], "ham": 6, "han": 6, "hand": [87, 202, 226], "handl": [23, 106, 120, 231, 386, 403, 457, 497, 498, 539], "happen": [49, 56, 103, 338, 409, 505], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 106, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 73, 74, 75, 76, 77, 80, 83, 84, 87, 88, 89, 90, 91, 92, 101, 102, 105, 106, 112, 114, 115, 117, 120, 128, 129, 138, 140, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 171, 172, 175, 179, 180, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 204, 210, 212, 215, 217, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 248, 249, 250, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 384, 385, 387, 395, 396, 397, 398, 399, 400, 405, 406, 426, 458, 460, 461, 462, 463, 464, 465, 468, 469, 473, 474, 475, 479, 480, 481, 482, 483, 487, 489, 490, 492, 493, 494, 495, 499, 500, 502, 514, 515, 519, 521, 523, 525, 536], "hd": 109, "header": 163, "heavisid": 6, "hello": 106, "help": 543, "helper": 539, "henc": [116, 164], "here": [6, 33, 106, 108, 126, 131, 132, 485, 508, 512], "hermit": [206, 208], "hermitian": [126, 131, 132, 134, 135, 200, 205, 206, 207, 208, 214, 218, 222, 223, 539], "hfft": [6, 10, 131], "hierarchi": 192, "high": [132, 407, 435, 438, 451], "higher": [103, 108, 170, 178, 355, 522, 524], "highest": 121, "highli": 155, "hist": [168, 445], "hist_0": 169, "hist_1": 169, "histogram": [6, 100, 169, 476, 539], "histogram2d": 6, "histogram_bin_edg": [6, 168], "histogramdd": [6, 168], "hold": [72, 89, 90, 168, 216, 250, 262, 263, 267, 269, 456, 503], "homogen": 106, "hopkin": 216, "horizont": [73, 74, 75, 98, 105, 139, 144, 170, 171, 204, 472, 474, 488, 492, 525], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 506, 508, 512, 520, 527, 528], "household": 219, "how": [0, 4, 106, 132, 135, 164, 402, 403, 457, 497, 498, 508, 512], "howev": [103, 373, 497], "hsplit": [6, 74, 75, 488], "hstack": [6, 73, 74, 75, 105, 474, 488, 492, 525], "http": [4, 153], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 481, 483, 499, 500, 539], "hypergeometr": 6, "hypot": [6, 461], "hypotenus": [172, 461], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 338, 343, 353, 355, 362, 368, 371, 373, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536, 543], "i0": 6, "i1": [103, 106, 376], "i2": [103, 106, 376], "i3": [103, 376], "i4": [68, 106], "i7": 108, "i8": [68, 106], "iaxi": 392, "iaxis_pad_width": 392, "icpx": 4, "icx": 4, "id": [16, 21], "ideal": 482, "ident": [3, 6, 16, 21, 42, 88, 106, 119, 130, 139, 221, 228, 446, 523], "identifi": 106, "idx": 178, "ieee": 140, "ifft": [6, 121, 128, 129, 131, 132, 137], "ifft2": [6, 122, 127, 129], "ifftn": [6, 124, 127, 128], "ifftshift": [6, 10, 125, 129], "ignor": [31, 32, 87, 106, 150, 151, 158, 168, 169, 247, 248, 249, 253, 254, 260, 261, 264, 265, 266, 268, 270, 493, 521], "ihfft": [6, 126], "ii": [108, 430], "iinfo": 424, "iinfo_object": 174, "ij": [108, 109, 251], "ijk": 108, "il": 109, "il1": 508, "il2": 508, "illustr": 207, "ilm": 108, "im": [217, 391], "imag": [6, 10, 20, 37, 103, 458, 459, 466, 536], "imaginari": [20, 37, 103, 132, 150, 151, 175, 181, 182, 189, 190, 205, 206, 208, 213, 248, 254, 259, 352, 458, 459, 486, 516], "implement": [3, 4, 6, 44, 121, 153], "impli": [106, 456], "implicit": 108, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 346, 348, 351, 352, 353, 355, 360, 362, 366, 371, 372, 373, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 432, 441, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "improv": 108, "in1d": 6, "in_array1": 113, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 79, 88, 94, 97, 100, 108, 109, 120, 159, 160, 162, 163, 168, 169, 182, 190, 218, 230, 242, 243, 249, 250, 264, 265, 266, 268, 270, 407, 451, 461, 482, 493, 520, 521], "include_initi": 88, "inclus": [407, 435, 438, 477], "increas": [100, 106, 116, 127, 132, 168, 392, 466, 520], "ind": [33, 100, 225, 402, 403, 508, 509, 512, 513], "independ": 202, "index": [4, 22, 31, 32, 33, 34, 71, 103, 106, 109, 119, 122, 128, 136, 143, 153, 176, 178, 184, 193, 251, 260, 261, 339, 351, 353, 376, 386, 402, 403, 456, 457, 465, 466, 476, 477, 488, 497, 498, 508, 512, 516, 517, 526, 529, 539], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 88, 93, 95, 96, 100, 103, 104, 106, 108, 109, 118, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 153, 156, 168, 170, 178, 225, 226, 244, 245, 252, 260, 261, 335, 336, 337, 361, 364, 370, 379, 386, 394, 402, 403, 457, 476, 479, 480, 485, 488, 497, 498, 504, 508, 509, 512, 513, 516, 517, 523, 524, 526], "indices_or_sect": [39, 104, 170, 488, 524], "indirect": [33, 485], "individu": 417, "inequ": 387, "inexact": [147, 259, 267, 269], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 80, 101, 180, 183, 185, 186, 187, 188, 201, 212, 216, 229, 232, 233, 235, 248, 254, 259, 260, 261, 264, 266, 269, 400, 487, 489, 514], "infer": [42, 88, 243, 461, 465], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 149, 183, 185, 186, 187, 188, 255, 259, 264, 266, 269, 462, 515, 539], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 201, 216, 482], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 103, 106, 126, 132, 134, 140, 349, 464, 536, 539], "initi": [18, 19, 88, 103, 110, 158, 247, 253, 264, 266, 267, 269, 356, 358, 363, 377, 399, 407, 495], "inner": [6, 87, 108, 109, 211, 215, 245, 391], "innermost": [204, 212, 227, 246], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 72, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 351, 360, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 429, 435, 451, 456, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 514, 515, 516, 519, 520, 521, 522, 523, 524, 527, 528], "insert": [6, 22, 31, 32, 93, 98, 100, 103, 108, 116, 162, 168, 230, 242, 260, 261, 264, 266, 370, 403, 465, 476, 477, 539], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 126, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 173, 176, 230, 231, 242, 244, 245, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 523, 527, 528], "instead": [34, 49, 98, 102, 103, 108, 116, 148, 162, 168, 169, 176, 184, 215, 230, 237, 242, 247, 253, 338, 386, 399, 457, 466, 495, 536], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 44, 56, 66, 67, 74, 75, 85, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 103, 104, 106, 110, 111, 112, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 170, 173, 174, 176, 178, 202, 204, 210, 213, 216, 224, 225, 226, 227, 228, 229, 230, 242, 243, 244, 247, 249, 250, 253, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 353, 360, 372, 381, 383, 389, 390, 392, 393, 394, 399, 402, 403, 407, 435, 438, 457, 461, 463, 465, 466, 470, 471, 472, 473, 484, 485, 488, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 516, 517, 518, 519, 520, 521, 523, 524, 527, 528, 536], "int16": 106, "int32": [0, 9, 44, 68, 106, 110, 111, 119, 154, 157, 159, 160, 173, 231, 267, 269, 389, 390, 407, 409, 417, 419, 424, 426, 432, 435, 451, 467, 495, 506, 527, 528], "int64": [0, 9, 68, 106, 267, 269, 467], "int8": [106, 399], "int_": 9, "int_0": 505, "int_t": 505, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 88, 89, 90, 100, 103, 104, 106, 141, 144, 147, 148, 149, 153, 161, 168, 170, 174, 179, 193, 195, 196, 197, 213, 216, 224, 225, 227, 229, 243, 247, 249, 253, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 373, 381, 397, 398, 399, 402, 407, 435, 438, 443, 457, 461, 462, 463, 465, 468, 469, 470, 472, 473, 476, 477, 478, 488, 490, 493, 495, 497, 501, 503, 515, 516, 517, 519, 521, 524, 536], "integer_lik": [224, 501], "integr": [3, 4, 56, 88, 90, 147, 168, 243, 249, 250, 256, 265, 268, 270, 397, 398, 461, 493, 495, 505, 521], "intel": [3, 108], "intend": [103, 381], "intent": 147, "interchang": [103, 257, 378, 496], "interfac": [0, 154], "interior": 164, "intermedi": [89, 108, 109], "intern": [33, 407, 485], "interp": 6, "interpol": [132, 466, 482], "interpret": [2, 40, 41, 42, 48, 67, 79, 103, 106, 126, 132, 134, 154, 193, 244, 353, 386, 402, 536], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 100, 116, 162, 230, 242, 407, 435, 437, 439, 440, 442, 450, 451, 496], "intp": [267, 269], "intrins": 536, "introduc": 470, "introduct": 10, "introselect": [103, 362, 393], "inv": [6, 201, 218], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 196, 209, 218, 225, 226, 234, 453, 481, 483, 499, 500, 516], "invert": [6, 59, 61, 209, 218, 225], "invok": 536, "involv": 225, "io": [153, 231], "irfft": [6, 123, 126, 131, 133, 134, 135, 137], "irfft2": [6, 132, 134, 136], "irfftn": [6, 132, 133, 138], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 106, "isbuiltin": 106, "isclos": [6, 17], "iscomplex": [6, 182, 189], "iscomplexobj": [6, 181, 190], "isdtyp": 6, "isfinit": [6, 185, 186, 187, 188, 259, 264, 266, 269], "isfortran": 6, "isin": 6, "isinf": [6, 183, 186, 187, 188, 259], "isn": 106, "isnan": [6, 183, 185, 187, 188, 259, 262, 263, 264, 266, 267, 269], "isnat": [6, 186], "isneginf": [6, 183, 185, 186, 188, 259], "isposinf": [6, 183, 185, 186, 187, 259], "isreal": [6, 181, 190], "isrealobj": [6, 182, 189], "isscalar": 6, "issu": 128, "issubdtyp": 6, "item": [6, 34, 103, 154, 155, 157, 516, 529], "item_dtyp": 106, "item_hasobject": 106, "item_is_point": 106, "items": [103, 106], "iter": [6, 40, 41, 42, 103, 109, 142, 154, 155, 157, 158, 350, 351, 403, 456, 466, 498, 518, 539], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 94, 103, 126, 132, 134, 140, 168, 169, 173, 205, 206, 207, 208, 215, 218, 226, 249, 265, 268, 270, 381, 394, 444, 456, 461, 465, 485, 493, 504, 505, 506, 521, 536], "itself": [49, 103, 106, 196, 259, 338, 536], "iu": 244, "iu1": [244, 512], "iu2": 512, "ix_": 6, "ixgrid": 193, "j": [36, 76, 77, 103, 108, 122, 124, 126, 127, 128, 129, 131, 132, 135, 136, 138, 147, 156, 175, 176, 194, 200, 205, 206, 216, 217, 224, 227, 235, 245, 259, 381, 391, 400, 403, 458, 486, 490, 498, 501], "j1": 194, "jame": 10, "ji": 108, "jil": 108, "jk": [108, 109], "jl": 109, "john": [10, 216], "join": [73, 74, 75, 105, 171, 178, 474, 488, 492, 518, 525, 539], "jump": [91, 405], "just": [73, 98, 106, 122, 128, 133, 135, 136, 178], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 94, 97, 101, 103, 108, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 160, 161, 165, 166, 167, 172, 175, 179, 183, 185, 186, 194, 195, 196, 197, 198, 199, 210, 219, 221, 222, 223, 224, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 248, 254, 255, 258, 278, 338, 343, 384, 385, 387, 390, 396, 397, 398, 400, 405, 406, 456, 458, 460, 462, 468, 469, 472, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 501, 506, 507, 508, 509, 511, 512, 513, 514, 515, 519, 523, 526, 528, 543], "kaiser": 6, "kappa": 452, "keep": [48, 49, 103, 338, 516], "keepdim": [16, 18, 19, 21, 31, 32, 56, 85, 103, 212, 216, 229, 243, 247, 249, 250, 253, 260, 261, 264, 265, 266, 267, 268, 269, 270, 333, 334, 335, 336, 356, 357, 358, 363, 375, 377, 382, 399, 401, 403, 461, 493, 495, 498, 521], "kei": [3, 33, 103, 106, 142, 283, 328, 485], "kernel": 482, "key2": 106, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 79, 80, 83, 84, 87, 91, 92, 94, 95, 97, 101, 103, 110, 111, 114, 115, 117, 119, 120, 123, 137, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 172, 173, 176, 179, 195, 196, 197, 202, 204, 211, 217, 227, 228, 231, 233, 234, 235, 236, 237, 244, 245, 248, 252, 254, 255, 256, 258, 259, 343, 384, 385, 388, 389, 390, 392, 396, 397, 398, 400, 405, 406, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 460, 462, 465, 468, 469, 475, 479, 480, 481, 483, 487, 494, 499, 500, 506, 508, 512, 514, 515, 520, 523, 526, 527, 528, 536], "ki": 108, "kind": [33, 49, 68, 74, 75, 81, 88, 103, 106, 108, 140, 171, 215, 243, 245, 337, 338, 362, 373, 393, 461, 465, 474, 485, 492, 523, 525, 539], "kl": [10, 108, 109], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 155, 445], "kron": 6, "kroneck": 194, "kth": [103, 362, 393], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 80, 83, 84, 91, 92, 101, 103, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 156, 161, 165, 166, 167, 172, 179, 183, 185, 186, 195, 196, 197, 198, 199, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 254, 255, 256, 258, 309, 340, 384, 385, 387, 392, 396, 397, 398, 400, 405, 406, 460, 462, 468, 469, 475, 479, 480, 481, 483, 487, 489, 490, 494, 499, 500, 514, 515], "l": [10, 39, 106, 200, 206, 208, 227], "la": [205, 207, 208], "label": 108, "laid": 45, "lam": 432, "lambda": 156, "lanczo": 482, "lapack": [205, 207], "laplac": 6, "laptop": 4, "larg": [10, 91, 106, 168, 218, 259, 405, 519, 543], "larger": [108, 121, 122, 124, 127, 128, 129, 131, 133, 134, 135, 136, 138, 140, 466, 503, 519], "largest": [10, 109, 135, 140, 148, 174, 210, 216, 255, 259, 462], "largest_singular_valu": 218, "last": [16, 21, 22, 33, 87, 98, 99, 103, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 144, 162, 164, 177, 184, 204, 215, 223, 224, 227, 230, 242, 245, 351, 355, 392, 399, 456, 465, 470, 476, 485, 491, 495, 501, 518, 519, 523], "later": [392, 543], "latest": [4, 153], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 150, 151, 248, 254, 403, 498], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 108, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 165, 166, 167, 172, 175, 179, 183, 185, 186, 195, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 254, 255, 258, 343, 349, 384, 385, 387, 389, 390, 396, 397, 398, 400, 405, 406, 456, 458, 460, 462, 464, 465, 468, 469, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 514, 515, 523, 526, 527, 528, 529], "lcm": [6, 161], "ldexp": 6, "ldot": 10, "lead": [127, 128, 129, 262, 263, 510], "learn": [3, 4, 237], "least": [53, 54, 55, 56, 96, 105, 106, 109, 116, 139, 145, 150, 151, 155, 182, 210, 219, 248, 254, 474, 525], "left": [10, 28, 31, 32, 35, 50, 60, 63, 85, 98, 100, 103, 145, 146, 197, 207, 212, 216, 229, 247, 253, 260, 261, 267, 269, 370, 399, 450, 468, 473, 476, 495, 505, 520], "left_shift": [6, 60, 63, 468], "leg": [172, 461], "legaci": 443, "legal": 178, "len": [93, 103, 106, 124, 125, 126, 129, 131, 132, 133, 134, 138, 176, 210, 247, 251, 252, 253, 301, 478, 520], "length": [23, 39, 56, 89, 90, 99, 112, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 158, 162, 164, 168, 171, 205, 222, 223, 224, 242, 247, 250, 251, 253, 262, 263, 392, 403, 410, 465, 467, 474, 476, 477, 478, 491, 498, 501, 502, 525], "less": [6, 89, 90, 103, 112, 165, 166, 168, 169, 199, 210, 218, 227, 262, 263, 267, 269, 355, 387, 399, 477, 479, 495, 503], "less_equ": [6, 112, 165, 166, 198, 387], "let": [228, 409, 465, 523], "level": [529, 536], "level_zero": [23, 36, 40, 41, 42, 43, 45, 79, 94, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 230, 231, 242, 252, 388, 389, 390, 506, 520, 527, 528], "lexicograph": 516, "lexsort": [6, 33, 485], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 470, 471], "librari": [3, 4, 536], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 73, 93, 103, 105, 108, 110, 119, 134, 154, 155, 156, 157, 158, 159, 162, 173, 178, 230, 231, 242, 244, 338, 351, 360, 383, 389, 403, 407, 451, 456, 464, 465, 498, 527, 539], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 76, 77, 79, 80, 82, 83, 84, 86, 91, 92, 101, 103, 106, 110, 111, 112, 113, 114, 115, 117, 119, 120, 140, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 172, 173, 174, 179, 183, 185, 186, 195, 196, 197, 198, 199, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 264, 265, 266, 267, 268, 269, 270, 338, 340, 384, 385, 387, 389, 390, 393, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 433, 435, 438, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 460, 462, 464, 468, 469, 475, 479, 480, 481, 482, 483, 485, 487, 489, 490, 493, 494, 495, 499, 500, 514, 515, 521, 523, 527, 528], "linalg": [6, 87, 98, 102, 108, 109, 245, 246, 391, 490, 501, 503, 522, 523], "line": [210, 231], "linear": [10, 78, 82, 210, 221, 242, 392, 529, 539], "linear_ramp": 392, "linspac": [0, 6, 23, 113, 162, 217, 242, 251, 391, 482, 505, 519], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 65, 74, 75, 79, 94, 97, 103, 104, 105, 106, 108, 109, 125, 130, 139, 159, 160, 162, 164, 170, 171, 182, 190, 224, 230, 231, 242, 245, 250, 381, 394, 457, 463, 464, 466, 467, 474, 477, 488, 492, 501, 504, 517, 518, 520, 523, 524, 525, 526], "list_pickl": 106, "littl": 106, "ln": 242, "load": [6, 155, 231], "loadtxt": [6, 155], "loan": 216, "loc": [407, 418, 420, 421, 429, 453], "local": 4, "locat": [0, 4, 163, 187, 188, 244, 391, 418, 420, 476, 523], "log": [6, 117, 162, 220, 230, 233, 234, 235, 236, 242, 243, 422], "log10": [6, 232, 234, 235], "log1p": [6, 115, 117, 232, 233, 235], "log2": [6, 232, 233, 234, 237], "log_bas": 242, "logabsdet": 220, "logaddexp": [6, 88, 237, 243], "logaddexp2": [6, 236, 243], "logarithm": [88, 203, 220, 230, 232, 233, 234, 235, 236, 237, 243, 423, 539], "logic": [16, 21, 238, 239, 240, 241, 529, 539], "logical_and": [6, 58, 239, 240, 241], "logical_not": [6, 59, 61, 179, 238, 240, 241], "logical_or": [6, 62, 238, 239, 241], "logical_xor": [6, 64, 238, 239, 240], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 162, 230], "logsumexp": [88, 236, 237], "lomax": 430, "long": [106, 213], "longer": [126, 132, 543], "look": [385, 498], "loop": 108, "loos": 107, "lorentz": 445, "lose": [126, 132, 134], "low": [122, 124, 128, 129, 407, 435, 438, 451, 536], "lower": [94, 119, 168, 169, 192, 200, 206, 208, 244, 506, 507, 508, 509, 512, 513], "lowest": [56, 108, 109, 161, 195, 407, 435], "lstsq": 6, "m": [4, 10, 86, 105, 106, 108, 119, 122, 124, 126, 128, 129, 132, 133, 134, 138, 144, 145, 146, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 227, 244, 245, 246, 250, 403, 472, 477, 497, 498, 506, 507, 508, 509, 511, 512, 513], "machin": [4, 10, 140, 174, 210, 237, 459], "machineri": 106, "made": [36, 41, 53, 106, 153, 194, 259, 465, 488], "magnitud": [11, 12, 80, 120, 400], "mai": [16, 20, 21, 49, 68, 72, 74, 75, 81, 90, 103, 106, 108, 109, 116, 122, 124, 126, 127, 128, 129, 131, 132, 135, 138, 164, 169, 171, 201, 205, 206, 210, 212, 216, 219, 237, 242, 245, 259, 265, 268, 270, 338, 371, 403, 456, 459, 466, 474, 482, 492, 502, 523, 525, 536], "main": [94, 95, 96, 97, 98, 119, 139, 173, 204, 208, 227, 244, 503, 506, 507, 508, 511, 512], "mainstai": 10, "maintain": [33, 100, 103, 106, 168, 370, 476, 485, 498], "major": [4, 40, 41, 42, 43, 45, 48, 49, 103, 338, 386, 456, 457, 464, 517], "make": [43, 45, 73, 106, 217, 251, 391, 464, 482, 516, 519], "manag": 0, "mandelbrot": [217, 391], "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 456, 536], "manipul": [3, 95, 529, 539], "mantissa": 196, "manual": [4, 106, 502], "mappingproxi": 106, "mask": [93, 106, 193, 244, 386, 395, 404, 497, 508, 512], "mask_func": 244, "mask_indic": [6, 508, 512], "mass": 168, "match": [11, 12, 41, 74, 75, 81, 85, 88, 99, 106, 153, 155, 164, 177, 224, 243, 245, 402, 403, 461, 492, 497, 498, 501, 526], "math": [10, 113], "mathbf": [228, 523], "mathemat": [216, 529, 539], "matlab": 152, "matmul": [6, 102, 219, 222, 522], "matplotlib": [251, 445], "matric": [139, 156, 176, 193, 203, 204, 205, 207, 209, 212, 214, 216, 218, 219, 220, 222, 223, 227, 245, 246, 251, 539], "matrix": [86, 102, 103, 108, 177, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 227, 245, 246, 251, 355, 490, 511, 520, 522, 523, 529, 539], "matrix_norm": [6, 216], "matrix_pow": [6, 490], "matrix_rank": 6, "matrix_transpos": 6, "matter": 516, "max": [0, 6, 18, 31, 72, 103, 140, 150, 151, 168, 169, 174, 210, 214, 216, 218, 248, 253, 254, 264, 340, 424, 498, 502, 519, 536], "max_arg": 0, "max_val": 0, "maxima": [150, 247, 248], "maximum": [0, 6, 18, 31, 32, 72, 103, 109, 150, 151, 247, 253, 254, 260, 261, 264, 266, 335, 356, 392, 397, 398, 401, 403, 519], "may_share_memori": 6, "md": 216, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 79, 85, 94, 95, 97, 103, 108, 110, 111, 119, 122, 123, 124, 128, 129, 133, 134, 135, 136, 137, 138, 154, 155, 156, 157, 158, 159, 160, 164, 173, 176, 201, 216, 231, 244, 250, 252, 265, 268, 270, 338, 343, 351, 381, 388, 389, 390, 392, 407, 420, 422, 425, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 452, 453, 456, 465, 472, 493, 495, 506, 508, 512, 520, 521, 527, 528, 536], "meaningfulli": 536, "meant": 536, "median": [0, 6, 392], "meet": [36, 477], "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 106, 108, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 165, 166, 167, 172, 175, 179, 183, 184, 185, 186, 195, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 250, 251, 254, 255, 258, 343, 349, 376, 384, 385, 387, 389, 390, 396, 397, 398, 400, 405, 406, 456, 458, 460, 462, 464, 465, 468, 469, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 514, 515, 523, 526, 527, 528, 529, 543], "mersenn": 407, "mesh": 193, "meshgrid": [6, 156, 176, 193, 252, 388], "met": [102, 215], "meta": 106, "metadata": 106, "method": [10, 16, 18, 19, 21, 33, 49, 79, 102, 103, 106, 142, 153, 155, 214, 218, 222, 246, 338, 343, 353, 360, 368, 371, 383, 386, 394, 407, 465, 478, 495, 497, 504, 529], "mgrid": [122, 124, 133, 136, 176, 193], "mgridclass": 252, "middl": [10, 98, 122, 124, 128, 129, 207, 250], "might": [108, 127, 128, 129], "min": [6, 19, 32, 72, 103, 140, 150, 151, 168, 169, 174, 201, 204, 210, 216, 219, 222, 223, 247, 248, 254, 266, 340, 498, 536], "min_scalar_typ": 6, "minima": [151, 253, 254], "minimum": [6, 19, 31, 32, 36, 72, 103, 147, 150, 151, 247, 248, 253, 260, 261, 264, 266, 336, 358, 392, 397, 398, 401], "minlength": 57, "mintypecod": 6, "minu": [117, 149, 255, 462, 515], "mirror": 392, "miscellan": [2, 529, 539], "mise": 452, "miss": 231, "mix": [211, 245], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 118, 462, 519], "mode": [71, 78, 82, 103, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 219, 339, 364, 379, 392, 402, 403, 445, 450, 457, 476, 497, 498], "model": [4, 409], "modf": 6, "modifi": [79, 98, 139, 250, 392, 444], "modul": [121, 163, 529], "modulu": [152, 255, 462], "monoton": [100, 168], "moor": 218, "more": [0, 3, 4, 33, 36, 53, 54, 55, 105, 106, 108, 109, 117, 133, 136, 145, 146, 153, 155, 169, 171, 176, 196, 202, 204, 210, 211, 213, 214, 215, 217, 218, 222, 224, 227, 228, 234, 236, 466, 472, 492, 501, 505, 516, 519, 536, 543], "most": [3, 4, 22, 98, 99, 106, 109, 121, 127, 259, 407, 443, 466, 491], "move": [103, 257, 362, 394, 470, 471, 504, 516], "moveaxi": [6, 394, 470, 471, 504, 518], "msg": 0, "mt": [103, 246], "mt19937": 443, "mu": [418, 422, 429, 452], "multi": [2, 103, 176, 193, 202, 252, 376, 388, 457, 516, 529], "multi_dot": [6, 102, 108, 109], "multi_index": 457, "multiarrai": 106, "multidimension": [168, 177, 526], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 74, 75, 87, 88, 104, 106, 108, 122, 124, 128, 129, 133, 134, 136, 138, 161, 169, 170, 171, 178, 193, 195, 202, 205, 206, 207, 208, 209, 215, 243, 247, 249, 253, 264, 265, 266, 268, 270, 456, 461, 474, 477, 485, 488, 492, 493, 505, 516, 518, 521, 524, 525, 529], "multipli": [6, 89, 108, 196, 207, 267, 399], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 425, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 88, 89, 90, 91, 92, 99, 101, 102, 105, 114, 115, 116, 117, 120, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 145, 147, 148, 149, 150, 151, 152, 155, 158, 161, 164, 165, 166, 167, 168, 169, 171, 172, 175, 179, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 202, 204, 215, 216, 217, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 384, 385, 387, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 458, 460, 461, 462, 463, 468, 469, 470, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 487, 489, 490, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 514, 515, 521, 523, 525, 526], "mx": 210, "mxn": [204, 212, 227, 246], "n": [0, 4, 10, 34, 39, 90, 95, 96, 99, 100, 103, 104, 105, 106, 107, 116, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 156, 164, 170, 173, 193, 204, 210, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 244, 245, 246, 250, 251, 268, 270, 381, 392, 394, 395, 402, 403, 409, 424, 426, 436, 446, 476, 478, 488, 490, 493, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 511, 512, 513, 520, 521, 523, 524, 536], "n1": 251, "n2": [231, 251], "n3": 251, "naiv": 109, "name": [0, 6, 106, 218, 482], "namedtupl": 219, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 101, 147, 150, 151, 180, 183, 185, 186, 187, 188, 233, 247, 248, 249, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 397, 398, 399, 487, 489, 493, 514, 516, 521, 539], "nan_to_num": 6, "nanargmax": [6, 31, 261], "nanargmin": [6, 32, 260], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 150, 151, 247, 248, 254, 266], "nanmean": [6, 249, 268, 270, 493, 521], "nanmedian": 6, "nanmin": [6, 150, 151, 248, 253, 254, 264], "nanpercentil": 6, "nanprod": [6, 399], "nanquantil": 6, "nanstd": [6, 249, 265, 270, 493, 521], "nansum": 6, "nanvar": [6, 249, 265, 268, 493, 521], "nat": 186, "nativ": 106, "native_cod": 106, "native_dt": 106, "natur": [220, 232, 233, 234, 235, 236, 237, 243], "nbad": 419, "nbyte": 103, "nd": [103, 353], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 540], "ndim": [6, 34, 36, 43, 45, 53, 54, 55, 86, 95, 98, 103, 106, 139, 194, 216, 222, 223, 246, 247, 253, 389, 394, 502, 504, 527], "ndmin": 36, "ne": 482, "nearest": [35, 70, 141, 148, 149, 255, 462, 469, 473, 487, 515], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 81, 89, 90, 107, 118, 126, 132, 134, 139, 153, 162, 230, 242, 245, 249, 250, 262, 263, 265, 267, 268, 269, 270, 399, 466, 493, 495, 521, 543], "necessarili": [205, 207], "need": [4, 36, 41, 98, 108, 163, 250, 464, 497, 498, 526], "needs_init": 106, "needs_pyapi": 106, "neg": [6, 10, 16, 21, 35, 57, 80, 97, 98, 100, 103, 116, 119, 122, 124, 127, 128, 129, 132, 135, 144, 147, 158, 164, 168, 183, 185, 186, 187, 188, 213, 224, 259, 264, 266, 268, 269, 270, 371, 396, 397, 398, 399, 402, 403, 426, 457, 473, 493, 495, 497, 498, 501, 503, 521], "negat": 477, "negative_binomi": 6, "neginf": 259, "neither": [102, 150, 151, 211, 222, 245, 264, 266], "nest": [44, 105, 171, 474, 492, 518, 525], "nested_it": 6, "net": [150, 151, 248, 254], "never": 519, "new": [22, 36, 49, 65, 66, 67, 73, 74, 75, 85, 88, 89, 90, 93, 98, 103, 105, 106, 107, 110, 111, 116, 150, 151, 153, 157, 158, 159, 160, 162, 171, 173, 178, 230, 242, 243, 244, 248, 250, 254, 257, 262, 263, 267, 269, 338, 368, 371, 381, 389, 390, 394, 461, 465, 466, 470, 471, 474, 488, 492, 502, 504, 518, 525, 526, 527, 528, 536], "new_dtyp": 106, "new_ord": 106, "new_shap": 466, "newaxi": 116, "newbyteord": 106, "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 159, 160, 161, 165, 166, 167, 172, 175, 179, 183, 185, 186, 195, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 254, 255, 258, 338, 343, 384, 385, 387, 389, 390, 396, 397, 398, 400, 405, 406, 458, 460, 462, 468, 469, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 514, 515, 523, 527, 528], "newshap": 465, "next": [4, 140, 385], "nextaft": 6, "ngood": 419, "ni": [251, 403, 497, 498], "nine": 409, "ninja": 4, "nj": [403, 497, 498], "njm": 108, "nk": [403, 497, 498], "nl": 10, "nlk": 108, "nn": 251, "noisi": 210, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 79, 85, 94, 95, 97, 100, 103, 110, 111, 118, 119, 123, 132, 135, 137, 143, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 173, 176, 181, 183, 193, 202, 224, 230, 231, 242, 244, 252, 259, 260, 261, 264, 266, 268, 270, 338, 343, 361, 371, 386, 388, 389, 390, 395, 397, 398, 407, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 493, 501, 506, 508, 512, 520, 521, 526, 527, 528], "nonc": [427, 428], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 85, 103, 143, 193, 526, 536], "nor": [150, 151, 207, 264, 266], "norm": [6, 10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 201, 207, 210, 212, 229, 539], "normal": [6, 86, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 168, 205, 206, 219, 228, 237, 407, 422, 425, 436, 448, 457, 482, 523], "not_equ": [6, 112, 165, 166, 198, 199], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 60, 61, 63, 74, 75, 79, 87, 91, 93, 98, 100, 101, 103, 106, 108, 109, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 148, 150, 151, 154, 155, 156, 157, 158, 168, 176, 178, 179, 183, 196, 197, 202, 204, 205, 212, 216, 224, 229, 231, 242, 250, 255, 258, 268, 269, 270, 343, 368, 386, 392, 394, 395, 397, 398, 402, 405, 410, 412, 413, 423, 428, 456, 462, 464, 465, 466, 468, 472, 482, 485, 487, 493, 494, 496, 501, 502, 504, 505, 514, 516, 518, 519, 521, 522], "notic": [106, 132, 135], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 172, 173, 179, 183, 185, 186, 195, 196, 197, 198, 199, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 253, 254, 255, 258, 264, 265, 266, 268, 269, 270, 338, 384, 385, 387, 389, 390, 396, 397, 398, 399, 400, 405, 406, 456, 460, 462, 464, 468, 469, 475, 479, 480, 481, 483, 485, 487, 489, 490, 493, 494, 495, 499, 500, 514, 515, 521, 523, 527, 528], "now": [16, 21, 43, 45, 95, 207, 210, 244], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 346, 348, 351, 352, 353, 355, 360, 362, 366, 371, 372, 373, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 432, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "nr": 10, "nsamp": 419, "nsampl": 419, "nth": [224, 501], "nuc": [212, 216, 229], "nuclear": 216, "num": [0, 106, 113, 162, 230, 242, 505, 519], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 42, 46, 47, 50, 52, 56, 57, 65, 66, 67, 85, 95, 97, 99, 100, 103, 106, 107, 108, 109, 116, 119, 120, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 149, 154, 155, 157, 158, 162, 164, 168, 169, 173, 174, 180, 181, 182, 183, 190, 193, 196, 201, 209, 214, 216, 219, 220, 222, 225, 226, 230, 237, 242, 255, 259, 262, 263, 264, 266, 267, 268, 269, 270, 360, 369, 372, 383, 386, 392, 394, 395, 399, 400, 407, 409, 419, 443, 462, 463, 466, 469, 470, 471, 472, 473, 480, 484, 487, 493, 496, 502, 504, 506, 515, 516, 520, 521, 536, 539], "number_of_dimens": [103, 360, 383], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 76, 77, 80, 83, 84, 101, 106, 112, 114, 117, 127, 128, 129, 132, 134, 149, 150, 151, 165, 166, 175, 180, 183, 185, 186, 198, 199, 216, 217, 232, 233, 234, 235, 248, 254, 258, 384, 387, 396, 397, 398, 400, 458, 469, 473, 479, 480, 481, 483, 494, 499, 500, 514, 539], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 347, 348, 351, 352, 353, 360, 366, 371, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 536, 539], "nvidia": 4, "nx": 251, "ny": 251, "nyquist": [10, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 137], "o": [4, 16, 21, 106], "obj": [31, 32, 33, 93, 106, 153, 168, 178], "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 79, 94, 95, 97, 103, 106, 110, 111, 116, 119, 123, 137, 140, 142, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 174, 176, 178, 201, 206, 216, 224, 230, 231, 242, 244, 252, 338, 343, 353, 368, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 465, 501, 506, 508, 512, 520, 527, 528, 536], "obsolet": 184, "obtain": [10, 98, 200, 204, 227, 386], "obviou": 10, "occupi": [140, 174], "occur": [22, 49, 68, 74, 75, 81, 93, 103, 108, 171, 178, 205, 245, 259, 338, 474, 492, 523, 525], "occurr": [31, 32, 57, 100, 168, 260, 261, 516], "odd": [10, 123, 126, 130, 131, 132, 134, 135, 137, 250, 392], "off": [23, 126, 131, 204, 205, 210, 227], "offset": [98, 103, 106, 154, 155, 204, 227, 244, 346, 380, 503, 508, 509, 512, 513], "often": [93, 167], "ogrid": [176, 193, 526], "ogridclass": 388, "oil": [409, 426], "old": 466, "omit": [407, 435], "onc": 209, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 78, 81, 82, 85, 93, 103, 106, 110, 112, 116, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 145, 146, 147, 150, 151, 155, 159, 164, 169, 171, 173, 176, 178, 182, 193, 207, 212, 213, 216, 224, 229, 232, 233, 235, 244, 247, 248, 251, 252, 253, 254, 260, 261, 267, 269, 343, 351, 353, 354, 386, 388, 390, 395, 399, 426, 457, 471, 477, 485, 491, 492, 495, 497, 501, 505, 508, 509, 512, 513, 516, 527, 536], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "onedpl": 4, "onemkl": [4, 205, 207], "ones": [6, 36, 43, 45, 56, 88, 93, 101, 103, 108, 110, 111, 112, 116, 119, 138, 159, 160, 172, 173, 194, 210, 214, 217, 243, 244, 262, 267, 390, 391, 394, 399, 461, 467, 471, 504, 506, 514, 527, 528], "ones_lik": [6, 36, 111, 160, 389, 528], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 79, 82, 86, 103, 106, 108, 109, 110, 111, 119, 125, 135, 139, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 176, 184, 200, 206, 208, 211, 214, 216, 217, 218, 219, 222, 230, 231, 242, 244, 245, 247, 249, 253, 259, 260, 261, 264, 265, 266, 267, 268, 270, 338, 353, 371, 373, 389, 390, 393, 395, 396, 399, 407, 429, 435, 451, 456, 464, 465, 482, 485, 493, 495, 498, 512, 516, 519, 521, 523, 526, 527, 528, 536], "open": [155, 176, 193, 230, 388, 407, 437, 439, 440, 442, 451, 496], "opencl": [23, 36, 40, 41, 42, 43, 45, 79, 94, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 230, 231, 242, 252, 388, 389, 390, 506, 520, 527, 528], "oper": [10, 15, 58, 59, 60, 61, 62, 63, 64, 101, 106, 108, 109, 112, 116, 139, 149, 152, 165, 166, 179, 197, 198, 199, 200, 238, 240, 245, 247, 253, 255, 258, 259, 260, 261, 384, 387, 396, 397, 398, 402, 462, 468, 494, 502, 514, 516, 518, 519, 523, 529, 539], "operand": [108, 109, 224, 226, 391, 501], "opposit": [10, 106, 118, 126, 131, 395, 456], "optim": [4, 108, 109, 168, 169], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 210, 212, 214, 215, 216, 218, 219, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 351, 381, 384, 385, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 543], "ord": [212, 216, 229], "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 91, 92, 98, 100, 101, 103, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 122, 124, 127, 128, 129, 132, 134, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 159, 160, 161, 164, 165, 166, 167, 168, 172, 175, 179, 183, 184, 185, 186, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 212, 216, 222, 224, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 251, 254, 255, 257, 258, 278, 337, 338, 343, 351, 362, 365, 368, 370, 373, 381, 384, 385, 386, 387, 389, 390, 393, 394, 396, 397, 398, 400, 405, 406, 456, 457, 458, 460, 462, 464, 465, 466, 468, 469, 472, 475, 476, 479, 480, 481, 482, 483, 485, 487, 489, 490, 494, 499, 500, 501, 504, 514, 515, 516, 517, 520, 523, 526, 527, 528, 539], "ordin": [210, 221], "ordinari": [132, 177, 200], "orient": [87, 403, 498], "origin": [65, 98, 103, 126, 132, 134, 212, 216, 229, 251, 257, 267, 269, 465, 466, 470, 516], "ortho": [10, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138], "orthogon": [207, 219], "orthonorm": 219, "other": [33, 38, 49, 65, 66, 67, 99, 103, 106, 127, 128, 129, 132, 134, 148, 156, 173, 205, 207, 215, 216, 257, 274, 275, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 338, 407, 451, 466, 471, 485, 516, 523, 529, 539], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 76, 77, 79, 80, 82, 83, 84, 85, 86, 91, 92, 94, 99, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 172, 173, 177, 179, 183, 185, 186, 195, 196, 197, 198, 199, 210, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 253, 254, 255, 256, 258, 260, 261, 264, 265, 266, 267, 268, 269, 270, 338, 368, 384, 385, 387, 389, 390, 396, 397, 398, 399, 400, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 464, 465, 468, 469, 475, 476, 479, 480, 481, 483, 485, 487, 489, 490, 491, 493, 494, 495, 499, 500, 503, 514, 515, 521, 523, 526, 527, 528], "otim": [224, 501], "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 209, 211, 212, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 333, 334, 335, 336, 339, 340, 343, 344, 345, 351, 353, 356, 357, 358, 363, 369, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 514, 515, 519, 520, 521, 522, 523, 525, 526, 527, 528], "outer": [6, 87, 98, 108, 109, 194], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 83, 84, 88, 89, 90, 91, 92, 94, 95, 97, 99, 101, 102, 103, 106, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 172, 173, 175, 176, 179, 180, 181, 183, 185, 186, 193, 195, 196, 197, 198, 199, 215, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 262, 263, 265, 267, 268, 269, 270, 338, 343, 384, 385, 387, 388, 389, 390, 396, 397, 398, 399, 400, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 465, 468, 469, 473, 475, 477, 479, 480, 481, 482, 483, 485, 487, 489, 490, 491, 493, 494, 495, 497, 499, 500, 502, 503, 506, 508, 512, 514, 515, 516, 519, 520, 521, 523, 526, 527, 528, 539, 543], "outsid": [168, 169], "over": [10, 16, 21, 56, 88, 89, 90, 102, 103, 108, 109, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 144, 156, 162, 168, 169, 177, 202, 212, 216, 224, 228, 229, 230, 242, 243, 245, 247, 249, 251, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 351, 399, 403, 407, 434, 439, 450, 451, 456, 461, 466, 493, 495, 497, 498, 501, 505, 519, 521, 523, 539], "overal": [122, 124, 128, 129, 133, 134, 136, 138], "overflow": 147, "overlin": [228, 523], "overrid": [87, 111, 160, 390, 528], "overview": 2, "overwrite_input": 250, "p": [10, 201, 210, 213, 409, 412, 417, 423, 426, 519], "pack": [98, 456, 539], "packag": [0, 3], "packbit": 6, "pad": [6, 106, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 466], "pad_valu": 392, "pad_width": 392, "padder": 392, "padding_func": 392, "page": [3, 539], "pair": [10, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 202, 205], "parallel": [1, 3, 4, 9, 529], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 348, 351, 353, 368, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "parameter": [407, 429, 451], "parametr": 505, "pareto": 6, "pars": [155, 231], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 103, 132, 150, 151, 175, 181, 182, 189, 190, 205, 206, 208, 244, 248, 254, 256, 352, 366, 392, 458, 459, 486, 508, 512, 515, 516, 536], "partial": [33, 250, 485], "particular": [106, 215], "particularli": 108, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 485, 506, 508, 512, 520, 527, 528, 536], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 106, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 169, 173, 176, 193, 210, 231, 244, 252, 259, 343, 368, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 464, 506, 508, 509, 512, 513, 520, 523, 527, 528], "path": [4, 108, 109, 155, 231], "path_info": 109, "pathlib": 231, "pattern": 56, "penros": 218, "per": [108, 123, 137, 457], "percentil": [6, 250], "perf_count": 0, "perform": [16, 21, 41, 42, 72, 99, 108, 122, 124, 127, 128, 129, 133, 134, 136, 138, 144, 200, 223, 399, 495], "perhap": 464, "period": [10, 519], "permit": 155, "permut": [6, 103, 108, 257, 381, 394, 504, 539], "permute_dim": [6, 504], "perpendicular": 87, "pg": 216, "phase": [10, 20, 519], "phase_deg": 519, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 91, 92, 121, 405, 481, 482, 483, 499, 500, 505, 519, 543], "pickl": [155, 231], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 72, 74, 75, 89, 90, 93, 102, 103, 116, 118, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 153, 176, 178, 180, 245, 247, 249, 250, 253, 259, 262, 263, 265, 267, 268, 269, 270, 351, 371, 373, 381, 388, 392, 399, 402, 403, 444, 465, 466, 470, 473, 485, 492, 493, 495, 497, 503, 521, 536], "plane": 472, "platform": [89, 90, 106, 262, 263, 267, 269, 399, 495], "pleas": [0, 3, 39, 104, 108, 168, 170, 524, 536], "plot": 445, "plt": [251, 445], "plu": [232, 233, 235], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 80, 88, 106, 110, 111, 115, 119, 120, 121, 126, 127, 131, 132, 133, 134, 135, 140, 141, 147, 154, 155, 156, 158, 159, 160, 164, 173, 175, 196, 210, 213, 230, 231, 236, 237, 243, 249, 250, 259, 265, 268, 270, 385, 389, 390, 407, 436, 448, 458, 460, 461, 473, 475, 476, 482, 493, 505, 506, 521, 527, 528, 539], "pointer": 106, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 76, 77, 80, 83, 84, 91, 92, 101, 103, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 161, 165, 166, 167, 172, 175, 179, 183, 185, 186, 195, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 254, 255, 258, 384, 385, 387, 396, 397, 398, 400, 405, 406, 407, 434, 458, 460, 462, 468, 469, 473, 475, 479, 480, 481, 482, 483, 487, 489, 490, 494, 499, 500, 514, 515], "portion": [168, 169], "posinf": 259, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 69, 80, 97, 98, 103, 116, 119, 120, 122, 124, 127, 128, 129, 132, 135, 137, 140, 147, 155, 180, 183, 185, 186, 187, 188, 200, 213, 225, 257, 259, 264, 266, 269, 362, 376, 384, 394, 409, 433, 470, 471, 473, 475, 477, 489, 490, 503, 504], "possess": 205, "possibl": [10, 48, 49, 54, 55, 103, 104, 108, 109, 116, 150, 151, 164, 168, 170, 244, 338, 368, 394, 403, 456, 465, 488, 491, 496, 497, 498, 504, 524], "possibli": 44, "pow": [6, 398, 536], "power": [6, 10, 115, 121, 147, 213, 397, 490, 520], "pre": 169, "precis": [11, 12, 56, 89, 90, 106, 108, 140, 147, 175, 210, 227, 244, 262, 263, 267, 269, 399, 458, 495, 503], "predecessor": 519, "prefer": [71, 79, 93, 103, 343, 371, 386, 456], "prepend": [36, 99, 107, 502], "present": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 106, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 173, 176, 231, 244, 252, 264, 266, 269, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 506, 508, 512, 520, 527, 528], "preserv": [49, 53, 54, 55, 72, 103, 106, 108, 144, 145, 146, 147, 206, 207, 208, 250, 338, 456, 464, 503, 516], "press": [10, 216], "prevent": 108, "previou": [56, 392], "print": [0, 4, 42, 56, 57, 78, 100, 106, 109, 407, 426, 431], "print_device_info": 0, "printabl": 109, "printopt": 6, "prior": 99, "prob1": [236, 237], "prob12": [236, 237], "prob2": [236, 237], "probabl": [168, 237, 250, 409, 417, 426], "proce": 536, "process": [10, 482], "processor": 108, "prod": [6, 89, 103, 225, 226, 267, 536], "produc": [10, 34, 106, 231, 403, 476, 498], "product": [87, 89, 102, 103, 108, 109, 177, 193, 194, 202, 211, 215, 217, 221, 224, 225, 226, 228, 245, 258, 262, 267, 344, 391, 399, 501, 522, 523, 539], "program": [4, 148], "progress": [162, 230], "project": [4, 106, 228, 400, 523], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 68, 69, 80, 83, 84, 91, 92, 101, 114, 115, 117, 147, 149, 150, 151, 152, 162, 172, 197, 230, 232, 233, 234, 235, 236, 237, 242, 245, 248, 254, 255, 258, 385, 397, 398, 405, 406, 460, 462, 467, 468, 475, 479, 481, 482, 483, 487, 489, 490, 494, 499, 500, 502, 514, 515, 523], "promote_typ": 6, "propag": [106, 150, 151, 247, 248, 253, 254, 262, 263, 264, 266, 267, 269], "proper": [150, 151, 205, 207], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 206, 208, 219, 230, 231, 242, 244, 252, 272, 338, 343, 347, 349, 350, 352, 354, 355, 359, 360, 366, 371, 372, 376, 381, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528, 536], "proport": 482, "protocol": [44, 106, 153], "prototyp": 111, "provid": [0, 6, 10, 31, 32, 36, 74, 75, 81, 88, 103, 104, 108, 109, 116, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 157, 168, 169, 171, 187, 188, 214, 218, 243, 260, 261, 264, 266, 267, 269, 407, 435, 438, 461, 464, 474, 492, 497, 505, 516, 523, 525, 526, 543], "pseudo": [218, 407], "ptp": 6, "pure": [10, 126, 132, 134, 135], "purpos": [34, 210, 216], "put": [6, 10, 103, 118, 126, 132, 134, 395, 403, 498, 536], "put_along_axi": [6, 402, 498], "putmask": [6, 402], "pval": 424, "py": 4, "pypi": 4, "pyplot": [251, 445], "pytest": 4, "python": [0, 2, 3, 44, 103, 106, 152, 153, 255, 353, 462, 463, 536], "q": [207, 213, 219, 226, 250], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 122], "quantil": 6, "quaternion": 213, "question": 94, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "quick": [2, 3], "quickest": 456, "quickli": [193, 543], "quotient": [29, 51], "r": [87, 92, 219], "r2": 219, "rad": 92, "rad2deg": [6, 91, 92, 519], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 91, 92, 405, 519, 543], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 76, 77, 79, 80, 81, 83, 84, 88, 91, 92, 100, 101, 102, 103, 104, 110, 111, 112, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 170, 172, 173, 179, 183, 185, 186, 195, 196, 197, 198, 199, 213, 215, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 253, 254, 255, 258, 260, 261, 264, 265, 266, 268, 269, 270, 338, 339, 355, 384, 385, 387, 389, 390, 396, 397, 398, 399, 400, 405, 406, 456, 457, 460, 461, 462, 464, 465, 468, 469, 475, 479, 480, 481, 483, 485, 487, 488, 489, 490, 491, 493, 494, 495, 499, 500, 514, 515, 521, 523, 524, 527, 528, 536], "ramp": 392, "rand": [6, 109, 407, 437, 439, 440, 442], "randint": [6, 103, 353, 407, 438], "randn": [6, 144, 145, 146, 218, 219, 222, 226, 407, 492], "random": [103, 109, 144, 145, 146, 207, 215, 218, 219, 222, 226, 353, 492, 529, 539], "random_integ": [6, 407, 435], "random_sampl": [6, 407, 434, 437, 440, 442], "randomli": 431, "randomst": 435, "ranf": 6, "rang": [0, 100, 157, 168, 169, 224, 237, 394, 401, 402, 426, 431, 457, 463, 492, 501, 504, 519, 539], "rank": [116, 118, 156, 210, 214, 227, 392, 496], "rate": [123, 137], "rather": 386, "ratio": [0, 101, 149, 210, 514, 543], "ration": 539, "ravel": [6, 103, 118, 143, 216, 351, 391, 465, 536], "ravel_multi_index": [6, 517], "raveled_indic": 457, "raw": 219, "rayleigh": 6, "rcond": [210, 218], "re": [31, 32, 57, 94, 132, 470], "read": [94, 98, 103, 106, 154, 155, 157, 158, 231, 351, 456, 465], "readonli": 106, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 69, 70, 80, 88, 103, 121, 124, 126, 131, 132, 133, 134, 135, 136, 138, 140, 148, 150, 151, 152, 172, 175, 181, 189, 190, 200, 205, 206, 207, 208, 214, 218, 219, 220, 222, 236, 237, 243, 248, 254, 255, 259, 268, 270, 409, 426, 459, 460, 461, 462, 475, 486, 487, 493, 515, 516, 521, 536, 539], "real_if_clos": [6, 20, 175, 458], "rearrang": [103, 362, 539], "reason": 134, "rebuild": 105, "recal": 106, "recent": [22, 491], "recip": [4, 10], "reciproc": [6, 475, 489], "recommend": [108, 386, 502], "reconstruct": [106, 222, 516], "recov": 10, "reduc": [16, 21, 31, 32, 56, 219, 222, 243, 247, 249, 250, 251, 253, 260, 261, 264, 265, 266, 267, 268, 269, 270, 399, 461, 466, 493, 495, 521], "reduce_hypot": 172, "reduct": [16, 21], "redund": 135, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536], "reflect": [392, 536], "reflect_typ": 392, "reflector": 219, "regardless": [106, 206, 208, 524], "regular": 231, "rel": [17, 33, 103, 180, 204, 214, 227, 376, 470, 471, 485], "relat": 106, "relev": [106, 162, 230, 242], "rem": 152, "remain": [16, 21, 56, 109, 136, 138, 168, 243, 249, 250, 257, 265, 268, 270, 461, 465, 493, 521], "remaind": [6, 149, 152, 255, 397, 398], "remov": [31, 32, 91, 93, 98, 103, 116, 132, 204, 227, 374, 399, 405, 491, 495, 523, 539], "reorder": [108, 144, 226, 257], "rep": 502, "repeat": [6, 103, 122, 124, 128, 129, 133, 134, 136, 138, 139, 205, 206, 207, 208, 251, 395, 466, 502, 505, 516, 536], "repeatedli": 108, "repetit": [0, 463, 502], "replac": [3, 10, 44, 72, 118, 259, 262, 263, 395, 403, 412, 465, 477, 536], "replic": 502, "repo": 4, "repr": 315, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 106, 109, 127, 135, 153, 156, 162, 164, 176, 220, 230, 242, 251, 270, 392, 407, 466, 510, 516, 536], "represent": [58, 62, 64, 109, 140, 174, 176, 259, 385, 487, 536], "request": 471, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 103, 106, 108, 120, 176, 259, 338, 371, 392, 465, 466], "res_cpu": 94, "res_host": 94, "resampl": 482, "rese": 443, "reset": 536, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 94, 95, 96, 98, 101, 102, 103, 104, 105, 108, 116, 118, 125, 130, 144, 152, 170, 176, 177, 178, 193, 194, 204, 211, 212, 216, 224, 227, 229, 244, 245, 247, 253, 258, 346, 351, 355, 371, 381, 392, 395, 431, 456, 464, 466, 470, 472, 494, 501, 503, 505, 508, 509, 512, 513, 514, 516, 518, 524, 536], "resid": [116, 120, 153], "residu": 210, "resiz": [6, 116, 536], "resolut": 140, "resolv": [88, 116, 243, 461], "resourc": 0, "respect": [15, 29, 51, 58, 60, 62, 63, 64, 101, 103, 112, 147, 149, 152, 164, 165, 166, 197, 198, 199, 202, 236, 237, 238, 240, 241, 255, 258, 376, 387, 397, 398, 462, 468, 494, 514, 519], "rest": 39, "restor": 470, "restrict": 228, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 36, 51, 56, 58, 59, 60, 61, 62, 63, 64, 68, 72, 74, 75, 80, 85, 88, 89, 90, 93, 101, 102, 106, 109, 111, 112, 117, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 147, 149, 154, 155, 156, 157, 158, 160, 162, 165, 166, 168, 169, 176, 179, 183, 185, 186, 187, 188, 196, 197, 198, 199, 200, 204, 205, 211, 212, 216, 219, 224, 229, 230, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 253, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 386, 387, 390, 391, 397, 398, 399, 402, 407, 409, 439, 461, 465, 467, 468, 469, 471, 473, 476, 479, 480, 482, 488, 492, 493, 495, 497, 498, 501, 502, 505, 510, 514, 515, 516, 518, 521, 523, 526, 528, 536], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 68, 106, 539], "ret": 406, "retain": 465, "retriev": [98, 106, 204], "retstep": 230, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 356, 357, 358, 360, 361, 362, 363, 365, 368, 369, 372, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 410, 429, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 536], "return_count": 516, "return_index": 516, "return_invers": 516, "reus": [153, 169], "revers": [98, 103, 139, 144, 145, 146, 204, 381, 394, 472, 504, 505, 518, 520], "rewrit": 210, "rfft": [6, 10, 123, 126, 131, 132, 133, 134, 136, 137, 138], "rfft2": [6, 133], "rfftfreq": [6, 123], "rfftn": [6, 121, 124, 134, 135, 136], "right": [10, 28, 50, 60, 63, 72, 87, 98, 100, 145, 146, 172, 197, 202, 205, 206, 207, 208, 215, 226, 244, 450, 461, 468, 476, 503, 505, 508, 512, 520], "right_shift": [6, 60, 63, 197], "rightmost": [168, 169, 226], "rint": [6, 35, 70, 141, 148, 473, 515], "rl": [217, 391], "roll": [6, 471], "rollaxi": [6, 470], "root": [6, 69, 172, 201, 460, 461, 475, 489, 490], "rot90": [6, 145, 146], "rotat": [145, 146, 472], "roughli": [106, 210], "round": [6, 23, 35, 70, 103, 126, 131, 141, 148, 149, 161, 205, 255, 462, 469, 515, 536, 539], "routin": [2, 529, 536], "row": [45, 49, 73, 74, 75, 89, 90, 98, 103, 105, 119, 145, 146, 164, 171, 173, 176, 215, 222, 338, 386, 456, 457, 474, 488, 492, 506, 508, 516, 517, 524, 525], "row_stack": [6, 525], "rowvar": 86, "rsqrt": [460, 489], "rtol": [17, 180, 214, 218], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 62, 63, 64, 68, 69, 80, 81, 83, 84, 87, 90, 91, 92, 101, 114, 115, 117, 149, 150, 151, 152, 162, 172, 197, 202, 230, 232, 233, 234, 235, 236, 237, 242, 243, 245, 248, 249, 250, 254, 255, 258, 265, 268, 270, 385, 397, 398, 405, 406, 460, 461, 462, 467, 468, 475, 479, 481, 482, 483, 487, 489, 490, 493, 494, 495, 499, 500, 505, 514, 515, 521, 523], "run": [0, 4], "runtim": 4, "runtimewarn": [264, 266], "s1": [103, 106, 194, 376], "s10": 106, "s16": 106, "s2": [103, 106, 376], "s25": 106, "s3": [103, 376], "safe": [49, 68, 74, 75, 81, 103, 108, 171, 245, 338, 474, 492, 523, 525], "sai": 465, "said": 226, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 72, 73, 74, 75, 80, 88, 89, 90, 98, 99, 100, 101, 102, 103, 105, 111, 112, 116, 118, 127, 128, 129, 134, 139, 141, 147, 149, 150, 151, 152, 153, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 175, 177, 179, 180, 187, 188, 189, 194, 195, 196, 197, 198, 199, 202, 204, 207, 213, 218, 219, 223, 224, 227, 236, 237, 238, 240, 241, 243, 247, 248, 249, 250, 253, 254, 255, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 368, 381, 385, 387, 390, 392, 395, 397, 398, 399, 403, 407, 429, 435, 451, 456, 458, 461, 462, 463, 465, 468, 470, 471, 474, 476, 477, 485, 491, 492, 493, 494, 495, 497, 498, 501, 503, 507, 509, 511, 513, 514, 517, 521, 522, 525, 528, 543], "same_kind": [49, 68, 74, 75, 81, 103, 108, 171, 245, 338, 474, 492, 523, 525], "sampl": [10, 123, 130, 132, 135, 137, 162, 164, 168, 230, 242, 403, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 498, 505, 508, 512, 529, 539], "sample_r": 137, "satisfi": [36, 41, 43, 45, 49, 103, 118, 209, 338, 395, 464, 477], "save": [6, 155, 250, 543], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 62, 63, 64, 68, 79, 80, 81, 87, 94, 97, 99, 101, 102, 103, 106, 108, 109, 112, 118, 123, 137, 139, 147, 149, 150, 151, 152, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 177, 178, 180, 182, 190, 191, 194, 195, 196, 197, 198, 199, 211, 221, 224, 230, 236, 237, 238, 240, 241, 242, 244, 245, 248, 251, 254, 255, 258, 348, 353, 383, 385, 387, 392, 395, 397, 398, 402, 403, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 429, 430, 432, 433, 435, 438, 441, 443, 447, 449, 450, 451, 452, 453, 454, 455, 459, 462, 468, 476, 477, 494, 497, 501, 505, 514, 515, 520, 522, 526, 536], "scale": [10, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 162, 194, 219, 230, 242, 407, 414, 416, 418, 419, 420, 421, 429, 441, 446, 453], "scientif": 10, "scipi": 113, "scope": 4, "script": 4, "search": [109, 529, 539], "searchsort": [6, 100, 103, 168, 485, 536], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 80, 87, 98, 101, 102, 106, 109, 112, 115, 122, 123, 124, 125, 128, 129, 132, 135, 137, 147, 149, 150, 151, 152, 161, 164, 165, 166, 168, 169, 170, 171, 172, 177, 180, 194, 195, 197, 198, 199, 202, 204, 211, 224, 227, 228, 236, 237, 238, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 387, 391, 397, 398, 462, 468, 472, 490, 494, 496, 501, 503, 514, 522, 523], "section": [4, 39, 106, 124, 129, 134, 138, 212, 229, 536], "see": [3, 35, 106, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 153, 168, 210, 212, 229, 392, 424, 473, 508, 509, 512, 513, 516, 536], "seed": [6, 103, 109, 353, 407], "seek": 155, "seldom": 147, "select": [6, 33, 81, 118, 247, 253, 485, 491, 497, 505, 529], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "self": [103, 106, 142, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 350, 407], "semant": 168, "sens": 226, "sep": [155, 158], "separ": [10, 103, 106, 108, 155, 158, 169, 259, 368, 466], "sequenc": [39, 44, 53, 54, 55, 73, 74, 75, 78, 82, 104, 105, 108, 109, 110, 111, 122, 124, 128, 129, 132, 133, 134, 136, 138, 159, 160, 162, 168, 169, 170, 171, 176, 178, 193, 215, 224, 230, 242, 250, 257, 389, 390, 392, 395, 431, 444, 463, 464, 467, 474, 488, 492, 501, 505, 518, 524, 525, 527, 528], "sequenti": [82, 86, 113, 256, 267], "seri": [10, 132, 423], "serv": 518, "set": [10, 31, 32, 33, 36, 49, 71, 85, 94, 95, 97, 100, 103, 106, 108, 110, 159, 168, 169, 173, 176, 212, 214, 216, 217, 218, 229, 230, 247, 253, 260, 261, 269, 328, 338, 339, 350, 371, 389, 390, 391, 392, 399, 477, 479, 480, 485, 495, 508, 512, 527, 528, 536], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 106], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 209, "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 105, 106, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 147, 148, 149, 150, 151, 152, 156, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 183, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 203, 204, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 360, 368, 372, 374, 381, 383, 384, 385, 387, 388, 389, 390, 392, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 416, 419, 424, 425, 430, 434, 435, 436, 437, 438, 439, 440, 442, 447, 448, 454, 456, 457, 458, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 506, 507, 509, 511, 512, 513, 514, 515, 517, 518, 521, 523, 524, 525, 526, 527, 528, 529, 539], "share": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 506, 508, 512, 520, 527, 528], "shared_bin": 169, "shares_memori": 6, "shift": [10, 60, 63, 122, 124, 125, 129, 130, 197, 468, 470], "short": [482, 515, 523, 536], "shortcut": 392, "shorter": [126, 132], "shorthand": [11, 12, 15, 58, 59, 60, 61, 62, 63, 64, 101, 112, 149, 165, 166, 179, 197, 198, 199, 238, 240, 245, 255, 258, 384, 387, 396, 397, 398, 462, 468, 494, 514, 526], "should": [31, 32, 36, 39, 49, 98, 100, 102, 103, 108, 109, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 152, 155, 163, 168, 178, 193, 210, 213, 224, 245, 257, 260, 261, 264, 266, 338, 370, 392, 424, 457, 465, 466, 476, 487, 497, 501, 503, 517, 519, 523, 536], "show": [9, 38, 106, 139, 172, 241, 251, 259, 262, 263, 264, 266, 269, 445], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [103, 164, 207, 370, 476], "sigma": [422, 429], "sign": [6, 10, 17, 80, 106, 180, 203, 220, 255, 384, 396, 399, 462, 480, 495, 515], "signal": [10, 123, 126, 131, 132, 134, 137, 482, 519], "signatur": [244, 245, 392, 523], "signbit": [6, 479], "signific": 108, "signum": 479, "similar": [3, 40, 41, 103, 106, 162, 178, 202, 204, 211, 217, 227, 228, 230, 242, 244, 343, 371, 395, 407, 435, 508, 509, 512, 513], "simpl": [4, 241, 539], "simpli": [96, 103, 155, 168, 169, 196, 381], "sin": [0, 6, 26, 27, 46, 47, 83, 207, 251, 482, 483, 499, 505], "sinc": [6, 103, 132, 205, 207, 373, 386, 518], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 481, 482, 483, 499, 500], "sing": 216, "singl": [9, 10, 33, 66, 67, 73, 103, 108, 109, 164, 178, 215, 224, 247, 253, 353, 374, 399, 407, 426, 435, 436, 437, 438, 439, 440, 442, 448, 495, 501, 505, 523, 536], "singleton": [16, 21, 56, 116, 243, 249, 250, 264, 265, 266, 268, 270, 461, 491, 493, 521], "singular": [209, 210, 214, 216, 218, 222, 223], "sinh": [6, 14, 25, 27, 47, 84, 481, 500], "sinu": 482, "size": [0, 6, 23, 31, 32, 36, 39, 56, 74, 75, 82, 85, 86, 89, 90, 95, 100, 103, 104, 106, 109, 118, 121, 123, 127, 137, 155, 162, 164, 170, 171, 202, 204, 212, 216, 217, 219, 222, 224, 228, 229, 230, 242, 244, 247, 249, 253, 260, 261, 262, 263, 265, 267, 269, 353, 354, 371, 389, 395, 399, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 466, 470, 474, 488, 491, 492, 495, 501, 512, 518, 519, 523, 524, 525, 527, 536], "skip": 98, "slice": [93, 118, 178, 260, 261, 264, 265, 266, 268, 270, 402, 403, 477, 498, 505, 512, 513, 536], "slogdet": [6, 203], "slower": [224, 501], "slowest": [103, 351, 456, 465], "small": [17, 117, 180, 210, 218, 234, 236, 237, 259, 512], "smaller": [99, 103, 121, 122, 124, 127, 128, 129, 131, 133, 134, 135, 136, 138, 140, 210, 255, 362, 395, 462, 519], "smallest": [140, 174, 216, 516], "smallest_norm": 140, "smat": 222, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 106, 112, 126, 131, 147, 168, 178, 190, 224, 230, 237, 243, 249, 250, 251, 265, 268, 270, 445, 461, 493, 501, 502, 521], "softwar": 4, "solut": [210, 221, 466], "solv": [6, 210, 225, 226, 539], "some": [23, 106, 116, 118, 148, 177, 210, 392, 395, 519, 526, 536], "sometim": [167, 536], "somewhat": 213, "sophist": 213, "sort": [6, 33, 39, 103, 104, 170, 222, 250, 337, 362, 394, 476, 486, 488, 498, 504, 505, 516, 524, 529, 536, 539], "sort_complex": 6, "sorter": [103, 370, 476], "sought": 201, "sourc": [4, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 65, 66, 67, 68, 71, 72, 73, 75, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 168, 169, 170, 171, 173, 174, 176, 177, 178, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 383, 386, 389, 390, 391, 392, 393, 395, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 466, 467, 470, 471, 472, 476, 477, 478, 484, 485, 486, 488, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "space": [6, 23, 123, 125, 137, 155, 162, 164, 230, 242, 505, 543], "spars": [176, 251], "speak": 216, "special": [2, 106, 113, 529, 539], "specif": [0, 4, 106, 156], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 67, 68, 74, 75, 79, 88, 89, 90, 93, 94, 97, 98, 103, 108, 109, 110, 111, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 147, 154, 155, 156, 157, 159, 160, 162, 164, 173, 184, 204, 206, 208, 216, 224, 225, 226, 227, 228, 229, 230, 231, 242, 243, 249, 250, 252, 262, 263, 265, 267, 268, 269, 270, 337, 346, 353, 388, 389, 390, 394, 395, 399, 402, 403, 407, 420, 430, 448, 456, 457, 461, 464, 466, 470, 471, 472, 473, 477, 484, 492, 493, 495, 497, 498, 501, 503, 504, 505, 506, 516, 518, 520, 521, 523, 527, 528], "spectrum": [10, 125, 126, 130, 131], "speed": 108, "speedup": 109, "spell": 386, "split": [6, 39, 74, 75, 104, 105, 170, 171, 474, 492, 518, 524, 525, 539], "spreadsheet": 148, "sqrt": [6, 10, 69, 103, 352, 366, 461, 475, 490], "squar": [6, 69, 172, 173, 200, 201, 205, 206, 207, 209, 210, 213, 220, 225, 226, 244, 268, 270, 411, 427, 460, 461, 475, 477, 489, 493, 509, 513, 520, 521], "squeez": [6, 103, 116, 536], "src": 81, "stabil": [33, 485], "stabl": [33, 485], "stack": [6, 73, 74, 75, 105, 171, 203, 204, 211, 212, 214, 218, 219, 220, 223, 227, 245, 246, 386, 474, 488, 498, 518, 525], "stai": 72, "stand": 164, "standard": [103, 140, 149, 152, 249, 255, 265, 268, 270, 353, 375, 407, 422, 429, 436, 445, 446, 447, 448, 449, 462, 493, 521, 536, 539], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 407, 436], "standard_t": 6, "start": [2, 3, 23, 43, 45, 109, 123, 127, 137, 154, 162, 230, 242, 244, 466, 471, 508, 512], "start_tim": 0, "stat_length": 392, "state": 407, "statist": [392, 529, 539], "std": [6, 103, 249, 265, 268, 270, 521, 536], "stdev": [407, 448], "step": [4, 23, 109, 162, 167, 230, 242], "sticki": 106, "still": [56, 170, 216, 524], "stop": [23, 162, 230, 242], "store": [141, 162, 187, 188, 227, 230, 237, 242, 245, 391, 523], "str": [42, 44, 74, 75, 106, 108, 109, 155, 158, 171, 231, 329, 392, 464, 474, 492, 510, 525], "str_": 106, "straightforward": 176, "strictli": 216, "stride": [48, 49, 103, 338], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 106, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 392, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 510, 512, 520, 527, 528, 536], "string_repr": 109, "stringio": 231, "strongli": [4, 502], "struct": 106, "structur": [106, 231], "student": 449, "style": [49, 103, 338, 386, 392, 456, 457, 517], "sub": [39, 74, 75, 93, 98, 104, 106, 108, 170, 171, 226, 227, 474, 488, 492, 503, 506, 518, 524, 525], "subarrai": [93, 106, 176, 516], "subclass": [41, 464], "subdiagon": [204, 227], "subdivid": 106, "subdtyp": 106, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 76, 77, 79, 80, 83, 84, 91, 92, 101, 103, 111, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 160, 161, 165, 166, 167, 172, 179, 183, 185, 186, 195, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 248, 254, 255, 258, 338, 384, 385, 387, 390, 396, 397, 398, 400, 405, 406, 460, 462, 468, 469, 475, 479, 480, 481, 483, 487, 489, 490, 494, 499, 500, 514, 515, 523, 528], "subscript": [108, 109], "subset": [3, 164, 491, 539], "subtract": [6, 392], "subtyp": 456, "succeed": 107, "success": [42, 409, 417, 426], "sugar": [96, 509, 513], "suggest": 98, "suit": 4, "suitabl": [34, 103, 353, 381, 403, 466, 476, 498], "sum": [0, 3, 4, 6, 10, 15, 56, 88, 90, 94, 97, 98, 99, 102, 103, 108, 127, 168, 172, 177, 201, 210, 211, 216, 224, 225, 227, 236, 237, 243, 245, 262, 263, 269, 345, 380, 409, 424, 426, 461, 501, 503, 505, 523, 536, 539], "sum_": [10, 216, 228, 523], "sum_along_diagon": 503, "sum_of_weight": 56, "summari": 529, "summat": [102, 108, 109, 177, 224, 226, 245, 391, 501, 523], "superdiagon": [204, 227], "suppli": [126, 131, 215, 392, 407, 436], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 76, 77, 79, 80, 82, 83, 84, 86, 91, 92, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 172, 173, 178, 179, 183, 185, 186, 195, 196, 197, 198, 199, 202, 204, 211, 217, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 264, 265, 266, 267, 268, 269, 270, 338, 371, 384, 385, 387, 389, 390, 393, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 462, 464, 468, 469, 475, 479, 480, 481, 485, 487, 489, 490, 493, 494, 495, 499, 500, 514, 515, 521, 523, 527, 528, 543], "sure": 464, "surnam": 106, "surpris": [127, 128, 129], "svd": [6, 201, 209, 214, 218, 223], "svdval": 6, "swap": [106, 122, 125, 496], "swapax": [6, 103, 257, 536], "swapped_cod": 106, "swapped_dt": 106, "sy": 106, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "sycl_context": 103, "sycl_devic": 103, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 153, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 338, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 506, 508, 512, 520, 527, 528], "symmetr": [126, 132, 134, 135, 200, 205, 206, 207, 208, 214, 218, 222, 392], "symmetri": [10, 121, 126, 131, 132, 135], "syntact": [96, 509, 513], "syntax": 536, "sys_is_l": 106, "system": [3, 4, 221], "t": [10, 74, 75, 86, 103, 106, 126, 184, 200, 205, 207, 210, 381, 386, 449, 456, 505], "t1": 543, "tabl": [2, 9, 212, 229, 529], "tack": 106, "take": [6, 73, 103, 118, 193, 244, 395, 403, 456, 465, 476, 477, 482, 498, 516, 519, 536, 543], "take_along_axi": [6, 31, 32, 33, 71, 403, 497], "taken": [56, 98, 99, 107, 109, 126, 132, 133, 134, 135, 136, 138, 167, 168, 245, 268, 270, 477, 493, 503, 506, 508, 512, 521, 522, 523], "tall": 139, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 83, 481, 500], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 481, 483, 499, 500], "tanh": [6, 14, 25, 30, 52, 84, 483, 499], "target": [49, 68, 103, 338, 402], "target_devic": 103, "tau": 219, "tbb": 4, "tempfil": 155, "temporari": [155, 543], "temporaryfil": 155, "ten": 417, "tensor": [44, 103, 108, 109, 153, 224, 225, 226, 260, 261, 264, 266, 267, 401, 501], "tensordot": [6, 102, 108, 177, 225, 226, 245, 391], "tensorinv": [6, 226], "tensorsolv": [6, 225], "term": [10, 15, 101, 109, 121, 122, 124, 127, 128, 129, 132, 135, 258, 494, 514], "test": [0, 2, 16, 17, 21, 112, 165, 166, 181, 183, 185, 186, 187, 188, 198, 199, 267, 386, 387, 409, 536, 539], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [154, 155, 157, 158, 231], "th": [90, 94, 97, 99, 103, 107, 119, 164, 176, 250, 381, 388, 394, 477, 504, 507, 509, 511, 513], "than": [36, 60, 63, 89, 90, 103, 104, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 145, 146, 149, 156, 165, 166, 168, 169, 171, 197, 198, 199, 210, 214, 218, 219, 224, 227, 262, 263, 267, 269, 355, 362, 386, 392, 395, 399, 466, 468, 477, 479, 491, 492, 495, 501, 503, 515, 519, 543], "thei": [17, 38, 106, 180, 184, 196, 207, 210, 224, 474, 476, 501, 505, 508, 512, 519, 520, 525, 536], "them": [73, 214, 218, 536], "theor": 205, "theoret": 109, "therefor": [121, 135, 156, 206, 208, 466], "theta": 505, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 72, 74, 75, 79, 85, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 171, 182, 184, 190, 193, 202, 204, 206, 208, 210, 211, 212, 215, 216, 217, 220, 223, 227, 228, 229, 230, 231, 234, 236, 237, 242, 243, 244, 245, 247, 250, 253, 255, 257, 259, 260, 261, 264, 266, 267, 269, 338, 343, 348, 351, 353, 362, 368, 381, 386, 392, 395, 399, 402, 403, 440, 442, 456, 461, 462, 464, 465, 466, 471, 472, 474, 485, 492, 495, 497, 498, 502, 505, 509, 513, 516, 518, 519, 520, 523, 525, 526], "thing": 497, "think": [392, 465], "third": [73, 74, 75, 87, 104, 105, 122, 171, 224, 474, 488, 492, 501, 525], "those": [10, 72, 93, 213, 403], "though": 127, "thousand": 417, "three": [53, 54, 55, 116, 213, 224, 244, 407, 443, 501, 516], "threshold": 214, "through": [41, 106, 169, 193, 205, 207, 210, 244, 464, 536], "throw": 424, "thu": [10, 126, 132, 134, 502], "tile": [6, 463, 539], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 62, 63, 64, 80, 99, 101, 102, 112, 122, 124, 126, 128, 129, 131, 133, 134, 136, 138, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 177, 178, 180, 186, 194, 195, 196, 197, 198, 199, 210, 214, 218, 224, 236, 237, 238, 240, 241, 248, 254, 255, 258, 385, 387, 392, 397, 398, 409, 424, 462, 468, 472, 482, 494, 498, 501, 502, 514, 516, 522], "time_dpnp": 0, "time_numpi": 0, "timedelta": 106, "timeit": 108, "timestep": 123, "tini": 140, "titl": 106, "tm": 152, "to_begin": 107, "to_devic": [6, 103], "to_end": 107, "tobyt": 6, "todo": 427, "tofil": [6, 155], "togeth": [17, 74, 75, 106, 127, 180, 193, 492, 526], "tol": [214, 425, 459], "toler": [17, 37, 180, 214, 459], "tolist": 6, "too": [4, 122, 124, 128, 129, 133, 134, 136, 138, 526], "toolkit": 3, "tostr": 6, "total": [6, 85, 89, 103, 359, 466, 484, 493, 521], "toward": [35, 70, 141, 148, 149, 168, 169, 255, 385, 462, 469, 472, 473, 515], "trace": [6, 94, 97, 98, 103, 108, 536], "traceback": [22, 491], "trail": 510, "transfer": 103, "transform": [109, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 529], "transpos": [6, 34, 103, 108, 184, 200, 207, 246, 257, 272, 355, 394, 536, 539], "trapezoid": [6, 90, 495], "trapz": 6, "treat": [17, 93, 126, 132, 134, 155, 164, 180, 206, 208, 210, 215, 231, 250, 262, 263, 267, 269, 399, 403, 476, 498, 502, 516, 519, 536], "tri": 6, "trial": 409, "triangl": [94, 172, 244, 461, 506, 507, 508, 509, 511, 512, 513], "triangular": [6, 200, 206, 208, 219, 244, 508, 509, 512, 513], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 83, 84, 481, 483, 499, 500, 539], "tril": [6, 94, 244, 506, 508, 509, 512], "tril_indic": [6, 244, 509, 512], "tril_indices_from": [6, 513], "trili": 509, "trili1": 509, "trim": [122, 124, 128, 129, 133, 134, 136, 138, 510], "trim_zero": 6, "triu": [6, 94, 244, 506, 508, 512, 513], "triu_indic": [6, 244, 508, 513], "triu_indices_from": [6, 509], "triui": 513, "triuim1": 513, "trivial": [205, 498], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 76, 77, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 100, 101, 103, 106, 108, 109, 112, 114, 115, 116, 117, 118, 120, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 161, 162, 165, 166, 167, 168, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 212, 214, 216, 218, 219, 221, 222, 224, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 276, 333, 334, 338, 343, 356, 357, 358, 363, 375, 377, 382, 384, 385, 386, 387, 395, 396, 397, 398, 399, 400, 403, 405, 406, 412, 460, 461, 462, 464, 465, 468, 469, 475, 477, 479, 480, 481, 483, 485, 487, 489, 490, 493, 494, 495, 498, 499, 500, 501, 505, 514, 515, 516, 518, 520, 521, 523, 526], "true_divid": [6, 101], "trunc": [6, 35, 70, 141, 148, 469, 473], "truncat": [35, 70, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 148, 445, 469, 473, 515], "trust": [260, 261], "truth": [58, 59, 61, 62, 64, 112, 165, 166, 179, 198, 199, 238, 239, 240, 241, 387, 536, 539], "try": [4, 42], "tukei": 10, "tup": [73, 105, 171, 474, 525], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 66, 67, 79, 85, 88, 94, 95, 96, 97, 103, 106, 109, 116, 125, 130, 144, 153, 156, 159, 160, 162, 164, 168, 169, 171, 176, 182, 190, 193, 194, 216, 219, 226, 229, 230, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 264, 265, 266, 267, 268, 269, 270, 353, 371, 381, 386, 388, 392, 394, 399, 457, 461, 463, 465, 466, 470, 474, 478, 491, 492, 493, 495, 502, 504, 508, 509, 512, 513, 517, 518, 520, 521, 523, 525, 536], "turn": 73, "twister": 407, "two": [10, 17, 37, 53, 54, 58, 59, 61, 62, 64, 78, 82, 87, 97, 98, 99, 102, 103, 106, 108, 109, 116, 121, 122, 124, 127, 128, 129, 132, 133, 134, 136, 138, 150, 151, 164, 177, 179, 180, 194, 196, 204, 206, 210, 212, 215, 217, 221, 223, 224, 227, 238, 240, 241, 245, 246, 247, 248, 250, 253, 254, 257, 264, 266, 355, 362, 378, 391, 392, 407, 436, 456, 469, 472, 473, 477, 496, 501, 503, 508, 509, 512, 513, 522], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 347, 351, 353, 360, 368, 372, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 539], "type_nam": 0, "typeerror": [56, 81, 103, 153, 196, 371], "typenam": 6, "typestr": 106, "typic": [17, 126, 180, 476, 536], "u": [106, 200, 206, 208, 222, 244, 267, 269, 516], "u1": [106, 154, 155], "u16": 106, "u4": 68, "u8": 106, "ufunc": [2, 529, 536], "uint64": 106, "uint8": [106, 154, 155], "uk": 10, "un": 106, "unalt": 392, "unari": 536, "unchang": 138, "undefin": [20, 103, 250, 362, 392], "under": [212, 229], "underli": [58, 62, 64, 456, 465], "undo": [10, 129], "undocu": 106, "unexpect": [267, 269], "unicod": 106, "uniform": [6, 106, 164, 168, 169, 242, 407, 434, 437, 439, 440, 442], "uniformli": [242, 407, 451], "uniniti": [36, 110, 111, 159, 389, 527], "union1d": 6, "uniqu": [6, 56, 57, 88, 100, 106, 243, 249, 257, 265, 268, 270, 392, 461, 463, 493, 521], "unique_al": 6, "unique_count": [6, 516], "unique_indic": 516, "unique_invers": [6, 516], "unique_valu": 6, "unit": [103, 123, 137, 193, 205, 213, 220, 376], "unitari": [10, 164, 219, 222], "uniti": 168, "univ": 10, "univers": [2, 216, 529, 536], "unless": [16, 21, 49, 89, 90, 103, 108, 168, 205, 214, 216, 242, 262, 263, 267, 269, 338, 399, 495, 516, 523], "unlik": [33, 103, 137, 368, 371, 485], "unmodifi": 169, "unpackbit": 6, "unravel": 517, "unravel_index": [6, 31, 32, 457], "unraveled_coord": 517, "unsaf": [49, 68, 74, 75, 81, 103, 108, 171, 245, 338, 474, 492, 523, 525], "unscal": 10, "unsign": [106, 399, 495], "unspecifi": 465, "unstack": [6, 171, 474, 492, 525], "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 80, 83, 84, 91, 92, 101, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 153, 161, 167, 172, 179, 195, 196, 197, 233, 234, 235, 236, 237, 248, 254, 255, 256, 258, 384, 385, 396, 397, 398, 400, 405, 406, 460, 462, 468, 469, 475, 479, 480, 481, 483, 487, 494, 499, 500, 514, 515], "until": [109, 470, 471], "unwrap": [6, 91, 405], "up": [4, 10, 106, 108, 146, 498, 509, 516], "upcast": 36, "updat": 4, "uplo": [206, 208], "upon": [103, 376], "upper": [94, 119, 168, 169, 200, 206, 208, 219, 244, 506, 508, 509, 511, 512, 513], "url": 4, "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 68, 72, 74, 75, 79, 87, 89, 90, 93, 94, 95, 97, 98, 101, 103, 106, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 179, 184, 193, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 210, 214, 215, 216, 218, 224, 227, 230, 231, 237, 238, 240, 242, 244, 245, 247, 249, 250, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 278, 338, 343, 351, 371, 384, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 403, 407, 410, 412, 413, 423, 428, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 448, 451, 456, 459, 462, 463, 464, 465, 466, 468, 470, 476, 477, 479, 482, 486, 493, 494, 495, 497, 498, 501, 502, 503, 505, 506, 508, 509, 512, 513, 514, 516, 517, 520, 521, 523, 526, 527, 528, 536, 543], "usabl": 147, "usag": [3, 4, 123, 137], "use_getitem": 106, "use_setitem": 106, "user": [106, 259, 392], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 491, 506, 508, 512, 520, 527, 528], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 348, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 79, 94, 95, 97, 103, 110, 111, 119, 123, 137, 154, 155, 156, 157, 158, 159, 160, 162, 173, 176, 230, 231, 242, 244, 252, 343, 388, 389, 390, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 506, 508, 512, 520, 527, 528], "usual": [95, 103, 106, 211, 245, 371], "util": 529, "v": [78, 94, 97, 103, 106, 205, 206, 228, 250, 370, 402, 476, 523], "v0": 6, "v10": 106, "v13": 6, "v2": 6, "v_sort": 250, "val": [103, 139, 142, 328, 364, 395], "valid": [82, 116, 244, 496, 508, 509, 512, 513], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 99, 100, 101, 103, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 126, 127, 132, 134, 135, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 178, 179, 180, 182, 183, 185, 186, 189, 190, 193, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 213, 214, 216, 218, 220, 221, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 274, 275, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 335, 336, 338, 340, 343, 348, 350, 362, 364, 371, 384, 385, 386, 387, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 417, 434, 435, 451, 458, 460, 461, 462, 463, 464, 465, 468, 469, 470, 473, 475, 476, 477, 479, 480, 481, 482, 485, 487, 489, 490, 493, 494, 495, 497, 498, 499, 500, 503, 505, 508, 512, 514, 515, 516, 519, 521, 523, 526, 527, 528, 536, 539], "value2": 106, "valueerror": [22, 36, 41, 42, 103, 153, 216, 260, 261, 355, 465, 488, 491], "van": 216, "vander": 6, "vandermond": 520, "var": [6, 103, 249, 265, 268, 270, 493, 536], "vararg": 164, "vari": [10, 16, 20, 21, 98, 109, 122, 124, 126, 127, 128, 129, 131, 132, 135, 138, 156, 176, 184, 201, 204, 205, 206, 210, 212, 216, 259, 265, 268, 270, 456, 459, 482], "variabl": [86, 210, 221], "varianc": [103, 249, 265, 268, 270, 382, 493, 521, 539], "variou": [216, 482, 543], "vdot": [6, 102, 228, 245, 523], "vecdot": [6, 522], "vector": [87, 108, 156, 176, 177, 193, 201, 202, 211, 214, 215, 216, 217, 222, 223, 228, 229, 245, 250, 251, 391, 392, 522, 523, 539], "vector_norm": [6, 216], "vendor": 4, "veri": [3, 10, 17, 178, 180, 217, 251, 259, 391], "verif": 0, "verifi": 200, "version": [4, 85, 87, 98, 103, 106, 143, 245, 250, 350, 386, 391, 457, 503, 517, 522, 523], "vertic": [73, 74, 75, 98, 105, 139, 144, 145, 171, 204, 472, 474, 488, 492, 524, 525], "vetterlin": 10, "vh": 222, "via": 132, "view": [6, 39, 53, 54, 55, 65, 94, 98, 103, 104, 116, 122, 124, 128, 129, 133, 134, 136, 138, 144, 145, 146, 170, 251, 257, 272, 355, 368, 381, 394, 403, 456, 457, 465, 472, 488, 491, 496, 504, 517, 524], "violat": 81, "void": 106, "void640": 106, "von": 452, "vonmis": 6, "vsplit": [6, 74, 75, 488], "vstack": [6, 73, 74, 75, 105, 171, 210, 474, 488, 492], "w": [10, 56, 205, 206, 207, 208, 213, 464], "wa": [10, 88, 106, 215, 243, 264, 266, 268, 270, 407, 448, 461, 465, 493, 521], "wai": [3, 4, 10, 103, 109, 121, 127, 128, 129, 134, 155, 224, 362, 501], "wald": 6, "walk": 106, "want": [4, 184, 498], "warn": [106, 260, 261, 425, 466], "we": [79, 95, 98, 109, 139, 210, 244, 403, 498, 505], "weibul": [6, 455], "weight": [56, 57, 86, 168, 169, 249, 265, 495], "well": [106, 108, 155, 168, 169, 399, 409, 426, 445], "were": [74, 75, 156, 407, 436, 492, 519], "what": [10, 49, 68, 74, 75, 81, 103, 106, 108, 112, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 171, 181, 245, 338, 409, 426, 474, 492, 523, 525, 536], "when": [10, 22, 23, 33, 36, 37, 40, 41, 43, 45, 48, 49, 56, 79, 81, 100, 103, 106, 108, 121, 132, 134, 135, 150, 151, 162, 167, 178, 205, 211, 216, 219, 223, 224, 230, 237, 242, 244, 245, 250, 255, 262, 263, 264, 266, 267, 269, 338, 456, 462, 466, 469, 471, 473, 477, 485, 497, 501, 505, 516, 523, 526, 543], "whenev": [116, 394, 496, 504], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 76, 77, 79, 80, 81, 83, 84, 87, 88, 91, 92, 94, 95, 97, 99, 100, 101, 103, 104, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 126, 132, 133, 134, 137, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 170, 172, 173, 176, 177, 179, 180, 181, 182, 183, 185, 186, 189, 190, 195, 196, 197, 198, 199, 200, 204, 210, 214, 219, 222, 223, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 258, 264, 265, 266, 267, 268, 269, 270, 333, 334, 338, 343, 356, 357, 358, 363, 370, 375, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 405, 406, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 443, 448, 451, 456, 460, 461, 462, 466, 468, 469, 471, 475, 476, 477, 479, 480, 481, 483, 487, 488, 489, 490, 493, 494, 495, 499, 500, 503, 504, 506, 508, 512, 514, 515, 519, 520, 521, 523, 524, 527, 528], "wherev": 81, "whether": [16, 17, 21, 37, 88, 100, 106, 153, 180, 181, 184, 200, 219, 230, 259, 267, 269, 457, 480, 516, 517, 536], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 65, 74, 75, 79, 81, 85, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 108, 109, 110, 111, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 171, 173, 176, 178, 183, 185, 186, 187, 188, 200, 202, 204, 205, 212, 214, 216, 223, 226, 227, 228, 229, 231, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 338, 343, 353, 386, 388, 389, 390, 394, 399, 402, 407, 429, 434, 435, 436, 437, 438, 439, 440, 442, 448, 451, 457, 461, 463, 466, 470, 477, 484, 485, 488, 491, 492, 493, 495, 497, 503, 504, 505, 506, 507, 508, 511, 512, 515, 518, 519, 520, 521, 523, 526, 527, 528, 536, 543], "whichev": 177, "while": [10, 136, 138, 168, 169, 249, 265, 268, 270, 386, 395, 399, 470, 493, 495, 506, 521], "whitespac": [155, 158], "whole": [122, 124, 128, 129, 133, 134, 136, 138, 508, 512], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 98, 106, 118, 119, 139, 201, 204, 206, 207, 208, 212, 223, 225, 227, 244, 246, 257, 470, 509, 513, 517], "why": 132, "wide": 139, "width": [106, 168, 169, 392], "wild": [409, 426], "window": [4, 123, 137], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 73, 74, 75, 76, 77, 80, 83, 84, 88, 101, 103, 105, 112, 114, 115, 117, 120, 141, 147, 148, 149, 150, 151, 152, 165, 166, 167, 170, 171, 172, 175, 179, 180, 183, 185, 186, 187, 188, 196, 197, 198, 199, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 253, 254, 255, 256, 258, 264, 266, 267, 342, 384, 385, 387, 396, 397, 398, 400, 458, 460, 462, 468, 469, 473, 474, 475, 479, 480, 481, 482, 483, 488, 489, 490, 492, 494, 499, 500, 514, 515, 524, 525, 529, 536, 539, 543], "wish": 536, "within": [17, 23, 37, 49, 103, 108, 126, 127, 128, 129, 131, 132, 134, 168, 169, 180, 338, 402, 407, 451], "without": [98, 103, 110, 139, 381, 456, 465, 466, 536], "won": 106, "word": [127, 128, 129, 132, 134, 148, 207, 407, 451], "work": [4, 35, 48, 103, 353, 498, 536], "world": [106, 409, 426], "would": [33, 74, 75, 103, 106, 156, 176, 215, 244, 245, 362, 394, 407, 457, 485, 488, 492, 498, 504, 519, 523], "wrap": [91, 103, 139, 364, 379, 392, 402, 403, 405, 457, 476, 497, 498, 519], "wrapper": 103, "writabl": 464, "write": [94, 98, 103, 139, 155, 351, 465], "writeabl": 464, "written": [4, 85, 88, 139, 155, 184, 243, 461, 526], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 65, 67, 69, 70, 76, 77, 79, 80, 82, 83, 84, 86, 87, 88, 91, 92, 94, 97, 99, 100, 103, 104, 106, 107, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 136, 137, 138, 141, 142, 143, 148, 154, 155, 156, 157, 159, 160, 161, 162, 164, 170, 173, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 196, 201, 202, 204, 207, 210, 212, 216, 219, 221, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 251, 252, 256, 257, 259, 338, 343, 352, 353, 360, 366, 371, 372, 384, 386, 388, 389, 390, 396, 399, 400, 401, 405, 406, 425, 431, 456, 458, 460, 461, 463, 464, 469, 470, 471, 473, 475, 477, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 496, 497, 499, 500, 505, 506, 515, 518, 520, 524, 526, 527, 528], "x0": [43, 45, 79, 97, 390, 520, 528], "x00": 155, "x01": [154, 155], "x02": [154, 155], "x03": [154, 155], "x04": [154, 155], "x05": 154, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 62, 63, 64, 71, 80, 82, 101, 103, 112, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 193, 195, 196, 197, 198, 199, 202, 211, 217, 228, 236, 237, 238, 239, 240, 241, 245, 248, 251, 254, 255, 256, 258, 338, 384, 385, 387, 393, 396, 397, 398, 404, 444, 462, 468, 470, 494, 514, 523], "x1_i": [15, 29, 51, 58, 60, 62, 63, 64, 80, 101, 112, 147, 149, 152, 165, 166, 172, 197, 198, 199, 236, 237, 238, 240, 241, 255, 258, 387, 397, 398, 462, 468, 494, 514], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 62, 63, 64, 80, 82, 101, 112, 147, 149, 150, 151, 152, 161, 165, 166, 167, 172, 193, 195, 196, 197, 198, 199, 202, 211, 217, 228, 236, 237, 238, 239, 240, 241, 245, 248, 251, 254, 255, 258, 384, 385, 387, 396, 397, 398, 462, 468, 470, 489, 494, 514, 523], "x2_i": [15, 29, 51, 58, 60, 62, 63, 64, 80, 101, 112, 147, 149, 152, 165, 166, 172, 197, 198, 199, 236, 237, 238, 240, 241, 255, 258, 387, 397, 398, 462, 468, 494, 514], "x3": [16, 21, 147], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 61, 69, 70, 76, 77, 83, 84, 114, 115, 117, 148, 175, 179, 232, 233, 234, 235, 239, 384, 396, 400, 458, 460, 469, 473, 475, 479, 480, 481, 483, 489, 490, 499, 500, 515], "xi": [235, 251], "xn": [193, 251], "xor": [58, 59, 61, 62, 64, 179, 238, 239, 240, 241], "xv": 251, "xx": 251, "xy": 251, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 65, 79, 86, 87, 97, 103, 106, 107, 110, 111, 116, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 164, 173, 187, 188, 201, 202, 210, 230, 231, 242, 251, 252, 256, 259, 343, 360, 368, 371, 388, 389, 390, 464, 505, 506, 520, 526, 527, 528], "y1": 196, "y2": 196, "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 267, 269, 386, 392, 407, 526, 536], "you": [4, 98, 126, 131, 132, 184, 244, 250, 465, 497, 498, 536, 543], "your": [4, 98, 543], "yv": 251, "yy": 251, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 79, 87, 97, 110, 111, 119, 123, 137, 154, 155, 156, 157, 159, 160, 162, 173, 230, 231, 242, 251, 252, 388, 389, 390, 417, 506, 520, 527, 528], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 60, 70, 85, 87, 88, 95, 99, 103, 110, 111, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 148, 155, 159, 160, 173, 175, 181, 182, 187, 188, 189, 190, 197, 205, 206, 208, 210, 213, 214, 218, 222, 224, 243, 244, 247, 249, 253, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 360, 361, 371, 372, 376, 383, 386, 389, 390, 392, 399, 407, 409, 437, 439, 440, 442, 458, 459, 461, 466, 469, 473, 479, 485, 493, 495, 501, 506, 507, 510, 511, 515, 521, 526, 528], "zeros_lik": [6, 36, 92, 111, 160, 250, 390, 406, 527], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 273, "__add__": 274, "__and__": 275, "__bool__": 276, "__complex__": 277, "__copy__": 278, "__eq__": 279, "__float__": 280, "__floordiv__": 281, "__ge__": 282, "__getitem__": 283, "__gt__": 284, "__iadd__": 285, "__iand__": 286, "__ifloordiv__": 287, "__ilshift__": 288, "__imatmul__": 289, "__imod__": 290, "__imul__": 291, "__int__": 292, "__invert__": 293, "__ior__": 294, "__ipow__": 295, "__irshift__": 296, "__isub__": 297, "__itruediv__": 298, "__ixor__": 299, "__le__": 300, "__len__": 301, "__lshift__": 302, "__lt__": 303, "__matmul__": 304, "__mod__": 305, "__mul__": 306, "__ne__": 307, "__neg__": 308, "__new__": 309, "__or__": 310, "__pos__": 311, "__pow__": 312, "__radd__": 313, "__rand__": 314, "__repr__": 315, "__rfloordiv__": 316, "__rlshift__": 317, "__rmatmul__": 318, "__rmod__": 319, "__rmul__": 320, "__ror__": 321, "__rpow__": 322, "__rrshift__": 323, "__rshift__": 324, "__rsub__": 325, "__rtruediv__": 326, "__rxor__": 327, "__setitem__": 328, "__str__": 329, "__sub__": 330, "__truediv__": 331, "__xor__": 332, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 533, "add": 15, "algebra": [6, 531], "all": [16, 333], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 334], "api": [1, 529], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 335], "argmin": [32, 336], "argsort": [33, 337], "argwher": 34, "arithmet": [534, 536, 537], "around": 35, "arrai": [6, 7, 9, 36, 530, 532, 533, 536], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 338], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 536, "avail": [9, 543], "averag": [56, 542], "backend": 1, "background": 10, "basic": [533, 537], "beta": 408, "bincount": 57, "binomi": 409, "bit": [5, 543], "bitwise_and": 58, "bitwise_invert": 59, "bitwise_left_shift": 60, "bitwise_not": 61, "bitwise_or": 62, "bitwise_right_shift": 63, "bitwise_xor": 64, "broadcast_arrai": 65, "broadcast_shap": 66, "broadcast_to": 67, "build": [4, 7], "byte": 410, "c": 1, "calcul": 536, "can_cast": 68, "cbrt": 69, "ceil": 70, "chang": 533, "channel": 4, "chisquar": 411, "choic": 412, "choleski": 200, "choos": [71, 339], "class": 7, "clip": [72, 340], "co": 83, "column_stack": 73, "comparison": [6, 532, 536, 543], "complex": 534, "concat": 74, "concaten": 75, "cond": 201, "conda": 4, "conj": [76, 341], "conjug": [77, 342], "construct": 536, "control": 0, "convers": 536, "convolv": 78, "copi": [79, 343], "copysign": 80, "copyto": 81, "correl": [82, 542], "cosh": 84, "count": 540, "count_nonzero": 85, "cov": 86, "creat": 8, "creation": 7, "cross": [87, 202], "cumlogsumexp": 88, "cumprod": [89, 344], "cumsum": [90, 345], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 530, 536, 538], "decomposit": 531, "deg2rad": 91, "degre": 92, "delet": 93, "det": 203, "detail": 10, "develop": 2, "devic": 4, "diag": 94, "diag_indic": 95, "diag_indices_from": 96, "diagflat": 97, "diagon": [98, 204, 346], "diff": 99, "differ": 534, "digit": 100, "dimens": [10, 533], "dimension": [6, 536], "dirichlet": 413, "discret": 6, "distribut": 538, "divid": 101, "dot": 102, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 538], "dpnp_arrai": 103, "driver": 4, "dsplit": 104, "dstack": 105, "dtype": [106, 347], "ediff1d": 107, "eig": 205, "eigenvalu": 531, "eigh": 206, "eigval": 207, "eigvalsh": 208, "einsum": 108, "einsum_path": 109, "element": [5, 533], "empti": 110, "empty_lik": 111, "equal": 112, "equat": 531, "erf": 113, "error": 541, "exampl": [0, 4], "except": 531, "exist": 7, "exp": 114, "exp2": 115, "expand_dim": 116, "expm1": 117, "expon": 534, "exponenti": 414, "extens": 2, "extract": 118, "extrema": 534, "ey": 119, "f": 415, "fab": 120, "fft": [10, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "fft2": 122, "fftfreq": 123, "fftn": 124, "fftshift": 125, "fill": 348, "fill_diagon": 139, "find": 534, "finfo": 140, "fix": 141, "flag": 349, "flat": 350, "flatit": 142, "flatnonzero": 143, "flatten": 351, "flip": 144, "fliplr": 145, "flipud": 146, "float": [534, 543], "float_pow": 147, "floor": 148, "floor_divid": 149, "fmax": 150, "fmin": 151, "fmod": 152, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 153, "frombuff": 154, "fromfil": 155, "fromfunct": 156, "fromit": 157, "fromstr": 158, "full": 159, "full_lik": 160, "function": [10, 532, 534, 541, 542, 543], "gamma": 416, "gcd": 161, "gener": [530, 538], "geometr": 417, "geomspac": 162, "get_includ": 163, "gradient": 164, "greater": 165, "greater_equ": 166, "guid": 4, "gumbel": 418, "handl": 534, "heavisid": 167, "helper": 10, "hermitian": 10, "hfft": 126, "higher": 10, "histogram": [168, 542], "histogram_bin_edg": 169, "hsplit": 170, "hstack": 171, "hyperbol": 534, "hypergeometr": 419, "hypot": 172, "ident": 173, "ifft": 127, "ifft2": 128, "ifftn": 129, "ifftshift": 130, "ihfft": 131, "iinfo": 174, "imag": [175, 352], "implement": 10, "index": [530, 536], "indic": 176, "infin": 532, "inform": [2, 8, 10], "inner": 177, "insert": [178, 530], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 209, "invert": 179, "irfft": 132, "irfft2": 133, "irfftn": 134, "isclos": 180, "iscomplex": 181, "iscomplexobj": 182, "isfinit": 183, "isfortran": 184, "isinf": 185, "isnan": 186, "isneginf": 187, "isposinf": 188, "isreal": 189, "isrealobj": 190, "isscalar": 191, "issubdtyp": 192, "item": [353, 536], "items": 354, "iter": 530, "ix_": 193, "join": 533, "kind": 533, "kron": 194, "laplac": 420, "layout": 536, "lcm": 195, "ldexp": 196, "left_shift": 197, "less": 198, "less_equ": 199, "level": 6, "librari": 0, "like": [530, 533], "linalg": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "linear": [6, 531], "linspac": 230, "loadtxt": 231, "log": 232, "log10": 233, "log1p": 234, "log2": 235, "logaddexp": 236, "logaddexp2": 237, "logarithm": 534, "logic": 532, "logical_and": 238, "logical_not": 239, "logical_or": 240, "logical_xor": 241, "logist": 421, "lognorm": 422, "logseri": 423, "logspac": 242, "logsumexp": 243, "lstsq": 210, "manipul": [533, 536], "mask_indic": 244, "math": 543, "mathemat": 534, "matmul": [211, 245], "matric": 7, "matrix": [7, 531, 536], "matrix_norm": 212, "matrix_pow": 213, "matrix_rank": 214, "matrix_transpos": 246, "max": [247, 356], "maximum": 248, "mean": [249, 357], "median": 250, "memori": 536, "meshgrid": 251, "method": 536, "mgrid": 252, "min": [253, 358], "minimum": 254, "miscellan": [8, 534, 535], "mod": 255, "modf": 256, "modul": [6, 537], "moveaxi": 257, "mt": 355, "multi": [6, 536], "multi_dot": 215, "multinomi": 424, "multipl": 536, "multipli": 258, "multivariate_norm": 425, "nan": 532, "nan_to_num": 259, "nanargmax": 260, "nanargmin": 261, "nancumprod": 262, "nancumsum": 263, "nanmax": 264, "nanmean": 265, "nanmin": 266, "nanprod": 267, "nanstd": 268, "nansum": 269, "nanvar": 270, "nbyte": 359, "ndarrai": [271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 536], "ndim": [360, 383], "neg": 384, "negative_binomi": 426, "nextaft": 385, "noncentral_chisquar": 427, "noncentral_f": 428, "nonzero": [361, 386], "norm": [216, 531], "normal": [10, 429], "not_equ": 387, "number": [531, 533, 534], "numer": 7, "numpi": [2, 6], "ogrid": 388, "ones": 389, "ones_lik": 390, "oper": [5, 530, 531, 532, 533, 534, 536, 543], "order": 542, "other": [531, 534, 536], "outer": [217, 391], "output": 5, "over": 530, "overview": 3, "pack": 5, "packag": [4, 537], "pad": 392, "parallel": [0, 2], "pareto": 430, "partit": [362, 393], "permut": [431, 538], "permute_dim": 394, "pinv": 218, "place": 395, "point": 534, "poisson": 432, "poly1d": 537, "polynomi": 537, "polyutil": 537, "posit": 396, "pow": 397, "power": [398, 433], "prod": [363, 399], "product": [531, 534], "proj": 400, "ptp": 401, "put": [364, 402], "put_along_axi": 403, "putmask": 404, "python": 4, "qr": 219, "quick": 4, "r": 4, "rad2deg": 405, "radian": 406, "rand": 434, "randint": 435, "randn": 436, "random": [6, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 538], "random_integ": 438, "random_sampl": 439, "randomst": 407, "ranf": 440, "rang": 7, "ration": 534, "ravel": [365, 456], "ravel_multi_index": 457, "rayleigh": 441, "real": [10, 366, 458], "real_if_clos": 459, "rearrang": 533, "reciproc": 460, "reduce_hypot": 461, "refer": [1, 529], "remaind": 462, "remov": 533, "repeat": [367, 463], "requir": 464, "reshap": [368, 465], "resiz": 466, "result_typ": 467, "rfft": 135, "rfft2": 136, "rfftfreq": 137, "rfftn": 138, "right_shift": 468, "rint": 469, "roll": 470, "rollaxi": 471, "rot90": 472, "round": [369, 473, 534], "routin": [7, 8, 10, 530, 533, 534, 535, 539], "row_stack": 474, "rsqrt": 475, "sampl": [6, 442, 538], "scikit": 4, "search": 540, "searchsort": [370, 476], "seed": 443, "select": [477, 536], "shape": [7, 371, 478, 533, 536], "shuffl": 444, "sign": 479, "signbit": 480, "simpl": 538, "sin": 481, "sinc": 482, "sinh": 483, "size": [372, 484], "slogdet": 220, "solv": [221, 531], "sort": [373, 485, 540], "sort_complex": 486, "space": 487, "special": [534, 536, 541], "split": [488, 533], "sqrt": 489, "squar": 490, "squeez": [374, 491], "stack": 492, "standard": 10, "standard_cauchi": 445, "standard_exponenti": 446, "standard_gamma": 447, "standard_norm": 448, "standard_t": 449, "start": 4, "statist": 542, "std": [375, 493], "stride": 376, "subtract": 494, "sum": [377, 495, 534], "summari": 6, "svd": 222, "svdval": 223, "swapax": [378, 496], "sycl": 4, "t": 272, "tabl": 6, "take": [379, 497], "take_along_axi": 498, "tan": 499, "tanh": 500, "target": 4, "tensordot": [224, 501], "tensorinv": 225, "tensorsolv": 226, "test": [4, 8, 532], "tile": [502, 533], "trace": [227, 380, 503], "transform": [6, 10], "transpos": [381, 504, 533], "trapezoid": 505, "tri": 506, "triangular": 450, "trigonometr": [534, 543], "tril": 507, "tril_indic": 508, "tril_indices_from": 509, "trim_zero": 510, "triu": 511, "triu_indic": 512, "triu_indices_from": 513, "true_divid": 514, "trunc": 515, "truth": 532, "twiddl": 543, "type": [8, 9, 532, 536], "ufunc": 543, "uniform": 451, "uniqu": 516, "univers": 543, "unravel_index": 517, "unstack": 518, "unwrap": 519, "util": 535, "valu": [7, 532], "vander": 520, "var": [382, 521], "varianc": 542, "vdot": 522, "vecdot": [228, 523], "vector": 531, "vector_norm": 229, "vonmis": 452, "vsplit": 524, "vstack": 525, "wald": 453, "weibul": 454, "where": 526, "wise": 5, "zero": 527, "zeros_lik": 528, "zipf": 455}})