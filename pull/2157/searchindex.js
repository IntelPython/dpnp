Search.setIndex({"alltitles": {"API Reference": [[539, null]], "Adding and removing elements": [[543, "adding-and-removing-elements"]], "Arithmetic": [[547, "arithmetic"]], "Arithmetic operations": [[544, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[546, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array attributes": [[546, "array-attributes"]], "Array conversion": [[546, "array-conversion"]], "Array creation routines": [[7, null]], "Array manipulation routines": [[543, null]], "Array methods": [[546, "array-methods"]], "Array type testing": [[542, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[553, "available-ufuncs"]], "Averages and variances": [[552, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[543, "basic-operations"]], "Basics": [[547, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[553, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[546, "calculation"]], "Changing array shape": [[543, "changing-array-shape"]], "Changing kind of array": [[543, "changing-kind-of-array"]], "Changing number of dimensions": [[543, "changing-number-of-dimensions"]], "Comparison": [[542, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[553, "comparison-functions"]], "Constructing arrays": [[546, "constructing-arrays"]], "Correlations": [[552, "correlations"]], "Counting": [[550, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[546, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[541, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"], [10, null]], "Distributions": [[548, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[551, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[541, "exceptions"]], "Exponents and logarithms": [[544, "exponents-and-logarithms"]], "Extrema finding": [[544, "extrema-finding"]], "Floating functions": [[553, "floating-functions"]], "Floating point routines": [[544, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Functional programming": [[11, null]], "Generating index arrays": [[540, "generating-index-arrays"]], "Handling complex numbers": [[544, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[552, "histograms"]], "Hyperbolic functions": [[544, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[546, "indexing-arrays"]], "Indexing routines": [[540, null]], "Indexing-like operations": [[540, "indexing-like-operations"]], "Infinities and NaNs": [[542, "infinities-and-nans"]], "Inserting data into arrays": [[540, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[546, "item-selection-and-manipulation"]], "Iterating over arrays": [[540, "iterating-over-arrays"]], "Joining arrays": [[543, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"]], "Linear algebra": [[541, null]], "Logic functions": [[542, null]], "Logic operations": [[542, "logic-operations"]], "Math operations": [[553, "math-operations"]], "Mathematical functions": [[544, null]], "Matrix and vector products": [[541, "matrix-and-vector-products"]], "Matrix eigenvalues": [[541, "matrix-eigenvalues"]], "Memory layout": [[546, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [544, "miscellaneous"]], "Miscellaneous routines": [[545, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[546, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[541, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[552, "order-statistics"]], "Other attributes": [[546, "other-attributes"]], "Other matrix operations": [[541, "other-matrix-operations"]], "Other special functions": [[544, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[548, "permutations"]], "Poly1d": [[547, "poly1d"]], "Polynomial Module": [[547, "polynomial-module"]], "Polynomial Package": [[547, "polynomial-package"]], "Polynomials": [[547, null]], "Polyutils": [[547, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random generator": [[548, "random-generator"]], "Random sampling (dpnp.random)": [[548, null]], "Rational routines": [[544, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[543, "rearranging-elements"]], "Rounding": [[544, "rounding"]], "Routines": [[549, null]], "Searching": [[550, "searching"]], "Shape manipulation": [[546, "shape-manipulation"]], "Simple random data": [[548, "simple-random-data"]], "Solving linear equations": [[541, "solving-linear-equations"]], "Sorting": [[550, "sorting"]], "Sorting, searching, and counting": [[550, null]], "Special Functions": [[551, null]], "Special methods": [[546, "special-methods"]], "Splitting arrays": [[543, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistics": [[552, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[544, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[543, "tiling-arrays"]], "Transpose-like operations": [[543, "transpose-like-operations"]], "Trigonometric functions": [[544, "trigonometric-functions"], [553, "trigonometric-functions"]], "Truth value testing": [[542, "truth-value-testing"]], "Universal Functions (ufunc)": [[553, null]], "Utility": [[545, "utility"]], "dpnp.abs": [[12, null]], "dpnp.absolute": [[13, null]], "dpnp.acos": [[14, null]], "dpnp.acosh": [[15, null]], "dpnp.add": [[16, null]], "dpnp.all": [[17, null]], "dpnp.allclose": [[18, null]], "dpnp.amax": [[19, null]], "dpnp.amin": [[20, null]], "dpnp.angle": [[21, null]], "dpnp.any": [[22, null]], "dpnp.append": [[23, null]], "dpnp.apply_along_axis": [[24, null]], "dpnp.apply_over_axes": [[25, null]], "dpnp.arange": [[26, null]], "dpnp.arccos": [[27, null]], "dpnp.arccosh": [[28, null]], "dpnp.arcsin": [[29, null]], "dpnp.arcsinh": [[30, null]], "dpnp.arctan": [[31, null]], "dpnp.arctan2": [[32, null]], "dpnp.arctanh": [[33, null]], "dpnp.argmax": [[34, null]], "dpnp.argmin": [[35, null]], "dpnp.argsort": [[36, null]], "dpnp.argwhere": [[37, null]], "dpnp.around": [[38, null]], "dpnp.array": [[39, null]], "dpnp.array_equal": [[40, null]], "dpnp.array_equiv": [[41, null]], "dpnp.array_split": [[42, null]], "dpnp.asanyarray": [[43, null]], "dpnp.asarray": [[44, null]], "dpnp.asarray_chkfinite": [[45, null]], "dpnp.ascontiguousarray": [[46, null]], "dpnp.asfarray": [[47, null]], "dpnp.asfortranarray": [[48, null]], "dpnp.asin": [[49, null]], "dpnp.asinh": [[50, null]], "dpnp.asnumpy": [[51, null]], "dpnp.astype": [[52, null]], "dpnp.atan": [[53, null]], "dpnp.atan2": [[54, null]], "dpnp.atanh": [[55, null]], "dpnp.atleast_1d": [[56, null]], "dpnp.atleast_2d": [[57, null]], "dpnp.atleast_3d": [[58, null]], "dpnp.average": [[59, null]], "dpnp.binary_repr": [[60, null]], "dpnp.bincount": [[61, null]], "dpnp.bitwise_and": [[62, null]], "dpnp.bitwise_invert": [[63, null]], "dpnp.bitwise_left_shift": [[64, null]], "dpnp.bitwise_not": [[65, null]], "dpnp.bitwise_or": [[66, null]], "dpnp.bitwise_right_shift": [[67, null]], "dpnp.bitwise_xor": [[68, null]], "dpnp.broadcast_arrays": [[69, null]], "dpnp.broadcast_shapes": [[70, null]], "dpnp.broadcast_to": [[71, null]], "dpnp.byte_bounds": [[72, null]], "dpnp.can_cast": [[73, null]], "dpnp.cbrt": [[74, null]], "dpnp.ceil": [[75, null]], "dpnp.choose": [[76, null]], "dpnp.clip": [[77, null]], "dpnp.column_stack": [[78, null]], "dpnp.concat": [[79, null]], "dpnp.concatenate": [[80, null]], "dpnp.conj": [[81, null]], "dpnp.conjugate": [[82, null]], "dpnp.convolve": [[83, null]], "dpnp.copy": [[84, null]], "dpnp.copysign": [[85, null]], "dpnp.copyto": [[86, null]], "dpnp.corrcoef": [[87, null]], "dpnp.correlate": [[88, null]], "dpnp.cos": [[89, null]], "dpnp.cosh": [[90, null]], "dpnp.count_nonzero": [[91, null]], "dpnp.cov": [[92, null]], "dpnp.cross": [[93, null]], "dpnp.cumlogsumexp": [[94, null]], "dpnp.cumprod": [[95, null]], "dpnp.cumsum": [[96, null]], "dpnp.cumulative_prod": [[97, null]], "dpnp.cumulative_sum": [[98, null]], "dpnp.deg2rad": [[99, null]], "dpnp.degrees": [[100, null]], "dpnp.delete": [[101, null]], "dpnp.diag": [[102, null]], "dpnp.diag_indices": [[103, null]], "dpnp.diag_indices_from": [[104, null]], "dpnp.diagflat": [[105, null]], "dpnp.diagonal": [[106, null]], "dpnp.diff": [[107, null]], "dpnp.digitize": [[108, null]], "dpnp.divide": [[109, null]], "dpnp.dot": [[110, null]], "dpnp.dpnp_array.dpnp_array": [[111, null]], "dpnp.dsplit": [[112, null]], "dpnp.dstack": [[113, null]], "dpnp.dtype": [[114, null]], "dpnp.ediff1d": [[115, null]], "dpnp.einsum": [[116, null]], "dpnp.einsum_path": [[117, null]], "dpnp.empty": [[118, null]], "dpnp.empty_like": [[119, null]], "dpnp.equal": [[120, null]], "dpnp.erf": [[121, null]], "dpnp.exp": [[122, null]], "dpnp.exp2": [[123, null]], "dpnp.expand_dims": [[124, null]], "dpnp.expm1": [[125, null]], "dpnp.extract": [[126, null]], "dpnp.eye": [[127, null]], "dpnp.fabs": [[128, null]], "dpnp.fft.fft": [[129, null]], "dpnp.fft.fft2": [[130, null]], "dpnp.fft.fftfreq": [[131, null]], "dpnp.fft.fftn": [[132, null]], "dpnp.fft.fftshift": [[133, null]], "dpnp.fft.hfft": [[134, null]], "dpnp.fft.ifft": [[135, null]], "dpnp.fft.ifft2": [[136, null]], "dpnp.fft.ifftn": [[137, null]], "dpnp.fft.ifftshift": [[138, null]], "dpnp.fft.ihfft": [[139, null]], "dpnp.fft.irfft": [[140, null]], "dpnp.fft.irfft2": [[141, null]], "dpnp.fft.irfftn": [[142, null]], "dpnp.fft.rfft": [[143, null]], "dpnp.fft.rfft2": [[144, null]], "dpnp.fft.rfftfreq": [[145, null]], "dpnp.fft.rfftn": [[146, null]], "dpnp.fill_diagonal": [[147, null]], "dpnp.finfo": [[148, null]], "dpnp.fix": [[149, null]], "dpnp.flatiter": [[150, null]], "dpnp.flatnonzero": [[151, null]], "dpnp.flip": [[152, null]], "dpnp.fliplr": [[153, null]], "dpnp.flipud": [[154, null]], "dpnp.float_power": [[155, null]], "dpnp.floor": [[156, null]], "dpnp.floor_divide": [[157, null]], "dpnp.fmax": [[158, null]], "dpnp.fmin": [[159, null]], "dpnp.fmod": [[160, null]], "dpnp.from_dlpack": [[161, null]], "dpnp.frombuffer": [[162, null]], "dpnp.fromfile": [[163, null]], "dpnp.fromfunction": [[164, null]], "dpnp.fromiter": [[165, null]], "dpnp.fromstring": [[166, null]], "dpnp.full": [[167, null]], "dpnp.full_like": [[168, null]], "dpnp.gcd": [[169, null]], "dpnp.geomspace": [[170, null]], "dpnp.get_include": [[171, null]], "dpnp.gradient": [[172, null]], "dpnp.greater": [[173, null]], "dpnp.greater_equal": [[174, null]], "dpnp.heaviside": [[175, null]], "dpnp.histogram": [[176, null]], "dpnp.histogram_bin_edges": [[177, null]], "dpnp.hsplit": [[178, null]], "dpnp.hstack": [[179, null]], "dpnp.hypot": [[180, null]], "dpnp.i0": [[181, null]], "dpnp.identity": [[182, null]], "dpnp.iinfo": [[183, null]], "dpnp.imag": [[184, null]], "dpnp.indices": [[185, null]], "dpnp.inner": [[186, null]], "dpnp.insert": [[187, null]], "dpnp.invert": [[188, null]], "dpnp.isclose": [[189, null]], "dpnp.iscomplex": [[190, null]], "dpnp.iscomplexobj": [[191, null]], "dpnp.isfinite": [[192, null]], "dpnp.isfortran": [[193, null]], "dpnp.isinf": [[194, null]], "dpnp.isnan": [[195, null]], "dpnp.isneginf": [[196, null]], "dpnp.isposinf": [[197, null]], "dpnp.isreal": [[198, null]], "dpnp.isrealobj": [[199, null]], "dpnp.isscalar": [[200, null]], "dpnp.issubdtype": [[201, null]], "dpnp.ix_": [[202, null]], "dpnp.kron": [[203, null]], "dpnp.lcm": [[204, null]], "dpnp.ldexp": [[205, null]], "dpnp.left_shift": [[206, null]], "dpnp.less": [[207, null]], "dpnp.less_equal": [[208, null]], "dpnp.linalg.cholesky": [[209, null]], "dpnp.linalg.cond": [[210, null]], "dpnp.linalg.cross": [[211, null]], "dpnp.linalg.det": [[212, null]], "dpnp.linalg.diagonal": [[213, null]], "dpnp.linalg.eig": [[214, null]], "dpnp.linalg.eigh": [[215, null]], "dpnp.linalg.eigvals": [[216, null]], "dpnp.linalg.eigvalsh": [[217, null]], "dpnp.linalg.inv": [[218, null]], "dpnp.linalg.lstsq": [[219, null]], "dpnp.linalg.matmul": [[220, null]], "dpnp.linalg.matrix_norm": [[221, null]], "dpnp.linalg.matrix_power": [[222, null]], "dpnp.linalg.matrix_rank": [[223, null]], "dpnp.linalg.multi_dot": [[224, null]], "dpnp.linalg.norm": [[225, null]], "dpnp.linalg.outer": [[226, null]], "dpnp.linalg.pinv": [[227, null]], "dpnp.linalg.qr": [[228, null]], "dpnp.linalg.slogdet": [[229, null]], "dpnp.linalg.solve": [[230, null]], "dpnp.linalg.svd": [[231, null]], "dpnp.linalg.svdvals": [[232, null]], "dpnp.linalg.tensordot": [[233, null]], "dpnp.linalg.tensorinv": [[234, null]], "dpnp.linalg.tensorsolve": [[235, null]], "dpnp.linalg.trace": [[236, null]], "dpnp.linalg.vecdot": [[237, null]], "dpnp.linalg.vector_norm": [[238, null]], "dpnp.linspace": [[239, null]], "dpnp.loadtxt": [[240, null]], "dpnp.log": [[241, null]], "dpnp.log10": [[242, null]], "dpnp.log1p": [[243, null]], "dpnp.log2": [[244, null]], "dpnp.logaddexp": [[245, null]], "dpnp.logaddexp2": [[246, null]], "dpnp.logical_and": [[247, null]], "dpnp.logical_not": [[248, null]], "dpnp.logical_or": [[249, null]], "dpnp.logical_xor": [[250, null]], "dpnp.logspace": [[251, null]], "dpnp.logsumexp": [[252, null]], "dpnp.mask_indices": [[253, null]], "dpnp.matmul": [[254, null]], "dpnp.matrix_transpose": [[255, null]], "dpnp.max": [[256, null]], "dpnp.maximum": [[257, null]], "dpnp.mean": [[258, null]], "dpnp.median": [[259, null]], "dpnp.meshgrid": [[260, null]], "dpnp.mgrid": [[261, null]], "dpnp.min": [[262, null]], "dpnp.minimum": [[263, null]], "dpnp.mod": [[264, null]], "dpnp.modf": [[265, null]], "dpnp.moveaxis": [[266, null]], "dpnp.multiply": [[267, null]], "dpnp.nan_to_num": [[268, null]], "dpnp.nanargmax": [[269, null]], "dpnp.nanargmin": [[270, null]], "dpnp.nancumprod": [[271, null]], "dpnp.nancumsum": [[272, null]], "dpnp.nanmax": [[273, null]], "dpnp.nanmean": [[274, null]], "dpnp.nanmin": [[275, null]], "dpnp.nanprod": [[276, null]], "dpnp.nanstd": [[277, null]], "dpnp.nansum": [[278, null]], "dpnp.nanvar": [[279, null]], "dpnp.ndarray": [[280, null]], "dpnp.ndarray.T": [[281, null]], "dpnp.ndarray.__abs__": [[282, null]], "dpnp.ndarray.__add__": [[283, null]], "dpnp.ndarray.__and__": [[284, null]], "dpnp.ndarray.__bool__": [[285, null]], "dpnp.ndarray.__complex__": [[286, null]], "dpnp.ndarray.__copy__": [[287, null]], "dpnp.ndarray.__eq__": [[288, null]], "dpnp.ndarray.__float__": [[289, null]], "dpnp.ndarray.__floordiv__": [[290, null]], "dpnp.ndarray.__ge__": [[291, null]], "dpnp.ndarray.__getitem__": [[292, null]], "dpnp.ndarray.__gt__": [[293, null]], "dpnp.ndarray.__iadd__": [[294, null]], "dpnp.ndarray.__iand__": [[295, null]], "dpnp.ndarray.__ifloordiv__": [[296, null]], "dpnp.ndarray.__ilshift__": [[297, null]], "dpnp.ndarray.__imatmul__": [[298, null]], "dpnp.ndarray.__imod__": [[299, null]], "dpnp.ndarray.__imul__": [[300, null]], "dpnp.ndarray.__int__": [[301, null]], "dpnp.ndarray.__invert__": [[302, null]], "dpnp.ndarray.__ior__": [[303, null]], "dpnp.ndarray.__ipow__": [[304, null]], "dpnp.ndarray.__irshift__": [[305, null]], "dpnp.ndarray.__isub__": [[306, null]], "dpnp.ndarray.__itruediv__": [[307, null]], "dpnp.ndarray.__ixor__": [[308, null]], "dpnp.ndarray.__le__": [[309, null]], "dpnp.ndarray.__len__": [[310, null]], "dpnp.ndarray.__lshift__": [[311, null]], "dpnp.ndarray.__lt__": [[312, null]], "dpnp.ndarray.__matmul__": [[313, null]], "dpnp.ndarray.__mod__": [[314, null]], "dpnp.ndarray.__mul__": [[315, null]], "dpnp.ndarray.__ne__": [[316, null]], "dpnp.ndarray.__neg__": [[317, null]], "dpnp.ndarray.__new__": [[318, null]], "dpnp.ndarray.__or__": [[319, null]], "dpnp.ndarray.__pos__": [[320, null]], "dpnp.ndarray.__pow__": [[321, null]], "dpnp.ndarray.__radd__": [[322, null]], "dpnp.ndarray.__rand__": [[323, null]], "dpnp.ndarray.__repr__": [[324, null]], "dpnp.ndarray.__rfloordiv__": [[325, null]], "dpnp.ndarray.__rlshift__": [[326, null]], "dpnp.ndarray.__rmatmul__": [[327, null]], "dpnp.ndarray.__rmod__": [[328, null]], "dpnp.ndarray.__rmul__": [[329, null]], "dpnp.ndarray.__ror__": [[330, null]], "dpnp.ndarray.__rpow__": [[331, null]], "dpnp.ndarray.__rrshift__": [[332, null]], "dpnp.ndarray.__rshift__": [[333, null]], "dpnp.ndarray.__rsub__": [[334, null]], "dpnp.ndarray.__rtruediv__": [[335, null]], "dpnp.ndarray.__rxor__": [[336, null]], "dpnp.ndarray.__setitem__": [[337, null]], "dpnp.ndarray.__str__": [[338, null]], "dpnp.ndarray.__sub__": [[339, null]], "dpnp.ndarray.__truediv__": [[340, null]], "dpnp.ndarray.__xor__": [[341, null]], "dpnp.ndarray.all": [[342, null]], "dpnp.ndarray.any": [[343, null]], "dpnp.ndarray.argmax": [[344, null]], "dpnp.ndarray.argmin": [[345, null]], "dpnp.ndarray.argsort": [[346, null]], "dpnp.ndarray.astype": [[347, null]], "dpnp.ndarray.choose": [[348, null]], "dpnp.ndarray.clip": [[349, null]], "dpnp.ndarray.conj": [[350, null]], "dpnp.ndarray.conjugate": [[351, null]], "dpnp.ndarray.copy": [[352, null]], "dpnp.ndarray.cumprod": [[353, null]], "dpnp.ndarray.cumsum": [[354, null]], "dpnp.ndarray.diagonal": [[355, null]], "dpnp.ndarray.dtype": [[356, null]], "dpnp.ndarray.fill": [[357, null]], "dpnp.ndarray.flags": [[358, null]], "dpnp.ndarray.flat": [[359, null]], "dpnp.ndarray.flatten": [[360, null]], "dpnp.ndarray.imag": [[361, null]], "dpnp.ndarray.item": [[362, null]], "dpnp.ndarray.itemsize": [[363, null]], "dpnp.ndarray.mT": [[364, null]], "dpnp.ndarray.max": [[365, null]], "dpnp.ndarray.mean": [[366, null]], "dpnp.ndarray.min": [[367, null]], "dpnp.ndarray.nbytes": [[368, null]], "dpnp.ndarray.ndim": [[369, null]], "dpnp.ndarray.nonzero": [[370, null]], "dpnp.ndarray.partition": [[371, null]], "dpnp.ndarray.prod": [[372, null]], "dpnp.ndarray.put": [[373, null]], "dpnp.ndarray.ravel": [[374, null]], "dpnp.ndarray.real": [[375, null]], "dpnp.ndarray.repeat": [[376, null]], "dpnp.ndarray.reshape": [[377, null]], "dpnp.ndarray.round": [[378, null]], "dpnp.ndarray.searchsorted": [[379, null]], "dpnp.ndarray.shape": [[380, null]], "dpnp.ndarray.size": [[381, null]], "dpnp.ndarray.sort": [[382, null]], "dpnp.ndarray.squeeze": [[383, null]], "dpnp.ndarray.std": [[384, null]], "dpnp.ndarray.strides": [[385, null]], "dpnp.ndarray.sum": [[386, null]], "dpnp.ndarray.swapaxes": [[387, null]], "dpnp.ndarray.take": [[388, null]], "dpnp.ndarray.trace": [[389, null]], "dpnp.ndarray.transpose": [[390, null]], "dpnp.ndarray.var": [[391, null]], "dpnp.ndim": [[392, null]], "dpnp.ndindex": [[393, null]], "dpnp.negative": [[394, null]], "dpnp.nextafter": [[395, null]], "dpnp.nonzero": [[396, null]], "dpnp.not_equal": [[397, null]], "dpnp.ogrid": [[398, null]], "dpnp.ones": [[399, null]], "dpnp.ones_like": [[400, null]], "dpnp.outer": [[401, null]], "dpnp.pad": [[402, null]], "dpnp.partition": [[403, null]], "dpnp.permute_dims": [[404, null]], "dpnp.place": [[405, null]], "dpnp.positive": [[406, null]], "dpnp.pow": [[407, null]], "dpnp.power": [[408, null]], "dpnp.prod": [[409, null]], "dpnp.proj": [[410, null]], "dpnp.ptp": [[411, null]], "dpnp.put": [[412, null]], "dpnp.put_along_axis": [[413, null]], "dpnp.putmask": [[414, null]], "dpnp.rad2deg": [[415, null]], "dpnp.radians": [[416, null]], "dpnp.random.RandomState": [[417, null]], "dpnp.random.beta": [[418, null]], "dpnp.random.binomial": [[419, null]], "dpnp.random.bytes": [[420, null]], "dpnp.random.chisquare": [[421, null]], "dpnp.random.choice": [[422, null]], "dpnp.random.dirichlet": [[423, null]], "dpnp.random.exponential": [[424, null]], "dpnp.random.f": [[425, null]], "dpnp.random.gamma": [[426, null]], "dpnp.random.geometric": [[427, null]], "dpnp.random.gumbel": [[428, null]], "dpnp.random.hypergeometric": [[429, null]], "dpnp.random.laplace": [[430, null]], "dpnp.random.logistic": [[431, null]], "dpnp.random.lognormal": [[432, null]], "dpnp.random.logseries": [[433, null]], "dpnp.random.multinomial": [[434, null]], "dpnp.random.multivariate_normal": [[435, null]], "dpnp.random.negative_binomial": [[436, null]], "dpnp.random.noncentral_chisquare": [[437, null]], "dpnp.random.noncentral_f": [[438, null]], "dpnp.random.normal": [[439, null]], "dpnp.random.pareto": [[440, null]], "dpnp.random.permutation": [[441, null]], "dpnp.random.poisson": [[442, null]], "dpnp.random.power": [[443, null]], "dpnp.random.rand": [[444, null]], "dpnp.random.randint": [[445, null]], "dpnp.random.randn": [[446, null]], "dpnp.random.random": [[447, null]], "dpnp.random.random_integers": [[448, null]], "dpnp.random.random_sample": [[449, null]], "dpnp.random.ranf": [[450, null]], "dpnp.random.rayleigh": [[451, null]], "dpnp.random.sample": [[452, null]], "dpnp.random.seed": [[453, null]], "dpnp.random.shuffle": [[454, null]], "dpnp.random.standard_cauchy": [[455, null]], "dpnp.random.standard_exponential": [[456, null]], "dpnp.random.standard_gamma": [[457, null]], "dpnp.random.standard_normal": [[458, null]], "dpnp.random.standard_t": [[459, null]], "dpnp.random.triangular": [[460, null]], "dpnp.random.uniform": [[461, null]], "dpnp.random.vonmises": [[462, null]], "dpnp.random.wald": [[463, null]], "dpnp.random.weibull": [[464, null]], "dpnp.random.zipf": [[465, null]], "dpnp.ravel": [[466, null]], "dpnp.ravel_multi_index": [[467, null]], "dpnp.real": [[468, null]], "dpnp.real_if_close": [[469, null]], "dpnp.reciprocal": [[470, null]], "dpnp.reduce_hypot": [[471, null]], "dpnp.remainder": [[472, null]], "dpnp.repeat": [[473, null]], "dpnp.require": [[474, null]], "dpnp.reshape": [[475, null]], "dpnp.resize": [[476, null]], "dpnp.result_type": [[477, null]], "dpnp.right_shift": [[478, null]], "dpnp.rint": [[479, null]], "dpnp.roll": [[480, null]], "dpnp.rollaxis": [[481, null]], "dpnp.rot90": [[482, null]], "dpnp.round": [[483, null]], "dpnp.row_stack": [[484, null]], "dpnp.rsqrt": [[485, null]], "dpnp.searchsorted": [[486, null]], "dpnp.select": [[487, null]], "dpnp.shape": [[488, null]], "dpnp.sign": [[489, null]], "dpnp.signbit": [[490, null]], "dpnp.sin": [[491, null]], "dpnp.sinc": [[492, null]], "dpnp.sinh": [[493, null]], "dpnp.size": [[494, null]], "dpnp.sort": [[495, null]], "dpnp.sort_complex": [[496, null]], "dpnp.spacing": [[497, null]], "dpnp.split": [[498, null]], "dpnp.sqrt": [[499, null]], "dpnp.square": [[500, null]], "dpnp.squeeze": [[501, null]], "dpnp.stack": [[502, null]], "dpnp.std": [[503, null]], "dpnp.subtract": [[504, null]], "dpnp.sum": [[505, null]], "dpnp.swapaxes": [[506, null]], "dpnp.take": [[507, null]], "dpnp.take_along_axis": [[508, null]], "dpnp.tan": [[509, null]], "dpnp.tanh": [[510, null]], "dpnp.tensordot": [[511, null]], "dpnp.tile": [[512, null]], "dpnp.trace": [[513, null]], "dpnp.transpose": [[514, null]], "dpnp.trapezoid": [[515, null]], "dpnp.tri": [[516, null]], "dpnp.tril": [[517, null]], "dpnp.tril_indices": [[518, null]], "dpnp.tril_indices_from": [[519, null]], "dpnp.trim_zeros": [[520, null]], "dpnp.triu": [[521, null]], "dpnp.triu_indices": [[522, null]], "dpnp.triu_indices_from": [[523, null]], "dpnp.true_divide": [[524, null]], "dpnp.trunc": [[525, null]], "dpnp.unique": [[526, null]], "dpnp.unravel_index": [[527, null]], "dpnp.unstack": [[528, null]], "dpnp.unwrap": [[529, null]], "dpnp.vander": [[530, null]], "dpnp.var": [[531, null]], "dpnp.vdot": [[532, null]], "dpnp.vecdot": [[533, null]], "dpnp.vsplit": [[534, null]], "dpnp.vstack": [[535, null]], "dpnp.where": [[536, null]], "dpnp.zeros": [[537, null]], "dpnp.zeros_like": [[538, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.apply_over_axes", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.cumulative_prod", "reference/generated/dpnp.cumulative_sum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.i0", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.ndindex", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.apply_over_axes.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.cumulative_prod.rst", "reference/generated/dpnp.cumulative_sum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.i0.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.ndindex.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[114, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[114, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[114, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[114, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__iter__", false]], "__iter__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[114, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[114, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[114, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[114, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__next__", false]], "__next__() (dpnp.ndindex method)": [[393, "dpnp.ndindex.__next__", false]], "__or__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[333, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[334, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[335, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[336, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[150, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[337, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[338, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[339, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[340, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[341, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[12, "dpnp.abs", false]], "absolute() (in module dpnp)": [[13, "dpnp.absolute", false]], "acos() (in module dpnp)": [[14, "dpnp.acos", false]], "acosh() (in module dpnp)": [[15, "dpnp.acosh", false]], "add() (in module dpnp)": [[16, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[114, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[342, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[17, "dpnp.all", false]], "allclose() (in module dpnp)": [[18, "dpnp.allclose", false]], "amax() (in module dpnp)": [[19, "dpnp.amax", false]], "amin() (in module dpnp)": [[20, "dpnp.amin", false]], "angle() (in module dpnp)": [[21, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[343, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[22, "dpnp.any", false]], "append() (in module dpnp)": [[23, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[24, "dpnp.apply_along_axis", false]], "apply_over_axes() (in module dpnp)": [[25, "dpnp.apply_over_axes", false]], "arange() (in module dpnp)": [[26, "dpnp.arange", false]], "arccos() (in module dpnp)": [[27, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[28, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[29, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[30, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[31, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[32, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[33, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[344, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[34, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[345, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[35, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[346, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[36, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[37, "dpnp.argwhere", false]], "around() (in module dpnp)": [[38, "dpnp.around", false]], "array() (in module dpnp)": [[39, "dpnp.array", false]], "array_equal() (in module dpnp)": [[40, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[41, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[42, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[43, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[44, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[45, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[46, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[47, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[48, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[49, "dpnp.asin", false]], "asinh() (in module dpnp)": [[50, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[51, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[347, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[52, "dpnp.astype", false]], "atan() (in module dpnp)": [[53, "dpnp.atan", false]], "atan2() (in module dpnp)": [[54, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[55, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[56, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[57, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[58, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[59, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[114, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[418, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[60, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[61, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[419, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[62, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[63, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[64, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[65, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[66, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[67, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[68, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[69, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[70, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[71, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[72, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[114, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[420, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[73, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[74, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[75, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[114, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[421, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[422, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[209, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[348, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[76, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[349, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[77, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[78, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[79, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[80, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[210, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[350, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[81, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[351, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[82, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[83, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[352, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[84, "dpnp.copy", false]], "copysign() (in module dpnp)": [[85, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[86, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[87, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[88, "dpnp.correlate", false]], "cos() (in module dpnp)": [[89, "dpnp.cos", false]], "cosh() (in module dpnp)": [[90, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[91, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[92, "dpnp.cov", false]], "cross() (in module dpnp)": [[93, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[211, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[94, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[353, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[95, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[354, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[96, "dpnp.cumsum", false]], "cumulative_prod() (in module dpnp)": [[97, "dpnp.cumulative_prod", false]], "cumulative_sum() (in module dpnp)": [[98, "dpnp.cumulative_sum", false]], "deg2rad() (in module dpnp)": [[99, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[100, "dpnp.degrees", false]], "delete() (in module dpnp)": [[101, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[114, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[212, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[102, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[103, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[104, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[105, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[355, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[106, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[213, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[107, "dpnp.diff", false]], "digitize() (in module dpnp)": [[108, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[423, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[109, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[110, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[111, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[112, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[113, "dpnp.dstack", false]], "dtype (class in dpnp)": [[114, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[356, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[115, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[214, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[215, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[216, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[217, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[116, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[117, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[118, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[119, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[120, "dpnp.equal", false]], "erf() (in module dpnp)": [[121, "dpnp.erf", false]], "exp() (in module dpnp)": [[122, "dpnp.exp", false]], "exp2() (in module dpnp)": [[123, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[124, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[125, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[424, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[126, "dpnp.extract", false]], "eye() (in module dpnp)": [[127, "dpnp.eye", false]], "f() (in module dpnp.random)": [[425, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[128, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[129, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[130, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[131, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[132, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[133, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[114, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[357, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[147, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[148, "dpnp.finfo", false]], "fix() (in module dpnp)": [[149, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[114, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[358, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[359, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[150, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[151, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[360, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[152, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[153, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[154, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[155, "dpnp.float_power", false]], "floor() (in module dpnp)": [[156, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[157, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[158, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[159, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[160, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[161, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[162, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[163, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[164, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[165, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[166, "dpnp.fromstring", false]], "full() (in module dpnp)": [[167, "dpnp.full", false]], "full_like() (in module dpnp)": [[168, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[426, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[169, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[427, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[170, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[171, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[172, "dpnp.gradient", false]], "greater() (in module dpnp)": [[173, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[174, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[428, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[114, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[175, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[134, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[176, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[177, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[178, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[179, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[429, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[180, "dpnp.hypot", false]], "i0() (in module dpnp)": [[181, "dpnp.i0", false]], "identity() (in module dpnp)": [[182, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[135, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[136, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[137, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[138, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[139, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[183, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[361, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[184, "dpnp.imag", false]], "indices() (in module dpnp)": [[185, "dpnp.indices", false]], "inner() (in module dpnp)": [[186, "dpnp.inner", false]], "insert() (in module dpnp)": [[187, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[218, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[188, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[140, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[141, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[142, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[114, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[114, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[189, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[190, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[191, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[192, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[193, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[194, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[195, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[114, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[196, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[197, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[198, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[199, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[200, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[201, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[362, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[114, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[363, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[202, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[114, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[203, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[430, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[204, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[205, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[206, "dpnp.left_shift", false]], "less() (in module dpnp)": [[207, "dpnp.less", false]], "less_equal() (in module dpnp)": [[208, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[239, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[240, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[241, "dpnp.log", false]], "log10() (in module dpnp)": [[242, "dpnp.log10", false]], "log1p() (in module dpnp)": [[243, "dpnp.log1p", false]], "log2() (in module dpnp)": [[244, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[245, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[246, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[247, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[248, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[249, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[250, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[431, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[432, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[433, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[251, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[252, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[219, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[253, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[254, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[220, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[221, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[222, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[223, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[255, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[365, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[256, "dpnp.max", false]], "maximum() (in module dpnp)": [[257, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[366, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[258, "dpnp.mean", false]], "median() (in module dpnp)": [[259, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[260, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[114, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[261, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[367, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[262, "dpnp.min", false]], "minimum() (in module dpnp)": [[263, "dpnp.minimum", false]], "mod() (in module dpnp)": [[264, "dpnp.mod", false]], "modf() (in module dpnp)": [[265, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[266, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[364, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[224, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[434, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[267, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[435, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[114, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[114, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[268, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[269, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[270, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[271, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[272, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[273, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[274, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[275, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[276, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[277, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[278, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[279, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[368, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[280, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[114, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[369, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[392, "dpnp.ndim", false]], "ndindex (class in dpnp)": [[393, "dpnp.ndindex", false]], "negative() (in module dpnp)": [[394, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[436, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[114, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[395, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[437, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[438, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[370, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[396, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[225, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[439, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[397, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[114, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[398, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[399, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[400, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[401, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[226, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[402, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[440, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[371, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[403, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[441, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[404, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[227, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[405, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[442, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[406, "dpnp.positive", false]], "pow() (in module dpnp)": [[407, "dpnp.pow", false]], "power() (in module dpnp)": [[408, "dpnp.power", false]], "power() (in module dpnp.random)": [[443, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[372, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[409, "dpnp.prod", false]], "proj() (in module dpnp)": [[410, "dpnp.proj", false]], "ptp() (in module dpnp)": [[411, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[373, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[412, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[413, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[414, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[228, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[415, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[416, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[444, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[445, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[446, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[447, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[448, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[449, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[417, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[450, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[374, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[466, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[467, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[451, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[375, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[468, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[469, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[470, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[471, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[472, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[376, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[473, "dpnp.repeat", false]], "require() (in module dpnp)": [[474, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[377, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[475, "dpnp.reshape", false]], "resize() (in module dpnp)": [[476, "dpnp.resize", false]], "result_type() (in module dpnp)": [[477, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[143, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[144, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[145, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[146, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[478, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[479, "dpnp.rint", false]], "roll() (in module dpnp)": [[480, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[481, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[482, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[378, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[483, "dpnp.round", false]], "row_stack() (in module dpnp)": [[484, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[485, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[452, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[379, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[486, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[453, "dpnp.random.seed", false]], "select() (in module dpnp)": [[487, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[114, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[380, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[488, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[454, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[489, "dpnp.sign", false]], "signbit() (in module dpnp)": [[490, "dpnp.signbit", false]], "sin() (in module dpnp)": [[491, "dpnp.sin", false]], "sinc() (in module dpnp)": [[492, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[493, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[381, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[494, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[229, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[230, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[382, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[495, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[496, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[497, "dpnp.spacing", false]], "split() (in module dpnp)": [[498, "dpnp.split", false]], "sqrt() (in module dpnp)": [[499, "dpnp.sqrt", false]], "square() (in module dpnp)": [[500, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[383, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[501, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[502, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[455, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[456, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[457, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[458, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[459, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[384, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[503, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[114, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[385, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[114, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[504, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[386, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[505, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[231, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[232, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[387, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[506, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[281, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[388, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[507, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[508, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[509, "dpnp.tan", false]], "tanh() (in module dpnp)": [[510, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[511, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[233, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[234, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[235, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[512, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[389, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[513, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[236, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[390, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[514, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[515, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[516, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[460, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[517, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[518, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[519, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[520, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[521, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[522, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[523, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[524, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[525, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[114, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[417, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[461, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[526, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[527, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[528, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[529, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[111, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[530, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[111, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[391, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[531, "dpnp.var", false]], "vdot() (in module dpnp)": [[532, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[533, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[237, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[238, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[462, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[534, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[535, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[463, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[464, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[536, "dpnp.where", false]], "zeros() (in module dpnp)": [[537, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[538, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[465, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[12, 1, 1, "", "abs"], [13, 1, 1, "", "absolute"], [14, 1, 1, "", "acos"], [15, 1, 1, "", "acosh"], [16, 1, 1, "", "add"], [17, 1, 1, "", "all"], [18, 1, 1, "", "allclose"], [19, 1, 1, "", "amax"], [20, 1, 1, "", "amin"], [21, 1, 1, "", "angle"], [22, 1, 1, "", "any"], [23, 1, 1, "", "append"], [24, 1, 1, "", "apply_along_axis"], [25, 1, 1, "", "apply_over_axes"], [26, 1, 1, "", "arange"], [27, 1, 1, "", "arccos"], [28, 1, 1, "", "arccosh"], [29, 1, 1, "", "arcsin"], [30, 1, 1, "", "arcsinh"], [31, 1, 1, "", "arctan"], [32, 1, 1, "", "arctan2"], [33, 1, 1, "", "arctanh"], [34, 1, 1, "", "argmax"], [35, 1, 1, "", "argmin"], [36, 1, 1, "", "argsort"], [37, 1, 1, "", "argwhere"], [38, 1, 1, "", "around"], [39, 1, 1, "", "array"], [40, 1, 1, "", "array_equal"], [41, 1, 1, "", "array_equiv"], [42, 1, 1, "", "array_split"], [43, 1, 1, "", "asanyarray"], [44, 1, 1, "", "asarray"], [45, 1, 1, "", "asarray_chkfinite"], [46, 1, 1, "", "ascontiguousarray"], [47, 1, 1, "", "asfarray"], [48, 1, 1, "", "asfortranarray"], [49, 1, 1, "", "asin"], [50, 1, 1, "", "asinh"], [51, 1, 1, "", "asnumpy"], [52, 1, 1, "", "astype"], [53, 1, 1, "", "atan"], [54, 1, 1, "", "atan2"], [55, 1, 1, "", "atanh"], [56, 1, 1, "", "atleast_1d"], [57, 1, 1, "", "atleast_2d"], [58, 1, 1, "", "atleast_3d"], [59, 1, 1, "", "average"], [60, 1, 1, "", "binary_repr"], [61, 1, 1, "", "bincount"], [62, 1, 1, "", "bitwise_and"], [63, 1, 1, "", "bitwise_invert"], [64, 1, 1, "", "bitwise_left_shift"], [65, 1, 1, "", "bitwise_not"], [66, 1, 1, "", "bitwise_or"], [67, 1, 1, "", "bitwise_right_shift"], [68, 1, 1, "", "bitwise_xor"], [69, 1, 1, "", "broadcast_arrays"], [70, 1, 1, "", "broadcast_shapes"], [71, 1, 1, "", "broadcast_to"], [72, 1, 1, "", "byte_bounds"], [73, 1, 1, "", "can_cast"], [74, 1, 1, "", "cbrt"], [75, 1, 1, "", "ceil"], [76, 1, 1, "", "choose"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "column_stack"], [79, 1, 1, "", "concat"], [80, 1, 1, "", "concatenate"], [81, 1, 1, "", "conj"], [82, 1, 1, "", "conjugate"], [83, 1, 1, "", "convolve"], [84, 1, 1, "", "copy"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "copyto"], [87, 1, 1, "", "corrcoef"], [88, 1, 1, "", "correlate"], [89, 1, 1, "", "cos"], [90, 1, 1, "", "cosh"], [91, 1, 1, "", "count_nonzero"], [92, 1, 1, "", "cov"], [93, 1, 1, "", "cross"], [94, 1, 1, "", "cumlogsumexp"], [95, 1, 1, "", "cumprod"], [96, 1, 1, "", "cumsum"], [97, 1, 1, "", "cumulative_prod"], [98, 1, 1, "", "cumulative_sum"], [99, 1, 1, "", "deg2rad"], [100, 1, 1, "", "degrees"], [101, 1, 1, "", "delete"], [102, 1, 1, "", "diag"], [103, 1, 1, "", "diag_indices"], [104, 1, 1, "", "diag_indices_from"], [105, 1, 1, "", "diagflat"], [106, 1, 1, "", "diagonal"], [107, 1, 1, "", "diff"], [108, 1, 1, "", "digitize"], [109, 1, 1, "", "divide"], [110, 1, 1, "", "dot"], [112, 1, 1, "", "dsplit"], [113, 1, 1, "", "dstack"], [114, 2, 1, "", "dtype"], [115, 1, 1, "", "ediff1d"], [116, 1, 1, "", "einsum"], [117, 1, 1, "", "einsum_path"], [118, 1, 1, "", "empty"], [119, 1, 1, "", "empty_like"], [120, 1, 1, "", "equal"], [121, 1, 1, "", "erf"], [122, 1, 1, "", "exp"], [123, 1, 1, "", "exp2"], [124, 1, 1, "", "expand_dims"], [125, 1, 1, "", "expm1"], [126, 1, 1, "", "extract"], [127, 1, 1, "", "eye"], [128, 1, 1, "", "fabs"], [147, 1, 1, "", "fill_diagonal"], [148, 1, 1, "", "finfo"], [149, 1, 1, "", "fix"], [150, 2, 1, "", "flatiter"], [151, 1, 1, "", "flatnonzero"], [152, 1, 1, "", "flip"], [153, 1, 1, "", "fliplr"], [154, 1, 1, "", "flipud"], [155, 1, 1, "", "float_power"], [156, 1, 1, "", "floor"], [157, 1, 1, "", "floor_divide"], [158, 1, 1, "", "fmax"], [159, 1, 1, "", "fmin"], [160, 1, 1, "", "fmod"], [161, 1, 1, "", "from_dlpack"], [162, 1, 1, "", "frombuffer"], [163, 1, 1, "", "fromfile"], [164, 1, 1, "", "fromfunction"], [165, 1, 1, "", "fromiter"], [166, 1, 1, "", "fromstring"], [167, 1, 1, "", "full"], [168, 1, 1, "", "full_like"], [169, 1, 1, "", "gcd"], [170, 1, 1, "", "geomspace"], [171, 1, 1, "", "get_include"], [172, 1, 1, "", "gradient"], [173, 1, 1, "", "greater"], [174, 1, 1, "", "greater_equal"], [175, 1, 1, "", "heaviside"], [176, 1, 1, "", "histogram"], [177, 1, 1, "", "histogram_bin_edges"], [178, 1, 1, "", "hsplit"], [179, 1, 1, "", "hstack"], [180, 1, 1, "", "hypot"], [181, 1, 1, "", "i0"], [182, 1, 1, "", "identity"], [183, 1, 1, "", "iinfo"], [184, 1, 1, "", "imag"], [185, 1, 1, "", "indices"], [186, 1, 1, "", "inner"], [187, 1, 1, "", "insert"], [188, 1, 1, "", "invert"], [189, 1, 1, "", "isclose"], [190, 1, 1, "", "iscomplex"], [191, 1, 1, "", "iscomplexobj"], [192, 1, 1, "", "isfinite"], [193, 1, 1, "", "isfortran"], [194, 1, 1, "", "isinf"], [195, 1, 1, "", "isnan"], [196, 1, 1, "", "isneginf"], [197, 1, 1, "", "isposinf"], [198, 1, 1, "", "isreal"], [199, 1, 1, "", "isrealobj"], [200, 1, 1, "", "isscalar"], [201, 1, 1, "", "issubdtype"], [202, 1, 1, "", "ix_"], [203, 1, 1, "", "kron"], [204, 1, 1, "", "lcm"], [205, 1, 1, "", "ldexp"], [206, 1, 1, "", "left_shift"], [207, 1, 1, "", "less"], [208, 1, 1, "", "less_equal"], [239, 1, 1, "", "linspace"], [240, 1, 1, "", "loadtxt"], [241, 1, 1, "", "log"], [242, 1, 1, "", "log10"], [243, 1, 1, "", "log1p"], [244, 1, 1, "", "log2"], [245, 1, 1, "", "logaddexp"], [246, 1, 1, "", "logaddexp2"], [247, 1, 1, "", "logical_and"], [248, 1, 1, "", "logical_not"], [249, 1, 1, "", "logical_or"], [250, 1, 1, "", "logical_xor"], [251, 1, 1, "", "logspace"], [252, 1, 1, "", "logsumexp"], [253, 1, 1, "", "mask_indices"], [254, 1, 1, "", "matmul"], [255, 1, 1, "", "matrix_transpose"], [256, 1, 1, "", "max"], [257, 1, 1, "", "maximum"], [258, 1, 1, "", "mean"], [259, 1, 1, "", "median"], [260, 1, 1, "", "meshgrid"], [261, 5, 1, "", "mgrid"], [262, 1, 1, "", "min"], [263, 1, 1, "", "minimum"], [264, 1, 1, "", "mod"], [265, 1, 1, "", "modf"], [266, 1, 1, "", "moveaxis"], [267, 1, 1, "", "multiply"], [268, 1, 1, "", "nan_to_num"], [269, 1, 1, "", "nanargmax"], [270, 1, 1, "", "nanargmin"], [271, 1, 1, "", "nancumprod"], [272, 1, 1, "", "nancumsum"], [273, 1, 1, "", "nanmax"], [274, 1, 1, "", "nanmean"], [275, 1, 1, "", "nanmin"], [276, 1, 1, "", "nanprod"], [277, 1, 1, "", "nanstd"], [278, 1, 1, "", "nansum"], [279, 1, 1, "", "nanvar"], [280, 3, 1, "", "ndarray"], [392, 1, 1, "", "ndim"], [393, 2, 1, "", "ndindex"], [394, 1, 1, "", "negative"], [395, 1, 1, "", "nextafter"], [396, 1, 1, "", "nonzero"], [397, 1, 1, "", "not_equal"], [398, 5, 1, "", "ogrid"], [399, 1, 1, "", "ones"], [400, 1, 1, "", "ones_like"], [401, 1, 1, "", "outer"], [402, 1, 1, "", "pad"], [403, 1, 1, "", "partition"], [404, 1, 1, "", "permute_dims"], [405, 1, 1, "", "place"], [406, 1, 1, "", "positive"], [407, 1, 1, "", "pow"], [408, 1, 1, "", "power"], [409, 1, 1, "", "prod"], [410, 1, 1, "", "proj"], [411, 1, 1, "", "ptp"], [412, 1, 1, "", "put"], [413, 1, 1, "", "put_along_axis"], [414, 1, 1, "", "putmask"], [415, 1, 1, "", "rad2deg"], [416, 1, 1, "", "radians"], [466, 1, 1, "", "ravel"], [467, 1, 1, "", "ravel_multi_index"], [468, 1, 1, "", "real"], [469, 1, 1, "", "real_if_close"], [470, 1, 1, "", "reciprocal"], [471, 1, 1, "", "reduce_hypot"], [472, 1, 1, "", "remainder"], [473, 1, 1, "", "repeat"], [474, 1, 1, "", "require"], [475, 1, 1, "", "reshape"], [476, 1, 1, "", "resize"], [477, 1, 1, "", "result_type"], [478, 1, 1, "", "right_shift"], [479, 1, 1, "", "rint"], [480, 1, 1, "", "roll"], [481, 1, 1, "", "rollaxis"], [482, 1, 1, "", "rot90"], [483, 1, 1, "", "round"], [484, 1, 1, "", "row_stack"], [485, 1, 1, "", "rsqrt"], [486, 1, 1, "", "searchsorted"], [487, 1, 1, "", "select"], [488, 1, 1, "", "shape"], [489, 1, 1, "", "sign"], [490, 1, 1, "", "signbit"], [491, 1, 1, "", "sin"], [492, 1, 1, "", "sinc"], [493, 1, 1, "", "sinh"], [494, 1, 1, "", "size"], [495, 1, 1, "", "sort"], [496, 1, 1, "", "sort_complex"], [497, 1, 1, "", "spacing"], [498, 1, 1, "", "split"], [499, 1, 1, "", "sqrt"], [500, 1, 1, "", "square"], [501, 1, 1, "", "squeeze"], [502, 1, 1, "", "stack"], [503, 1, 1, "", "std"], [504, 1, 1, "", "subtract"], [505, 1, 1, "", "sum"], [506, 1, 1, "", "swapaxes"], [507, 1, 1, "", "take"], [508, 1, 1, "", "take_along_axis"], [509, 1, 1, "", "tan"], [510, 1, 1, "", "tanh"], [511, 1, 1, "", "tensordot"], [512, 1, 1, "", "tile"], [513, 1, 1, "", "trace"], [514, 1, 1, "", "transpose"], [515, 1, 1, "", "trapezoid"], [516, 1, 1, "", "tri"], [517, 1, 1, "", "tril"], [518, 1, 1, "", "tril_indices"], [519, 1, 1, "", "tril_indices_from"], [520, 1, 1, "", "trim_zeros"], [521, 1, 1, "", "triu"], [522, 1, 1, "", "triu_indices"], [523, 1, 1, "", "triu_indices_from"], [524, 1, 1, "", "true_divide"], [525, 1, 1, "", "trunc"], [526, 1, 1, "", "unique"], [527, 1, 1, "", "unravel_index"], [528, 1, 1, "", "unstack"], [529, 1, 1, "", "unwrap"], [530, 1, 1, "", "vander"], [531, 1, 1, "", "var"], [532, 1, 1, "", "vdot"], [533, 1, 1, "", "vecdot"], [534, 1, 1, "", "vsplit"], [535, 1, 1, "", "vstack"], [536, 1, 1, "", "where"], [537, 1, 1, "", "zeros"], [538, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[111, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[111, 3, 1, "", "T"], [111, 4, 1, "", "__eq__"], [111, 4, 1, "", "__ge__"], [111, 4, 1, "", "__getitem__"], [111, 4, 1, "", "__gt__"], [111, 4, 1, "", "__le__"], [111, 4, 1, "", "__len__"], [111, 4, 1, "", "__lt__"], [111, 4, 1, "", "__ne__"], [111, 4, 1, "", "__setitem__"], [111, 4, 1, "", "all"], [111, 4, 1, "", "any"], [111, 4, 1, "", "argmax"], [111, 4, 1, "", "argmin"], [111, 4, 1, "", "argsort"], [111, 4, 1, "", "asnumpy"], [111, 4, 1, "", "astype"], [111, 4, 1, "", "choose"], [111, 4, 1, "", "clip"], [111, 4, 1, "", "conj"], [111, 4, 1, "", "conjugate"], [111, 4, 1, "", "copy"], [111, 4, 1, "", "cumprod"], [111, 4, 1, "", "cumsum"], [111, 3, 1, "", "device"], [111, 4, 1, "", "diagonal"], [111, 4, 1, "", "dot"], [111, 3, 1, "", "dtype"], [111, 4, 1, "", "fill"], [111, 3, 1, "", "flags"], [111, 3, 1, "", "flat"], [111, 4, 1, "", "flatten"], [111, 4, 1, "", "get_array"], [111, 3, 1, "", "imag"], [111, 4, 1, "", "item"], [111, 3, 1, "", "itemsize"], [111, 3, 1, "", "mT"], [111, 4, 1, "", "max"], [111, 4, 1, "", "mean"], [111, 4, 1, "", "min"], [111, 3, 1, "", "nbytes"], [111, 3, 1, "", "ndim"], [111, 4, 1, "", "nonzero"], [111, 4, 1, "", "partition"], [111, 4, 1, "", "prod"], [111, 4, 1, "", "put"], [111, 4, 1, "", "ravel"], [111, 3, 1, "", "real"], [111, 4, 1, "", "repeat"], [111, 4, 1, "", "reshape"], [111, 4, 1, "", "round"], [111, 4, 1, "", "searchsorted"], [111, 3, 1, "", "shape"], [111, 3, 1, "", "size"], [111, 4, 1, "", "sort"], [111, 4, 1, "", "squeeze"], [111, 4, 1, "", "std"], [111, 3, 1, "", "strides"], [111, 4, 1, "", "sum"], [111, 4, 1, "", "swapaxes"], [111, 3, 1, "", "sycl_context"], [111, 3, 1, "", "sycl_device"], [111, 3, 1, "", "sycl_queue"], [111, 4, 1, "", "take"], [111, 4, 1, "", "to_device"], [111, 4, 1, "", "trace"], [111, 4, 1, "", "transpose"], [111, 3, 1, "", "usm_type"], [111, 4, 1, "", "var"]], "dpnp.dtype": [[114, 4, 1, "", "__eq__"], [114, 4, 1, "", "__ge__"], [114, 4, 1, "", "__getitem__"], [114, 4, 1, "", "__gt__"], [114, 4, 1, "", "__le__"], [114, 4, 1, "", "__len__"], [114, 4, 1, "", "__lt__"], [114, 4, 1, "", "__ne__"], [114, 3, 1, "", "alignment"], [114, 3, 1, "", "base"], [114, 3, 1, "", "byteorder"], [114, 3, 1, "", "char"], [114, 3, 1, "", "descr"], [114, 3, 1, "", "fields"], [114, 3, 1, "", "flags"], [114, 3, 1, "", "hasobject"], [114, 3, 1, "", "isalignedstruct"], [114, 3, 1, "", "isbuiltin"], [114, 3, 1, "", "isnative"], [114, 3, 1, "", "itemsize"], [114, 3, 1, "", "kind"], [114, 3, 1, "", "metadata"], [114, 3, 1, "", "name"], [114, 3, 1, "", "names"], [114, 3, 1, "", "ndim"], [114, 4, 1, "", "newbyteorder"], [114, 3, 1, "", "num"], [114, 3, 1, "", "shape"], [114, 3, 1, "", "str"], [114, 3, 1, "", "subdtype"], [114, 3, 1, "", "type"]], "dpnp.fft": [[129, 1, 1, "", "fft"], [130, 1, 1, "", "fft2"], [131, 1, 1, "", "fftfreq"], [132, 1, 1, "", "fftn"], [133, 1, 1, "", "fftshift"], [134, 1, 1, "", "hfft"], [135, 1, 1, "", "ifft"], [136, 1, 1, "", "ifft2"], [137, 1, 1, "", "ifftn"], [138, 1, 1, "", "ifftshift"], [139, 1, 1, "", "ihfft"], [140, 1, 1, "", "irfft"], [141, 1, 1, "", "irfft2"], [142, 1, 1, "", "irfftn"], [143, 1, 1, "", "rfft"], [144, 1, 1, "", "rfft2"], [145, 1, 1, "", "rfftfreq"], [146, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[150, 4, 1, "", "__eq__"], [150, 4, 1, "", "__ge__"], [150, 4, 1, "", "__getitem__"], [150, 4, 1, "", "__gt__"], [150, 4, 1, "", "__iter__"], [150, 4, 1, "", "__le__"], [150, 4, 1, "", "__lt__"], [150, 4, 1, "", "__ne__"], [150, 4, 1, "", "__next__"], [150, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[209, 1, 1, "", "cholesky"], [210, 1, 1, "", "cond"], [211, 1, 1, "", "cross"], [212, 1, 1, "", "det"], [213, 1, 1, "", "diagonal"], [214, 1, 1, "", "eig"], [215, 1, 1, "", "eigh"], [216, 1, 1, "", "eigvals"], [217, 1, 1, "", "eigvalsh"], [218, 1, 1, "", "inv"], [219, 1, 1, "", "lstsq"], [220, 1, 1, "", "matmul"], [221, 1, 1, "", "matrix_norm"], [222, 1, 1, "", "matrix_power"], [223, 1, 1, "", "matrix_rank"], [224, 1, 1, "", "multi_dot"], [225, 1, 1, "", "norm"], [226, 1, 1, "", "outer"], [227, 1, 1, "", "pinv"], [228, 1, 1, "", "qr"], [229, 1, 1, "", "slogdet"], [230, 1, 1, "", "solve"], [231, 1, 1, "", "svd"], [232, 1, 1, "", "svdvals"], [233, 1, 1, "", "tensordot"], [234, 1, 1, "", "tensorinv"], [235, 1, 1, "", "tensorsolve"], [236, 1, 1, "", "trace"], [237, 1, 1, "", "vecdot"], [238, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[281, 6, 1, "", "T"], [282, 4, 1, "", "__abs__"], [283, 4, 1, "", "__add__"], [284, 4, 1, "", "__and__"], [285, 4, 1, "", "__bool__"], [286, 4, 1, "", "__complex__"], [287, 4, 1, "", "__copy__"], [288, 4, 1, "", "__eq__"], [289, 4, 1, "", "__float__"], [290, 4, 1, "", "__floordiv__"], [291, 4, 1, "", "__ge__"], [292, 4, 1, "", "__getitem__"], [293, 4, 1, "", "__gt__"], [294, 4, 1, "", "__iadd__"], [295, 4, 1, "", "__iand__"], [296, 4, 1, "", "__ifloordiv__"], [297, 4, 1, "", "__ilshift__"], [298, 4, 1, "", "__imatmul__"], [299, 4, 1, "", "__imod__"], [300, 4, 1, "", "__imul__"], [301, 4, 1, "", "__int__"], [302, 4, 1, "", "__invert__"], [303, 4, 1, "", "__ior__"], [304, 4, 1, "", "__ipow__"], [305, 4, 1, "", "__irshift__"], [306, 4, 1, "", "__isub__"], [307, 4, 1, "", "__itruediv__"], [308, 4, 1, "", "__ixor__"], [309, 4, 1, "", "__le__"], [310, 4, 1, "", "__len__"], [311, 4, 1, "", "__lshift__"], [312, 4, 1, "", "__lt__"], [313, 4, 1, "", "__matmul__"], [314, 4, 1, "", "__mod__"], [315, 4, 1, "", "__mul__"], [316, 4, 1, "", "__ne__"], [317, 4, 1, "", "__neg__"], [318, 4, 1, "", "__new__"], [319, 4, 1, "", "__or__"], [320, 4, 1, "", "__pos__"], [321, 4, 1, "", "__pow__"], [322, 4, 1, "", "__radd__"], [323, 4, 1, "", "__rand__"], [324, 4, 1, "", "__repr__"], [325, 4, 1, "", "__rfloordiv__"], [326, 4, 1, "", "__rlshift__"], [327, 4, 1, "", "__rmatmul__"], [328, 4, 1, "", "__rmod__"], [329, 4, 1, "", "__rmul__"], [330, 4, 1, "", "__ror__"], [331, 4, 1, "", "__rpow__"], [332, 4, 1, "", "__rrshift__"], [333, 4, 1, "", "__rshift__"], [334, 4, 1, "", "__rsub__"], [335, 4, 1, "", "__rtruediv__"], [336, 4, 1, "", "__rxor__"], [337, 4, 1, "", "__setitem__"], [338, 4, 1, "", "__str__"], [339, 4, 1, "", "__sub__"], [340, 4, 1, "", "__truediv__"], [341, 4, 1, "", "__xor__"], [342, 4, 1, "", "all"], [343, 4, 1, "", "any"], [344, 4, 1, "", "argmax"], [345, 4, 1, "", "argmin"], [346, 4, 1, "", "argsort"], [347, 4, 1, "", "astype"], [348, 4, 1, "", "choose"], [349, 4, 1, "", "clip"], [350, 4, 1, "", "conj"], [351, 4, 1, "", "conjugate"], [352, 4, 1, "", "copy"], [353, 4, 1, "", "cumprod"], [354, 4, 1, "", "cumsum"], [355, 4, 1, "", "diagonal"], [356, 6, 1, "", "dtype"], [357, 4, 1, "", "fill"], [358, 6, 1, "", "flags"], [359, 6, 1, "", "flat"], [360, 4, 1, "", "flatten"], [361, 6, 1, "", "imag"], [362, 4, 1, "", "item"], [363, 6, 1, "", "itemsize"], [364, 6, 1, "", "mT"], [365, 4, 1, "", "max"], [366, 4, 1, "", "mean"], [367, 4, 1, "", "min"], [368, 6, 1, "", "nbytes"], [369, 6, 1, "", "ndim"], [370, 4, 1, "", "nonzero"], [371, 4, 1, "", "partition"], [372, 4, 1, "", "prod"], [373, 4, 1, "", "put"], [374, 4, 1, "", "ravel"], [375, 6, 1, "", "real"], [376, 4, 1, "", "repeat"], [377, 4, 1, "", "reshape"], [378, 4, 1, "", "round"], [379, 4, 1, "", "searchsorted"], [380, 6, 1, "", "shape"], [381, 6, 1, "", "size"], [382, 4, 1, "", "sort"], [383, 4, 1, "", "squeeze"], [384, 4, 1, "", "std"], [385, 6, 1, "", "strides"], [386, 4, 1, "", "sum"], [387, 4, 1, "", "swapaxes"], [388, 4, 1, "", "take"], [389, 4, 1, "", "trace"], [390, 4, 1, "", "transpose"], [391, 4, 1, "", "var"]], "dpnp.ndindex": [[393, 4, 1, "", "__eq__"], [393, 4, 1, "", "__ge__"], [393, 4, 1, "", "__gt__"], [393, 4, 1, "", "__iter__"], [393, 4, 1, "", "__le__"], [393, 4, 1, "", "__lt__"], [393, 4, 1, "", "__ne__"], [393, 4, 1, "", "__next__"]], "dpnp.random": [[417, 2, 1, "", "RandomState"], [418, 1, 1, "", "beta"], [419, 1, 1, "", "binomial"], [420, 1, 1, "", "bytes"], [421, 1, 1, "", "chisquare"], [422, 1, 1, "", "choice"], [423, 1, 1, "", "dirichlet"], [424, 1, 1, "", "exponential"], [425, 1, 1, "", "f"], [426, 1, 1, "", "gamma"], [427, 1, 1, "", "geometric"], [428, 1, 1, "", "gumbel"], [429, 1, 1, "", "hypergeometric"], [430, 1, 1, "", "laplace"], [431, 1, 1, "", "logistic"], [432, 1, 1, "", "lognormal"], [433, 1, 1, "", "logseries"], [434, 1, 1, "", "multinomial"], [435, 1, 1, "", "multivariate_normal"], [436, 1, 1, "", "negative_binomial"], [437, 1, 1, "", "noncentral_chisquare"], [438, 1, 1, "", "noncentral_f"], [439, 1, 1, "", "normal"], [440, 1, 1, "", "pareto"], [441, 1, 1, "", "permutation"], [442, 1, 1, "", "poisson"], [443, 1, 1, "", "power"], [444, 1, 1, "", "rand"], [445, 1, 1, "", "randint"], [446, 1, 1, "", "randn"], [447, 1, 1, "", "random"], [448, 1, 1, "", "random_integers"], [449, 1, 1, "", "random_sample"], [450, 1, 1, "", "ranf"], [451, 1, 1, "", "rayleigh"], [452, 1, 1, "", "sample"], [453, 1, 1, "", "seed"], [454, 1, 1, "", "shuffle"], [455, 1, 1, "", "standard_cauchy"], [456, 1, 1, "", "standard_exponential"], [457, 1, 1, "", "standard_gamma"], [458, 1, 1, "", "standard_normal"], [459, 1, 1, "", "standard_t"], [460, 1, 1, "", "triangular"], [461, 1, 1, "", "uniform"], [462, 1, 1, "", "vonmises"], [463, 1, 1, "", "wald"], [464, 1, 1, "", "weibull"], [465, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[417, 4, 1, "", "__eq__"], [417, 4, 1, "", "__ge__"], [417, 4, 1, "", "__gt__"], [417, 4, 1, "", "__le__"], [417, 4, 1, "", "__lt__"], [417, 4, 1, "", "__ne__"], [417, 4, 1, "", "get_state"], [417, 4, 1, "", "get_sycl_device"], [417, 4, 1, "", "get_sycl_queue"], [417, 4, 1, "", "normal"], [417, 4, 1, "", "rand"], [417, 4, 1, "", "randint"], [417, 4, 1, "", "randn"], [417, 4, 1, "", "random_sample"], [417, 4, 1, "", "standard_normal"], [417, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 23, 60, 93, 96, 111, 114, 115, 130, 132, 134, 136, 137, 139, 141, 142, 144, 146, 147, 162, 163, 219, 223, 225, 227, 231, 232, 233, 356, 390, 417, 418, 419, 424, 425, 426, 428, 429, 430, 431, 432, 434, 436, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 475, 511, 512, 546], "0": [0, 4, 6, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 172, 175, 176, 177, 178, 181, 182, 185, 186, 187, 189, 192, 194, 195, 196, 197, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 352, 355, 357, 361, 362, 364, 375, 378, 380, 382, 384, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 439, 441, 442, 443, 444, 447, 449, 450, 451, 452, 455, 458, 460, 461, 462, 467, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 536, 537, 538, 546], "00": [89, 117, 129, 491], "000": [268, 419], "00000000005e": 125, "000000001": 62, "00000000e": [129, 268], "000000082740371e": 125, "000000e": [89, 491], "00001101": [62, 63, 65, 66, 68, 188], "00001e10": [18, 189], "00010000": 66, "00010001": [62, 68], "00011100": 68, "00011101": 66, "0001e10": 189, "000e": 117, "000j": 268, "0011": 60, "002": 268, "00225109": 87, "00867716": 421, "01": [87, 117], "02": [87, 117, 268], "03": 268, "03047091": 87, "03088525e": 118, "0342579": 87, "0396842": 251, "04": 117, "04719755": 416, "04921661": 417, "04923628": 492, "05": [18, 117, 189], "05846808": 492, "0614962j": [130, 144], "06310682": 417, "06682066": 492, "07": 268, "07012729": 87, "0728188e": 87, "07944154": [94, 229], "08": [18, 89, 117, 155, 189, 435, 491], "08156915": 417, "08409186": 492, "08504448": 492, "08903844": 492, "09373496": 87, "0943951": 416, "09640474": 246, "09861229": [94, 229, 243], "0d": 37, "0dev2": 6, "0j": [21, 110, 111, 190, 191, 198, 199, 220, 254, 361, 375, 489], "0th": [233, 511], "1": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 193, 198, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 346, 347, 352, 355, 357, 360, 361, 362, 364, 369, 371, 375, 380, 382, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 421, 422, 424, 426, 428, 430, 431, 432, 434, 435, 436, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 456, 458, 461, 466, 467, 468, 469, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546], "10": [0, 4, 15, 16, 25, 28, 30, 34, 35, 50, 59, 64, 67, 77, 84, 94, 95, 96, 97, 98, 101, 103, 104, 107, 108, 111, 112, 114, 116, 117, 125, 126, 133, 145, 167, 170, 176, 177, 178, 184, 189, 202, 203, 205, 206, 236, 237, 241, 242, 243, 244, 251, 252, 259, 267, 377, 402, 411, 413, 417, 419, 429, 441, 471, 477, 478, 480, 483, 486, 498, 502, 508, 517, 518, 519, 521, 522, 523, 528, 533, 534, 536], "100": [103, 145, 170, 189, 203, 224, 251, 402, 429, 455, 469, 529], "1000": [73, 170, 224, 251, 418, 419, 424, 426, 428, 429, 430, 431, 432, 439, 440, 443, 445, 447, 450, 452, 458, 462, 463, 464, 465, 469, 515], "10000": [224, 427, 442, 451, 461], "100000": [96, 98, 436], "1000000": [455, 457, 459, 460], "101": [60, 64, 67, 206, 478], "1010": [67, 478], "10100": [64, 206], "1024": 0, "10394325": 492, "105": 117, "11": [25, 34, 35, 59, 60, 90, 101, 103, 104, 111, 112, 126, 172, 178, 225, 236, 377, 436, 445, 483, 486, 493, 517, 518, 519, 521, 522, 523, 528, 534, 536], "110": [116, 186], "1100": 62, "11100": 68, "11101": [60, 66], "11110010": [63, 65, 188], "111111": 268, "113": 245, "11570901": 417, "11643488": 492, "1179187": 417, "118033988749895": 503, "119": 116, "1196081": 417, "12": [10, 25, 34, 35, 58, 62, 93, 100, 101, 103, 104, 108, 112, 114, 116, 126, 130, 144, 169, 178, 184, 204, 232, 251, 409, 411, 416, 441, 467, 486, 517, 518, 519, 521, 522, 523, 528, 534, 536], "120": [95, 97, 100], "123": [87, 111, 117, 362], "124": 25, "125": [155, 407, 408, 530], "12613779": 492, "127": 170, "128": [0, 170, 268], "12th": 116, "13": [10, 25, 34, 35, 62, 63, 65, 66, 68, 103, 104, 110, 112, 114, 116, 178, 187, 188, 220, 254, 467, 486, 518, 519, 522, 523, 527, 528, 534], "130": 116, "134": 186, "13436424": 417, "135": [32, 54], "13710533": 421, "139884456208480": 17, "13j": 469, "14": [6, 25, 34, 35, 62, 63, 65, 103, 104, 110, 112, 149, 178, 186, 188, 233, 486, 511, 518, 519, 522, 523, 528, 534], "140": 529, "140053638309840": 22, "14157194": 515, "14159265": [14, 27, 32, 54, 99, 416], "1424356": 87, "14243561": 87, "14423775e": 129, "14j": 469, "15": [25, 34, 35, 96, 98, 103, 104, 108, 112, 116, 134, 139, 178, 225, 242, 441, 486, 518, 519, 522, 523, 528, 534], "150": 100, "15591488": 492, "15716429": 87, "15888336": 251, "15j": 469, "16": [6, 25, 62, 66, 103, 104, 112, 114, 129, 155, 165, 170, 172, 178, 238, 267, 407, 408, 469, 487, 509, 518, 519, 522, 523, 528, 534], "1621": [467, 527], "16227766": [210, 471], "16394577": 417, "164": 246, "1643624": 87, "166": 246, "16j": 129, "17": [6, 25, 62, 68, 87, 129, 130, 144, 528], "17157288": [215, 217], "17281316e": 129, "17615308": 87, "177": [170, 251], "17j": 129, "18": [6, 25, 95, 97, 114, 115, 116, 132, 211, 221, 225, 251, 528], "180": [32, 54, 99, 100, 116, 415, 529, 553], "1805": 10, "18236388": 417, "18557831": 417, "1887902": 416, "18920668": 492, "19": [10, 25, 91, 114, 467, 528, 529], "19083664": 87, "19083665": 87, "1923875335537315": 446, "19245009": 485, "1924881e": 155, "1965": 10, "19722458": 94, "1985": 225, "1d": [24, 115, 412, 413, 508, 515], "1e": [18, 125, 189, 214, 242, 243, 245, 246, 435], "1e10": [18, 189], "1j": [12, 13, 21, 30, 31, 40, 50, 53, 81, 82, 111, 140, 184, 190, 198, 214, 226, 231, 361, 375, 401, 468, 496, 500], "1th": [233, 511], "2": [0, 3, 4, 10, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 190, 193, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 347, 352, 355, 357, 360, 362, 364, 369, 371, 380, 381, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 421, 425, 429, 435, 441, 444, 446, 457, 459, 460, 463, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 493, 494, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538], "20": [25, 64, 95, 97, 108, 116, 145, 169, 185, 189, 203, 204, 205, 206, 225, 413, 419, 434, 486, 508, 528, 529], "20000": 419, "2007": 10, "200e": 117, "20477401j": [130, 144], "2048": 0, "2066992e": 87, "21": [25, 96, 98, 114, 528], "210": 100, "2123185": 87, "215": 251, "21623621": 492, "21941987": 417, "21968665": 417, "22": [25, 412, 467, 527, 528], "220": 529, "220446049250313e": 469, "222222": 268, "22460635e": 509, "22464680e": 129, "22497216": 225, "22776602": 251, "23": [25, 61, 417, 467, 528], "230": 116, "23387232": 492, "23598776": 416, "23606798": 225, "24": [25, 34, 35, 93, 95, 97, 111, 115, 116, 186, 203, 211, 233, 234, 236, 380, 409, 511, 513, 528], "240": 100, "24264069": 225, "24544512": 417, "247219128924647": 277, "25": [114, 116, 121, 131, 172, 176, 177, 218, 239, 267, 279, 446, 455, 487, 530, 531], "255": [62, 66], "25506903": 417, "256": [0, 170], "26": [68, 116], "260": 529, "26606588": 181, "26618007j": 244, "27": [74, 155, 251, 407, 408, 485, 530], "270": 100, "2795853": 181, "28": [68, 116], "28000000e": 268, "2800000e": 268, "283185307179586": 529, "28318531": 529, "28352814": 417, "2858386e": 87, "28904982": 246, "29": 66, "297": 10, "2d": [231, 254, 482, 526], "2e": [96, 98], "2f": 0, "2j": [81, 82, 110, 129, 184, 190, 198, 215, 217, 220, 254, 468, 489, 496, 532], "2k": 529, "3": [0, 3, 4, 6, 14, 16, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 138, 139, 141, 142, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 170, 172, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 193, 198, 199, 200, 202, 203, 206, 210, 211, 212, 213, 214, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 352, 355, 360, 362, 364, 369, 371, 380, 381, 382, 390, 392, 393, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 412, 416, 417, 421, 425, 432, 435, 441, 444, 445, 446, 456, 460, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 490, 494, 495, 496, 498, 499, 501, 502, 503, 504, 506, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "30": [93, 100, 111, 116, 145, 381, 413, 416, 508, 532], "300": [100, 529], "3003003": 470, "301": [6, 10], "30102999566": 242, "3012989": 493, "30258509": [94, 252], "308": 268, "308j": 268, "31": [6, 68, 170, 467, 527], "312": 118, "316": 251, "32": [114, 116, 170, 233, 276, 278, 511], "33": 470, "330": [6, 100], "333": 224, "33333333": 268, "3333333e": 268, "33340275": 515, "33486982e": 129, "33836967": 417, "340": 529, "34074171": 417, "34132519": 251, "34846923": [221, 225], "34960421": 251, "35": [116, 427], "35106603e": [221, 225], "35348576": 238, "35355338": 485, "36": 93, "360": 529, "37": [467, 483, 527], "371139e": 89, "38": [186, 419], "380": 529, "38268343": 215, "38268343j": 215, "38629436": 94, "38885": 419, "389": 6, "389056099": [122, 125], "39295758": 417, "39783284": 87, "3e": [0, 96, 98, 469], "3j": [110, 220, 254, 496], "3rd": [79, 80, 112, 498], "3x3": 253, "3x8000": 456, "4": [0, 16, 17, 23, 24, 25, 26, 34, 35, 37, 39, 40, 42, 56, 58, 59, 60, 62, 66, 69, 77, 78, 79, 80, 83, 86, 87, 89, 91, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 126, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 151, 152, 155, 157, 158, 159, 163, 164, 165, 167, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 190, 193, 198, 202, 203, 205, 208, 211, 212, 213, 218, 220, 221, 222, 223, 225, 229, 232, 233, 234, 235, 236, 238, 239, 244, 247, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 272, 274, 277, 279, 352, 355, 360, 364, 369, 371, 380, 382, 390, 392, 396, 398, 400, 402, 404, 407, 408, 409, 411, 412, 416, 417, 418, 421, 441, 446, 462, 466, 467, 468, 469, 472, 473, 475, 476, 480, 481, 482, 483, 484, 487, 489, 492, 494, 495, 498, 499, 502, 503, 504, 506, 507, 511, 512, 514, 515, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538], "40": [6, 64, 116, 145, 205, 206, 413, 508], "40882036": 417, "4096": 0, "41": [467, 492, 527], "41421356": [210, 225], "42": 487, "420": 529, "438": 6, "44": [405, 412], "4400": [116, 233, 511], "443469": 251, "44509285e": 129, "45": [21, 32, 54, 238], "45206687": 87, "4532": [116, 233, 511], "46": 116, "460": [6, 529], "46394577": 417, "464": 251, "46436927": 87, "4643693": 87, "4664": [116, 233, 511], "47": 6, "4730": [116, 233, 511], "4796": [116, 233, 511], "48": [6, 93], "48093112": 417, "48613152": 87, "48613155": 87, "4874": [116, 233, 511], "48927254": 417, "49": 6, "4928": [116, 233, 511], "49543509": 417, "49778714": 529, "499128": 110, "4d": 231, "4e": 469, "4j": [184, 468, 532], "4x4": [518, 522], "5": [0, 16, 17, 22, 23, 24, 25, 26, 33, 34, 37, 42, 55, 56, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 75, 77, 79, 80, 83, 86, 87, 88, 91, 93, 95, 96, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 121, 126, 130, 131, 133, 141, 144, 145, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 169, 170, 172, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 190, 193, 198, 202, 203, 205, 206, 209, 211, 213, 215, 217, 218, 224, 225, 226, 230, 233, 236, 237, 238, 239, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 274, 277, 347, 352, 362, 364, 381, 392, 396, 398, 399, 400, 401, 402, 404, 407, 408, 411, 412, 416, 417, 418, 419, 421, 424, 436, 440, 441, 442, 443, 446, 449, 464, 466, 467, 468, 469, 470, 472, 475, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 494, 496, 498, 502, 503, 505, 506, 507, 511, 512, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538], "50": [130, 144, 145, 170, 203, 233, 245, 246, 251, 413, 508, 511, 515, 536], "500": [203, 529], "5018": [116, 233, 511], "50455115": 492, "5091786": 90, "512": 0, "5147297e": 87, "5162": [116, 233, 511], "52069395e": 129, "52359878": 416, "52928804": 417, "53": 6, "5306": [116, 233, 511], "53702235": 87, "5399045e": 155, "54": [6, 417], "540": 529, "54288406": 417, "54465213": 417, "545": 6, "548739": 493, "54930614": [33, 55], "55": [405, 412, 487], "5555555555555554": 279, "562": 251, "5620499351813308": [12, 13], "56920387": 417, "5707963267948966": [29, 49], "57079633": [21, 32, 54, 416, 529], "5790461": 87, "57904613": 87, "58997253": 417, "591953": 90, "5e": [245, 246], "5j": [261, 398, 496], "6": [0, 4, 16, 23, 24, 25, 26, 34, 35, 37, 42, 56, 59, 61, 66, 68, 70, 77, 79, 80, 86, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 120, 125, 126, 131, 134, 145, 152, 155, 168, 169, 172, 178, 179, 184, 185, 186, 187, 193, 202, 203, 204, 211, 213, 221, 225, 227, 228, 231, 232, 233, 234, 236, 237, 238, 239, 251, 253, 255, 259, 271, 272, 276, 352, 362, 364, 380, 392, 396, 400, 402, 405, 407, 408, 411, 417, 434, 436, 441, 446, 466, 467, 468, 474, 475, 480, 481, 482, 483, 484, 487, 494, 496, 498, 502, 504, 505, 506, 507, 511, 513, 515, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 532, 533, 534, 535, 536, 538], "60": [25, 93, 100, 116, 204, 233, 413, 508, 511, 529, 536], "600": 203, "60943791": 94, "6173796": 87, "61799388": 416, "62": 186, "6227766": 170, "62318272": 421, "62341325": 170, "624": 117, "63": 170, "63317787e": 509, "63522211": 417, "63836967": 417, "64": [0, 4, 116, 155, 170, 276, 278, 407, 408, 483], "64000": 116, "65157276": 87, "6515728": 87, "65354985": 87, "65745445": [15, 28], "6580445": 87, "66519143": 416, "6666666666666665": 274, "67": 116, "67305985": 162, "673174": 417, "67718303": 417, "6883078": 87, "69295758": 417, "69314718": [94, 229, 243], "6990877": 417, "6j": [184, 468, 532], "7": [16, 18, 23, 24, 25, 26, 42, 56, 61, 70, 75, 77, 86, 87, 91, 93, 96, 98, 101, 102, 103, 104, 106, 107, 109, 111, 112, 115, 122, 126, 152, 156, 170, 172, 178, 186, 187, 189, 202, 203, 213, 221, 225, 231, 233, 236, 238, 253, 255, 259, 264, 267, 362, 364, 396, 402, 410, 411, 417, 441, 467, 468, 472, 477, 479, 480, 482, 498, 504, 505, 506, 507, 511, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 532, 534, 536], "70": [203, 532, 536], "700": 203, "700e": 117, "70710677": [111, 361, 375], "70710678": [210, 214], "70710678j": 214, "70882036": 417, "7110255": 87, "71102554": 87, "71238898": 416, "718281828": [122, 125], "72": 93, "720": [95, 97, 529], "72075441": 251, "72450536": 87, "72538256": [30, 50], "74165739": 225, "742278e": 491, "74596669": [221, 225], "7485727": 87, "74857277": 87, "74921661": 417, "75": [59, 121, 131, 172, 177, 218, 239], "754": 148, "75682673": 492, "75958653": 416, "76096244": 417, "76377462": 417, "77447665": 246, "78539816": [21, 31, 32, 53, 54, 529], "78927254": 417, "79175947": 94, "7937219": 87, "79727215": 87, "7972722": 87, "79769313e": 268, "7j": 410, "8": [4, 16, 18, 23, 24, 25, 42, 56, 63, 65, 74, 77, 86, 93, 101, 102, 103, 104, 106, 107, 111, 112, 114, 116, 117, 126, 129, 131, 145, 146, 152, 155, 170, 172, 178, 184, 187, 188, 189, 202, 212, 213, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 251, 253, 255, 364, 380, 396, 402, 407, 408, 409, 411, 417, 441, 460, 467, 468, 480, 482, 485, 491, 498, 507, 511, 513, 515, 517, 518, 519, 521, 522, 523, 527, 528, 529, 530, 533, 534, 536], "80": [114, 116, 536], "8000": 456, "8012391e": 87, "80226506": 417, "8058837395885292": 238, "8104691": 87, "81715362": 417, "827941": [170, 251], "82842712": [215, 217], "8399546e": 87, "84086883": 87, "84288406": 417, "84401099": 417, "84743374": 417, "84803548": 225, "85": 116, "86": 186, "87649168": 245, "88": 115, "88079259": 181, "88178420e": 129, "881943016134134": 238, "88194302": 238, "88997253": 417, "8900264": 87, "89002645": 87, "89920014": 421, "8f": 114, "8j": 532, "9": [4, 16, 23, 24, 25, 42, 56, 77, 86, 87, 93, 96, 98, 101, 102, 103, 104, 106, 109, 111, 112, 116, 118, 126, 129, 132, 133, 138, 149, 155, 157, 165, 170, 172, 178, 189, 202, 213, 214, 219, 221, 225, 227, 228, 231, 232, 233, 236, 238, 251, 253, 267, 268, 362, 396, 411, 417, 419, 421, 441, 467, 468, 480, 498, 499, 504, 511, 517, 518, 519, 521, 522, 523, 524, 527, 528, 529, 530, 534, 536], "90": [21, 100, 415, 482, 536], "9011005": 87, "917152": 510, "92": 25, "92387953": 215, "92387953j": 215, "9305482": 87, "93548928": 492, "9377134e": 87, "9387854e": 87, "9393724": 87, "9393725": 87, "94": 116, "94591015": 94, "95": 219, "9520904e": 87, "95799250e": 129, "968541": 87, "9685411": 87, "9724453": 87, "98": [220, 254], "98024613": 251, "9875833": 87, "99": [115, 243, 413], "9909503": 87, "99095035": 87, "99322285": [15, 28], "994938": 87, "9949381": 87, "9951523": 87, "99532227": 121, "996272": 510, "99822295": [30, 50], "99853728": 121, "999": [117, 187], "9990000e": 268, "99959305": 121, "99989938": 121, "9999": 268, "99997791": 121, "9999999": 87, "99999994": 87, "999999e": 189, "A": [10, 12, 13, 14, 15, 16, 18, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 78, 81, 82, 84, 85, 86, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 111, 112, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 178, 180, 181, 182, 184, 185, 187, 188, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 209, 213, 215, 216, 217, 219, 223, 224, 225, 228, 229, 233, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 257, 259, 261, 263, 264, 267, 271, 272, 276, 278, 347, 352, 360, 362, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 410, 415, 416, 417, 419, 436, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 466, 467, 468, 470, 472, 475, 478, 479, 482, 485, 489, 490, 491, 492, 493, 497, 498, 499, 500, 504, 506, 507, 509, 510, 511, 512, 514, 516, 518, 520, 522, 524, 525, 530, 533, 534, 536, 537, 538, 553], "AND": [17, 62, 63, 65, 66, 68, 188, 247, 248, 249, 250], "And": [4, 51, 52, 103, 111, 347, 518, 522], "As": 526, "At": 393, "Be": 214, "Being": 3, "But": [4, 114], "By": [34, 35, 45, 52, 93, 111, 130, 134, 136, 140, 142, 146, 170, 219, 239, 251, 254, 256, 258, 262, 269, 270, 273, 274, 275, 276, 277, 278, 279, 347, 473, 480, 494, 503, 507, 516, 518, 520, 522, 531, 533], "For": [0, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 357, 360, 361, 362, 369, 375, 377, 380, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546, 553], "If": [4, 10, 12, 13, 17, 18, 22, 23, 25, 26, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 59, 60, 72, 77, 79, 80, 87, 91, 93, 94, 95, 96, 97, 98, 101, 102, 106, 107, 110, 111, 112, 114, 115, 116, 117, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 152, 158, 159, 161, 166, 170, 172, 176, 177, 178, 179, 181, 184, 185, 186, 187, 189, 193, 196, 197, 198, 209, 211, 219, 221, 222, 223, 224, 225, 227, 228, 231, 233, 235, 236, 238, 239, 240, 251, 252, 256, 257, 258, 259, 260, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 364, 382, 404, 405, 409, 412, 413, 417, 439, 461, 468, 469, 471, 473, 474, 475, 476, 480, 483, 484, 486, 495, 498, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 526, 529, 530, 531, 532, 533, 534, 535, 536, 546, 553], "In": [4, 10, 34, 35, 60, 87, 93, 95, 96, 97, 98, 116, 117, 135, 136, 137, 140, 142, 172, 209, 216, 224, 228, 246, 251, 271, 272, 274, 276, 278, 409, 412, 417, 461, 466, 467, 475, 476, 505, 507, 525], "It": [4, 10, 17, 22, 23, 24, 34, 35, 77, 95, 96, 97, 98, 108, 110, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 172, 187, 215, 217, 246, 254, 258, 259, 269, 270, 271, 272, 273, 274, 275, 277, 279, 402, 409, 475, 476, 487, 497, 503, 505, 507, 531, 553], "Its": [77, 234, 413, 513], "NOT": [63, 65, 188, 247, 248, 249, 250], "No": [44, 45, 116, 209], "Not": [17, 22, 45, 192, 268, 271, 272, 273, 275, 276, 278, 409], "OR": [22, 62, 63, 65, 66, 68, 188, 247, 248, 249, 250], "On": 4, "One": [56, 57, 58, 93, 113, 114, 140, 226, 402, 475], "Ones": 39, "Or": [172, 515], "That": 253, "The": [3, 4, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 188, 189, 191, 192, 193, 194, 195, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 224, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 256, 257, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 347, 352, 361, 364, 369, 371, 375, 380, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 420, 422, 423, 433, 438, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 535, 536, 537, 538, 546, 549, 553], "Then": [10, 46, 48, 253], "There": [10, 239, 526], "These": [4, 23, 114, 116, 117, 124, 253, 266, 413, 508, 518, 522, 546, 549], "To": [4, 134, 140, 142, 155, 396, 529], "With": [34, 35, 59, 91, 97, 98, 178, 221, 225, 238, 256, 262, 269, 270, 276, 278, 409, 505, 534], "_": [0, 177, 502, 515], "__array_interface__": 114, "__bool__": 546, "__dlpack__": 161, "__dlpack_device__": 161, "__eq__": [111, 114, 150, 393, 417], "__ge__": [111, 114, 150, 393, 417], "__getitem__": [111, 114, 150], "__gt__": [111, 114, 150, 393, 417], "__iter__": [150, 393], "__le__": [111, 114, 150, 393, 417], "__len__": [111, 114], "__lt__": [111, 114, 150, 393, 417], "__main__": 0, "__name__": 0, "__ne__": [111, 114, 150, 393, 417], "__next__": [150, 393], "__setitem__": [111, 150], "__sycl_usm_array_interface__": 47, "_core": 114, "_dtypes_list": 0, "_f": 225, "a1": [40, 41], "a2": [40, 41], "a_": [10, 225], "a_ax": [233, 511], "a_i": [237, 533], "a_k": 10, "a_m": 10, "a_resamp": 140, "ab": [6, 10, 13, 18, 189, 225], "abc": 116, "abcd": 117, "abl": 225, "about": [46, 48, 111, 148, 214, 358, 402, 474, 546], "abov": [3, 14, 15, 27, 28, 29, 30, 33, 49, 50, 55, 94, 102, 105, 132, 137, 142, 146, 185, 213, 228, 236, 252, 268, 471, 516, 517, 521], "absolut": [6, 12, 18, 21, 60, 128, 169, 189, 204, 229, 277, 279, 410, 469, 503, 529, 531, 553], "accept": [24, 116, 226, 417, 518, 522], "access": [10, 103, 104, 147, 253, 518, 522, 546], "accord": [17, 22, 59, 67, 73, 114, 146, 148, 214, 215, 216, 217, 252, 258, 259, 274, 277, 279, 402, 471, 478, 503, 531], "accordingli": [93, 273, 275], "account": [466, 475], "accumul": [94, 95, 96, 97, 98, 116, 176, 236, 271, 272, 276, 278, 409, 505, 513], "accur": [114, 125, 172, 243, 245], "accuraci": [135, 136, 137, 140, 142], "achiev": 116, "aco": [6, 27], "acosh": [6, 28], "across": [106, 177, 271, 272, 276, 278], "activ": 4, "actual": [114, 176, 177, 209, 224], "ad": [18, 60, 114, 117, 124, 140, 189, 212, 229, 246, 529, 549], "add": [6, 87, 114, 553], "addit": [24, 87, 94, 209, 274, 526], "address": 114, "adjac": [213, 236, 497, 529], "advanc": 116, "advers": 116, "advis": 4, "affect": [26, 106, 116, 147, 176, 177], "after": [113, 147, 395, 402, 436, 480], "after_1": 402, "after_n": 402, "ag": 114, "against": [18, 34, 35, 69, 70, 71, 77, 91, 171, 189, 221, 225, 227, 238, 256, 262, 269, 270, 276, 278, 409, 413, 505, 508], "ai": [3, 413, 508], "ai_max": 508, "ai_min": 508, "ainv": [218, 234], "al": 10, "algebra": [539, 549], "algorithm": [10, 36, 116, 117, 129, 135, 143, 495], "alia": [10, 14, 15, 19, 20, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 63, 64, 65, 67, 79, 80, 109, 119, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 168, 188, 206, 264, 280, 400, 404, 407, 408, 417, 447, 450, 452, 466, 472, 475, 478, 484, 514, 524, 529, 535, 538], "alias": [9, 134, 135, 140, 142, 492], "align": 114, "all": [4, 6, 9, 18, 21, 22, 23, 40, 41, 45, 52, 59, 78, 87, 91, 100, 107, 111, 113, 114, 116, 117, 122, 123, 125, 127, 132, 133, 137, 138, 141, 142, 146, 147, 152, 153, 154, 162, 163, 165, 170, 172, 179, 182, 184, 202, 209, 211, 223, 227, 238, 239, 251, 256, 259, 262, 269, 270, 273, 275, 347, 350, 357, 371, 402, 409, 419, 468, 469, 480, 484, 487, 501, 505, 526, 528, 533, 535, 546, 553], "allclos": [6, 40, 189, 218, 227, 228, 230, 231, 235], "alloc": [3, 4, 23, 26, 39, 43, 44, 45, 46, 47, 48, 52, 59, 84, 94, 102, 103, 105, 111, 118, 119, 127, 131, 145, 149, 162, 163, 164, 165, 166, 167, 168, 170, 181, 182, 185, 196, 197, 239, 240, 251, 252, 253, 258, 259, 261, 274, 277, 279, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 471, 501, 503, 516, 518, 522, 530, 531, 533, 537, 538], "allow": [42, 52, 97, 98, 101, 111, 116, 176, 177, 193, 246, 253, 259, 347, 377, 507, 546], "almost": [37, 214, 518], "along": [3, 4, 17, 19, 20, 22, 23, 24, 25, 34, 35, 36, 42, 59, 78, 79, 80, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 111, 112, 113, 115, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 152, 153, 154, 158, 159, 164, 170, 172, 178, 179, 185, 187, 225, 228, 233, 234, 235, 236, 237, 238, 239, 251, 252, 256, 257, 258, 259, 260, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 344, 345, 346, 353, 354, 365, 367, 372, 373, 381, 384, 386, 388, 389, 391, 402, 405, 409, 411, 412, 413, 466, 471, 473, 480, 481, 482, 484, 487, 494, 495, 498, 502, 503, 505, 507, 508, 511, 512, 513, 515, 518, 519, 522, 523, 526, 528, 529, 531, 533, 534, 535, 546], "alpha": [418, 423, 424, 440, 443], "alreadi": [4, 10, 44, 45, 56, 57, 58, 401, 402, 526], "also": [3, 4, 10, 14, 15, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 85, 87, 109, 111, 114, 116, 120, 124, 132, 137, 141, 142, 143, 146, 155, 157, 158, 159, 160, 164, 166, 169, 172, 173, 174, 175, 176, 180, 189, 193, 204, 206, 207, 208, 209, 245, 246, 253, 257, 263, 264, 266, 267, 380, 396, 397, 407, 408, 455, 472, 478, 492, 504, 507, 524, 526, 546], "alter": 106, "altern": [3, 4, 17, 22, 95, 96, 97, 98, 110, 111, 254, 256, 258, 259, 262, 271, 272, 274, 276, 277, 278, 279, 390, 409, 503, 505, 531], "although": [21, 114, 136, 137, 138, 512], "alwai": [4, 10, 14, 15, 27, 28, 29, 30, 31, 33, 36, 43, 49, 50, 52, 53, 55, 106, 111, 112, 115, 128, 155, 161, 178, 215, 217, 277, 279, 347, 396, 475, 496, 503, 531, 534], "amax": [6, 61, 256], "ambigu": 546, "amin": [6, 262], "among": 115, "amplitud": 10, "an": [0, 3, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 89, 90, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 199, 202, 204, 205, 206, 207, 208, 211, 212, 213, 216, 219, 223, 224, 225, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 346, 347, 348, 349, 352, 362, 365, 369, 371, 373, 376, 377, 380, 381, 382, 383, 387, 388, 390, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 424, 425, 427, 436, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 546, 553], "anaconda": 3, "analog": [130, 132, 134, 136, 137, 139], "analysi": 10, "analyt": [3, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "angl": [6, 10, 14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 99, 100, 184, 415, 416, 468, 469, 529, 553], "ani": [3, 6, 17, 18, 23, 24, 39, 43, 44, 45, 46, 47, 48, 52, 69, 70, 71, 84, 102, 105, 107, 111, 114, 116, 117, 130, 132, 136, 137, 142, 146, 147, 167, 168, 170, 172, 177, 179, 191, 199, 200, 222, 235, 239, 251, 253, 273, 275, 347, 369, 402, 417, 461, 474, 492, 497, 530, 546], "anoth": [4, 86, 87, 111, 126, 136, 137, 161, 352, 373, 405, 412, 481], "answer": 419, "anti": [106, 147, 213, 492], "anyth": 114, "ap": 219, "apart": 515, "api": [0, 2, 3, 6, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 93, 95, 96, 97, 98, 102, 103, 105, 106, 111, 114, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 211, 213, 220, 221, 226, 227, 236, 237, 238, 239, 240, 251, 253, 254, 261, 347, 352, 398, 399, 400, 401, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 513, 516, 518, 522, 530, 532, 533, 537, 538], "appear": [124, 153, 154, 526], "append": [0, 6, 64, 101, 107, 115, 117, 124, 135, 136, 137, 187, 206, 213], "appli": [24, 25, 34, 35, 36, 59, 73, 101, 116, 233, 268, 467, 476, 477, 495, 511, 515], "applic": [10, 114, 492], "apply_along_axi": [6, 25, 549], "apply_over_ax": [6, 24, 549], "approach": [111, 114, 135, 136, 137, 380], "appropri": [4, 34, 35, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 171, 235, 269, 270, 273, 275, 417, 445, 448, 476, 507, 546], "approxim": [148, 515], "ar": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 169, 170, 172, 173, 174, 175, 176, 177, 180, 186, 188, 189, 192, 193, 194, 195, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 370, 371, 380, 392, 394, 395, 396, 397, 402, 403, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 442, 443, 445, 448, 449, 451, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 476, 478, 479, 480, 483, 484, 485, 486, 487, 489, 490, 491, 494, 495, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 513, 515, 519, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 546, 553], "arang": [0, 6, 16, 25, 34, 35, 37, 42, 56, 57, 58, 59, 61, 77, 85, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 116, 120, 122, 123, 125, 126, 129, 151, 152, 155, 160, 168, 169, 170, 172, 176, 178, 185, 186, 187, 202, 203, 204, 205, 213, 220, 221, 225, 233, 236, 238, 239, 242, 243, 247, 248, 249, 250, 251, 253, 254, 256, 260, 262, 264, 267, 355, 364, 397, 400, 402, 405, 407, 408, 412, 416, 441, 472, 474, 475, 477, 480, 482, 487, 498, 504, 511, 513, 515, 518, 519, 522, 523, 524, 528, 534, 536, 538], "arbitrari": [51, 110, 114, 116, 186, 254, 477, 518, 522], "arbitrarili": 116, "arc": [21, 29, 31, 49, 53], "arcco": [6, 14, 15, 28, 29, 31, 32, 49, 53, 54, 89], "arccosh": [6, 14, 15, 27, 30, 33, 50, 55, 90], "arcsin": [6, 14, 27, 30, 31, 32, 49, 50, 53, 54, 491], "arcsinh": [6, 15, 28, 29, 33, 49, 50, 55, 493], "arctan": [6, 14, 21, 27, 29, 32, 33, 49, 53, 54, 55, 509], "arctan2": [6, 21, 29, 31, 49, 53, 54], "arctanh": [6, 15, 28, 30, 31, 32, 50, 53, 54, 55, 510], "area": 515, "arg": [24, 69, 70, 111, 202, 362, 417], "arg1": 201, "arg2": 201, "argmax": [0, 6, 35, 111, 269, 413, 508, 546], "argmin": [6, 34, 111, 270, 508, 546], "argpartit": [6, 36, 413, 508, 546], "argsort": [6, 111, 404, 413, 486, 495, 508, 514, 546], "argument": [0, 10, 12, 13, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 79, 80, 85, 89, 90, 99, 100, 109, 110, 111, 114, 117, 121, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 169, 175, 180, 181, 184, 188, 200, 201, 204, 205, 206, 211, 213, 220, 224, 225, 226, 233, 236, 237, 242, 243, 244, 245, 246, 253, 254, 257, 263, 264, 265, 267, 362, 377, 390, 393, 394, 395, 402, 406, 407, 408, 410, 412, 415, 416, 468, 469, 470, 472, 475, 477, 478, 479, 485, 489, 490, 491, 492, 493, 497, 502, 504, 509, 510, 511, 515, 524, 525, 533, 546, 553], "argwher": [6, 396], "ari": [42, 56, 57, 58, 112, 115, 178, 498, 534], "arithmet": [59, 170, 258, 259, 274, 277, 279, 406, 503, 505, 531, 539, 549], "around": [6, 111, 170, 402, 412, 467, 483], "arr": [23, 24, 45, 101, 104, 114, 177, 187, 414, 441, 466, 467, 519, 523, 528], "arr2": [114, 528], "arr_t": [52, 111, 347], "arrai": [0, 2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 344, 345, 346, 347, 348, 349, 352, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 368, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 549, 553], "array2str": 6, "array_equ": [6, 187], "array_equiv": [6, 40], "array_lik": [23, 39, 43, 44, 45, 46, 47, 48, 51, 59, 84, 86, 102, 105, 115, 126, 167, 168, 170, 187, 191, 199, 233, 239, 251, 392, 402, 405, 412, 413, 417, 482, 488, 494, 507, 511, 530], "array_of_diagon": 106, "array_repr": 6, "array_split": [6, 79, 80, 498], "array_str": 6, "array_util": 72, "arrays_and_dtyp": 477, "art": 10, "asanyarrai": [6, 44, 45, 48, 474], "asarrai": [4, 6, 43, 45, 46, 48, 51, 392, 474, 494], "asarray_chkfinit": [6, 43, 44], "ascend": [215, 217, 486], "ascii": 114, "ascontiguousarrai": [6, 43, 44, 45, 48, 474], "asfarrai": [43, 44], "asfortranarrai": [6, 43, 44, 45, 46, 474], "asin": [6, 29], "asinh": [6, 30], "asmatrix": 6, "asnumpi": 111, "aspect": 114, "assembl": [79, 80, 113, 179, 484, 502, 528, 535], "assert": 259, "assign": [111, 357, 380, 518, 522], "associ": [59, 176, 177, 546], "assum": [10, 59, 93, 117, 134, 140, 142, 213, 223, 227, 231, 253, 515], "astyp": [6, 87, 111, 170, 396], "atan": [6, 31], "atan2": [6, 32], "atanh": [6, 33], "atleast_1d": [6, 57, 58, 124], "atleast_2d": [6, 56, 58, 124], "atleast_3d": [6, 56, 57, 124], "atol": [18, 189], "attain": 0, "attempt": [110, 224], "attribut": [111, 114, 119, 148, 168, 183, 228, 400, 538, 539], "automat": [176, 177], "avail": [2, 3, 4, 10, 88, 92, 114, 121, 265, 269, 270, 273, 275, 276, 539, 546], "averag": [6, 24, 111, 258, 259, 274, 366, 505, 549], "avg": 59, "avoid": [39, 44, 57, 58, 134, 140, 142, 475], "aweight": 92, "ax": [17, 22, 24, 25, 34, 35, 59, 91, 93, 94, 107, 110, 111, 116, 124, 130, 132, 133, 136, 137, 138, 141, 142, 144, 146, 152, 172, 186, 211, 221, 225, 230, 233, 234, 235, 236, 238, 252, 254, 255, 256, 258, 259, 262, 266, 269, 270, 273, 274, 275, 276, 277, 278, 279, 387, 390, 401, 402, 404, 409, 471, 476, 480, 481, 482, 501, 503, 505, 506, 511, 512, 513, 514, 526, 531, 533], "axi": [17, 19, 20, 22, 23, 24, 25, 34, 35, 36, 42, 59, 78, 79, 80, 91, 93, 94, 95, 96, 97, 98, 101, 106, 107, 111, 112, 113, 115, 116, 124, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 152, 153, 154, 158, 159, 164, 170, 172, 178, 179, 185, 187, 211, 219, 225, 233, 237, 238, 239, 251, 252, 254, 256, 257, 258, 259, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 346, 353, 354, 360, 365, 366, 367, 371, 372, 373, 376, 381, 382, 383, 384, 386, 388, 390, 391, 402, 403, 404, 405, 409, 411, 412, 413, 466, 471, 473, 475, 476, 480, 481, 482, 484, 487, 494, 495, 498, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 526, 528, 529, 531, 533, 534, 535, 546], "axis1": [106, 111, 355, 387, 389, 506, 513], "axis2": [106, 111, 355, 387, 389, 506, 513], "axisa": 93, "axisb": 93, "axisc": 93, "axiserror": [36, 495], "b": [10, 16, 18, 23, 24, 34, 35, 40, 41, 62, 68, 78, 79, 80, 86, 93, 96, 97, 98, 110, 111, 113, 114, 116, 117, 120, 162, 163, 173, 174, 179, 186, 187, 189, 193, 203, 207, 208, 211, 212, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 247, 249, 254, 255, 256, 259, 262, 395, 397, 401, 407, 408, 418, 477, 484, 497, 502, 511, 512, 520, 532, 533, 535, 553], "b_ax": [233, 511], "b_i": [237, 533], "back": [111, 164, 360, 466, 475, 476, 481, 520], "backend": [2, 171, 420, 422, 423, 433, 438, 454], "backward": [10, 52, 111, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 172, 347, 475, 480, 481], "bad": 429, "baltimor": 225, "bandlimit": 492, "bartlett": 6, "base": [0, 4, 60, 114, 116, 123, 126, 155, 170, 176, 177, 231, 241, 242, 243, 244, 245, 246, 251, 252, 254, 405, 407, 408, 412, 414, 533], "base_repr": [6, 60], "basic": [73, 116, 546, 549], "batch": 238, "bc": [212, 229], "bcde": 117, "becaus": [10, 17, 22, 134, 140, 142, 529, 546], "becom": [10, 111, 176, 390], "been": [113, 181, 413, 481, 508], "befor": [4, 23, 25, 36, 79, 80, 94, 111, 115, 135, 136, 137, 153, 154, 187, 235, 252, 256, 262, 277, 279, 371, 382, 402, 409, 471, 480, 481, 495, 503, 505, 512, 531, 532], "before_1": 402, "before_n": 402, "begin": [115, 117, 170, 239, 251, 402, 487], "behav": [187, 240, 412], "behavior": [36, 111, 144, 236, 268, 352, 476, 495, 512], "behind": [111, 371], "being": [3, 87, 114, 158, 159, 257, 263, 402], "belong": [108, 176], "below": [0, 4, 9, 14, 27, 29, 30, 33, 49, 50, 55, 87, 102, 105, 114, 140, 213, 223, 225, 236, 516, 517, 521, 529, 546], "bessel": 181, "best": 117, "beta": [6, 428], "between": [18, 26, 42, 72, 73, 87, 107, 115, 148, 163, 166, 172, 186, 187, 189, 239, 251, 402, 434, 448, 497, 504, 515, 529], "beyond": [4, 480], "bia": 92, "big": 114, "bin": [60, 61, 108, 129, 131, 145, 176, 177, 455], "bin_edg": [176, 177], "binari": [60, 62, 63, 64, 65, 66, 67, 68, 162, 163, 165, 166, 188, 206, 478], "binary_repr": [6, 62, 63, 64, 65, 66, 67, 68, 188, 206, 478], "bincount": [6, 108, 176], "binomi": [6, 436], "bins_0": 177, "bins_1": 177, "bit": [60, 62, 63, 64, 65, 66, 67, 68, 114, 148, 183, 188, 206, 247, 249, 250, 276, 278, 478, 490, 539, 549], "bitwis": [62, 66, 68], "bitwise_and": [6, 63, 65, 66, 68, 188, 247], "bitwise_count": 6, "bitwise_invert": [6, 65, 188], "bitwise_left_shift": [6, 206], "bitwise_not": 6, "bitwise_or": [6, 62, 63, 65, 68, 188, 249], "bitwise_right_shift": [6, 478], "bitwise_xor": [6, 62, 63, 65, 66, 188, 250], "biufcmmosuv": 114, "blackman": 6, "block": [6, 79, 80, 113, 147, 179, 203, 484, 502, 528, 535], "bmat": 6, "bool": [9, 17, 18, 21, 22, 34, 35, 36, 39, 40, 41, 44, 47, 52, 59, 73, 86, 87, 91, 94, 97, 98, 101, 108, 111, 114, 117, 120, 147, 161, 170, 173, 174, 176, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 208, 209, 221, 223, 225, 227, 231, 238, 239, 251, 252, 256, 258, 259, 260, 262, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 347, 396, 397, 409, 471, 475, 487, 490, 495, 503, 505, 507, 526, 530, 531, 546], "bool_": 9, "boolean": [62, 63, 65, 66, 68, 86, 94, 97, 98, 101, 114, 126, 155, 161, 181, 185, 188, 189, 192, 194, 195, 196, 197, 198, 202, 247, 249, 252, 253, 258, 259, 274, 276, 277, 279, 396, 405, 471, 503, 507, 531], "boolean_sequ": 202, "both": [10, 16, 18, 23, 32, 40, 41, 54, 59, 62, 64, 66, 67, 68, 77, 85, 93, 109, 110, 120, 136, 143, 155, 157, 158, 159, 160, 169, 173, 174, 175, 180, 186, 189, 203, 204, 205, 206, 207, 208, 220, 225, 233, 245, 246, 247, 249, 250, 254, 257, 263, 264, 267, 278, 395, 397, 407, 408, 472, 475, 478, 504, 511, 513, 518, 520, 522, 524, 532, 533, 536], "bound": [412, 413, 467, 486, 507, 508], "boundari": [172, 412, 467], "branch": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "briefli": 546, "broadcast": [16, 17, 22, 34, 35, 41, 59, 69, 70, 71, 77, 86, 91, 109, 116, 126, 155, 158, 159, 180, 196, 197, 220, 221, 225, 227, 238, 250, 252, 254, 256, 257, 258, 259, 262, 263, 267, 269, 270, 274, 276, 277, 278, 279, 407, 408, 409, 412, 413, 471, 473, 503, 504, 505, 508, 512, 524, 531, 533, 536], "broadcast_arrai": [6, 70, 71], "broadcast_shap": 6, "broadcast_to": [6, 69, 70, 512], "brought": 10, "buffer": [47, 95, 96, 97, 98, 111, 161, 162, 163, 165, 166, 240, 256, 262, 271, 272], "buffer_lik": 162, "buffererror": 161, "build": 549, "build_loc": 4, "built": [60, 114], "busday_count": 6, "busday_offset": 6, "byte": [6, 52, 72, 111, 114, 116, 162, 163, 240, 347, 363, 368], "byteord": 114, "byteswap": 6, "bz2": 240, "c": [2, 4, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 93, 98, 99, 100, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 167, 168, 169, 171, 173, 174, 175, 180, 181, 184, 186, 188, 192, 193, 194, 195, 203, 204, 205, 206, 207, 208, 212, 219, 224, 225, 229, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 263, 264, 267, 347, 352, 360, 374, 377, 394, 395, 396, 397, 399, 400, 406, 407, 408, 410, 415, 416, 466, 467, 468, 470, 472, 474, 475, 476, 478, 479, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 511, 512, 524, 525, 526, 527, 533, 536, 537, 538, 553], "c_contigu": [46, 48, 111, 352, 474], "ca": 83, "calcul": [10, 12, 13, 16, 21, 32, 54, 59, 93, 94, 96, 98, 107, 109, 115, 116, 120, 122, 123, 125, 129, 138, 155, 156, 157, 160, 172, 177, 180, 214, 215, 216, 217, 219, 225, 227, 243, 245, 246, 252, 254, 258, 259, 264, 267, 274, 277, 279, 397, 402, 407, 408, 409, 471, 472, 503, 504, 524, 531, 532, 539, 553], "call": [10, 21, 23, 25, 32, 34, 35, 36, 46, 48, 54, 61, 114, 135, 136, 137, 140, 143, 164, 187, 214, 216, 224, 232, 253, 259, 287, 396, 501, 507, 512, 515, 553], "callabl": [164, 253], "cambridg": 10, "can": [0, 3, 4, 10, 16, 18, 23, 24, 25, 26, 32, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 84, 85, 87, 93, 102, 103, 105, 106, 109, 110, 111, 114, 116, 117, 118, 119, 120, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 145, 147, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 179, 180, 182, 185, 186, 188, 189, 191, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 213, 218, 219, 222, 223, 225, 227, 233, 235, 236, 239, 240, 245, 246, 247, 249, 250, 251, 253, 254, 257, 261, 263, 264, 267, 276, 278, 347, 352, 380, 382, 393, 394, 395, 396, 397, 398, 399, 400, 406, 407, 408, 413, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 466, 467, 472, 474, 475, 478, 497, 504, 507, 508, 511, 513, 515, 516, 518, 522, 523, 524, 526, 530, 532, 536, 537, 538, 546, 553], "can_cast": [6, 549], "cannot": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 79, 80, 269, 270, 475, 498, 501, 502], "capabl": [26, 39, 43, 44, 46, 48, 59, 128, 170, 239, 251, 254, 533], "cardin": 492, "cardinali": 492, "care": [26, 214], "cartesian": 260, "case": [4, 17, 22, 26, 34, 35, 39, 43, 44, 45, 46, 48, 59, 84, 93, 95, 96, 97, 98, 102, 105, 107, 111, 116, 117, 118, 119, 127, 131, 134, 139, 143, 145, 162, 163, 164, 165, 167, 168, 170, 172, 182, 214, 228, 231, 233, 239, 240, 246, 251, 261, 271, 272, 276, 278, 362, 398, 399, 400, 409, 466, 475, 476, 505, 511, 516, 529, 530, 537, 538, 546], "cast": [17, 22, 52, 73, 79, 80, 86, 94, 95, 96, 97, 98, 111, 116, 155, 179, 187, 214, 252, 254, 258, 259, 268, 271, 272, 274, 276, 277, 278, 279, 347, 409, 471, 484, 502, 503, 505, 531, 533, 535], "cat": [419, 436], "cauchi": 455, "cbrt": [6, 499], "cdef": 117, "cdot": [233, 237, 511, 533], "cdoubl": 9, "ceil": [6, 38, 149, 156, 157, 479, 483, 525], "center": [130, 131, 132, 133, 137, 138, 145], "central": [172, 437, 438], "certain": [114, 253], "ch": 10, "chain": [110, 111, 116, 117], "chang": [25, 52, 84, 93, 111, 114, 116, 126, 271, 272, 347, 360, 385, 390, 394, 405, 406, 412, 413, 414, 466, 475, 476, 481, 529, 549], "char": 114, "charact": [114, 163], "check": [17, 22, 43, 44, 45, 73, 134, 191, 193, 199, 209, 227, 230, 546], "check_valid": 435, "chi": [421, 437], "chisquar": 6, "choic": [6, 76, 111, 129, 130, 132, 135, 136, 137, 141, 142, 144, 146, 215, 217, 348], "choicelist": 487, "choleski": 6, "choos": [6, 21, 29, 31, 49, 53, 111, 117, 487, 536, 546], "chosen": [37, 176, 526, 536], "chunk": 61, "circ": 553, "circl": [229, 515], "clamp": [412, 413, 507, 508], "clariti": 147, "class": [3, 4, 111, 114, 150, 162, 163, 164, 166, 185, 240, 393, 417, 445, 516, 549], "classic": 116, "clear": [114, 205, 546], "clip": [6, 111, 412, 413, 467, 507, 508, 546], "close": [14, 15, 21, 27, 28, 29, 31, 49, 51, 52, 53, 111, 116, 124, 184, 239, 347, 417, 445, 468, 469, 479, 483, 515], "closer": 525, "cloud": 3, "cmake": 4, "co": [6, 14, 15, 27, 28, 29, 49, 90, 216, 491, 509, 515], "coars": [226, 401], "code": [47, 114, 201, 474], "codeplai": 4, "coeffici": [87, 219, 230, 235], "coerc": [47, 162, 163, 164, 165, 166, 240], "coin": 419, "col": 185, "collaps": [111, 360, 526], "column": [6, 43, 44, 45, 46, 48, 51, 52, 78, 79, 80, 87, 95, 96, 97, 98, 106, 111, 113, 127, 147, 153, 154, 172, 178, 179, 182, 214, 215, 219, 224, 228, 231, 347, 466, 467, 474, 484, 498, 502, 516, 518, 522, 527, 530, 535], "column_stack": [6, 79, 80, 113, 179, 484, 502, 535], "com": 4, "combin": [0, 114, 124, 132, 137, 142, 146, 172], "combinatori": 117, "come": 526, "comma": [114, 116], "command": 4, "common": [135, 136, 137, 169, 204, 233, 396, 511], "common_typ": 6, "compani": [419, 436], "compar": [18, 36, 40, 120, 158, 159, 177, 189, 226, 257, 263, 495], "comparison": [2, 120, 173, 174, 207, 208, 397, 539, 549], "compat": [3, 4, 10, 17, 22, 52, 59, 93, 95, 96, 97, 98, 106, 111, 211, 213, 220, 221, 226, 227, 236, 237, 238, 252, 254, 258, 259, 273, 274, 275, 277, 279, 347, 401, 471, 475, 503, 513, 531, 532, 533, 549], "compil": [4, 114, 171, 474], "complement": [60, 529], "complementari": [157, 529], "complet": [3, 4, 117, 163, 164, 228, 481, 546], "complex": [10, 12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 39, 40, 49, 50, 53, 54, 55, 73, 94, 110, 111, 114, 117, 121, 128, 129, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 155, 158, 159, 184, 190, 191, 198, 199, 205, 214, 215, 216, 217, 220, 228, 229, 231, 237, 252, 254, 257, 263, 268, 277, 279, 350, 351, 410, 468, 469, 471, 496, 503, 526, 531, 532, 533, 546, 549], "complex128": [9, 59, 477], "complex64": [9, 59, 72, 111, 155, 381], "compliant": 111, "complic": [116, 553], "compon": [10, 40, 93, 133, 138, 145, 148, 184, 223, 233, 268, 468, 511], "compos": 85, "composit": [96, 98, 203, 505, 515], "compress": [6, 126, 487, 507, 546], "comput": [4, 10, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 59, 61, 62, 63, 65, 66, 68, 74, 81, 82, 87, 89, 90, 94, 95, 96, 97, 98, 107, 108, 116, 122, 123, 124, 125, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 156, 172, 173, 174, 175, 176, 177, 184, 185, 188, 203, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 247, 248, 249, 250, 252, 254, 258, 259, 264, 271, 272, 273, 274, 275, 276, 277, 278, 279, 394, 401, 406, 410, 468, 470, 471, 472, 479, 483, 485, 489, 490, 491, 493, 499, 503, 505, 509, 510, 511, 515, 518, 522, 531, 533], "compute_uv": [210, 231, 232], "concat": [6, 80], "concaten": [6, 78, 79, 113, 179, 187, 484, 498, 502, 508, 528, 535], "concept": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538, 546], "cond": [6, 218], "condit": [37, 52, 110, 111, 126, 210, 218, 224, 347, 396, 405, 412, 414, 487, 536], "condlist": 487, "confus": 160, "conj": [6, 82, 111, 134, 184, 209, 214, 410], "conjug": [6, 10, 81, 110, 111, 140, 143, 184, 209, 214, 215, 216, 217, 220, 237, 254, 350, 410, 532, 533], "consecut": [107, 115, 172], "conserv": 260, "consid": [18, 26, 39, 40, 43, 44, 46, 48, 117, 145, 170, 189, 192, 215, 217, 223, 239, 251, 254, 417, 445, 476, 497, 526, 533], "consist": [40, 41, 115, 129, 130, 132, 135, 136, 137, 141, 142, 144, 146, 163, 177, 233, 235, 239, 508, 511], "constant": [9, 114, 172, 402], "constant_valu": 402, "constraint": 59, "construct": [43, 44, 45, 76, 102, 105, 106, 111, 114, 127, 162, 163, 164, 165, 166, 182, 202, 205, 240, 261, 348, 398, 487, 492, 512, 513, 536, 539], "constructor": 546, "consum": [111, 368], "contain": [10, 12, 13, 14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 45, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 85, 86, 87, 89, 90, 93, 94, 106, 109, 111, 114, 120, 122, 123, 125, 130, 131, 132, 135, 140, 143, 145, 151, 155, 156, 157, 158, 159, 160, 161, 166, 171, 172, 173, 174, 176, 177, 180, 184, 185, 188, 206, 207, 208, 211, 213, 215, 228, 231, 233, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 258, 263, 264, 267, 269, 270, 273, 274, 275, 277, 279, 377, 393, 394, 396, 397, 404, 406, 407, 408, 410, 417, 468, 470, 471, 472, 478, 479, 483, 485, 489, 490, 491, 492, 493, 499, 500, 503, 504, 509, 510, 511, 514, 518, 519, 522, 523, 524, 525, 531, 546], "content": [46, 111, 259, 454], "context": 10, "contigu": [43, 44, 45, 46, 48, 72, 110, 111, 116, 193, 224, 374, 466, 474, 475], "continu": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 417, 449, 492], "contourf": 260, "contract": [116, 117, 233, 511], "contrari": [211, 213, 220, 236, 237], "contrast": [116, 412], "contribut": [10, 59, 176, 177], "control": [4, 52, 73, 79, 80, 86, 111, 116, 179, 254, 347, 484, 502, 533, 535], "conveni": [111, 390, 417], "convent": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 110, 116, 117, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 186, 220, 233, 235, 254, 401, 511, 533], "convers": [52, 111, 116, 347, 539], "convert": [23, 34, 35, 39, 43, 44, 45, 46, 47, 48, 51, 56, 57, 58, 84, 99, 100, 102, 105, 114, 116, 117, 124, 167, 168, 170, 187, 191, 199, 239, 251, 415, 416, 467, 474, 527, 529, 530], "convolut": [10, 83, 88], "convolv": [6, 88], "coolei": 10, "coordin": [91, 164, 172, 185, 202, 260, 467, 527], "copi": [6, 23, 26, 36, 39, 40, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 86, 101, 102, 103, 105, 106, 111, 114, 118, 119, 126, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 187, 239, 240, 251, 253, 259, 260, 261, 268, 287, 347, 360, 362, 371, 377, 380, 398, 399, 400, 403, 405, 406, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 466, 474, 475, 476, 486, 495, 501, 516, 517, 518, 521, 522, 530, 537, 538, 546], "copysign": [6, 394, 406], "copyto": [6, 111, 126, 352, 405], "core": [3, 116, 533, 546], "corner": [130, 132, 136, 137, 402], "corrcoef": [6, 92], "correct": [12, 13, 14, 15, 16, 21, 23, 27, 28, 29, 30, 31, 32, 33, 37, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 79, 80, 81, 82, 85, 89, 90, 99, 100, 109, 120, 122, 123, 125, 128, 134, 140, 142, 149, 155, 156, 157, 158, 159, 160, 169, 173, 174, 175, 180, 181, 184, 188, 192, 194, 195, 204, 205, 206, 207, 208, 230, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 263, 264, 267, 394, 395, 397, 406, 407, 408, 410, 415, 416, 468, 470, 472, 474, 478, 479, 483, 485, 489, 490, 491, 492, 493, 497, 499, 500, 502, 504, 509, 510, 524, 525], "correctli": [21, 29, 31, 34, 35, 49, 53, 91, 221, 225, 238, 256, 262, 269, 270, 276, 278, 396, 409, 505], "correl": [6, 87, 549], "correspond": [6, 10, 26, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 52, 77, 79, 80, 84, 99, 100, 102, 103, 105, 106, 111, 112, 118, 119, 127, 130, 131, 132, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 178, 182, 185, 202, 211, 214, 215, 233, 237, 239, 240, 251, 253, 254, 261, 347, 352, 356, 398, 399, 400, 404, 415, 416, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 480, 487, 488, 498, 503, 511, 514, 515, 516, 518, 522, 530, 531, 533, 534, 537, 538, 546], "correspondingli": [10, 498], "cosh": [6, 15, 28, 89, 493, 510], "cosin": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 491, 493, 509, 510], "cost": [116, 117], "costli": 117, "could": [111, 134, 140, 142, 382], "count": [17, 22, 61, 91, 108, 114, 117, 152, 162, 163, 165, 166, 172, 176, 177, 396, 409, 419, 494, 505, 526, 539, 549], "count_nonzero": [6, 396], "counterclockwis": [153, 154, 482], "counterpart": [10, 134, 140, 142, 546], "cov": [6, 87, 435], "covari": [87, 92], "cover": [518, 522, 549], "cpu": [4, 26, 39, 43, 44, 45, 46, 48, 84, 88, 92, 102, 105, 118, 119, 121, 127, 131, 145, 162, 163, 164, 165, 167, 168, 170, 182, 239, 240, 251, 261, 265, 276, 398, 399, 400, 516, 530, 537, 538], "creat": [3, 4, 26, 39, 41, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 104, 105, 106, 111, 114, 117, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 268, 347, 352, 398, 399, 400, 402, 413, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 513, 516, 518, 519, 522, 523, 530, 537, 538, 546, 549], "creation": [114, 117, 539, 546, 549, 553], "crop": [129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146], "cross": [6, 88, 202], "csingl": 9, "ct": 10, "ctype": 474, "cube": [74, 155, 499], "cubic": 117, "cuda": 4, "cumprod": [6, 97, 111, 271, 546], "cumsum": [6, 98, 107, 111, 272, 505, 515, 546], "cumul": [94, 95, 96, 97, 98, 107, 111, 271, 272, 353, 354, 505, 515], "cumulative_prod": [6, 95], "cumulative_sum": [6, 96], "cupi": [2, 539], "current": [10, 12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 85, 89, 90, 99, 100, 109, 111, 114, 117, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 163, 169, 175, 177, 180, 182, 188, 204, 205, 206, 242, 243, 244, 245, 246, 257, 263, 264, 265, 267, 380, 393, 394, 395, 402, 406, 407, 408, 410, 415, 416, 470, 472, 474, 478, 479, 485, 489, 490, 491, 493, 497, 504, 509, 510, 524, 525], "curv": 515, "custom": 546, "customarili": 10, "cut": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 219, 533], "cutoff": 227, "cycl": [131, 145, 202, 476], "cyclic": 412, "cython": 4, "d": [0, 17, 22, 24, 25, 26, 59, 78, 79, 80, 87, 95, 96, 102, 103, 104, 105, 106, 110, 111, 113, 114, 127, 131, 133, 138, 145, 147, 151, 153, 154, 166, 178, 179, 182, 186, 202, 212, 213, 215, 216, 220, 224, 225, 229, 233, 236, 254, 260, 271, 272, 278, 360, 396, 407, 408, 409, 412, 422, 466, 475, 484, 486, 488, 502, 505, 507, 511, 512, 513, 520, 526, 530, 533, 535, 546], "d0": [417, 444, 446], "d1": [417, 446], "d3": 103, "data": [1, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99, 100, 102, 105, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 134, 140, 142, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 192, 194, 195, 196, 197, 199, 204, 205, 206, 207, 208, 213, 219, 226, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 347, 377, 390, 392, 394, 395, 397, 399, 400, 405, 406, 407, 408, 410, 412, 413, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 497, 499, 500, 501, 502, 503, 504, 508, 509, 510, 513, 516, 524, 525, 531, 533, 535, 536, 537, 538, 539, 549], "datatyp": [114, 223], "date": 4, "datetim": 114, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [92, 111, 277, 279, 384, 391, 503, 531], "decai": 430, "decim": [38, 60, 111, 148, 149, 378, 479, 483], "decomposit": [209, 218, 223, 227, 231, 232, 549], "decompress": 240, "decreas": [108, 515], "decreasingli": [10, 130, 132, 136, 137], "deem": 161, "def": [0, 24, 402], "default": [3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 187, 188, 189, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 221, 223, 224, 225, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 360, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 421, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 458, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 546], "default_rng": 6, "defg": 117, "defici": 223, "defin": [10, 32, 54, 93, 101, 114, 119, 129, 158, 159, 168, 175, 176, 177, 187, 211, 213, 225, 237, 257, 263, 268, 400, 406, 469, 482, 533, 538, 546], "definit": [93, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 156, 209, 515], "deg": [21, 416], "deg2rad": [6, 415, 416, 529], "degre": [6, 21, 99, 277, 279, 415, 416, 459, 482, 503, 529, 531, 553], "del": 553, "delet": [6, 23, 187], "delta": [10, 277, 279, 503, 529, 531], "demonstr": [0, 4, 114], "denot": [181, 237, 533], "dens": [185, 202, 261], "densiti": 176, "depend": [4, 25, 37, 106, 128, 134, 140, 142, 213, 215, 219, 225, 228, 230, 231, 239, 276, 278, 487, 536], "depth": [78, 79, 80, 112, 113, 179, 484, 498, 502, 535], "deriv": 172, "descend": 231, "descr": 114, "describ": [94, 114, 225, 236, 252, 471, 549], "descript": [94, 114, 135, 137, 176, 252, 471, 546], "design": [10, 60], "desir": [26, 39, 43, 44, 46, 48, 51, 71, 118, 119, 127, 135, 136, 137, 167, 168, 170, 182, 239, 251, 399, 400, 466, 512, 516, 537, 538], "destin": [79, 80, 179, 266, 412, 413, 484, 502, 508, 535], "destruct": 553, "det": [6, 229], "detail": [38, 130, 132, 136, 137, 141, 142, 144, 146, 161, 221, 238, 483, 518, 519, 522, 523, 526, 546], "determin": [14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 74, 85, 89, 90, 99, 100, 109, 122, 123, 125, 157, 158, 159, 160, 163, 164, 166, 180, 206, 212, 213, 219, 228, 229, 236, 241, 242, 243, 244, 245, 246, 254, 257, 263, 264, 267, 395, 407, 408, 415, 416, 467, 470, 472, 478, 485, 487, 489, 491, 492, 493, 497, 499, 500, 504, 509, 510, 513, 524, 525, 527, 533], "devel": 4, "develop": [3, 4], "deviat": [111, 258, 274, 277, 279, 384, 417, 432, 439, 503, 531], "devic": [0, 2, 3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 59, 84, 94, 102, 103, 105, 111, 116, 118, 119, 127, 128, 131, 145, 149, 161, 162, 163, 164, 165, 166, 167, 168, 170, 181, 182, 185, 239, 240, 251, 252, 253, 254, 258, 259, 261, 274, 277, 279, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 471, 501, 503, 516, 518, 522, 530, 531, 533, 537, 538], "df": [421, 437, 459, 460], "dfden": [425, 438], "dfnum": [425, 438], "dft": [10, 129, 134, 135, 139, 140, 143], "di": [103, 104], "diag": [6, 24, 105, 106, 116, 127, 153, 154, 182, 214, 216, 231, 487, 513], "diag_indic": [6, 104, 147], "diag_indices_from": [6, 103, 147], "diagflat": [6, 102, 106, 513], "diagon": [6, 102, 103, 104, 105, 111, 116, 127, 147, 182, 209, 215, 216, 217, 236, 253, 389, 487, 513, 516, 517, 518, 519, 521, 522, 523, 546], "dice": 434, "dict": [114, 402], "dictionari": 114, "diff": [6, 96, 98, 115, 172, 176], "differ": [3, 10, 18, 25, 26, 39, 42, 43, 44, 45, 46, 48, 59, 84, 94, 96, 97, 98, 102, 105, 107, 111, 114, 115, 118, 119, 127, 130, 131, 135, 136, 138, 141, 144, 145, 148, 153, 154, 155, 162, 163, 164, 165, 167, 168, 170, 172, 182, 187, 189, 217, 225, 236, 239, 240, 251, 252, 254, 261, 352, 398, 399, 400, 405, 407, 408, 413, 471, 476, 482, 504, 508, 516, 518, 522, 529, 530, 537, 538, 549], "differenti": 492, "digit": [6, 10, 61, 148, 176], "dim": [18, 467], "dimens": [17, 22, 23, 24, 25, 34, 35, 39, 56, 57, 58, 59, 78, 79, 80, 86, 91, 92, 93, 97, 98, 103, 106, 107, 111, 112, 114, 124, 136, 137, 149, 153, 154, 172, 179, 185, 186, 202, 211, 213, 221, 223, 225, 228, 232, 233, 236, 237, 238, 252, 255, 256, 258, 259, 260, 261, 262, 266, 269, 270, 273, 274, 275, 276, 277, 278, 279, 360, 364, 369, 380, 392, 393, 396, 398, 409, 413, 417, 447, 449, 450, 452, 466, 467, 471, 475, 482, 488, 498, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 518, 519, 522, 523, 526, 527, 528, 531, 533, 534, 546, 549], "dimension": [2, 4, 24, 36, 61, 83, 88, 91, 94, 97, 98, 101, 103, 104, 105, 106, 107, 108, 111, 115, 116, 129, 130, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 162, 163, 165, 172, 178, 185, 187, 202, 211, 219, 226, 228, 234, 235, 252, 256, 260, 261, 262, 269, 270, 273, 275, 277, 279, 383, 392, 393, 398, 401, 409, 471, 495, 503, 505, 507, 512, 515, 526, 531, 532, 534, 539], "direct": [10, 93, 107, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 153, 154, 172, 211, 395, 482], "directli": [114, 164, 185, 251, 396, 508], "directori": 171, "dirichlet": 6, "discard": 525, "discont": 529, "discontinu": 529, "discret": [3, 83, 88, 96, 98, 107, 115, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 172, 417, 492, 539, 549], "dispers": 462, "displac": [111, 385], "disregard": 476, "distanc": [172, 497], "distinct": [158, 159, 257, 263, 476], "distinguish": 114, "distribut": [3, 4, 251, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 449, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 549], "divid": [6, 42, 112, 113, 157, 160, 178, 264, 472, 498, 524, 534], "divis": [109, 157, 160, 264, 407, 408, 472, 498, 524, 525], "divisor": [169, 204, 277, 279, 503, 531], "divmod": [6, 546], "dlpack": 161, "dmlc": 161, "dn": [417, 444, 446], "do": [3, 4, 114, 253, 259, 419, 481, 515], "docstr": 546, "document": [0, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546], "doe": [23, 26, 42, 73, 101, 111, 116, 126, 128, 143, 158, 159, 161, 187, 228, 268, 271, 272, 362, 405, 476, 498, 507], "domain": [10, 134, 139], "done": [3, 52, 111, 116, 235, 347, 526, 529], "dot": [6, 111, 116, 117, 186, 209, 216, 218, 224, 227, 228, 230, 231, 233, 234, 235, 237, 254, 511, 532, 533], "doubl": [9, 233, 430, 511], "down": 154, "dp": [109, 212, 215, 229, 230, 407, 408, 504, 524], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 269, 270, 273, 275, 276, 347, 352, 398, 399, 400, 411, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "dpnp": [0, 2, 3, 4, 10, 539, 546, 549, 550, 553], "dpnp_arrai": [26, 39, 43, 44, 45, 46, 48, 52, 84, 102, 103, 105, 118, 119, 127, 131, 145, 148, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 183, 185, 239, 240, 251, 253, 261, 280, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538, 539], "dpnp_iface_arraycr": [261, 398], "draw": [417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "drawn": [417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 442, 443, 445, 448, 451, 457, 458, 459, 460, 461, 462, 463, 464, 465, 487], "drill": [419, 436], "driver": 2, "drop": [3, 114], "dsplit": [6, 79, 80, 113, 498], "dst": 86, "dstack": [6, 78, 79, 80, 179, 484, 498, 502, 535], "dt": [114, 515], "dt2": 114, "dtype": [0, 9, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 80, 81, 82, 85, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 109, 111, 116, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 182, 183, 185, 187, 188, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 224, 227, 231, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 353, 354, 366, 372, 381, 384, 386, 389, 391, 394, 395, 397, 399, 400, 406, 407, 408, 409, 410, 415, 416, 417, 439, 445, 461, 470, 471, 472, 474, 477, 478, 479, 483, 484, 485, 489, 490, 491, 492, 493, 496, 497, 499, 500, 502, 503, 504, 505, 507, 509, 510, 513, 516, 517, 521, 524, 525, 531, 533, 534, 535, 537, 538, 546], "due": [143, 553], "dump": 6, "dx": [172, 515], "dy": 172, "dz": 172, "e": [9, 10, 15, 28, 30, 50, 64, 94, 95, 97, 106, 114, 118, 119, 124, 127, 130, 134, 135, 136, 137, 140, 142, 143, 155, 163, 167, 168, 172, 182, 206, 214, 229, 234, 238, 241, 259, 399, 400, 417, 469, 473, 476, 506, 516, 528, 537, 538], "ea": 117, "each": [0, 12, 13, 14, 15, 16, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 42, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 81, 82, 85, 87, 89, 90, 95, 96, 97, 98, 103, 106, 108, 109, 111, 112, 114, 117, 120, 122, 123, 125, 130, 132, 134, 136, 137, 140, 141, 142, 144, 146, 153, 154, 155, 156, 157, 160, 164, 172, 173, 174, 176, 177, 178, 181, 184, 188, 192, 194, 195, 202, 206, 207, 208, 211, 214, 215, 216, 217, 219, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 264, 266, 267, 268, 378, 393, 394, 396, 397, 402, 406, 407, 408, 410, 413, 419, 436, 467, 468, 470, 472, 473, 476, 478, 479, 480, 483, 485, 489, 490, 491, 493, 498, 499, 500, 502, 504, 508, 509, 510, 512, 515, 518, 519, 522, 523, 524, 525, 526, 527, 533, 534, 546], "easier": 507, "easiest": [4, 402], "easili": [0, 177], "edg": [77, 108, 176, 177, 402], "edge_ord": 172, "ediff1d": [6, 107, 172], "effect": [117, 155, 158, 159, 257, 263, 407, 408, 529], "effici": [10, 129, 143, 163, 223, 227, 231], "efgh": 117, "eig": [6, 215, 216, 217], "eigenvalu": [214, 215, 216, 217, 549], "eigenvector": [214, 215, 216, 217], "eigh": [6, 214, 216, 217], "eight": 225, "eigval": [6, 214, 215, 217], "eigvalsh": [6, 214, 215, 216], "einstein": [110, 116, 117, 186, 233, 235, 254, 401, 511, 533], "einsum": [6, 110, 117, 186, 233, 235, 254, 401, 511, 533], "einsum_path": [6, 116], "either": [25, 40, 41, 48, 59, 93, 94, 106, 114, 130, 132, 134, 136, 137, 140, 142, 144, 146, 147, 172, 181, 186, 213, 215, 217, 225, 228, 252, 269, 270, 273, 275, 276, 278, 467, 471, 476, 486, 487, 508, 515], "element": [4, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 45, 49, 50, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 85, 86, 89, 90, 94, 95, 96, 97, 98, 101, 104, 106, 107, 108, 109, 111, 114, 115, 117, 120, 122, 123, 125, 126, 127, 128, 130, 132, 136, 137, 141, 142, 143, 144, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 211, 213, 216, 222, 233, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 260, 262, 263, 264, 265, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 342, 343, 350, 351, 353, 354, 356, 357, 360, 362, 363, 366, 368, 370, 371, 376, 377, 378, 379, 381, 384, 385, 388, 391, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 414, 466, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 503, 504, 505, 507, 509, 510, 511, 512, 513, 515, 517, 519, 521, 523, 524, 525, 526, 527, 529, 531, 533, 536, 546, 549, 553], "element_count": [111, 381, 494], "elimin": 24, "ellipsi": 116, "els": [0, 114, 229, 285], "elsewher": [127, 182, 516, 536], "empti": [4, 6, 39, 111, 119, 130, 132, 136, 137, 141, 142, 144, 146, 163, 167, 168, 219, 357, 399, 400, 402, 405, 498, 537, 538, 546], "empty_lik": [6, 39, 118, 168, 400, 538], "enabl": [147, 223, 227, 231], "encount": [271, 272, 273, 275, 487], "end": [23, 26, 72, 101, 106, 114, 115, 117, 135, 170, 187, 239, 251, 402], "end_tim": 0, "end_valu": 402, "endian": 114, "endpoint": [26, 170, 239, 251, 515], "engin": 453, "enlarg": 476, "enough": 176, "ensur": 474, "entir": [59, 94, 134, 176, 177, 252, 258, 273, 274, 275, 277, 279, 402, 471, 503, 531], "entiti": 476, "entri": [42, 101, 111, 112, 114, 118, 126, 134, 140, 142, 147, 152, 153, 154, 178, 383, 498, 501, 533, 534], "enumer": 161, "env": 4, "environ": 4, "ep": [148, 223, 227, 395, 469, 497], "epsilon": [223, 469], "epsneg": 148, "equal": [6, 17, 18, 22, 24, 36, 40, 41, 42, 59, 61, 64, 67, 79, 80, 88, 92, 96, 98, 111, 112, 127, 170, 172, 173, 174, 176, 177, 178, 179, 189, 191, 199, 201, 206, 207, 208, 213, 222, 227, 228, 235, 239, 251, 264, 371, 397, 402, 417, 427, 461, 472, 478, 479, 483, 484, 489, 492, 495, 498, 501, 502, 516, 518, 522, 528, 534, 535], "equal_nan": [18, 40, 189, 526], "equat": [219, 230, 234, 235, 549], "equiv": [52, 73, 79, 80, 86, 111, 116, 179, 222, 254, 347, 484, 502, 533, 535], "equival": [10, 16, 17, 19, 20, 22, 24, 25, 34, 35, 36, 38, 41, 59, 60, 84, 93, 94, 99, 100, 101, 109, 110, 111, 112, 113, 117, 124, 126, 151, 158, 159, 160, 178, 202, 232, 233, 234, 238, 252, 255, 264, 267, 287, 342, 343, 355, 369, 377, 380, 390, 392, 396, 401, 404, 406, 415, 416, 417, 445, 471, 472, 475, 482, 483, 488, 495, 504, 505, 507, 511, 514, 524, 526, 528, 533, 534, 546, 553], "error": [60, 94, 112, 116, 121, 134, 139, 178, 214, 252, 467, 471, 498, 501, 534, 539, 546], "essenti": 4, "estim": [92, 177, 419, 436, 515], "et": 10, "etc": [10, 39, 44, 114, 130, 132, 136, 137, 141, 142, 144, 146, 436], "euclidean": 219, "euler_gamma": 9, "evalu": [17, 18, 22, 111, 116, 117, 120, 181, 191, 193, 199, 233, 235, 260, 342, 343, 401, 487, 511], "even": [10, 111, 114, 131, 133, 134, 135, 138, 139, 140, 142, 143, 145, 191, 193, 199, 259, 364, 402, 479, 483], "evenli": [26, 170, 239, 251, 479, 515], "event": 246, "everi": [60, 72, 142, 413, 508], "everywher": [140, 492], "exact": [126, 224, 405], "exactli": [10, 51, 166, 417, 445, 487], "examin": 219, "exampl": [2, 3, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 355, 357, 360, 361, 362, 364, 369, 371, 375, 377, 380, 381, 382, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546, 553], "exce": [246, 498], "except": [4, 12, 13, 14, 15, 16, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 89, 90, 99, 100, 107, 108, 109, 110, 111, 118, 119, 120, 122, 123, 125, 127, 128, 141, 142, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 178, 179, 180, 182, 188, 192, 194, 195, 204, 205, 206, 207, 208, 224, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 256, 257, 258, 262, 263, 264, 267, 273, 274, 275, 276, 277, 278, 279, 347, 362, 394, 395, 397, 399, 400, 406, 407, 408, 409, 410, 415, 416, 466, 470, 472, 473, 474, 478, 479, 485, 489, 490, 491, 493, 495, 497, 498, 499, 500, 503, 504, 505, 509, 510, 524, 525, 531, 533, 537, 538, 549], "exclud": [12, 13, 23, 239, 417, 461], "exclus": [417, 445], "execut": [3, 4, 24, 43, 44, 45, 88, 92, 121, 164, 265, 276, 420, 422, 423, 433, 438, 454, 553], "executor": 0, "exist": [10, 78, 79, 80, 113, 114, 124, 161, 179, 187, 484, 498, 502, 528, 535, 549], "exp": [6, 10, 123, 125, 129, 229, 243, 245, 252], "exp2": [6, 122, 125], "expand": [107, 124], "expand_dim": [6, 34, 35], "expect": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 81, 82, 85, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 109, 110, 114, 120, 122, 123, 125, 128, 140, 149, 155, 156, 157, 158, 159, 160, 169, 173, 174, 175, 180, 181, 184, 188, 189, 192, 194, 195, 204, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 258, 259, 262, 263, 264, 267, 271, 272, 274, 276, 277, 278, 279, 394, 395, 397, 406, 407, 408, 409, 410, 415, 416, 468, 470, 471, 472, 478, 479, 483, 485, 489, 490, 491, 492, 493, 497, 499, 500, 503, 504, 505, 509, 510, 524, 525, 531, 536], "explain": [132, 137, 142, 146, 546], "explan": 114, "explicit": 116, "explicitli": [106, 130, 132, 136, 137, 141, 142, 144, 146], "exploit": [10, 143], "explor": [117, 419, 436], "expm1": [6, 122, 123, 243], "expon": [10, 122, 123, 125, 155, 205, 222, 245, 246, 252, 407, 408, 443, 549], "exponenti": [6, 10, 117, 245, 246, 252, 430, 456], "expos": [162, 546], "express": [10, 14, 15, 24, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 116, 117, 205, 240, 553], "extend": [10, 114, 203, 402, 546], "extens": [0, 1, 3, 4, 9, 171, 240, 539], "extra": [114, 140, 166], "extract": [6, 102, 105, 106, 116, 127, 151, 182, 185, 253, 405, 487, 507, 513], "extrapol": 476, "extrema": 549, "ey": [6, 72, 81, 82, 91, 111, 136, 137, 158, 159, 182, 186, 203, 218, 222, 223, 234, 235, 236, 250, 257, 263, 488, 513], "f": [0, 6, 10, 12, 13, 14, 15, 16, 21, 24, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 111, 114, 116, 118, 119, 120, 122, 123, 125, 127, 128, 131, 143, 145, 149, 155, 156, 157, 158, 159, 160, 167, 168, 169, 172, 173, 174, 175, 180, 181, 184, 188, 192, 193, 194, 195, 204, 205, 206, 207, 208, 222, 225, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 263, 264, 267, 347, 352, 360, 394, 395, 397, 399, 400, 406, 407, 408, 410, 415, 416, 438, 466, 467, 468, 470, 472, 474, 475, 478, 479, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 520, 524, 525, 527, 533, 536, 537, 538], "f0": 114, "f1": 114, "f2": 114, "f4": 73, "f8": [73, 114], "f_contigu": [46, 48, 193, 474], "f_k": 10, "fab": [6, 12, 13], "fact": 216, "factor": [10, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 209, 228], "fail": [111, 380, 419], "fallback": [214, 216, 420, 422, 423, 433, 438, 454], "fals": [17, 18, 19, 20, 21, 22, 34, 35, 36, 39, 40, 41, 44, 46, 48, 52, 59, 62, 63, 65, 68, 69, 71, 73, 84, 87, 91, 92, 94, 96, 97, 98, 101, 108, 111, 114, 116, 117, 119, 120, 126, 147, 161, 164, 168, 170, 173, 174, 176, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 207, 208, 209, 210, 221, 223, 225, 227, 231, 232, 238, 239, 247, 248, 249, 250, 251, 252, 256, 258, 259, 260, 262, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 285, 342, 343, 344, 345, 347, 365, 366, 367, 372, 384, 386, 391, 396, 397, 400, 409, 411, 471, 474, 475, 487, 490, 495, 503, 505, 526, 530, 531, 536, 538], "famili": 10, "fanci": 507, "fashion": [246, 546], "fast": [10, 129, 130, 132, 136, 137, 142, 143, 146], "faster": [10, 24, 60, 158, 159], "fastest": [111, 193, 360, 466, 475], "fb": [117, 520], "featur": 114, "fetch": 475, "few": 147, "fft": [6, 549], "fft2": [6, 129, 132, 136], "fftfreq": [6, 10, 129, 133, 138, 145], "fftn": [6, 129, 130, 137, 143, 146], "fftshift": [6, 10, 130, 132, 137, 138], "fh": 163, "field": [114, 260], "field1": 114, "file": [162, 163, 165, 166, 171, 240], "filenam": [163, 240], "fill": [6, 23, 39, 111, 118, 119, 147, 167, 168, 176, 177, 260, 268, 352, 399, 400, 476, 516, 537, 538], "fill_diagon": 6, "fill_valu": [167, 168], "filt": 520, "filter": [10, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 492, 516, 518, 522, 530, 537, 538], "final": [4, 10, 87, 142, 143, 144, 146, 170, 251], "find": [37, 61, 87, 108, 111, 128, 176, 223, 227, 231, 379, 395, 396, 473, 486, 495, 497, 526, 549], "fine": 4, "finfo": [227, 395, 469, 497], "finfo_object": 148, "finit": [45, 192, 194, 195, 196, 197, 268, 497], "first": [16, 17, 18, 22, 24, 25, 32, 34, 35, 36, 40, 41, 54, 59, 62, 64, 66, 67, 68, 72, 78, 79, 80, 85, 87, 93, 94, 97, 98, 106, 109, 110, 111, 114, 117, 120, 123, 130, 132, 134, 136, 137, 152, 155, 157, 158, 159, 160, 169, 172, 173, 174, 176, 177, 178, 180, 181, 186, 187, 189, 193, 201, 203, 204, 206, 207, 208, 211, 213, 220, 224, 233, 234, 236, 237, 240, 245, 246, 247, 249, 250, 253, 254, 256, 257, 259, 260, 262, 263, 264, 267, 269, 270, 360, 393, 397, 401, 402, 405, 407, 408, 409, 466, 472, 475, 478, 480, 482, 484, 486, 487, 495, 496, 500, 504, 505, 506, 508, 511, 513, 524, 526, 528, 532, 533, 534, 535], "fit": [219, 473], "fix": [6, 38, 75, 106, 114, 156, 412, 479, 483, 525], "flag": [46, 48, 111, 114, 193, 352, 474], "flanneri": 10, "flat": [34, 35, 111, 115, 150, 360, 362, 393, 466, 467, 473, 527], "flatit": 393, "flatnonzero": [6, 396], "flatten": [6, 23, 34, 35, 36, 79, 80, 91, 95, 96, 101, 102, 105, 106, 111, 115, 147, 151, 176, 177, 187, 238, 256, 259, 262, 269, 270, 271, 272, 276, 278, 359, 374, 382, 396, 401, 413, 466, 467, 473, 480, 495, 507, 508, 513, 526, 527, 532], "flexibl": [110, 114, 163, 224], "flip": [6, 63, 65, 106, 147, 153, 154, 188, 213, 419, 482], "fliplr": [6, 106, 147, 152, 154, 213, 482], "flipud": [6, 106, 147, 152, 153, 213, 482], "float": [12, 13, 21, 26, 32, 43, 44, 47, 54, 59, 73, 85, 94, 114, 118, 119, 123, 127, 128, 131, 145, 148, 149, 155, 162, 163, 164, 165, 166, 167, 168, 169, 172, 176, 177, 181, 182, 184, 205, 219, 222, 223, 225, 227, 238, 239, 240, 245, 246, 251, 252, 256, 258, 259, 262, 268, 274, 277, 279, 395, 399, 400, 407, 408, 417, 421, 446, 447, 449, 450, 452, 455, 456, 458, 461, 468, 469, 470, 471, 485, 492, 503, 516, 529, 531, 537, 538, 546, 549], "float16": [9, 155], "float32": [0, 9, 45, 47, 52, 61, 73, 87, 95, 96, 97, 98, 111, 114, 116, 155, 347, 395, 417, 439, 444, 446, 447, 449, 450, 452, 458, 461, 474, 477], "float64": [0, 9, 47, 52, 59, 73, 111, 114, 116, 347, 417, 418, 424, 425, 426, 428, 430, 431, 432, 439, 440, 443, 444, 446, 447, 449, 450, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 477, 492, 497, 534], "float_pow": [6, 407, 408], "floor": [6, 38, 75, 149, 157, 264, 472, 479, 483, 525], "floor_divid": [6, 264, 472], "flop": 117, "flush": 163, "fmax": [6, 159, 256, 257, 263, 273, 407, 408], "fmin": [6, 158, 257, 262, 263, 275, 407, 408], "fmod": [6, 264, 407, 408, 472], "fn": 164, "fname": 240, "follow": [4, 10, 24, 59, 114, 124, 140, 148, 161, 183, 215, 217, 225, 227, 233, 402, 474, 511, 546, 549], "forc": [114, 116], "forg": 4, "form": [10, 23, 39, 43, 44, 45, 46, 47, 48, 60, 78, 84, 102, 105, 111, 113, 116, 117, 136, 137, 140, 167, 168, 170, 191, 199, 202, 213, 221, 232, 236, 239, 251, 255, 390, 402, 476, 484, 530, 535], "format": [114, 161, 163, 166, 549], "format_float_posit": 6, "format_float_scientif": 6, "former": [14, 27, 29, 30, 31, 33, 49, 50, 53, 55, 413, 508], "forth": [233, 511], "fortran": [48, 52, 111, 193, 347, 360, 466, 467, 474, 475, 527], "forward": [10, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 172], "found": [4, 486, 546], "four": [417, 446], "fourier": [129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 539, 549], "fourth": 130, "frac": [10, 515], "fraction": [265, 525], "free": [111, 377], "freedom": [277, 279, 459, 503, 531], "freq": [131, 133, 138, 145], "freq_spectrum": 134, "frequenc": [10, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145], "freshli": [196, 197, 533], "frexp": [6, 205], "fro": [210, 221, 225, 238], "frobeniu": [210, 225], "from": [3, 10, 14, 15, 17, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 69, 73, 76, 79, 80, 84, 86, 94, 99, 100, 102, 103, 105, 106, 111, 113, 114, 116, 118, 119, 123, 126, 127, 131, 135, 144, 145, 146, 152, 155, 161, 162, 163, 164, 165, 166, 167, 168, 172, 176, 179, 182, 185, 187, 202, 205, 214, 216, 217, 223, 224, 236, 240, 252, 253, 260, 261, 348, 352, 383, 388, 398, 399, 400, 402, 405, 409, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 471, 475, 476, 477, 482, 484, 486, 487, 500, 501, 502, 505, 507, 508, 513, 516, 518, 520, 522, 523, 526, 528, 529, 530, 535, 536, 537, 538, 549], "from_": 73, "from_dlpack": 6, "frombuff": [6, 163, 165, 166, 240], "fromfil": [6, 162, 165, 166], "fromfunct": [6, 43, 44, 45], "fromit": [6, 43, 44, 45, 162, 163, 166], "frompyfunc": 6, "fromregex": [6, 240], "fromstr": [6, 162, 163, 165, 240], "front": [60, 520], "full": [6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "full_lik": [6, 39, 119, 167, 400, 538], "full_matric": 231, "fulli": [114, 259], "func": 25, "func1d": 24, "function": [0, 2, 3, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 84, 88, 92, 94, 97, 98, 99, 100, 106, 109, 111, 116, 118, 119, 121, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 142, 143, 146, 147, 155, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 181, 182, 193, 202, 211, 213, 214, 216, 220, 221, 224, 225, 226, 232, 233, 236, 237, 238, 240, 243, 245, 246, 252, 253, 255, 260, 264, 265, 276, 342, 343, 352, 355, 362, 377, 380, 390, 399, 400, 402, 407, 408, 413, 415, 416, 417, 420, 422, 423, 433, 438, 454, 466, 471, 472, 474, 476, 483, 484, 489, 492, 503, 507, 508, 511, 512, 518, 519, 522, 523, 524, 528, 531, 535, 536, 537, 538, 539, 546, 549], "fundament": [10, 114], "further": [101, 518, 522], "futur": [114, 177], "fweight": 92, "g": [4, 10, 114, 118, 119, 127, 167, 168, 182, 225, 399, 400, 417, 516, 537, 538, 553], "g952163ca918": 6, "gamma": [6, 457], "gauss": 10, "gaussian": [417, 439, 463], "gc": 117, "gcd": [6, 204], "gen": 116, "gender": 114, "gener": [4, 10, 36, 59, 60, 87, 114, 135, 140, 143, 146, 170, 186, 214, 215, 216, 217, 221, 227, 228, 238, 240, 251, 417, 419, 422, 453, 466, 497, 515, 518, 522, 530, 546, 549], "genfromtxt": [6, 240], "geometr": [6, 170, 239], "geomspac": [6, 239, 251], "get": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 104, 105, 111, 118, 119, 127, 131, 134, 140, 142, 145, 155, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 232, 237, 239, 240, 251, 253, 261, 352, 380, 398, 399, 400, 402, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 508, 516, 518, 519, 522, 523, 530, 533, 537, 538, 546], "get_arrai": 111, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 417], "get_sycl_devic": 417, "get_sycl_queu": 417, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 114], "getter": [111, 380], "gid": 177, "github": 161, "give": [10, 105, 111, 155, 177, 390, 475, 488, 494, 526], "given": [17, 18, 22, 23, 24, 25, 26, 34, 35, 38, 39, 40, 43, 44, 46, 48, 52, 59, 60, 78, 84, 91, 92, 95, 96, 97, 98, 107, 110, 111, 113, 114, 115, 117, 118, 119, 126, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 158, 159, 167, 168, 170, 172, 176, 177, 187, 189, 218, 225, 233, 237, 239, 251, 253, 256, 257, 259, 260, 262, 263, 271, 272, 273, 275, 276, 277, 278, 279, 344, 345, 347, 353, 354, 367, 372, 373, 378, 381, 384, 386, 391, 393, 396, 399, 400, 405, 409, 411, 412, 417, 422, 444, 461, 471, 473, 474, 475, 479, 480, 481, 482, 484, 486, 487, 494, 498, 503, 505, 507, 511, 512, 515, 516, 526, 528, 531, 533, 535, 537, 538, 546], "global": 0, "golub": 225, "good": 429, "gpu": [0, 3, 4, 26, 39, 43, 44, 45, 46, 48, 84, 102, 105, 118, 119, 127, 131, 145, 162, 163, 164, 165, 167, 168, 170, 182, 239, 240, 251, 261, 398, 399, 400, 516, 530, 537, 538], "grade": 114, "gradient": [6, 107, 115, 219], "graphic": 4, "great": 10, "greater": [6, 64, 67, 111, 112, 120, 157, 174, 206, 207, 208, 223, 228, 371, 397, 402, 478, 487, 489, 501, 529], "greater_equ": [6, 120, 173, 207, 208, 397], "greatest": [157, 169, 204], "greedi": [116, 117], "grid": [43, 44, 45, 164, 185, 226, 260, 261, 398, 401], "group": [37, 396], "guarante": [114, 474, 475], "guid": [2, 3], "gumbel": 6, "gz": 240, "h": [171, 209, 225, 228, 260], "ha": [4, 10, 12, 13, 14, 15, 17, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 49, 50, 53, 55, 59, 66, 87, 94, 95, 96, 97, 98, 108, 114, 120, 124, 134, 139, 140, 164, 172, 173, 174, 179, 181, 184, 190, 191, 198, 199, 207, 208, 216, 229, 231, 236, 252, 258, 259, 264, 271, 272, 274, 276, 277, 278, 279, 397, 402, 409, 468, 469, 470, 471, 472, 473, 481, 485, 487, 501, 502, 503, 505, 506, 507, 512, 513, 527, 531, 546], "had": [413, 508], "hadamard": 117, "half": [15, 28, 130, 132, 133, 134, 136, 137, 239, 417, 447, 449, 450, 452, 461, 506], "ham": 6, "han": 6, "hand": [93, 211, 235], "handl": [26, 114, 128, 240, 396, 413, 467, 507, 508, 549], "happen": [52, 59, 111, 347, 419, 515], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 114, "have": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 49, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 78, 79, 80, 81, 82, 85, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 109, 110, 113, 114, 120, 122, 123, 125, 128, 136, 137, 146, 148, 149, 155, 156, 157, 158, 159, 160, 169, 173, 174, 175, 179, 180, 181, 184, 188, 189, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 213, 219, 221, 224, 226, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 257, 258, 259, 263, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 394, 395, 397, 405, 406, 407, 408, 409, 410, 415, 416, 436, 468, 470, 471, 472, 473, 474, 475, 478, 479, 483, 484, 485, 489, 490, 491, 492, 493, 497, 499, 500, 502, 503, 504, 505, 509, 510, 512, 524, 525, 529, 531, 533, 535, 546], "hd": 117, "header": 171, "heapsort": [36, 495], "heavisid": 6, "hello": 114, "help": 553, "helper": 549, "henc": [124, 172], "here": [6, 114, 116, 134, 139, 140, 518, 522], "hermit": [215, 217], "hermitian": [134, 139, 140, 142, 143, 209, 214, 215, 216, 217, 223, 227, 231, 232, 549], "hfft": [6, 10, 139], "hierarchi": 201, "high": [72, 140, 417, 445, 448, 461], "higher": [24, 111, 116, 178, 187, 364, 532, 534], "highest": 129, "highli": 163, "hist": [176, 455], "hist_0": 177, "hist_1": 177, "histogram": [6, 61, 108, 177, 486, 549], "histogram2d": 6, "histogram_bin_edg": [6, 176], "histogramdd": [6, 176], "hold": [77, 95, 96, 97, 98, 176, 225, 259, 271, 272, 276, 278, 466, 513], "homogen": 114, "hopkin": 225, "horizont": [78, 79, 80, 106, 113, 147, 152, 178, 179, 213, 482, 484, 498, 502, 535], "host": [3, 4, 26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 516, 518, 522, 530, 537, 538], "household": 228, "how": [0, 4, 114, 140, 143, 172, 412, 413, 467, 507, 508, 518, 522], "howev": [111, 382, 507], "hsplit": [6, 79, 80, 498], "hstack": [6, 78, 79, 80, 113, 484, 498, 502, 535], "http": [4, 161], "hyperbol": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 491, 493, 509, 510, 549], "hypergeometr": 6, "hypot": [6, 471], "hypotenus": [180, 471], "i": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 347, 352, 362, 364, 371, 377, 380, 382, 385, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546, 553], "i0": 6, "i1": [111, 114, 385], "i2": [111, 114, 385], "i3": [111, 385], "i4": [73, 114], "i7": 116, "i8": [73, 114], "i_0": 181, "iaxi": 402, "iaxis_pad_width": 402, "icpx": 4, "icx": 4, "id": [17, 22], "ideal": 492, "ident": [3, 6, 17, 22, 24, 45, 94, 114, 127, 138, 147, 230, 237, 456, 533], "identifi": 114, "idx": 187, "ieee": 148, "ifft": [6, 129, 136, 137, 139, 140, 145], "ifft2": [6, 130, 135, 137], "ifftn": [6, 132, 135, 136], "ifftshift": [6, 10, 133, 137], "ignor": [34, 35, 93, 114, 158, 159, 166, 176, 177, 256, 257, 258, 262, 263, 269, 270, 273, 274, 275, 277, 279, 503, 531], "ihfft": [6, 134], "ii": [24, 116, 440], "iinfo": 434, "iinfo_object": 183, "ij": [116, 117, 260], "ijk": 116, "il": 117, "il1": 518, "il2": 518, "illustr": 216, "ilm": 116, "im": [226, 401], "imag": [6, 10, 21, 40, 111, 468, 469, 476, 546], "imaginari": [21, 40, 111, 140, 158, 159, 184, 190, 191, 198, 199, 214, 215, 217, 222, 257, 263, 268, 361, 468, 469, 496, 526], "implement": [3, 4, 6, 47, 129, 161], "impli": [114, 466], "implicit": 116, "import": [0, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 355, 357, 360, 361, 362, 364, 369, 371, 375, 380, 381, 382, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 442, 451, 455, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "improv": 116, "in1d": 6, "in_array1": 121, "includ": [4, 10, 17, 22, 23, 26, 39, 43, 44, 45, 46, 47, 48, 59, 84, 94, 97, 98, 102, 105, 108, 116, 117, 128, 167, 168, 170, 171, 176, 177, 191, 199, 227, 239, 251, 252, 258, 259, 273, 274, 275, 277, 279, 417, 461, 471, 492, 503, 530, 531], "include_initi": [94, 97, 98], "inclus": [417, 445, 448, 487], "increas": [108, 114, 124, 135, 140, 176, 402, 476, 530], "ind": [36, 108, 234, 412, 413, 518, 519, 522, 523], "independ": 211, "index": [4, 23, 34, 35, 36, 37, 76, 111, 114, 117, 127, 130, 136, 144, 151, 161, 185, 187, 193, 202, 260, 269, 270, 348, 360, 362, 385, 393, 396, 412, 413, 466, 467, 475, 476, 486, 487, 498, 507, 508, 518, 522, 526, 527, 536, 539, 549], "index_arrai": [34, 35, 36], "indic": [6, 10, 24, 34, 35, 36, 37, 42, 61, 94, 97, 98, 101, 103, 104, 108, 111, 112, 114, 116, 117, 126, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 151, 161, 164, 176, 178, 187, 234, 235, 253, 254, 261, 269, 270, 344, 345, 346, 370, 373, 379, 388, 393, 396, 404, 412, 413, 467, 486, 489, 490, 495, 498, 507, 508, 514, 518, 519, 522, 523, 526, 527, 533, 534, 536], "indices_or_sect": [42, 112, 178, 498, 534], "indirect": [36, 495], "individu": [393, 427], "inequ": 397, "inexact": [155, 268, 276, 278], "inf": [9, 14, 15, 18, 27, 28, 29, 32, 33, 43, 44, 45, 49, 54, 55, 85, 109, 189, 192, 194, 195, 196, 197, 210, 221, 225, 238, 241, 242, 244, 257, 263, 268, 269, 270, 273, 275, 278, 410, 497, 499, 524], "infer": [45, 94, 252, 471, 475], "infin": [14, 15, 17, 22, 27, 28, 29, 30, 31, 33, 45, 49, 50, 53, 55, 157, 192, 194, 195, 196, 197, 264, 268, 273, 275, 278, 472, 525, 549], "infinit": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 210, 225, 492], "infj": [30, 31, 50, 53], "info": 6, "inform": [0, 46, 48, 111, 114, 134, 140, 142, 148, 358, 474, 546, 549], "initi": [19, 20, 94, 97, 98, 111, 118, 166, 256, 262, 273, 275, 276, 278, 365, 367, 372, 386, 409, 417, 505], "inner": [6, 24, 93, 116, 117, 220, 224, 254, 401], "innermost": [213, 221, 236, 255], "input": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 77, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 220, 221, 223, 225, 226, 228, 229, 231, 232, 233, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 360, 369, 392, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 439, 445, 461, 466, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 524, 525, 526, 529, 530, 531, 532, 533, 534, 537, 538], "insert": [6, 23, 24, 25, 34, 35, 101, 106, 108, 111, 116, 124, 170, 176, 239, 251, 269, 270, 273, 275, 379, 413, 475, 486, 487, 549], "instal": 2, "instanc": [3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 134, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 182, 185, 239, 240, 251, 253, 254, 261, 347, 352, 393, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 533, 537, 538], "instead": [37, 52, 106, 110, 111, 116, 124, 156, 170, 176, 177, 185, 193, 224, 239, 246, 251, 256, 262, 347, 396, 409, 467, 476, 505, 546], "instruct": 4, "insuffici": 60, "int": [9, 17, 22, 23, 24, 25, 26, 34, 35, 36, 38, 39, 42, 47, 59, 60, 61, 70, 71, 79, 80, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 111, 112, 114, 118, 119, 120, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 162, 163, 164, 165, 166, 167, 168, 170, 172, 176, 177, 178, 182, 183, 185, 187, 211, 213, 219, 222, 225, 233, 234, 235, 236, 237, 238, 239, 251, 252, 253, 256, 258, 259, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 362, 369, 381, 390, 392, 393, 399, 400, 402, 403, 404, 409, 412, 413, 417, 445, 448, 467, 471, 473, 475, 476, 480, 481, 482, 483, 494, 495, 498, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 526, 527, 528, 529, 530, 531, 533, 534, 537, 538, 546], "int16": 114, "int32": [0, 9, 47, 73, 114, 118, 119, 127, 162, 165, 167, 168, 182, 240, 276, 278, 399, 400, 417, 419, 427, 429, 434, 436, 442, 445, 461, 477, 505, 516, 537, 538], "int64": [0, 9, 73, 114, 276, 278, 477], "int8": [114, 409], "int_": 9, "int_0": 515, "int_t": 515, "intc": 9, "integ": [26, 38, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 94, 95, 96, 97, 98, 108, 111, 112, 114, 149, 152, 155, 156, 157, 161, 169, 176, 178, 181, 183, 188, 202, 204, 205, 206, 222, 225, 233, 234, 236, 238, 252, 256, 258, 262, 264, 271, 272, 273, 274, 275, 276, 277, 278, 279, 382, 390, 407, 408, 409, 412, 417, 445, 448, 453, 467, 471, 472, 473, 475, 478, 479, 480, 482, 483, 486, 487, 488, 498, 500, 503, 505, 507, 511, 513, 525, 526, 527, 529, 531, 534, 546], "integer_lik": [233, 511], "integr": [3, 4, 59, 94, 96, 98, 155, 176, 252, 258, 259, 265, 274, 277, 279, 407, 408, 471, 503, 505, 515, 531], "intel": [3, 116], "intend": [111, 390], "intent": 155, "interchang": [111, 266, 387, 506], "interfac": [0, 162], "interior": 172, "intermedi": [95, 97, 116, 117], "intern": [36, 417, 495], "interp": 6, "interpol": [140, 476, 492], "interpret": [2, 43, 44, 45, 51, 71, 84, 111, 114, 134, 140, 142, 162, 202, 253, 362, 396, 412, 546], "intersect1d": 6, "interv": [10, 14, 15, 26, 27, 28, 29, 31, 49, 53, 108, 124, 170, 239, 251, 417, 445, 447, 449, 450, 452, 460, 461, 506], "intp": [276, 278], "intrins": 546, "introduc": 480, "introduct": 10, "introselect": [111, 371, 403], "inv": [6, 210, 227], "invers": [10, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 205, 218, 227, 234, 235, 243, 463, 491, 493, 509, 510, 526], "invert": [6, 63, 65, 218, 227, 234], "invok": 546, "involv": 234, "io": [161, 240], "irfft": [6, 131, 134, 139, 141, 142, 143, 145], "irfft2": [6, 140, 142, 144], "irfftn": [6, 140, 141, 146], "irrespect": 36, "is_busdai": 6, "isalignedstruct": 114, "isbuiltin": 114, "isclos": [6, 18], "iscomplex": [6, 191, 198], "iscomplexobj": [6, 190, 199], "isdtyp": 6, "isfinit": [6, 194, 195, 196, 197, 268, 273, 275, 278], "isfortran": 6, "isin": 6, "isinf": [6, 192, 195, 196, 197, 268], "isn": 114, "isnan": [6, 192, 194, 196, 197, 268, 271, 272, 273, 275, 276, 278], "isnat": [6, 195], "isneginf": [6, 192, 194, 195, 197, 268], "isposinf": [6, 192, 194, 195, 196, 268], "isreal": [6, 190, 199], "isrealobj": [6, 191, 198], "isscalar": 6, "issu": 136, "issubdtyp": 6, "item": [6, 37, 111, 162, 163, 165, 526, 539], "item_dtyp": 114, "item_hasobject": 114, "item_is_point": 114, "items": [72, 111, 114], "iter": [6, 43, 44, 45, 111, 117, 150, 162, 163, 165, 166, 359, 360, 393, 413, 466, 476, 508, 528, 549], "its": [4, 6, 10, 12, 13, 17, 22, 25, 36, 59, 102, 111, 134, 140, 142, 148, 176, 177, 182, 214, 215, 216, 217, 224, 227, 235, 258, 274, 277, 279, 390, 404, 454, 466, 471, 475, 495, 503, 514, 515, 516, 531, 546], "itself": [52, 111, 114, 205, 268, 347, 546], "iu": 253, "iu1": [253, 522], "iu2": 522, "ix_": 6, "ixgrid": 202, "j": [39, 81, 82, 111, 116, 130, 132, 134, 135, 136, 137, 139, 140, 143, 144, 146, 155, 164, 184, 185, 203, 209, 214, 215, 225, 226, 233, 236, 244, 254, 268, 390, 401, 410, 413, 468, 496, 500, 508, 511], "j1": 203, "jame": 10, "ji": 116, "jil": 116, "jj": 24, "jk": [116, 117], "jl": 117, "john": [10, 225], "join": [78, 79, 80, 113, 179, 187, 484, 498, 502, 528, 535, 549], "jump": [99, 415], "just": [72, 78, 106, 114, 130, 136, 141, 143, 144, 187], "k": [10, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 102, 105, 109, 111, 116, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 168, 169, 173, 174, 175, 180, 181, 184, 188, 192, 194, 195, 203, 204, 205, 206, 207, 208, 219, 228, 230, 231, 232, 233, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 257, 263, 264, 267, 287, 347, 352, 394, 395, 397, 400, 406, 407, 408, 410, 415, 416, 466, 468, 470, 472, 478, 479, 482, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 511, 516, 517, 518, 519, 521, 522, 523, 524, 525, 529, 533, 536, 538, 553], "kaiser": 6, "kappa": 462, "keep": [51, 52, 111, 347, 526], "keepdim": [17, 19, 20, 22, 25, 34, 35, 59, 91, 111, 221, 225, 238, 252, 256, 258, 259, 262, 269, 270, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 365, 366, 367, 372, 384, 386, 391, 409, 411, 413, 471, 503, 505, 508, 531], "kei": [3, 36, 111, 114, 150, 292, 337, 495], "kernel": 492, "key2": 114, "keyword": [10, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 84, 85, 89, 90, 93, 99, 100, 102, 103, 105, 109, 111, 118, 119, 122, 123, 125, 127, 128, 131, 145, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 180, 182, 185, 188, 204, 205, 206, 211, 213, 220, 226, 236, 237, 240, 242, 243, 244, 245, 246, 253, 254, 257, 261, 263, 264, 265, 267, 268, 352, 394, 395, 398, 399, 400, 402, 406, 407, 408, 410, 415, 416, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 470, 472, 475, 478, 479, 485, 489, 490, 491, 493, 497, 504, 509, 510, 516, 518, 522, 524, 525, 530, 533, 536, 537, 538, 546], "ki": 116, "kind": [36, 52, 73, 79, 80, 86, 94, 111, 114, 116, 148, 179, 181, 224, 252, 254, 346, 347, 371, 382, 403, 471, 475, 484, 495, 502, 533, 535, 549], "kk": 24, "kl": [10, 116, 117], "known": [10, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 163, 455], "kron": 6, "kroneck": 203, "kth": [111, 371, 403], "kwarg": [12, 13, 14, 15, 16, 24, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 85, 89, 90, 99, 100, 109, 111, 120, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 164, 169, 173, 174, 175, 180, 188, 192, 194, 195, 204, 205, 206, 207, 208, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 263, 264, 265, 267, 318, 349, 394, 395, 397, 402, 406, 407, 408, 410, 415, 416, 470, 472, 478, 479, 485, 489, 490, 491, 493, 497, 499, 500, 504, 509, 510, 524, 525], "l": [10, 42, 114, 209, 215, 217, 236], "la": [214, 216, 217], "label": 116, "laid": 48, "lam": 442, "lambda": 164, "lanczo": 492, "lapack": [214, 216], "laplac": 6, "laptop": 4, "larg": [10, 99, 114, 176, 227, 268, 415, 529, 553], "larger": [116, 129, 130, 132, 135, 136, 137, 139, 141, 142, 143, 144, 146, 148, 476, 513, 529], "largest": [10, 117, 143, 148, 156, 183, 219, 225, 264, 268, 472], "largest_singular_valu": 227, "last": [17, 22, 23, 24, 36, 61, 72, 93, 106, 107, 111, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 152, 170, 172, 186, 193, 213, 224, 232, 233, 236, 239, 251, 254, 360, 364, 393, 402, 409, 466, 475, 480, 486, 495, 501, 505, 511, 528, 529, 533], "later": [402, 553], "latest": [4, 161], "latter": [14, 27, 29, 30, 31, 33, 49, 50, 53, 55, 158, 159, 257, 263, 413, 508], "layout": [4, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 111, 116, 118, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 167, 168, 169, 173, 174, 175, 180, 181, 184, 188, 192, 194, 195, 204, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 263, 264, 267, 352, 358, 394, 395, 397, 399, 400, 406, 407, 408, 410, 415, 416, 466, 468, 470, 472, 474, 475, 478, 479, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 524, 525, 533, 536, 537, 538, 539], "lcm": [6, 169], "ldexp": 6, "ldot": 10, "lead": [135, 136, 137, 271, 272, 520], "learn": [3, 4, 246], "least": [56, 57, 58, 59, 60, 104, 113, 114, 117, 124, 147, 153, 158, 159, 163, 191, 219, 228, 257, 263, 484, 535], "left": [10, 31, 34, 35, 38, 53, 64, 67, 91, 106, 108, 111, 153, 154, 206, 216, 221, 225, 238, 256, 262, 269, 270, 276, 278, 379, 409, 460, 478, 483, 486, 505, 515, 530], "left_shift": [6, 64, 67, 478], "leg": [180, 471], "legaci": 453, "legal": 187, "len": [101, 111, 114, 132, 133, 134, 137, 139, 140, 141, 142, 146, 185, 219, 256, 260, 261, 262, 310, 488, 530], "length": [26, 42, 59, 60, 61, 95, 96, 97, 98, 107, 120, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 166, 170, 172, 176, 179, 214, 231, 232, 233, 251, 256, 259, 260, 262, 271, 272, 402, 413, 420, 475, 477, 484, 486, 487, 488, 501, 508, 511, 512, 535], "less": [6, 25, 95, 96, 97, 98, 111, 120, 173, 174, 176, 177, 208, 219, 227, 236, 271, 272, 276, 278, 364, 397, 409, 487, 489, 505, 513], "less_equ": [6, 120, 173, 174, 207, 397], "let": [237, 419, 475, 533], "level": [539, 546], "level_zero": [26, 39, 43, 44, 45, 46, 48, 84, 102, 105, 118, 119, 127, 131, 145, 162, 163, 164, 165, 167, 168, 170, 182, 239, 240, 251, 261, 398, 399, 400, 516, 530, 537, 538], "lexicograph": 526, "lexsort": [6, 36, 495], "li": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 480, 481], "lib": 72, "librari": [3, 4, 546], "light": 10, "like": [26, 39, 43, 44, 46, 48, 52, 56, 57, 58, 78, 101, 111, 113, 116, 118, 127, 142, 162, 163, 164, 165, 166, 167, 170, 182, 187, 239, 240, 251, 253, 347, 360, 369, 392, 399, 413, 417, 461, 466, 474, 475, 508, 537, 549], "likewis": [62, 66, 68], "limit": [3, 4, 12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 81, 82, 84, 85, 88, 89, 90, 92, 99, 100, 109, 111, 114, 118, 119, 120, 121, 122, 123, 125, 127, 128, 148, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 180, 182, 183, 188, 192, 194, 195, 204, 205, 206, 207, 208, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 347, 349, 394, 395, 397, 399, 400, 403, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 442, 443, 445, 448, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 470, 472, 474, 478, 479, 485, 489, 490, 491, 492, 493, 495, 497, 499, 500, 503, 504, 505, 509, 510, 524, 525, 531, 533, 537, 538], "linalg": [6, 93, 106, 110, 116, 117, 254, 255, 401, 500, 511, 513, 532, 533], "line": [219, 240], "linear": [10, 83, 88, 219, 230, 251, 402, 539, 549], "linear_ramp": 402, "linspac": [0, 6, 26, 121, 170, 226, 251, 260, 401, 492, 515, 529], "linux": 4, "list": [3, 6, 9, 23, 39, 42, 43, 44, 45, 46, 48, 56, 57, 58, 69, 79, 80, 84, 102, 105, 111, 112, 113, 114, 116, 117, 133, 138, 147, 167, 168, 170, 172, 178, 179, 191, 199, 233, 239, 240, 251, 254, 259, 390, 404, 467, 473, 474, 476, 477, 484, 487, 498, 502, 511, 514, 527, 528, 530, 533, 534, 535, 536], "list_pickl": 114, "littl": 114, "ln": 251, "load": [6, 163, 240], "loadtxt": [6, 163], "loan": 225, "loc": [417, 428, 430, 431, 439, 463], "local": 4, "locat": [0, 4, 171, 196, 197, 253, 401, 428, 430, 486, 533], "log": [6, 125, 170, 229, 239, 242, 243, 244, 245, 251, 252, 432], "log10": [6, 241, 243, 244], "log1p": [6, 123, 125, 241, 242, 244], "log2": [6, 241, 242, 243, 246], "log_bas": 251, "logabsdet": 229, "logaddexp": [6, 94, 246, 252], "logaddexp2": [6, 245, 252], "logarithm": [94, 212, 229, 239, 241, 242, 243, 244, 245, 246, 252, 433, 549], "logic": [17, 22, 247, 248, 249, 250, 539, 549], "logical_and": [6, 62, 248, 249, 250], "logical_not": [6, 63, 65, 188, 247, 249, 250], "logical_or": [6, 66, 247, 248, 250], "logical_xor": [6, 68, 247, 248, 249], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 170, 239], "logsumexp": [94, 245, 246], "lomax": 440, "long": [114, 222], "longer": [134, 140, 553], "look": [395, 508], "loop": [24, 116], "loos": 115, "lorentz": 455, "lose": [134, 140, 142], "low": [72, 130, 132, 136, 137, 417, 445, 448, 461, 546], "lower": [102, 127, 176, 177, 201, 209, 215, 217, 253, 516, 517, 518, 519, 522, 523], "lowest": [59, 116, 117, 169, 204, 417, 445], "lstsq": 6, "m": [4, 10, 24, 92, 113, 114, 116, 127, 130, 132, 134, 136, 137, 140, 141, 142, 146, 152, 153, 154, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 236, 253, 254, 255, 259, 413, 482, 487, 507, 508, 516, 517, 518, 519, 521, 522, 523], "machin": [4, 10, 148, 183, 219, 246, 469], "machineri": 114, "made": [39, 44, 56, 114, 161, 203, 268, 475, 498], "magnitud": [12, 13, 85, 128, 410], "mai": [17, 21, 22, 52, 73, 77, 79, 80, 86, 96, 98, 111, 114, 116, 117, 124, 130, 132, 134, 135, 136, 137, 139, 140, 143, 146, 172, 177, 179, 210, 214, 215, 219, 221, 225, 228, 246, 251, 254, 268, 274, 277, 279, 347, 380, 413, 466, 469, 476, 484, 492, 502, 512, 533, 535, 546], "main": [102, 103, 104, 105, 106, 127, 147, 182, 213, 217, 236, 253, 513, 516, 517, 518, 521, 522], "mainstai": 10, "maintain": [36, 108, 111, 114, 176, 379, 486, 495, 508], "major": [4, 43, 44, 45, 46, 48, 51, 52, 111, 347, 396, 466, 467, 474, 527], "make": [46, 48, 78, 114, 226, 260, 401, 474, 492, 526, 529], "manag": 0, "mandelbrot": [226, 401], "mani": [10, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 466, 546], "manipul": [3, 103, 539, 549], "mantissa": 205, "manual": [4, 114, 512], "mappingproxi": 114, "mask": [101, 114, 202, 253, 396, 405, 414, 507, 518, 522], "mask_func": 253, "mask_indic": [6, 518, 522], "mass": 176, "match": [12, 13, 44, 79, 80, 86, 91, 94, 107, 114, 161, 163, 172, 186, 233, 252, 254, 412, 413, 471, 502, 507, 508, 511, 536], "math": [10, 121], "mathbf": [237, 533], "mathemat": [225, 539, 549], "matlab": 160, "matmul": [6, 110, 228, 231, 532], "matplotlib": [260, 455], "matric": [147, 164, 185, 202, 212, 213, 214, 216, 218, 221, 223, 225, 227, 228, 229, 231, 232, 236, 254, 255, 260, 549], "matrix": [87, 92, 110, 111, 116, 186, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 236, 254, 255, 260, 364, 500, 521, 530, 532, 533, 539, 549], "matrix_norm": [6, 225], "matrix_pow": [6, 500], "matrix_rank": 6, "matrix_transpos": 6, "matter": 526, "max": [0, 6, 19, 34, 61, 77, 111, 148, 158, 159, 176, 177, 183, 219, 223, 225, 227, 257, 262, 263, 273, 349, 434, 508, 512, 529, 546], "max_arg": 0, "max_val": 0, "maxima": [158, 256, 257], "maximum": [0, 6, 19, 34, 35, 77, 111, 117, 158, 159, 256, 262, 263, 269, 270, 273, 275, 344, 365, 402, 407, 408, 411, 413, 529], "may_share_memori": 6, "md": 225, "mean": [3, 6, 10, 26, 39, 41, 43, 44, 45, 46, 47, 48, 52, 59, 84, 91, 102, 103, 105, 111, 116, 118, 119, 127, 130, 131, 132, 136, 137, 141, 142, 143, 144, 145, 146, 162, 163, 164, 165, 166, 167, 168, 172, 182, 185, 210, 225, 240, 253, 259, 261, 274, 277, 279, 347, 352, 360, 390, 398, 399, 400, 402, 417, 430, 432, 435, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 462, 463, 466, 475, 482, 503, 505, 516, 518, 522, 530, 531, 537, 538, 546], "meaningfulli": 546, "meant": 546, "median": [0, 6, 402], "meet": [39, 487], "memori": [3, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 111, 114, 116, 118, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 161, 167, 168, 169, 173, 174, 175, 180, 181, 184, 188, 192, 193, 194, 195, 204, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 259, 260, 263, 264, 267, 352, 358, 385, 394, 395, 397, 399, 400, 406, 407, 408, 410, 415, 416, 466, 468, 470, 472, 474, 475, 478, 479, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 524, 525, 533, 536, 537, 538, 539, 553], "mergesort": [36, 495], "mersenn": 417, "mesh": 202, "meshgrid": [6, 164, 185, 202, 261, 398], "met": [110, 224], "meta": 114, "metadata": 114, "method": [10, 17, 19, 20, 22, 36, 52, 84, 110, 111, 114, 150, 161, 163, 223, 227, 231, 255, 347, 352, 362, 369, 377, 380, 392, 393, 396, 404, 417, 475, 488, 505, 507, 514, 539], "mgrid": [130, 132, 141, 144, 185, 202], "mgridclass": 261, "middl": [10, 106, 130, 132, 136, 137, 216, 259], "might": [116, 135, 136, 137], "min": [6, 20, 35, 77, 111, 148, 158, 159, 176, 177, 183, 210, 213, 219, 225, 228, 231, 232, 256, 257, 263, 275, 349, 508, 546], "min_scalar_typ": 6, "minima": [159, 262, 263], "minimum": [6, 20, 34, 35, 39, 61, 77, 111, 155, 158, 159, 256, 257, 262, 269, 270, 273, 275, 345, 367, 402, 407, 408, 411], "minlength": 61, "mintypecod": 6, "minu": [60, 125, 157, 264, 472, 525], "mirror": 402, "miscellan": [2, 539, 549], "mise": 462, "miss": 240, "mix": [220, 254], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 126, 472, 529], "mode": [76, 83, 88, 111, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 228, 348, 373, 388, 402, 412, 413, 455, 460, 467, 486, 507, 508], "model": [4, 419], "modf": 6, "modifi": [84, 106, 147, 181, 259, 402, 454], "modul": [129, 171, 539], "modulu": [160, 264, 472], "moment": 87, "monoton": [108, 176], "moor": 227, "more": [0, 3, 4, 36, 39, 56, 57, 58, 97, 98, 113, 114, 116, 117, 125, 141, 144, 153, 154, 161, 163, 177, 179, 185, 205, 211, 213, 219, 220, 222, 223, 224, 226, 227, 231, 233, 236, 237, 243, 245, 476, 482, 502, 511, 515, 526, 529, 546, 553], "most": [3, 4, 23, 61, 106, 107, 114, 117, 129, 135, 268, 417, 453, 476, 501], "move": [111, 266, 371, 404, 480, 481, 514, 526], "moveaxi": [6, 404, 480, 481, 514, 528], "msg": 0, "mt": [111, 255], "mt19937": 453, "mu": [428, 432, 439, 462], "multi": [2, 111, 185, 202, 211, 261, 385, 398, 467, 526, 539], "multi_dot": [6, 110, 116, 117], "multi_index": 467, "multiarrai": 114, "multidimension": [176, 186, 393, 536], "multinomi": 6, "multipl": [4, 10, 24, 25, 34, 35, 36, 42, 59, 79, 80, 87, 93, 94, 112, 114, 116, 130, 132, 136, 137, 141, 142, 144, 146, 169, 177, 178, 179, 187, 202, 204, 211, 214, 215, 216, 217, 218, 224, 252, 256, 258, 262, 273, 274, 275, 277, 279, 466, 471, 484, 487, 495, 498, 502, 503, 515, 526, 528, 531, 534, 535, 539], "multipli": [6, 95, 116, 205, 216, 276, 409], "multivalu": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "multivari": 435, "multivariate_norm": 6, "must": [12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 107, 109, 110, 113, 122, 123, 124, 125, 128, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 153, 155, 156, 157, 158, 159, 160, 163, 166, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 188, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 209, 211, 213, 224, 225, 226, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 257, 258, 259, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 394, 395, 397, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 468, 470, 471, 472, 473, 478, 479, 480, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 497, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 524, 525, 531, 533, 535, 536], "mx": 219, "mxn": [213, 221, 236, 255], "my_func": 24, "n": [0, 4, 10, 37, 42, 60, 96, 98, 103, 104, 107, 108, 111, 112, 113, 114, 115, 124, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 164, 172, 178, 182, 202, 213, 219, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 253, 254, 255, 259, 260, 277, 279, 390, 393, 402, 404, 405, 412, 413, 419, 434, 436, 446, 456, 486, 488, 498, 500, 503, 506, 507, 508, 511, 514, 515, 516, 517, 518, 519, 521, 522, 523, 530, 531, 533, 534, 546], "n1": 260, "n2": [240, 260], "n3": 260, "naiv": 117, "name": [0, 6, 24, 114, 227, 492], "namedtupl": 228, "nan": [9, 14, 15, 17, 18, 22, 27, 28, 29, 30, 31, 33, 34, 35, 40, 43, 44, 45, 49, 50, 53, 55, 109, 155, 158, 159, 189, 192, 194, 195, 196, 197, 242, 256, 257, 258, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 407, 408, 409, 497, 499, 503, 524, 526, 531, 549], "nan_to_num": 6, "nanargmax": [6, 34, 270], "nanargmin": [6, 35, 269], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 158, 159, 256, 257, 263, 275], "nanmean": [6, 258, 277, 279, 503, 531], "nanmedian": 6, "nanmin": [6, 158, 159, 257, 262, 263, 273], "nanpercentil": 6, "nanprod": [6, 409], "nanquantil": 6, "nanstd": [6, 258, 274, 279, 503, 531], "nansum": 6, "nanvar": [6, 258, 274, 277, 503, 531], "nat": 195, "nativ": 114, "native_cod": 114, "native_dt": 114, "natur": [229, 241, 242, 243, 244, 245, 246, 252], "nbad": 429, "nbyte": 111, "nd": [111, 362], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 550], "ndenumer": 393, "ndim": [6, 37, 39, 46, 48, 56, 57, 58, 92, 103, 106, 111, 114, 147, 203, 225, 231, 232, 255, 256, 262, 399, 404, 512, 514, 537], "ndindex": 24, "ndmin": 39, "ne": 492, "nearest": [38, 75, 149, 156, 157, 264, 472, 479, 483, 497, 525], "necessari": [4, 17, 22, 26, 39, 43, 44, 46, 48, 56, 86, 95, 96, 97, 98, 115, 126, 134, 140, 142, 147, 161, 170, 239, 251, 254, 258, 259, 271, 272, 274, 276, 277, 278, 279, 409, 476, 503, 505, 531, 553], "necessarili": [214, 216], "need": [4, 39, 44, 61, 106, 116, 171, 259, 474, 507, 508, 536], "needs_init": 114, "needs_pyapi": 114, "neg": [6, 10, 17, 22, 38, 60, 61, 85, 105, 106, 108, 111, 124, 127, 130, 132, 135, 136, 137, 140, 143, 152, 155, 166, 172, 176, 192, 194, 195, 196, 197, 222, 233, 268, 273, 275, 277, 278, 279, 380, 406, 407, 408, 409, 412, 413, 436, 467, 483, 503, 505, 507, 508, 511, 513, 531], "negat": 487, "negative_binomi": 6, "neginf": 268, "neither": [110, 158, 159, 220, 231, 254, 273, 275], "nest": [47, 113, 179, 484, 502, 528, 535], "nested_it": 6, "net": [158, 159, 257, 263], "never": 529, "new": [23, 24, 39, 52, 69, 70, 71, 78, 79, 80, 91, 94, 95, 96, 97, 98, 101, 106, 111, 113, 114, 115, 118, 119, 124, 158, 159, 161, 165, 166, 167, 168, 170, 179, 182, 187, 239, 251, 252, 253, 257, 259, 263, 266, 271, 272, 276, 278, 347, 377, 380, 390, 399, 400, 404, 471, 475, 476, 480, 481, 484, 498, 502, 512, 514, 528, 535, 536, 537, 538, 546], "new_dtyp": 114, "new_ord": 114, "new_shap": 476, "newaxi": 124, "newbyteord": 114, "newli": [12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 49, 50, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 111, 118, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 167, 168, 169, 173, 174, 175, 180, 181, 184, 188, 192, 194, 195, 204, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 263, 264, 267, 347, 352, 394, 395, 397, 399, 400, 406, 407, 408, 410, 415, 416, 468, 470, 472, 478, 479, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 524, 525, 533, 537, 538], "newshap": 475, "next": [4, 148, 395], "nextaft": 6, "ngood": 429, "ni": [24, 260, 413, 507, 508], "nine": 419, "ninja": 4, "nj": [24, 413, 507, 508], "njm": 116, "nk": [24, 413, 507, 508], "nl": 10, "nlk": 116, "nn": 260, "noisi": 219, "non": [26, 37, 39, 43, 44, 45, 46, 47, 48, 52, 59, 61, 84, 91, 102, 103, 105, 108, 111, 118, 119, 126, 127, 131, 140, 143, 145, 151, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 176, 177, 182, 185, 190, 192, 202, 211, 233, 239, 240, 251, 253, 261, 268, 269, 270, 273, 275, 277, 279, 347, 352, 370, 380, 396, 398, 399, 400, 405, 407, 408, 417, 437, 438, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 503, 511, 516, 518, 522, 530, 531, 536, 537, 538], "nonc": [437, 438], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 187, 188, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 210, 219, 221, 223, 224, 225, 227, 231, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 362, 365, 366, 367, 371, 372, 373, 376, 377, 378, 379, 382, 383, 384, 386, 388, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 513, 514, 515, 516, 518, 522, 524, 525, 526, 527, 529, 530, 531, 533, 535, 536, 537, 538, 546], "nonneg": 61, "nonzero": [6, 37, 91, 111, 151, 202, 536, 546], "nor": [158, 159, 216, 273, 275], "norm": [6, 10, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 210, 216, 219, 221, 238, 549], "normal": [6, 92, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 176, 214, 215, 228, 237, 246, 417, 432, 435, 446, 458, 467, 492, 533], "not_equ": [6, 120, 173, 174, 207, 208], "note": [12, 13, 14, 15, 16, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 51, 53, 54, 55, 60, 63, 64, 65, 67, 79, 80, 84, 93, 99, 101, 106, 108, 109, 111, 114, 116, 117, 124, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 156, 158, 159, 162, 163, 164, 165, 166, 176, 185, 187, 188, 192, 205, 206, 211, 213, 214, 221, 225, 233, 238, 240, 251, 259, 264, 267, 277, 278, 279, 352, 377, 396, 402, 404, 405, 407, 408, 412, 415, 420, 422, 423, 433, 438, 466, 472, 474, 475, 476, 478, 482, 492, 495, 497, 503, 504, 506, 511, 512, 514, 515, 524, 526, 528, 529, 531, 532], "notic": [114, 140, 143], "notimplementederror": [12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 111, 118, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 180, 182, 188, 192, 194, 195, 204, 205, 206, 207, 208, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 256, 257, 258, 262, 263, 264, 267, 273, 274, 275, 277, 278, 279, 347, 394, 395, 397, 399, 400, 406, 407, 408, 409, 410, 415, 416, 466, 470, 472, 474, 478, 479, 485, 489, 490, 491, 493, 495, 497, 499, 500, 503, 504, 505, 509, 510, 524, 525, 531, 533, 537, 538], "now": [17, 22, 46, 48, 87, 103, 216, 219, 253], "np": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 355, 357, 360, 361, 362, 364, 369, 371, 375, 380, 381, 382, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 415, 416, 442, 451, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "nr": 10, "nsamp": 429, "nsampl": 429, "nth": [233, 511], "nuc": [221, 225, 238], "nuclear": 225, "num": [0, 60, 114, 121, 170, 239, 251, 515, 529], "number": [10, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 45, 49, 50, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 91, 103, 105, 107, 108, 111, 114, 115, 116, 117, 124, 127, 128, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 146, 148, 149, 157, 162, 163, 165, 166, 170, 172, 176, 177, 182, 183, 188, 189, 190, 191, 192, 199, 202, 205, 206, 210, 218, 223, 225, 228, 229, 231, 234, 235, 239, 246, 251, 264, 268, 271, 272, 273, 275, 276, 277, 278, 279, 369, 378, 381, 392, 396, 402, 404, 405, 409, 410, 417, 419, 429, 453, 472, 473, 476, 478, 479, 480, 481, 482, 483, 490, 494, 497, 503, 506, 512, 514, 516, 525, 526, 530, 531, 546, 549], "number_of_dimens": [111, 369, 392], "numer": [3, 4, 10, 12, 13, 14, 15, 16, 18, 27, 28, 29, 30, 31, 33, 38, 49, 50, 53, 55, 81, 82, 85, 89, 90, 109, 114, 120, 122, 125, 135, 136, 137, 140, 142, 157, 158, 159, 173, 174, 184, 189, 192, 194, 195, 207, 208, 225, 226, 241, 242, 243, 244, 257, 263, 267, 394, 397, 406, 407, 408, 410, 468, 479, 483, 489, 490, 491, 493, 504, 509, 510, 524, 549], "numpi": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 356, 357, 360, 361, 362, 369, 375, 380, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 546, 549], "nvidia": 4, "nx": 260, "ny": 260, "nyquist": [10, 130, 132, 133, 134, 135, 136, 137, 140, 142, 143, 145], "o": [4, 17, 22, 114], "obj": [34, 35, 36, 101, 114, 161, 176, 187], "object": [26, 39, 43, 44, 45, 46, 47, 48, 51, 52, 84, 102, 103, 105, 111, 114, 118, 119, 124, 127, 131, 145, 148, 150, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 183, 185, 187, 210, 215, 225, 233, 239, 240, 251, 253, 261, 347, 352, 362, 377, 393, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 475, 511, 516, 518, 522, 530, 537, 538, 546], "observ": 87, "obsolet": 193, "obtain": [10, 106, 209, 213, 236, 396], "obviou": 10, "occupi": [148, 183], "occur": [23, 52, 73, 79, 80, 86, 101, 111, 116, 179, 187, 214, 254, 268, 347, 484, 502, 533, 535], "occurr": [34, 35, 61, 108, 176, 269, 270, 526], "odd": [10, 131, 134, 138, 139, 140, 142, 143, 145, 259, 402], "off": [26, 134, 139, 213, 214, 219, 236], "offset": [106, 111, 114, 162, 163, 213, 236, 253, 355, 389, 513, 518, 519, 522, 523], "often": [101, 175], "ogrid": [185, 202, 536], "ogridclass": 398, "oil": [419, 436], "old": 476, "omit": [417, 445], "onc": 218, "one": [3, 4, 25, 34, 35, 36, 39, 41, 47, 56, 57, 58, 59, 83, 86, 88, 91, 97, 98, 101, 111, 114, 118, 120, 124, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 153, 154, 155, 158, 159, 163, 167, 172, 177, 179, 182, 185, 187, 191, 202, 216, 221, 222, 225, 233, 238, 241, 242, 244, 253, 256, 257, 260, 261, 262, 263, 269, 270, 276, 278, 352, 360, 362, 363, 396, 398, 400, 405, 409, 436, 467, 481, 487, 495, 501, 502, 505, 507, 511, 515, 518, 519, 522, 523, 526, 537, 546], "oneapi": [4, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "onedpl": 4, "onemkl": [4, 214, 216], "ones": [6, 39, 46, 48, 59, 94, 97, 98, 101, 109, 111, 116, 118, 119, 120, 124, 127, 146, 167, 168, 180, 182, 203, 219, 223, 226, 252, 253, 271, 276, 400, 401, 404, 409, 471, 477, 481, 514, 516, 524, 537, 538], "ones_lik": [6, 39, 119, 168, 399, 538], "onli": [10, 17, 22, 26, 34, 35, 36, 39, 42, 43, 44, 46, 48, 52, 56, 59, 60, 84, 88, 92, 97, 98, 111, 114, 116, 117, 118, 119, 127, 133, 143, 147, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 176, 177, 185, 193, 209, 215, 217, 220, 223, 225, 226, 227, 228, 231, 239, 240, 251, 253, 254, 256, 258, 262, 268, 269, 270, 273, 274, 275, 276, 277, 279, 347, 362, 380, 382, 399, 400, 403, 405, 406, 409, 417, 439, 445, 461, 466, 474, 475, 492, 495, 503, 505, 508, 522, 526, 529, 531, 533, 536, 537, 538, 546], "open": [163, 185, 202, 239, 398, 417, 447, 449, 450, 452, 461, 506], "opencl": [26, 39, 43, 44, 45, 46, 48, 84, 102, 105, 118, 119, 127, 131, 145, 162, 163, 164, 165, 167, 168, 170, 182, 239, 240, 251, 261, 398, 399, 400, 516, 530, 537, 538], "oper": [10, 16, 24, 62, 63, 64, 65, 66, 67, 68, 109, 114, 116, 117, 120, 124, 147, 157, 160, 173, 174, 188, 206, 207, 208, 209, 247, 249, 254, 256, 262, 264, 267, 268, 269, 270, 394, 397, 406, 407, 408, 412, 472, 478, 504, 512, 524, 526, 528, 529, 533, 539, 549], "operand": [116, 117, 233, 235, 401, 511], "opposit": [10, 114, 126, 134, 139, 405, 466], "optim": [4, 116, 117, 176, 177], "option": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 187, 188, 189, 192, 194, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 221, 223, 224, 225, 227, 228, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 360, 390, 394, 395, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 553], "ord": [221, 225, 238], "order": [10, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 106, 108, 109, 111, 114, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 135, 136, 137, 140, 142, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 169, 172, 173, 174, 175, 176, 180, 181, 184, 188, 192, 193, 194, 195, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 221, 225, 231, 233, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 260, 263, 264, 266, 267, 287, 346, 347, 352, 360, 371, 374, 377, 379, 382, 390, 394, 395, 396, 397, 399, 400, 403, 404, 406, 407, 408, 410, 415, 416, 466, 467, 468, 470, 472, 474, 475, 476, 478, 479, 482, 485, 486, 489, 490, 491, 492, 493, 495, 497, 499, 500, 504, 509, 510, 511, 514, 524, 525, 526, 527, 530, 533, 536, 537, 538, 549], "ordin": [219, 230], "ordinari": [140, 186, 209], "orient": [93, 413, 508], "origin": [25, 69, 106, 111, 134, 140, 142, 221, 225, 238, 260, 266, 276, 278, 475, 476, 480, 526], "ortho": [10, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146], "orthogon": [216, 228], "orthonorm": 228, "other": [41, 52, 69, 70, 71, 107, 111, 114, 135, 136, 137, 140, 142, 156, 164, 182, 214, 216, 224, 225, 266, 283, 284, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 347, 417, 461, 476, 481, 526, 533, 539, 549], "otherwis": [3, 12, 13, 14, 15, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 99, 100, 102, 107, 109, 111, 114, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 180, 181, 182, 186, 188, 192, 194, 195, 204, 205, 206, 207, 208, 219, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 347, 377, 394, 395, 397, 399, 400, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 478, 479, 485, 486, 489, 490, 491, 493, 495, 497, 499, 500, 501, 503, 504, 505, 509, 510, 513, 524, 525, 531, 533, 536, 537, 538], "otim": [233, 511], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 218, 220, 221, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 348, 349, 352, 353, 354, 360, 362, 365, 366, 367, 372, 378, 384, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 524, 525, 529, 530, 531, 532, 533, 535, 536, 537, 538], "outer": [6, 93, 106, 116, 117, 203], "output": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 180, 181, 182, 184, 185, 188, 189, 190, 192, 194, 195, 202, 204, 205, 206, 207, 208, 224, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 270, 271, 272, 274, 276, 277, 278, 279, 347, 352, 394, 395, 397, 398, 399, 400, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 472, 473, 475, 478, 479, 483, 485, 487, 489, 490, 491, 492, 493, 495, 497, 499, 500, 501, 503, 504, 505, 507, 509, 510, 512, 513, 516, 518, 522, 524, 525, 526, 529, 530, 531, 533, 536, 537, 538, 549, 553], "outsid": [176, 177], "over": [10, 17, 22, 24, 25, 59, 61, 94, 95, 96, 97, 98, 110, 111, 116, 117, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 152, 164, 170, 176, 177, 186, 211, 221, 225, 233, 237, 238, 239, 251, 252, 254, 256, 258, 260, 262, 271, 272, 273, 274, 275, 276, 277, 278, 279, 360, 393, 409, 413, 417, 444, 449, 460, 461, 466, 471, 476, 503, 505, 507, 508, 511, 515, 529, 531, 533, 549], "overal": [130, 132, 136, 137, 141, 142, 144, 146], "overflow": 155, "overlin": [237, 533], "overrid": [93, 119, 168, 400, 538], "overview": 2, "overwrite_input": 259, "p": [10, 210, 219, 222, 419, 422, 427, 433, 436, 529], "pack": [106, 466, 549], "packag": [0, 3], "packbit": 6, "pad": [6, 114, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 476], "pad_valu": 402, "pad_width": 402, "padder": 402, "padding_func": 402, "page": [3, 549], "pair": [10, 117, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 211, 214], "parallel": [1, 3, 4, 9, 539], "paramet": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 357, 360, 362, 377, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "parameter": [417, 439, 461], "parametr": 515, "pareto": 6, "pars": [163, 240], "part": [3, 10, 14, 15, 21, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 111, 140, 158, 159, 184, 190, 191, 198, 199, 214, 215, 217, 253, 257, 263, 265, 361, 375, 402, 468, 469, 496, 518, 522, 525, 526, 546], "partial": [36, 259, 495], "particular": [114, 224], "particularli": 116, "partit": [6, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 495, 516, 518, 522, 530, 537, 538, 546], "pass": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 114, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 177, 182, 185, 202, 219, 240, 253, 261, 268, 352, 377, 393, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 474, 516, 518, 519, 522, 523, 530, 533, 537, 538], "past": 72, "path": [4, 116, 117, 163, 240], "path_info": 117, "pathlib": 240, "pattern": 59, "pearson": 87, "penros": 227, "per": [116, 131, 145, 467], "percentil": [6, 259], "perf_count": 0, "perform": [17, 22, 44, 45, 61, 77, 107, 116, 130, 132, 135, 136, 137, 141, 142, 144, 146, 152, 209, 232, 409, 505], "perhap": 474, "period": [10, 529], "permit": 163, "permut": [6, 111, 116, 266, 390, 404, 514, 549], "permute_dim": [6, 514], "perpendicular": 93, "pg": 225, "phase": [10, 21, 529], "phase_deg": 529, "pi": [0, 9, 10, 14, 27, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 99, 100, 129, 415, 491, 492, 493, 509, 510, 515, 529, 553], "pickl": [163, 240], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 17, 18, 22, 23, 24, 38, 77, 79, 80, 95, 96, 97, 98, 101, 110, 111, 124, 126, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 161, 185, 187, 189, 254, 256, 258, 259, 262, 268, 271, 272, 274, 276, 277, 278, 279, 360, 380, 382, 390, 398, 402, 409, 412, 413, 454, 475, 476, 480, 483, 495, 502, 503, 505, 507, 513, 531, 546], "plane": 482, "platform": [95, 96, 97, 98, 114, 271, 272, 276, 278, 409, 505], "pleas": [0, 3, 42, 112, 116, 176, 178, 534, 546], "plot": 455, "plt": [260, 455], "plu": [241, 242, 244], "plugin": 4, "point": [10, 12, 13, 21, 26, 32, 38, 43, 44, 54, 59, 72, 85, 94, 114, 118, 119, 123, 127, 128, 129, 134, 135, 139, 140, 141, 142, 143, 148, 149, 155, 162, 163, 164, 166, 167, 168, 172, 181, 182, 184, 205, 219, 222, 239, 240, 245, 246, 252, 258, 259, 268, 274, 277, 279, 395, 399, 400, 417, 446, 458, 468, 470, 471, 483, 485, 486, 492, 503, 515, 516, 531, 537, 538, 549], "pointer": [72, 114], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 81, 82, 85, 89, 90, 99, 100, 109, 111, 120, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 169, 173, 174, 175, 180, 181, 184, 188, 192, 194, 195, 204, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 263, 264, 267, 394, 395, 397, 406, 407, 408, 410, 415, 416, 417, 444, 468, 470, 472, 478, 479, 483, 485, 489, 490, 491, 492, 493, 497, 499, 500, 504, 509, 510, 524, 525], "portion": [176, 177], "posinf": 268, "posit": [6, 10, 17, 18, 22, 26, 38, 43, 44, 45, 60, 74, 85, 105, 106, 111, 124, 127, 128, 130, 132, 135, 136, 137, 140, 143, 145, 148, 155, 163, 189, 192, 194, 195, 196, 197, 209, 222, 234, 266, 268, 273, 275, 278, 371, 385, 394, 404, 419, 443, 480, 481, 483, 485, 487, 499, 500, 513, 514], "possess": 214, "possibl": [10, 51, 52, 57, 58, 61, 111, 112, 116, 117, 124, 158, 159, 172, 176, 178, 253, 347, 377, 404, 413, 466, 475, 498, 501, 506, 507, 508, 514, 534], "possibli": 47, "pow": [6, 408, 546], "power": [6, 10, 123, 129, 155, 222, 407, 500, 530], "pre": 177, "precis": [12, 13, 59, 95, 96, 97, 98, 114, 116, 148, 155, 184, 219, 236, 253, 271, 272, 276, 278, 409, 468, 505, 513], "predecessor": 529, "prefer": [76, 84, 101, 111, 352, 380, 396, 466], "prepend": [39, 107, 115, 512], "present": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 114, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 182, 185, 240, 253, 261, 273, 275, 278, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 516, 518, 522, 530, 537, 538], "preserv": [52, 56, 57, 58, 77, 111, 114, 116, 152, 153, 154, 155, 215, 216, 217, 259, 347, 466, 474, 513, 526], "press": [10, 225], "prevent": 116, "previou": [59, 402], "print": [0, 4, 45, 59, 83, 108, 114, 117, 393, 417, 436, 441], "print_device_info": 0, "printabl": 117, "printopt": 6, "prior": 107, "prob1": [245, 246], "prob12": [245, 246], "prob2": [245, 246], "probabl": [176, 246, 259, 419, 427, 436], "proce": 546, "process": [10, 492], "processor": 116, "prod": [6, 95, 97, 111, 234, 235, 276, 546], "produc": [10, 37, 114, 240, 413, 486, 508], "product": [87, 93, 95, 97, 110, 111, 116, 117, 186, 202, 203, 211, 220, 224, 226, 230, 233, 234, 235, 237, 254, 267, 271, 276, 353, 401, 409, 511, 532, 533, 549], "program": [4, 156, 539, 549], "progress": [170, 239], "project": [4, 114, 237, 410, 533], "promot": [14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 73, 74, 85, 89, 90, 99, 100, 109, 122, 123, 125, 155, 157, 158, 159, 160, 170, 180, 206, 239, 241, 242, 243, 244, 245, 246, 251, 254, 257, 263, 264, 267, 395, 407, 408, 415, 416, 470, 472, 477, 478, 485, 489, 491, 492, 493, 497, 499, 500, 504, 509, 510, 512, 524, 525, 533], "promote_typ": 6, "propag": [114, 158, 159, 256, 257, 262, 263, 271, 272, 273, 275, 276, 278], "proper": [158, 159, 214, 216], "properti": [10, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 215, 217, 228, 239, 240, 251, 253, 261, 281, 347, 352, 356, 358, 359, 361, 363, 364, 368, 369, 375, 380, 381, 385, 390, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538, 546], "proport": 492, "protocol": [47, 114, 161], "prototyp": 119, "provid": [0, 6, 10, 34, 35, 39, 60, 79, 80, 86, 94, 111, 112, 116, 117, 124, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 165, 176, 177, 179, 196, 197, 223, 227, 252, 269, 270, 273, 275, 276, 278, 417, 445, 448, 471, 474, 484, 502, 507, 515, 526, 533, 535, 536, 553], "pseudo": [227, 417], "ptp": 6, "pure": [10, 134, 140, 142, 143], "purpos": [37, 219, 225], "put": [6, 10, 111, 126, 134, 140, 142, 405, 413, 508, 546], "put_along_axi": [6, 412, 508], "putmask": [6, 412], "pval": 434, "py": 4, "pypi": 4, "pyplot": [260, 455], "pytest": 4, "python": [0, 2, 3, 47, 60, 111, 114, 160, 161, 264, 362, 472, 473, 546], "q": [216, 222, 228, 235, 259], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [21, 29, 31, 49, 53, 130], "quantil": 6, "quaternion": 222, "question": 102, "queue": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "quick": [2, 3], "quickest": 466, "quickli": [202, 553], "quicksort": [36, 495], "quotient": [32, 54], "r": [87, 93, 100, 228], "r1": 87, "r2": [87, 228], "r3": 87, "rad": 100, "rad2deg": [6, 99, 100, 529], "radian": [6, 14, 15, 21, 27, 28, 29, 31, 32, 49, 53, 54, 99, 100, 415, 529, 553], "radixsort": [36, 495], "rais": [12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 81, 82, 84, 85, 86, 89, 90, 94, 99, 100, 108, 109, 110, 111, 112, 118, 119, 120, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 178, 180, 182, 188, 192, 194, 195, 204, 205, 206, 207, 208, 222, 224, 225, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 257, 258, 262, 263, 264, 267, 269, 270, 273, 274, 275, 277, 278, 279, 347, 348, 364, 394, 395, 397, 399, 400, 406, 407, 408, 409, 410, 415, 416, 466, 467, 470, 471, 472, 474, 475, 478, 479, 485, 489, 490, 491, 493, 495, 497, 498, 499, 500, 501, 503, 504, 505, 509, 510, 524, 525, 531, 533, 534, 537, 538, 546], "ramp": 402, "rand": [6, 87, 117, 417, 447, 449, 450, 452], "randint": [6, 111, 362, 417, 448], "randn": [6, 152, 153, 154, 227, 228, 231, 235, 417, 502], "random": [87, 111, 117, 152, 153, 154, 216, 224, 227, 228, 231, 235, 362, 502, 539, 549], "random_integ": [6, 417, 445], "random_sampl": [6, 417, 444, 447, 450, 452], "randomli": 441, "randomst": 445, "ranf": 6, "rang": [0, 60, 108, 165, 176, 177, 233, 246, 404, 411, 412, 436, 441, 467, 473, 502, 511, 514, 529, 549], "rank": [124, 126, 164, 219, 223, 236, 402, 506], "rate": [131, 145], "rather": 396, "ratio": [0, 109, 157, 219, 524, 553], "ration": 549, "ravel": [6, 111, 126, 151, 225, 360, 401, 475, 546], "ravel_multi_index": [6, 527], "raveled_indic": 467, "raw": 228, "rayleigh": 6, "rcond": [219, 227], "re": [25, 34, 35, 102, 140, 480], "read": [102, 106, 111, 114, 162, 163, 165, 166, 240, 360, 466, 475], "readonli": 114, "real": [6, 12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 33, 40, 49, 50, 53, 54, 55, 74, 75, 85, 94, 111, 129, 132, 134, 139, 140, 141, 142, 143, 144, 146, 148, 156, 158, 159, 160, 180, 184, 190, 198, 199, 209, 214, 215, 216, 217, 223, 227, 228, 229, 231, 245, 246, 252, 257, 263, 264, 268, 277, 279, 419, 436, 469, 470, 471, 472, 485, 496, 497, 503, 525, 526, 531, 546, 549], "real_if_clos": [6, 21, 184, 468], "rearrang": [111, 371, 549], "reason": 142, "rebuild": 113, "recal": 114, "recent": [23, 61, 501], "recip": [4, 10], "reciproc": [6, 485, 499], "recommend": [116, 396, 512], "reconstruct": [114, 231, 526], "recov": 10, "reduc": [17, 22, 34, 35, 59, 228, 231, 252, 256, 258, 259, 260, 262, 269, 270, 273, 274, 275, 276, 277, 278, 279, 409, 471, 476, 503, 505, 531], "reduce_hypot": 180, "reduct": [17, 22], "redund": 143, "refer": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546], "reflect": [402, 546], "reflect_typ": 402, "reflector": 228, "regardless": [114, 215, 217, 534], "regular": 240, "rel": [18, 36, 111, 189, 213, 223, 236, 385, 480, 481, 495], "relat": 114, "relationship": 87, "relev": [114, 170, 239, 251], "rem": 160, "remain": [17, 22, 59, 117, 144, 146, 176, 252, 258, 259, 266, 274, 277, 279, 471, 475, 503, 531], "remaind": [6, 157, 160, 264, 407, 408], "remov": [24, 34, 35, 99, 101, 106, 111, 124, 140, 213, 236, 383, 409, 415, 501, 505, 533, 549], "reorder": [116, 152, 235, 266], "rep": 512, "repeat": [6, 25, 111, 130, 132, 136, 137, 141, 142, 144, 146, 147, 214, 215, 216, 217, 260, 405, 476, 512, 515, 526, 546], "repeatedli": [24, 25, 116], "repetit": [0, 473, 512], "replac": [3, 10, 24, 47, 77, 126, 268, 271, 272, 405, 413, 422, 475, 487, 546], "replic": 512, "repo": 4, "repr": 324, "repres": [10, 26, 39, 43, 44, 46, 47, 48, 59, 60, 62, 63, 65, 66, 68, 87, 114, 117, 135, 143, 161, 164, 170, 172, 185, 188, 229, 239, 251, 260, 279, 402, 417, 476, 520, 526, 546], "represent": [60, 62, 63, 64, 65, 66, 67, 68, 117, 148, 183, 185, 188, 206, 268, 395, 478, 497, 546], "request": 481, "requir": [4, 6, 39, 44, 45, 46, 48, 52, 97, 98, 111, 114, 116, 128, 185, 268, 347, 380, 402, 475, 476], "res_cpu": 102, "res_host": 102, "resampl": 492, "rese": 453, "reset": 546, "reshap": [0, 6, 16, 25, 34, 35, 37, 56, 58, 59, 102, 103, 104, 106, 109, 110, 111, 112, 113, 116, 124, 126, 133, 138, 152, 160, 178, 185, 186, 187, 202, 203, 213, 220, 221, 225, 233, 236, 238, 253, 254, 256, 262, 267, 355, 360, 364, 380, 390, 402, 405, 441, 466, 474, 476, 480, 482, 504, 511, 513, 515, 518, 519, 522, 523, 524, 526, 528, 534, 546], "resid": [124, 128, 161], "residu": 219, "resiz": [6, 124, 546], "resolut": 148, "resolv": [94, 124, 252, 471], "resourc": 0, "respect": [16, 25, 32, 54, 60, 62, 64, 66, 67, 68, 109, 111, 120, 155, 157, 160, 172, 173, 174, 206, 207, 208, 211, 245, 246, 247, 249, 250, 264, 267, 385, 397, 407, 408, 472, 478, 504, 524, 529], "rest": 42, "restor": 480, "restrict": 237, "result": [0, 4, 10, 17, 22, 25, 32, 34, 35, 37, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 77, 79, 80, 85, 87, 91, 94, 95, 96, 97, 98, 101, 109, 110, 114, 117, 119, 120, 125, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 149, 155, 157, 162, 163, 164, 165, 166, 168, 170, 173, 174, 176, 177, 185, 188, 192, 194, 195, 196, 197, 205, 206, 207, 208, 209, 213, 214, 220, 221, 225, 228, 233, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 262, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 396, 397, 400, 401, 407, 408, 409, 412, 417, 419, 449, 471, 475, 477, 478, 479, 481, 483, 486, 489, 490, 492, 498, 502, 503, 505, 507, 508, 511, 512, 515, 520, 524, 525, 526, 528, 531, 533, 536, 538, 546], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 73, 114, 549], "ret": 416, "retain": 475, "retriev": [106, 114, 213], "retstep": 239, "return": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 365, 366, 367, 369, 370, 371, 372, 374, 377, 378, 381, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 420, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546], "return_count": 526, "return_index": 526, "return_invers": 526, "reus": [161, 177], "revers": [106, 111, 147, 152, 153, 154, 213, 390, 404, 482, 514, 515, 528, 530], "rewrit": 219, "rfft": [6, 10, 131, 134, 139, 140, 141, 142, 144, 145, 146], "rfft2": [6, 141], "rfftfreq": [6, 131], "rfftn": [6, 129, 132, 142, 143, 144], "right": [10, 31, 53, 64, 67, 77, 93, 106, 108, 153, 154, 180, 206, 211, 214, 215, 216, 217, 224, 235, 253, 460, 471, 478, 486, 513, 515, 518, 522, 530], "right_shift": [6, 64, 67, 206], "rightmost": [176, 177, 235], "rint": [6, 38, 75, 149, 156, 483, 525], "rl": [226, 401], "roll": [6, 481], "rollaxi": [6, 480], "root": [6, 74, 180, 210, 470, 471, 485, 499, 500], "rot90": [6, 153, 154], "rotat": [153, 154, 482], "roughli": [114, 219], "round": [6, 26, 38, 75, 111, 134, 139, 149, 156, 157, 169, 214, 264, 472, 479, 525, 546, 549], "routin": [2, 539, 546], "row": [48, 52, 78, 79, 80, 87, 95, 96, 97, 98, 106, 111, 113, 127, 153, 154, 172, 179, 182, 185, 224, 231, 347, 396, 466, 467, 484, 498, 502, 516, 518, 526, 527, 534, 535], "row_stack": [6, 535], "rowvar": [87, 92], "rsqrt": [470, 499], "rtol": [18, 189, 223, 227], "rule": [14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 59, 62, 64, 66, 67, 68, 73, 74, 85, 86, 89, 90, 93, 96, 98, 99, 100, 109, 122, 123, 125, 157, 158, 159, 160, 170, 180, 206, 211, 239, 241, 242, 243, 244, 245, 246, 251, 252, 254, 257, 258, 259, 263, 264, 267, 274, 277, 279, 395, 407, 408, 415, 416, 470, 471, 472, 477, 478, 485, 489, 491, 492, 493, 497, 499, 500, 503, 504, 505, 509, 510, 515, 524, 525, 531, 533], "run": [0, 4], "runtim": 4, "runtimewarn": [273, 275], "s1": [111, 114, 203, 385], "s10": 114, "s16": 114, "s2": [111, 114, 385], "s25": 114, "s3": [111, 385], "s_": 24, "safe": [52, 73, 79, 80, 86, 111, 116, 179, 254, 347, 484, 502, 533, 535], "sai": 475, "said": 235, "same": [4, 10, 12, 13, 16, 17, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 38, 40, 41, 46, 48, 51, 52, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 77, 78, 79, 80, 85, 87, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 111, 113, 119, 120, 124, 126, 135, 136, 137, 142, 147, 149, 155, 157, 158, 159, 160, 161, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 186, 188, 189, 196, 197, 198, 203, 204, 205, 206, 207, 208, 211, 213, 216, 222, 227, 228, 232, 233, 236, 245, 246, 247, 249, 250, 252, 256, 257, 258, 259, 262, 263, 264, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 377, 390, 393, 395, 397, 400, 402, 405, 407, 408, 409, 413, 417, 439, 445, 461, 466, 468, 471, 472, 473, 475, 478, 480, 481, 484, 486, 487, 495, 501, 502, 503, 504, 505, 507, 508, 511, 513, 517, 519, 521, 523, 524, 527, 531, 532, 535, 538, 553], "same_kind": [52, 73, 79, 80, 86, 111, 116, 179, 254, 347, 484, 502, 533, 535], "sampl": [10, 131, 138, 140, 143, 145, 170, 172, 176, 239, 251, 413, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 508, 515, 518, 522, 539, 549], "sample_r": 145, "satisfi": [39, 44, 46, 48, 52, 111, 126, 218, 347, 405, 474, 487], "save": [6, 163, 259, 553], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [16, 18, 23, 32, 39, 40, 41, 43, 44, 46, 47, 48, 54, 62, 64, 66, 67, 68, 73, 84, 85, 86, 93, 102, 105, 107, 109, 110, 111, 114, 116, 117, 120, 126, 131, 145, 147, 155, 157, 158, 159, 160, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 186, 187, 189, 191, 199, 200, 203, 204, 205, 206, 207, 208, 220, 230, 233, 239, 245, 246, 247, 249, 250, 251, 253, 254, 257, 260, 263, 264, 267, 357, 362, 392, 395, 397, 402, 405, 407, 408, 412, 413, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 442, 443, 445, 448, 451, 453, 457, 459, 460, 461, 462, 463, 464, 465, 469, 472, 478, 486, 487, 504, 507, 511, 515, 524, 525, 530, 532, 536, 546], "scale": [10, 117, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 170, 203, 228, 239, 251, 417, 424, 426, 428, 429, 430, 431, 439, 451, 456, 463], "scientif": 10, "scipi": 121, "scope": 4, "script": 4, "search": [117, 539, 549], "searchsort": [6, 108, 111, 176, 495, 546], "second": [16, 18, 32, 40, 41, 54, 59, 62, 64, 66, 67, 68, 72, 85, 93, 106, 109, 110, 114, 117, 120, 123, 130, 131, 132, 133, 136, 137, 140, 143, 145, 155, 157, 158, 159, 160, 169, 172, 173, 174, 176, 177, 178, 179, 180, 186, 189, 203, 204, 206, 207, 208, 211, 213, 220, 233, 236, 237, 245, 246, 247, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 267, 397, 401, 407, 408, 472, 478, 482, 500, 504, 506, 511, 513, 524, 532, 533], "section": [4, 42, 114, 132, 137, 142, 146, 221, 238, 546], "see": [3, 38, 87, 114, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 161, 176, 219, 221, 238, 402, 434, 483, 518, 519, 522, 523, 526, 546], "seed": [6, 87, 111, 117, 362, 417], "seek": 163, "seldom": 155, "select": [6, 36, 86, 126, 256, 262, 495, 501, 507, 515, 539], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "self": [111, 114, 150, 282, 283, 284, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 359, 393, 417], "semant": 176, "sens": 235, "sep": [163, 166], "separ": [10, 111, 114, 116, 163, 166, 177, 268, 377, 476], "sequenc": [25, 42, 47, 56, 57, 58, 78, 79, 80, 83, 88, 112, 113, 116, 117, 118, 119, 130, 132, 136, 137, 140, 141, 142, 144, 146, 167, 168, 170, 176, 177, 178, 179, 185, 187, 202, 224, 233, 239, 251, 259, 266, 399, 400, 402, 405, 441, 454, 473, 474, 477, 484, 498, 502, 511, 515, 528, 534, 535, 537, 538], "sequenti": [88, 92, 121, 265, 276], "seri": [10, 140, 433], "serv": 528, "set": [10, 24, 34, 35, 36, 39, 52, 61, 76, 87, 91, 102, 103, 105, 108, 111, 114, 116, 118, 167, 176, 177, 182, 185, 221, 223, 225, 226, 227, 238, 239, 256, 262, 269, 270, 278, 337, 347, 348, 359, 380, 399, 400, 401, 402, 409, 487, 489, 490, 495, 505, 518, 522, 537, 538, 546], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 114], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 218, "shape": [4, 6, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 46, 49, 50, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 160, 164, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 218, 219, 220, 221, 222, 224, 228, 229, 230, 231, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 369, 377, 381, 383, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 404, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 426, 429, 434, 435, 440, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 464, 466, 467, 468, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 516, 517, 519, 521, 522, 523, 524, 525, 527, 528, 531, 533, 534, 535, 536, 537, 538, 539, 549], "share": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 516, 518, 522, 530, 537, 538], "shared_bin": 177, "shares_memori": 6, "shift": [10, 64, 67, 130, 132, 133, 137, 138, 206, 478, 480], "short": [492, 525, 533, 546], "shortcut": 402, "shorter": [134, 140], "shorthand": [12, 13, 16, 62, 63, 64, 65, 66, 67, 68, 109, 120, 157, 173, 174, 188, 206, 207, 208, 247, 249, 254, 264, 267, 394, 397, 406, 407, 408, 472, 478, 504, 524, 536], "should": [24, 34, 35, 39, 42, 52, 106, 108, 110, 111, 116, 117, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 160, 163, 171, 176, 187, 202, 219, 222, 233, 254, 266, 269, 270, 273, 275, 347, 379, 402, 434, 467, 475, 476, 486, 497, 507, 511, 513, 527, 529, 533, 546], "show": [9, 41, 114, 147, 180, 250, 260, 268, 271, 272, 273, 275, 278, 455], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [111, 172, 216, 379, 486], "sigma": [432, 439], "sign": [6, 10, 18, 60, 85, 114, 189, 212, 229, 264, 394, 406, 409, 472, 490, 505, 525], "signal": [10, 131, 134, 139, 140, 142, 145, 492, 529], "signatur": [253, 254, 402, 533], "signbit": [6, 489], "signific": 116, "significantli": 60, "signum": 489, "similar": [3, 43, 44, 111, 114, 170, 187, 211, 213, 220, 226, 236, 237, 239, 251, 253, 352, 380, 405, 417, 445, 518, 519, 522, 523], "simpl": [4, 250, 549], "simpli": [104, 111, 163, 176, 177, 205, 390], "sin": [0, 6, 29, 30, 49, 50, 89, 216, 260, 492, 493, 509, 515], "sinc": [6, 87, 111, 140, 214, 216, 382, 396, 528], "sine": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 491, 492, 493, 509, 510], "sing": 225, "singl": [9, 10, 36, 70, 71, 78, 87, 111, 116, 117, 172, 187, 224, 233, 256, 262, 362, 383, 393, 409, 417, 436, 445, 446, 447, 448, 449, 450, 452, 458, 505, 511, 515, 533, 546], "singleton": [17, 22, 59, 124, 252, 258, 259, 273, 274, 275, 277, 279, 471, 501, 503, 531], "singular": [218, 219, 223, 225, 227, 231, 232], "sinh": [6, 15, 28, 30, 50, 90, 491, 510], "sinu": 492, "size": [0, 6, 26, 34, 35, 39, 42, 59, 61, 72, 79, 80, 88, 91, 92, 95, 96, 103, 108, 111, 112, 114, 117, 126, 129, 131, 135, 145, 163, 170, 172, 178, 179, 211, 213, 221, 225, 226, 228, 231, 233, 237, 238, 239, 251, 253, 256, 258, 262, 269, 270, 271, 272, 274, 276, 278, 362, 363, 380, 393, 399, 405, 409, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 476, 480, 484, 498, 501, 502, 505, 511, 522, 528, 529, 533, 534, 535, 537, 546], "skip": 106, "slice": [24, 25, 101, 126, 187, 269, 270, 273, 274, 275, 277, 279, 412, 413, 487, 508, 515, 522, 523, 546], "slogdet": [6, 212], "slower": [233, 511], "slowest": [111, 360, 466, 475], "small": [18, 125, 189, 219, 227, 243, 245, 246, 268, 522], "smaller": [107, 111, 129, 130, 132, 135, 136, 137, 139, 141, 142, 143, 144, 146, 148, 219, 264, 371, 405, 472, 529], "smallest": [148, 183, 225, 526], "smallest_norm": 148, "smat": 231, "so": [10, 14, 15, 17, 22, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 59, 114, 120, 134, 139, 155, 176, 187, 199, 233, 239, 246, 252, 258, 259, 260, 274, 277, 279, 455, 471, 503, 511, 512, 531], "softwar": 4, "solut": [219, 230, 476], "solv": [6, 219, 234, 235, 549], "some": [26, 114, 124, 126, 156, 186, 219, 402, 405, 529, 536, 546], "sometim": [175, 546], "somewhat": 222, "sophist": 222, "sort": [6, 24, 36, 42, 111, 112, 178, 231, 259, 346, 371, 404, 486, 496, 498, 508, 514, 515, 526, 534, 539, 546, 549], "sort_complex": 6, "sorter": [111, 379, 486], "sought": 210, "sourc": [4, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 76, 77, 78, 80, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 182, 183, 185, 186, 187, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 392, 393, 396, 399, 400, 401, 402, 403, 405, 409, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 475, 476, 477, 480, 481, 482, 486, 487, 488, 494, 495, 496, 498, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "space": [6, 26, 131, 133, 145, 163, 170, 172, 239, 251, 515, 553], "spars": [185, 260], "speak": 225, "special": [2, 114, 121, 539, 549], "specif": [0, 4, 114, 164], "specifi": [17, 22, 23, 24, 26, 34, 35, 36, 38, 39, 43, 44, 45, 46, 48, 59, 60, 71, 73, 79, 80, 84, 94, 95, 96, 97, 98, 101, 102, 105, 106, 111, 116, 117, 118, 119, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 162, 163, 164, 165, 167, 168, 170, 172, 182, 193, 213, 215, 217, 225, 233, 234, 235, 236, 237, 238, 239, 240, 251, 252, 258, 259, 261, 271, 272, 274, 276, 277, 278, 279, 346, 355, 362, 398, 399, 400, 404, 405, 409, 412, 413, 417, 430, 440, 458, 466, 467, 471, 474, 476, 480, 481, 482, 483, 487, 494, 502, 503, 505, 507, 508, 511, 513, 514, 515, 516, 526, 528, 530, 531, 533, 537, 538], "spectrum": [10, 133, 134, 138, 139], "speed": 116, "speedup": 117, "spell": 396, "split": [6, 42, 79, 80, 112, 113, 178, 179, 484, 502, 528, 534, 535, 549], "spreadsheet": 156, "sqrt": [6, 10, 74, 111, 361, 375, 471, 485, 500], "squar": [6, 74, 180, 182, 209, 210, 214, 215, 216, 218, 219, 222, 229, 234, 235, 253, 277, 279, 421, 437, 470, 471, 485, 487, 499, 503, 519, 523, 530, 531], "squeez": [6, 111, 124, 546], "src": 86, "stabil": [36, 495], "stabl": [36, 495], "stack": [6, 78, 79, 80, 113, 179, 212, 213, 220, 221, 223, 227, 228, 229, 232, 236, 254, 255, 396, 484, 498, 508, 528, 535], "stai": 77, "stand": 172, "standard": [111, 148, 157, 160, 258, 264, 274, 277, 279, 362, 384, 393, 417, 432, 439, 446, 455, 456, 457, 458, 459, 472, 503, 531, 546, 549], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 417, 446], "standard_t": 6, "start": [2, 3, 26, 46, 48, 117, 131, 135, 145, 162, 170, 239, 251, 253, 476, 481, 518, 522], "start_tim": 0, "stat_length": 402, "state": 417, "statist": [402, 539, 549], "std": [6, 111, 258, 274, 277, 279, 531, 546], "stdev": [417, 458], "step": [4, 26, 117, 170, 175, 239, 251], "sticki": 114, "still": [59, 178, 225, 534], "stop": [26, 170, 239, 251], "store": [149, 170, 196, 197, 236, 239, 246, 251, 254, 401, 533], "str": [45, 47, 60, 79, 80, 114, 116, 117, 163, 166, 179, 240, 338, 402, 474, 484, 502, 520, 535], "str_": 114, "straightforward": 185, "strictli": 225, "stride": [51, 52, 111, 347], "string": [26, 39, 43, 44, 45, 46, 47, 48, 52, 60, 62, 63, 64, 65, 66, 67, 68, 84, 102, 103, 105, 111, 114, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 188, 206, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 402, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 478, 516, 518, 520, 522, 530, 537, 538, 546], "string_repr": 117, "stringio": 240, "strongli": [4, 512], "struct": 114, "structur": [114, 240], "student": 459, "style": [52, 111, 347, 396, 402, 466, 467, 527], "sub": [42, 79, 80, 101, 106, 112, 114, 116, 178, 179, 235, 236, 484, 498, 502, 513, 516, 528, 534, 535], "subarrai": [101, 114, 185, 526], "subclass": [44, 474], "subdiagon": [213, 236], "subdivid": 114, "subdtyp": 114, "subject": 4, "subok": [12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 39, 49, 50, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 81, 82, 84, 85, 89, 90, 99, 100, 109, 111, 119, 120, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 168, 169, 173, 174, 175, 180, 188, 192, 194, 195, 204, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 257, 263, 264, 267, 347, 394, 395, 397, 400, 406, 407, 408, 410, 415, 416, 470, 472, 478, 479, 485, 489, 490, 491, 493, 497, 499, 500, 504, 509, 510, 524, 525, 533, 538], "subscript": [116, 117], "subset": [3, 172, 501, 549], "subtract": [6, 402], "subtyp": 466, "succeed": 115, "success": [45, 419, 427, 436], "suffici": 60, "sugar": [104, 519, 523], "suggest": 106, "suit": 4, "suitabl": [37, 111, 362, 390, 413, 476, 486, 508], "sum": [0, 3, 4, 6, 10, 16, 25, 59, 61, 94, 96, 97, 98, 102, 105, 106, 107, 110, 111, 116, 135, 176, 180, 186, 210, 219, 220, 225, 233, 234, 236, 245, 246, 252, 254, 271, 272, 278, 354, 389, 419, 434, 436, 471, 511, 513, 515, 533, 546, 549], "sum_": [10, 225, 237, 533], "sum_along_diagon": 513, "sum_of_weight": 59, "summari": 539, "summat": [110, 116, 117, 186, 233, 235, 254, 401, 511, 533], "superdiagon": [213, 236], "suppli": [134, 139, 224, 402, 417, 446], "support": [3, 4, 9, 12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 47, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 81, 82, 84, 85, 88, 89, 90, 92, 99, 100, 109, 111, 114, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 180, 182, 187, 188, 192, 194, 195, 204, 205, 206, 207, 208, 211, 213, 220, 226, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 347, 380, 394, 395, 397, 399, 400, 403, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 472, 474, 478, 479, 485, 489, 490, 491, 495, 497, 499, 500, 503, 504, 505, 509, 510, 524, 525, 531, 533, 537, 538, 553], "sure": 474, "surnam": 114, "surpris": [135, 136, 137], "svd": [6, 210, 218, 223, 227, 232], "svdval": 6, "swap": [114, 130, 133, 506], "swapax": [6, 111, 266, 546], "swapped_cod": 114, "swapped_dt": 114, "sy": 114, "sycl": [0, 3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "sycl_context": 111, "sycl_devic": 111, "sycl_queu": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "sycldevic": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "syclqueu": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 161, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 347, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 516, 518, 522, 530, 537, 538], "symmetr": [134, 140, 142, 143, 209, 214, 215, 216, 217, 223, 227, 231, 402], "symmetri": [10, 129, 134, 139, 140, 143], "syntact": [104, 519, 523], "syntax": 546, "sys_is_l": 114, "system": [3, 4, 60, 230], "t": [10, 79, 80, 92, 111, 114, 134, 193, 209, 214, 216, 219, 390, 396, 459, 466, 515], "t1": 553, "tabl": [2, 9, 221, 238, 539], "tack": 114, "take": [6, 25, 78, 111, 126, 202, 253, 405, 413, 466, 475, 486, 487, 492, 508, 526, 529, 546, 553], "take_along_axi": [6, 34, 35, 36, 76, 413, 507], "taken": [59, 106, 107, 115, 117, 134, 140, 141, 142, 143, 144, 146, 175, 176, 254, 277, 279, 487, 503, 513, 516, 518, 522, 531, 532, 533], "tall": 147, "tan": [6, 29, 31, 32, 33, 49, 53, 54, 55, 89, 491, 510], "tangent": [14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 491, 493, 509, 510], "tanh": [6, 15, 28, 33, 55, 90, 493, 509], "target": [52, 73, 111, 347, 412], "target_devic": 111, "tau": 228, "tbb": 4, "tempfil": 163, "temporari": [163, 553], "temporaryfil": 163, "ten": 427, "tensor": [47, 111, 116, 117, 161, 233, 234, 235, 269, 270, 273, 275, 276, 411, 511], "tensordot": [6, 110, 116, 186, 234, 235, 254, 401], "tensorinv": [6, 235], "tensorsolv": [6, 234], "term": [10, 16, 109, 117, 129, 130, 132, 135, 136, 137, 140, 143, 267, 504, 524], "test": [0, 2, 17, 18, 22, 120, 173, 174, 190, 192, 194, 195, 196, 197, 207, 208, 276, 396, 397, 419, 546, 549], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [162, 163, 165, 166, 240], "th": [96, 98, 102, 105, 107, 111, 115, 127, 172, 185, 259, 390, 398, 404, 487, 514, 517, 519, 521, 523], "than": [24, 25, 39, 64, 67, 95, 96, 97, 98, 111, 112, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 153, 154, 157, 164, 173, 174, 176, 177, 179, 206, 207, 208, 219, 223, 227, 228, 233, 236, 271, 272, 276, 278, 364, 371, 396, 402, 405, 409, 476, 478, 487, 489, 501, 502, 505, 511, 513, 525, 529, 553], "thei": [18, 41, 114, 189, 193, 205, 216, 219, 233, 484, 486, 511, 515, 518, 522, 529, 530, 535, 546], "them": [78, 223, 227, 546], "theor": 214, "theoret": 117, "therefor": [62, 68, 129, 143, 164, 215, 217, 476], "theta": 515, "thi": [10, 12, 13, 19, 20, 23, 24, 25, 26, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 51, 52, 54, 77, 79, 80, 84, 87, 91, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 153, 154, 155, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 191, 193, 199, 202, 211, 213, 215, 217, 219, 220, 221, 224, 225, 226, 229, 232, 236, 237, 238, 239, 240, 243, 245, 246, 251, 252, 253, 254, 256, 259, 262, 264, 266, 268, 269, 270, 273, 275, 276, 278, 347, 352, 357, 360, 362, 371, 377, 390, 396, 402, 405, 409, 412, 413, 450, 452, 466, 471, 472, 474, 475, 476, 481, 482, 484, 495, 502, 505, 507, 508, 512, 515, 519, 523, 526, 528, 529, 530, 533, 535, 536], "thing": 507, "think": [402, 475], "third": [78, 79, 80, 93, 112, 113, 130, 179, 233, 484, 498, 502, 511, 535], "those": [10, 24, 77, 87, 101, 222, 413], "though": 135, "thousand": 427, "three": [56, 57, 58, 124, 222, 233, 253, 417, 453, 511, 526], "threshold": 223, "through": [44, 114, 177, 202, 214, 216, 219, 253, 474, 546], "throw": 434, "thu": [10, 134, 140, 142, 512], "tile": [6, 473, 549], "time": [0, 10, 16, 18, 32, 40, 41, 54, 62, 64, 66, 67, 68, 85, 107, 109, 110, 120, 130, 132, 134, 136, 137, 139, 141, 142, 144, 146, 155, 157, 158, 159, 160, 169, 173, 174, 175, 180, 186, 187, 189, 195, 203, 204, 205, 206, 207, 208, 219, 223, 227, 233, 245, 246, 247, 249, 250, 257, 263, 264, 267, 395, 397, 402, 407, 408, 419, 434, 472, 478, 482, 492, 504, 508, 511, 512, 524, 526, 532], "time_dpnp": 0, "time_numpi": 0, "timedelta": 114, "timeit": 116, "timestep": 131, "tini": 148, "titl": 114, "tm": 160, "to_begin": 115, "to_devic": [6, 111], "to_end": 115, "tobyt": 6, "todo": 437, "tofil": [6, 163], "togeth": [18, 79, 80, 114, 135, 189, 202, 502, 536], "tol": [223, 435, 469], "toler": [18, 40, 189, 223, 469], "tolist": 6, "too": [4, 130, 132, 136, 137, 141, 142, 144, 146, 536], "toolkit": 3, "tostr": 6, "total": [6, 91, 95, 97, 111, 368, 476, 494, 503, 531], "toward": [38, 75, 149, 156, 157, 176, 177, 264, 395, 472, 479, 482, 483, 525], "trace": [6, 102, 105, 106, 111, 116, 546], "traceback": [23, 61, 501], "trail": 520, "transfer": 111, "transform": [117, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 539, 549], "transpos": [6, 37, 87, 111, 116, 193, 209, 216, 255, 266, 281, 364, 404, 546, 549], "trapezoid": [6, 96, 98, 505], "trapz": 6, "treat": [18, 87, 101, 134, 140, 142, 163, 172, 189, 215, 217, 219, 224, 240, 259, 271, 272, 276, 278, 409, 413, 486, 508, 512, 526, 529, 546], "tri": 6, "trial": 419, "triangl": [102, 180, 253, 471, 516, 517, 518, 519, 521, 522, 523], "triangular": [6, 209, 215, 217, 228, 253, 518, 519, 522, 523], "trigonometr": [14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 491, 493, 509, 510, 549], "tril": [6, 102, 253, 516, 518, 519, 522], "tril_indic": [6, 253, 519, 522], "tril_indices_from": [6, 523], "trili": 519, "trili1": 519, "trim": [130, 132, 136, 137, 141, 142, 144, 146, 520], "trim_zero": 6, "triu": [6, 102, 253, 516, 518, 522, 523], "triu_indic": [6, 253, 518, 523], "triu_indices_from": [6, 519], "triui": 523, "triuim1": 523, "trivial": [214, 508], "true": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 96, 97, 98, 99, 100, 108, 109, 111, 114, 116, 117, 120, 122, 123, 124, 125, 126, 128, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 169, 170, 173, 174, 175, 176, 180, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 221, 223, 225, 227, 228, 230, 231, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 285, 342, 343, 347, 352, 365, 366, 367, 372, 384, 386, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 413, 415, 416, 422, 470, 471, 472, 474, 475, 478, 479, 485, 487, 489, 490, 491, 493, 495, 497, 499, 500, 503, 504, 505, 508, 509, 510, 511, 515, 524, 525, 526, 528, 530, 531, 533, 536], "true_divid": [6, 109], "trunc": [6, 38, 75, 149, 156, 479, 483], "truncat": [38, 75, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 149, 156, 455, 479, 483, 525], "trust": [269, 270], "truth": [62, 63, 65, 66, 68, 120, 173, 174, 188, 207, 208, 247, 248, 249, 250, 397, 546, 549], "try": [4, 45], "tukei": 10, "tup": [78, 113, 179, 484, 535], "tupl": [17, 22, 23, 24, 25, 34, 35, 39, 43, 44, 45, 46, 48, 59, 70, 71, 72, 84, 91, 94, 102, 103, 104, 105, 111, 114, 117, 124, 133, 138, 152, 161, 164, 167, 168, 170, 172, 176, 177, 179, 185, 191, 199, 202, 203, 225, 228, 235, 238, 239, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 273, 274, 275, 276, 277, 278, 279, 362, 380, 390, 393, 396, 398, 402, 404, 409, 467, 471, 473, 475, 476, 480, 484, 488, 501, 502, 503, 505, 512, 514, 518, 519, 522, 523, 527, 528, 530, 531, 533, 535, 546], "turn": 78, "twister": 417, "two": [10, 18, 25, 40, 56, 57, 60, 62, 63, 65, 66, 68, 83, 87, 88, 93, 105, 106, 107, 110, 111, 114, 116, 117, 124, 129, 130, 132, 135, 136, 137, 140, 141, 142, 144, 146, 158, 159, 172, 186, 188, 189, 203, 205, 213, 215, 219, 221, 224, 226, 230, 232, 233, 236, 247, 249, 250, 254, 255, 256, 257, 259, 262, 263, 266, 273, 275, 364, 371, 387, 401, 402, 417, 446, 466, 479, 482, 483, 487, 506, 511, 513, 518, 519, 522, 523, 532], "type": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 356, 360, 362, 369, 377, 381, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 549], "type_nam": 0, "typeerror": [59, 61, 86, 111, 161, 205, 380], "typenam": 6, "typestr": 114, "typic": [18, 134, 189, 486, 546], "u": [114, 209, 215, 217, 231, 253, 276, 278, 526], "u1": [114, 162, 163], "u16": 114, "u4": 73, "u8": 114, "ufunc": [2, 25, 539, 546], "uint64": 114, "uint8": [114, 162, 163], "uk": 10, "un": 114, "unalt": 402, "unari": 546, "unchang": 146, "undefin": [21, 111, 259, 371, 402], "under": [221, 238], "underli": [62, 66, 68, 466, 475], "undo": [10, 137], "undocu": 114, "unexpect": [276, 278], "unicod": 114, "uniform": [6, 114, 172, 176, 177, 251, 417, 444, 447, 449, 450, 452], "uniformli": [251, 417, 461], "uniniti": [39, 118, 119, 167, 399, 537], "union1d": 6, "uniqu": [6, 59, 61, 94, 108, 114, 252, 258, 266, 274, 277, 279, 402, 471, 473, 503, 531], "unique_al": 6, "unique_count": [6, 526], "unique_indic": 526, "unique_invers": [6, 526], "unique_valu": 6, "unit": [111, 131, 145, 202, 214, 222, 229, 385], "unitari": [10, 172, 228, 231], "uniti": 176, "univ": 10, "univers": [2, 225, 539, 546], "unless": [17, 22, 52, 95, 96, 97, 98, 111, 116, 176, 214, 223, 225, 251, 271, 272, 276, 278, 347, 409, 505, 526, 533], "unlik": [111, 145, 377, 380], "unmodifi": 177, "unpackbit": 6, "unravel": 527, "unravel_index": [6, 34, 35, 467], "unraveled_coord": 527, "unsaf": [52, 73, 79, 80, 86, 111, 116, 179, 254, 347, 484, 502, 533, 535], "unscal": 10, "unsign": [114, 409, 505], "unspecifi": 475, "unstack": [6, 179, 484, 502, 535], "unsupport": [12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 85, 89, 90, 99, 100, 109, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 161, 169, 175, 180, 188, 204, 205, 206, 242, 243, 244, 245, 246, 257, 263, 264, 265, 267, 394, 395, 406, 407, 408, 410, 415, 416, 470, 472, 478, 479, 485, 489, 490, 491, 493, 497, 504, 509, 510, 524, 525], "until": [117, 480, 481], "unwrap": [6, 99, 415], "up": [4, 10, 114, 116, 154, 508, 519, 526], "upcast": 39, "updat": [4, 393], "uplo": [215, 217], "upon": [111, 385], "upper": [102, 127, 176, 177, 209, 215, 217, 228, 253, 516, 518, 519, 521, 522, 523], "url": 4, "us": [4, 10, 16, 23, 24, 26, 32, 37, 39, 43, 44, 45, 46, 47, 48, 51, 52, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 77, 79, 80, 84, 87, 93, 95, 96, 97, 98, 101, 102, 103, 105, 106, 109, 111, 114, 116, 117, 118, 119, 120, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 156, 157, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185, 186, 188, 193, 202, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 223, 224, 225, 227, 233, 236, 239, 240, 246, 247, 249, 251, 253, 254, 256, 258, 259, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 287, 347, 352, 360, 380, 394, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 413, 417, 420, 422, 423, 433, 438, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 458, 461, 466, 469, 472, 473, 474, 475, 476, 478, 480, 486, 487, 489, 492, 496, 503, 504, 505, 507, 508, 511, 512, 513, 515, 516, 518, 519, 522, 523, 524, 526, 527, 530, 531, 533, 536, 537, 538, 546, 553], "usabl": 155, "usag": [3, 4, 131, 145], "use_getitem": 114, "use_setitem": 114, "user": [114, 268, 402], "usm": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 501, 516, 518, 522, 530, 537, 538], "usm_ndarrai": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 357, 392, 394, 395, 396, 397, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538], "usm_typ": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 118, 119, 127, 131, 145, 162, 163, 164, 165, 166, 167, 168, 170, 182, 185, 239, 240, 251, 253, 261, 352, 398, 399, 400, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 516, 518, 522, 530, 537, 538], "usual": [103, 111, 114, 181, 220, 254, 380], "util": 539, "v": [83, 102, 105, 111, 114, 214, 215, 237, 259, 379, 412, 486, 533], "v0": 6, "v10": 114, "v13": 6, "v2": 6, "v_sort": 259, "val": [111, 147, 150, 337, 373, 393, 405], "valid": [88, 124, 253, 506, 518, 519, 522, 523], "valu": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 107, 108, 109, 111, 114, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 134, 135, 140, 142, 143, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 182, 184, 185, 187, 188, 189, 191, 192, 194, 195, 198, 199, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 222, 223, 225, 227, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 283, 284, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 347, 349, 352, 357, 359, 371, 373, 380, 393, 394, 395, 396, 397, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 427, 444, 445, 461, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 483, 485, 486, 487, 489, 490, 491, 492, 495, 497, 499, 500, 503, 504, 505, 507, 508, 509, 510, 513, 515, 518, 522, 524, 525, 526, 529, 531, 533, 536, 537, 538, 546, 549], "value2": 114, "valueerror": [23, 39, 44, 45, 111, 161, 225, 269, 270, 364, 475, 498, 501], "van": 225, "vander": 6, "vandermond": 530, "var": [6, 111, 258, 274, 277, 279, 503, 546], "vararg": 172, "vari": [10, 17, 21, 22, 106, 117, 130, 132, 134, 135, 136, 137, 139, 140, 143, 146, 164, 185, 193, 210, 213, 214, 215, 219, 221, 225, 268, 274, 277, 279, 466, 469, 492], "variabl": [61, 87, 92, 219, 230], "varianc": [111, 258, 274, 277, 279, 391, 503, 531, 549], "variou": [225, 492, 553], "vdot": [6, 110, 237, 254, 533], "vecdot": [6, 532], "vector": [93, 116, 164, 185, 186, 202, 210, 211, 220, 223, 224, 225, 226, 231, 232, 237, 238, 254, 259, 260, 401, 402, 532, 533, 549], "vector_norm": [6, 225], "vendor": 4, "veri": [3, 10, 18, 187, 189, 226, 260, 268, 401], "verif": 0, "verifi": 209, "version": [4, 91, 93, 106, 111, 114, 151, 254, 259, 359, 396, 401, 467, 513, 527, 532, 533], "vertic": [78, 79, 80, 106, 113, 147, 152, 153, 179, 213, 482, 484, 498, 502, 534, 535], "vetterlin": 10, "vh": 231, "via": 140, "view": [6, 42, 56, 57, 58, 69, 102, 106, 111, 112, 124, 130, 132, 136, 137, 141, 142, 144, 146, 152, 153, 154, 178, 260, 266, 281, 364, 377, 390, 404, 413, 466, 467, 475, 482, 498, 501, 506, 514, 527, 534], "violat": 86, "void": 114, "void640": 114, "von": 462, "vonmis": 6, "vsplit": [6, 79, 80, 498], "vstack": [6, 78, 79, 80, 113, 179, 219, 484, 498, 502], "w": [10, 59, 61, 214, 215, 216, 217, 222, 474], "wa": [10, 94, 114, 224, 252, 273, 275, 277, 279, 417, 458, 471, 475, 503, 531], "wai": [3, 4, 10, 111, 117, 129, 135, 136, 137, 142, 163, 233, 371, 511], "wald": 6, "walk": 114, "want": [4, 193, 508], "warn": [114, 269, 270, 435, 476], "we": [84, 87, 103, 106, 117, 147, 219, 253, 413, 508, 515], "weibul": [6, 465], "weight": [59, 61, 92, 176, 177, 258, 274, 505], "well": [114, 116, 163, 176, 177, 409, 419, 436, 455], "were": [79, 80, 164, 417, 446, 502, 529], "what": [10, 52, 73, 79, 80, 86, 111, 114, 116, 120, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 179, 190, 254, 347, 419, 436, 484, 502, 533, 535, 546], "when": [10, 23, 26, 36, 39, 40, 43, 44, 46, 48, 51, 52, 59, 60, 84, 86, 108, 111, 114, 116, 129, 140, 142, 143, 158, 159, 170, 175, 187, 214, 220, 225, 228, 232, 233, 239, 246, 251, 253, 254, 259, 264, 271, 272, 273, 275, 276, 278, 347, 466, 472, 476, 479, 481, 483, 487, 495, 507, 511, 515, 526, 533, 536, 553], "whenev": [124, 404, 506, 514], "where": [0, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 86, 89, 90, 93, 94, 99, 100, 102, 103, 105, 107, 108, 109, 111, 112, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 134, 140, 141, 142, 145, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 188, 189, 190, 191, 192, 194, 195, 198, 199, 204, 205, 206, 207, 208, 209, 213, 219, 223, 228, 231, 232, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 261, 262, 263, 264, 267, 273, 274, 275, 276, 277, 278, 279, 342, 343, 347, 352, 365, 366, 367, 372, 379, 384, 386, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 461, 466, 470, 471, 472, 476, 478, 479, 481, 485, 486, 487, 489, 490, 491, 493, 497, 498, 499, 500, 503, 504, 505, 509, 510, 513, 514, 516, 518, 522, 524, 525, 529, 530, 531, 533, 534, 537, 538], "wherev": 86, "whether": [17, 18, 22, 25, 40, 94, 97, 98, 108, 114, 161, 189, 190, 193, 209, 228, 239, 268, 276, 278, 467, 490, 526, 527, 546], "which": [3, 4, 10, 17, 22, 23, 24, 25, 26, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 52, 59, 61, 69, 79, 80, 84, 86, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 116, 117, 118, 119, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 158, 159, 162, 163, 164, 165, 166, 167, 168, 170, 172, 176, 177, 179, 182, 185, 187, 192, 194, 195, 196, 197, 209, 211, 213, 214, 221, 223, 225, 232, 235, 236, 237, 238, 240, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 347, 352, 362, 396, 398, 399, 400, 404, 409, 412, 417, 439, 444, 445, 446, 447, 448, 449, 450, 452, 458, 461, 467, 471, 473, 476, 480, 487, 494, 495, 498, 501, 502, 503, 505, 507, 513, 514, 515, 516, 517, 518, 521, 522, 525, 528, 529, 530, 531, 533, 536, 537, 538, 546, 553], "whichev": 186, "while": [10, 87, 144, 146, 176, 177, 258, 274, 277, 279, 396, 405, 409, 480, 503, 505, 516, 531], "whitespac": [163, 166], "whole": [130, 132, 136, 137, 141, 142, 144, 146, 518, 522], "whose": [12, 13, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 106, 114, 126, 127, 147, 210, 213, 215, 216, 217, 221, 232, 234, 236, 253, 255, 266, 480, 519, 523, 527], "why": 140, "wide": 147, "width": [60, 63, 65, 114, 176, 177, 188, 402], "wild": [419, 436], "window": [4, 131, 145], "wise": [12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 38, 40, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 78, 79, 80, 81, 82, 85, 87, 89, 90, 94, 109, 111, 113, 120, 122, 123, 125, 128, 149, 155, 156, 157, 158, 159, 160, 173, 174, 175, 178, 179, 180, 184, 188, 189, 192, 194, 195, 196, 197, 205, 206, 207, 208, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 262, 263, 264, 265, 267, 273, 275, 276, 351, 394, 395, 397, 406, 407, 408, 410, 468, 470, 472, 478, 479, 483, 484, 485, 489, 490, 491, 492, 493, 498, 499, 500, 502, 504, 509, 510, 524, 525, 534, 535, 539, 546, 549, 553], "wish": 546, "within": [18, 26, 40, 52, 111, 116, 134, 135, 136, 137, 139, 140, 142, 176, 177, 189, 347, 412, 417, 461], "without": [106, 111, 118, 147, 390, 466, 475, 476, 546], "won": 114, "word": [135, 136, 137, 140, 142, 156, 216, 417, 461], "work": [4, 38, 51, 111, 362, 508, 546], "world": [114, 419, 436], "would": [36, 79, 80, 111, 114, 164, 185, 224, 253, 254, 371, 404, 417, 467, 495, 498, 502, 508, 514, 529, 533], "wrap": [99, 111, 147, 373, 388, 402, 412, 413, 415, 467, 486, 507, 508, 529], "wrapper": 111, "writabl": 474, "write": [102, 106, 111, 147, 163, 360, 475], "writeabl": 474, "written": [4, 91, 94, 147, 163, 193, 252, 471, 536], "x": [0, 3, 4, 12, 13, 14, 15, 17, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 57, 58, 61, 63, 65, 69, 71, 74, 75, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 97, 98, 99, 100, 102, 105, 107, 108, 111, 112, 114, 115, 118, 119, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 136, 137, 138, 144, 145, 146, 149, 150, 151, 156, 162, 163, 164, 165, 167, 168, 169, 170, 172, 178, 181, 182, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 205, 210, 211, 213, 216, 219, 221, 225, 228, 230, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 260, 261, 265, 266, 268, 347, 352, 361, 362, 369, 375, 380, 381, 394, 396, 398, 399, 400, 406, 409, 410, 411, 415, 416, 435, 441, 466, 468, 470, 471, 473, 474, 479, 480, 481, 483, 485, 487, 489, 490, 491, 492, 493, 497, 498, 499, 500, 501, 506, 507, 509, 510, 515, 516, 525, 528, 530, 534, 536, 537, 538], "x0": [46, 48, 84, 105, 400, 530, 538], "x00": 163, "x01": [162, 163], "x02": [162, 163], "x03": [162, 163], "x04": [162, 163], "x05": 162, "x1": [16, 18, 21, 29, 31, 32, 40, 41, 49, 52, 53, 54, 62, 64, 66, 67, 68, 76, 85, 88, 109, 111, 120, 155, 157, 158, 159, 160, 169, 173, 174, 175, 180, 202, 204, 205, 206, 207, 208, 211, 220, 226, 237, 245, 246, 247, 248, 249, 250, 254, 257, 260, 263, 264, 265, 267, 347, 394, 395, 397, 403, 406, 407, 408, 414, 454, 472, 478, 480, 504, 524, 533], "x1_i": [16, 32, 54, 62, 64, 66, 67, 68, 85, 109, 120, 155, 157, 160, 173, 174, 180, 206, 207, 208, 245, 246, 247, 249, 250, 264, 267, 397, 407, 408, 472, 478, 504, 524], "x2": [16, 17, 18, 21, 22, 29, 31, 32, 39, 40, 41, 49, 53, 54, 62, 64, 66, 67, 68, 85, 88, 109, 120, 155, 157, 158, 159, 160, 169, 173, 174, 175, 180, 202, 204, 205, 206, 207, 208, 211, 220, 226, 237, 245, 246, 247, 248, 249, 250, 254, 257, 260, 263, 264, 267, 394, 395, 397, 406, 407, 408, 472, 478, 480, 499, 504, 524, 533], "x2_i": [16, 32, 54, 62, 64, 66, 67, 68, 85, 109, 120, 155, 157, 160, 173, 174, 180, 206, 207, 208, 245, 246, 247, 249, 250, 264, 267, 397, 407, 408, 472, 478, 504, 524], "x3": [17, 22, 155], "x_i": [12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 63, 65, 74, 75, 81, 82, 89, 90, 122, 123, 125, 156, 184, 188, 241, 242, 243, 244, 248, 394, 406, 410, 468, 470, 479, 483, 485, 489, 490, 491, 493, 499, 500, 509, 510, 525], "xarr": 87, "xi": [244, 260], "xn": [202, 260], "xor": [62, 63, 65, 66, 68, 188, 247, 248, 249, 250], "xv": 260, "xx": 260, "xy": 260, "y": [0, 4, 14, 15, 26, 27, 28, 29, 30, 31, 33, 39, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 69, 84, 87, 92, 93, 105, 111, 114, 115, 118, 119, 124, 127, 131, 145, 162, 163, 164, 165, 167, 168, 170, 172, 182, 196, 197, 210, 211, 219, 239, 240, 251, 260, 261, 265, 268, 352, 369, 377, 380, 398, 399, 400, 474, 515, 516, 530, 536, 537, 538], "y1": 205, "y2": 205, "yarr": 87, "yet": [4, 6], "yield": [14, 15, 27, 28, 29, 30, 31, 33, 36, 49, 50, 53, 55, 276, 278, 396, 402, 417, 536, 546], "you": [4, 106, 134, 139, 140, 193, 253, 259, 475, 507, 508, 546, 553], "your": [4, 106, 553], "yv": 260, "yy": 260, "z": [14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 33, 39, 43, 44, 45, 46, 48, 49, 50, 53, 55, 84, 93, 105, 118, 119, 127, 131, 145, 162, 163, 164, 165, 167, 168, 170, 182, 239, 240, 251, 260, 261, 398, 399, 400, 427, 516, 530, 537, 538], "zero": [6, 10, 17, 21, 22, 36, 37, 38, 39, 64, 75, 91, 93, 94, 103, 107, 111, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 156, 163, 167, 168, 182, 184, 190, 191, 196, 197, 198, 199, 206, 214, 215, 217, 219, 222, 223, 227, 231, 233, 252, 253, 256, 258, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 369, 370, 380, 381, 385, 392, 396, 399, 400, 402, 409, 417, 419, 447, 449, 450, 452, 468, 469, 471, 476, 479, 483, 489, 495, 503, 505, 511, 516, 517, 520, 521, 525, 531, 536, 538], "zeros_lik": [6, 39, 100, 119, 168, 259, 400, 416, 537], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.apply_over_axes", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.cumulative_prod", "dpnp.cumulative_sum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.i0", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.ndindex", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 282, "__add__": 283, "__and__": 284, "__bool__": 285, "__complex__": 286, "__copy__": 287, "__eq__": 288, "__float__": 289, "__floordiv__": 290, "__ge__": 291, "__getitem__": 292, "__gt__": 293, "__iadd__": 294, "__iand__": 295, "__ifloordiv__": 296, "__ilshift__": 297, "__imatmul__": 298, "__imod__": 299, "__imul__": 300, "__int__": 301, "__invert__": 302, "__ior__": 303, "__ipow__": 304, "__irshift__": 305, "__isub__": 306, "__itruediv__": 307, "__ixor__": 308, "__le__": 309, "__len__": 310, "__lshift__": 311, "__lt__": 312, "__matmul__": 313, "__mod__": 314, "__mul__": 315, "__ne__": 316, "__neg__": 317, "__new__": 318, "__or__": 319, "__pos__": 320, "__pow__": 321, "__radd__": 322, "__rand__": 323, "__repr__": 324, "__rfloordiv__": 325, "__rlshift__": 326, "__rmatmul__": 327, "__rmod__": 328, "__rmul__": 329, "__ror__": 330, "__rpow__": 331, "__rrshift__": 332, "__rshift__": 333, "__rsub__": 334, "__rtruediv__": 335, "__rxor__": 336, "__setitem__": 337, "__str__": 338, "__sub__": 339, "__truediv__": 340, "__xor__": 341, "ab": 12, "absolut": 13, "aco": 14, "acosh": 15, "ad": 543, "add": 16, "algebra": [6, 541], "all": [17, 342], "allclos": 18, "amax": 19, "amin": 20, "angl": 21, "ani": [22, 343], "api": [1, 539], "append": 23, "apply_along_axi": 24, "apply_over_ax": 25, "arang": 26, "arcco": 27, "arccosh": 28, "arcsin": 29, "arcsinh": 30, "arctan": 31, "arctan2": 32, "arctanh": 33, "argmax": [34, 344], "argmin": [35, 345], "argsort": [36, 346], "argwher": 37, "arithmet": [544, 546, 547], "around": 38, "arrai": [6, 7, 9, 39, 540, 542, 543, 546], "array_equ": 40, "array_equiv": 41, "array_split": 42, "asanyarrai": 43, "asarrai": 44, "asarray_chkfinit": 45, "ascontiguousarrai": 46, "asfarrai": 47, "asfortranarrai": 48, "asin": 49, "asinh": 50, "asnumpi": 51, "astyp": [52, 347], "atan": 53, "atan2": 54, "atanh": 55, "atleast_1d": 56, "atleast_2d": 57, "atleast_3d": 58, "attribut": 546, "avail": [9, 553], "averag": [59, 552], "backend": 1, "background": 10, "basic": [543, 547], "beta": 418, "binary_repr": 60, "bincount": 61, "binomi": 419, "bit": [5, 553], "bitwise_and": 62, "bitwise_invert": 63, "bitwise_left_shift": 64, "bitwise_not": 65, "bitwise_or": 66, "bitwise_right_shift": 67, "bitwise_xor": 68, "broadcast_arrai": 69, "broadcast_shap": 70, "broadcast_to": 71, "build": [4, 7], "byte": 420, "byte_bound": 72, "c": 1, "calcul": 546, "can_cast": 73, "cbrt": 74, "ceil": 75, "chang": 543, "channel": 4, "chisquar": 421, "choic": 422, "choleski": 209, "choos": [76, 348], "class": 7, "clip": [77, 349], "co": 89, "column_stack": 78, "comparison": [6, 542, 546, 553], "complex": 544, "concat": 79, "concaten": 80, "cond": 210, "conda": 4, "conj": [81, 350], "conjug": [82, 351], "construct": 546, "control": 0, "convers": 546, "convolv": 83, "copi": [84, 352], "copysign": 85, "copyto": 86, "corrcoef": 87, "correl": [88, 552], "cosh": 90, "count": 550, "count_nonzero": 91, "cov": 92, "creat": 8, "creation": 7, "cross": [93, 211], "cumlogsumexp": 94, "cumprod": [95, 353], "cumsum": [96, 354], "cumulative_prod": 97, "cumulative_sum": 98, "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 540, 546, 548], "decomposit": 541, "deg2rad": 99, "degre": 100, "delet": 101, "det": 212, "detail": 10, "develop": 2, "devic": 4, "diag": 102, "diag_indic": 103, "diag_indices_from": 104, "diagflat": 105, "diagon": [106, 213, 355], "diff": 107, "differ": 544, "digit": 108, "dimens": [10, 543], "dimension": [6, 546], "dirichlet": 423, "discret": [6, 10], "distribut": 548, "divid": 109, "dot": 110, "dpnp": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 548], "dpnp_arrai": 111, "driver": 4, "dsplit": 112, "dstack": 113, "dtype": [114, 356], "ediff1d": 115, "eig": 214, "eigenvalu": 541, "eigh": 215, "eigval": 216, "eigvalsh": 217, "einsum": 116, "einsum_path": 117, "element": [5, 543], "empti": 118, "empty_lik": 119, "equal": 120, "equat": 541, "erf": 121, "error": 551, "exampl": [0, 4], "except": 541, "exist": 7, "exp": 122, "exp2": 123, "expand_dim": 124, "expm1": 125, "expon": 544, "exponenti": 424, "extens": 2, "extract": 126, "extrema": 544, "ey": 127, "f": 425, "fab": 128, "fft": [10, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "fft2": 130, "fftfreq": 131, "fftn": 132, "fftshift": 133, "fill": 357, "fill_diagon": 147, "find": 544, "finfo": 148, "fix": 149, "flag": 358, "flat": 359, "flatit": 150, "flatnonzero": 151, "flatten": 360, "flip": 152, "fliplr": 153, "flipud": 154, "float": [544, 553], "float_pow": 155, "floor": 156, "floor_divid": 157, "fmax": 158, "fmin": 159, "fmod": 160, "format": 5, "fourier": [6, 10], "from": [4, 7], "from_dlpack": 161, "frombuff": 162, "fromfil": 163, "fromfunct": 164, "fromit": 165, "fromstr": 166, "full": 167, "full_lik": 168, "function": [11, 542, 544, 551, 553], "gamma": 426, "gcd": 169, "gener": [540, 548], "geometr": 427, "geomspac": 170, "get_includ": 171, "gradient": 172, "greater": 173, "greater_equ": 174, "guid": 4, "gumbel": 428, "handl": 544, "heavisid": 175, "helper": 10, "hermitian": 10, "hfft": 134, "higher": 10, "histogram": [176, 552], "histogram_bin_edg": 177, "hsplit": 178, "hstack": 179, "hyperbol": 544, "hypergeometr": 429, "hypot": 180, "i0": 181, "ident": 182, "ifft": 135, "ifft2": 136, "ifftn": 137, "ifftshift": 138, "ihfft": 139, "iinfo": 183, "imag": [184, 361], "implement": 10, "index": [540, 546], "indic": 185, "infin": 542, "inform": [2, 8, 10], "inner": 186, "insert": [187, 540], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 218, "invert": 188, "irfft": 140, "irfft2": 141, "irfftn": 142, "isclos": 189, "iscomplex": 190, "iscomplexobj": 191, "isfinit": 192, "isfortran": 193, "isinf": 194, "isnan": 195, "isneginf": 196, "isposinf": 197, "isreal": 198, "isrealobj": 199, "isscalar": 200, "issubdtyp": 201, "item": [362, 546], "items": 363, "iter": 540, "ix_": 202, "join": 543, "kind": 543, "kron": 203, "laplac": 430, "layout": 546, "lcm": 204, "ldexp": 205, "left_shift": 206, "less": 207, "less_equ": 208, "level": 6, "librari": 0, "like": [540, 543], "linalg": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "linear": [6, 541], "linspac": 239, "loadtxt": 240, "log": 241, "log10": 242, "log1p": 243, "log2": 244, "logaddexp": 245, "logaddexp2": 246, "logarithm": 544, "logic": 542, "logical_and": 247, "logical_not": 248, "logical_or": 249, "logical_xor": 250, "logist": 431, "lognorm": 432, "logseri": 433, "logspac": 251, "logsumexp": 252, "lstsq": 219, "manipul": [543, 546], "mask_indic": 253, "math": 553, "mathemat": 544, "matmul": [220, 254], "matric": 7, "matrix": [7, 541, 546], "matrix_norm": 221, "matrix_pow": 222, "matrix_rank": 223, "matrix_transpos": 255, "max": [256, 365], "maximum": 257, "mean": [258, 366], "median": 259, "memori": 546, "meshgrid": 260, "method": 546, "mgrid": 261, "min": [262, 367], "minimum": 263, "miscellan": [8, 544, 545], "mod": 264, "modf": 265, "modul": [6, 547], "moveaxi": 266, "mt": 364, "multi": [6, 546], "multi_dot": 224, "multinomi": 434, "multipl": 546, "multipli": 267, "multivariate_norm": 435, "nan": 542, "nan_to_num": 268, "nanargmax": 269, "nanargmin": 270, "nancumprod": 271, "nancumsum": 272, "nanmax": 273, "nanmean": 274, "nanmin": 275, "nanprod": 276, "nanstd": 277, "nansum": 278, "nanvar": 279, "nbyte": 368, "ndarrai": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 546], "ndim": [369, 392], "ndindex": 393, "neg": 394, "negative_binomi": 436, "nextaft": 395, "noncentral_chisquar": 437, "noncentral_f": 438, "nonzero": [370, 396], "norm": [225, 541], "normal": [10, 439], "not_equ": 397, "number": [541, 543, 544], "numer": 7, "numpi": [2, 6], "ogrid": 398, "ones": 399, "ones_lik": 400, "oper": [5, 540, 541, 542, 543, 544, 546, 553], "order": 552, "other": [541, 544, 546], "outer": [226, 401], "output": 5, "over": 540, "overview": 3, "pack": 5, "packag": [4, 547], "pad": 402, "parallel": [0, 2], "pareto": 440, "partit": [371, 403], "permut": [441, 548], "permute_dim": 404, "pinv": 227, "place": 405, "point": 544, "poisson": 442, "poly1d": 547, "polynomi": 547, "polyutil": 547, "posit": 406, "pow": 407, "power": [408, 443], "prod": [372, 409], "product": [541, 544], "program": 11, "proj": 410, "ptp": 411, "put": [373, 412], "put_along_axi": 413, "putmask": 414, "python": 4, "qr": 228, "quick": 4, "r": 4, "rad2deg": 415, "radian": 416, "rand": 444, "randint": 445, "randn": 446, "random": [6, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 548], "random_integ": 448, "random_sampl": 449, "randomst": 417, "ranf": 450, "rang": 7, "ration": 544, "ravel": [374, 466], "ravel_multi_index": 467, "rayleigh": 451, "real": [10, 375, 468], "real_if_clos": 469, "rearrang": 543, "reciproc": 470, "reduce_hypot": 471, "refer": [1, 539], "remaind": 472, "remov": 543, "repeat": [376, 473], "requir": 474, "reshap": [377, 475], "resiz": 476, "result_typ": 477, "rfft": 143, "rfft2": 144, "rfftfreq": 145, "rfftn": 146, "right_shift": 478, "rint": 479, "roll": 480, "rollaxi": 481, "rot90": 482, "round": [378, 483, 544], "routin": [7, 8, 10, 540, 543, 544, 545, 549], "row_stack": 484, "rsqrt": 485, "sampl": [6, 452, 548], "scikit": 4, "search": 550, "searchsort": [379, 486], "seed": 453, "select": [487, 546], "shape": [7, 380, 488, 543, 546], "shuffl": 454, "sign": 489, "signbit": 490, "simpl": 548, "sin": 491, "sinc": 492, "sinh": 493, "size": [381, 494], "slogdet": 229, "solv": [230, 541], "sort": [382, 495, 550], "sort_complex": 496, "space": 497, "special": [544, 546, 551], "split": [498, 543], "sqrt": 499, "squar": 500, "squeez": [383, 501], "stack": 502, "standard": 10, "standard_cauchi": 455, "standard_exponenti": 456, "standard_gamma": 457, "standard_norm": 458, "standard_t": 459, "start": 4, "statist": 552, "std": [384, 503], "stride": 385, "subtract": 504, "sum": [386, 505, 544], "summari": 6, "svd": 231, "svdval": 232, "swapax": [387, 506], "sycl": 4, "t": 281, "tabl": 6, "take": [388, 507], "take_along_axi": 508, "tan": 509, "tanh": 510, "target": 4, "tensordot": [233, 511], "tensorinv": 234, "tensorsolv": 235, "test": [4, 8, 542], "tile": [512, 543], "trace": [236, 389, 513], "transform": [6, 10], "transpos": [390, 514, 543], "trapezoid": 515, "tri": 516, "triangular": 460, "trigonometr": [544, 553], "tril": 517, "tril_indic": 518, "tril_indices_from": 519, "trim_zero": 520, "triu": 521, "triu_indic": 522, "triu_indices_from": 523, "true_divid": 524, "trunc": 525, "truth": 542, "twiddl": 553, "type": [8, 9, 542, 546], "ufunc": 553, "uniform": 461, "uniqu": 526, "univers": 553, "unravel_index": 527, "unstack": 528, "unwrap": 529, "util": 545, "valu": [7, 542], "vander": 530, "var": [391, 531], "varianc": 552, "vdot": 532, "vecdot": [237, 533], "vector": 541, "vector_norm": 238, "vonmis": 462, "vsplit": 534, "vstack": 535, "wald": 463, "weibul": 464, "where": 536, "wise": 5, "zero": 537, "zeros_lik": 538, "zipf": 465}})