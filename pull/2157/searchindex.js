Search.setIndex({"alltitles": {"API Reference": [[532, null]], "Adding and removing elements": [[536, "adding-and-removing-elements"]], "Arithmetic": [[540, "arithmetic"]], "Arithmetic operations": [[537, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[539, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[536, null]], "Array attributes": [[539, "array-attributes"]], "Array conversion": [[539, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[539, "array-methods"]], "Array type testing": [[535, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[546, "available-ufuncs"]], "Averages and variances": [[545, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[536, "basic-operations"]], "Basics": [[540, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[546, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[539, "calculation"]], "Changing array shape": [[536, "changing-array-shape"]], "Changing kind of array": [[536, "changing-kind-of-array"]], "Changing number of dimensions": [[536, "changing-number-of-dimensions"]], "Comparison": [[535, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[546, "comparison-functions"]], "Constructing arrays": [[539, "constructing-arrays"]], "Correlations": [[545, "correlations"]], "Counting": [[543, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[539, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[534, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[541, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[544, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[534, "exceptions"]], "Exponents and logarithms": [[537, "exponents-and-logarithms"]], "Extrema finding": [[537, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[546, "floating-functions"]], "Floating point routines": [[537, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[533, "generating-index-arrays"]], "Handling complex numbers": [[537, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[545, "histograms"]], "Hyperbolic functions": [[537, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[539, "indexing-arrays"]], "Indexing routines": [[533, null]], "Indexing-like operations": [[533, "indexing-like-operations"]], "Infinities and NaNs": [[535, "infinities-and-nans"]], "Inserting data into arrays": [[533, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[539, "item-selection-and-manipulation"]], "Iterating over arrays": [[533, "iterating-over-arrays"]], "Joining arrays": [[536, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [534, null]], "Logic Functions": [[535, null]], "Logic operations": [[535, "logic-operations"]], "Math operations": [[546, "math-operations"]], "Mathematical functions": [[537, null]], "Matrix and vector products": [[534, "matrix-and-vector-products"]], "Matrix eigenvalues": [[534, "matrix-eigenvalues"]], "Memory layout": [[539, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [537, "miscellaneous"]], "Miscellaneous routines": [[538, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[539, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[534, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[545, "order-statistics"]], "Other attributes": [[539, "other-attributes"]], "Other matrix operations": [[534, "other-matrix-operations"]], "Other special functions": [[537, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[541, "permutations"]], "Poly1d": [[540, "poly1d"]], "Polynomial Module": [[540, "polynomial-module"]], "Polynomial Package": [[540, "polynomial-package"]], "Polynomials": [[540, null]], "Polyutils": [[540, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[541, null]], "Random generator": [[541, "random-generator"]], "Rational routines": [[537, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[536, "rearranging-elements"]], "Rounding": [[537, "rounding"]], "Routines": [[542, null]], "Searching": [[543, "searching"]], "Shape manipulation": [[539, "shape-manipulation"]], "Simple random data": [[541, "simple-random-data"]], "Solving linear equations": [[534, "solving-linear-equations"]], "Sorting": [[543, "sorting"]], "Sorting, Searching, and Counting": [[543, null]], "Special Functions": [[544, null]], "Special methods": [[539, "special-methods"]], "Splitting arrays": [[536, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[545, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[537, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[536, "tiling-arrays"]], "Transpose-like operations": [[536, "transpose-like-operations"]], "Trigonometric functions": [[537, "trigonometric-functions"], [546, "trigonometric-functions"]], "Truth value testing": [[535, "truth-value-testing"]], "Universal Functions (ufunc)": [[546, null]], "Utility": [[538, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_invert": [[59, null]], "dpnp.bitwise_left_shift": [[60, null]], "dpnp.bitwise_not": [[61, null]], "dpnp.bitwise_or": [[62, null]], "dpnp.bitwise_right_shift": [[63, null]], "dpnp.bitwise_xor": [[64, null]], "dpnp.broadcast_arrays": [[65, null]], "dpnp.broadcast_shapes": [[66, null]], "dpnp.broadcast_to": [[67, null]], "dpnp.byte_bounds": [[68, null]], "dpnp.can_cast": [[69, null]], "dpnp.cbrt": [[70, null]], "dpnp.ceil": [[71, null]], "dpnp.choose": [[72, null]], "dpnp.clip": [[73, null]], "dpnp.column_stack": [[74, null]], "dpnp.concat": [[75, null]], "dpnp.concatenate": [[76, null]], "dpnp.conj": [[77, null]], "dpnp.conjugate": [[78, null]], "dpnp.convolve": [[79, null]], "dpnp.copy": [[80, null]], "dpnp.copysign": [[81, null]], "dpnp.copyto": [[82, null]], "dpnp.corrcoef": [[83, null]], "dpnp.correlate": [[84, null]], "dpnp.cos": [[85, null]], "dpnp.cosh": [[86, null]], "dpnp.count_nonzero": [[87, null]], "dpnp.cov": [[88, null]], "dpnp.cross": [[89, null]], "dpnp.cumlogsumexp": [[90, null]], "dpnp.cumprod": [[91, null]], "dpnp.cumsum": [[92, null]], "dpnp.deg2rad": [[93, null]], "dpnp.degrees": [[94, null]], "dpnp.delete": [[95, null]], "dpnp.diag": [[96, null]], "dpnp.diag_indices": [[97, null]], "dpnp.diag_indices_from": [[98, null]], "dpnp.diagflat": [[99, null]], "dpnp.diagonal": [[100, null]], "dpnp.diff": [[101, null]], "dpnp.digitize": [[102, null]], "dpnp.divide": [[103, null]], "dpnp.dot": [[104, null]], "dpnp.dpnp_array.dpnp_array": [[105, null]], "dpnp.dsplit": [[106, null]], "dpnp.dstack": [[107, null]], "dpnp.dtype": [[108, null]], "dpnp.ediff1d": [[109, null]], "dpnp.einsum": [[110, null]], "dpnp.einsum_path": [[111, null]], "dpnp.empty": [[112, null]], "dpnp.empty_like": [[113, null]], "dpnp.equal": [[114, null]], "dpnp.erf": [[115, null]], "dpnp.exp": [[116, null]], "dpnp.exp2": [[117, null]], "dpnp.expand_dims": [[118, null]], "dpnp.expm1": [[119, null]], "dpnp.extract": [[120, null]], "dpnp.eye": [[121, null]], "dpnp.fabs": [[122, null]], "dpnp.fft.fft": [[123, null]], "dpnp.fft.fft2": [[124, null]], "dpnp.fft.fftfreq": [[125, null]], "dpnp.fft.fftn": [[126, null]], "dpnp.fft.fftshift": [[127, null]], "dpnp.fft.hfft": [[128, null]], "dpnp.fft.ifft": [[129, null]], "dpnp.fft.ifft2": [[130, null]], "dpnp.fft.ifftn": [[131, null]], "dpnp.fft.ifftshift": [[132, null]], "dpnp.fft.ihfft": [[133, null]], "dpnp.fft.irfft": [[134, null]], "dpnp.fft.irfft2": [[135, null]], "dpnp.fft.irfftn": [[136, null]], "dpnp.fft.rfft": [[137, null]], "dpnp.fft.rfft2": [[138, null]], "dpnp.fft.rfftfreq": [[139, null]], "dpnp.fft.rfftn": [[140, null]], "dpnp.fill_diagonal": [[141, null]], "dpnp.finfo": [[142, null]], "dpnp.fix": [[143, null]], "dpnp.flatiter": [[144, null]], "dpnp.flatnonzero": [[145, null]], "dpnp.flip": [[146, null]], "dpnp.fliplr": [[147, null]], "dpnp.flipud": [[148, null]], "dpnp.float_power": [[149, null]], "dpnp.floor": [[150, null]], "dpnp.floor_divide": [[151, null]], "dpnp.fmax": [[152, null]], "dpnp.fmin": [[153, null]], "dpnp.fmod": [[154, null]], "dpnp.from_dlpack": [[155, null]], "dpnp.frombuffer": [[156, null]], "dpnp.fromfile": [[157, null]], "dpnp.fromfunction": [[158, null]], "dpnp.fromiter": [[159, null]], "dpnp.fromstring": [[160, null]], "dpnp.full": [[161, null]], "dpnp.full_like": [[162, null]], "dpnp.gcd": [[163, null]], "dpnp.geomspace": [[164, null]], "dpnp.get_include": [[165, null]], "dpnp.gradient": [[166, null]], "dpnp.greater": [[167, null]], "dpnp.greater_equal": [[168, null]], "dpnp.heaviside": [[169, null]], "dpnp.histogram": [[170, null]], "dpnp.histogram_bin_edges": [[171, null]], "dpnp.hsplit": [[172, null]], "dpnp.hstack": [[173, null]], "dpnp.hypot": [[174, null]], "dpnp.identity": [[175, null]], "dpnp.iinfo": [[176, null]], "dpnp.imag": [[177, null]], "dpnp.indices": [[178, null]], "dpnp.inner": [[179, null]], "dpnp.insert": [[180, null]], "dpnp.invert": [[181, null]], "dpnp.isclose": [[182, null]], "dpnp.iscomplex": [[183, null]], "dpnp.iscomplexobj": [[184, null]], "dpnp.isfinite": [[185, null]], "dpnp.isfortran": [[186, null]], "dpnp.isinf": [[187, null]], "dpnp.isnan": [[188, null]], "dpnp.isneginf": [[189, null]], "dpnp.isposinf": [[190, null]], "dpnp.isreal": [[191, null]], "dpnp.isrealobj": [[192, null]], "dpnp.isscalar": [[193, null]], "dpnp.issubdtype": [[194, null]], "dpnp.ix_": [[195, null]], "dpnp.kron": [[196, null]], "dpnp.lcm": [[197, null]], "dpnp.ldexp": [[198, null]], "dpnp.left_shift": [[199, null]], "dpnp.less": [[200, null]], "dpnp.less_equal": [[201, null]], "dpnp.linalg.cholesky": [[202, null]], "dpnp.linalg.cond": [[203, null]], "dpnp.linalg.cross": [[204, null]], "dpnp.linalg.det": [[205, null]], "dpnp.linalg.diagonal": [[206, null]], "dpnp.linalg.eig": [[207, null]], "dpnp.linalg.eigh": [[208, null]], "dpnp.linalg.eigvals": [[209, null]], "dpnp.linalg.eigvalsh": [[210, null]], "dpnp.linalg.inv": [[211, null]], "dpnp.linalg.lstsq": [[212, null]], "dpnp.linalg.matmul": [[213, null]], "dpnp.linalg.matrix_norm": [[214, null]], "dpnp.linalg.matrix_power": [[215, null]], "dpnp.linalg.matrix_rank": [[216, null]], "dpnp.linalg.multi_dot": [[217, null]], "dpnp.linalg.norm": [[218, null]], "dpnp.linalg.outer": [[219, null]], "dpnp.linalg.pinv": [[220, null]], "dpnp.linalg.qr": [[221, null]], "dpnp.linalg.slogdet": [[222, null]], "dpnp.linalg.solve": [[223, null]], "dpnp.linalg.svd": [[224, null]], "dpnp.linalg.svdvals": [[225, null]], "dpnp.linalg.tensordot": [[226, null]], "dpnp.linalg.tensorinv": [[227, null]], "dpnp.linalg.tensorsolve": [[228, null]], "dpnp.linalg.trace": [[229, null]], "dpnp.linalg.vecdot": [[230, null]], "dpnp.linalg.vector_norm": [[231, null]], "dpnp.linspace": [[232, null]], "dpnp.loadtxt": [[233, null]], "dpnp.log": [[234, null]], "dpnp.log10": [[235, null]], "dpnp.log1p": [[236, null]], "dpnp.log2": [[237, null]], "dpnp.logaddexp": [[238, null]], "dpnp.logaddexp2": [[239, null]], "dpnp.logical_and": [[240, null]], "dpnp.logical_not": [[241, null]], "dpnp.logical_or": [[242, null]], "dpnp.logical_xor": [[243, null]], "dpnp.logspace": [[244, null]], "dpnp.logsumexp": [[245, null]], "dpnp.mask_indices": [[246, null]], "dpnp.matmul": [[247, null]], "dpnp.matrix_transpose": [[248, null]], "dpnp.max": [[249, null]], "dpnp.maximum": [[250, null]], "dpnp.mean": [[251, null]], "dpnp.median": [[252, null]], "dpnp.meshgrid": [[253, null]], "dpnp.mgrid": [[254, null]], "dpnp.min": [[255, null]], "dpnp.minimum": [[256, null]], "dpnp.mod": [[257, null]], "dpnp.modf": [[258, null]], "dpnp.moveaxis": [[259, null]], "dpnp.multiply": [[260, null]], "dpnp.nan_to_num": [[261, null]], "dpnp.nanargmax": [[262, null]], "dpnp.nanargmin": [[263, null]], "dpnp.nancumprod": [[264, null]], "dpnp.nancumsum": [[265, null]], "dpnp.nanmax": [[266, null]], "dpnp.nanmean": [[267, null]], "dpnp.nanmin": [[268, null]], "dpnp.nanprod": [[269, null]], "dpnp.nanstd": [[270, null]], "dpnp.nansum": [[271, null]], "dpnp.nanvar": [[272, null]], "dpnp.ndarray": [[273, null]], "dpnp.ndarray.T": [[274, null]], "dpnp.ndarray.__abs__": [[275, null]], "dpnp.ndarray.__add__": [[276, null]], "dpnp.ndarray.__and__": [[277, null]], "dpnp.ndarray.__bool__": [[278, null]], "dpnp.ndarray.__complex__": [[279, null]], "dpnp.ndarray.__copy__": [[280, null]], "dpnp.ndarray.__eq__": [[281, null]], "dpnp.ndarray.__float__": [[282, null]], "dpnp.ndarray.__floordiv__": [[283, null]], "dpnp.ndarray.__ge__": [[284, null]], "dpnp.ndarray.__getitem__": [[285, null]], "dpnp.ndarray.__gt__": [[286, null]], "dpnp.ndarray.__iadd__": [[287, null]], "dpnp.ndarray.__iand__": [[288, null]], "dpnp.ndarray.__ifloordiv__": [[289, null]], "dpnp.ndarray.__ilshift__": [[290, null]], "dpnp.ndarray.__imatmul__": [[291, null]], "dpnp.ndarray.__imod__": [[292, null]], "dpnp.ndarray.__imul__": [[293, null]], "dpnp.ndarray.__int__": [[294, null]], "dpnp.ndarray.__invert__": [[295, null]], "dpnp.ndarray.__ior__": [[296, null]], "dpnp.ndarray.__ipow__": [[297, null]], "dpnp.ndarray.__irshift__": [[298, null]], "dpnp.ndarray.__isub__": [[299, null]], "dpnp.ndarray.__itruediv__": [[300, null]], "dpnp.ndarray.__ixor__": [[301, null]], "dpnp.ndarray.__le__": [[302, null]], "dpnp.ndarray.__len__": [[303, null]], "dpnp.ndarray.__lshift__": [[304, null]], "dpnp.ndarray.__lt__": [[305, null]], "dpnp.ndarray.__matmul__": [[306, null]], "dpnp.ndarray.__mod__": [[307, null]], "dpnp.ndarray.__mul__": [[308, null]], "dpnp.ndarray.__ne__": [[309, null]], "dpnp.ndarray.__neg__": [[310, null]], "dpnp.ndarray.__new__": [[311, null]], "dpnp.ndarray.__or__": [[312, null]], "dpnp.ndarray.__pos__": [[313, null]], "dpnp.ndarray.__pow__": [[314, null]], "dpnp.ndarray.__radd__": [[315, null]], "dpnp.ndarray.__rand__": [[316, null]], "dpnp.ndarray.__repr__": [[317, null]], "dpnp.ndarray.__rfloordiv__": [[318, null]], "dpnp.ndarray.__rlshift__": [[319, null]], "dpnp.ndarray.__rmatmul__": [[320, null]], "dpnp.ndarray.__rmod__": [[321, null]], "dpnp.ndarray.__rmul__": [[322, null]], "dpnp.ndarray.__ror__": [[323, null]], "dpnp.ndarray.__rpow__": [[324, null]], "dpnp.ndarray.__rrshift__": [[325, null]], "dpnp.ndarray.__rshift__": [[326, null]], "dpnp.ndarray.__rsub__": [[327, null]], "dpnp.ndarray.__rtruediv__": [[328, null]], "dpnp.ndarray.__rxor__": [[329, null]], "dpnp.ndarray.__setitem__": [[330, null]], "dpnp.ndarray.__str__": [[331, null]], "dpnp.ndarray.__sub__": [[332, null]], "dpnp.ndarray.__truediv__": [[333, null]], "dpnp.ndarray.__xor__": [[334, null]], "dpnp.ndarray.all": [[335, null]], "dpnp.ndarray.any": [[336, null]], "dpnp.ndarray.argmax": [[337, null]], "dpnp.ndarray.argmin": [[338, null]], "dpnp.ndarray.argsort": [[339, null]], "dpnp.ndarray.astype": [[340, null]], "dpnp.ndarray.choose": [[341, null]], "dpnp.ndarray.clip": [[342, null]], "dpnp.ndarray.conj": [[343, null]], "dpnp.ndarray.conjugate": [[344, null]], "dpnp.ndarray.copy": [[345, null]], "dpnp.ndarray.cumprod": [[346, null]], "dpnp.ndarray.cumsum": [[347, null]], "dpnp.ndarray.diagonal": [[348, null]], "dpnp.ndarray.dtype": [[349, null]], "dpnp.ndarray.fill": [[350, null]], "dpnp.ndarray.flags": [[351, null]], "dpnp.ndarray.flat": [[352, null]], "dpnp.ndarray.flatten": [[353, null]], "dpnp.ndarray.imag": [[354, null]], "dpnp.ndarray.item": [[355, null]], "dpnp.ndarray.itemsize": [[356, null]], "dpnp.ndarray.mT": [[357, null]], "dpnp.ndarray.max": [[358, null]], "dpnp.ndarray.mean": [[359, null]], "dpnp.ndarray.min": [[360, null]], "dpnp.ndarray.nbytes": [[361, null]], "dpnp.ndarray.ndim": [[362, null]], "dpnp.ndarray.nonzero": [[363, null]], "dpnp.ndarray.partition": [[364, null]], "dpnp.ndarray.prod": [[365, null]], "dpnp.ndarray.put": [[366, null]], "dpnp.ndarray.ravel": [[367, null]], "dpnp.ndarray.real": [[368, null]], "dpnp.ndarray.repeat": [[369, null]], "dpnp.ndarray.reshape": [[370, null]], "dpnp.ndarray.round": [[371, null]], "dpnp.ndarray.searchsorted": [[372, null]], "dpnp.ndarray.shape": [[373, null]], "dpnp.ndarray.size": [[374, null]], "dpnp.ndarray.sort": [[375, null]], "dpnp.ndarray.squeeze": [[376, null]], "dpnp.ndarray.std": [[377, null]], "dpnp.ndarray.strides": [[378, null]], "dpnp.ndarray.sum": [[379, null]], "dpnp.ndarray.swapaxes": [[380, null]], "dpnp.ndarray.take": [[381, null]], "dpnp.ndarray.trace": [[382, null]], "dpnp.ndarray.transpose": [[383, null]], "dpnp.ndarray.var": [[384, null]], "dpnp.ndim": [[385, null]], "dpnp.ndindex": [[386, null]], "dpnp.negative": [[387, null]], "dpnp.nextafter": [[388, null]], "dpnp.nonzero": [[389, null]], "dpnp.not_equal": [[390, null]], "dpnp.ogrid": [[391, null]], "dpnp.ones": [[392, null]], "dpnp.ones_like": [[393, null]], "dpnp.outer": [[394, null]], "dpnp.pad": [[395, null]], "dpnp.partition": [[396, null]], "dpnp.permute_dims": [[397, null]], "dpnp.place": [[398, null]], "dpnp.positive": [[399, null]], "dpnp.pow": [[400, null]], "dpnp.power": [[401, null]], "dpnp.prod": [[402, null]], "dpnp.proj": [[403, null]], "dpnp.ptp": [[404, null]], "dpnp.put": [[405, null]], "dpnp.put_along_axis": [[406, null]], "dpnp.putmask": [[407, null]], "dpnp.rad2deg": [[408, null]], "dpnp.radians": [[409, null]], "dpnp.random.RandomState": [[410, null]], "dpnp.random.beta": [[411, null]], "dpnp.random.binomial": [[412, null]], "dpnp.random.bytes": [[413, null]], "dpnp.random.chisquare": [[414, null]], "dpnp.random.choice": [[415, null]], "dpnp.random.dirichlet": [[416, null]], "dpnp.random.exponential": [[417, null]], "dpnp.random.f": [[418, null]], "dpnp.random.gamma": [[419, null]], "dpnp.random.geometric": [[420, null]], "dpnp.random.gumbel": [[421, null]], "dpnp.random.hypergeometric": [[422, null]], "dpnp.random.laplace": [[423, null]], "dpnp.random.logistic": [[424, null]], "dpnp.random.lognormal": [[425, null]], "dpnp.random.logseries": [[426, null]], "dpnp.random.multinomial": [[427, null]], "dpnp.random.multivariate_normal": [[428, null]], "dpnp.random.negative_binomial": [[429, null]], "dpnp.random.noncentral_chisquare": [[430, null]], "dpnp.random.noncentral_f": [[431, null]], "dpnp.random.normal": [[432, null]], "dpnp.random.pareto": [[433, null]], "dpnp.random.permutation": [[434, null]], "dpnp.random.poisson": [[435, null]], "dpnp.random.power": [[436, null]], "dpnp.random.rand": [[437, null]], "dpnp.random.randint": [[438, null]], "dpnp.random.randn": [[439, null]], "dpnp.random.random": [[440, null]], "dpnp.random.random_integers": [[441, null]], "dpnp.random.random_sample": [[442, null]], "dpnp.random.ranf": [[443, null]], "dpnp.random.rayleigh": [[444, null]], "dpnp.random.sample": [[445, null]], "dpnp.random.seed": [[446, null]], "dpnp.random.shuffle": [[447, null]], "dpnp.random.standard_cauchy": [[448, null]], "dpnp.random.standard_exponential": [[449, null]], "dpnp.random.standard_gamma": [[450, null]], "dpnp.random.standard_normal": [[451, null]], "dpnp.random.standard_t": [[452, null]], "dpnp.random.triangular": [[453, null]], "dpnp.random.uniform": [[454, null]], "dpnp.random.vonmises": [[455, null]], "dpnp.random.wald": [[456, null]], "dpnp.random.weibull": [[457, null]], "dpnp.random.zipf": [[458, null]], "dpnp.ravel": [[459, null]], "dpnp.ravel_multi_index": [[460, null]], "dpnp.real": [[461, null]], "dpnp.real_if_close": [[462, null]], "dpnp.reciprocal": [[463, null]], "dpnp.reduce_hypot": [[464, null]], "dpnp.remainder": [[465, null]], "dpnp.repeat": [[466, null]], "dpnp.require": [[467, null]], "dpnp.reshape": [[468, null]], "dpnp.resize": [[469, null]], "dpnp.result_type": [[470, null]], "dpnp.right_shift": [[471, null]], "dpnp.rint": [[472, null]], "dpnp.roll": [[473, null]], "dpnp.rollaxis": [[474, null]], "dpnp.rot90": [[475, null]], "dpnp.round": [[476, null]], "dpnp.row_stack": [[477, null]], "dpnp.rsqrt": [[478, null]], "dpnp.searchsorted": [[479, null]], "dpnp.select": [[480, null]], "dpnp.shape": [[481, null]], "dpnp.sign": [[482, null]], "dpnp.signbit": [[483, null]], "dpnp.sin": [[484, null]], "dpnp.sinc": [[485, null]], "dpnp.sinh": [[486, null]], "dpnp.size": [[487, null]], "dpnp.sort": [[488, null]], "dpnp.sort_complex": [[489, null]], "dpnp.spacing": [[490, null]], "dpnp.split": [[491, null]], "dpnp.sqrt": [[492, null]], "dpnp.square": [[493, null]], "dpnp.squeeze": [[494, null]], "dpnp.stack": [[495, null]], "dpnp.std": [[496, null]], "dpnp.subtract": [[497, null]], "dpnp.sum": [[498, null]], "dpnp.swapaxes": [[499, null]], "dpnp.take": [[500, null]], "dpnp.take_along_axis": [[501, null]], "dpnp.tan": [[502, null]], "dpnp.tanh": [[503, null]], "dpnp.tensordot": [[504, null]], "dpnp.tile": [[505, null]], "dpnp.trace": [[506, null]], "dpnp.transpose": [[507, null]], "dpnp.trapezoid": [[508, null]], "dpnp.tri": [[509, null]], "dpnp.tril": [[510, null]], "dpnp.tril_indices": [[511, null]], "dpnp.tril_indices_from": [[512, null]], "dpnp.trim_zeros": [[513, null]], "dpnp.triu": [[514, null]], "dpnp.triu_indices": [[515, null]], "dpnp.triu_indices_from": [[516, null]], "dpnp.true_divide": [[517, null]], "dpnp.trunc": [[518, null]], "dpnp.unique": [[519, null]], "dpnp.unravel_index": [[520, null]], "dpnp.unstack": [[521, null]], "dpnp.unwrap": [[522, null]], "dpnp.vander": [[523, null]], "dpnp.var": [[524, null]], "dpnp.vdot": [[525, null]], "dpnp.vecdot": [[526, null]], "dpnp.vsplit": [[527, null]], "dpnp.vstack": [[528, null]], "dpnp.where": [[529, null]], "dpnp.zeros": [[530, null]], "dpnp.zeros_like": [[531, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.ndindex", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.ndindex.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[108, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[108, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[108, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[108, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__iter__", false]], "__iter__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[108, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[108, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[108, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[108, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__next__", false]], "__next__() (dpnp.ndindex method)": [[386, "dpnp.ndindex.__next__", false]], "__or__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[144, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[333, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[334, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[108, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[335, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[336, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[337, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[338, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[339, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[340, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[108, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[411, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[412, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[59, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[60, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[61, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[62, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[63, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[64, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[65, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[66, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[67, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[68, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[108, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[413, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[69, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[70, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[71, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[108, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[414, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[415, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[202, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[341, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[72, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[342, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[73, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[74, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[75, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[76, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[203, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[343, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[77, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[344, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[78, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[79, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[345, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[80, "dpnp.copy", false]], "copysign() (in module dpnp)": [[81, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[82, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[83, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[84, "dpnp.correlate", false]], "cos() (in module dpnp)": [[85, "dpnp.cos", false]], "cosh() (in module dpnp)": [[86, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[87, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[88, "dpnp.cov", false]], "cross() (in module dpnp)": [[89, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[204, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[90, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[346, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[91, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[347, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[92, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[93, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[94, "dpnp.degrees", false]], "delete() (in module dpnp)": [[95, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[108, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[205, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[96, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[97, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[98, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[99, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[348, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[100, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[206, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[101, "dpnp.diff", false]], "digitize() (in module dpnp)": [[102, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[416, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[103, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[104, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[105, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[106, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[107, "dpnp.dstack", false]], "dtype (class in dpnp)": [[108, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[349, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[109, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[207, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[208, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[209, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[210, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[110, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[111, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[112, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[113, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[114, "dpnp.equal", false]], "erf() (in module dpnp)": [[115, "dpnp.erf", false]], "exp() (in module dpnp)": [[116, "dpnp.exp", false]], "exp2() (in module dpnp)": [[117, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[118, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[119, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[417, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[120, "dpnp.extract", false]], "eye() (in module dpnp)": [[121, "dpnp.eye", false]], "f() (in module dpnp.random)": [[418, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[122, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[123, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[124, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[125, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[126, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[127, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[108, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[350, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[141, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[142, "dpnp.finfo", false]], "fix() (in module dpnp)": [[143, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[108, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[351, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[352, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[144, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[145, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[353, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[146, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[147, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[148, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[149, "dpnp.float_power", false]], "floor() (in module dpnp)": [[150, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[151, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[152, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[153, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[154, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[155, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[156, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[157, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[158, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[159, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[160, "dpnp.fromstring", false]], "full() (in module dpnp)": [[161, "dpnp.full", false]], "full_like() (in module dpnp)": [[162, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[419, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[163, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[420, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[164, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[165, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[166, "dpnp.gradient", false]], "greater() (in module dpnp)": [[167, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[168, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[421, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[108, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[169, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[128, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[170, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[171, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[172, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[173, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[422, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[174, "dpnp.hypot", false]], "identity() (in module dpnp)": [[175, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[129, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[130, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[131, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[132, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[133, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[176, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[354, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[177, "dpnp.imag", false]], "indices() (in module dpnp)": [[178, "dpnp.indices", false]], "inner() (in module dpnp)": [[179, "dpnp.inner", false]], "insert() (in module dpnp)": [[180, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[211, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[181, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[134, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[135, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[136, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[108, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[108, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[182, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[183, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[184, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[185, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[186, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[187, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[188, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[108, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[189, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[190, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[191, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[192, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[193, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[194, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[355, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[108, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[356, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[195, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[108, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[196, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[423, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[197, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[198, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[199, "dpnp.left_shift", false]], "less() (in module dpnp)": [[200, "dpnp.less", false]], "less_equal() (in module dpnp)": [[201, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[232, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[233, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[234, "dpnp.log", false]], "log10() (in module dpnp)": [[235, "dpnp.log10", false]], "log1p() (in module dpnp)": [[236, "dpnp.log1p", false]], "log2() (in module dpnp)": [[237, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[238, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[239, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[240, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[241, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[242, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[243, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[424, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[425, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[426, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[244, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[245, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[212, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[246, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[247, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[213, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[214, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[215, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[216, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[248, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[358, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[249, "dpnp.max", false]], "maximum() (in module dpnp)": [[250, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[359, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[251, "dpnp.mean", false]], "median() (in module dpnp)": [[252, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[253, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[108, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[254, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[360, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[255, "dpnp.min", false]], "minimum() (in module dpnp)": [[256, "dpnp.minimum", false]], "mod() (in module dpnp)": [[257, "dpnp.mod", false]], "modf() (in module dpnp)": [[258, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[259, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[357, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[217, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[427, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[260, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[428, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[108, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[108, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[261, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[262, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[263, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[264, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[265, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[266, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[267, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[268, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[269, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[270, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[271, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[272, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[361, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[273, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[108, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[362, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[385, "dpnp.ndim", false]], "ndincr() (dpnp.ndindex method)": [[386, "dpnp.ndindex.ndincr", false]], "ndindex (class in dpnp)": [[386, "dpnp.ndindex", false]], "negative() (in module dpnp)": [[387, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[429, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[108, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[388, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[430, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[431, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[363, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[389, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[218, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[432, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[390, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[108, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[391, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[392, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[393, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[394, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[219, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[395, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[433, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[364, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[396, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[434, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[397, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[220, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[398, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[435, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[399, "dpnp.positive", false]], "pow() (in module dpnp)": [[400, "dpnp.pow", false]], "power() (in module dpnp)": [[401, "dpnp.power", false]], "power() (in module dpnp.random)": [[436, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[365, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[402, "dpnp.prod", false]], "proj() (in module dpnp)": [[403, "dpnp.proj", false]], "ptp() (in module dpnp)": [[404, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[366, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[405, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[406, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[407, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[221, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[408, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[409, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[437, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[438, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[439, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[440, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[441, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[442, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[410, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[443, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[367, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[459, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[460, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[444, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[368, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[461, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[462, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[463, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[464, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[465, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[369, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[466, "dpnp.repeat", false]], "require() (in module dpnp)": [[467, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[370, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[468, "dpnp.reshape", false]], "resize() (in module dpnp)": [[469, "dpnp.resize", false]], "result_type() (in module dpnp)": [[470, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[137, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[138, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[139, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[140, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[471, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[472, "dpnp.rint", false]], "roll() (in module dpnp)": [[473, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[474, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[475, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[371, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[476, "dpnp.round", false]], "row_stack() (in module dpnp)": [[477, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[478, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[445, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[372, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[479, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[446, "dpnp.random.seed", false]], "select() (in module dpnp)": [[480, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[108, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[373, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[481, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[447, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[482, "dpnp.sign", false]], "signbit() (in module dpnp)": [[483, "dpnp.signbit", false]], "sin() (in module dpnp)": [[484, "dpnp.sin", false]], "sinc() (in module dpnp)": [[485, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[486, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[374, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[487, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[222, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[223, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[375, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[488, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[489, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[490, "dpnp.spacing", false]], "split() (in module dpnp)": [[491, "dpnp.split", false]], "sqrt() (in module dpnp)": [[492, "dpnp.sqrt", false]], "square() (in module dpnp)": [[493, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[376, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[494, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[495, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[448, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[449, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[450, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[451, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[452, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[377, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[496, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[108, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[378, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[108, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[497, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[379, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[498, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[224, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[225, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[380, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[499, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[274, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[381, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[500, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[501, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[502, "dpnp.tan", false]], "tanh() (in module dpnp)": [[503, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[504, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[226, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[227, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[228, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[505, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[382, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[506, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[229, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[383, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[507, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[508, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[509, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[453, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[510, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[511, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[512, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[513, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[514, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[515, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[516, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[517, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[518, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[108, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[410, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[454, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[519, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[520, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[521, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[522, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[105, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[523, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[105, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[384, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[524, "dpnp.var", false]], "vdot() (in module dpnp)": [[525, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[526, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[230, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[231, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[455, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[527, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[528, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[456, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[457, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[529, "dpnp.where", false]], "zeros() (in module dpnp)": [[530, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[531, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[458, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_invert"], [60, 1, 1, "", "bitwise_left_shift"], [61, 1, 1, "", "bitwise_not"], [62, 1, 1, "", "bitwise_or"], [63, 1, 1, "", "bitwise_right_shift"], [64, 1, 1, "", "bitwise_xor"], [65, 1, 1, "", "broadcast_arrays"], [66, 1, 1, "", "broadcast_shapes"], [67, 1, 1, "", "broadcast_to"], [68, 1, 1, "", "byte_bounds"], [69, 1, 1, "", "can_cast"], [70, 1, 1, "", "cbrt"], [71, 1, 1, "", "ceil"], [72, 1, 1, "", "choose"], [73, 1, 1, "", "clip"], [74, 1, 1, "", "column_stack"], [75, 1, 1, "", "concat"], [76, 1, 1, "", "concatenate"], [77, 1, 1, "", "conj"], [78, 1, 1, "", "conjugate"], [79, 1, 1, "", "convolve"], [80, 1, 1, "", "copy"], [81, 1, 1, "", "copysign"], [82, 1, 1, "", "copyto"], [83, 1, 1, "", "corrcoef"], [84, 1, 1, "", "correlate"], [85, 1, 1, "", "cos"], [86, 1, 1, "", "cosh"], [87, 1, 1, "", "count_nonzero"], [88, 1, 1, "", "cov"], [89, 1, 1, "", "cross"], [90, 1, 1, "", "cumlogsumexp"], [91, 1, 1, "", "cumprod"], [92, 1, 1, "", "cumsum"], [93, 1, 1, "", "deg2rad"], [94, 1, 1, "", "degrees"], [95, 1, 1, "", "delete"], [96, 1, 1, "", "diag"], [97, 1, 1, "", "diag_indices"], [98, 1, 1, "", "diag_indices_from"], [99, 1, 1, "", "diagflat"], [100, 1, 1, "", "diagonal"], [101, 1, 1, "", "diff"], [102, 1, 1, "", "digitize"], [103, 1, 1, "", "divide"], [104, 1, 1, "", "dot"], [106, 1, 1, "", "dsplit"], [107, 1, 1, "", "dstack"], [108, 2, 1, "", "dtype"], [109, 1, 1, "", "ediff1d"], [110, 1, 1, "", "einsum"], [111, 1, 1, "", "einsum_path"], [112, 1, 1, "", "empty"], [113, 1, 1, "", "empty_like"], [114, 1, 1, "", "equal"], [115, 1, 1, "", "erf"], [116, 1, 1, "", "exp"], [117, 1, 1, "", "exp2"], [118, 1, 1, "", "expand_dims"], [119, 1, 1, "", "expm1"], [120, 1, 1, "", "extract"], [121, 1, 1, "", "eye"], [122, 1, 1, "", "fabs"], [141, 1, 1, "", "fill_diagonal"], [142, 1, 1, "", "finfo"], [143, 1, 1, "", "fix"], [144, 2, 1, "", "flatiter"], [145, 1, 1, "", "flatnonzero"], [146, 1, 1, "", "flip"], [147, 1, 1, "", "fliplr"], [148, 1, 1, "", "flipud"], [149, 1, 1, "", "float_power"], [150, 1, 1, "", "floor"], [151, 1, 1, "", "floor_divide"], [152, 1, 1, "", "fmax"], [153, 1, 1, "", "fmin"], [154, 1, 1, "", "fmod"], [155, 1, 1, "", "from_dlpack"], [156, 1, 1, "", "frombuffer"], [157, 1, 1, "", "fromfile"], [158, 1, 1, "", "fromfunction"], [159, 1, 1, "", "fromiter"], [160, 1, 1, "", "fromstring"], [161, 1, 1, "", "full"], [162, 1, 1, "", "full_like"], [163, 1, 1, "", "gcd"], [164, 1, 1, "", "geomspace"], [165, 1, 1, "", "get_include"], [166, 1, 1, "", "gradient"], [167, 1, 1, "", "greater"], [168, 1, 1, "", "greater_equal"], [169, 1, 1, "", "heaviside"], [170, 1, 1, "", "histogram"], [171, 1, 1, "", "histogram_bin_edges"], [172, 1, 1, "", "hsplit"], [173, 1, 1, "", "hstack"], [174, 1, 1, "", "hypot"], [175, 1, 1, "", "identity"], [176, 1, 1, "", "iinfo"], [177, 1, 1, "", "imag"], [178, 1, 1, "", "indices"], [179, 1, 1, "", "inner"], [180, 1, 1, "", "insert"], [181, 1, 1, "", "invert"], [182, 1, 1, "", "isclose"], [183, 1, 1, "", "iscomplex"], [184, 1, 1, "", "iscomplexobj"], [185, 1, 1, "", "isfinite"], [186, 1, 1, "", "isfortran"], [187, 1, 1, "", "isinf"], [188, 1, 1, "", "isnan"], [189, 1, 1, "", "isneginf"], [190, 1, 1, "", "isposinf"], [191, 1, 1, "", "isreal"], [192, 1, 1, "", "isrealobj"], [193, 1, 1, "", "isscalar"], [194, 1, 1, "", "issubdtype"], [195, 1, 1, "", "ix_"], [196, 1, 1, "", "kron"], [197, 1, 1, "", "lcm"], [198, 1, 1, "", "ldexp"], [199, 1, 1, "", "left_shift"], [200, 1, 1, "", "less"], [201, 1, 1, "", "less_equal"], [232, 1, 1, "", "linspace"], [233, 1, 1, "", "loadtxt"], [234, 1, 1, "", "log"], [235, 1, 1, "", "log10"], [236, 1, 1, "", "log1p"], [237, 1, 1, "", "log2"], [238, 1, 1, "", "logaddexp"], [239, 1, 1, "", "logaddexp2"], [240, 1, 1, "", "logical_and"], [241, 1, 1, "", "logical_not"], [242, 1, 1, "", "logical_or"], [243, 1, 1, "", "logical_xor"], [244, 1, 1, "", "logspace"], [245, 1, 1, "", "logsumexp"], [246, 1, 1, "", "mask_indices"], [247, 1, 1, "", "matmul"], [248, 1, 1, "", "matrix_transpose"], [249, 1, 1, "", "max"], [250, 1, 1, "", "maximum"], [251, 1, 1, "", "mean"], [252, 1, 1, "", "median"], [253, 1, 1, "", "meshgrid"], [254, 5, 1, "", "mgrid"], [255, 1, 1, "", "min"], [256, 1, 1, "", "minimum"], [257, 1, 1, "", "mod"], [258, 1, 1, "", "modf"], [259, 1, 1, "", "moveaxis"], [260, 1, 1, "", "multiply"], [261, 1, 1, "", "nan_to_num"], [262, 1, 1, "", "nanargmax"], [263, 1, 1, "", "nanargmin"], [264, 1, 1, "", "nancumprod"], [265, 1, 1, "", "nancumsum"], [266, 1, 1, "", "nanmax"], [267, 1, 1, "", "nanmean"], [268, 1, 1, "", "nanmin"], [269, 1, 1, "", "nanprod"], [270, 1, 1, "", "nanstd"], [271, 1, 1, "", "nansum"], [272, 1, 1, "", "nanvar"], [273, 3, 1, "", "ndarray"], [385, 1, 1, "", "ndim"], [386, 2, 1, "", "ndindex"], [387, 1, 1, "", "negative"], [388, 1, 1, "", "nextafter"], [389, 1, 1, "", "nonzero"], [390, 1, 1, "", "not_equal"], [391, 5, 1, "", "ogrid"], [392, 1, 1, "", "ones"], [393, 1, 1, "", "ones_like"], [394, 1, 1, "", "outer"], [395, 1, 1, "", "pad"], [396, 1, 1, "", "partition"], [397, 1, 1, "", "permute_dims"], [398, 1, 1, "", "place"], [399, 1, 1, "", "positive"], [400, 1, 1, "", "pow"], [401, 1, 1, "", "power"], [402, 1, 1, "", "prod"], [403, 1, 1, "", "proj"], [404, 1, 1, "", "ptp"], [405, 1, 1, "", "put"], [406, 1, 1, "", "put_along_axis"], [407, 1, 1, "", "putmask"], [408, 1, 1, "", "rad2deg"], [409, 1, 1, "", "radians"], [459, 1, 1, "", "ravel"], [460, 1, 1, "", "ravel_multi_index"], [461, 1, 1, "", "real"], [462, 1, 1, "", "real_if_close"], [463, 1, 1, "", "reciprocal"], [464, 1, 1, "", "reduce_hypot"], [465, 1, 1, "", "remainder"], [466, 1, 1, "", "repeat"], [467, 1, 1, "", "require"], [468, 1, 1, "", "reshape"], [469, 1, 1, "", "resize"], [470, 1, 1, "", "result_type"], [471, 1, 1, "", "right_shift"], [472, 1, 1, "", "rint"], [473, 1, 1, "", "roll"], [474, 1, 1, "", "rollaxis"], [475, 1, 1, "", "rot90"], [476, 1, 1, "", "round"], [477, 1, 1, "", "row_stack"], [478, 1, 1, "", "rsqrt"], [479, 1, 1, "", "searchsorted"], [480, 1, 1, "", "select"], [481, 1, 1, "", "shape"], [482, 1, 1, "", "sign"], [483, 1, 1, "", "signbit"], [484, 1, 1, "", "sin"], [485, 1, 1, "", "sinc"], [486, 1, 1, "", "sinh"], [487, 1, 1, "", "size"], [488, 1, 1, "", "sort"], [489, 1, 1, "", "sort_complex"], [490, 1, 1, "", "spacing"], [491, 1, 1, "", "split"], [492, 1, 1, "", "sqrt"], [493, 1, 1, "", "square"], [494, 1, 1, "", "squeeze"], [495, 1, 1, "", "stack"], [496, 1, 1, "", "std"], [497, 1, 1, "", "subtract"], [498, 1, 1, "", "sum"], [499, 1, 1, "", "swapaxes"], [500, 1, 1, "", "take"], [501, 1, 1, "", "take_along_axis"], [502, 1, 1, "", "tan"], [503, 1, 1, "", "tanh"], [504, 1, 1, "", "tensordot"], [505, 1, 1, "", "tile"], [506, 1, 1, "", "trace"], [507, 1, 1, "", "transpose"], [508, 1, 1, "", "trapezoid"], [509, 1, 1, "", "tri"], [510, 1, 1, "", "tril"], [511, 1, 1, "", "tril_indices"], [512, 1, 1, "", "tril_indices_from"], [513, 1, 1, "", "trim_zeros"], [514, 1, 1, "", "triu"], [515, 1, 1, "", "triu_indices"], [516, 1, 1, "", "triu_indices_from"], [517, 1, 1, "", "true_divide"], [518, 1, 1, "", "trunc"], [519, 1, 1, "", "unique"], [520, 1, 1, "", "unravel_index"], [521, 1, 1, "", "unstack"], [522, 1, 1, "", "unwrap"], [523, 1, 1, "", "vander"], [524, 1, 1, "", "var"], [525, 1, 1, "", "vdot"], [526, 1, 1, "", "vecdot"], [527, 1, 1, "", "vsplit"], [528, 1, 1, "", "vstack"], [529, 1, 1, "", "where"], [530, 1, 1, "", "zeros"], [531, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[105, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[105, 3, 1, "", "T"], [105, 4, 1, "", "__eq__"], [105, 4, 1, "", "__ge__"], [105, 4, 1, "", "__getitem__"], [105, 4, 1, "", "__gt__"], [105, 4, 1, "", "__le__"], [105, 4, 1, "", "__len__"], [105, 4, 1, "", "__lt__"], [105, 4, 1, "", "__ne__"], [105, 4, 1, "", "__setitem__"], [105, 4, 1, "", "all"], [105, 4, 1, "", "any"], [105, 4, 1, "", "argmax"], [105, 4, 1, "", "argmin"], [105, 4, 1, "", "argsort"], [105, 4, 1, "", "asnumpy"], [105, 4, 1, "", "astype"], [105, 4, 1, "", "choose"], [105, 4, 1, "", "clip"], [105, 4, 1, "", "conj"], [105, 4, 1, "", "conjugate"], [105, 4, 1, "", "copy"], [105, 4, 1, "", "cumprod"], [105, 4, 1, "", "cumsum"], [105, 3, 1, "", "device"], [105, 4, 1, "", "diagonal"], [105, 4, 1, "", "dot"], [105, 3, 1, "", "dtype"], [105, 4, 1, "", "fill"], [105, 3, 1, "", "flags"], [105, 3, 1, "", "flat"], [105, 4, 1, "", "flatten"], [105, 4, 1, "", "get_array"], [105, 3, 1, "", "imag"], [105, 4, 1, "", "item"], [105, 3, 1, "", "itemsize"], [105, 3, 1, "", "mT"], [105, 4, 1, "", "max"], [105, 4, 1, "", "mean"], [105, 4, 1, "", "min"], [105, 3, 1, "", "nbytes"], [105, 3, 1, "", "ndim"], [105, 4, 1, "", "nonzero"], [105, 4, 1, "", "partition"], [105, 4, 1, "", "prod"], [105, 4, 1, "", "put"], [105, 4, 1, "", "ravel"], [105, 3, 1, "", "real"], [105, 4, 1, "", "repeat"], [105, 4, 1, "", "reshape"], [105, 4, 1, "", "round"], [105, 4, 1, "", "searchsorted"], [105, 3, 1, "", "shape"], [105, 3, 1, "", "size"], [105, 4, 1, "", "sort"], [105, 4, 1, "", "squeeze"], [105, 4, 1, "", "std"], [105, 3, 1, "", "strides"], [105, 4, 1, "", "sum"], [105, 4, 1, "", "swapaxes"], [105, 3, 1, "", "sycl_context"], [105, 3, 1, "", "sycl_device"], [105, 3, 1, "", "sycl_queue"], [105, 4, 1, "", "take"], [105, 4, 1, "", "to_device"], [105, 4, 1, "", "trace"], [105, 4, 1, "", "transpose"], [105, 3, 1, "", "usm_type"], [105, 4, 1, "", "var"]], "dpnp.dtype": [[108, 4, 1, "", "__eq__"], [108, 4, 1, "", "__ge__"], [108, 4, 1, "", "__getitem__"], [108, 4, 1, "", "__gt__"], [108, 4, 1, "", "__le__"], [108, 4, 1, "", "__len__"], [108, 4, 1, "", "__lt__"], [108, 4, 1, "", "__ne__"], [108, 3, 1, "", "alignment"], [108, 3, 1, "", "base"], [108, 3, 1, "", "byteorder"], [108, 3, 1, "", "char"], [108, 3, 1, "", "descr"], [108, 3, 1, "", "fields"], [108, 3, 1, "", "flags"], [108, 3, 1, "", "hasobject"], [108, 3, 1, "", "isalignedstruct"], [108, 3, 1, "", "isbuiltin"], [108, 3, 1, "", "isnative"], [108, 3, 1, "", "itemsize"], [108, 3, 1, "", "kind"], [108, 3, 1, "", "metadata"], [108, 3, 1, "", "name"], [108, 3, 1, "", "names"], [108, 3, 1, "", "ndim"], [108, 4, 1, "", "newbyteorder"], [108, 3, 1, "", "num"], [108, 3, 1, "", "shape"], [108, 3, 1, "", "str"], [108, 3, 1, "", "subdtype"], [108, 3, 1, "", "type"]], "dpnp.fft": [[123, 1, 1, "", "fft"], [124, 1, 1, "", "fft2"], [125, 1, 1, "", "fftfreq"], [126, 1, 1, "", "fftn"], [127, 1, 1, "", "fftshift"], [128, 1, 1, "", "hfft"], [129, 1, 1, "", "ifft"], [130, 1, 1, "", "ifft2"], [131, 1, 1, "", "ifftn"], [132, 1, 1, "", "ifftshift"], [133, 1, 1, "", "ihfft"], [134, 1, 1, "", "irfft"], [135, 1, 1, "", "irfft2"], [136, 1, 1, "", "irfftn"], [137, 1, 1, "", "rfft"], [138, 1, 1, "", "rfft2"], [139, 1, 1, "", "rfftfreq"], [140, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[144, 4, 1, "", "__eq__"], [144, 4, 1, "", "__ge__"], [144, 4, 1, "", "__getitem__"], [144, 4, 1, "", "__gt__"], [144, 4, 1, "", "__iter__"], [144, 4, 1, "", "__le__"], [144, 4, 1, "", "__lt__"], [144, 4, 1, "", "__ne__"], [144, 4, 1, "", "__next__"], [144, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[202, 1, 1, "", "cholesky"], [203, 1, 1, "", "cond"], [204, 1, 1, "", "cross"], [205, 1, 1, "", "det"], [206, 1, 1, "", "diagonal"], [207, 1, 1, "", "eig"], [208, 1, 1, "", "eigh"], [209, 1, 1, "", "eigvals"], [210, 1, 1, "", "eigvalsh"], [211, 1, 1, "", "inv"], [212, 1, 1, "", "lstsq"], [213, 1, 1, "", "matmul"], [214, 1, 1, "", "matrix_norm"], [215, 1, 1, "", "matrix_power"], [216, 1, 1, "", "matrix_rank"], [217, 1, 1, "", "multi_dot"], [218, 1, 1, "", "norm"], [219, 1, 1, "", "outer"], [220, 1, 1, "", "pinv"], [221, 1, 1, "", "qr"], [222, 1, 1, "", "slogdet"], [223, 1, 1, "", "solve"], [224, 1, 1, "", "svd"], [225, 1, 1, "", "svdvals"], [226, 1, 1, "", "tensordot"], [227, 1, 1, "", "tensorinv"], [228, 1, 1, "", "tensorsolve"], [229, 1, 1, "", "trace"], [230, 1, 1, "", "vecdot"], [231, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[274, 6, 1, "", "T"], [275, 4, 1, "", "__abs__"], [276, 4, 1, "", "__add__"], [277, 4, 1, "", "__and__"], [278, 4, 1, "", "__bool__"], [279, 4, 1, "", "__complex__"], [280, 4, 1, "", "__copy__"], [281, 4, 1, "", "__eq__"], [282, 4, 1, "", "__float__"], [283, 4, 1, "", "__floordiv__"], [284, 4, 1, "", "__ge__"], [285, 4, 1, "", "__getitem__"], [286, 4, 1, "", "__gt__"], [287, 4, 1, "", "__iadd__"], [288, 4, 1, "", "__iand__"], [289, 4, 1, "", "__ifloordiv__"], [290, 4, 1, "", "__ilshift__"], [291, 4, 1, "", "__imatmul__"], [292, 4, 1, "", "__imod__"], [293, 4, 1, "", "__imul__"], [294, 4, 1, "", "__int__"], [295, 4, 1, "", "__invert__"], [296, 4, 1, "", "__ior__"], [297, 4, 1, "", "__ipow__"], [298, 4, 1, "", "__irshift__"], [299, 4, 1, "", "__isub__"], [300, 4, 1, "", "__itruediv__"], [301, 4, 1, "", "__ixor__"], [302, 4, 1, "", "__le__"], [303, 4, 1, "", "__len__"], [304, 4, 1, "", "__lshift__"], [305, 4, 1, "", "__lt__"], [306, 4, 1, "", "__matmul__"], [307, 4, 1, "", "__mod__"], [308, 4, 1, "", "__mul__"], [309, 4, 1, "", "__ne__"], [310, 4, 1, "", "__neg__"], [311, 4, 1, "", "__new__"], [312, 4, 1, "", "__or__"], [313, 4, 1, "", "__pos__"], [314, 4, 1, "", "__pow__"], [315, 4, 1, "", "__radd__"], [316, 4, 1, "", "__rand__"], [317, 4, 1, "", "__repr__"], [318, 4, 1, "", "__rfloordiv__"], [319, 4, 1, "", "__rlshift__"], [320, 4, 1, "", "__rmatmul__"], [321, 4, 1, "", "__rmod__"], [322, 4, 1, "", "__rmul__"], [323, 4, 1, "", "__ror__"], [324, 4, 1, "", "__rpow__"], [325, 4, 1, "", "__rrshift__"], [326, 4, 1, "", "__rshift__"], [327, 4, 1, "", "__rsub__"], [328, 4, 1, "", "__rtruediv__"], [329, 4, 1, "", "__rxor__"], [330, 4, 1, "", "__setitem__"], [331, 4, 1, "", "__str__"], [332, 4, 1, "", "__sub__"], [333, 4, 1, "", "__truediv__"], [334, 4, 1, "", "__xor__"], [335, 4, 1, "", "all"], [336, 4, 1, "", "any"], [337, 4, 1, "", "argmax"], [338, 4, 1, "", "argmin"], [339, 4, 1, "", "argsort"], [340, 4, 1, "", "astype"], [341, 4, 1, "", "choose"], [342, 4, 1, "", "clip"], [343, 4, 1, "", "conj"], [344, 4, 1, "", "conjugate"], [345, 4, 1, "", "copy"], [346, 4, 1, "", "cumprod"], [347, 4, 1, "", "cumsum"], [348, 4, 1, "", "diagonal"], [349, 6, 1, "", "dtype"], [350, 4, 1, "", "fill"], [351, 6, 1, "", "flags"], [352, 6, 1, "", "flat"], [353, 4, 1, "", "flatten"], [354, 6, 1, "", "imag"], [355, 4, 1, "", "item"], [356, 6, 1, "", "itemsize"], [357, 6, 1, "", "mT"], [358, 4, 1, "", "max"], [359, 4, 1, "", "mean"], [360, 4, 1, "", "min"], [361, 6, 1, "", "nbytes"], [362, 6, 1, "", "ndim"], [363, 4, 1, "", "nonzero"], [364, 4, 1, "", "partition"], [365, 4, 1, "", "prod"], [366, 4, 1, "", "put"], [367, 4, 1, "", "ravel"], [368, 6, 1, "", "real"], [369, 4, 1, "", "repeat"], [370, 4, 1, "", "reshape"], [371, 4, 1, "", "round"], [372, 4, 1, "", "searchsorted"], [373, 6, 1, "", "shape"], [374, 6, 1, "", "size"], [375, 4, 1, "", "sort"], [376, 4, 1, "", "squeeze"], [377, 4, 1, "", "std"], [378, 6, 1, "", "strides"], [379, 4, 1, "", "sum"], [380, 4, 1, "", "swapaxes"], [381, 4, 1, "", "take"], [382, 4, 1, "", "trace"], [383, 4, 1, "", "transpose"], [384, 4, 1, "", "var"]], "dpnp.ndindex": [[386, 4, 1, "", "__eq__"], [386, 4, 1, "", "__ge__"], [386, 4, 1, "", "__gt__"], [386, 4, 1, "", "__iter__"], [386, 4, 1, "", "__le__"], [386, 4, 1, "", "__lt__"], [386, 4, 1, "", "__ne__"], [386, 4, 1, "", "__next__"], [386, 4, 1, "", "ndincr"]], "dpnp.random": [[410, 2, 1, "", "RandomState"], [411, 1, 1, "", "beta"], [412, 1, 1, "", "binomial"], [413, 1, 1, "", "bytes"], [414, 1, 1, "", "chisquare"], [415, 1, 1, "", "choice"], [416, 1, 1, "", "dirichlet"], [417, 1, 1, "", "exponential"], [418, 1, 1, "", "f"], [419, 1, 1, "", "gamma"], [420, 1, 1, "", "geometric"], [421, 1, 1, "", "gumbel"], [422, 1, 1, "", "hypergeometric"], [423, 1, 1, "", "laplace"], [424, 1, 1, "", "logistic"], [425, 1, 1, "", "lognormal"], [426, 1, 1, "", "logseries"], [427, 1, 1, "", "multinomial"], [428, 1, 1, "", "multivariate_normal"], [429, 1, 1, "", "negative_binomial"], [430, 1, 1, "", "noncentral_chisquare"], [431, 1, 1, "", "noncentral_f"], [432, 1, 1, "", "normal"], [433, 1, 1, "", "pareto"], [434, 1, 1, "", "permutation"], [435, 1, 1, "", "poisson"], [436, 1, 1, "", "power"], [437, 1, 1, "", "rand"], [438, 1, 1, "", "randint"], [439, 1, 1, "", "randn"], [440, 1, 1, "", "random"], [441, 1, 1, "", "random_integers"], [442, 1, 1, "", "random_sample"], [443, 1, 1, "", "ranf"], [444, 1, 1, "", "rayleigh"], [445, 1, 1, "", "sample"], [446, 1, 1, "", "seed"], [447, 1, 1, "", "shuffle"], [448, 1, 1, "", "standard_cauchy"], [449, 1, 1, "", "standard_exponential"], [450, 1, 1, "", "standard_gamma"], [451, 1, 1, "", "standard_normal"], [452, 1, 1, "", "standard_t"], [453, 1, 1, "", "triangular"], [454, 1, 1, "", "uniform"], [455, 1, 1, "", "vonmises"], [456, 1, 1, "", "wald"], [457, 1, 1, "", "weibull"], [458, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[410, 4, 1, "", "__eq__"], [410, 4, 1, "", "__ge__"], [410, 4, 1, "", "__gt__"], [410, 4, 1, "", "__le__"], [410, 4, 1, "", "__lt__"], [410, 4, 1, "", "__ne__"], [410, 4, 1, "", "get_state"], [410, 4, 1, "", "get_sycl_device"], [410, 4, 1, "", "get_sycl_queue"], [410, 4, 1, "", "normal"], [410, 4, 1, "", "rand"], [410, 4, 1, "", "randint"], [410, 4, 1, "", "randn"], [410, 4, 1, "", "random_sample"], [410, 4, 1, "", "standard_normal"], [410, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 89, 92, 105, 108, 109, 124, 126, 128, 130, 131, 133, 135, 136, 138, 140, 141, 156, 157, 212, 216, 218, 220, 224, 225, 226, 349, 383, 410, 411, 412, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 468, 504, 505, 539], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 69, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 166, 169, 170, 171, 172, 175, 178, 179, 180, 182, 185, 187, 188, 189, 190, 195, 196, 197, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 345, 348, 350, 354, 355, 357, 368, 371, 373, 375, 377, 382, 383, 384, 385, 386, 389, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 448, 451, 453, 454, 455, 460, 463, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 529, 530, 531, 539], "00": [85, 111, 123, 484], "000": [261, 412], "00000000005e": 119, "00000000e": [123, 261], "000000082740371e": 119, "000000e": [85, 484], "00001e10": [17, 182], "0001e10": 182, "000e": 111, "000j": 261, "002": 261, "00225109": 83, "00867716": 414, "01": [83, 111], "02": [83, 111, 261], "03": 261, "03047091": 83, "03088525e": 112, "0342579": 83, "0396842": 244, "04": 111, "04719755": 409, "04921661": 410, "04923628": 485, "05": [17, 111, 182], "05846808": 485, "0614962j": [124, 138], "06310682": 410, "06682066": 485, "07": 261, "07012729": 83, "0728188e": 83, "07944154": [90, 222], "08": [17, 85, 111, 149, 182, 428, 484], "08156915": 410, "08409186": 485, "08504448": 485, "08903844": 485, "09373496": 83, "0943951": 409, "09640474": 239, "09861229": [90, 222, 236], "0d": 34, "0dev1": 6, "0j": [20, 104, 105, 183, 184, 191, 192, 213, 247, 354, 368, 482], "0th": [226, 504], "1": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 186, 191, 192, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 339, 340, 345, 348, 350, 353, 354, 355, 357, 362, 364, 368, 373, 375, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 414, 415, 417, 419, 421, 423, 424, 425, 427, 428, 429, 432, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 449, 451, 454, 459, 460, 461, 462, 463, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 60, 63, 73, 80, 90, 91, 92, 95, 97, 98, 101, 102, 105, 106, 108, 110, 111, 119, 120, 127, 139, 161, 164, 170, 171, 172, 177, 182, 195, 196, 198, 199, 229, 230, 234, 235, 236, 237, 244, 245, 252, 260, 370, 395, 404, 406, 410, 412, 422, 434, 464, 470, 471, 473, 476, 479, 491, 495, 501, 510, 511, 512, 514, 515, 516, 521, 526, 527, 529], "100": [97, 139, 164, 182, 196, 217, 244, 395, 422, 448, 462, 522], "1000": [69, 164, 217, 244, 411, 412, 417, 419, 421, 422, 423, 424, 425, 432, 433, 436, 438, 440, 443, 445, 451, 455, 456, 457, 458, 462, 508], "10000": [92, 217, 420, 435, 444, 454], "100000": 429, "1000000": [448, 450, 452, 453], "1024": 0, "10394325": 485, "105": 111, "11": [31, 32, 56, 86, 95, 97, 98, 105, 106, 120, 166, 172, 218, 229, 370, 429, 438, 476, 479, 486, 510, 511, 512, 514, 515, 516, 521, 527, 529], "110": [110, 179], "111111": 261, "113": 238, "11570901": 410, "11643488": 485, "1179187": 410, "118033988749895": 496, "119": 110, "1196081": 410, "12": [10, 31, 32, 55, 89, 94, 95, 97, 98, 102, 106, 108, 110, 120, 124, 138, 163, 172, 177, 197, 225, 244, 402, 404, 409, 434, 460, 479, 510, 511, 512, 514, 515, 516, 521, 527, 529], "120": [91, 94], "123": [83, 105, 111, 355], "125": [149, 400, 401, 523], "12613779": 485, "127": 164, "128": [0, 164, 261], "12th": 110, "13": [10, 31, 32, 59, 61, 97, 98, 104, 106, 108, 110, 172, 180, 181, 213, 247, 460, 479, 511, 512, 515, 516, 520, 521, 527], "130": 110, "134": 179, "13436424": 410, "135": [29, 51], "13710533": 414, "139884456208480": 16, "13j": 462, "14": [31, 32, 58, 59, 61, 97, 98, 104, 106, 143, 172, 179, 181, 226, 479, 504, 511, 512, 515, 516, 521, 527], "140": 522, "140053638309840": 21, "14157194": 508, "14159265": [13, 24, 29, 51, 93, 409], "1424356": 83, "14243561": 83, "14423775e": 123, "14j": 462, "15": [31, 32, 92, 97, 98, 102, 106, 110, 128, 133, 172, 218, 235, 434, 479, 511, 512, 515, 516, 521, 527], "150": 94, "15591488": 485, "15716429": 83, "15888336": 244, "15j": 462, "16": [6, 58, 97, 98, 106, 108, 123, 149, 159, 164, 166, 172, 231, 260, 400, 401, 462, 480, 502, 511, 512, 515, 516, 521, 527], "1621": [460, 520], "16227766": [203, 464], "16394577": 410, "164": 239, "1643624": 83, "166": 239, "16j": 123, "17": [6, 83, 123, 124, 138, 521], "17157288": [208, 210], "17281316e": 123, "17615308": 83, "177": [164, 244], "17j": 123, "18": [6, 91, 108, 109, 110, 126, 204, 214, 218, 244, 521], "180": [29, 51, 93, 94, 110, 408, 522, 546], "1805": 10, "18236388": 410, "18557831": 410, "1887902": 409, "18920668": 485, "19": [10, 87, 108, 460, 521, 522], "19083664": 83, "19083665": 83, "1923875335537315": 439, "19245009": 478, "1924881e": 149, "1965": 10, "19722458": 90, "1985": 218, "1d": [109, 405, 406, 501, 508], "1e": [17, 119, 182, 207, 235, 236, 238, 239, 428], "1e10": [17, 182], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 77, 78, 105, 134, 177, 183, 191, 207, 219, 224, 354, 368, 394, 461, 489, 493], "1th": [226, 504], "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 183, 186, 191, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 340, 345, 348, 350, 353, 355, 357, 362, 364, 373, 374, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 408, 409, 410, 414, 418, 422, 428, 434, 437, 439, 450, 452, 453, 456, 458, 459, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 487, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531], "20": [60, 91, 102, 110, 139, 163, 178, 182, 196, 197, 198, 199, 218, 386, 406, 412, 427, 479, 501, 521, 522], "20000": 412, "2007": 10, "200e": 111, "20477401j": [124, 138], "2048": 0, "2066992e": 83, "21": [92, 108, 521], "210": 94, "2123185": 83, "215": 244, "21623621": 485, "21941987": 410, "21968665": 410, "22": [405, 460, 520, 521], "220": 522, "220446049250313e": 462, "222222": 261, "22460635e": 502, "22464680e": 123, "22497216": 218, "22776602": 244, "23": [410, 460, 521], "230": 110, "23387232": 485, "23598776": 409, "23606798": 218, "24": [6, 31, 32, 89, 91, 105, 109, 110, 179, 196, 204, 226, 227, 229, 373, 402, 504, 506, 521], "240": 94, "24264069": 218, "24544512": 410, "247219128924647": 270, "25": [108, 110, 115, 125, 166, 170, 171, 211, 232, 260, 272, 439, 448, 480, 523, 524], "255": [58, 62], "25506903": 410, "256": [0, 164], "26": [64, 110], "260": 522, "26618007j": 237, "27": [70, 149, 244, 400, 401, 478, 523], "270": 94, "28": 110, "28000000e": 261, "2800000e": 261, "283185307179586": 522, "28318531": 522, "28352814": 410, "2858386e": 83, "28904982": 239, "295": 6, "297": 10, "2d": [224, 247, 475, 519], "2e": 92, "2f": 0, "2j": [77, 78, 104, 123, 177, 183, 191, 208, 210, 213, 247, 461, 482, 489, 525], "2k": 522, "3": [0, 3, 4, 6, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 132, 133, 135, 136, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 164, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 186, 191, 192, 193, 195, 196, 199, 203, 204, 205, 206, 207, 211, 212, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 345, 348, 353, 355, 357, 362, 364, 373, 374, 375, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 405, 409, 410, 414, 418, 425, 428, 434, 437, 438, 439, 449, 453, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 487, 488, 489, 491, 492, 494, 495, 496, 497, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "30": [89, 94, 105, 110, 139, 374, 406, 409, 501, 525], "300": [94, 522], "3003003": 463, "301": 10, "30102999566": 235, "3012989": 486, "30258509": [90, 245], "308": 261, "308j": 261, "31": [6, 64, 164, 460, 520], "312": 112, "316": 244, "32": [108, 110, 164, 226, 269, 271, 504], "33": 463, "330": [6, 94], "333": 217, "33333333": 261, "3333333e": 261, "33340275": 508, "33486982e": 123, "33836967": 410, "340": 522, "34074171": 410, "34132519": 244, "34846923": [214, 218], "34960421": 244, "35": [110, 420], "35106603e": [214, 218], "35348576": 231, "35355338": 478, "36": 89, "360": 522, "37": [460, 476, 520], "371139e": 85, "38": [179, 412], "380": 522, "38268343": 208, "38268343j": 208, "38629436": 90, "38885": 412, "389": 6, "389056099": [116, 119], "39295758": 410, "39783284": 83, "3e": [0, 92, 462], "3j": [104, 213, 247, 489], "3rd": [75, 76, 106, 491], "3x3": 246, "3x8000": 449, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 62, 65, 73, 74, 75, 76, 79, 82, 83, 85, 87, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 120, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 145, 146, 149, 151, 152, 153, 157, 158, 159, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 183, 186, 191, 195, 196, 198, 201, 204, 205, 206, 211, 213, 214, 215, 216, 218, 222, 225, 226, 227, 228, 229, 231, 232, 237, 240, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 262, 263, 265, 267, 270, 272, 345, 348, 353, 357, 362, 364, 373, 375, 383, 385, 389, 391, 393, 395, 397, 400, 401, 402, 404, 405, 409, 410, 411, 414, 434, 439, 455, 459, 460, 461, 462, 465, 466, 468, 469, 473, 474, 475, 476, 477, 480, 482, 485, 487, 488, 491, 492, 495, 496, 497, 499, 500, 504, 505, 507, 508, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531], "40": [6, 60, 110, 139, 198, 199, 406, 501], "40882036": 410, "4096": 0, "41": [460, 485, 520], "41421356": [203, 218], "42": 480, "420": 522, "432": 6, "44": [398, 405], "4400": [110, 226, 504], "443469": 244, "44509285e": 123, "45": [20, 29, 51, 231], "45206687": 83, "4532": [110, 226, 504], "46": 110, "460": [6, 522], "46394577": 410, "464": 244, "46436927": 83, "4643693": 83, "4664": [110, 226, 504], "47": 6, "4730": [110, 226, 504], "4796": [110, 226, 504], "48": [6, 89], "48093112": 410, "48613152": 83, "48613155": 83, "4874": [110, 226, 504], "48927254": 410, "49": 6, "4928": [110, 226, 504], "49543509": 410, "49778714": 522, "499128": 104, "4d": 224, "4e": 462, "4j": [177, 461, 525], "4x4": [511, 515], "5": [0, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 66, 71, 73, 75, 76, 79, 82, 83, 84, 87, 89, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 115, 120, 124, 125, 127, 135, 138, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 163, 164, 166, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 183, 186, 191, 195, 196, 198, 199, 202, 204, 206, 208, 210, 211, 217, 218, 219, 223, 226, 229, 230, 231, 232, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 267, 270, 340, 345, 355, 357, 374, 385, 389, 391, 392, 393, 394, 395, 397, 400, 401, 404, 405, 409, 410, 411, 412, 414, 417, 429, 433, 434, 435, 436, 439, 442, 457, 459, 460, 461, 462, 463, 465, 468, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 487, 489, 491, 495, 496, 498, 499, 500, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531], "50": [124, 138, 139, 164, 196, 226, 238, 239, 244, 406, 501, 504, 508, 529], "500": [196, 522], "5018": [110, 226, 504], "50455115": 485, "5091786": 86, "512": 0, "5147297e": 83, "5162": [110, 226, 504], "52069395e": 123, "52359878": 409, "52928804": 410, "53": 6, "5306": [110, 226, 504], "53702235": 83, "5399045e": 149, "54": [6, 410], "540": 522, "54288406": 410, "54465213": 410, "545": 6, "548739": 486, "54930614": [30, 52], "55": [398, 405, 480], "5555555555555554": 272, "562": 244, "5620499351813308": [11, 12], "56920387": 410, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 409, 522], "5790461": 83, "57904613": 83, "58997253": 410, "591953": 86, "5e": [238, 239], "5j": [254, 391, 489], "6": [0, 4, 15, 22, 23, 31, 32, 34, 39, 53, 56, 62, 64, 66, 73, 75, 76, 82, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 119, 120, 125, 128, 139, 146, 149, 162, 163, 166, 172, 173, 177, 178, 179, 180, 186, 195, 196, 197, 204, 206, 214, 218, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 244, 246, 248, 252, 264, 265, 269, 345, 355, 357, 373, 385, 389, 393, 395, 398, 400, 401, 404, 410, 427, 429, 434, 439, 459, 460, 461, 467, 468, 473, 474, 475, 476, 477, 480, 487, 489, 491, 495, 497, 498, 499, 500, 504, 506, 508, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 525, 526, 527, 528, 529, 531], "60": [89, 94, 110, 197, 226, 406, 501, 504, 522, 529], "600": 196, "60943791": 90, "6173796": 83, "61799388": 409, "62": 179, "6227766": 164, "62318272": 414, "62341325": 164, "624": 111, "63": 164, "63317787e": 502, "63522211": 410, "63836967": 410, "64": [0, 4, 110, 149, 164, 269, 271, 400, 401, 476], "64000": 110, "65157276": 83, "6515728": 83, "65354985": 83, "65745445": [14, 25], "6580445": 83, "66519143": 409, "6666666666666665": 267, "67": 110, "67305985": 156, "673174": 410, "67718303": 410, "6883078": 83, "69295758": 410, "69314718": [90, 222, 236], "6990877": 410, "6j": [177, 461, 525], "7": [15, 17, 22, 23, 39, 53, 66, 71, 73, 82, 83, 87, 89, 92, 95, 96, 97, 98, 100, 101, 103, 105, 106, 109, 116, 120, 146, 150, 164, 166, 172, 179, 180, 182, 195, 196, 206, 214, 218, 224, 226, 229, 231, 246, 248, 252, 257, 260, 355, 357, 389, 395, 403, 404, 410, 434, 460, 461, 465, 470, 472, 473, 475, 491, 497, 498, 499, 500, 504, 510, 511, 512, 514, 515, 516, 517, 518, 520, 521, 522, 525, 527, 529], "70": [196, 525, 529], "700": 196, "700e": 111, "70710677": [105, 354, 368], "70710678": [203, 207], "70710678j": 207, "70882036": 410, "7110255": 83, "71102554": 83, "71238898": 409, "718281828": [116, 119], "72": 89, "720": [91, 522], "72075441": 244, "72450536": 83, "72538256": [27, 47], "74165739": 218, "742278e": 484, "74596669": [214, 218], "7485727": 83, "74857277": 83, "74921661": 410, "75": [56, 115, 125, 166, 171, 211, 232], "754": 142, "75682673": 485, "75958653": 409, "76096244": 410, "76377462": 410, "77447665": 239, "78539816": [20, 28, 29, 50, 51, 522], "78927254": 410, "79175947": 90, "7937219": 83, "79727215": 83, "7972722": 83, "79769313e": 261, "7j": 403, "8": [4, 15, 17, 22, 39, 53, 70, 73, 82, 89, 95, 96, 97, 98, 100, 101, 105, 106, 108, 110, 111, 120, 123, 125, 139, 140, 146, 149, 164, 166, 172, 177, 180, 182, 195, 205, 206, 218, 222, 224, 225, 226, 227, 229, 230, 231, 232, 244, 246, 248, 357, 373, 386, 389, 395, 400, 401, 402, 404, 410, 434, 453, 460, 461, 473, 475, 478, 484, 491, 500, 504, 506, 508, 510, 511, 512, 514, 515, 516, 520, 521, 522, 523, 526, 527, 529], "80": [108, 110, 529], "8000": 449, "8012391e": 83, "80226506": 410, "8058837395885292": 231, "8104691": 83, "81715362": 410, "827941": [164, 244], "82842712": [208, 210], "8399546e": 83, "84086883": 83, "84288406": 410, "84401099": 410, "84743374": 410, "84803548": 218, "85": 110, "86": 179, "87649168": 238, "88": 109, "88178420e": 123, "881943016134134": 231, "88194302": 231, "88997253": 410, "8900264": 83, "89002645": 83, "89920014": 414, "8f": 108, "8j": 525, "9": [4, 15, 22, 39, 53, 73, 82, 83, 89, 92, 95, 96, 97, 98, 100, 103, 105, 106, 110, 112, 120, 123, 126, 127, 132, 143, 149, 151, 159, 164, 166, 172, 182, 195, 206, 207, 212, 214, 218, 220, 221, 224, 225, 226, 229, 231, 244, 246, 260, 261, 355, 389, 404, 410, 412, 414, 434, 460, 461, 473, 491, 492, 497, 504, 510, 511, 512, 514, 515, 516, 517, 520, 521, 522, 523, 527, 529], "90": [20, 94, 408, 475, 529], "9011005": 83, "917152": 503, "92387953": 208, "92387953j": 208, "9305482": 83, "93548928": 485, "9377134e": 83, "9387854e": 83, "9393724": 83, "9393725": 83, "94": 110, "94591015": 90, "95": 212, "9520904e": 83, "95799250e": 123, "968541": 83, "9685411": 83, "9724453": 83, "98": [213, 247], "98024613": 244, "9875833": 83, "99": [109, 236, 406], "9909503": 83, "99095035": 83, "99322285": [14, 25], "994938": 83, "9949381": 83, "9951523": 83, "99532227": 115, "996272": 503, "99822295": [27, 47], "99853728": 115, "999": [111, 180], "9990000e": 261, "99959305": 115, "99989938": 115, "9999": 261, "99997791": 115, "9999999": 83, "99999994": 83, "999999e": 182, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 77, 78, 80, 81, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 129, 130, 131, 135, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 174, 175, 177, 178, 180, 181, 185, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 206, 208, 209, 210, 212, 216, 217, 218, 221, 222, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 250, 252, 254, 256, 257, 260, 264, 265, 269, 271, 340, 345, 353, 355, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 403, 408, 409, 410, 412, 429, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 459, 460, 461, 463, 465, 468, 471, 472, 475, 478, 482, 483, 484, 485, 486, 490, 491, 492, 493, 497, 499, 500, 502, 503, 504, 505, 507, 509, 511, 513, 515, 517, 518, 523, 526, 527, 529, 530, 531, 546], "AND": [16, 58, 59, 61, 62, 64, 181, 240, 241, 242, 243], "And": [4, 48, 49, 97, 105, 340, 511, 515], "As": 519, "At": 386, "Be": 207, "Being": 3, "But": [4, 108], "By": [31, 32, 42, 49, 89, 105, 124, 128, 130, 134, 136, 140, 164, 212, 232, 244, 247, 249, 251, 255, 262, 263, 266, 267, 268, 269, 270, 271, 272, 340, 466, 473, 487, 496, 500, 509, 511, 513, 515, 524, 526], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 350, 353, 354, 355, 362, 368, 370, 373, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539, 546], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 68, 73, 75, 76, 83, 87, 89, 90, 91, 92, 95, 96, 100, 101, 104, 105, 106, 108, 109, 110, 111, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 152, 153, 155, 160, 164, 166, 170, 171, 172, 173, 177, 178, 179, 180, 182, 186, 189, 190, 191, 202, 204, 212, 214, 215, 216, 217, 218, 220, 221, 224, 226, 228, 229, 231, 232, 233, 244, 245, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 357, 375, 397, 398, 402, 405, 406, 410, 432, 454, 461, 462, 464, 466, 467, 468, 469, 473, 476, 477, 479, 488, 491, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 519, 522, 523, 524, 525, 526, 527, 528, 529, 539, 546], "In": [4, 10, 31, 32, 83, 89, 91, 92, 110, 111, 129, 130, 131, 134, 136, 166, 202, 209, 217, 221, 239, 244, 264, 265, 267, 269, 271, 402, 405, 410, 454, 459, 460, 468, 469, 498, 500, 518], "It": [4, 10, 16, 21, 22, 31, 32, 73, 91, 92, 102, 104, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 166, 180, 208, 210, 239, 247, 251, 252, 262, 263, 264, 265, 266, 267, 268, 270, 272, 395, 402, 468, 469, 480, 490, 496, 498, 500, 524, 546], "Its": [73, 227, 406, 506], "NOT": [59, 61, 181, 240, 241, 242, 243], "No": [41, 42, 110, 202], "Not": [16, 21, 42, 185, 261, 264, 265, 266, 268, 269, 271, 402], "OR": [21, 58, 59, 61, 62, 64, 181, 240, 241, 242, 243], "On": 4, "One": [53, 54, 55, 89, 107, 108, 134, 219, 395, 468], "Ones": 36, "Or": [166, 508], "That": 246, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 178, 181, 182, 184, 185, 186, 187, 188, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 249, 250, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 340, 345, 354, 357, 362, 364, 368, 373, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 413, 415, 416, 426, 431, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 528, 529, 530, 531, 539, 542, 546], "Then": [10, 43, 45, 246], "There": [10, 232, 519], "These": [4, 22, 108, 110, 111, 118, 246, 259, 406, 501, 511, 515, 539, 542], "To": [4, 128, 134, 136, 149, 389, 522], "With": [31, 32, 56, 87, 172, 214, 218, 231, 249, 255, 262, 263, 269, 271, 402, 498, 527], "_": [0, 171, 495, 508], "__array_interface__": 108, "__bool__": 539, "__dlpack__": 155, "__dlpack_device__": 155, "__eq__": [105, 108, 144, 386, 410], "__ge__": [105, 108, 144, 386, 410], "__getitem__": [105, 108, 144], "__gt__": [105, 108, 144, 386, 410], "__iter__": [144, 386], "__le__": [105, 108, 144, 386, 410], "__len__": [105, 108], "__lt__": [105, 108, 144, 386, 410], "__main__": 0, "__name__": 0, "__ne__": [105, 108, 144, 386, 410], "__next__": [144, 386], "__setitem__": [105, 144], "__sycl_usm_array_interface__": 44, "_core": 108, "_dtypes_list": 0, "_f": 218, "a1": [37, 38], "a2": [37, 38], "a_": [10, 218], "a_ax": [226, 504], "a_i": [230, 526], "a_k": 10, "a_m": 10, "a_resamp": 134, "ab": [6, 10, 12, 17, 182, 218], "abc": 110, "abcd": 111, "abl": 218, "about": [43, 45, 105, 142, 207, 351, 395, 467, 539], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 90, 96, 99, 126, 131, 136, 140, 178, 206, 221, 229, 245, 261, 464, 509, 510, 514], "absolut": [6, 11, 17, 20, 122, 163, 182, 197, 222, 270, 272, 403, 462, 496, 522, 524, 546], "accept": [110, 219, 410, 511, 515], "access": [10, 97, 98, 141, 246, 511, 515, 539], "accord": [16, 21, 56, 63, 69, 108, 140, 142, 207, 208, 209, 210, 245, 251, 252, 267, 270, 272, 395, 464, 471, 496, 524], "accordingli": [89, 266, 268], "account": [459, 468], "accumul": [90, 91, 92, 110, 170, 229, 264, 265, 269, 271, 402, 498, 506], "accur": [108, 119, 166, 236, 238], "accuraci": [129, 130, 131, 134, 136], "achiev": 110, "aco": [6, 24], "acosh": [6, 25], "across": [100, 171, 264, 265, 269, 271], "activ": 4, "actual": [108, 170, 171, 202, 217], "ad": [17, 108, 111, 118, 134, 182, 205, 222, 239, 522, 542], "add": [6, 83, 108, 546], "addit": [83, 90, 202, 267, 519], "address": 108, "adjac": [206, 229, 490, 522], "advanc": 110, "advers": 110, "advis": [4, 386], "affect": [23, 100, 110, 141, 170, 171], "after": [107, 141, 388, 395, 429, 473], "after_1": 395, "after_n": 395, "ag": 108, "against": [17, 31, 32, 65, 66, 67, 73, 87, 165, 182, 214, 218, 220, 231, 249, 255, 262, 263, 269, 271, 386, 402, 406, 498, 501], "ai": [3, 406, 501], "ai_max": 501, "ai_min": 501, "ainv": [211, 227], "al": 10, "algebra": [532, 542], "algorithm": [10, 33, 110, 111, 123, 129, 137, 488], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 60, 61, 63, 75, 76, 103, 113, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 142, 162, 181, 199, 257, 273, 393, 397, 400, 401, 410, 440, 443, 445, 459, 465, 468, 471, 477, 507, 517, 522, 528, 531], "alias": [9, 128, 129, 134, 136, 485], "align": 108, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 74, 83, 87, 94, 101, 105, 107, 108, 110, 111, 116, 117, 119, 121, 126, 127, 131, 132, 135, 136, 140, 141, 146, 147, 148, 156, 157, 159, 164, 166, 173, 175, 177, 195, 202, 204, 216, 220, 231, 232, 244, 249, 252, 255, 262, 263, 266, 268, 340, 343, 350, 364, 395, 402, 412, 461, 462, 473, 477, 480, 494, 498, 519, 521, 526, 528, 539, 546], "allclos": [6, 37, 182, 211, 220, 221, 223, 224, 228], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 80, 90, 96, 97, 99, 105, 112, 113, 121, 125, 139, 143, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 189, 190, 232, 233, 244, 245, 246, 251, 252, 254, 267, 270, 272, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 464, 494, 496, 509, 511, 515, 523, 524, 526, 530, 531], "allow": [39, 49, 95, 105, 110, 170, 171, 186, 239, 246, 252, 340, 370, 500, 539], "almost": [34, 207, 511], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 74, 75, 76, 87, 90, 91, 92, 95, 96, 97, 99, 100, 101, 105, 106, 107, 109, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 152, 153, 158, 164, 166, 172, 173, 178, 180, 218, 221, 226, 227, 228, 229, 230, 231, 232, 244, 245, 249, 250, 251, 252, 253, 255, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 337, 338, 339, 346, 347, 358, 360, 365, 366, 374, 377, 379, 381, 382, 384, 395, 398, 402, 404, 405, 406, 459, 464, 466, 473, 474, 475, 477, 480, 487, 488, 491, 495, 496, 498, 500, 501, 504, 505, 506, 508, 511, 512, 515, 516, 519, 521, 522, 524, 526, 527, 528, 539], "alpha": [411, 416, 417, 433, 436], "alreadi": [4, 10, 41, 42, 53, 54, 55, 394, 395, 519], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 81, 83, 103, 105, 108, 110, 114, 118, 126, 131, 135, 136, 137, 140, 149, 151, 152, 153, 154, 158, 160, 163, 166, 167, 168, 169, 170, 174, 182, 186, 197, 199, 200, 201, 202, 238, 239, 246, 250, 256, 257, 259, 260, 373, 389, 390, 400, 401, 448, 465, 471, 485, 497, 500, 517, 519, 539], "alter": 100, "altern": [3, 4, 16, 21, 91, 92, 104, 105, 247, 249, 251, 252, 255, 264, 265, 267, 269, 270, 271, 272, 383, 402, 496, 498, 524], "although": [20, 108, 130, 131, 132, 505], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 100, 105, 106, 109, 122, 149, 155, 172, 208, 210, 270, 272, 340, 389, 468, 489, 496, 524, 527], "amax": [6, 249], "ambigu": 539, "amin": [6, 255], "among": 109, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 90, 91, 92, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 192, 195, 197, 198, 199, 200, 201, 204, 205, 206, 209, 212, 216, 217, 218, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 339, 340, 341, 342, 345, 355, 358, 362, 364, 366, 369, 370, 373, 374, 375, 376, 380, 381, 383, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 417, 418, 420, 429, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 539, 546], "anaconda": 3, "analog": [124, 126, 128, 130, 131, 133], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 93, 94, 177, 408, 409, 461, 462, 522, 546], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 65, 66, 67, 80, 96, 99, 101, 105, 108, 110, 111, 124, 126, 130, 131, 136, 140, 141, 161, 162, 164, 166, 171, 173, 184, 192, 193, 215, 228, 232, 244, 246, 266, 268, 340, 362, 395, 410, 454, 467, 485, 490, 523, 539], "anoth": [4, 82, 83, 105, 120, 130, 131, 155, 345, 366, 398, 405, 474], "answer": 412, "anti": [100, 141, 206, 485], "anyth": 108, "ap": 212, "apart": 508, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 89, 96, 97, 99, 100, 105, 108, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 204, 206, 213, 214, 219, 220, 229, 230, 231, 232, 233, 244, 246, 247, 254, 340, 345, 391, 392, 393, 394, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 506, 509, 511, 515, 523, 525, 526, 530, 531], "appear": [118, 147, 148, 519], "append": [0, 6, 60, 95, 101, 109, 111, 118, 129, 130, 131, 180, 199, 206], "appli": [31, 32, 33, 56, 69, 95, 110, 226, 261, 460, 469, 470, 488, 504, 508], "applic": [10, 108, 485], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [105, 108, 129, 130, 131, 373], "appropri": [4, 31, 32, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 165, 228, 262, 263, 266, 268, 410, 438, 441, 469, 500, 539], "approxim": [142, 508], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 163, 164, 166, 167, 168, 169, 170, 171, 174, 179, 181, 182, 185, 186, 187, 188, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 363, 364, 373, 385, 387, 388, 389, 390, 395, 396, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 435, 436, 438, 441, 442, 444, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 469, 471, 472, 473, 476, 477, 478, 479, 480, 482, 483, 484, 487, 488, 490, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 506, 508, 512, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 539, 546], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 73, 81, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 110, 114, 116, 117, 119, 120, 123, 145, 146, 149, 154, 162, 163, 164, 166, 170, 172, 178, 179, 180, 195, 196, 197, 198, 206, 213, 214, 218, 226, 229, 231, 232, 235, 236, 240, 241, 242, 243, 244, 246, 247, 249, 253, 255, 257, 260, 348, 357, 390, 393, 395, 398, 400, 401, 405, 409, 434, 465, 467, 468, 470, 473, 475, 480, 491, 497, 504, 506, 508, 511, 512, 515, 516, 517, 521, 527, 529, 531], "arbitrari": [48, 104, 108, 110, 179, 247, 470, 511, 515], "arbitrarili": 110, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 85], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 86], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 484], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 486], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 502], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 503], "area": 508, "arg": [65, 66, 105, 195, 355, 410], "arg1": 194, "arg2": 194, "argmax": [0, 6, 32, 105, 262, 406, 501, 539], "argmin": [6, 31, 105, 263, 501, 539], "argpartit": [6, 33, 406, 501, 539], "argsort": [6, 105, 397, 406, 479, 488, 501, 507, 539], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 73, 75, 76, 81, 85, 86, 93, 94, 103, 104, 105, 108, 111, 115, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 163, 169, 174, 177, 181, 193, 194, 197, 198, 199, 204, 206, 213, 217, 218, 219, 226, 229, 230, 235, 236, 237, 238, 239, 246, 247, 250, 256, 257, 258, 260, 355, 370, 383, 386, 387, 388, 395, 399, 400, 401, 403, 405, 408, 409, 461, 462, 463, 465, 468, 470, 471, 472, 478, 482, 483, 484, 485, 486, 490, 495, 497, 502, 503, 504, 508, 517, 518, 526, 539, 546], "argwher": [6, 389], "ari": [39, 53, 54, 55, 106, 109, 172, 491, 527], "arithmet": [56, 164, 251, 252, 267, 270, 272, 399, 496, 498, 524, 532, 542], "around": [6, 105, 164, 395, 405, 460, 476], "arr": [22, 42, 95, 98, 108, 171, 180, 407, 434, 459, 460, 512, 516, 521], "arr2": [108, 521], "arr_t": [49, 105, 340], "arraiarray2str": 6, "array_equ": [6, 180], "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 80, 82, 96, 99, 109, 120, 161, 162, 164, 180, 184, 192, 226, 232, 244, 385, 395, 398, 405, 406, 410, 475, 481, 487, 500, 504, 523], "array_of_diagon": 100, "array_repr": 6, "array_split": [6, 75, 76, 491], "array_str": 6, "array_util": 68, "arrays_and_dtyp": 470, "art": 10, "asanyarrai": [6, 41, 42, 45, 467], "asarrai": [4, 6, 40, 42, 43, 45, 48, 385, 467, 487], "asarray_chkfinit": [6, 40, 41], "ascend": [208, 210, 479], "ascii": 108, "ascontiguousarrai": [6, 40, 41, 42, 45, 467], "asfarrai": [40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 467], "asin": [6, 26], "asinh": [6, 27], "asmatrix": 6, "asnumpi": 105, "aspect": 108, "assembl": [75, 76, 107, 173, 477, 495, 521, 528], "assert": 252, "assign": [105, 350, 373, 511, 515], "associ": [56, 170, 171, 539], "assum": [10, 56, 89, 111, 128, 134, 136, 206, 216, 220, 224, 246, 508], "astyp": [6, 83, 105, 164, 389], "atan": [6, 28], "atan2": [6, 29], "atanh": [6, 30], "atleast_1d": [6, 54, 55, 118], "atleast_2d": [6, 53, 55, 118], "atleast_3d": [6, 53, 54, 118], "atol": [17, 182], "attain": 0, "attempt": [104, 217], "attribut": [105, 108, 113, 142, 162, 176, 221, 393, 531, 532], "automat": [170, 171], "avail": [2, 3, 4, 10, 84, 88, 108, 115, 258, 262, 263, 266, 268, 269, 532, 539], "averag": [6, 105, 251, 252, 267, 359, 498, 542], "avg": 56, "avoid": [36, 41, 54, 55, 128, 134, 136, 468], "aweight": 88, "ax": [16, 21, 31, 32, 56, 87, 89, 90, 101, 104, 105, 110, 118, 124, 126, 127, 130, 131, 132, 135, 136, 138, 140, 146, 166, 179, 204, 214, 218, 223, 226, 227, 228, 229, 231, 245, 247, 248, 249, 251, 252, 255, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 380, 383, 394, 395, 397, 402, 464, 469, 473, 474, 475, 494, 496, 498, 499, 504, 505, 506, 507, 519, 524, 526], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 74, 75, 76, 87, 89, 90, 91, 92, 95, 100, 101, 105, 106, 107, 109, 110, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 146, 147, 148, 152, 153, 158, 164, 166, 172, 173, 178, 180, 204, 212, 218, 226, 230, 231, 232, 244, 245, 247, 249, 250, 251, 252, 255, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 335, 336, 337, 338, 339, 346, 347, 353, 358, 359, 360, 364, 365, 366, 369, 374, 375, 376, 377, 379, 381, 383, 384, 395, 396, 397, 398, 402, 404, 405, 406, 459, 464, 466, 468, 469, 473, 474, 475, 477, 480, 487, 488, 491, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 519, 521, 522, 524, 526, 527, 528, 539], "axis1": [100, 105, 348, 380, 382, 499, 506], "axis2": [100, 105, 348, 380, 382, 499, 506], "axisa": 89, "axisb": 89, "axisc": 89, "axiserror": [33, 488], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 64, 74, 75, 76, 82, 89, 92, 104, 105, 107, 108, 110, 111, 114, 156, 157, 167, 168, 173, 179, 180, 182, 186, 196, 200, 201, 204, 205, 212, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 240, 242, 247, 248, 249, 252, 255, 388, 390, 394, 400, 401, 411, 470, 477, 490, 495, 504, 505, 513, 525, 526, 528, 546], "b_ax": [226, 504], "b_i": [230, 526], "back": [105, 158, 353, 459, 468, 469, 474, 513], "backend": [2, 165, 413, 415, 416, 426, 431, 447], "backward": [10, 49, 105, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 166, 340, 386, 468, 473, 474], "bad": 422, "baltimor": 218, "bandlimit": 485, "bartlett": 6, "base": [0, 4, 108, 110, 117, 120, 149, 164, 170, 171, 224, 234, 235, 236, 237, 238, 239, 244, 245, 247, 398, 400, 401, 405, 407, 526], "base_repr": 6, "basic": [69, 110, 539, 542], "batch": 231, "bc": [205, 222], "bcde": 111, "becaus": [10, 16, 21, 128, 134, 136, 522, 539], "becom": [10, 105, 170, 383], "been": [107, 386, 406, 474, 501], "befor": [4, 22, 33, 75, 76, 90, 105, 109, 129, 130, 131, 147, 148, 180, 228, 245, 249, 255, 270, 272, 364, 375, 395, 402, 464, 473, 474, 488, 496, 498, 505, 524, 525], "before_1": 395, "before_n": 395, "begin": [109, 111, 164, 232, 244, 395, 480], "behav": [180, 233, 405], "behavior": [33, 105, 138, 229, 261, 345, 469, 488, 505], "behind": [105, 364], "being": [3, 83, 108, 152, 153, 250, 256, 395], "belong": [102, 170], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 83, 96, 99, 108, 134, 206, 216, 218, 229, 509, 510, 514, 522, 539], "best": 111, "beta": [6, 421], "between": [17, 23, 39, 68, 69, 83, 101, 109, 142, 157, 160, 166, 179, 180, 182, 232, 244, 395, 427, 441, 490, 497, 508, 522], "beyond": [4, 473], "bia": 88, "big": 108, "bin": [102, 123, 125, 139, 170, 171, 448], "bin_edg": [170, 171], "binari": [58, 62, 64, 156, 157, 159, 160], "binary_repr": 6, "bincount": [6, 102, 170], "binomi": [6, 429], "bins_0": 171, "bins_1": 171, "bit": [58, 59, 60, 61, 62, 63, 64, 108, 142, 176, 181, 199, 240, 242, 243, 269, 271, 471, 483, 532, 542], "bitwis": [58, 62, 64], "bitwise_and": [6, 59, 61, 62, 64, 181, 240], "bitwise_count": 6, "bitwise_invert": [6, 61, 181], "bitwise_left_shift": [6, 199], "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 64, 181, 242], "bitwise_right_shift": [6, 471], "bitwise_xor": [6, 58, 59, 61, 62, 181, 243], "biufcmmosuv": 108, "blackman": 6, "block": [6, 75, 76, 107, 141, 173, 196, 477, 495, 521, 528], "bmat": 6, "bool": [9, 16, 17, 20, 21, 31, 32, 33, 36, 37, 38, 41, 44, 49, 56, 69, 82, 83, 87, 90, 95, 102, 105, 108, 111, 114, 141, 155, 164, 167, 168, 170, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 202, 214, 216, 218, 220, 224, 231, 232, 244, 245, 249, 251, 252, 253, 255, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 340, 389, 390, 402, 464, 468, 480, 483, 488, 496, 498, 500, 519, 523, 524, 539], "bool_": 9, "boolean": [58, 59, 61, 62, 64, 82, 90, 95, 108, 120, 149, 155, 178, 181, 182, 185, 187, 188, 189, 190, 191, 195, 240, 242, 245, 246, 251, 252, 267, 269, 270, 272, 389, 398, 464, 496, 500, 524], "boolean_sequ": 195, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 73, 81, 89, 103, 104, 114, 130, 137, 149, 151, 152, 153, 154, 163, 167, 168, 169, 174, 179, 182, 196, 197, 198, 199, 200, 201, 213, 218, 226, 238, 239, 240, 242, 243, 247, 250, 256, 257, 260, 271, 388, 390, 400, 401, 465, 468, 471, 497, 504, 506, 511, 513, 515, 517, 525, 526, 529], "bound": [405, 406, 460, 479, 500, 501], "boundari": [166, 405, 460], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 539, "broadcast": [15, 16, 21, 31, 32, 38, 56, 65, 66, 67, 73, 82, 87, 103, 110, 120, 149, 152, 153, 174, 189, 190, 213, 214, 218, 220, 231, 243, 245, 247, 249, 250, 251, 252, 255, 256, 260, 262, 263, 267, 269, 270, 271, 272, 400, 401, 402, 405, 406, 464, 466, 496, 497, 498, 501, 505, 517, 524, 526, 529], "broadcast_arrai": [6, 66, 67], "broadcast_shap": 6, "broadcast_to": [6, 65, 66, 505], "brought": 10, "buffer": [44, 91, 92, 105, 155, 156, 157, 159, 160, 233, 249, 255, 264, 265], "buffer_lik": 156, "buffererror": 155, "build": 542, "build_loc": 4, "built": 108, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 68, 105, 108, 110, 156, 157, 233, 340, 356, 361], "byteord": 108, "byteswap": 6, "bz2": 233, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 89, 93, 94, 103, 104, 105, 108, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 161, 162, 163, 165, 167, 168, 169, 174, 177, 179, 181, 185, 186, 187, 188, 196, 197, 198, 199, 200, 201, 205, 212, 217, 218, 222, 226, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 256, 257, 260, 340, 345, 353, 367, 370, 387, 388, 389, 390, 392, 393, 399, 400, 401, 403, 408, 409, 459, 460, 461, 463, 465, 467, 468, 469, 471, 472, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 504, 505, 517, 518, 519, 520, 526, 529, 530, 531, 546], "c_contigu": [43, 45, 105, 345, 467], "ca": 79, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 89, 90, 92, 101, 103, 109, 110, 114, 116, 117, 119, 123, 132, 149, 150, 151, 154, 166, 171, 174, 207, 208, 209, 210, 212, 218, 220, 236, 238, 239, 245, 247, 251, 252, 257, 260, 267, 270, 272, 390, 395, 400, 401, 402, 464, 465, 496, 497, 517, 524, 525, 532, 546], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 108, 129, 130, 131, 134, 137, 158, 180, 207, 209, 217, 225, 246, 252, 280, 389, 494, 500, 505, 508, 546], "callabl": [158, 246], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 69, 80, 81, 83, 89, 96, 97, 99, 100, 103, 104, 105, 108, 110, 111, 112, 113, 114, 121, 123, 124, 125, 126, 129, 130, 131, 134, 135, 136, 139, 141, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 173, 174, 175, 178, 179, 181, 182, 184, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 211, 212, 215, 216, 218, 220, 226, 228, 229, 232, 233, 238, 239, 240, 242, 243, 244, 246, 247, 250, 254, 256, 257, 260, 269, 271, 340, 345, 373, 375, 386, 387, 388, 389, 390, 391, 392, 393, 399, 400, 401, 406, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 459, 460, 465, 467, 468, 471, 490, 497, 500, 501, 504, 506, 508, 509, 511, 515, 516, 517, 519, 523, 525, 529, 530, 531, 539, 546], "can_cast": [6, 542], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 75, 76, 262, 263, 468, 491, 494, 495], "capabl": [23, 36, 40, 41, 43, 45, 56, 122, 164, 232, 244, 247, 526], "cardin": 485, "cardinali": 485, "care": [23, 207], "cartesian": 253, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 80, 89, 91, 92, 96, 99, 101, 105, 110, 111, 112, 113, 121, 125, 128, 133, 137, 139, 156, 157, 158, 159, 161, 162, 164, 166, 175, 207, 221, 224, 226, 232, 233, 239, 244, 254, 264, 265, 269, 271, 355, 391, 392, 393, 402, 459, 468, 469, 498, 504, 509, 522, 523, 530, 531, 539], "cast": [16, 21, 49, 69, 75, 76, 82, 90, 91, 92, 105, 110, 149, 173, 180, 207, 245, 247, 251, 252, 261, 264, 265, 267, 269, 270, 271, 272, 340, 402, 464, 477, 495, 496, 498, 524, 526, 528], "cat": [412, 429], "cauchi": 448, "cbrt": [6, 492], "cdef": 111, "cdot": [226, 230, 504, 526], "cdoubl": 9, "ceil": [6, 35, 143, 150, 151, 472, 476, 518], "center": [124, 125, 126, 127, 131, 132, 139], "central": [166, 430, 431], "certain": [108, 246], "ch": 10, "chain": [104, 105, 110, 111], "chang": [49, 80, 89, 105, 108, 110, 120, 264, 265, 340, 353, 378, 383, 387, 398, 399, 405, 406, 407, 459, 468, 469, 474, 522, 542], "char": 108, "charact": [108, 157], "check": [16, 21, 40, 41, 42, 69, 128, 184, 186, 192, 202, 220, 223, 539], "check_valid": 428, "chi": [414, 430], "chisquar": 6, "choic": [6, 72, 105, 123, 124, 126, 129, 130, 131, 135, 136, 138, 140, 208, 210, 341], "choicelist": 480, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 105, 111, 480, 529, 539], "chosen": [34, 170, 519, 529], "circ": 546, "circl": [222, 508], "clamp": [405, 406, 500, 501], "clariti": 141, "class": [3, 4, 105, 108, 144, 156, 157, 158, 160, 178, 233, 386, 410, 438, 509, 542], "classic": 110, "clear": [108, 198, 539], "clip": [6, 105, 405, 406, 460, 500, 501, 539], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 105, 110, 118, 177, 232, 340, 410, 438, 461, 462, 472, 476, 508], "closer": 518, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 86, 209, 484, 502, 508], "coars": [219, 394], "code": [44, 108, 194, 467], "codeplai": 4, "coeffici": [83, 212, 223, 228], "coerc": [44, 156, 157, 158, 159, 160, 233], "coin": 412, "col": 178, "collaps": [105, 353, 519], "column": [6, 40, 41, 42, 43, 45, 48, 49, 74, 75, 76, 83, 91, 92, 100, 105, 107, 121, 141, 147, 148, 166, 172, 173, 175, 207, 208, 212, 217, 221, 224, 340, 459, 460, 467, 477, 491, 495, 509, 511, 515, 520, 523, 528], "column_stack": [6, 75, 76, 107, 173, 477, 495, 528], "com": 4, "combin": [0, 108, 118, 126, 131, 136, 140, 166], "combinatori": 111, "come": 519, "comma": [108, 110], "command": 4, "common": [129, 130, 131, 163, 197, 226, 389, 504], "common_typ": 6, "compani": [412, 429], "compar": [17, 33, 37, 114, 152, 153, 171, 182, 219, 250, 256, 488], "comparison": [2, 114, 167, 168, 200, 201, 390, 532, 542], "compat": [3, 4, 10, 16, 21, 49, 56, 89, 100, 105, 204, 206, 213, 214, 219, 220, 229, 230, 231, 245, 247, 251, 252, 266, 267, 268, 270, 272, 340, 386, 394, 464, 468, 496, 506, 524, 525, 526, 542], "compil": [4, 108, 165, 467], "complement": 522, "complementari": [151, 522], "complet": [3, 4, 111, 157, 158, 221, 474, 539], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 46, 47, 50, 51, 52, 69, 90, 104, 105, 108, 111, 115, 122, 123, 124, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 142, 149, 152, 153, 177, 183, 184, 191, 192, 198, 207, 208, 209, 210, 213, 221, 222, 224, 230, 245, 247, 250, 256, 261, 270, 272, 343, 344, 403, 461, 462, 464, 489, 496, 519, 524, 525, 526, 539, 542], "complex128": [9, 56, 470], "complex64": [9, 56, 68, 105, 149, 374], "compliant": 105, "complic": [110, 546], "compon": [10, 37, 89, 127, 132, 139, 142, 177, 216, 226, 261, 461, 504], "compos": 81, "composit": [92, 196, 498, 508], "compress": [6, 120, 480, 500, 539], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 64, 70, 77, 78, 83, 85, 86, 90, 91, 92, 101, 102, 110, 116, 117, 118, 119, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 150, 166, 167, 168, 169, 170, 171, 177, 178, 181, 196, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 241, 242, 243, 245, 247, 251, 252, 257, 264, 265, 266, 267, 268, 269, 270, 271, 272, 387, 394, 399, 403, 461, 463, 464, 465, 472, 476, 478, 482, 483, 484, 486, 492, 496, 498, 502, 503, 504, 508, 511, 515, 524, 526], "compute_uv": [203, 224, 225], "concat": [6, 76], "concaten": [6, 74, 75, 107, 173, 180, 477, 491, 495, 501, 521, 528], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531, 539], "cond": [6, 211], "condit": [34, 49, 104, 105, 120, 203, 211, 217, 340, 389, 398, 405, 407, 480, 529], "condlist": 480, "confus": 154, "conj": [6, 78, 105, 128, 177, 202, 207, 403], "conjug": [6, 10, 77, 104, 105, 134, 137, 177, 202, 207, 208, 209, 210, 213, 230, 247, 343, 403, 525, 526], "consecut": [101, 109, 166], "conserv": 253, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 111, 139, 164, 182, 185, 208, 210, 216, 232, 244, 247, 410, 438, 469, 490, 519, 526], "consist": [37, 38, 109, 123, 124, 126, 129, 130, 131, 135, 136, 138, 140, 157, 171, 226, 228, 232, 501, 504], "constant": [9, 108, 166, 395], "constant_valu": 395, "constraint": 56, "construct": [40, 41, 42, 72, 96, 99, 100, 105, 108, 121, 156, 157, 158, 159, 160, 175, 195, 198, 233, 254, 341, 391, 480, 485, 505, 506, 529, 532], "constructor": 539, "consum": [105, 361], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 81, 82, 83, 85, 86, 89, 90, 100, 103, 105, 108, 114, 116, 117, 119, 124, 125, 126, 129, 134, 137, 139, 145, 149, 150, 151, 152, 153, 154, 155, 160, 165, 166, 167, 168, 170, 171, 174, 177, 178, 181, 199, 200, 201, 204, 206, 208, 221, 224, 226, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 250, 251, 256, 257, 260, 262, 263, 266, 267, 268, 270, 272, 370, 386, 387, 389, 390, 397, 399, 400, 401, 403, 410, 461, 463, 464, 465, 471, 472, 476, 478, 482, 483, 484, 485, 486, 492, 493, 496, 497, 502, 503, 504, 507, 511, 512, 515, 516, 517, 518, 524, 539], "content": [43, 105, 252, 447], "context": 10, "contigu": [40, 41, 42, 43, 45, 68, 104, 105, 110, 186, 217, 367, 459, 467, 468], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 410, 442, 485], "contourf": 253, "contract": [110, 111, 226, 504], "contrari": [204, 206, 213, 229, 230], "contrast": [110, 405], "contribut": [10, 56, 170, 171], "control": [4, 49, 69, 75, 76, 82, 105, 110, 173, 247, 340, 477, 495, 526, 528], "conveni": [105, 383, 410], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 104, 110, 111, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 179, 213, 226, 228, 247, 394, 504, 526], "convers": [49, 105, 110, 340, 532], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 80, 93, 94, 96, 99, 108, 110, 111, 118, 161, 162, 164, 180, 184, 192, 232, 244, 408, 409, 460, 467, 520, 522, 523], "convolut": [10, 79, 84], "convolv": [6, 84], "coolei": 10, "coordin": [87, 158, 166, 178, 195, 253, 460, 520], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 82, 95, 96, 97, 99, 100, 105, 108, 112, 113, 120, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 180, 232, 233, 244, 246, 252, 253, 254, 261, 280, 340, 353, 355, 364, 370, 373, 391, 392, 393, 396, 398, 399, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 459, 467, 468, 469, 479, 488, 494, 509, 510, 511, 514, 515, 523, 530, 531, 539], "copysign": [6, 387, 399], "copyto": [6, 105, 120, 345, 398], "core": [3, 110, 526, 539], "corner": [124, 126, 130, 131, 395], "corrcoef": [6, 88], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 75, 76, 77, 78, 81, 85, 86, 93, 94, 103, 114, 116, 117, 119, 122, 128, 134, 136, 143, 149, 150, 151, 152, 153, 154, 163, 167, 168, 169, 174, 177, 181, 185, 187, 188, 197, 198, 199, 200, 201, 223, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 256, 257, 260, 387, 388, 390, 399, 400, 401, 403, 408, 409, 461, 463, 465, 467, 471, 472, 476, 478, 482, 483, 484, 485, 486, 490, 492, 493, 495, 497, 502, 503, 517, 518], "correctli": [20, 26, 28, 31, 32, 46, 50, 87, 214, 218, 231, 249, 255, 262, 263, 269, 271, 389, 402, 498], "correl": [6, 83, 542], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 73, 75, 76, 80, 93, 94, 96, 97, 99, 100, 105, 106, 112, 113, 121, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 172, 175, 178, 195, 204, 207, 208, 226, 230, 232, 233, 244, 246, 247, 254, 340, 345, 349, 391, 392, 393, 397, 408, 409, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 473, 480, 481, 491, 496, 504, 507, 508, 509, 511, 515, 523, 524, 526, 527, 530, 531, 539], "correspondingli": [10, 491], "cosh": [6, 14, 25, 85, 486, 503], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 484, 486, 502, 503], "cost": [110, 111], "costli": 111, "could": [105, 128, 134, 136, 375], "count": [16, 21, 57, 87, 102, 108, 111, 146, 156, 157, 159, 160, 166, 170, 171, 389, 402, 412, 487, 498, 519, 532, 542], "count_nonzero": [6, 389], "counterclockwis": [147, 148, 475], "counterpart": [10, 128, 134, 136, 539], "cov": [6, 83, 428], "covari": [83, 88], "cover": [511, 515, 542], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 80, 84, 88, 96, 99, 112, 113, 115, 121, 125, 139, 156, 157, 158, 159, 161, 162, 164, 175, 232, 233, 244, 254, 258, 269, 391, 392, 393, 509, 523, 530, 531], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 98, 99, 100, 105, 108, 111, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 261, 340, 345, 391, 392, 393, 395, 406, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 506, 509, 511, 512, 515, 516, 523, 530, 531, 539, 542], "creation": [108, 111, 532, 539, 542, 546], "crop": [123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140], "cross": [6, 84, 195], "csingl": 9, "ct": 10, "ctype": 467, "cube": [70, 149, 492], "cubic": 111, "cuda": 4, "cumprod": [6, 105, 264, 539], "cumsum": [6, 101, 105, 265, 498, 508, 539], "cumul": [90, 91, 92, 101, 105, 264, 265, 346, 347, 498, 508], "cumulative_prod": 6, "cumulative_sum": 6, "cupi": [2, 532], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 81, 85, 86, 93, 94, 103, 105, 108, 111, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 157, 163, 169, 171, 174, 175, 181, 197, 198, 199, 235, 236, 237, 238, 239, 250, 256, 257, 258, 260, 373, 386, 387, 388, 395, 399, 400, 401, 403, 408, 409, 463, 465, 467, 471, 472, 478, 482, 483, 484, 486, 490, 497, 502, 503, 517, 518], "curv": 508, "custom": 539, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 212, 526], "cutoff": 220, "cycl": [125, 139, 195, 469], "cyclic": 405, "cython": 4, "d": [0, 16, 21, 23, 56, 74, 75, 76, 83, 91, 92, 96, 97, 98, 99, 100, 104, 105, 107, 108, 121, 125, 127, 132, 139, 141, 145, 147, 148, 160, 172, 173, 175, 179, 195, 205, 206, 208, 209, 213, 217, 218, 222, 226, 229, 247, 253, 264, 265, 271, 353, 389, 400, 401, 402, 405, 415, 459, 468, 477, 479, 481, 495, 498, 500, 504, 505, 506, 513, 519, 523, 526, 528, 539], "d0": [410, 437, 439], "d1": [410, 439], "d3": 97, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 96, 99, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 128, 134, 136, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 206, 212, 219, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 272, 340, 370, 383, 385, 387, 388, 390, 392, 393, 398, 399, 400, 401, 403, 405, 406, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 490, 492, 493, 494, 495, 496, 497, 501, 502, 503, 506, 509, 517, 518, 524, 526, 528, 529, 530, 531, 532, 542], "datatyp": [108, 216], "date": 4, "datetim": 108, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [88, 105, 270, 272, 377, 384, 496, 524], "decai": 423, "decim": [35, 105, 142, 143, 371, 472, 476], "decomposit": [202, 211, 216, 220, 224, 225, 542], "decompress": 233, "decreas": [102, 508], "decreasingli": [10, 124, 126, 130, 131], "deem": 155, "def": [0, 395], "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 212, 214, 216, 217, 218, 220, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 353, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 414, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 451, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 539], "default_rng": 6, "defg": 111, "defici": 216, "defin": [10, 29, 51, 89, 95, 108, 113, 123, 152, 153, 162, 169, 170, 171, 180, 204, 206, 218, 230, 250, 256, 261, 393, 399, 462, 475, 526, 531, 539], "definit": [89, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 150, 202, 508], "deg": [20, 409], "deg2rad": [6, 408, 409, 522], "degre": [6, 20, 93, 270, 272, 408, 409, 452, 475, 496, 522, 524, 546], "del": 546, "delet": [6, 22, 180], "delta": [10, 270, 272, 496, 522, 524], "demonstr": [0, 4, 108], "denot": [230, 526], "dens": [178, 195, 254], "densiti": 170, "depend": [4, 34, 100, 122, 128, 134, 136, 206, 208, 212, 218, 221, 223, 224, 232, 269, 271, 480, 529], "deprec": 386, "deprecationwarn": 386, "depth": [74, 75, 76, 106, 107, 173, 477, 491, 495, 528], "deriv": 166, "descend": 224, "descr": 108, "describ": [90, 108, 218, 229, 245, 464, 542], "descript": [90, 108, 129, 131, 170, 245, 464, 539], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 67, 112, 113, 121, 129, 130, 131, 161, 162, 164, 175, 232, 244, 392, 393, 459, 505, 509, 530, 531], "destin": [75, 76, 173, 259, 405, 406, 477, 495, 501, 528], "destruct": 546, "det": [6, 222], "detail": [35, 124, 126, 130, 131, 135, 136, 138, 140, 155, 214, 231, 476, 511, 512, 515, 516, 519, 539], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 70, 81, 85, 86, 93, 94, 103, 116, 117, 119, 151, 152, 153, 154, 157, 158, 160, 174, 199, 205, 206, 212, 221, 222, 229, 234, 235, 236, 237, 238, 239, 247, 250, 256, 257, 260, 388, 400, 401, 408, 409, 460, 463, 465, 471, 478, 480, 482, 484, 485, 486, 490, 492, 493, 497, 502, 503, 506, 517, 518, 520, 526], "devel": 4, "develop": [3, 4], "deviat": [105, 251, 267, 270, 272, 377, 410, 425, 432, 496, 524], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 80, 90, 96, 97, 99, 105, 110, 112, 113, 121, 122, 125, 139, 143, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 245, 246, 247, 251, 252, 254, 267, 270, 272, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 464, 494, 496, 509, 511, 515, 523, 524, 526, 530, 531], "df": [414, 430, 452, 453], "dfden": [418, 431], "dfnum": [418, 431], "dft": [10, 123, 128, 129, 133, 134, 137], "di": [97, 98], "diag": [6, 99, 100, 110, 121, 147, 148, 175, 207, 209, 224, 480, 506], "diag_indic": [6, 98, 141], "diag_indices_from": [6, 97, 141], "diagflat": [6, 96, 100, 506], "diagon": [6, 96, 97, 98, 99, 105, 110, 121, 141, 175, 202, 208, 209, 210, 229, 246, 382, 480, 506, 509, 510, 511, 512, 514, 515, 516, 539], "dice": 427, "dict": [108, 395], "dictionari": 108, "diff": [6, 92, 109, 166, 170], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 80, 90, 92, 96, 99, 101, 105, 108, 109, 112, 113, 121, 124, 125, 129, 130, 132, 135, 138, 139, 142, 147, 148, 149, 156, 157, 158, 159, 161, 162, 164, 166, 175, 180, 182, 210, 218, 229, 232, 233, 244, 245, 247, 254, 345, 391, 392, 393, 398, 400, 401, 406, 464, 469, 475, 497, 501, 509, 511, 515, 522, 523, 530, 531, 542], "differenti": 485, "digit": [6, 10, 142, 170], "dim": [17, 460], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 74, 75, 76, 82, 87, 88, 89, 97, 100, 101, 105, 106, 108, 118, 130, 131, 143, 147, 148, 166, 173, 178, 179, 195, 204, 206, 214, 216, 218, 221, 225, 226, 229, 230, 231, 245, 248, 249, 251, 252, 253, 254, 255, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 353, 357, 362, 373, 385, 386, 389, 391, 402, 406, 410, 440, 442, 443, 445, 459, 460, 464, 468, 475, 481, 491, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 511, 512, 515, 516, 519, 520, 521, 524, 526, 527, 539, 542], "dimension": [2, 4, 33, 79, 84, 87, 90, 95, 97, 98, 99, 100, 101, 102, 105, 109, 110, 123, 124, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 156, 157, 159, 166, 172, 178, 180, 195, 204, 212, 219, 221, 227, 228, 245, 249, 253, 254, 255, 262, 263, 266, 268, 270, 272, 376, 385, 386, 391, 394, 402, 464, 488, 496, 498, 500, 505, 508, 519, 524, 525, 527, 532], "direct": [10, 89, 101, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 147, 148, 166, 204, 388, 475], "directli": [108, 158, 178, 244, 389, 501], "directori": 165, "dirichlet": 6, "discard": 518, "discont": 522, "discontinu": 522, "discret": [3, 10, 79, 84, 92, 101, 109, 123, 124, 125, 126, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 166, 410, 485, 532], "dispers": 455, "displac": [105, 378], "disregard": 469, "distanc": [166, 490], "distinct": [152, 153, 250, 256, 469], "distinguish": 108, "distribut": [3, 4, 244, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 542], "divid": [6, 39, 106, 107, 151, 154, 172, 257, 465, 491, 517, 527], "divis": [103, 151, 154, 257, 400, 401, 465, 491, 517, 518], "divisor": [163, 197, 270, 272, 496, 524], "divmod": [6, 539], "dlpack": 155, "dmlc": 155, "dn": [410, 437, 439], "do": [3, 4, 108, 246, 252, 386, 412, 474, 508], "docstr": 539, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539], "doe": [22, 23, 39, 69, 95, 105, 110, 120, 122, 137, 152, 153, 155, 180, 221, 261, 264, 265, 355, 398, 469, 491, 500], "domain": [10, 128, 133], "done": [3, 49, 105, 110, 228, 340, 519, 522], "dot": [6, 105, 110, 111, 179, 202, 209, 211, 217, 220, 221, 223, 224, 226, 227, 228, 230, 247, 504, 525, 526], "doubl": [9, 226, 423, 504], "down": 148, "dp": [103, 205, 208, 222, 223, 400, 401, 497, 517], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 262, 263, 266, 268, 269, 340, 345, 391, 392, 393, 404, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "dpnp": [0, 2, 3, 4, 10, 532, 539, 542, 543, 546], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 80, 96, 97, 99, 112, 113, 121, 125, 139, 142, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 176, 178, 232, 233, 244, 246, 254, 273, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531, 532], "dpnp_iface_arraycr": [254, 391], "draw": [410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "drawn": [410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 435, 436, 438, 441, 444, 450, 451, 452, 453, 454, 455, 456, 457, 458, 480], "drill": [412, 429], "driver": 2, "drop": [3, 108], "dsplit": [6, 75, 76, 107, 491], "dst": 82, "dstack": [6, 74, 75, 76, 173, 477, 491, 495, 528], "dt": [108, 508], "dt2": 108, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 75, 76, 77, 78, 81, 83, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 103, 105, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 185, 187, 188, 189, 190, 197, 198, 199, 200, 201, 217, 220, 224, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 346, 347, 359, 365, 374, 377, 379, 382, 384, 387, 388, 390, 392, 393, 399, 400, 401, 402, 403, 408, 409, 410, 432, 438, 454, 463, 464, 465, 467, 470, 471, 472, 476, 477, 478, 482, 483, 484, 485, 486, 489, 490, 492, 493, 495, 496, 497, 498, 500, 502, 503, 506, 509, 510, 514, 517, 518, 524, 526, 527, 528, 530, 531, 539], "due": [137, 546], "dump": 6, "dx": [166, 508], "dy": 166, "dz": 166, "e": [9, 10, 14, 25, 27, 47, 60, 90, 91, 100, 108, 112, 113, 118, 121, 124, 128, 129, 130, 131, 134, 136, 137, 149, 157, 161, 162, 166, 175, 199, 207, 222, 227, 231, 234, 252, 392, 393, 410, 462, 466, 469, 499, 509, 521, 530, 531], "ea": 111, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 77, 78, 81, 83, 85, 86, 91, 92, 97, 100, 102, 103, 105, 106, 108, 111, 114, 116, 117, 119, 124, 126, 128, 130, 131, 134, 135, 136, 138, 140, 147, 148, 149, 150, 151, 154, 158, 166, 167, 168, 170, 171, 172, 177, 181, 185, 187, 188, 195, 199, 200, 201, 204, 207, 208, 209, 210, 212, 225, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 257, 259, 260, 261, 371, 386, 387, 389, 390, 395, 399, 400, 401, 403, 406, 412, 429, 460, 461, 463, 465, 466, 469, 471, 472, 473, 476, 478, 482, 483, 484, 486, 491, 492, 493, 495, 497, 501, 502, 503, 505, 508, 511, 512, 515, 516, 517, 518, 519, 520, 526, 527, 539], "easier": 500, "easiest": [4, 395], "easili": [0, 171], "edg": [73, 102, 170, 171, 395], "edge_ord": 166, "ediff1d": [6, 101, 166], "effect": [111, 149, 152, 153, 250, 256, 400, 401, 522], "effici": [10, 123, 137, 157, 216, 220, 224], "efgh": 111, "eig": [6, 208, 209, 210], "eigenvalu": [207, 208, 209, 210, 542], "eigenvector": [207, 208, 209, 210], "eigh": [6, 207, 209, 210], "eight": 218, "eigval": [6, 207, 208, 210], "eigvalsh": [6, 207, 208, 209], "einstein": [104, 110, 111, 179, 226, 228, 247, 394, 504, 526], "einsum": [6, 104, 111, 179, 226, 228, 247, 394, 504, 526], "einsum_path": [6, 110], "either": [37, 38, 45, 56, 89, 90, 100, 108, 124, 126, 128, 130, 131, 134, 136, 138, 140, 141, 166, 179, 206, 208, 210, 218, 221, 245, 262, 263, 266, 268, 269, 271, 460, 464, 469, 479, 480, 501, 508], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 81, 82, 85, 86, 90, 91, 92, 95, 98, 100, 101, 102, 103, 105, 108, 109, 111, 114, 116, 117, 119, 120, 121, 122, 124, 126, 130, 131, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 204, 206, 209, 215, 226, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 255, 256, 257, 258, 260, 261, 264, 265, 266, 268, 269, 270, 271, 272, 335, 336, 343, 344, 346, 347, 349, 350, 353, 355, 356, 359, 361, 363, 364, 369, 370, 371, 372, 374, 377, 378, 381, 384, 386, 387, 388, 389, 390, 398, 399, 400, 401, 402, 403, 405, 407, 459, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 492, 493, 496, 497, 498, 500, 502, 503, 504, 505, 506, 508, 510, 512, 514, 516, 517, 518, 519, 520, 522, 524, 526, 529, 539, 542, 546], "element_count": [105, 374, 487], "ellipsi": 110, "els": [0, 108, 222, 278], "elsewher": [121, 175, 509, 529], "emit": 386, "empti": [4, 6, 36, 105, 113, 124, 126, 130, 131, 135, 136, 138, 140, 157, 161, 162, 212, 350, 392, 393, 395, 398, 491, 530, 531, 539], "empty_lik": [6, 36, 112, 162, 393, 531], "enabl": [141, 216, 220, 224], "encount": [264, 265, 266, 268, 480], "end": [22, 23, 68, 95, 100, 108, 109, 111, 129, 164, 180, 232, 244, 395], "end_tim": 0, "end_valu": 395, "endian": 108, "endpoint": [23, 164, 232, 244, 508], "engin": 446, "enlarg": 469, "enough": 170, "ensur": 467, "entir": [56, 90, 128, 170, 171, 245, 251, 266, 267, 268, 270, 272, 395, 464, 496, 524], "entiti": 469, "entri": [39, 95, 105, 106, 108, 112, 120, 128, 134, 136, 141, 146, 147, 148, 172, 376, 491, 494, 526, 527], "enumer": 155, "env": 4, "environ": 4, "ep": [142, 216, 220, 388, 462, 490], "epsilon": [216, 462], "epsneg": 142, "equal": [6, 16, 17, 21, 33, 37, 38, 39, 56, 60, 63, 75, 76, 84, 88, 92, 105, 106, 121, 164, 166, 167, 168, 170, 171, 172, 173, 182, 184, 192, 194, 199, 200, 201, 206, 215, 220, 221, 228, 232, 244, 257, 364, 390, 395, 410, 420, 454, 465, 471, 472, 476, 477, 482, 485, 488, 491, 494, 495, 509, 511, 515, 521, 527, 528], "equal_nan": [17, 37, 182, 519], "equat": [212, 223, 227, 228, 542], "equiv": [49, 69, 75, 76, 82, 105, 110, 173, 215, 247, 340, 477, 495, 526, 528], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 80, 89, 90, 93, 94, 95, 103, 104, 105, 106, 107, 111, 118, 120, 145, 152, 153, 154, 172, 195, 225, 226, 227, 231, 245, 248, 257, 260, 280, 335, 336, 348, 362, 370, 373, 383, 385, 389, 394, 397, 399, 408, 409, 410, 438, 464, 465, 468, 475, 476, 481, 488, 497, 498, 500, 504, 507, 517, 519, 521, 526, 527, 539, 546], "error": [90, 106, 110, 115, 128, 133, 172, 207, 245, 460, 464, 491, 494, 527, 532, 539], "essenti": 4, "estim": [88, 171, 412, 429, 508], "et": 10, "etc": [10, 36, 41, 108, 124, 126, 130, 131, 135, 136, 138, 140, 429], "euclidean": 212, "euler_gamma": 9, "evalu": [16, 17, 21, 105, 110, 111, 114, 184, 186, 192, 226, 228, 253, 335, 336, 394, 480, 504], "even": [10, 105, 108, 125, 127, 128, 129, 132, 133, 134, 136, 137, 139, 184, 186, 192, 252, 357, 395, 472, 476], "evenli": [23, 164, 232, 244, 472, 508], "event": 239, "everi": [68, 136, 406, 501], "everywher": [134, 485], "exact": [120, 217, 398], "exactli": [10, 48, 160, 410, 438, 480], "examin": 212, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 348, 350, 353, 354, 355, 357, 362, 364, 368, 370, 373, 374, 375, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539, 546], "exce": [239, 491], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 77, 78, 80, 81, 85, 86, 93, 94, 101, 102, 103, 104, 105, 112, 113, 114, 116, 117, 119, 121, 122, 135, 136, 143, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 172, 173, 174, 175, 181, 185, 187, 188, 197, 198, 199, 200, 201, 217, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 251, 255, 256, 257, 260, 266, 267, 268, 269, 270, 271, 272, 340, 355, 387, 388, 390, 392, 393, 399, 400, 401, 402, 403, 408, 409, 459, 463, 465, 466, 467, 471, 472, 478, 482, 483, 484, 486, 488, 490, 491, 492, 493, 496, 497, 498, 502, 503, 517, 518, 524, 526, 530, 531, 542], "exclud": [11, 12, 22, 232, 410, 454], "exclus": [410, 438], "execut": [3, 4, 40, 41, 42, 84, 88, 115, 158, 258, 269, 413, 415, 416, 426, 431, 447, 546], "executor": 0, "exist": [10, 74, 75, 76, 107, 108, 118, 155, 173, 180, 477, 491, 495, 521, 528, 542], "exp": [6, 10, 117, 119, 123, 222, 236, 238, 245], "exp2": [6, 116, 119], "expand": [101, 118], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 77, 78, 81, 85, 86, 87, 90, 91, 92, 93, 94, 103, 104, 108, 114, 116, 117, 119, 122, 134, 143, 149, 150, 151, 152, 153, 154, 163, 167, 168, 169, 174, 177, 181, 182, 185, 187, 188, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 255, 256, 257, 260, 264, 265, 267, 269, 270, 271, 272, 387, 388, 390, 399, 400, 401, 402, 403, 408, 409, 461, 463, 464, 465, 471, 472, 476, 478, 482, 483, 484, 485, 486, 490, 492, 493, 496, 497, 498, 502, 503, 517, 518, 524, 529], "explain": [126, 131, 136, 140, 539], "explan": 108, "explicit": 110, "explicitli": [100, 124, 126, 130, 131, 135, 136, 138, 140], "exploit": [10, 137], "explor": [111, 412, 429], "expm1": [6, 116, 117, 236], "expon": [10, 116, 117, 119, 149, 198, 215, 238, 239, 245, 400, 401, 436, 542], "exponenti": [6, 10, 111, 238, 239, 245, 423, 449], "expos": [156, 539], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 110, 111, 198, 233, 546], "extend": [10, 108, 196, 395, 539], "extens": [0, 1, 3, 4, 9, 165, 233, 532], "extra": [108, 134, 160], "extract": [6, 96, 99, 100, 110, 121, 145, 175, 178, 246, 398, 480, 500, 506], "extrapol": 469, "extrema": 542, "ey": [6, 68, 77, 78, 87, 105, 130, 131, 152, 153, 175, 179, 196, 211, 215, 216, 227, 228, 229, 243, 250, 256, 481, 506], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 103, 105, 108, 110, 112, 113, 114, 116, 117, 119, 121, 122, 125, 137, 139, 143, 149, 150, 151, 152, 153, 154, 161, 162, 163, 166, 167, 168, 169, 174, 177, 181, 185, 186, 187, 188, 197, 198, 199, 200, 201, 215, 218, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 256, 257, 260, 340, 345, 353, 387, 388, 390, 392, 393, 399, 400, 401, 403, 408, 409, 431, 459, 460, 461, 463, 465, 467, 468, 471, 472, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 513, 517, 518, 520, 526, 529, 530, 531], "f0": 108, "f1": 108, "f2": 108, "f4": 69, "f8": [69, 108], "f_contigu": [43, 45, 186, 467], "f_k": 10, "fab": [6, 11, 12], "fact": 209, "factor": [10, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 202, 221], "fail": [105, 373, 412], "fallback": [207, 209, 413, 415, 416, 426, 431, 447], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 33, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 64, 65, 67, 69, 80, 83, 87, 88, 90, 92, 95, 102, 105, 108, 110, 111, 113, 114, 120, 141, 155, 158, 162, 164, 167, 168, 170, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 200, 201, 202, 203, 214, 216, 218, 220, 224, 225, 231, 232, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 255, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 278, 335, 336, 337, 338, 340, 358, 359, 360, 365, 377, 379, 384, 389, 390, 393, 402, 404, 464, 467, 468, 480, 483, 488, 496, 498, 519, 523, 524, 529, 531], "famili": 10, "fanci": 500, "fashion": [239, 539], "fast": [10, 123, 124, 126, 130, 131, 136, 137, 140], "faster": [10, 152, 153], "fastest": [105, 186, 353, 459, 468], "fb": [111, 513], "featur": 108, "fetch": 468, "few": 141, "fft": [6, 532, 542], "fft2": [6, 123, 126, 130], "fftfreq": [6, 10, 123, 127, 132, 139], "fftn": [6, 123, 124, 131, 137, 140], "fftshift": [6, 10, 124, 126, 131, 132], "fh": 157, "field": [108, 253], "field1": 108, "file": [156, 157, 159, 160, 165, 233], "filenam": [157, 233], "fill": [6, 22, 36, 105, 112, 113, 141, 161, 162, 170, 171, 253, 261, 345, 392, 393, 469, 509, 530, 531], "fill_diagon": 6, "fill_valu": [161, 162], "filt": 513, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 485, 509, 511, 515, 523, 530, 531], "final": [4, 10, 83, 136, 137, 138, 140, 164, 244], "find": [34, 57, 83, 102, 105, 122, 170, 216, 220, 224, 372, 388, 389, 466, 479, 488, 490, 519, 542], "fine": 4, "finfo": [220, 388, 462, 490], "finfo_object": 142, "finit": [42, 185, 187, 188, 189, 190, 261, 490], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 62, 63, 64, 68, 74, 75, 76, 81, 83, 89, 90, 100, 103, 104, 105, 108, 111, 114, 117, 124, 126, 128, 130, 131, 146, 149, 151, 152, 153, 154, 163, 166, 167, 168, 170, 171, 172, 174, 179, 180, 182, 186, 194, 196, 197, 199, 200, 201, 204, 206, 213, 217, 226, 227, 229, 230, 233, 238, 239, 240, 242, 243, 246, 247, 249, 250, 252, 253, 255, 256, 257, 260, 262, 263, 353, 386, 390, 394, 395, 398, 400, 401, 402, 459, 465, 468, 471, 473, 475, 477, 479, 480, 488, 489, 493, 497, 498, 499, 501, 504, 506, 517, 519, 521, 525, 526, 527, 528], "fit": [212, 466], "fix": [6, 35, 71, 100, 108, 150, 405, 472, 476, 518], "flag": [43, 45, 105, 108, 186, 345, 467], "flanneri": 10, "flat": [31, 32, 105, 109, 144, 353, 355, 386, 459, 460, 466, 520], "flatit": 386, "flatnonzero": [6, 389], "flatten": [6, 22, 31, 32, 33, 75, 76, 87, 91, 92, 95, 96, 99, 100, 105, 109, 141, 145, 170, 171, 180, 231, 249, 252, 255, 262, 263, 264, 265, 269, 271, 352, 367, 375, 389, 394, 406, 459, 460, 466, 473, 488, 500, 501, 506, 519, 520, 525], "flexibl": [104, 108, 157, 217], "flip": [6, 59, 61, 100, 141, 147, 148, 181, 206, 412, 475], "fliplr": [6, 100, 141, 146, 148, 206, 475], "flipud": [6, 100, 141, 146, 147, 206, 475], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 69, 81, 90, 92, 108, 112, 113, 117, 121, 122, 125, 139, 142, 143, 149, 156, 157, 158, 159, 160, 161, 162, 163, 166, 170, 171, 175, 177, 198, 212, 215, 216, 218, 220, 231, 232, 233, 238, 239, 244, 245, 249, 251, 252, 255, 261, 267, 270, 272, 388, 392, 393, 400, 401, 410, 414, 439, 440, 442, 443, 445, 448, 449, 451, 454, 461, 462, 463, 464, 478, 485, 496, 509, 522, 524, 530, 531, 539, 542], "float16": [9, 149], "float32": [0, 9, 42, 44, 49, 69, 83, 91, 105, 108, 110, 149, 340, 388, 410, 432, 437, 439, 440, 442, 443, 445, 451, 454, 467, 470], "float64": [0, 9, 44, 49, 56, 69, 92, 105, 108, 110, 340, 410, 411, 417, 418, 419, 421, 423, 424, 425, 432, 433, 436, 437, 439, 440, 442, 443, 444, 445, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 470, 485, 490, 527], "float_pow": [6, 400, 401], "floor": [6, 35, 71, 143, 151, 257, 465, 472, 476, 518], "floor_divid": [6, 257, 465], "flop": 111, "flush": 157, "fmax": [6, 153, 249, 250, 256, 266, 400, 401], "fmin": [6, 152, 250, 255, 256, 268, 400, 401], "fmod": [6, 257, 400, 401, 465], "fn": 158, "fname": 233, "follow": [4, 10, 56, 108, 118, 134, 142, 155, 176, 208, 210, 218, 220, 226, 395, 467, 504, 539, 542], "forc": [108, 110], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 74, 80, 96, 99, 105, 107, 110, 111, 130, 131, 134, 161, 162, 164, 184, 192, 195, 206, 214, 225, 229, 232, 244, 248, 383, 395, 469, 477, 523, 528], "format": [108, 155, 157, 160, 542], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 406, 501], "forth": [226, 504], "fortran": [45, 49, 105, 186, 340, 353, 459, 460, 467, 468, 520], "forward": [10, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 166], "found": [4, 479, 539], "four": [410, 439], "fourier": [10, 123, 124, 125, 126, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 532], "fourth": 124, "frac": [10, 508], "fraction": [258, 518], "free": [105, 370], "freedom": [270, 272, 452, 496, 524], "freq": [125, 127, 132, 139], "freq_spectrum": 128, "frequenc": [10, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139], "freshli": [189, 190, 526], "frexp": [6, 198], "fro": [203, 214, 218, 231], "frobeniu": [203, 218], "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 69, 72, 75, 76, 80, 82, 90, 93, 94, 96, 97, 99, 100, 105, 107, 108, 110, 112, 113, 117, 120, 121, 125, 129, 138, 139, 140, 146, 149, 155, 156, 157, 158, 159, 160, 161, 162, 166, 170, 173, 175, 178, 180, 195, 198, 207, 209, 210, 216, 217, 229, 233, 245, 246, 253, 254, 341, 345, 376, 381, 391, 392, 393, 395, 398, 402, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 464, 468, 469, 470, 475, 477, 479, 480, 493, 494, 495, 498, 500, 501, 506, 509, 511, 513, 515, 516, 519, 521, 522, 523, 528, 529, 530, 531, 542], "from_": 69, "from_dlpack": 6, "frombuff": [6, 157, 159, 160, 233], "fromfil": [6, 156, 159, 160], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 156, 157, 160], "frompyfunc": 6, "fromregex": [6, 233], "fromstr": [6, 156, 157, 159, 233], "front": 513, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "full_lik": [6, 36, 113, 161, 393, 531], "full_matric": 224, "fulli": [108, 252], "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 80, 84, 88, 90, 93, 94, 100, 103, 105, 110, 112, 113, 115, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 136, 137, 140, 141, 149, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 170, 171, 175, 186, 195, 204, 206, 207, 209, 213, 214, 217, 218, 219, 225, 226, 229, 230, 231, 233, 236, 238, 239, 245, 246, 248, 253, 257, 258, 269, 335, 336, 345, 348, 355, 370, 373, 383, 392, 393, 395, 400, 401, 406, 408, 409, 410, 413, 415, 416, 426, 431, 447, 459, 464, 465, 467, 469, 476, 477, 482, 485, 496, 500, 501, 504, 505, 511, 512, 515, 516, 517, 521, 524, 528, 529, 530, 531, 532, 539, 542], "fundament": [10, 108], "further": [95, 511, 515], "futur": [108, 171], "fweight": 88, "g": [4, 10, 108, 112, 113, 121, 161, 162, 175, 218, 392, 393, 410, 509, 530, 531, 546], "g7401c6c2ac3": 6, "gamma": [6, 450], "gauss": 10, "gaussian": [410, 432, 456], "gc": 111, "gcd": [6, 197], "gen": 110, "gender": 108, "gener": [4, 10, 33, 56, 83, 108, 129, 134, 137, 140, 164, 179, 207, 208, 209, 210, 214, 220, 221, 231, 233, 244, 410, 412, 415, 446, 459, 490, 508, 511, 515, 523, 539, 542], "genfromtxt": [6, 233], "geometr": [6, 164, 232], "geomspac": [6, 232, 244], "get": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 98, 99, 105, 112, 113, 121, 125, 128, 134, 136, 139, 149, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 225, 230, 232, 233, 244, 246, 254, 345, 373, 391, 392, 393, 395, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 501, 509, 511, 512, 515, 516, 523, 526, 530, 531, 539], "get_arrai": 105, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 410], "get_sycl_devic": 410, "get_sycl_queu": 410, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 108], "getter": [105, 373], "gid": 171, "github": 155, "give": [10, 99, 105, 149, 171, 383, 468, 481, 487, 519], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 74, 80, 87, 88, 91, 92, 101, 104, 105, 107, 108, 109, 111, 112, 113, 120, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 152, 153, 161, 162, 164, 166, 170, 171, 180, 182, 211, 218, 226, 230, 232, 244, 246, 249, 250, 252, 253, 255, 256, 264, 265, 266, 268, 269, 270, 271, 272, 337, 338, 340, 346, 347, 360, 365, 366, 371, 374, 377, 379, 384, 386, 389, 392, 393, 398, 402, 404, 405, 410, 415, 437, 454, 464, 466, 467, 468, 472, 473, 474, 475, 477, 479, 480, 487, 491, 496, 498, 500, 504, 505, 508, 509, 519, 521, 524, 526, 528, 530, 531, 539], "global": 0, "golub": 218, "good": 422, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 80, 96, 99, 112, 113, 121, 125, 139, 156, 157, 158, 159, 161, 162, 164, 175, 232, 233, 244, 254, 391, 392, 393, 509, 523, 530, 531], "grade": 108, "gradient": [6, 101, 109, 212], "graphic": 4, "great": 10, "greater": [6, 60, 63, 105, 106, 114, 151, 168, 199, 200, 201, 216, 221, 364, 390, 395, 471, 480, 482, 494, 522], "greater_equ": [6, 114, 167, 200, 201, 390], "greatest": [151, 163, 197], "greedi": [110, 111], "grid": [40, 41, 42, 158, 178, 219, 253, 254, 391, 394], "group": [34, 389], "guarante": [108, 467, 468], "guid": [2, 3], "gumbel": 6, "gz": 233, "h": [165, 202, 218, 221, 253], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 83, 90, 91, 92, 102, 108, 114, 118, 128, 133, 134, 158, 166, 167, 168, 173, 177, 183, 184, 191, 192, 200, 201, 209, 222, 224, 229, 245, 251, 252, 257, 264, 265, 267, 269, 270, 271, 272, 386, 390, 395, 402, 461, 462, 463, 464, 465, 466, 474, 478, 480, 494, 495, 496, 498, 499, 500, 505, 506, 520, 524, 539], "had": [406, 501], "hadamard": 111, "half": [14, 25, 124, 126, 127, 128, 130, 131, 232, 410, 440, 442, 443, 445, 454, 499], "ham": 6, "han": 6, "hand": [89, 204, 228], "handl": [23, 108, 122, 233, 389, 406, 460, 500, 501, 542], "happen": [49, 56, 105, 340, 412, 508], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 108, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 74, 75, 76, 77, 78, 81, 85, 86, 89, 90, 91, 92, 93, 94, 103, 104, 107, 108, 114, 116, 117, 119, 122, 130, 131, 140, 142, 143, 149, 150, 151, 152, 153, 154, 163, 167, 168, 169, 173, 174, 177, 181, 182, 185, 187, 188, 189, 190, 197, 198, 199, 200, 201, 206, 212, 214, 217, 219, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 387, 388, 390, 398, 399, 400, 401, 402, 403, 408, 409, 429, 461, 463, 464, 465, 466, 467, 468, 471, 472, 476, 477, 478, 482, 483, 484, 485, 486, 490, 492, 493, 495, 496, 497, 498, 502, 503, 505, 517, 518, 522, 524, 526, 528, 539], "hd": 111, "header": 165, "heapsort": [33, 488], "heavisid": 6, "hello": 108, "help": 546, "helper": 542, "henc": [118, 166], "here": [6, 108, 110, 128, 133, 134, 511, 515], "hermit": [208, 210], "hermitian": [128, 133, 134, 136, 137, 202, 207, 208, 209, 210, 216, 220, 224, 225, 542], "hfft": [6, 10, 133], "hierarchi": 194, "high": [68, 134, 410, 438, 441, 454], "higher": [105, 110, 172, 180, 357, 525, 527], "highest": 123, "highli": 157, "hist": [170, 448], "hist_0": 171, "hist_1": 171, "histogram": [6, 102, 171, 479, 542], "histogram2d": 6, "histogram_bin_edg": [6, 170], "histogramdd": [6, 170], "hold": [73, 91, 92, 170, 218, 252, 264, 265, 269, 271, 459, 506], "homogen": 108, "hopkin": 218, "horizont": [74, 75, 76, 100, 107, 141, 146, 172, 173, 206, 475, 477, 491, 495, 528], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 509, 511, 515, 523, 530, 531], "household": 221, "how": [0, 4, 108, 134, 137, 166, 405, 406, 460, 500, 501, 511, 515], "howev": [105, 375, 500], "hsplit": [6, 75, 76, 491], "hstack": [6, 74, 75, 76, 107, 477, 491, 495, 528], "http": [4, 155], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 484, 486, 502, 503, 542], "hypergeometr": 6, "hypot": [6, 464], "hypotenus": [174, 464], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 340, 345, 355, 357, 364, 370, 373, 375, 378, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539, 546], "i0": 6, "i1": [105, 108, 378], "i2": [105, 108, 378], "i3": [105, 378], "i4": [69, 108], "i7": 110, "i8": [69, 108], "iaxi": 395, "iaxis_pad_width": 395, "icpx": 4, "icx": 4, "id": [16, 21], "ideal": 485, "ident": [3, 6, 16, 21, 42, 90, 108, 121, 132, 141, 223, 230, 449, 526], "identifi": 108, "idx": 180, "ieee": 142, "ifft": [6, 123, 130, 131, 133, 134, 139], "ifft2": [6, 124, 129, 131], "ifftn": [6, 126, 129, 130], "ifftshift": [6, 10, 127, 131], "ignor": [31, 32, 89, 108, 152, 153, 160, 170, 171, 249, 250, 251, 255, 256, 262, 263, 266, 267, 268, 270, 272, 496, 524], "ihfft": [6, 128], "ii": [110, 433], "iinfo": 427, "iinfo_object": 176, "ij": [110, 111, 253], "ijk": 110, "il": 111, "il1": 511, "il2": 511, "illustr": 209, "ilm": 110, "im": [219, 394], "imag": [6, 10, 20, 37, 105, 461, 462, 469, 539], "imaginari": [20, 37, 105, 134, 152, 153, 177, 183, 184, 191, 192, 207, 208, 210, 215, 250, 256, 261, 354, 461, 462, 489, 519], "implement": [3, 4, 6, 44, 123, 155], "impli": [108, 459], "implicit": 110, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 348, 350, 353, 354, 355, 357, 362, 364, 368, 373, 374, 375, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 435, 444, 448, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "improv": 110, "in1d": 6, "in_array1": 115, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 80, 90, 96, 99, 102, 110, 111, 122, 161, 162, 164, 165, 170, 171, 184, 192, 220, 232, 244, 245, 251, 252, 266, 267, 268, 270, 272, 410, 454, 464, 485, 496, 523, 524], "include_initi": 90, "inclus": [410, 438, 441, 480], "increas": [102, 108, 118, 129, 134, 170, 395, 469, 523], "increment": 386, "ind": [33, 102, 227, 405, 406, 511, 512, 515, 516], "independ": 204, "index": [4, 22, 31, 32, 33, 34, 72, 105, 108, 111, 121, 124, 130, 138, 145, 155, 178, 180, 186, 195, 253, 262, 263, 341, 353, 355, 378, 386, 389, 405, 406, 459, 460, 468, 469, 479, 480, 491, 500, 501, 511, 515, 519, 520, 529, 532, 542], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 90, 95, 97, 98, 102, 105, 106, 108, 110, 111, 120, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 145, 155, 158, 170, 172, 180, 227, 228, 246, 247, 254, 262, 263, 337, 338, 339, 363, 366, 372, 381, 386, 389, 397, 405, 406, 460, 479, 482, 483, 488, 491, 500, 501, 507, 511, 512, 515, 516, 519, 520, 526, 527, 529], "indices_or_sect": [39, 106, 172, 491, 527], "indirect": [33, 488], "individu": [386, 420], "inequ": 390, "inexact": [149, 261, 269, 271], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 81, 103, 182, 185, 187, 188, 189, 190, 203, 214, 218, 231, 234, 235, 237, 250, 256, 261, 262, 263, 266, 268, 271, 403, 490, 492, 517], "infer": [42, 90, 245, 464, 468], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 151, 185, 187, 188, 189, 190, 257, 261, 266, 268, 271, 465, 518, 542], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 203, 218, 485], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 105, 108, 128, 134, 136, 142, 351, 467, 539, 542], "initi": [18, 19, 90, 105, 112, 160, 249, 255, 266, 268, 269, 271, 358, 360, 365, 379, 402, 410, 498], "inner": [6, 89, 110, 111, 213, 217, 247, 394], "innermost": [206, 214, 229, 248], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 73, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 213, 214, 216, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 353, 362, 385, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 432, 438, 454, 459, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 517, 518, 519, 522, 523, 524, 525, 526, 527, 530, 531], "insert": [6, 22, 31, 32, 95, 100, 102, 105, 110, 118, 164, 170, 232, 244, 262, 263, 266, 268, 372, 406, 468, 479, 480, 542], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 128, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 175, 178, 232, 233, 244, 246, 247, 254, 340, 345, 386, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 526, 530, 531], "instead": [34, 49, 100, 104, 105, 110, 118, 150, 164, 170, 171, 178, 186, 217, 232, 239, 244, 249, 255, 340, 389, 402, 460, 469, 498, 539], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 44, 56, 66, 67, 75, 76, 87, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 105, 106, 108, 112, 113, 114, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 171, 172, 175, 176, 178, 180, 204, 206, 212, 215, 218, 226, 227, 228, 229, 230, 231, 232, 244, 245, 246, 249, 251, 252, 255, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 355, 362, 374, 383, 385, 386, 392, 393, 395, 396, 397, 402, 405, 406, 410, 438, 441, 460, 464, 466, 468, 469, 473, 474, 475, 476, 487, 488, 491, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 524, 526, 527, 530, 531, 539], "int16": 108, "int32": [0, 9, 44, 69, 108, 112, 113, 121, 156, 159, 161, 162, 175, 233, 269, 271, 392, 393, 410, 412, 420, 422, 427, 429, 435, 438, 454, 470, 498, 509, 530, 531], "int64": [0, 9, 69, 108, 269, 271, 470], "int8": [108, 402], "int_": 9, "int_0": 508, "int_t": 508, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 90, 91, 92, 102, 105, 106, 108, 143, 146, 149, 150, 151, 155, 163, 170, 172, 176, 181, 195, 197, 198, 199, 215, 218, 226, 227, 229, 231, 245, 249, 251, 255, 257, 264, 265, 266, 267, 268, 269, 270, 271, 272, 375, 383, 400, 401, 402, 405, 410, 438, 441, 446, 460, 464, 465, 466, 468, 471, 472, 473, 475, 476, 479, 480, 481, 491, 493, 496, 498, 500, 504, 506, 518, 519, 520, 522, 524, 527, 539], "integer_lik": [226, 504], "integr": [3, 4, 56, 90, 92, 149, 170, 245, 251, 252, 258, 267, 270, 272, 400, 401, 464, 496, 498, 508, 524], "intel": [3, 110], "intend": [105, 383], "intent": 149, "interchang": [105, 259, 380, 499], "interfac": [0, 156], "interior": 166, "intermedi": [91, 110, 111], "intern": [33, 410, 488], "interp": 6, "interpol": [134, 469, 485], "interpret": [2, 40, 41, 42, 48, 67, 80, 105, 108, 128, 134, 136, 156, 195, 246, 355, 389, 405, 539], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 102, 118, 164, 232, 244, 410, 438, 440, 442, 443, 445, 453, 454, 499], "intp": [269, 271], "intrins": 539, "introduc": 473, "introduct": 10, "introselect": [105, 364, 396], "inv": [6, 203, 220], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 198, 211, 220, 227, 228, 236, 456, 484, 486, 502, 503, 519], "invert": [6, 59, 61, 211, 220, 227], "invok": 539, "involv": 227, "io": [155, 233], "irfft": [6, 125, 128, 133, 135, 136, 137, 139], "irfft2": [6, 134, 136, 138], "irfftn": [6, 134, 135, 140], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 108, "isbuiltin": 108, "isclos": [6, 17], "iscomplex": [6, 184, 191], "iscomplexobj": [6, 183, 192], "isdtyp": 6, "isfinit": [6, 187, 188, 189, 190, 261, 266, 268, 271], "isfortran": 6, "isin": 6, "isinf": [6, 185, 188, 189, 190, 261], "isn": 108, "isnan": [6, 185, 187, 189, 190, 261, 264, 265, 266, 268, 269, 271], "isnat": [6, 188], "isneginf": [6, 185, 187, 188, 190, 261], "isposinf": [6, 185, 187, 188, 189, 261], "isreal": [6, 183, 192], "isrealobj": [6, 184, 191], "isscalar": 6, "issu": 130, "issubdtyp": 6, "item": [6, 34, 105, 156, 157, 159, 519, 532], "item_dtyp": 108, "item_hasobject": 108, "item_is_point": 108, "items": [68, 105, 108], "iter": [6, 40, 41, 42, 105, 111, 144, 156, 157, 159, 160, 352, 353, 386, 406, 459, 469, 501, 521, 542], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 96, 105, 128, 134, 136, 142, 170, 171, 175, 207, 208, 209, 210, 217, 220, 228, 251, 267, 270, 272, 383, 397, 447, 459, 464, 468, 488, 496, 507, 508, 509, 524, 539], "itself": [49, 105, 108, 198, 261, 340, 539], "iu": 246, "iu1": [246, 515], "iu2": 515, "ix_": 6, "ixgrid": 195, "j": [36, 77, 78, 105, 110, 124, 126, 128, 129, 130, 131, 133, 134, 137, 138, 140, 149, 158, 177, 178, 196, 202, 207, 208, 218, 219, 226, 229, 237, 247, 261, 383, 394, 403, 406, 461, 489, 493, 501, 504], "j1": 196, "jame": 10, "ji": 110, "jil": 110, "jk": [110, 111], "jl": 111, "john": [10, 218], "join": [74, 75, 76, 107, 173, 180, 477, 491, 495, 521, 528, 542], "jump": [93, 408], "just": [68, 74, 100, 108, 124, 130, 135, 137, 138, 180], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 96, 99, 103, 105, 110, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 162, 163, 167, 168, 169, 174, 177, 181, 185, 187, 188, 196, 197, 198, 199, 200, 201, 212, 221, 223, 224, 225, 226, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 250, 256, 257, 260, 280, 340, 345, 387, 388, 390, 393, 399, 400, 401, 403, 408, 409, 459, 461, 463, 465, 471, 472, 475, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 504, 509, 510, 511, 512, 514, 515, 516, 517, 518, 522, 526, 529, 531, 546], "kaiser": 6, "kappa": 455, "keep": [48, 49, 105, 340, 519], "keepdim": [16, 18, 19, 21, 31, 32, 56, 87, 105, 214, 218, 231, 245, 249, 251, 252, 255, 262, 263, 266, 267, 268, 269, 270, 271, 272, 335, 336, 337, 338, 358, 359, 360, 365, 377, 379, 384, 402, 404, 406, 464, 496, 498, 501, 524], "kei": [3, 33, 105, 108, 144, 285, 330, 488], "kernel": 485, "key2": 108, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 80, 81, 85, 86, 89, 93, 94, 96, 97, 99, 103, 105, 112, 113, 116, 117, 119, 121, 122, 125, 139, 143, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 174, 175, 178, 181, 197, 198, 199, 204, 206, 213, 219, 229, 230, 233, 235, 236, 237, 238, 239, 246, 247, 250, 254, 256, 257, 258, 260, 261, 345, 387, 388, 391, 392, 393, 395, 399, 400, 401, 403, 408, 409, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 463, 465, 468, 471, 472, 478, 482, 483, 484, 486, 490, 497, 502, 503, 509, 511, 515, 517, 518, 523, 526, 529, 530, 531, 539], "ki": 110, "kind": [33, 49, 69, 75, 76, 82, 90, 105, 108, 110, 142, 173, 217, 245, 247, 339, 340, 364, 375, 396, 464, 468, 477, 488, 495, 526, 528, 542], "kl": [10, 110, 111], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 157, 448], "kron": 6, "kroneck": 196, "kth": [105, 364, 396], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 81, 85, 86, 93, 94, 103, 105, 114, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 158, 163, 167, 168, 169, 174, 181, 185, 187, 188, 197, 198, 199, 200, 201, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 256, 257, 258, 260, 311, 342, 387, 388, 390, 395, 399, 400, 401, 403, 408, 409, 463, 465, 471, 472, 478, 482, 483, 484, 486, 490, 492, 493, 497, 502, 503, 517, 518], "l": [10, 39, 108, 202, 208, 210, 229], "la": [207, 209, 210], "label": 110, "laid": 45, "lam": 435, "lambda": 158, "lanczo": 485, "lapack": [207, 209], "laplac": 6, "laptop": 4, "larg": [10, 93, 108, 170, 220, 261, 408, 522, 546], "larger": [110, 123, 124, 126, 129, 130, 131, 133, 135, 136, 137, 138, 140, 142, 469, 506, 522], "largest": [10, 111, 137, 142, 150, 176, 212, 218, 257, 261, 465], "largest_singular_valu": 220, "last": [16, 21, 22, 33, 68, 89, 100, 101, 105, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 146, 164, 166, 179, 186, 206, 217, 225, 226, 229, 232, 244, 247, 353, 357, 386, 395, 402, 459, 468, 473, 479, 488, 494, 498, 504, 521, 522, 526], "later": [395, 546], "latest": [4, 155], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 152, 153, 250, 256, 406, 501], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 103, 105, 110, 112, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 161, 162, 163, 167, 168, 169, 174, 177, 181, 185, 187, 188, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 256, 257, 260, 345, 351, 387, 388, 390, 392, 393, 399, 400, 401, 403, 408, 409, 459, 461, 463, 465, 467, 468, 471, 472, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 517, 518, 526, 529, 530, 531, 532], "lcm": [6, 163], "ldexp": 6, "ldot": 10, "lead": [129, 130, 131, 264, 265, 513], "learn": [3, 4, 239], "least": [53, 54, 55, 56, 98, 107, 108, 111, 118, 141, 147, 152, 153, 157, 184, 212, 221, 250, 256, 477, 528], "left": [10, 28, 31, 32, 35, 50, 60, 63, 87, 100, 102, 105, 147, 148, 199, 209, 214, 218, 231, 249, 255, 262, 263, 269, 271, 372, 402, 453, 471, 476, 479, 498, 508, 523], "left_shift": [6, 60, 63, 471], "leg": [174, 464], "legaci": 446, "legal": 180, "len": [95, 105, 108, 126, 127, 128, 131, 133, 134, 135, 136, 140, 178, 212, 249, 253, 254, 255, 303, 481, 523], "length": [23, 39, 56, 91, 92, 101, 114, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 160, 164, 166, 170, 173, 207, 224, 225, 226, 244, 249, 252, 253, 255, 264, 265, 395, 406, 413, 468, 470, 477, 479, 480, 481, 494, 501, 504, 505, 528], "less": [6, 91, 92, 105, 114, 167, 168, 170, 171, 201, 212, 220, 229, 264, 265, 269, 271, 357, 390, 402, 480, 482, 498, 506], "less_equ": [6, 114, 167, 168, 200, 390], "let": [230, 412, 468, 526], "level": [532, 539], "level_zero": [23, 36, 40, 41, 42, 43, 45, 80, 96, 99, 112, 113, 121, 125, 139, 156, 157, 158, 159, 161, 162, 164, 175, 232, 233, 244, 254, 391, 392, 393, 509, 523, 530, 531], "lexicograph": 519, "lexsort": [6, 33, 488], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 473, 474], "lib": 68, "librari": [3, 4, 539], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 74, 95, 105, 107, 110, 112, 121, 136, 156, 157, 158, 159, 160, 161, 164, 175, 180, 232, 233, 244, 246, 340, 353, 362, 385, 392, 406, 410, 454, 459, 467, 468, 501, 530, 542], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 77, 78, 80, 81, 84, 85, 86, 88, 93, 94, 103, 105, 108, 112, 113, 114, 115, 116, 117, 119, 121, 122, 142, 143, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 174, 175, 176, 181, 185, 187, 188, 197, 198, 199, 200, 201, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 251, 255, 256, 257, 258, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 340, 342, 387, 388, 390, 392, 393, 396, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 435, 436, 438, 441, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 463, 465, 467, 471, 472, 478, 482, 483, 484, 485, 486, 488, 490, 492, 493, 496, 497, 498, 502, 503, 517, 518, 524, 526, 530, 531], "linalg": [6, 89, 100, 104, 110, 111, 247, 248, 394, 493, 504, 506, 525, 526], "line": [212, 233], "linear": [10, 79, 84, 212, 223, 244, 395, 532, 542], "linear_ramp": 395, "linspac": [0, 6, 23, 115, 164, 219, 244, 253, 394, 485, 508, 522], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 65, 75, 76, 80, 96, 99, 105, 106, 107, 108, 110, 111, 127, 132, 141, 161, 162, 164, 166, 172, 173, 184, 192, 226, 232, 233, 244, 247, 252, 383, 397, 460, 466, 467, 469, 470, 477, 480, 491, 495, 504, 507, 520, 521, 523, 526, 527, 528, 529], "list_pickl": 108, "littl": 108, "ln": 244, "load": [6, 157, 233], "loadtxt": [6, 157], "loan": 218, "loc": [410, 421, 423, 424, 432, 456], "local": 4, "locat": [0, 4, 165, 189, 190, 246, 394, 421, 423, 479, 526], "log": [6, 119, 164, 222, 232, 235, 236, 237, 238, 244, 245, 425], "log10": [6, 234, 236, 237], "log1p": [6, 117, 119, 234, 235, 237], "log2": [6, 234, 235, 236, 239], "log_bas": 244, "logabsdet": 222, "logaddexp": [6, 90, 239, 245], "logaddexp2": [6, 238, 245], "logarithm": [90, 205, 222, 232, 234, 235, 236, 237, 238, 239, 245, 426, 542], "logic": [16, 21, 240, 241, 242, 243, 532, 542], "logical_and": [6, 58, 241, 242, 243], "logical_not": [6, 59, 61, 181, 240, 242, 243], "logical_or": [6, 62, 240, 241, 243], "logical_xor": [6, 64, 240, 241, 242], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 164, 232], "logsumexp": [90, 238, 239], "lomax": 433, "long": [108, 215], "longer": [128, 134, 546], "look": [388, 501], "loop": 110, "loos": 109, "lorentz": 448, "lose": [128, 134, 136], "low": [68, 124, 126, 130, 131, 410, 438, 441, 454, 539], "lower": [96, 121, 170, 171, 194, 202, 208, 210, 246, 509, 510, 511, 512, 515, 516], "lowest": [56, 110, 111, 163, 197, 410, 438], "lstsq": 6, "m": [4, 10, 88, 107, 108, 110, 121, 124, 126, 128, 130, 131, 134, 135, 136, 140, 146, 147, 148, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 229, 246, 247, 248, 252, 406, 475, 480, 500, 501, 509, 510, 511, 512, 514, 515, 516], "machin": [4, 10, 142, 176, 212, 239, 462], "machineri": 108, "made": [36, 41, 53, 108, 155, 196, 261, 468, 491], "magnitud": [11, 12, 81, 122, 403], "mai": [16, 20, 21, 49, 69, 73, 75, 76, 82, 92, 105, 108, 110, 111, 118, 124, 126, 128, 129, 130, 131, 133, 134, 137, 140, 166, 171, 173, 203, 207, 208, 212, 214, 218, 221, 239, 244, 247, 261, 267, 270, 272, 340, 373, 406, 459, 462, 469, 477, 485, 495, 505, 526, 528, 539], "main": [96, 97, 98, 99, 100, 121, 141, 175, 206, 210, 229, 246, 506, 509, 510, 511, 514, 515], "mainstai": 10, "maintain": [33, 102, 105, 108, 170, 372, 479, 488, 501], "major": [4, 40, 41, 42, 43, 45, 48, 49, 105, 340, 389, 459, 460, 467, 520], "make": [43, 45, 74, 108, 219, 253, 394, 467, 485, 519, 522], "manag": 0, "mandelbrot": [219, 394], "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 459, 539], "manipul": [3, 97, 532, 542], "mantissa": 198, "manual": [4, 108, 505], "mappingproxi": 108, "mask": [95, 108, 195, 246, 389, 398, 407, 500, 511, 515], "mask_func": 246, "mask_indic": [6, 511, 515], "mass": 170, "match": [11, 12, 41, 75, 76, 82, 87, 90, 101, 108, 155, 157, 166, 179, 226, 245, 247, 405, 406, 464, 495, 500, 501, 504, 529], "math": [10, 115], "mathbf": [230, 526], "mathemat": [218, 532, 542], "matlab": 154, "matmul": [6, 104, 221, 224, 525], "matplotlib": [253, 448], "matric": [141, 158, 178, 195, 205, 206, 207, 209, 211, 214, 216, 218, 220, 221, 222, 224, 225, 229, 247, 248, 253, 542], "matrix": [83, 88, 104, 105, 110, 179, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 229, 247, 248, 253, 357, 493, 514, 523, 525, 526, 532, 542], "matrix_norm": [6, 218], "matrix_pow": [6, 493], "matrix_rank": 6, "matrix_transpos": 6, "matter": 519, "max": [0, 6, 18, 31, 73, 105, 142, 152, 153, 170, 171, 176, 212, 216, 218, 220, 250, 255, 256, 266, 342, 427, 501, 505, 522, 539], "max_arg": 0, "max_val": 0, "maxima": [152, 249, 250], "maximum": [0, 6, 18, 31, 32, 73, 105, 111, 152, 153, 249, 255, 256, 262, 263, 266, 268, 337, 358, 395, 400, 401, 404, 406, 522], "may_share_memori": 6, "md": 218, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 80, 87, 96, 97, 99, 105, 110, 112, 113, 121, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 156, 157, 158, 159, 160, 161, 162, 166, 175, 178, 203, 218, 233, 246, 252, 254, 267, 270, 272, 340, 345, 353, 383, 391, 392, 393, 395, 410, 423, 425, 428, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 455, 456, 459, 468, 475, 496, 498, 509, 511, 515, 523, 524, 530, 531, 539], "meaningfulli": 539, "meant": 539, "median": [0, 6, 395], "meet": [36, 480], "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 103, 105, 108, 110, 112, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 155, 161, 162, 163, 167, 168, 169, 174, 177, 181, 185, 186, 187, 188, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 252, 253, 256, 257, 260, 345, 351, 378, 387, 388, 390, 392, 393, 399, 400, 401, 403, 408, 409, 459, 461, 463, 465, 467, 468, 471, 472, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 517, 518, 526, 529, 530, 531, 532, 546], "mergesort": [33, 488], "mersenn": 410, "mesh": 195, "meshgrid": [6, 158, 178, 195, 254, 391], "met": [104, 217], "meta": 108, "metadata": 108, "method": [10, 16, 18, 19, 21, 33, 49, 80, 104, 105, 108, 144, 155, 157, 216, 220, 224, 248, 340, 345, 355, 362, 370, 373, 385, 386, 389, 397, 410, 468, 481, 498, 500, 507, 532], "mgrid": [124, 126, 135, 138, 178, 195], "mgridclass": 254, "middl": [10, 100, 124, 126, 130, 131, 209, 252], "might": [110, 129, 130, 131], "min": [6, 19, 32, 73, 105, 142, 152, 153, 170, 171, 176, 203, 206, 212, 218, 221, 224, 225, 249, 250, 256, 268, 342, 501, 539], "min_scalar_typ": 6, "minima": [153, 255, 256], "minimum": [6, 19, 31, 32, 36, 73, 105, 149, 152, 153, 249, 250, 255, 262, 263, 266, 268, 338, 360, 395, 400, 401, 404], "minlength": 57, "mintypecod": 6, "minu": [119, 151, 257, 465, 518], "mirror": 395, "miscellan": [2, 532, 542], "mise": 455, "miss": 233, "mix": [213, 247], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 120, 465, 522], "mode": [72, 79, 84, 105, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 221, 341, 366, 381, 395, 405, 406, 448, 453, 460, 479, 500, 501], "model": [4, 412], "modf": 6, "modifi": [80, 100, 141, 252, 395, 447], "modul": [123, 165, 532], "modulu": [154, 257, 465], "moment": 83, "monoton": [102, 170], "moor": 220, "more": [0, 3, 4, 33, 36, 53, 54, 55, 107, 108, 110, 111, 119, 135, 138, 147, 148, 155, 157, 171, 173, 178, 198, 204, 206, 212, 213, 215, 216, 217, 219, 220, 224, 226, 229, 230, 236, 238, 469, 475, 495, 504, 508, 519, 522, 539, 546], "most": [3, 4, 22, 100, 101, 108, 111, 123, 129, 261, 410, 446, 469, 494], "move": [105, 259, 364, 397, 473, 474, 507, 519], "moveaxi": [6, 397, 473, 474, 507, 521], "msg": 0, "mt": [105, 248], "mt19937": 446, "mu": [421, 425, 432, 455], "multi": [2, 105, 178, 195, 204, 254, 378, 386, 391, 460, 519, 532], "multi_dot": [6, 104, 110, 111], "multi_index": 460, "multiarrai": 108, "multidimension": [170, 179, 386, 529], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 75, 76, 83, 89, 90, 106, 108, 110, 124, 126, 130, 131, 135, 136, 138, 140, 163, 171, 172, 173, 180, 195, 197, 204, 207, 208, 209, 210, 211, 217, 245, 249, 251, 255, 266, 267, 268, 270, 272, 459, 464, 477, 480, 488, 491, 495, 496, 508, 519, 521, 524, 527, 528, 532], "multipli": [6, 91, 110, 198, 209, 269, 402], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 428, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 73, 74, 75, 76, 77, 78, 81, 85, 86, 87, 90, 91, 92, 93, 94, 101, 103, 104, 107, 116, 117, 118, 119, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 147, 149, 150, 151, 152, 153, 154, 157, 160, 163, 166, 167, 168, 169, 170, 171, 173, 174, 177, 181, 185, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 204, 206, 217, 218, 219, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 251, 252, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 387, 388, 390, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 461, 463, 464, 465, 466, 471, 472, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 490, 492, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 517, 518, 524, 526, 528, 529], "mx": 212, "mxn": [206, 214, 229, 248], "n": [0, 4, 10, 34, 39, 92, 97, 98, 101, 102, 105, 106, 107, 108, 109, 118, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 158, 166, 172, 175, 195, 206, 212, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 246, 247, 248, 252, 253, 270, 272, 383, 386, 395, 397, 398, 405, 406, 412, 427, 429, 439, 449, 479, 481, 491, 493, 496, 499, 500, 501, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 523, 524, 526, 527, 539], "n1": 253, "n2": [233, 253], "n3": 253, "naiv": 111, "name": [0, 6, 108, 220, 485], "namedtupl": 221, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 103, 149, 152, 153, 182, 185, 187, 188, 189, 190, 235, 249, 250, 251, 255, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 400, 401, 402, 490, 492, 496, 517, 519, 524, 542], "nan_to_num": 6, "nanargmax": [6, 31, 263], "nanargmin": [6, 32, 262], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 152, 153, 249, 250, 256, 268], "nanmean": [6, 251, 270, 272, 496, 524], "nanmedian": 6, "nanmin": [6, 152, 153, 250, 255, 256, 266], "nanpercentil": 6, "nanprod": [6, 402], "nanquantil": 6, "nanstd": [6, 251, 267, 272, 496, 524], "nansum": 6, "nanvar": [6, 251, 267, 270, 496, 524], "nat": 188, "nativ": 108, "native_cod": 108, "native_dt": 108, "natur": [222, 234, 235, 236, 237, 238, 239, 245], "nbad": 422, "nbyte": 105, "nd": [105, 355], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 543], "ndenumer": 386, "ndim": [6, 34, 36, 43, 45, 53, 54, 55, 88, 97, 100, 105, 108, 141, 196, 218, 224, 225, 248, 249, 255, 392, 397, 505, 507, 530], "ndincr": 386, "ndmin": 36, "ne": 485, "nearest": [35, 71, 143, 150, 151, 257, 465, 472, 476, 490, 518], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 82, 91, 92, 109, 120, 128, 134, 136, 141, 155, 164, 232, 244, 247, 251, 252, 264, 265, 267, 269, 270, 271, 272, 402, 469, 496, 498, 524, 546], "necessarili": [207, 209], "need": [4, 36, 41, 100, 110, 165, 252, 467, 500, 501, 529], "needs_init": 108, "needs_pyapi": 108, "neg": [6, 10, 16, 21, 35, 57, 81, 99, 100, 102, 105, 118, 121, 124, 126, 129, 130, 131, 134, 137, 146, 149, 160, 166, 170, 185, 187, 188, 189, 190, 215, 226, 261, 266, 268, 270, 271, 272, 373, 399, 400, 401, 402, 405, 406, 429, 460, 476, 496, 498, 500, 501, 504, 506, 524], "negat": 480, "negative_binomi": 6, "neginf": 261, "neither": [104, 152, 153, 213, 224, 247, 266, 268], "nest": [44, 107, 173, 477, 495, 521, 528], "nested_it": 6, "net": [152, 153, 250, 256], "never": 522, "new": [22, 36, 49, 65, 66, 67, 74, 75, 76, 87, 90, 91, 92, 95, 100, 105, 107, 108, 109, 112, 113, 118, 152, 153, 155, 159, 160, 161, 162, 164, 173, 175, 180, 232, 244, 245, 246, 250, 252, 256, 259, 264, 265, 269, 271, 340, 370, 373, 383, 392, 393, 397, 464, 468, 469, 473, 474, 477, 491, 495, 505, 507, 521, 528, 529, 530, 531, 539], "new_dtyp": 108, "new_ord": 108, "new_shap": 469, "newaxi": 118, "newbyteord": 108, "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 103, 105, 112, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 161, 162, 163, 167, 168, 169, 174, 177, 181, 185, 187, 188, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 256, 257, 260, 340, 345, 387, 388, 390, 392, 393, 399, 400, 401, 403, 408, 409, 461, 463, 465, 471, 472, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 517, 518, 526, 530, 531], "newshap": 468, "next": [4, 142, 388], "nextaft": 6, "ngood": 422, "ni": [253, 406, 500, 501], "nine": 412, "ninja": 4, "nj": [406, 500, 501], "njm": 110, "nk": [406, 500, 501], "nl": 10, "nlk": 110, "nn": 253, "noisi": 212, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 80, 87, 96, 97, 99, 102, 105, 112, 113, 120, 121, 125, 134, 137, 139, 145, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 171, 175, 178, 183, 185, 195, 204, 226, 232, 233, 244, 246, 254, 261, 262, 263, 266, 268, 270, 272, 340, 345, 363, 373, 389, 391, 392, 393, 398, 400, 401, 410, 430, 431, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 496, 504, 509, 511, 515, 523, 524, 529, 530, 531], "nonc": [430, 431], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 87, 105, 145, 195, 529, 539], "nor": [152, 153, 209, 266, 268], "norm": [6, 10, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 203, 209, 212, 214, 231, 542], "normal": [6, 88, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 170, 207, 208, 221, 230, 239, 410, 425, 428, 439, 451, 460, 485, 526], "not_equ": [6, 114, 167, 168, 200, 201], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 60, 61, 63, 75, 76, 80, 89, 93, 95, 100, 102, 103, 105, 108, 110, 111, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 150, 152, 153, 156, 157, 158, 159, 160, 170, 178, 180, 181, 185, 198, 199, 204, 206, 207, 214, 218, 226, 231, 233, 244, 252, 257, 260, 270, 271, 272, 345, 370, 389, 395, 397, 398, 400, 401, 405, 408, 413, 415, 416, 426, 431, 459, 465, 467, 468, 469, 471, 475, 485, 488, 490, 496, 497, 499, 504, 505, 507, 508, 517, 519, 521, 522, 524, 525], "notic": [108, 134, 137], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 103, 105, 112, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 174, 175, 181, 185, 187, 188, 197, 198, 199, 200, 201, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 251, 255, 256, 257, 260, 266, 267, 268, 270, 271, 272, 340, 387, 388, 390, 392, 393, 399, 400, 401, 402, 403, 408, 409, 459, 463, 465, 467, 471, 472, 478, 482, 483, 484, 486, 488, 490, 492, 493, 496, 497, 498, 502, 503, 517, 518, 524, 526, 530, 531], "now": [16, 21, 43, 45, 83, 97, 209, 212, 246], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 348, 350, 353, 354, 355, 357, 362, 364, 368, 373, 374, 375, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 435, 444, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "nr": 10, "nsamp": 422, "nsampl": 422, "nth": [226, 504], "nuc": [214, 218, 231], "nuclear": 218, "num": [0, 108, 115, 164, 232, 244, 508, 522], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 42, 46, 47, 50, 52, 56, 57, 65, 66, 67, 87, 97, 99, 101, 102, 105, 108, 109, 110, 111, 118, 121, 122, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 142, 143, 151, 156, 157, 159, 160, 164, 166, 170, 171, 175, 176, 182, 183, 184, 185, 192, 195, 198, 203, 211, 216, 218, 221, 222, 224, 227, 228, 232, 239, 244, 257, 261, 264, 265, 266, 268, 269, 270, 271, 272, 362, 371, 374, 385, 389, 395, 397, 398, 402, 403, 410, 412, 422, 446, 465, 466, 469, 472, 473, 474, 475, 476, 483, 487, 490, 496, 499, 505, 507, 509, 518, 519, 523, 524, 539, 542], "number_of_dimens": [105, 362, 385], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 77, 78, 81, 85, 86, 103, 108, 114, 116, 119, 129, 130, 131, 134, 136, 151, 152, 153, 167, 168, 177, 182, 185, 187, 188, 200, 201, 218, 219, 234, 235, 236, 237, 250, 256, 260, 387, 390, 399, 400, 401, 403, 461, 472, 476, 482, 483, 484, 486, 497, 502, 503, 517, 542], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 349, 350, 353, 354, 355, 362, 368, 373, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 539, 542], "nvidia": 4, "nx": 253, "ny": 253, "nyquist": [10, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 139], "o": [4, 16, 21, 108], "obj": [31, 32, 33, 95, 108, 155, 170, 180], "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 80, 96, 97, 99, 105, 108, 112, 113, 118, 121, 125, 139, 142, 144, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 176, 178, 180, 203, 208, 218, 226, 232, 233, 244, 246, 254, 340, 345, 355, 370, 386, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 468, 504, 509, 511, 515, 523, 530, 531, 539], "observ": 83, "obsolet": 186, "obtain": [10, 100, 202, 206, 229, 389], "obviou": 10, "occupi": [142, 176], "occur": [22, 49, 69, 75, 76, 82, 95, 105, 110, 173, 180, 207, 247, 261, 340, 477, 495, 526, 528], "occurr": [31, 32, 57, 102, 170, 262, 263, 519], "odd": [10, 125, 128, 132, 133, 134, 136, 137, 139, 252, 395], "off": [23, 128, 133, 206, 207, 212, 229], "offset": [100, 105, 108, 156, 157, 206, 229, 246, 348, 382, 506, 511, 512, 515, 516], "often": [95, 169], "ogrid": [178, 195, 529], "ogridclass": 391, "oil": [412, 429], "old": 469, "omit": [410, 438], "onc": 211, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 79, 82, 84, 87, 95, 105, 108, 112, 114, 118, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 147, 148, 149, 152, 153, 157, 161, 166, 171, 173, 175, 178, 180, 184, 195, 209, 214, 215, 218, 226, 231, 234, 235, 237, 246, 249, 250, 253, 254, 255, 256, 262, 263, 269, 271, 345, 353, 355, 356, 386, 389, 391, 393, 398, 402, 429, 460, 474, 480, 488, 494, 495, 498, 500, 504, 508, 511, 512, 515, 516, 519, 530, 539], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "onedpl": 4, "onemkl": [4, 207, 209], "ones": [6, 36, 43, 45, 56, 90, 95, 103, 105, 110, 112, 113, 114, 118, 121, 140, 161, 162, 174, 175, 196, 212, 216, 219, 245, 246, 264, 269, 393, 394, 397, 402, 464, 470, 474, 507, 509, 517, 530, 531], "ones_lik": [6, 36, 113, 162, 392, 531], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 80, 84, 88, 105, 108, 110, 111, 112, 113, 121, 127, 137, 141, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 171, 178, 186, 202, 208, 210, 213, 216, 218, 219, 220, 221, 224, 232, 233, 244, 246, 247, 249, 251, 255, 261, 262, 263, 266, 267, 268, 269, 270, 272, 340, 355, 373, 375, 386, 392, 393, 396, 398, 399, 402, 410, 432, 438, 454, 459, 467, 468, 485, 488, 496, 498, 501, 515, 519, 522, 524, 526, 529, 530, 531, 539], "open": [157, 178, 195, 232, 391, 410, 440, 442, 443, 445, 454, 499], "opencl": [23, 36, 40, 41, 42, 43, 45, 80, 96, 99, 112, 113, 121, 125, 139, 156, 157, 158, 159, 161, 162, 164, 175, 232, 233, 244, 254, 391, 392, 393, 509, 523, 530, 531], "oper": [10, 15, 58, 59, 60, 61, 62, 63, 64, 103, 108, 110, 111, 114, 118, 141, 151, 154, 167, 168, 181, 199, 200, 201, 202, 240, 242, 247, 249, 255, 257, 260, 261, 262, 263, 387, 390, 399, 400, 401, 405, 465, 471, 497, 505, 517, 519, 521, 522, 526, 532, 542], "operand": [110, 111, 226, 228, 394, 504], "opposit": [10, 108, 120, 128, 133, 398, 459], "optim": [4, 110, 111, 170, 171], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 212, 214, 216, 217, 218, 220, 221, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 353, 383, 387, 388, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 546], "ord": [214, 218, 231], "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 93, 94, 100, 102, 103, 105, 108, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 129, 130, 131, 134, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 162, 163, 166, 167, 168, 169, 170, 174, 177, 181, 185, 186, 187, 188, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 214, 218, 224, 226, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 253, 256, 257, 259, 260, 280, 339, 340, 345, 353, 364, 367, 370, 372, 375, 383, 387, 388, 389, 390, 392, 393, 396, 397, 399, 400, 401, 403, 408, 409, 459, 460, 461, 463, 465, 467, 468, 469, 471, 472, 475, 478, 479, 482, 483, 484, 485, 486, 488, 490, 492, 493, 497, 502, 503, 504, 507, 517, 518, 519, 520, 523, 526, 529, 530, 531, 542], "ordin": [212, 223], "ordinari": [134, 179, 202], "orient": [89, 406, 501], "origin": [65, 100, 105, 128, 134, 136, 214, 218, 231, 253, 259, 269, 271, 468, 469, 473, 519], "ortho": [10, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140], "orthogon": [209, 221], "orthonorm": 221, "other": [38, 49, 65, 66, 67, 101, 105, 108, 129, 130, 131, 134, 136, 150, 158, 175, 207, 209, 217, 218, 259, 276, 277, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 340, 410, 454, 469, 474, 519, 526, 532, 542], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 73, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 94, 96, 101, 103, 105, 108, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 174, 175, 179, 181, 185, 187, 188, 197, 198, 199, 200, 201, 212, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 255, 256, 257, 258, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 340, 370, 387, 388, 390, 392, 393, 399, 400, 401, 402, 403, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 471, 472, 478, 479, 482, 483, 484, 486, 488, 490, 492, 493, 494, 496, 497, 498, 502, 503, 506, 517, 518, 524, 526, 529, 530, 531], "otim": [226, 504], "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 211, 213, 214, 217, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 335, 336, 337, 338, 341, 342, 345, 346, 347, 353, 355, 358, 359, 360, 365, 371, 377, 379, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 517, 518, 522, 523, 524, 525, 526, 528, 529, 530, 531], "outer": [6, 89, 100, 110, 111, 196], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 85, 86, 90, 91, 92, 93, 94, 96, 97, 99, 101, 103, 104, 105, 108, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 174, 175, 177, 178, 181, 182, 183, 185, 187, 188, 195, 197, 198, 199, 200, 201, 217, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 263, 264, 265, 267, 269, 270, 271, 272, 340, 345, 387, 388, 390, 391, 392, 393, 399, 400, 401, 402, 403, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 465, 466, 468, 471, 472, 476, 478, 480, 482, 483, 484, 485, 486, 488, 490, 492, 493, 494, 496, 497, 498, 500, 502, 503, 505, 506, 509, 511, 515, 517, 518, 519, 522, 523, 524, 526, 529, 530, 531, 542, 546], "outsid": [170, 171], "over": [10, 16, 21, 56, 90, 91, 92, 104, 105, 110, 111, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 158, 164, 170, 171, 179, 204, 214, 218, 226, 230, 231, 232, 244, 245, 247, 249, 251, 253, 255, 264, 265, 266, 267, 268, 269, 270, 271, 272, 353, 386, 402, 406, 410, 437, 442, 453, 454, 459, 464, 469, 496, 498, 500, 501, 504, 508, 522, 524, 526, 542], "overal": [124, 126, 130, 131, 135, 136, 138, 140], "overflow": 149, "overlin": [230, 526], "overrid": [89, 113, 162, 393, 531], "overview": 2, "overwrite_input": 252, "p": [10, 203, 212, 215, 412, 415, 420, 426, 429, 522], "pack": [100, 459, 542], "packag": [0, 3], "packbit": 6, "pad": [6, 108, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 469], "pad_valu": 395, "pad_width": 395, "padder": 395, "padding_func": 395, "page": [3, 542], "pair": [10, 111, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 204, 207], "parallel": [1, 3, 4, 9, 532], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 350, 353, 355, 370, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "parameter": [410, 432, 454], "parametr": 508, "pareto": 6, "pars": [157, 233], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 105, 134, 152, 153, 177, 183, 184, 191, 192, 207, 208, 210, 246, 250, 256, 258, 354, 368, 395, 461, 462, 489, 511, 515, 518, 519, 539], "partial": [33, 252, 488], "particular": [108, 217], "particularli": 110, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 488, 509, 511, 515, 523, 530, 531, 539], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 108, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 171, 175, 178, 195, 212, 233, 246, 254, 261, 345, 370, 386, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 467, 509, 511, 512, 515, 516, 523, 526, 530, 531], "past": 68, "path": [4, 110, 111, 157, 233], "path_info": 111, "pathlib": 233, "pattern": 56, "pearson": 83, "penros": 220, "per": [110, 125, 139, 460], "percentil": [6, 252], "perf_count": 0, "perform": [16, 21, 41, 42, 73, 101, 110, 124, 126, 129, 130, 131, 135, 136, 138, 140, 146, 202, 225, 402, 498], "perhap": 467, "period": [10, 522], "permit": 157, "permut": [6, 105, 110, 259, 383, 397, 507, 542], "permute_dim": [6, 507], "perpendicular": 89, "pg": 218, "phase": [10, 20, 522], "phase_deg": 522, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 93, 94, 123, 408, 484, 485, 486, 502, 503, 508, 522, 546], "pickl": [157, 233], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 73, 75, 76, 91, 92, 95, 104, 105, 118, 120, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 155, 178, 180, 182, 247, 249, 251, 252, 255, 261, 264, 265, 267, 269, 270, 271, 272, 353, 373, 375, 383, 391, 395, 402, 405, 406, 447, 468, 469, 473, 476, 488, 495, 496, 498, 500, 506, 524, 539], "plane": 475, "platform": [91, 92, 108, 264, 265, 269, 271, 402, 498], "pleas": [0, 3, 39, 106, 110, 170, 172, 527, 539], "plot": 448, "plt": [253, 448], "plu": [234, 235, 237], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 68, 81, 90, 108, 112, 113, 117, 121, 122, 123, 128, 129, 133, 134, 135, 136, 137, 142, 143, 149, 156, 157, 158, 160, 161, 162, 166, 175, 177, 198, 212, 215, 232, 233, 238, 239, 245, 251, 252, 261, 267, 270, 272, 388, 392, 393, 410, 439, 451, 461, 463, 464, 476, 478, 479, 485, 496, 508, 509, 524, 530, 531, 542], "pointer": [68, 108], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 77, 78, 81, 85, 86, 93, 94, 103, 105, 114, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 163, 167, 168, 169, 174, 177, 181, 185, 187, 188, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 256, 257, 260, 387, 388, 390, 399, 400, 401, 403, 408, 409, 410, 437, 461, 463, 465, 471, 472, 476, 478, 482, 483, 484, 485, 486, 490, 492, 493, 497, 502, 503, 517, 518], "portion": [170, 171], "posinf": 261, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 70, 81, 99, 100, 105, 118, 121, 122, 124, 126, 129, 130, 131, 134, 137, 139, 142, 149, 157, 182, 185, 187, 188, 189, 190, 202, 215, 227, 259, 261, 266, 268, 271, 364, 378, 387, 397, 412, 436, 473, 474, 476, 478, 480, 492, 493, 506, 507], "possess": 207, "possibl": [10, 48, 49, 54, 55, 105, 106, 110, 111, 118, 152, 153, 166, 170, 172, 246, 340, 370, 397, 406, 459, 468, 491, 494, 499, 500, 501, 507, 527], "possibli": 44, "pow": [6, 401, 539], "power": [6, 10, 117, 123, 149, 215, 400, 493, 523], "pre": 171, "precis": [11, 12, 56, 91, 92, 108, 110, 142, 149, 177, 212, 229, 246, 264, 265, 269, 271, 402, 461, 498, 506], "predecessor": 522, "prefer": [72, 80, 95, 105, 345, 373, 389, 459], "prepend": [36, 101, 109, 505], "present": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 108, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 175, 178, 233, 246, 254, 266, 268, 271, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 509, 511, 515, 523, 530, 531], "preserv": [49, 53, 54, 55, 73, 105, 108, 110, 146, 147, 148, 149, 208, 209, 210, 252, 340, 459, 467, 506, 519], "press": [10, 218], "prevent": 110, "previou": [56, 395], "print": [0, 4, 42, 56, 57, 79, 102, 108, 111, 386, 410, 429, 434], "print_device_info": 0, "printabl": 111, "printopt": 6, "prior": 101, "prob1": [238, 239], "prob12": [238, 239], "prob2": [238, 239], "probabl": [170, 239, 252, 412, 420, 429], "proce": 539, "process": [10, 485], "processor": 110, "prod": [6, 91, 105, 227, 228, 269, 539], "produc": [10, 34, 108, 233, 406, 479, 501], "product": [83, 89, 91, 104, 105, 110, 111, 179, 195, 196, 204, 213, 217, 219, 223, 226, 227, 228, 230, 247, 260, 264, 269, 346, 394, 402, 504, 525, 526, 542], "program": [4, 150], "progress": [164, 232], "project": [4, 108, 230, 403, 526], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 69, 70, 81, 85, 86, 93, 94, 103, 116, 117, 119, 149, 151, 152, 153, 154, 164, 174, 199, 232, 234, 235, 236, 237, 238, 239, 244, 247, 250, 256, 257, 260, 388, 400, 401, 408, 409, 463, 465, 470, 471, 478, 482, 484, 485, 486, 490, 492, 493, 497, 502, 503, 505, 517, 518, 526], "promote_typ": 6, "propag": [108, 152, 153, 249, 250, 255, 256, 264, 265, 266, 268, 269, 271], "proper": [152, 153, 207, 209], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 208, 210, 221, 232, 233, 244, 246, 254, 274, 340, 345, 349, 351, 352, 354, 356, 357, 361, 362, 368, 373, 374, 378, 383, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531, 539], "proport": 485, "protocol": [44, 108, 155], "prototyp": 113, "provid": [0, 6, 10, 31, 32, 36, 75, 76, 82, 90, 105, 106, 110, 111, 118, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 159, 170, 171, 173, 189, 190, 216, 220, 245, 262, 263, 266, 268, 269, 271, 410, 438, 441, 464, 467, 477, 495, 500, 508, 519, 526, 528, 529, 546], "pseudo": [220, 410], "ptp": 6, "pure": [10, 128, 134, 136, 137], "purpos": [34, 212, 218], "put": [6, 10, 105, 120, 128, 134, 136, 398, 406, 501, 539], "put_along_axi": [6, 405, 501], "putmask": [6, 405], "pval": 427, "py": 4, "pypi": 4, "pyplot": [253, 448], "pytest": 4, "python": [0, 2, 3, 44, 105, 108, 154, 155, 257, 355, 465, 466, 539], "q": [209, 215, 221, 228, 252], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 124], "quantil": 6, "quaternion": 215, "question": 96, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "quick": [2, 3], "quickest": 459, "quickli": [195, 546], "quicksort": [33, 488], "quotient": [29, 51], "r": [83, 89, 94, 221], "r1": 83, "r2": [83, 221], "r3": 83, "rad": 94, "rad2deg": [6, 93, 94, 522], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 93, 94, 408, 522, 546], "radixsort": [33, 488], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 77, 78, 80, 81, 82, 85, 86, 90, 93, 94, 102, 103, 104, 105, 106, 112, 113, 114, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 172, 174, 175, 181, 185, 187, 188, 197, 198, 199, 200, 201, 215, 217, 218, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 251, 255, 256, 257, 260, 262, 263, 266, 267, 268, 270, 271, 272, 340, 341, 357, 387, 388, 390, 392, 393, 399, 400, 401, 402, 403, 408, 409, 459, 460, 463, 464, 465, 467, 468, 471, 472, 478, 482, 483, 484, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498, 502, 503, 517, 518, 524, 526, 527, 530, 531, 539], "ramp": 395, "rand": [6, 83, 111, 410, 440, 442, 443, 445], "randint": [6, 105, 355, 410, 441], "randn": [6, 146, 147, 148, 220, 221, 224, 228, 410, 495], "random": [83, 105, 111, 146, 147, 148, 209, 217, 220, 221, 224, 228, 355, 495, 532, 542], "random_integ": [6, 410, 438], "random_sampl": [6, 410, 437, 440, 443, 445], "randomli": 434, "randomst": 438, "ranf": 6, "rang": [0, 102, 159, 170, 171, 226, 239, 397, 404, 405, 429, 434, 460, 466, 495, 504, 507, 522, 542], "rank": [118, 120, 158, 212, 216, 229, 395, 499], "rate": [125, 139], "rather": 389, "ratio": [0, 103, 151, 212, 517, 546], "ration": 542, "ravel": [6, 105, 120, 145, 218, 353, 394, 468, 539], "ravel_multi_index": [6, 520], "raveled_indic": 460, "raw": 221, "rayleigh": 6, "rcond": [212, 220], "re": [31, 32, 57, 96, 134, 473], "read": [96, 100, 105, 108, 156, 157, 159, 160, 233, 353, 459, 468], "readonli": 108, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 70, 71, 81, 90, 105, 123, 126, 128, 133, 134, 135, 136, 137, 138, 140, 142, 150, 152, 153, 154, 174, 177, 183, 191, 192, 202, 207, 208, 209, 210, 216, 220, 221, 222, 224, 238, 239, 245, 250, 256, 257, 261, 270, 272, 412, 429, 462, 463, 464, 465, 478, 489, 490, 496, 518, 519, 524, 539, 542], "real_if_clos": [6, 20, 177, 461], "rearrang": [105, 364, 542], "reason": 136, "rebuild": 107, "recal": 108, "recent": [22, 494], "recip": [4, 10], "reciproc": [6, 478, 492], "recommend": [110, 389, 505], "reconstruct": [108, 224, 519], "recov": 10, "reduc": [16, 21, 31, 32, 56, 221, 224, 245, 249, 251, 252, 253, 255, 262, 263, 266, 267, 268, 269, 270, 271, 272, 402, 464, 469, 496, 498, 524], "reduce_hypot": 174, "reduct": [16, 21], "redund": 137, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539], "reflect": [395, 539], "reflect_typ": 395, "reflector": 221, "regardless": [108, 208, 210, 527], "regular": 233, "rel": [17, 33, 105, 182, 206, 216, 229, 378, 473, 474, 488], "relat": 108, "relationship": 83, "relev": [108, 164, 232, 244], "rem": 154, "remain": [16, 21, 56, 111, 138, 140, 170, 245, 251, 252, 259, 267, 270, 272, 464, 468, 496, 524], "remaind": [6, 151, 154, 257, 400, 401], "remov": [31, 32, 93, 95, 100, 105, 118, 134, 206, 229, 376, 402, 408, 494, 498, 526, 542], "reorder": [110, 146, 228, 259], "rep": 505, "repeat": [6, 105, 124, 126, 130, 131, 135, 136, 138, 140, 141, 207, 208, 209, 210, 253, 398, 469, 505, 508, 519, 539], "repeatedli": 110, "repetit": [0, 466, 505], "replac": [3, 10, 44, 73, 120, 261, 264, 265, 398, 406, 415, 468, 480, 539], "replic": 505, "repo": 4, "repr": 317, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 83, 108, 111, 129, 137, 155, 158, 164, 166, 178, 222, 232, 244, 253, 272, 395, 410, 469, 513, 519, 539], "represent": [58, 62, 64, 111, 142, 176, 178, 261, 388, 490, 539], "request": 474, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 105, 108, 110, 122, 178, 261, 340, 373, 395, 468, 469], "res_cpu": 96, "res_host": 96, "resampl": 485, "rese": 446, "reset": 539, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 96, 97, 98, 100, 103, 104, 105, 106, 107, 110, 118, 120, 127, 132, 146, 154, 172, 178, 179, 180, 195, 196, 206, 213, 214, 218, 226, 229, 231, 246, 247, 249, 255, 260, 348, 353, 357, 373, 383, 395, 398, 434, 459, 467, 469, 473, 475, 497, 504, 506, 508, 511, 512, 515, 516, 517, 519, 521, 527, 539], "resid": [118, 122, 155], "residu": 212, "resiz": [6, 118, 539], "resolut": 142, "resolv": [90, 118, 245, 464], "resourc": 0, "respect": [15, 29, 51, 58, 60, 62, 63, 64, 103, 105, 114, 149, 151, 154, 166, 167, 168, 199, 200, 201, 204, 238, 239, 240, 242, 243, 257, 260, 378, 390, 400, 401, 465, 471, 497, 517, 522], "rest": 39, "restor": 473, "restrict": 230, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 36, 51, 56, 58, 59, 60, 61, 62, 63, 64, 69, 73, 75, 76, 81, 83, 87, 90, 91, 92, 95, 103, 104, 108, 111, 113, 114, 119, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 143, 149, 151, 156, 157, 158, 159, 160, 162, 164, 167, 168, 170, 171, 178, 181, 185, 187, 188, 189, 190, 198, 199, 200, 201, 202, 206, 207, 213, 214, 218, 221, 226, 231, 232, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 255, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 389, 390, 393, 394, 400, 401, 402, 405, 410, 412, 442, 464, 468, 470, 471, 472, 474, 476, 479, 482, 483, 485, 491, 495, 496, 498, 500, 501, 504, 505, 508, 513, 517, 518, 519, 521, 524, 526, 529, 531, 539], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 69, 108, 542], "ret": 409, "retain": 468, "retriev": [100, 108, 206], "retstep": 232, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 358, 359, 360, 362, 363, 364, 365, 367, 370, 371, 374, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 413, 432, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539], "return_count": 519, "return_index": 519, "return_invers": 519, "reus": [155, 171], "revers": [100, 105, 141, 146, 147, 148, 206, 383, 397, 475, 507, 508, 521, 523], "rewrit": 212, "rfft": [6, 10, 125, 128, 133, 134, 135, 136, 138, 139, 140], "rfft2": [6, 135], "rfftfreq": [6, 125], "rfftn": [6, 123, 126, 136, 137, 138], "right": [10, 28, 50, 60, 63, 73, 89, 100, 102, 147, 148, 174, 199, 204, 207, 208, 209, 210, 217, 228, 246, 453, 464, 471, 479, 506, 508, 511, 515, 523], "right_shift": [6, 60, 63, 199], "rightmost": [170, 171, 228], "rint": [6, 35, 71, 143, 150, 476, 518], "rl": [219, 394], "roll": [6, 474], "rollaxi": [6, 473], "root": [6, 70, 174, 203, 463, 464, 478, 492, 493], "rot90": [6, 147, 148], "rotat": [147, 148, 475], "roughli": [108, 212], "round": [6, 23, 35, 71, 105, 128, 133, 143, 150, 151, 163, 207, 257, 465, 472, 518, 539, 542], "routin": [2, 532, 539], "row": [45, 49, 74, 75, 76, 83, 91, 92, 100, 105, 107, 121, 147, 148, 166, 173, 175, 178, 217, 224, 340, 389, 459, 460, 477, 491, 495, 509, 511, 519, 520, 527, 528], "row_stack": [6, 528], "rowvar": [83, 88], "rsqrt": [463, 492], "rtol": [17, 182, 216, 220], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 62, 63, 64, 69, 70, 81, 82, 85, 86, 89, 92, 93, 94, 103, 116, 117, 119, 151, 152, 153, 154, 164, 174, 199, 204, 232, 234, 235, 236, 237, 238, 239, 244, 245, 247, 250, 251, 252, 256, 257, 260, 267, 270, 272, 388, 400, 401, 408, 409, 463, 464, 465, 470, 471, 478, 482, 484, 485, 486, 490, 492, 493, 496, 497, 498, 502, 503, 508, 517, 518, 524, 526], "run": [0, 4], "runtim": 4, "runtimewarn": [266, 268], "s1": [105, 108, 196, 378], "s10": 108, "s16": 108, "s2": [105, 108, 378], "s25": 108, "s3": [105, 378], "safe": [49, 69, 75, 76, 82, 105, 110, 173, 247, 340, 477, 495, 526, 528], "sai": 468, "said": 228, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 73, 74, 75, 76, 81, 83, 90, 91, 92, 100, 101, 102, 103, 104, 105, 107, 113, 114, 118, 120, 129, 130, 131, 136, 141, 143, 149, 151, 152, 153, 154, 155, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 181, 182, 189, 190, 191, 196, 197, 198, 199, 200, 201, 204, 206, 209, 215, 220, 221, 225, 226, 229, 238, 239, 240, 242, 243, 245, 249, 250, 251, 252, 255, 256, 257, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 370, 383, 386, 388, 390, 393, 395, 398, 400, 401, 402, 406, 410, 432, 438, 454, 459, 461, 464, 465, 466, 468, 471, 473, 474, 477, 479, 480, 488, 494, 495, 496, 497, 498, 500, 501, 504, 506, 510, 512, 514, 516, 517, 520, 524, 525, 528, 531, 546], "same_kind": [49, 69, 75, 76, 82, 105, 110, 173, 247, 340, 477, 495, 526, 528], "sampl": [10, 125, 132, 134, 137, 139, 164, 166, 170, 232, 244, 406, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 501, 508, 511, 515, 532, 542], "sample_r": 139, "satisfi": [36, 41, 43, 45, 49, 105, 120, 211, 340, 398, 467, 480], "save": [6, 157, 252, 546], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 62, 63, 64, 69, 80, 81, 82, 89, 96, 99, 101, 103, 104, 105, 108, 110, 111, 114, 120, 125, 139, 141, 149, 151, 152, 153, 154, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 179, 180, 182, 184, 192, 193, 196, 197, 198, 199, 200, 201, 213, 223, 226, 232, 238, 239, 240, 242, 243, 244, 246, 247, 250, 253, 256, 257, 260, 350, 355, 385, 388, 390, 395, 398, 400, 401, 405, 406, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 433, 435, 436, 438, 441, 444, 446, 450, 452, 453, 454, 455, 456, 457, 458, 462, 465, 471, 479, 480, 497, 500, 504, 508, 517, 518, 523, 525, 529, 539], "scale": [10, 111, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 164, 196, 221, 232, 244, 410, 417, 419, 421, 422, 423, 424, 432, 444, 449, 456], "scientif": 10, "scipi": 115, "scope": 4, "script": 4, "search": [111, 532, 542], "searchsort": [6, 102, 105, 170, 488, 539], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 68, 81, 89, 100, 103, 104, 108, 111, 114, 117, 124, 125, 126, 127, 130, 131, 134, 137, 139, 149, 151, 152, 153, 154, 163, 166, 167, 168, 170, 171, 172, 173, 174, 179, 182, 196, 197, 199, 200, 201, 204, 206, 213, 226, 229, 230, 238, 239, 240, 242, 243, 246, 247, 249, 250, 253, 255, 256, 257, 260, 390, 394, 400, 401, 465, 471, 475, 493, 497, 499, 504, 506, 517, 525, 526], "section": [4, 39, 108, 126, 131, 136, 140, 214, 231, 539], "see": [3, 35, 83, 108, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 155, 170, 212, 214, 231, 395, 427, 476, 511, 512, 515, 516, 519, 539], "seed": [6, 83, 105, 111, 355, 410], "seek": 157, "seldom": 149, "select": [6, 33, 82, 120, 249, 255, 488, 494, 500, 508, 532], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "self": [105, 108, 144, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 352, 386, 410], "semant": 170, "sens": 228, "sep": [157, 160], "separ": [10, 105, 108, 110, 157, 160, 171, 261, 370, 469], "sequenc": [39, 44, 53, 54, 55, 74, 75, 76, 79, 84, 106, 107, 110, 111, 112, 113, 124, 126, 130, 131, 134, 135, 136, 138, 140, 161, 162, 164, 170, 171, 172, 173, 178, 180, 195, 217, 226, 232, 244, 252, 259, 392, 393, 395, 398, 434, 447, 466, 467, 470, 477, 491, 495, 504, 508, 521, 527, 528, 530, 531], "sequenti": [84, 88, 115, 258, 269], "seri": [10, 134, 426], "serv": 521, "set": [10, 31, 32, 33, 36, 49, 72, 83, 87, 96, 97, 99, 102, 105, 108, 110, 112, 161, 170, 171, 175, 178, 214, 216, 218, 219, 220, 231, 232, 249, 255, 262, 263, 271, 330, 340, 341, 352, 373, 392, 393, 394, 395, 402, 480, 482, 483, 488, 498, 511, 515, 530, 531, 539], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 108], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 211, "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 101, 102, 103, 104, 105, 107, 108, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 146, 149, 150, 151, 152, 153, 154, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 205, 206, 211, 212, 213, 214, 215, 217, 221, 222, 223, 224, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 362, 370, 374, 376, 383, 385, 386, 387, 388, 390, 391, 392, 393, 395, 397, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 419, 422, 427, 428, 433, 437, 438, 439, 440, 441, 442, 443, 445, 450, 451, 457, 459, 460, 461, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 509, 510, 512, 514, 515, 516, 517, 518, 520, 521, 524, 526, 527, 528, 529, 530, 531, 532, 542], "share": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 509, 511, 515, 523, 530, 531], "shared_bin": 171, "shares_memori": 6, "shift": [10, 60, 63, 124, 126, 127, 131, 132, 199, 471, 473], "short": [485, 518, 526, 539], "shortcut": 395, "shorter": [128, 134], "shorthand": [11, 12, 15, 58, 59, 60, 61, 62, 63, 64, 103, 114, 151, 167, 168, 181, 199, 200, 201, 240, 242, 247, 257, 260, 387, 390, 399, 400, 401, 465, 471, 497, 517, 529], "should": [31, 32, 36, 39, 49, 100, 102, 104, 105, 110, 111, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 154, 157, 165, 170, 180, 195, 212, 215, 226, 247, 259, 262, 263, 266, 268, 340, 372, 395, 427, 460, 468, 469, 479, 490, 500, 504, 506, 520, 522, 526, 539], "show": [9, 38, 108, 141, 174, 243, 253, 261, 264, 265, 266, 268, 271, 448], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [105, 166, 209, 372, 479], "sigma": [425, 432], "sign": [6, 10, 17, 81, 108, 182, 205, 222, 257, 387, 399, 402, 465, 483, 498, 518], "signal": [10, 125, 128, 133, 134, 136, 139, 485, 522], "signatur": [246, 247, 395, 526], "signbit": [6, 482], "signific": 110, "signum": 482, "similar": [3, 40, 41, 105, 108, 164, 180, 204, 206, 213, 219, 229, 230, 232, 244, 246, 345, 373, 398, 410, 438, 511, 512, 515, 516], "simpl": [4, 243, 542], "simpli": [98, 105, 157, 170, 171, 198, 383], "sin": [0, 6, 26, 27, 46, 47, 85, 209, 253, 485, 486, 502, 508], "sinc": [6, 83, 105, 134, 207, 209, 375, 386, 389, 521], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 484, 485, 486, 502, 503], "sing": 218, "singl": [9, 10, 33, 66, 67, 74, 83, 105, 110, 111, 166, 180, 217, 226, 249, 255, 355, 376, 386, 402, 410, 429, 438, 439, 440, 441, 442, 443, 445, 451, 498, 504, 508, 526, 539], "singleton": [16, 21, 56, 118, 245, 251, 252, 266, 267, 268, 270, 272, 464, 494, 496, 524], "singular": [211, 212, 216, 218, 220, 224, 225], "sinh": [6, 14, 25, 27, 47, 86, 484, 503], "sinu": 485, "size": [0, 6, 23, 31, 32, 36, 39, 56, 68, 75, 76, 84, 87, 88, 91, 92, 97, 102, 105, 106, 108, 111, 120, 123, 125, 129, 139, 157, 164, 166, 172, 173, 204, 206, 214, 218, 219, 221, 224, 226, 230, 231, 232, 244, 246, 249, 251, 255, 262, 263, 264, 265, 267, 269, 271, 355, 356, 373, 386, 392, 398, 402, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 469, 473, 477, 491, 494, 495, 498, 504, 515, 521, 522, 526, 527, 528, 530, 539], "skip": 100, "slice": [95, 120, 180, 262, 263, 266, 267, 268, 270, 272, 405, 406, 480, 501, 508, 515, 516, 539], "slogdet": [6, 205], "slower": [226, 504], "slowest": [105, 353, 459, 468], "small": [17, 119, 182, 212, 220, 236, 238, 239, 261, 515], "smaller": [101, 105, 123, 124, 126, 129, 130, 131, 133, 135, 136, 137, 138, 140, 142, 212, 257, 364, 398, 465, 522], "smallest": [142, 176, 218, 519], "smallest_norm": 142, "smat": 224, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 108, 114, 128, 133, 149, 170, 180, 192, 226, 232, 239, 245, 251, 252, 253, 267, 270, 272, 448, 464, 496, 504, 505, 524], "softwar": 4, "solut": [212, 223, 469], "solv": [6, 212, 227, 228, 542], "some": [23, 108, 118, 120, 150, 179, 212, 395, 398, 522, 529, 539], "sometim": [169, 539], "somewhat": 215, "sophist": 215, "sort": [6, 33, 39, 105, 106, 172, 224, 252, 339, 364, 397, 479, 489, 491, 501, 507, 508, 519, 527, 532, 539, 542], "sort_complex": 6, "sorter": [105, 372, 479], "sought": 203, "sourc": [4, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 72, 73, 74, 76, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 385, 386, 389, 392, 393, 394, 395, 396, 398, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 473, 474, 475, 479, 480, 481, 487, 488, 489, 491, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531], "space": [6, 23, 125, 127, 139, 157, 164, 166, 232, 244, 508, 546], "spars": [178, 253], "speak": 218, "special": [2, 108, 115, 532, 542], "specif": [0, 4, 108, 158], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 67, 69, 75, 76, 80, 90, 91, 92, 95, 96, 99, 100, 105, 110, 111, 112, 113, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 146, 149, 156, 157, 158, 159, 161, 162, 164, 166, 175, 186, 206, 208, 210, 218, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 251, 252, 254, 264, 265, 267, 269, 270, 271, 272, 339, 348, 355, 391, 392, 393, 397, 398, 402, 405, 406, 410, 423, 433, 451, 459, 460, 464, 467, 469, 473, 474, 475, 476, 480, 487, 495, 496, 498, 500, 501, 504, 506, 507, 508, 509, 519, 521, 523, 524, 526, 530, 531], "spectrum": [10, 127, 128, 132, 133], "speed": 110, "speedup": 111, "spell": 389, "split": [6, 39, 75, 76, 106, 107, 172, 173, 477, 495, 521, 527, 528, 542], "spreadsheet": 150, "sqrt": [6, 10, 70, 105, 354, 368, 464, 478, 493], "squar": [6, 70, 174, 175, 202, 203, 207, 208, 209, 211, 212, 215, 222, 227, 228, 246, 270, 272, 414, 430, 463, 464, 478, 480, 492, 496, 512, 516, 523, 524], "squeez": [6, 105, 118, 539], "src": 82, "stabil": [33, 488], "stabl": [33, 488], "stack": [6, 74, 75, 76, 107, 173, 205, 206, 213, 214, 216, 220, 221, 222, 225, 229, 247, 248, 389, 477, 491, 501, 521, 528], "stai": 73, "stand": 166, "standard": [105, 142, 151, 154, 251, 257, 267, 270, 272, 355, 377, 386, 410, 425, 432, 439, 448, 449, 450, 451, 452, 465, 496, 524, 539, 542], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 410, 439], "standard_t": 6, "start": [2, 3, 23, 43, 45, 111, 125, 129, 139, 156, 164, 232, 244, 246, 386, 469, 474, 511, 515], "start_tim": 0, "stat_length": 395, "state": 410, "statist": [395, 532, 542], "std": [6, 105, 251, 267, 270, 272, 524, 539], "stdev": [410, 451], "step": [4, 23, 111, 164, 169, 232, 244], "sticki": 108, "still": [56, 172, 218, 527], "stop": [23, 164, 232, 244], "store": [143, 164, 189, 190, 229, 232, 239, 244, 247, 394, 526], "str": [42, 44, 75, 76, 108, 110, 111, 157, 160, 173, 233, 331, 395, 467, 477, 495, 513, 528], "str_": 108, "straightforward": 178, "strictli": 218, "stride": [48, 49, 105, 340], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 108, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 395, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 513, 515, 523, 530, 531, 539], "string_repr": 111, "stringio": 233, "strongli": [4, 505], "struct": 108, "structur": [108, 233], "student": 452, "style": [49, 105, 340, 389, 395, 459, 460, 520], "sub": [39, 75, 76, 95, 100, 106, 108, 110, 172, 173, 228, 229, 477, 491, 495, 506, 509, 521, 527, 528], "subarrai": [95, 108, 178, 519], "subclass": [41, 467], "subdiagon": [206, 229], "subdivid": 108, "subdtyp": 108, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 77, 78, 80, 81, 85, 86, 93, 94, 103, 105, 113, 114, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 162, 163, 167, 168, 169, 174, 181, 185, 187, 188, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 250, 256, 257, 260, 340, 387, 388, 390, 393, 399, 400, 401, 403, 408, 409, 463, 465, 471, 472, 478, 482, 483, 484, 486, 490, 492, 493, 497, 502, 503, 517, 518, 526, 531], "subscript": [110, 111], "subset": [3, 166, 494, 542], "subtract": [6, 395], "subtyp": 459, "succeed": 109, "success": [42, 412, 420, 429], "sugar": [98, 512, 516], "suggest": 100, "suit": 4, "suitabl": [34, 105, 355, 383, 406, 469, 479, 501], "sum": [0, 3, 4, 6, 10, 15, 56, 90, 92, 96, 99, 100, 101, 104, 105, 110, 129, 170, 174, 179, 203, 212, 213, 218, 226, 227, 229, 238, 239, 245, 247, 264, 265, 271, 347, 382, 412, 427, 429, 464, 504, 506, 508, 526, 539, 542], "sum_": [10, 218, 230, 526], "sum_along_diagon": 506, "sum_of_weight": 56, "summari": 532, "summat": [104, 110, 111, 179, 226, 228, 247, 394, 504, 526], "superdiagon": [206, 229], "suppli": [128, 133, 217, 395, 410, 439], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 77, 78, 80, 81, 84, 85, 86, 88, 93, 94, 103, 105, 108, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 143, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 174, 175, 180, 181, 185, 187, 188, 197, 198, 199, 200, 201, 204, 206, 213, 219, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 251, 255, 256, 257, 258, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 340, 373, 387, 388, 390, 392, 393, 396, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 465, 467, 471, 472, 478, 482, 483, 484, 488, 490, 492, 493, 496, 497, 498, 502, 503, 517, 518, 524, 526, 530, 531, 546], "sure": 467, "surnam": 108, "surpris": [129, 130, 131], "svd": [6, 203, 211, 216, 220, 225], "svdval": 6, "swap": [108, 124, 127, 499], "swapax": [6, 105, 259, 539], "swapped_cod": 108, "swapped_dt": 108, "sy": 108, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "sycl_context": 105, "sycl_devic": 105, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 340, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 509, 511, 515, 523, 530, 531], "symmetr": [128, 134, 136, 137, 202, 207, 208, 209, 210, 216, 220, 224, 395], "symmetri": [10, 123, 128, 133, 134, 137], "syntact": [98, 512, 516], "syntax": 539, "sys_is_l": 108, "system": [3, 4, 223], "t": [10, 75, 76, 88, 105, 108, 128, 186, 202, 207, 209, 212, 383, 389, 452, 459, 508], "t1": 546, "tabl": [2, 9, 214, 231, 532], "tack": 108, "take": [6, 74, 105, 120, 195, 246, 398, 406, 459, 468, 479, 480, 485, 501, 519, 522, 539, 546], "take_along_axi": [6, 31, 32, 33, 72, 406, 500], "taken": [56, 100, 101, 109, 111, 128, 134, 135, 136, 137, 138, 140, 169, 170, 247, 270, 272, 480, 496, 506, 509, 511, 515, 524, 525, 526], "tall": 141, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 85, 484, 503], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 484, 486, 502, 503], "tanh": [6, 14, 25, 30, 52, 86, 486, 502], "target": [49, 69, 105, 340, 405], "target_devic": 105, "tau": 221, "tbb": 4, "tempfil": 157, "temporari": [157, 546], "temporaryfil": 157, "ten": 420, "tensor": [44, 105, 110, 111, 155, 226, 227, 228, 262, 263, 266, 268, 269, 404, 504], "tensordot": [6, 104, 110, 179, 227, 228, 247, 394], "tensorinv": [6, 228], "tensorsolv": [6, 227], "term": [10, 15, 103, 111, 123, 124, 126, 129, 130, 131, 134, 137, 260, 497, 517], "test": [0, 2, 16, 17, 21, 114, 167, 168, 183, 185, 187, 188, 189, 190, 200, 201, 269, 389, 390, 412, 539, 542], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [156, 157, 159, 160, 233], "th": [92, 96, 99, 101, 105, 109, 121, 166, 178, 252, 383, 391, 397, 480, 507, 510, 512, 514, 516], "than": [36, 60, 63, 91, 92, 105, 106, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 142, 147, 148, 151, 158, 167, 168, 170, 171, 173, 199, 200, 201, 212, 216, 220, 221, 226, 229, 264, 265, 269, 271, 357, 364, 389, 395, 398, 402, 469, 471, 480, 482, 494, 495, 498, 504, 506, 518, 522, 546], "thei": [17, 38, 108, 182, 186, 198, 209, 212, 226, 477, 479, 504, 508, 511, 515, 522, 523, 528, 539], "them": [74, 216, 220, 539], "theor": 207, "theoret": 111, "therefor": [123, 137, 158, 208, 210, 469], "theta": 508, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 73, 75, 76, 80, 83, 87, 90, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 147, 148, 149, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 171, 173, 184, 186, 192, 195, 204, 206, 208, 210, 212, 213, 214, 217, 218, 219, 222, 225, 229, 230, 231, 232, 233, 236, 238, 239, 244, 245, 246, 247, 249, 252, 255, 257, 259, 261, 262, 263, 266, 268, 269, 271, 340, 345, 350, 353, 355, 364, 370, 383, 386, 389, 395, 398, 402, 405, 406, 443, 445, 459, 464, 465, 467, 468, 469, 474, 475, 477, 488, 495, 498, 500, 501, 505, 508, 512, 516, 519, 521, 522, 523, 526, 528, 529], "thing": 500, "think": [395, 468], "third": [74, 75, 76, 89, 106, 107, 124, 173, 226, 477, 491, 495, 504, 528], "those": [10, 73, 83, 95, 215, 406], "though": 129, "thousand": 420, "three": [53, 54, 55, 118, 215, 226, 246, 410, 446, 504, 519], "threshold": 216, "through": [41, 108, 171, 195, 207, 209, 212, 246, 467, 539], "throw": 427, "thu": [10, 128, 134, 136, 505], "tile": [6, 466, 542], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 62, 63, 64, 81, 101, 103, 104, 114, 124, 126, 128, 130, 131, 133, 135, 136, 138, 140, 149, 151, 152, 153, 154, 163, 167, 168, 169, 174, 179, 180, 182, 188, 196, 197, 198, 199, 200, 201, 212, 216, 220, 226, 238, 239, 240, 242, 243, 250, 256, 257, 260, 388, 390, 395, 400, 401, 412, 427, 465, 471, 475, 485, 497, 501, 504, 505, 517, 519, 525], "time_dpnp": 0, "time_numpi": 0, "timedelta": 108, "timeit": 110, "timestep": 125, "tini": 142, "titl": 108, "tm": 154, "to_begin": 109, "to_devic": [6, 105], "to_end": 109, "tobyt": 6, "todo": 430, "tofil": [6, 157], "togeth": [17, 75, 76, 108, 129, 182, 195, 495, 529], "tol": [216, 428, 462], "toler": [17, 37, 182, 216, 462], "tolist": 6, "too": [4, 124, 126, 130, 131, 135, 136, 138, 140, 529], "toolkit": 3, "tostr": 6, "total": [6, 87, 91, 105, 361, 469, 487, 496, 524], "toward": [35, 71, 143, 150, 151, 170, 171, 257, 388, 465, 472, 475, 476, 518], "trace": [6, 96, 99, 100, 105, 110, 539], "traceback": [22, 494], "trail": 513, "transfer": 105, "transform": [111, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 532], "transpos": [6, 34, 83, 105, 110, 186, 202, 209, 248, 259, 274, 357, 397, 539, 542], "trapezoid": [6, 92, 498], "trapz": 6, "treat": [17, 83, 95, 128, 134, 136, 157, 166, 182, 208, 210, 212, 217, 233, 252, 264, 265, 269, 271, 402, 406, 479, 501, 505, 519, 522, 539], "tri": 6, "trial": 412, "triangl": [96, 174, 246, 464, 509, 510, 511, 512, 514, 515, 516], "triangular": [6, 202, 208, 210, 221, 246, 511, 512, 515, 516], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 85, 86, 484, 486, 502, 503, 542], "tril": [6, 96, 246, 509, 511, 512, 515], "tril_indic": [6, 246, 512, 515], "tril_indices_from": [6, 516], "trili": 512, "trili1": 512, "trim": [124, 126, 130, 131, 135, 136, 138, 140, 513], "trim_zero": 6, "triu": [6, 96, 246, 509, 511, 515, 516], "triu_indic": [6, 246, 511, 516], "triu_indices_from": [6, 512], "triui": 516, "triuim1": 516, "trivial": [207, 501], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 92, 93, 94, 102, 103, 105, 108, 110, 111, 114, 116, 117, 118, 119, 120, 122, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 163, 164, 167, 168, 169, 170, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 214, 216, 218, 220, 221, 223, 224, 226, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 278, 335, 336, 340, 345, 358, 359, 360, 365, 377, 379, 384, 387, 388, 389, 390, 398, 399, 400, 401, 402, 403, 406, 408, 409, 415, 463, 464, 465, 467, 468, 471, 472, 478, 480, 482, 483, 484, 486, 488, 490, 492, 493, 496, 497, 498, 501, 502, 503, 504, 508, 517, 518, 519, 521, 523, 524, 526, 529], "true_divid": [6, 103], "trunc": [6, 35, 71, 143, 150, 472, 476], "truncat": [35, 71, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 143, 150, 448, 472, 476, 518], "trust": [262, 263], "truth": [58, 59, 61, 62, 64, 114, 167, 168, 181, 200, 201, 240, 241, 242, 243, 390, 539, 542], "try": [4, 42], "tukei": 10, "tup": [74, 107, 173, 477, 528], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 66, 67, 68, 80, 87, 90, 96, 97, 98, 99, 105, 108, 111, 118, 127, 132, 146, 155, 158, 161, 162, 164, 166, 170, 171, 173, 178, 184, 192, 195, 196, 218, 221, 228, 231, 232, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 266, 267, 268, 269, 270, 271, 272, 355, 373, 383, 386, 389, 391, 395, 397, 402, 460, 464, 466, 468, 469, 473, 477, 481, 494, 495, 496, 498, 505, 507, 511, 512, 515, 516, 520, 521, 523, 524, 526, 528, 539], "turn": 74, "twister": 410, "two": [10, 17, 37, 53, 54, 58, 59, 61, 62, 64, 79, 83, 84, 89, 99, 100, 101, 104, 105, 108, 110, 111, 118, 123, 124, 126, 129, 130, 131, 134, 135, 136, 138, 140, 152, 153, 166, 179, 181, 182, 196, 198, 206, 208, 212, 214, 217, 219, 223, 225, 226, 229, 240, 242, 243, 247, 248, 249, 250, 252, 255, 256, 259, 266, 268, 357, 364, 380, 394, 395, 410, 439, 459, 472, 475, 476, 480, 499, 504, 506, 511, 512, 515, 516, 525], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 349, 353, 355, 362, 370, 374, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 542], "type_nam": 0, "typeerror": [56, 82, 105, 155, 198, 373], "typenam": 6, "typestr": 108, "typic": [17, 128, 182, 479, 539], "u": [108, 202, 208, 210, 224, 246, 269, 271, 519], "u1": [108, 156, 157], "u16": 108, "u4": 69, "u8": 108, "ufunc": [2, 532, 539], "uint64": 108, "uint8": [108, 156, 157], "uk": 10, "un": 108, "unalt": 395, "unari": 539, "unchang": 140, "undefin": [20, 105, 252, 364, 395], "under": [214, 231], "underli": [58, 62, 64, 459, 468], "undo": [10, 131], "undocu": 108, "unexpect": [269, 271], "unicod": 108, "uniform": [6, 108, 166, 170, 171, 244, 410, 437, 440, 442, 443, 445], "uniformli": [244, 410, 454], "uniniti": [36, 112, 113, 161, 392, 530], "union1d": 6, "uniqu": [6, 56, 57, 90, 102, 108, 245, 251, 259, 267, 270, 272, 395, 464, 466, 496, 524], "unique_al": 6, "unique_count": [6, 519], "unique_indic": 519, "unique_invers": [6, 519], "unique_valu": 6, "unit": [105, 125, 139, 195, 207, 215, 222, 378], "unitari": [10, 166, 221, 224], "uniti": 170, "univ": 10, "univers": [2, 218, 532, 539], "unless": [16, 21, 49, 91, 92, 105, 110, 170, 207, 216, 218, 244, 264, 265, 269, 271, 340, 402, 498, 519, 526], "unlik": [105, 139, 370, 373], "unmodifi": 171, "unpackbit": 6, "unravel": 520, "unravel_index": [6, 31, 32, 460], "unraveled_coord": 520, "unsaf": [49, 69, 75, 76, 82, 105, 110, 173, 247, 340, 477, 495, 526, 528], "unscal": 10, "unsign": [108, 402, 498], "unspecifi": 468, "unstack": [6, 173, 477, 495, 528], "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 81, 85, 86, 93, 94, 103, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 155, 163, 169, 174, 181, 197, 198, 199, 235, 236, 237, 238, 239, 250, 256, 257, 258, 260, 387, 388, 399, 400, 401, 403, 408, 409, 463, 465, 471, 472, 478, 482, 483, 484, 486, 490, 497, 502, 503, 517, 518], "until": [111, 473, 474], "unwrap": [6, 93, 408], "up": [4, 10, 108, 110, 148, 501, 512, 519], "upcast": 36, "updat": [4, 386], "uplo": [208, 210], "upon": [105, 378], "upper": [96, 121, 170, 171, 202, 208, 210, 221, 246, 509, 511, 512, 514, 515, 516], "url": 4, "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 68, 69, 73, 75, 76, 80, 83, 89, 91, 92, 95, 96, 97, 99, 100, 103, 105, 108, 110, 111, 112, 113, 114, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 175, 178, 179, 181, 186, 195, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 212, 216, 217, 218, 220, 226, 229, 232, 233, 239, 240, 242, 244, 246, 247, 249, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 280, 340, 345, 353, 373, 386, 387, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 406, 410, 413, 415, 416, 426, 431, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 451, 454, 459, 462, 465, 466, 467, 468, 469, 471, 473, 479, 480, 482, 485, 489, 496, 497, 498, 500, 501, 504, 505, 506, 508, 509, 511, 512, 515, 516, 517, 519, 520, 523, 524, 526, 529, 530, 531, 539, 546], "usabl": 149, "usag": [3, 4, 125, 139], "use_getitem": 108, "use_setitem": 108, "user": [108, 261, 395], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 494, 509, 511, 515, 523, 530, 531], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 350, 385, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 80, 96, 97, 99, 105, 112, 113, 121, 125, 139, 156, 157, 158, 159, 160, 161, 162, 164, 175, 178, 232, 233, 244, 246, 254, 345, 391, 392, 393, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 509, 511, 515, 523, 530, 531], "usual": [97, 105, 108, 213, 247, 373], "util": 532, "v": [79, 96, 99, 105, 108, 207, 208, 230, 252, 372, 405, 479, 526], "v0": 6, "v10": 108, "v13": 6, "v2": 6, "v_sort": 252, "val": [105, 141, 144, 330, 366, 386, 398], "valid": [84, 118, 246, 499, 511, 512, 515, 516], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 96, 101, 102, 103, 105, 108, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 128, 129, 134, 136, 137, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 180, 181, 182, 184, 185, 187, 188, 191, 192, 195, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 222, 223, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 255, 256, 257, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 276, 277, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 337, 338, 340, 342, 345, 350, 352, 364, 366, 373, 386, 387, 388, 389, 390, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 420, 437, 438, 454, 461, 463, 464, 465, 466, 467, 468, 471, 472, 473, 476, 478, 479, 480, 482, 483, 484, 485, 488, 490, 492, 493, 496, 497, 498, 500, 501, 502, 503, 506, 508, 511, 515, 517, 518, 519, 522, 524, 526, 529, 530, 531, 539, 542], "value2": 108, "valueerror": [22, 36, 41, 42, 105, 155, 218, 262, 263, 357, 468, 491, 494], "van": 218, "vander": 6, "vandermond": 523, "var": [6, 105, 251, 267, 270, 272, 496, 539], "vararg": 166, "vari": [10, 16, 20, 21, 100, 111, 124, 126, 128, 129, 130, 131, 133, 134, 137, 140, 158, 178, 186, 203, 206, 207, 208, 212, 214, 218, 261, 267, 270, 272, 459, 462, 485], "variabl": [83, 88, 212, 223], "varianc": [105, 251, 267, 270, 272, 384, 496, 524, 542], "variou": [218, 485, 546], "vdot": [6, 104, 230, 247, 526], "vecdot": [6, 525], "vector": [89, 110, 158, 178, 179, 195, 203, 204, 213, 216, 217, 218, 219, 224, 225, 230, 231, 247, 252, 253, 394, 395, 525, 526, 542], "vector_norm": [6, 218], "vendor": 4, "veri": [3, 10, 17, 180, 182, 219, 253, 261, 394], "verif": 0, "verifi": 202, "version": [4, 87, 89, 100, 105, 108, 145, 247, 252, 352, 386, 389, 394, 460, 506, 520, 525, 526], "vertic": [74, 75, 76, 100, 107, 141, 146, 147, 173, 206, 475, 477, 491, 495, 527, 528], "vetterlin": 10, "vh": 224, "via": 134, "view": [6, 39, 53, 54, 55, 65, 96, 100, 105, 106, 118, 124, 126, 130, 131, 135, 136, 138, 140, 146, 147, 148, 172, 253, 259, 274, 357, 370, 383, 397, 406, 459, 460, 468, 475, 491, 494, 499, 507, 520, 527], "violat": 82, "void": 108, "void640": 108, "von": 455, "vonmis": 6, "vsplit": [6, 75, 76, 491], "vstack": [6, 74, 75, 76, 107, 173, 212, 477, 491, 495], "w": [10, 56, 207, 208, 209, 210, 215, 467], "wa": [10, 90, 108, 217, 245, 266, 268, 270, 272, 410, 451, 464, 468, 496, 524], "wai": [3, 4, 10, 105, 111, 123, 129, 130, 131, 136, 157, 226, 364, 504], "wald": 6, "walk": 108, "want": [4, 186, 501], "warn": [108, 262, 263, 428, 469], "we": [80, 83, 97, 100, 111, 141, 212, 246, 406, 501, 508], "weibul": [6, 458], "weight": [56, 57, 88, 170, 171, 251, 267, 498], "well": [108, 110, 157, 170, 171, 402, 412, 429, 448], "were": [75, 76, 158, 410, 439, 495, 522], "what": [10, 49, 69, 75, 76, 82, 105, 108, 110, 114, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 173, 183, 247, 340, 412, 429, 477, 495, 526, 528, 539], "when": [10, 22, 23, 33, 36, 37, 40, 41, 43, 45, 48, 49, 56, 80, 82, 102, 105, 108, 110, 123, 134, 136, 137, 152, 153, 164, 169, 180, 207, 213, 218, 221, 225, 226, 232, 239, 244, 246, 247, 252, 257, 264, 265, 266, 268, 269, 271, 340, 459, 465, 469, 472, 474, 476, 480, 488, 500, 504, 508, 519, 526, 529, 546], "whenev": [118, 397, 499, 507], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 82, 85, 86, 89, 90, 93, 94, 96, 97, 99, 101, 102, 103, 105, 106, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 128, 134, 135, 136, 139, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 174, 175, 178, 179, 181, 182, 183, 184, 185, 187, 188, 191, 192, 197, 198, 199, 200, 201, 202, 206, 212, 216, 221, 224, 225, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 260, 266, 267, 268, 269, 270, 271, 272, 335, 336, 340, 345, 358, 359, 360, 365, 372, 377, 379, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 408, 409, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 454, 459, 463, 464, 465, 469, 471, 472, 474, 478, 479, 480, 482, 483, 484, 486, 490, 491, 492, 493, 496, 497, 498, 502, 503, 506, 507, 509, 511, 515, 517, 518, 522, 523, 524, 526, 527, 530, 531], "wherev": 82, "whether": [16, 17, 21, 37, 90, 102, 108, 155, 182, 183, 186, 202, 221, 232, 261, 269, 271, 460, 483, 519, 520, 539], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 65, 75, 76, 80, 82, 87, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 171, 173, 175, 178, 180, 185, 187, 188, 189, 190, 202, 204, 206, 207, 214, 216, 218, 225, 228, 229, 230, 231, 233, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 340, 345, 355, 389, 391, 392, 393, 397, 402, 405, 410, 432, 437, 438, 439, 440, 441, 442, 443, 445, 451, 454, 460, 464, 466, 469, 473, 480, 487, 488, 491, 494, 495, 496, 498, 500, 506, 507, 508, 509, 510, 511, 514, 515, 518, 521, 522, 523, 524, 526, 529, 530, 531, 539, 546], "whichev": 179, "while": [10, 83, 138, 140, 170, 171, 251, 267, 270, 272, 389, 398, 402, 473, 496, 498, 509, 524], "whitespac": [157, 160], "whole": [124, 126, 130, 131, 135, 136, 138, 140, 511, 515], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 100, 108, 120, 121, 141, 203, 206, 208, 209, 210, 214, 225, 227, 229, 246, 248, 259, 473, 512, 516, 520], "why": 134, "wide": 141, "width": [108, 170, 171, 395], "wild": [412, 429], "window": [4, 125, 139], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 76, 77, 78, 81, 83, 85, 86, 90, 103, 105, 107, 114, 116, 117, 119, 122, 143, 149, 150, 151, 152, 153, 154, 167, 168, 169, 172, 173, 174, 177, 181, 182, 185, 187, 188, 189, 190, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 255, 256, 257, 258, 260, 266, 268, 269, 344, 387, 388, 390, 399, 400, 401, 403, 461, 463, 465, 471, 472, 476, 477, 478, 482, 483, 484, 485, 486, 491, 492, 493, 495, 497, 502, 503, 517, 518, 527, 528, 532, 539, 542, 546], "wish": 539, "within": [17, 23, 37, 49, 105, 110, 128, 129, 130, 131, 133, 134, 136, 170, 171, 182, 340, 405, 410, 454], "without": [100, 105, 112, 141, 383, 459, 468, 469, 539], "won": 108, "word": [129, 130, 131, 134, 136, 150, 209, 410, 454], "work": [4, 35, 48, 105, 355, 501, 539], "world": [108, 412, 429], "would": [33, 75, 76, 105, 108, 158, 178, 217, 246, 247, 364, 397, 410, 460, 488, 491, 495, 501, 507, 522, 526], "wrap": [93, 105, 141, 366, 381, 395, 405, 406, 408, 460, 479, 500, 501, 522], "wrapper": 105, "writabl": 467, "write": [96, 100, 105, 141, 157, 353, 468], "writeabl": 467, "written": [4, 87, 90, 141, 157, 186, 245, 464, 529], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 65, 67, 70, 71, 77, 78, 80, 81, 83, 84, 85, 86, 88, 89, 90, 93, 94, 96, 99, 101, 102, 105, 106, 108, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 130, 131, 132, 138, 139, 140, 143, 144, 145, 150, 156, 157, 158, 159, 161, 162, 163, 164, 166, 172, 175, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 198, 203, 204, 206, 209, 212, 214, 218, 221, 223, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 253, 254, 258, 259, 261, 340, 345, 354, 355, 362, 368, 373, 374, 387, 389, 391, 392, 393, 399, 402, 403, 404, 408, 409, 428, 434, 459, 461, 463, 464, 466, 467, 472, 473, 474, 476, 478, 480, 482, 483, 484, 485, 486, 490, 491, 492, 493, 494, 499, 500, 502, 503, 508, 509, 518, 521, 523, 527, 529, 530, 531], "x0": [43, 45, 80, 99, 393, 523, 531], "x00": 157, "x01": [156, 157], "x02": [156, 157], "x03": [156, 157], "x04": [156, 157], "x05": 156, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 62, 63, 64, 72, 81, 84, 103, 105, 114, 149, 151, 152, 153, 154, 163, 167, 168, 169, 174, 195, 197, 198, 199, 200, 201, 204, 213, 219, 230, 238, 239, 240, 241, 242, 243, 247, 250, 253, 256, 257, 258, 260, 340, 387, 388, 390, 396, 399, 400, 401, 407, 447, 465, 471, 473, 497, 517, 526], "x1_i": [15, 29, 51, 58, 60, 62, 63, 64, 81, 103, 114, 149, 151, 154, 167, 168, 174, 199, 200, 201, 238, 239, 240, 242, 243, 257, 260, 390, 400, 401, 465, 471, 497, 517], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 62, 63, 64, 81, 84, 103, 114, 149, 151, 152, 153, 154, 163, 167, 168, 169, 174, 195, 197, 198, 199, 200, 201, 204, 213, 219, 230, 238, 239, 240, 241, 242, 243, 247, 250, 253, 256, 257, 260, 387, 388, 390, 399, 400, 401, 465, 471, 473, 492, 497, 517, 526], "x2_i": [15, 29, 51, 58, 60, 62, 63, 64, 81, 103, 114, 149, 151, 154, 167, 168, 174, 199, 200, 201, 238, 239, 240, 242, 243, 257, 260, 390, 400, 401, 465, 471, 497, 517], "x3": [16, 21, 149], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 61, 70, 71, 77, 78, 85, 86, 116, 117, 119, 150, 177, 181, 234, 235, 236, 237, 241, 387, 399, 403, 461, 463, 472, 476, 478, 482, 483, 484, 486, 492, 493, 502, 503, 518], "xarr": 83, "xi": [237, 253], "xn": [195, 253], "xor": [58, 59, 61, 62, 64, 181, 240, 241, 242, 243], "xv": 253, "xx": 253, "xy": 253, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 65, 80, 83, 88, 89, 99, 105, 108, 109, 112, 113, 118, 121, 125, 139, 156, 157, 158, 159, 161, 162, 164, 166, 175, 189, 190, 203, 204, 212, 232, 233, 244, 253, 254, 258, 261, 345, 362, 370, 373, 391, 392, 393, 467, 508, 509, 523, 529, 530, 531], "y1": 198, "y2": 198, "yarr": 83, "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 269, 271, 389, 395, 410, 529, 539], "you": [4, 100, 128, 133, 134, 186, 246, 252, 468, 500, 501, 539, 546], "your": [4, 100, 546], "yv": 253, "yy": 253, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 80, 89, 99, 112, 113, 121, 125, 139, 156, 157, 158, 159, 161, 162, 164, 175, 232, 233, 244, 253, 254, 391, 392, 393, 420, 509, 523, 530, 531], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 60, 71, 87, 89, 90, 97, 101, 105, 112, 113, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 150, 157, 161, 162, 175, 177, 183, 184, 189, 190, 191, 192, 199, 207, 208, 210, 212, 215, 216, 220, 224, 226, 245, 246, 249, 251, 255, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 362, 363, 373, 374, 378, 385, 389, 392, 393, 395, 402, 410, 412, 440, 442, 443, 445, 461, 462, 464, 469, 472, 476, 482, 488, 496, 498, 504, 509, 510, 513, 514, 518, 524, 529, 531], "zeros_lik": [6, 36, 94, 113, 162, 252, 393, 409, 530], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.ndindex", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 275, "__add__": 276, "__and__": 277, "__bool__": 278, "__complex__": 279, "__copy__": 280, "__eq__": 281, "__float__": 282, "__floordiv__": 283, "__ge__": 284, "__getitem__": 285, "__gt__": 286, "__iadd__": 287, "__iand__": 288, "__ifloordiv__": 289, "__ilshift__": 290, "__imatmul__": 291, "__imod__": 292, "__imul__": 293, "__int__": 294, "__invert__": 295, "__ior__": 296, "__ipow__": 297, "__irshift__": 298, "__isub__": 299, "__itruediv__": 300, "__ixor__": 301, "__le__": 302, "__len__": 303, "__lshift__": 304, "__lt__": 305, "__matmul__": 306, "__mod__": 307, "__mul__": 308, "__ne__": 309, "__neg__": 310, "__new__": 311, "__or__": 312, "__pos__": 313, "__pow__": 314, "__radd__": 315, "__rand__": 316, "__repr__": 317, "__rfloordiv__": 318, "__rlshift__": 319, "__rmatmul__": 320, "__rmod__": 321, "__rmul__": 322, "__ror__": 323, "__rpow__": 324, "__rrshift__": 325, "__rshift__": 326, "__rsub__": 327, "__rtruediv__": 328, "__rxor__": 329, "__setitem__": 330, "__str__": 331, "__sub__": 332, "__truediv__": 333, "__xor__": 334, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 536, "add": 15, "algebra": [6, 534], "all": [16, 335], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 336], "api": [1, 532], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 337], "argmin": [32, 338], "argsort": [33, 339], "argwher": 34, "arithmet": [537, 539, 540], "around": 35, "arrai": [6, 7, 9, 36, 533, 535, 536, 539], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 340], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 539, "avail": [9, 546], "averag": [56, 545], "backend": 1, "background": 10, "basic": [536, 540], "beta": 411, "bincount": 57, "binomi": 412, "bit": [5, 546], "bitwise_and": 58, "bitwise_invert": 59, "bitwise_left_shift": 60, "bitwise_not": 61, "bitwise_or": 62, "bitwise_right_shift": 63, "bitwise_xor": 64, "broadcast_arrai": 65, "broadcast_shap": 66, "broadcast_to": 67, "build": [4, 7], "byte": 413, "byte_bound": 68, "c": 1, "calcul": 539, "can_cast": 69, "cbrt": 70, "ceil": 71, "chang": 536, "channel": 4, "chisquar": 414, "choic": 415, "choleski": 202, "choos": [72, 341], "class": 7, "clip": [73, 342], "co": 85, "column_stack": 74, "comparison": [6, 535, 539, 546], "complex": 537, "concat": 75, "concaten": 76, "cond": 203, "conda": 4, "conj": [77, 343], "conjug": [78, 344], "construct": 539, "control": 0, "convers": 539, "convolv": 79, "copi": [80, 345], "copysign": 81, "copyto": 82, "corrcoef": 83, "correl": [84, 545], "cosh": 86, "count": 543, "count_nonzero": 87, "cov": 88, "creat": 8, "creation": 7, "cross": [89, 204], "cumlogsumexp": 90, "cumprod": [91, 346], "cumsum": [92, 347], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 533, 539, 541], "decomposit": 534, "deg2rad": 93, "degre": 94, "delet": 95, "det": 205, "detail": 10, "develop": 2, "devic": 4, "diag": 96, "diag_indic": 97, "diag_indices_from": 98, "diagflat": 99, "diagon": [100, 206, 348], "diff": 101, "differ": 537, "digit": 102, "dimens": [10, 536], "dimension": [6, 539], "dirichlet": 416, "discret": 6, "distribut": 541, "divid": 103, "dot": 104, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 541], "dpnp_arrai": 105, "driver": 4, "dsplit": 106, "dstack": 107, "dtype": [108, 349], "ediff1d": 109, "eig": 207, "eigenvalu": 534, "eigh": 208, "eigval": 209, "eigvalsh": 210, "einsum": 110, "einsum_path": 111, "element": [5, 536], "empti": 112, "empty_lik": 113, "equal": 114, "equat": 534, "erf": 115, "error": 544, "exampl": [0, 4], "except": 534, "exist": 7, "exp": 116, "exp2": 117, "expand_dim": 118, "expm1": 119, "expon": 537, "exponenti": 417, "extens": 2, "extract": 120, "extrema": 537, "ey": 121, "f": 418, "fab": 122, "fft": [10, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "fft2": 124, "fftfreq": 125, "fftn": 126, "fftshift": 127, "fill": 350, "fill_diagon": 141, "find": 537, "finfo": 142, "fix": 143, "flag": 351, "flat": 352, "flatit": 144, "flatnonzero": 145, "flatten": 353, "flip": 146, "fliplr": 147, "flipud": 148, "float": [537, 546], "float_pow": 149, "floor": 150, "floor_divid": 151, "fmax": 152, "fmin": 153, "fmod": 154, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 155, "frombuff": 156, "fromfil": 157, "fromfunct": 158, "fromit": 159, "fromstr": 160, "full": 161, "full_lik": 162, "function": [10, 535, 537, 544, 545, 546], "gamma": 419, "gcd": 163, "gener": [533, 541], "geometr": 420, "geomspac": 164, "get_includ": 165, "gradient": 166, "greater": 167, "greater_equ": 168, "guid": 4, "gumbel": 421, "handl": 537, "heavisid": 169, "helper": 10, "hermitian": 10, "hfft": 128, "higher": 10, "histogram": [170, 545], "histogram_bin_edg": 171, "hsplit": 172, "hstack": 173, "hyperbol": 537, "hypergeometr": 422, "hypot": 174, "ident": 175, "ifft": 129, "ifft2": 130, "ifftn": 131, "ifftshift": 132, "ihfft": 133, "iinfo": 176, "imag": [177, 354], "implement": 10, "index": [533, 539], "indic": 178, "infin": 535, "inform": [2, 8, 10], "inner": 179, "insert": [180, 533], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 211, "invert": 181, "irfft": 134, "irfft2": 135, "irfftn": 136, "isclos": 182, "iscomplex": 183, "iscomplexobj": 184, "isfinit": 185, "isfortran": 186, "isinf": 187, "isnan": 188, "isneginf": 189, "isposinf": 190, "isreal": 191, "isrealobj": 192, "isscalar": 193, "issubdtyp": 194, "item": [355, 539], "items": 356, "iter": 533, "ix_": 195, "join": 536, "kind": 536, "kron": 196, "laplac": 423, "layout": 539, "lcm": 197, "ldexp": 198, "left_shift": 199, "less": 200, "less_equ": 201, "level": 6, "librari": 0, "like": [533, 536], "linalg": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "linear": [6, 534], "linspac": 232, "loadtxt": 233, "log": 234, "log10": 235, "log1p": 236, "log2": 237, "logaddexp": 238, "logaddexp2": 239, "logarithm": 537, "logic": 535, "logical_and": 240, "logical_not": 241, "logical_or": 242, "logical_xor": 243, "logist": 424, "lognorm": 425, "logseri": 426, "logspac": 244, "logsumexp": 245, "lstsq": 212, "manipul": [536, 539], "mask_indic": 246, "math": 546, "mathemat": 537, "matmul": [213, 247], "matric": 7, "matrix": [7, 534, 539], "matrix_norm": 214, "matrix_pow": 215, "matrix_rank": 216, "matrix_transpos": 248, "max": [249, 358], "maximum": 250, "mean": [251, 359], "median": 252, "memori": 539, "meshgrid": 253, "method": 539, "mgrid": 254, "min": [255, 360], "minimum": 256, "miscellan": [8, 537, 538], "mod": 257, "modf": 258, "modul": [6, 540], "moveaxi": 259, "mt": 357, "multi": [6, 539], "multi_dot": 217, "multinomi": 427, "multipl": 539, "multipli": 260, "multivariate_norm": 428, "nan": 535, "nan_to_num": 261, "nanargmax": 262, "nanargmin": 263, "nancumprod": 264, "nancumsum": 265, "nanmax": 266, "nanmean": 267, "nanmin": 268, "nanprod": 269, "nanstd": 270, "nansum": 271, "nanvar": 272, "nbyte": 361, "ndarrai": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 539], "ndim": [362, 385], "ndindex": 386, "neg": 387, "negative_binomi": 429, "nextaft": 388, "noncentral_chisquar": 430, "noncentral_f": 431, "nonzero": [363, 389], "norm": [218, 534], "normal": [10, 432], "not_equ": 390, "number": [534, 536, 537], "numer": 7, "numpi": [2, 6], "ogrid": 391, "ones": 392, "ones_lik": 393, "oper": [5, 533, 534, 535, 536, 537, 539, 546], "order": 545, "other": [534, 537, 539], "outer": [219, 394], "output": 5, "over": 533, "overview": 3, "pack": 5, "packag": [4, 540], "pad": 395, "parallel": [0, 2], "pareto": 433, "partit": [364, 396], "permut": [434, 541], "permute_dim": 397, "pinv": 220, "place": 398, "point": 537, "poisson": 435, "poly1d": 540, "polynomi": 540, "polyutil": 540, "posit": 399, "pow": 400, "power": [401, 436], "prod": [365, 402], "product": [534, 537], "proj": 403, "ptp": 404, "put": [366, 405], "put_along_axi": 406, "putmask": 407, "python": 4, "qr": 221, "quick": 4, "r": 4, "rad2deg": 408, "radian": 409, "rand": 437, "randint": 438, "randn": 439, "random": [6, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 541], "random_integ": 441, "random_sampl": 442, "randomst": 410, "ranf": 443, "rang": 7, "ration": 537, "ravel": [367, 459], "ravel_multi_index": 460, "rayleigh": 444, "real": [10, 368, 461], "real_if_clos": 462, "rearrang": 536, "reciproc": 463, "reduce_hypot": 464, "refer": [1, 532], "remaind": 465, "remov": 536, "repeat": [369, 466], "requir": 467, "reshap": [370, 468], "resiz": 469, "result_typ": 470, "rfft": 137, "rfft2": 138, "rfftfreq": 139, "rfftn": 140, "right_shift": 471, "rint": 472, "roll": 473, "rollaxi": 474, "rot90": 475, "round": [371, 476, 537], "routin": [7, 8, 10, 533, 536, 537, 538, 542], "row_stack": 477, "rsqrt": 478, "sampl": [6, 445, 541], "scikit": 4, "search": 543, "searchsort": [372, 479], "seed": 446, "select": [480, 539], "shape": [7, 373, 481, 536, 539], "shuffl": 447, "sign": 482, "signbit": 483, "simpl": 541, "sin": 484, "sinc": 485, "sinh": 486, "size": [374, 487], "slogdet": 222, "solv": [223, 534], "sort": [375, 488, 543], "sort_complex": 489, "space": 490, "special": [537, 539, 544], "split": [491, 536], "sqrt": 492, "squar": 493, "squeez": [376, 494], "stack": 495, "standard": 10, "standard_cauchi": 448, "standard_exponenti": 449, "standard_gamma": 450, "standard_norm": 451, "standard_t": 452, "start": 4, "statist": 545, "std": [377, 496], "stride": 378, "subtract": 497, "sum": [379, 498, 537], "summari": 6, "svd": 224, "svdval": 225, "swapax": [380, 499], "sycl": 4, "t": 274, "tabl": 6, "take": [381, 500], "take_along_axi": 501, "tan": 502, "tanh": 503, "target": 4, "tensordot": [226, 504], "tensorinv": 227, "tensorsolv": 228, "test": [4, 8, 535], "tile": [505, 536], "trace": [229, 382, 506], "transform": [6, 10], "transpos": [383, 507, 536], "trapezoid": 508, "tri": 509, "triangular": 453, "trigonometr": [537, 546], "tril": 510, "tril_indic": 511, "tril_indices_from": 512, "trim_zero": 513, "triu": 514, "triu_indic": 515, "triu_indices_from": 516, "true_divid": 517, "trunc": 518, "truth": 535, "twiddl": 546, "type": [8, 9, 535, 539], "ufunc": 546, "uniform": 454, "uniqu": 519, "univers": 546, "unravel_index": 520, "unstack": 521, "unwrap": 522, "util": 538, "valu": [7, 535], "vander": 523, "var": [384, 524], "varianc": 545, "vdot": 525, "vecdot": [230, 526], "vector": 534, "vector_norm": 231, "vonmis": 455, "vsplit": 527, "vstack": 528, "wald": 456, "weibul": 457, "where": 529, "wise": 5, "zero": 530, "zeros_lik": 531, "zipf": 458}})