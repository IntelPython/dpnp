Search.setIndex({"alltitles": {"API Reference": [[534, null]], "Adding and removing elements": [[538, "adding-and-removing-elements"]], "Arithmetic": [[542, "arithmetic"]], "Arithmetic operations": [[539, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[541, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array attributes": [[541, "array-attributes"]], "Array conversion": [[541, "array-conversion"]], "Array creation routines": [[7, null]], "Array manipulation routines": [[538, null]], "Array methods": [[541, "array-methods"]], "Array type testing": [[537, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[548, "available-ufuncs"]], "Averages and variances": [[547, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[538, "basic-operations"]], "Basics": [[542, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[548, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[541, "calculation"]], "Changing array shape": [[538, "changing-array-shape"]], "Changing kind of array": [[538, "changing-kind-of-array"]], "Changing number of dimensions": [[538, "changing-number-of-dimensions"]], "Comparison": [[537, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[548, "comparison-functions"]], "Constructing arrays": [[541, "constructing-arrays"]], "Correlations": [[547, "correlations"]], "Counting": [[545, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[541, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[536, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"], [10, null]], "Distributions": [[543, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[546, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[536, "exceptions"]], "Exponents and logarithms": [[539, "exponents-and-logarithms"]], "Extrema finding": [[539, "extrema-finding"]], "Floating functions": [[548, "floating-functions"]], "Floating point routines": [[539, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Functional programming": [[11, null]], "Generating index arrays": [[535, "generating-index-arrays"]], "Handling complex numbers": [[539, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[547, "histograms"]], "Hyperbolic functions": [[539, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[541, "indexing-arrays"]], "Indexing routines": [[535, null]], "Indexing-like operations": [[535, "indexing-like-operations"]], "Infinities and NaNs": [[537, "infinities-and-nans"]], "Inserting data into arrays": [[535, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[541, "item-selection-and-manipulation"]], "Iterating over arrays": [[535, "iterating-over-arrays"]], "Joining arrays": [[538, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"]], "Linear algebra": [[536, null]], "Logic functions": [[537, null]], "Logic operations": [[537, "logic-operations"]], "Math operations": [[548, "math-operations"]], "Mathematical functions": [[539, null]], "Matrix and vector products": [[536, "matrix-and-vector-products"]], "Matrix eigenvalues": [[536, "matrix-eigenvalues"]], "Memory layout": [[541, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [539, "miscellaneous"]], "Miscellaneous routines": [[540, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[541, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[536, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[547, "order-statistics"]], "Other attributes": [[541, "other-attributes"]], "Other matrix operations": [[536, "other-matrix-operations"]], "Other special functions": [[539, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[543, "permutations"]], "Poly1d": [[542, "poly1d"]], "Polynomial Module": [[542, "polynomial-module"]], "Polynomial Package": [[542, "polynomial-package"]], "Polynomials": [[542, null]], "Polyutils": [[542, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random generator": [[543, "random-generator"]], "Random sampling (dpnp.random)": [[543, null]], "Rational routines": [[539, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[538, "rearranging-elements"]], "Rounding": [[539, "rounding"]], "Routines": [[544, null]], "Searching": [[545, "searching"]], "Shape manipulation": [[541, "shape-manipulation"]], "Simple random data": [[543, "simple-random-data"]], "Solving linear equations": [[536, "solving-linear-equations"]], "Sorting": [[545, "sorting"]], "Sorting, searching, and counting": [[545, null]], "Special Functions": [[546, null]], "Special methods": [[541, "special-methods"]], "Splitting arrays": [[538, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistics": [[547, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[539, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[538, "tiling-arrays"]], "Transpose-like operations": [[538, "transpose-like-operations"]], "Trigonometric functions": [[539, "trigonometric-functions"], [548, "trigonometric-functions"]], "Truth value testing": [[537, "truth-value-testing"]], "Universal Functions (ufunc)": [[548, null]], "Utility": [[540, "utility"]], "dpnp.abs": [[12, null]], "dpnp.absolute": [[13, null]], "dpnp.acos": [[14, null]], "dpnp.acosh": [[15, null]], "dpnp.add": [[16, null]], "dpnp.all": [[17, null]], "dpnp.allclose": [[18, null]], "dpnp.amax": [[19, null]], "dpnp.amin": [[20, null]], "dpnp.angle": [[21, null]], "dpnp.any": [[22, null]], "dpnp.append": [[23, null]], "dpnp.apply_along_axis": [[24, null]], "dpnp.arange": [[25, null]], "dpnp.arccos": [[26, null]], "dpnp.arccosh": [[27, null]], "dpnp.arcsin": [[28, null]], "dpnp.arcsinh": [[29, null]], "dpnp.arctan": [[30, null]], "dpnp.arctan2": [[31, null]], "dpnp.arctanh": [[32, null]], "dpnp.argmax": [[33, null]], "dpnp.argmin": [[34, null]], "dpnp.argsort": [[35, null]], "dpnp.argwhere": [[36, null]], "dpnp.around": [[37, null]], "dpnp.array": [[38, null]], "dpnp.array_equal": [[39, null]], "dpnp.array_equiv": [[40, null]], "dpnp.array_split": [[41, null]], "dpnp.asanyarray": [[42, null]], "dpnp.asarray": [[43, null]], "dpnp.asarray_chkfinite": [[44, null]], "dpnp.ascontiguousarray": [[45, null]], "dpnp.asfarray": [[46, null]], "dpnp.asfortranarray": [[47, null]], "dpnp.asin": [[48, null]], "dpnp.asinh": [[49, null]], "dpnp.asnumpy": [[50, null]], "dpnp.astype": [[51, null]], "dpnp.atan": [[52, null]], "dpnp.atan2": [[53, null]], "dpnp.atanh": [[54, null]], "dpnp.atleast_1d": [[55, null]], "dpnp.atleast_2d": [[56, null]], "dpnp.atleast_3d": [[57, null]], "dpnp.average": [[58, null]], "dpnp.binary_repr": [[59, null]], "dpnp.bincount": [[60, null]], "dpnp.bitwise_and": [[61, null]], "dpnp.bitwise_invert": [[62, null]], "dpnp.bitwise_left_shift": [[63, null]], "dpnp.bitwise_not": [[64, null]], "dpnp.bitwise_or": [[65, null]], "dpnp.bitwise_right_shift": [[66, null]], "dpnp.bitwise_xor": [[67, null]], "dpnp.broadcast_arrays": [[68, null]], "dpnp.broadcast_shapes": [[69, null]], "dpnp.broadcast_to": [[70, null]], "dpnp.byte_bounds": [[71, null]], "dpnp.can_cast": [[72, null]], "dpnp.cbrt": [[73, null]], "dpnp.ceil": [[74, null]], "dpnp.choose": [[75, null]], "dpnp.clip": [[76, null]], "dpnp.column_stack": [[77, null]], "dpnp.concat": [[78, null]], "dpnp.concatenate": [[79, null]], "dpnp.conj": [[80, null]], "dpnp.conjugate": [[81, null]], "dpnp.convolve": [[82, null]], "dpnp.copy": [[83, null]], "dpnp.copysign": [[84, null]], "dpnp.copyto": [[85, null]], "dpnp.corrcoef": [[86, null]], "dpnp.correlate": [[87, null]], "dpnp.cos": [[88, null]], "dpnp.cosh": [[89, null]], "dpnp.count_nonzero": [[90, null]], "dpnp.cov": [[91, null]], "dpnp.cross": [[92, null]], "dpnp.cumlogsumexp": [[93, null]], "dpnp.cumprod": [[94, null]], "dpnp.cumsum": [[95, null]], "dpnp.deg2rad": [[96, null]], "dpnp.degrees": [[97, null]], "dpnp.delete": [[98, null]], "dpnp.diag": [[99, null]], "dpnp.diag_indices": [[100, null]], "dpnp.diag_indices_from": [[101, null]], "dpnp.diagflat": [[102, null]], "dpnp.diagonal": [[103, null]], "dpnp.diff": [[104, null]], "dpnp.digitize": [[105, null]], "dpnp.divide": [[106, null]], "dpnp.dot": [[107, null]], "dpnp.dpnp_array.dpnp_array": [[108, null]], "dpnp.dsplit": [[109, null]], "dpnp.dstack": [[110, null]], "dpnp.dtype": [[111, null]], "dpnp.ediff1d": [[112, null]], "dpnp.einsum": [[113, null]], "dpnp.einsum_path": [[114, null]], "dpnp.empty": [[115, null]], "dpnp.empty_like": [[116, null]], "dpnp.equal": [[117, null]], "dpnp.erf": [[118, null]], "dpnp.exp": [[119, null]], "dpnp.exp2": [[120, null]], "dpnp.expand_dims": [[121, null]], "dpnp.expm1": [[122, null]], "dpnp.extract": [[123, null]], "dpnp.eye": [[124, null]], "dpnp.fabs": [[125, null]], "dpnp.fft.fft": [[126, null]], "dpnp.fft.fft2": [[127, null]], "dpnp.fft.fftfreq": [[128, null]], "dpnp.fft.fftn": [[129, null]], "dpnp.fft.fftshift": [[130, null]], "dpnp.fft.hfft": [[131, null]], "dpnp.fft.ifft": [[132, null]], "dpnp.fft.ifft2": [[133, null]], "dpnp.fft.ifftn": [[134, null]], "dpnp.fft.ifftshift": [[135, null]], "dpnp.fft.ihfft": [[136, null]], "dpnp.fft.irfft": [[137, null]], "dpnp.fft.irfft2": [[138, null]], "dpnp.fft.irfftn": [[139, null]], "dpnp.fft.rfft": [[140, null]], "dpnp.fft.rfft2": [[141, null]], "dpnp.fft.rfftfreq": [[142, null]], "dpnp.fft.rfftn": [[143, null]], "dpnp.fill_diagonal": [[144, null]], "dpnp.finfo": [[145, null]], "dpnp.fix": [[146, null]], "dpnp.flatiter": [[147, null]], "dpnp.flatnonzero": [[148, null]], "dpnp.flip": [[149, null]], "dpnp.fliplr": [[150, null]], "dpnp.flipud": [[151, null]], "dpnp.float_power": [[152, null]], "dpnp.floor": [[153, null]], "dpnp.floor_divide": [[154, null]], "dpnp.fmax": [[155, null]], "dpnp.fmin": [[156, null]], "dpnp.fmod": [[157, null]], "dpnp.from_dlpack": [[158, null]], "dpnp.frombuffer": [[159, null]], "dpnp.fromfile": [[160, null]], "dpnp.fromfunction": [[161, null]], "dpnp.fromiter": [[162, null]], "dpnp.fromstring": [[163, null]], "dpnp.full": [[164, null]], "dpnp.full_like": [[165, null]], "dpnp.gcd": [[166, null]], "dpnp.geomspace": [[167, null]], "dpnp.get_include": [[168, null]], "dpnp.gradient": [[169, null]], "dpnp.greater": [[170, null]], "dpnp.greater_equal": [[171, null]], "dpnp.heaviside": [[172, null]], "dpnp.histogram": [[173, null]], "dpnp.histogram_bin_edges": [[174, null]], "dpnp.hsplit": [[175, null]], "dpnp.hstack": [[176, null]], "dpnp.hypot": [[177, null]], "dpnp.identity": [[178, null]], "dpnp.iinfo": [[179, null]], "dpnp.imag": [[180, null]], "dpnp.indices": [[181, null]], "dpnp.inner": [[182, null]], "dpnp.insert": [[183, null]], "dpnp.invert": [[184, null]], "dpnp.isclose": [[185, null]], "dpnp.iscomplex": [[186, null]], "dpnp.iscomplexobj": [[187, null]], "dpnp.isfinite": [[188, null]], "dpnp.isfortran": [[189, null]], "dpnp.isinf": [[190, null]], "dpnp.isnan": [[191, null]], "dpnp.isneginf": [[192, null]], "dpnp.isposinf": [[193, null]], "dpnp.isreal": [[194, null]], "dpnp.isrealobj": [[195, null]], "dpnp.isscalar": [[196, null]], "dpnp.issubdtype": [[197, null]], "dpnp.ix_": [[198, null]], "dpnp.kron": [[199, null]], "dpnp.lcm": [[200, null]], "dpnp.ldexp": [[201, null]], "dpnp.left_shift": [[202, null]], "dpnp.less": [[203, null]], "dpnp.less_equal": [[204, null]], "dpnp.linalg.cholesky": [[205, null]], "dpnp.linalg.cond": [[206, null]], "dpnp.linalg.cross": [[207, null]], "dpnp.linalg.det": [[208, null]], "dpnp.linalg.diagonal": [[209, null]], "dpnp.linalg.eig": [[210, null]], "dpnp.linalg.eigh": [[211, null]], "dpnp.linalg.eigvals": [[212, null]], "dpnp.linalg.eigvalsh": [[213, null]], "dpnp.linalg.inv": [[214, null]], "dpnp.linalg.lstsq": [[215, null]], "dpnp.linalg.matmul": [[216, null]], "dpnp.linalg.matrix_norm": [[217, null]], "dpnp.linalg.matrix_power": [[218, null]], "dpnp.linalg.matrix_rank": [[219, null]], "dpnp.linalg.multi_dot": [[220, null]], "dpnp.linalg.norm": [[221, null]], "dpnp.linalg.outer": [[222, null]], "dpnp.linalg.pinv": [[223, null]], "dpnp.linalg.qr": [[224, null]], "dpnp.linalg.slogdet": [[225, null]], "dpnp.linalg.solve": [[226, null]], "dpnp.linalg.svd": [[227, null]], "dpnp.linalg.svdvals": [[228, null]], "dpnp.linalg.tensordot": [[229, null]], "dpnp.linalg.tensorinv": [[230, null]], "dpnp.linalg.tensorsolve": [[231, null]], "dpnp.linalg.trace": [[232, null]], "dpnp.linalg.vecdot": [[233, null]], "dpnp.linalg.vector_norm": [[234, null]], "dpnp.linspace": [[235, null]], "dpnp.loadtxt": [[236, null]], "dpnp.log": [[237, null]], "dpnp.log10": [[238, null]], "dpnp.log1p": [[239, null]], "dpnp.log2": [[240, null]], "dpnp.logaddexp": [[241, null]], "dpnp.logaddexp2": [[242, null]], "dpnp.logical_and": [[243, null]], "dpnp.logical_not": [[244, null]], "dpnp.logical_or": [[245, null]], "dpnp.logical_xor": [[246, null]], "dpnp.logspace": [[247, null]], "dpnp.logsumexp": [[248, null]], "dpnp.mask_indices": [[249, null]], "dpnp.matmul": [[250, null]], "dpnp.matrix_transpose": [[251, null]], "dpnp.max": [[252, null]], "dpnp.maximum": [[253, null]], "dpnp.mean": [[254, null]], "dpnp.median": [[255, null]], "dpnp.meshgrid": [[256, null]], "dpnp.mgrid": [[257, null]], "dpnp.min": [[258, null]], "dpnp.minimum": [[259, null]], "dpnp.mod": [[260, null]], "dpnp.modf": [[261, null]], "dpnp.moveaxis": [[262, null]], "dpnp.multiply": [[263, null]], "dpnp.nan_to_num": [[264, null]], "dpnp.nanargmax": [[265, null]], "dpnp.nanargmin": [[266, null]], "dpnp.nancumprod": [[267, null]], "dpnp.nancumsum": [[268, null]], "dpnp.nanmax": [[269, null]], "dpnp.nanmean": [[270, null]], "dpnp.nanmin": [[271, null]], "dpnp.nanprod": [[272, null]], "dpnp.nanstd": [[273, null]], "dpnp.nansum": [[274, null]], "dpnp.nanvar": [[275, null]], "dpnp.ndarray": [[276, null]], "dpnp.ndarray.T": [[277, null]], "dpnp.ndarray.__abs__": [[278, null]], "dpnp.ndarray.__add__": [[279, null]], "dpnp.ndarray.__and__": [[280, null]], "dpnp.ndarray.__bool__": [[281, null]], "dpnp.ndarray.__complex__": [[282, null]], "dpnp.ndarray.__copy__": [[283, null]], "dpnp.ndarray.__eq__": [[284, null]], "dpnp.ndarray.__float__": [[285, null]], "dpnp.ndarray.__floordiv__": [[286, null]], "dpnp.ndarray.__ge__": [[287, null]], "dpnp.ndarray.__getitem__": [[288, null]], "dpnp.ndarray.__gt__": [[289, null]], "dpnp.ndarray.__iadd__": [[290, null]], "dpnp.ndarray.__iand__": [[291, null]], "dpnp.ndarray.__ifloordiv__": [[292, null]], "dpnp.ndarray.__ilshift__": [[293, null]], "dpnp.ndarray.__imatmul__": [[294, null]], "dpnp.ndarray.__imod__": [[295, null]], "dpnp.ndarray.__imul__": [[296, null]], "dpnp.ndarray.__int__": [[297, null]], "dpnp.ndarray.__invert__": [[298, null]], "dpnp.ndarray.__ior__": [[299, null]], "dpnp.ndarray.__ipow__": [[300, null]], "dpnp.ndarray.__irshift__": [[301, null]], "dpnp.ndarray.__isub__": [[302, null]], "dpnp.ndarray.__itruediv__": [[303, null]], "dpnp.ndarray.__ixor__": [[304, null]], "dpnp.ndarray.__le__": [[305, null]], "dpnp.ndarray.__len__": [[306, null]], "dpnp.ndarray.__lshift__": [[307, null]], "dpnp.ndarray.__lt__": [[308, null]], "dpnp.ndarray.__matmul__": [[309, null]], "dpnp.ndarray.__mod__": [[310, null]], "dpnp.ndarray.__mul__": [[311, null]], "dpnp.ndarray.__ne__": [[312, null]], "dpnp.ndarray.__neg__": [[313, null]], "dpnp.ndarray.__new__": [[314, null]], "dpnp.ndarray.__or__": [[315, null]], "dpnp.ndarray.__pos__": [[316, null]], "dpnp.ndarray.__pow__": [[317, null]], "dpnp.ndarray.__radd__": [[318, null]], "dpnp.ndarray.__rand__": [[319, null]], "dpnp.ndarray.__repr__": [[320, null]], "dpnp.ndarray.__rfloordiv__": [[321, null]], "dpnp.ndarray.__rlshift__": [[322, null]], "dpnp.ndarray.__rmatmul__": [[323, null]], "dpnp.ndarray.__rmod__": [[324, null]], "dpnp.ndarray.__rmul__": [[325, null]], "dpnp.ndarray.__ror__": [[326, null]], "dpnp.ndarray.__rpow__": [[327, null]], "dpnp.ndarray.__rrshift__": [[328, null]], "dpnp.ndarray.__rshift__": [[329, null]], "dpnp.ndarray.__rsub__": [[330, null]], "dpnp.ndarray.__rtruediv__": [[331, null]], "dpnp.ndarray.__rxor__": [[332, null]], "dpnp.ndarray.__setitem__": [[333, null]], "dpnp.ndarray.__str__": [[334, null]], "dpnp.ndarray.__sub__": [[335, null]], "dpnp.ndarray.__truediv__": [[336, null]], "dpnp.ndarray.__xor__": [[337, null]], "dpnp.ndarray.all": [[338, null]], "dpnp.ndarray.any": [[339, null]], "dpnp.ndarray.argmax": [[340, null]], "dpnp.ndarray.argmin": [[341, null]], "dpnp.ndarray.argsort": [[342, null]], "dpnp.ndarray.astype": [[343, null]], "dpnp.ndarray.choose": [[344, null]], "dpnp.ndarray.clip": [[345, null]], "dpnp.ndarray.conj": [[346, null]], "dpnp.ndarray.conjugate": [[347, null]], "dpnp.ndarray.copy": [[348, null]], "dpnp.ndarray.cumprod": [[349, null]], "dpnp.ndarray.cumsum": [[350, null]], "dpnp.ndarray.diagonal": [[351, null]], "dpnp.ndarray.dtype": [[352, null]], "dpnp.ndarray.fill": [[353, null]], "dpnp.ndarray.flags": [[354, null]], "dpnp.ndarray.flat": [[355, null]], "dpnp.ndarray.flatten": [[356, null]], "dpnp.ndarray.imag": [[357, null]], "dpnp.ndarray.item": [[358, null]], "dpnp.ndarray.itemsize": [[359, null]], "dpnp.ndarray.mT": [[360, null]], "dpnp.ndarray.max": [[361, null]], "dpnp.ndarray.mean": [[362, null]], "dpnp.ndarray.min": [[363, null]], "dpnp.ndarray.nbytes": [[364, null]], "dpnp.ndarray.ndim": [[365, null]], "dpnp.ndarray.nonzero": [[366, null]], "dpnp.ndarray.partition": [[367, null]], "dpnp.ndarray.prod": [[368, null]], "dpnp.ndarray.put": [[369, null]], "dpnp.ndarray.ravel": [[370, null]], "dpnp.ndarray.real": [[371, null]], "dpnp.ndarray.repeat": [[372, null]], "dpnp.ndarray.reshape": [[373, null]], "dpnp.ndarray.round": [[374, null]], "dpnp.ndarray.searchsorted": [[375, null]], "dpnp.ndarray.shape": [[376, null]], "dpnp.ndarray.size": [[377, null]], "dpnp.ndarray.sort": [[378, null]], "dpnp.ndarray.squeeze": [[379, null]], "dpnp.ndarray.std": [[380, null]], "dpnp.ndarray.strides": [[381, null]], "dpnp.ndarray.sum": [[382, null]], "dpnp.ndarray.swapaxes": [[383, null]], "dpnp.ndarray.take": [[384, null]], "dpnp.ndarray.trace": [[385, null]], "dpnp.ndarray.transpose": [[386, null]], "dpnp.ndarray.var": [[387, null]], "dpnp.ndim": [[388, null]], "dpnp.negative": [[389, null]], "dpnp.nextafter": [[390, null]], "dpnp.nonzero": [[391, null]], "dpnp.not_equal": [[392, null]], "dpnp.ogrid": [[393, null]], "dpnp.ones": [[394, null]], "dpnp.ones_like": [[395, null]], "dpnp.outer": [[396, null]], "dpnp.pad": [[397, null]], "dpnp.partition": [[398, null]], "dpnp.permute_dims": [[399, null]], "dpnp.place": [[400, null]], "dpnp.positive": [[401, null]], "dpnp.pow": [[402, null]], "dpnp.power": [[403, null]], "dpnp.prod": [[404, null]], "dpnp.proj": [[405, null]], "dpnp.ptp": [[406, null]], "dpnp.put": [[407, null]], "dpnp.put_along_axis": [[408, null]], "dpnp.putmask": [[409, null]], "dpnp.rad2deg": [[410, null]], "dpnp.radians": [[411, null]], "dpnp.random.RandomState": [[412, null]], "dpnp.random.beta": [[413, null]], "dpnp.random.binomial": [[414, null]], "dpnp.random.bytes": [[415, null]], "dpnp.random.chisquare": [[416, null]], "dpnp.random.choice": [[417, null]], "dpnp.random.dirichlet": [[418, null]], "dpnp.random.exponential": [[419, null]], "dpnp.random.f": [[420, null]], "dpnp.random.gamma": [[421, null]], "dpnp.random.geometric": [[422, null]], "dpnp.random.gumbel": [[423, null]], "dpnp.random.hypergeometric": [[424, null]], "dpnp.random.laplace": [[425, null]], "dpnp.random.logistic": [[426, null]], "dpnp.random.lognormal": [[427, null]], "dpnp.random.logseries": [[428, null]], "dpnp.random.multinomial": [[429, null]], "dpnp.random.multivariate_normal": [[430, null]], "dpnp.random.negative_binomial": [[431, null]], "dpnp.random.noncentral_chisquare": [[432, null]], "dpnp.random.noncentral_f": [[433, null]], "dpnp.random.normal": [[434, null]], "dpnp.random.pareto": [[435, null]], "dpnp.random.permutation": [[436, null]], "dpnp.random.poisson": [[437, null]], "dpnp.random.power": [[438, null]], "dpnp.random.rand": [[439, null]], "dpnp.random.randint": [[440, null]], "dpnp.random.randn": [[441, null]], "dpnp.random.random": [[442, null]], "dpnp.random.random_integers": [[443, null]], "dpnp.random.random_sample": [[444, null]], "dpnp.random.ranf": [[445, null]], "dpnp.random.rayleigh": [[446, null]], "dpnp.random.sample": [[447, null]], "dpnp.random.seed": [[448, null]], "dpnp.random.shuffle": [[449, null]], "dpnp.random.standard_cauchy": [[450, null]], "dpnp.random.standard_exponential": [[451, null]], "dpnp.random.standard_gamma": [[452, null]], "dpnp.random.standard_normal": [[453, null]], "dpnp.random.standard_t": [[454, null]], "dpnp.random.triangular": [[455, null]], "dpnp.random.uniform": [[456, null]], "dpnp.random.vonmises": [[457, null]], "dpnp.random.wald": [[458, null]], "dpnp.random.weibull": [[459, null]], "dpnp.random.zipf": [[460, null]], "dpnp.ravel": [[461, null]], "dpnp.ravel_multi_index": [[462, null]], "dpnp.real": [[463, null]], "dpnp.real_if_close": [[464, null]], "dpnp.reciprocal": [[465, null]], "dpnp.reduce_hypot": [[466, null]], "dpnp.remainder": [[467, null]], "dpnp.repeat": [[468, null]], "dpnp.require": [[469, null]], "dpnp.reshape": [[470, null]], "dpnp.resize": [[471, null]], "dpnp.result_type": [[472, null]], "dpnp.right_shift": [[473, null]], "dpnp.rint": [[474, null]], "dpnp.roll": [[475, null]], "dpnp.rollaxis": [[476, null]], "dpnp.rot90": [[477, null]], "dpnp.round": [[478, null]], "dpnp.row_stack": [[479, null]], "dpnp.rsqrt": [[480, null]], "dpnp.searchsorted": [[481, null]], "dpnp.select": [[482, null]], "dpnp.shape": [[483, null]], "dpnp.sign": [[484, null]], "dpnp.signbit": [[485, null]], "dpnp.sin": [[486, null]], "dpnp.sinc": [[487, null]], "dpnp.sinh": [[488, null]], "dpnp.size": [[489, null]], "dpnp.sort": [[490, null]], "dpnp.sort_complex": [[491, null]], "dpnp.spacing": [[492, null]], "dpnp.split": [[493, null]], "dpnp.sqrt": [[494, null]], "dpnp.square": [[495, null]], "dpnp.squeeze": [[496, null]], "dpnp.stack": [[497, null]], "dpnp.std": [[498, null]], "dpnp.subtract": [[499, null]], "dpnp.sum": [[500, null]], "dpnp.swapaxes": [[501, null]], "dpnp.take": [[502, null]], "dpnp.take_along_axis": [[503, null]], "dpnp.tan": [[504, null]], "dpnp.tanh": [[505, null]], "dpnp.tensordot": [[506, null]], "dpnp.tile": [[507, null]], "dpnp.trace": [[508, null]], "dpnp.transpose": [[509, null]], "dpnp.trapezoid": [[510, null]], "dpnp.tri": [[511, null]], "dpnp.tril": [[512, null]], "dpnp.tril_indices": [[513, null]], "dpnp.tril_indices_from": [[514, null]], "dpnp.trim_zeros": [[515, null]], "dpnp.triu": [[516, null]], "dpnp.triu_indices": [[517, null]], "dpnp.triu_indices_from": [[518, null]], "dpnp.true_divide": [[519, null]], "dpnp.trunc": [[520, null]], "dpnp.unique": [[521, null]], "dpnp.unravel_index": [[522, null]], "dpnp.unstack": [[523, null]], "dpnp.unwrap": [[524, null]], "dpnp.vander": [[525, null]], "dpnp.var": [[526, null]], "dpnp.vdot": [[527, null]], "dpnp.vecdot": [[528, null]], "dpnp.vsplit": [[529, null]], "dpnp.vstack": [[530, null]], "dpnp.where": [[531, null]], "dpnp.zeros": [[532, null]], "dpnp.zeros_like": [[533, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[111, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[111, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[111, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[111, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[111, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[111, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[111, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[111, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[147, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[333, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[334, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[335, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[336, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[337, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[12, "dpnp.abs", false]], "absolute() (in module dpnp)": [[13, "dpnp.absolute", false]], "acos() (in module dpnp)": [[14, "dpnp.acos", false]], "acosh() (in module dpnp)": [[15, "dpnp.acosh", false]], "add() (in module dpnp)": [[16, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[111, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[338, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[17, "dpnp.all", false]], "allclose() (in module dpnp)": [[18, "dpnp.allclose", false]], "amax() (in module dpnp)": [[19, "dpnp.amax", false]], "amin() (in module dpnp)": [[20, "dpnp.amin", false]], "angle() (in module dpnp)": [[21, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[339, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[22, "dpnp.any", false]], "append() (in module dpnp)": [[23, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[24, "dpnp.apply_along_axis", false]], "arange() (in module dpnp)": [[25, "dpnp.arange", false]], "arccos() (in module dpnp)": [[26, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[27, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[28, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[29, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[30, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[31, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[32, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[340, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[33, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[341, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[34, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[342, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[35, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[36, "dpnp.argwhere", false]], "around() (in module dpnp)": [[37, "dpnp.around", false]], "array() (in module dpnp)": [[38, "dpnp.array", false]], "array_equal() (in module dpnp)": [[39, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[40, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[41, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[42, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[43, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[44, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[45, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[46, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[47, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[48, "dpnp.asin", false]], "asinh() (in module dpnp)": [[49, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[50, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[343, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[51, "dpnp.astype", false]], "atan() (in module dpnp)": [[52, "dpnp.atan", false]], "atan2() (in module dpnp)": [[53, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[54, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[55, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[56, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[57, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[58, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[111, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[413, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[59, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[60, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[414, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[61, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[62, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[63, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[64, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[65, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[66, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[67, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[68, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[69, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[70, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[71, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[111, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[415, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[72, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[73, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[74, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[111, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[416, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[417, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[205, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[344, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[75, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[345, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[76, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[77, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[78, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[79, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[206, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[346, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[80, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[347, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[81, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[82, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[348, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[83, "dpnp.copy", false]], "copysign() (in module dpnp)": [[84, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[85, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[86, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[87, "dpnp.correlate", false]], "cos() (in module dpnp)": [[88, "dpnp.cos", false]], "cosh() (in module dpnp)": [[89, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[90, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[91, "dpnp.cov", false]], "cross() (in module dpnp)": [[92, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[207, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[93, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[349, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[94, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[350, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[95, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[96, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[97, "dpnp.degrees", false]], "delete() (in module dpnp)": [[98, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[111, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[208, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[99, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[100, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[101, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[102, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[351, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[103, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[209, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[104, "dpnp.diff", false]], "digitize() (in module dpnp)": [[105, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[418, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[106, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[107, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[108, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[109, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[110, "dpnp.dstack", false]], "dtype (class in dpnp)": [[111, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[352, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[112, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[210, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[211, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[212, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[213, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[113, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[114, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[115, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[116, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[117, "dpnp.equal", false]], "erf() (in module dpnp)": [[118, "dpnp.erf", false]], "exp() (in module dpnp)": [[119, "dpnp.exp", false]], "exp2() (in module dpnp)": [[120, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[121, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[122, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[419, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[123, "dpnp.extract", false]], "eye() (in module dpnp)": [[124, "dpnp.eye", false]], "f() (in module dpnp.random)": [[420, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[125, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[126, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[127, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[128, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[129, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[130, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[111, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[353, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[144, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[145, "dpnp.finfo", false]], "fix() (in module dpnp)": [[146, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[111, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[354, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[355, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[147, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[148, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[356, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[149, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[150, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[151, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[152, "dpnp.float_power", false]], "floor() (in module dpnp)": [[153, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[154, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[155, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[156, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[157, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[158, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[159, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[160, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[161, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[162, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[163, "dpnp.fromstring", false]], "full() (in module dpnp)": [[164, "dpnp.full", false]], "full_like() (in module dpnp)": [[165, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[421, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[166, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[422, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[167, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[168, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[169, "dpnp.gradient", false]], "greater() (in module dpnp)": [[170, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[171, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[423, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[111, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[172, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[131, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[173, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[174, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[175, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[176, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[424, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[177, "dpnp.hypot", false]], "identity() (in module dpnp)": [[178, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[132, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[133, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[134, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[135, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[136, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[179, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[357, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[180, "dpnp.imag", false]], "indices() (in module dpnp)": [[181, "dpnp.indices", false]], "inner() (in module dpnp)": [[182, "dpnp.inner", false]], "insert() (in module dpnp)": [[183, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[214, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[184, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[137, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[138, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[139, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[111, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[111, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[185, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[186, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[187, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[188, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[189, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[190, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[191, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[111, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[192, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[193, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[194, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[195, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[196, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[197, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[358, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[111, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[359, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[198, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[111, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[199, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[425, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[200, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[201, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[202, "dpnp.left_shift", false]], "less() (in module dpnp)": [[203, "dpnp.less", false]], "less_equal() (in module dpnp)": [[204, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[235, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[236, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[237, "dpnp.log", false]], "log10() (in module dpnp)": [[238, "dpnp.log10", false]], "log1p() (in module dpnp)": [[239, "dpnp.log1p", false]], "log2() (in module dpnp)": [[240, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[241, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[242, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[243, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[244, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[245, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[246, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[426, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[427, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[428, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[247, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[248, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[215, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[249, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[250, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[216, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[217, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[218, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[219, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[251, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[361, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[252, "dpnp.max", false]], "maximum() (in module dpnp)": [[253, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[362, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[254, "dpnp.mean", false]], "median() (in module dpnp)": [[255, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[256, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[111, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[257, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[363, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[258, "dpnp.min", false]], "minimum() (in module dpnp)": [[259, "dpnp.minimum", false]], "mod() (in module dpnp)": [[260, "dpnp.mod", false]], "modf() (in module dpnp)": [[261, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[262, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[360, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[220, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[429, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[263, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[430, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[111, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[111, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[264, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[265, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[266, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[267, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[268, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[269, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[270, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[271, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[272, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[273, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[274, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[275, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[364, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[276, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[111, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[365, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[388, "dpnp.ndim", false]], "negative() (in module dpnp)": [[389, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[431, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[111, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[390, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[432, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[433, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[366, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[391, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[221, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[434, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[392, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[111, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[393, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[394, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[395, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[396, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[222, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[397, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[435, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[367, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[398, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[436, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[399, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[223, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[400, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[437, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[401, "dpnp.positive", false]], "pow() (in module dpnp)": [[402, "dpnp.pow", false]], "power() (in module dpnp)": [[403, "dpnp.power", false]], "power() (in module dpnp.random)": [[438, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[368, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[404, "dpnp.prod", false]], "proj() (in module dpnp)": [[405, "dpnp.proj", false]], "ptp() (in module dpnp)": [[406, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[369, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[407, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[408, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[409, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[224, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[410, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[411, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[439, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[440, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[441, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[442, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[443, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[444, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[412, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[445, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[370, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[461, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[462, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[446, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[371, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[463, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[464, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[465, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[466, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[467, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[372, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[468, "dpnp.repeat", false]], "require() (in module dpnp)": [[469, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[373, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[470, "dpnp.reshape", false]], "resize() (in module dpnp)": [[471, "dpnp.resize", false]], "result_type() (in module dpnp)": [[472, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[140, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[141, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[142, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[143, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[473, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[474, "dpnp.rint", false]], "roll() (in module dpnp)": [[475, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[476, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[477, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[374, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[478, "dpnp.round", false]], "row_stack() (in module dpnp)": [[479, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[480, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[447, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[375, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[481, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[448, "dpnp.random.seed", false]], "select() (in module dpnp)": [[482, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[111, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[376, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[483, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[449, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[484, "dpnp.sign", false]], "signbit() (in module dpnp)": [[485, "dpnp.signbit", false]], "sin() (in module dpnp)": [[486, "dpnp.sin", false]], "sinc() (in module dpnp)": [[487, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[488, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[377, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[489, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[225, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[226, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[378, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[490, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[491, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[492, "dpnp.spacing", false]], "split() (in module dpnp)": [[493, "dpnp.split", false]], "sqrt() (in module dpnp)": [[494, "dpnp.sqrt", false]], "square() (in module dpnp)": [[495, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[379, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[496, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[497, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[450, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[451, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[452, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[453, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[454, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[380, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[498, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[111, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[381, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[111, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[499, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[382, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[500, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[227, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[228, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[383, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[501, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[277, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[384, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[502, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[503, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[504, "dpnp.tan", false]], "tanh() (in module dpnp)": [[505, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[506, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[229, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[230, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[231, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[507, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[385, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[508, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[232, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[386, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[509, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[510, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[511, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[455, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[512, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[513, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[514, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[515, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[516, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[517, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[518, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[519, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[520, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[111, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[412, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[456, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[521, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[522, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[523, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[524, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[108, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[525, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[108, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[387, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[526, "dpnp.var", false]], "vdot() (in module dpnp)": [[527, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[528, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[233, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[234, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[457, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[529, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[530, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[458, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[459, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[531, "dpnp.where", false]], "zeros() (in module dpnp)": [[532, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[533, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[460, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[12, 1, 1, "", "abs"], [13, 1, 1, "", "absolute"], [14, 1, 1, "", "acos"], [15, 1, 1, "", "acosh"], [16, 1, 1, "", "add"], [17, 1, 1, "", "all"], [18, 1, 1, "", "allclose"], [19, 1, 1, "", "amax"], [20, 1, 1, "", "amin"], [21, 1, 1, "", "angle"], [22, 1, 1, "", "any"], [23, 1, 1, "", "append"], [24, 1, 1, "", "apply_along_axis"], [25, 1, 1, "", "arange"], [26, 1, 1, "", "arccos"], [27, 1, 1, "", "arccosh"], [28, 1, 1, "", "arcsin"], [29, 1, 1, "", "arcsinh"], [30, 1, 1, "", "arctan"], [31, 1, 1, "", "arctan2"], [32, 1, 1, "", "arctanh"], [33, 1, 1, "", "argmax"], [34, 1, 1, "", "argmin"], [35, 1, 1, "", "argsort"], [36, 1, 1, "", "argwhere"], [37, 1, 1, "", "around"], [38, 1, 1, "", "array"], [39, 1, 1, "", "array_equal"], [40, 1, 1, "", "array_equiv"], [41, 1, 1, "", "array_split"], [42, 1, 1, "", "asanyarray"], [43, 1, 1, "", "asarray"], [44, 1, 1, "", "asarray_chkfinite"], [45, 1, 1, "", "ascontiguousarray"], [46, 1, 1, "", "asfarray"], [47, 1, 1, "", "asfortranarray"], [48, 1, 1, "", "asin"], [49, 1, 1, "", "asinh"], [50, 1, 1, "", "asnumpy"], [51, 1, 1, "", "astype"], [52, 1, 1, "", "atan"], [53, 1, 1, "", "atan2"], [54, 1, 1, "", "atanh"], [55, 1, 1, "", "atleast_1d"], [56, 1, 1, "", "atleast_2d"], [57, 1, 1, "", "atleast_3d"], [58, 1, 1, "", "average"], [59, 1, 1, "", "binary_repr"], [60, 1, 1, "", "bincount"], [61, 1, 1, "", "bitwise_and"], [62, 1, 1, "", "bitwise_invert"], [63, 1, 1, "", "bitwise_left_shift"], [64, 1, 1, "", "bitwise_not"], [65, 1, 1, "", "bitwise_or"], [66, 1, 1, "", "bitwise_right_shift"], [67, 1, 1, "", "bitwise_xor"], [68, 1, 1, "", "broadcast_arrays"], [69, 1, 1, "", "broadcast_shapes"], [70, 1, 1, "", "broadcast_to"], [71, 1, 1, "", "byte_bounds"], [72, 1, 1, "", "can_cast"], [73, 1, 1, "", "cbrt"], [74, 1, 1, "", "ceil"], [75, 1, 1, "", "choose"], [76, 1, 1, "", "clip"], [77, 1, 1, "", "column_stack"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "concatenate"], [80, 1, 1, "", "conj"], [81, 1, 1, "", "conjugate"], [82, 1, 1, "", "convolve"], [83, 1, 1, "", "copy"], [84, 1, 1, "", "copysign"], [85, 1, 1, "", "copyto"], [86, 1, 1, "", "corrcoef"], [87, 1, 1, "", "correlate"], [88, 1, 1, "", "cos"], [89, 1, 1, "", "cosh"], [90, 1, 1, "", "count_nonzero"], [91, 1, 1, "", "cov"], [92, 1, 1, "", "cross"], [93, 1, 1, "", "cumlogsumexp"], [94, 1, 1, "", "cumprod"], [95, 1, 1, "", "cumsum"], [96, 1, 1, "", "deg2rad"], [97, 1, 1, "", "degrees"], [98, 1, 1, "", "delete"], [99, 1, 1, "", "diag"], [100, 1, 1, "", "diag_indices"], [101, 1, 1, "", "diag_indices_from"], [102, 1, 1, "", "diagflat"], [103, 1, 1, "", "diagonal"], [104, 1, 1, "", "diff"], [105, 1, 1, "", "digitize"], [106, 1, 1, "", "divide"], [107, 1, 1, "", "dot"], [109, 1, 1, "", "dsplit"], [110, 1, 1, "", "dstack"], [111, 2, 1, "", "dtype"], [112, 1, 1, "", "ediff1d"], [113, 1, 1, "", "einsum"], [114, 1, 1, "", "einsum_path"], [115, 1, 1, "", "empty"], [116, 1, 1, "", "empty_like"], [117, 1, 1, "", "equal"], [118, 1, 1, "", "erf"], [119, 1, 1, "", "exp"], [120, 1, 1, "", "exp2"], [121, 1, 1, "", "expand_dims"], [122, 1, 1, "", "expm1"], [123, 1, 1, "", "extract"], [124, 1, 1, "", "eye"], [125, 1, 1, "", "fabs"], [144, 1, 1, "", "fill_diagonal"], [145, 1, 1, "", "finfo"], [146, 1, 1, "", "fix"], [147, 2, 1, "", "flatiter"], [148, 1, 1, "", "flatnonzero"], [149, 1, 1, "", "flip"], [150, 1, 1, "", "fliplr"], [151, 1, 1, "", "flipud"], [152, 1, 1, "", "float_power"], [153, 1, 1, "", "floor"], [154, 1, 1, "", "floor_divide"], [155, 1, 1, "", "fmax"], [156, 1, 1, "", "fmin"], [157, 1, 1, "", "fmod"], [158, 1, 1, "", "from_dlpack"], [159, 1, 1, "", "frombuffer"], [160, 1, 1, "", "fromfile"], [161, 1, 1, "", "fromfunction"], [162, 1, 1, "", "fromiter"], [163, 1, 1, "", "fromstring"], [164, 1, 1, "", "full"], [165, 1, 1, "", "full_like"], [166, 1, 1, "", "gcd"], [167, 1, 1, "", "geomspace"], [168, 1, 1, "", "get_include"], [169, 1, 1, "", "gradient"], [170, 1, 1, "", "greater"], [171, 1, 1, "", "greater_equal"], [172, 1, 1, "", "heaviside"], [173, 1, 1, "", "histogram"], [174, 1, 1, "", "histogram_bin_edges"], [175, 1, 1, "", "hsplit"], [176, 1, 1, "", "hstack"], [177, 1, 1, "", "hypot"], [178, 1, 1, "", "identity"], [179, 1, 1, "", "iinfo"], [180, 1, 1, "", "imag"], [181, 1, 1, "", "indices"], [182, 1, 1, "", "inner"], [183, 1, 1, "", "insert"], [184, 1, 1, "", "invert"], [185, 1, 1, "", "isclose"], [186, 1, 1, "", "iscomplex"], [187, 1, 1, "", "iscomplexobj"], [188, 1, 1, "", "isfinite"], [189, 1, 1, "", "isfortran"], [190, 1, 1, "", "isinf"], [191, 1, 1, "", "isnan"], [192, 1, 1, "", "isneginf"], [193, 1, 1, "", "isposinf"], [194, 1, 1, "", "isreal"], [195, 1, 1, "", "isrealobj"], [196, 1, 1, "", "isscalar"], [197, 1, 1, "", "issubdtype"], [198, 1, 1, "", "ix_"], [199, 1, 1, "", "kron"], [200, 1, 1, "", "lcm"], [201, 1, 1, "", "ldexp"], [202, 1, 1, "", "left_shift"], [203, 1, 1, "", "less"], [204, 1, 1, "", "less_equal"], [235, 1, 1, "", "linspace"], [236, 1, 1, "", "loadtxt"], [237, 1, 1, "", "log"], [238, 1, 1, "", "log10"], [239, 1, 1, "", "log1p"], [240, 1, 1, "", "log2"], [241, 1, 1, "", "logaddexp"], [242, 1, 1, "", "logaddexp2"], [243, 1, 1, "", "logical_and"], [244, 1, 1, "", "logical_not"], [245, 1, 1, "", "logical_or"], [246, 1, 1, "", "logical_xor"], [247, 1, 1, "", "logspace"], [248, 1, 1, "", "logsumexp"], [249, 1, 1, "", "mask_indices"], [250, 1, 1, "", "matmul"], [251, 1, 1, "", "matrix_transpose"], [252, 1, 1, "", "max"], [253, 1, 1, "", "maximum"], [254, 1, 1, "", "mean"], [255, 1, 1, "", "median"], [256, 1, 1, "", "meshgrid"], [257, 5, 1, "", "mgrid"], [258, 1, 1, "", "min"], [259, 1, 1, "", "minimum"], [260, 1, 1, "", "mod"], [261, 1, 1, "", "modf"], [262, 1, 1, "", "moveaxis"], [263, 1, 1, "", "multiply"], [264, 1, 1, "", "nan_to_num"], [265, 1, 1, "", "nanargmax"], [266, 1, 1, "", "nanargmin"], [267, 1, 1, "", "nancumprod"], [268, 1, 1, "", "nancumsum"], [269, 1, 1, "", "nanmax"], [270, 1, 1, "", "nanmean"], [271, 1, 1, "", "nanmin"], [272, 1, 1, "", "nanprod"], [273, 1, 1, "", "nanstd"], [274, 1, 1, "", "nansum"], [275, 1, 1, "", "nanvar"], [276, 3, 1, "", "ndarray"], [388, 1, 1, "", "ndim"], [389, 1, 1, "", "negative"], [390, 1, 1, "", "nextafter"], [391, 1, 1, "", "nonzero"], [392, 1, 1, "", "not_equal"], [393, 5, 1, "", "ogrid"], [394, 1, 1, "", "ones"], [395, 1, 1, "", "ones_like"], [396, 1, 1, "", "outer"], [397, 1, 1, "", "pad"], [398, 1, 1, "", "partition"], [399, 1, 1, "", "permute_dims"], [400, 1, 1, "", "place"], [401, 1, 1, "", "positive"], [402, 1, 1, "", "pow"], [403, 1, 1, "", "power"], [404, 1, 1, "", "prod"], [405, 1, 1, "", "proj"], [406, 1, 1, "", "ptp"], [407, 1, 1, "", "put"], [408, 1, 1, "", "put_along_axis"], [409, 1, 1, "", "putmask"], [410, 1, 1, "", "rad2deg"], [411, 1, 1, "", "radians"], [461, 1, 1, "", "ravel"], [462, 1, 1, "", "ravel_multi_index"], [463, 1, 1, "", "real"], [464, 1, 1, "", "real_if_close"], [465, 1, 1, "", "reciprocal"], [466, 1, 1, "", "reduce_hypot"], [467, 1, 1, "", "remainder"], [468, 1, 1, "", "repeat"], [469, 1, 1, "", "require"], [470, 1, 1, "", "reshape"], [471, 1, 1, "", "resize"], [472, 1, 1, "", "result_type"], [473, 1, 1, "", "right_shift"], [474, 1, 1, "", "rint"], [475, 1, 1, "", "roll"], [476, 1, 1, "", "rollaxis"], [477, 1, 1, "", "rot90"], [478, 1, 1, "", "round"], [479, 1, 1, "", "row_stack"], [480, 1, 1, "", "rsqrt"], [481, 1, 1, "", "searchsorted"], [482, 1, 1, "", "select"], [483, 1, 1, "", "shape"], [484, 1, 1, "", "sign"], [485, 1, 1, "", "signbit"], [486, 1, 1, "", "sin"], [487, 1, 1, "", "sinc"], [488, 1, 1, "", "sinh"], [489, 1, 1, "", "size"], [490, 1, 1, "", "sort"], [491, 1, 1, "", "sort_complex"], [492, 1, 1, "", "spacing"], [493, 1, 1, "", "split"], [494, 1, 1, "", "sqrt"], [495, 1, 1, "", "square"], [496, 1, 1, "", "squeeze"], [497, 1, 1, "", "stack"], [498, 1, 1, "", "std"], [499, 1, 1, "", "subtract"], [500, 1, 1, "", "sum"], [501, 1, 1, "", "swapaxes"], [502, 1, 1, "", "take"], [503, 1, 1, "", "take_along_axis"], [504, 1, 1, "", "tan"], [505, 1, 1, "", "tanh"], [506, 1, 1, "", "tensordot"], [507, 1, 1, "", "tile"], [508, 1, 1, "", "trace"], [509, 1, 1, "", "transpose"], [510, 1, 1, "", "trapezoid"], [511, 1, 1, "", "tri"], [512, 1, 1, "", "tril"], [513, 1, 1, "", "tril_indices"], [514, 1, 1, "", "tril_indices_from"], [515, 1, 1, "", "trim_zeros"], [516, 1, 1, "", "triu"], [517, 1, 1, "", "triu_indices"], [518, 1, 1, "", "triu_indices_from"], [519, 1, 1, "", "true_divide"], [520, 1, 1, "", "trunc"], [521, 1, 1, "", "unique"], [522, 1, 1, "", "unravel_index"], [523, 1, 1, "", "unstack"], [524, 1, 1, "", "unwrap"], [525, 1, 1, "", "vander"], [526, 1, 1, "", "var"], [527, 1, 1, "", "vdot"], [528, 1, 1, "", "vecdot"], [529, 1, 1, "", "vsplit"], [530, 1, 1, "", "vstack"], [531, 1, 1, "", "where"], [532, 1, 1, "", "zeros"], [533, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[108, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[108, 3, 1, "", "T"], [108, 4, 1, "", "__eq__"], [108, 4, 1, "", "__ge__"], [108, 4, 1, "", "__getitem__"], [108, 4, 1, "", "__gt__"], [108, 4, 1, "", "__le__"], [108, 4, 1, "", "__len__"], [108, 4, 1, "", "__lt__"], [108, 4, 1, "", "__ne__"], [108, 4, 1, "", "__setitem__"], [108, 4, 1, "", "all"], [108, 4, 1, "", "any"], [108, 4, 1, "", "argmax"], [108, 4, 1, "", "argmin"], [108, 4, 1, "", "argsort"], [108, 4, 1, "", "asnumpy"], [108, 4, 1, "", "astype"], [108, 4, 1, "", "choose"], [108, 4, 1, "", "clip"], [108, 4, 1, "", "conj"], [108, 4, 1, "", "conjugate"], [108, 4, 1, "", "copy"], [108, 4, 1, "", "cumprod"], [108, 4, 1, "", "cumsum"], [108, 3, 1, "", "device"], [108, 4, 1, "", "diagonal"], [108, 4, 1, "", "dot"], [108, 3, 1, "", "dtype"], [108, 4, 1, "", "fill"], [108, 3, 1, "", "flags"], [108, 3, 1, "", "flat"], [108, 4, 1, "", "flatten"], [108, 4, 1, "", "get_array"], [108, 3, 1, "", "imag"], [108, 4, 1, "", "item"], [108, 3, 1, "", "itemsize"], [108, 3, 1, "", "mT"], [108, 4, 1, "", "max"], [108, 4, 1, "", "mean"], [108, 4, 1, "", "min"], [108, 3, 1, "", "nbytes"], [108, 3, 1, "", "ndim"], [108, 4, 1, "", "nonzero"], [108, 4, 1, "", "partition"], [108, 4, 1, "", "prod"], [108, 4, 1, "", "put"], [108, 4, 1, "", "ravel"], [108, 3, 1, "", "real"], [108, 4, 1, "", "repeat"], [108, 4, 1, "", "reshape"], [108, 4, 1, "", "round"], [108, 4, 1, "", "searchsorted"], [108, 3, 1, "", "shape"], [108, 3, 1, "", "size"], [108, 4, 1, "", "sort"], [108, 4, 1, "", "squeeze"], [108, 4, 1, "", "std"], [108, 3, 1, "", "strides"], [108, 4, 1, "", "sum"], [108, 4, 1, "", "swapaxes"], [108, 3, 1, "", "sycl_context"], [108, 3, 1, "", "sycl_device"], [108, 3, 1, "", "sycl_queue"], [108, 4, 1, "", "take"], [108, 4, 1, "", "to_device"], [108, 4, 1, "", "trace"], [108, 4, 1, "", "transpose"], [108, 3, 1, "", "usm_type"], [108, 4, 1, "", "var"]], "dpnp.dtype": [[111, 4, 1, "", "__eq__"], [111, 4, 1, "", "__ge__"], [111, 4, 1, "", "__getitem__"], [111, 4, 1, "", "__gt__"], [111, 4, 1, "", "__le__"], [111, 4, 1, "", "__len__"], [111, 4, 1, "", "__lt__"], [111, 4, 1, "", "__ne__"], [111, 3, 1, "", "alignment"], [111, 3, 1, "", "base"], [111, 3, 1, "", "byteorder"], [111, 3, 1, "", "char"], [111, 3, 1, "", "descr"], [111, 3, 1, "", "fields"], [111, 3, 1, "", "flags"], [111, 3, 1, "", "hasobject"], [111, 3, 1, "", "isalignedstruct"], [111, 3, 1, "", "isbuiltin"], [111, 3, 1, "", "isnative"], [111, 3, 1, "", "itemsize"], [111, 3, 1, "", "kind"], [111, 3, 1, "", "metadata"], [111, 3, 1, "", "name"], [111, 3, 1, "", "names"], [111, 3, 1, "", "ndim"], [111, 4, 1, "", "newbyteorder"], [111, 3, 1, "", "num"], [111, 3, 1, "", "shape"], [111, 3, 1, "", "str"], [111, 3, 1, "", "subdtype"], [111, 3, 1, "", "type"]], "dpnp.fft": [[126, 1, 1, "", "fft"], [127, 1, 1, "", "fft2"], [128, 1, 1, "", "fftfreq"], [129, 1, 1, "", "fftn"], [130, 1, 1, "", "fftshift"], [131, 1, 1, "", "hfft"], [132, 1, 1, "", "ifft"], [133, 1, 1, "", "ifft2"], [134, 1, 1, "", "ifftn"], [135, 1, 1, "", "ifftshift"], [136, 1, 1, "", "ihfft"], [137, 1, 1, "", "irfft"], [138, 1, 1, "", "irfft2"], [139, 1, 1, "", "irfftn"], [140, 1, 1, "", "rfft"], [141, 1, 1, "", "rfft2"], [142, 1, 1, "", "rfftfreq"], [143, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[147, 4, 1, "", "__eq__"], [147, 4, 1, "", "__ge__"], [147, 4, 1, "", "__getitem__"], [147, 4, 1, "", "__gt__"], [147, 4, 1, "", "__iter__"], [147, 4, 1, "", "__le__"], [147, 4, 1, "", "__lt__"], [147, 4, 1, "", "__ne__"], [147, 4, 1, "", "__next__"], [147, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[205, 1, 1, "", "cholesky"], [206, 1, 1, "", "cond"], [207, 1, 1, "", "cross"], [208, 1, 1, "", "det"], [209, 1, 1, "", "diagonal"], [210, 1, 1, "", "eig"], [211, 1, 1, "", "eigh"], [212, 1, 1, "", "eigvals"], [213, 1, 1, "", "eigvalsh"], [214, 1, 1, "", "inv"], [215, 1, 1, "", "lstsq"], [216, 1, 1, "", "matmul"], [217, 1, 1, "", "matrix_norm"], [218, 1, 1, "", "matrix_power"], [219, 1, 1, "", "matrix_rank"], [220, 1, 1, "", "multi_dot"], [221, 1, 1, "", "norm"], [222, 1, 1, "", "outer"], [223, 1, 1, "", "pinv"], [224, 1, 1, "", "qr"], [225, 1, 1, "", "slogdet"], [226, 1, 1, "", "solve"], [227, 1, 1, "", "svd"], [228, 1, 1, "", "svdvals"], [229, 1, 1, "", "tensordot"], [230, 1, 1, "", "tensorinv"], [231, 1, 1, "", "tensorsolve"], [232, 1, 1, "", "trace"], [233, 1, 1, "", "vecdot"], [234, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[277, 6, 1, "", "T"], [278, 4, 1, "", "__abs__"], [279, 4, 1, "", "__add__"], [280, 4, 1, "", "__and__"], [281, 4, 1, "", "__bool__"], [282, 4, 1, "", "__complex__"], [283, 4, 1, "", "__copy__"], [284, 4, 1, "", "__eq__"], [285, 4, 1, "", "__float__"], [286, 4, 1, "", "__floordiv__"], [287, 4, 1, "", "__ge__"], [288, 4, 1, "", "__getitem__"], [289, 4, 1, "", "__gt__"], [290, 4, 1, "", "__iadd__"], [291, 4, 1, "", "__iand__"], [292, 4, 1, "", "__ifloordiv__"], [293, 4, 1, "", "__ilshift__"], [294, 4, 1, "", "__imatmul__"], [295, 4, 1, "", "__imod__"], [296, 4, 1, "", "__imul__"], [297, 4, 1, "", "__int__"], [298, 4, 1, "", "__invert__"], [299, 4, 1, "", "__ior__"], [300, 4, 1, "", "__ipow__"], [301, 4, 1, "", "__irshift__"], [302, 4, 1, "", "__isub__"], [303, 4, 1, "", "__itruediv__"], [304, 4, 1, "", "__ixor__"], [305, 4, 1, "", "__le__"], [306, 4, 1, "", "__len__"], [307, 4, 1, "", "__lshift__"], [308, 4, 1, "", "__lt__"], [309, 4, 1, "", "__matmul__"], [310, 4, 1, "", "__mod__"], [311, 4, 1, "", "__mul__"], [312, 4, 1, "", "__ne__"], [313, 4, 1, "", "__neg__"], [314, 4, 1, "", "__new__"], [315, 4, 1, "", "__or__"], [316, 4, 1, "", "__pos__"], [317, 4, 1, "", "__pow__"], [318, 4, 1, "", "__radd__"], [319, 4, 1, "", "__rand__"], [320, 4, 1, "", "__repr__"], [321, 4, 1, "", "__rfloordiv__"], [322, 4, 1, "", "__rlshift__"], [323, 4, 1, "", "__rmatmul__"], [324, 4, 1, "", "__rmod__"], [325, 4, 1, "", "__rmul__"], [326, 4, 1, "", "__ror__"], [327, 4, 1, "", "__rpow__"], [328, 4, 1, "", "__rrshift__"], [329, 4, 1, "", "__rshift__"], [330, 4, 1, "", "__rsub__"], [331, 4, 1, "", "__rtruediv__"], [332, 4, 1, "", "__rxor__"], [333, 4, 1, "", "__setitem__"], [334, 4, 1, "", "__str__"], [335, 4, 1, "", "__sub__"], [336, 4, 1, "", "__truediv__"], [337, 4, 1, "", "__xor__"], [338, 4, 1, "", "all"], [339, 4, 1, "", "any"], [340, 4, 1, "", "argmax"], [341, 4, 1, "", "argmin"], [342, 4, 1, "", "argsort"], [343, 4, 1, "", "astype"], [344, 4, 1, "", "choose"], [345, 4, 1, "", "clip"], [346, 4, 1, "", "conj"], [347, 4, 1, "", "conjugate"], [348, 4, 1, "", "copy"], [349, 4, 1, "", "cumprod"], [350, 4, 1, "", "cumsum"], [351, 4, 1, "", "diagonal"], [352, 6, 1, "", "dtype"], [353, 4, 1, "", "fill"], [354, 6, 1, "", "flags"], [355, 6, 1, "", "flat"], [356, 4, 1, "", "flatten"], [357, 6, 1, "", "imag"], [358, 4, 1, "", "item"], [359, 6, 1, "", "itemsize"], [360, 6, 1, "", "mT"], [361, 4, 1, "", "max"], [362, 4, 1, "", "mean"], [363, 4, 1, "", "min"], [364, 6, 1, "", "nbytes"], [365, 6, 1, "", "ndim"], [366, 4, 1, "", "nonzero"], [367, 4, 1, "", "partition"], [368, 4, 1, "", "prod"], [369, 4, 1, "", "put"], [370, 4, 1, "", "ravel"], [371, 6, 1, "", "real"], [372, 4, 1, "", "repeat"], [373, 4, 1, "", "reshape"], [374, 4, 1, "", "round"], [375, 4, 1, "", "searchsorted"], [376, 6, 1, "", "shape"], [377, 6, 1, "", "size"], [378, 4, 1, "", "sort"], [379, 4, 1, "", "squeeze"], [380, 4, 1, "", "std"], [381, 6, 1, "", "strides"], [382, 4, 1, "", "sum"], [383, 4, 1, "", "swapaxes"], [384, 4, 1, "", "take"], [385, 4, 1, "", "trace"], [386, 4, 1, "", "transpose"], [387, 4, 1, "", "var"]], "dpnp.random": [[412, 2, 1, "", "RandomState"], [413, 1, 1, "", "beta"], [414, 1, 1, "", "binomial"], [415, 1, 1, "", "bytes"], [416, 1, 1, "", "chisquare"], [417, 1, 1, "", "choice"], [418, 1, 1, "", "dirichlet"], [419, 1, 1, "", "exponential"], [420, 1, 1, "", "f"], [421, 1, 1, "", "gamma"], [422, 1, 1, "", "geometric"], [423, 1, 1, "", "gumbel"], [424, 1, 1, "", "hypergeometric"], [425, 1, 1, "", "laplace"], [426, 1, 1, "", "logistic"], [427, 1, 1, "", "lognormal"], [428, 1, 1, "", "logseries"], [429, 1, 1, "", "multinomial"], [430, 1, 1, "", "multivariate_normal"], [431, 1, 1, "", "negative_binomial"], [432, 1, 1, "", "noncentral_chisquare"], [433, 1, 1, "", "noncentral_f"], [434, 1, 1, "", "normal"], [435, 1, 1, "", "pareto"], [436, 1, 1, "", "permutation"], [437, 1, 1, "", "poisson"], [438, 1, 1, "", "power"], [439, 1, 1, "", "rand"], [440, 1, 1, "", "randint"], [441, 1, 1, "", "randn"], [442, 1, 1, "", "random"], [443, 1, 1, "", "random_integers"], [444, 1, 1, "", "random_sample"], [445, 1, 1, "", "ranf"], [446, 1, 1, "", "rayleigh"], [447, 1, 1, "", "sample"], [448, 1, 1, "", "seed"], [449, 1, 1, "", "shuffle"], [450, 1, 1, "", "standard_cauchy"], [451, 1, 1, "", "standard_exponential"], [452, 1, 1, "", "standard_gamma"], [453, 1, 1, "", "standard_normal"], [454, 1, 1, "", "standard_t"], [455, 1, 1, "", "triangular"], [456, 1, 1, "", "uniform"], [457, 1, 1, "", "vonmises"], [458, 1, 1, "", "wald"], [459, 1, 1, "", "weibull"], [460, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[412, 4, 1, "", "__eq__"], [412, 4, 1, "", "__ge__"], [412, 4, 1, "", "__gt__"], [412, 4, 1, "", "__le__"], [412, 4, 1, "", "__lt__"], [412, 4, 1, "", "__ne__"], [412, 4, 1, "", "get_state"], [412, 4, 1, "", "get_sycl_device"], [412, 4, 1, "", "get_sycl_queue"], [412, 4, 1, "", "normal"], [412, 4, 1, "", "rand"], [412, 4, 1, "", "randint"], [412, 4, 1, "", "randn"], [412, 4, 1, "", "random_sample"], [412, 4, 1, "", "standard_normal"], [412, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 23, 59, 92, 95, 108, 111, 112, 127, 129, 131, 133, 134, 136, 138, 139, 141, 143, 144, 159, 160, 215, 219, 221, 223, 227, 228, 229, 352, 386, 412, 413, 414, 419, 420, 421, 423, 424, 425, 426, 427, 429, 431, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 470, 506, 507, 541], "0": [0, 4, 6, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 63, 66, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 167, 169, 172, 173, 174, 175, 178, 181, 182, 183, 185, 188, 190, 191, 192, 193, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 348, 351, 353, 357, 358, 360, 371, 374, 376, 378, 380, 385, 386, 387, 388, 391, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 419, 421, 422, 423, 425, 426, 427, 429, 430, 431, 434, 436, 437, 438, 439, 442, 444, 445, 446, 447, 450, 453, 455, 456, 457, 462, 465, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 531, 532, 533, 541], "00": [88, 114, 126, 486], "000": [264, 414], "00000000005e": 122, "000000001": 61, "00000000e": [126, 264], "000000082740371e": 122, "000000e": [88, 486], "00001101": [61, 62, 64, 65, 67, 184], "00001e10": [18, 185], "00010000": 65, "00010001": [61, 67], "00011100": 67, "00011101": 65, "0001e10": 185, "000e": 114, "000j": 264, "0011": 59, "002": 264, "00225109": 86, "00867716": 416, "01": [86, 114], "02": [86, 114, 264], "03": 264, "03047091": 86, "03088525e": 115, "0342579": 86, "0396842": 247, "04": 114, "04719755": 411, "04921661": 412, "04923628": 487, "05": [18, 114, 185], "05846808": 487, "0614962j": [127, 141], "06310682": 412, "06682066": 487, "07": 264, "07012729": 86, "0728188e": 86, "07944154": [93, 225], "08": [18, 88, 114, 152, 185, 430, 486], "08156915": 412, "08409186": 487, "08504448": 487, "08903844": 487, "09373496": 86, "0943951": 411, "09640474": 242, "09861229": [93, 225, 239], "0d": 36, "0dev1": 6, "0j": [21, 107, 108, 186, 187, 194, 195, 216, 250, 357, 371, 484], "0th": [229, 506], "1": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 189, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 342, 343, 348, 351, 353, 356, 357, 358, 360, 365, 367, 371, 376, 378, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 416, 417, 419, 421, 423, 425, 426, 427, 429, 430, 431, 434, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 451, 453, 456, 461, 462, 463, 464, 465, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541], "10": [0, 4, 15, 16, 27, 29, 33, 34, 49, 58, 63, 66, 76, 83, 93, 94, 95, 98, 100, 101, 104, 105, 108, 109, 111, 113, 114, 122, 123, 130, 142, 164, 167, 173, 174, 175, 180, 185, 198, 199, 201, 202, 232, 233, 237, 238, 239, 240, 247, 248, 255, 263, 373, 397, 406, 408, 412, 414, 424, 436, 466, 472, 473, 475, 478, 481, 493, 497, 503, 512, 513, 514, 516, 517, 518, 523, 528, 529, 531], "100": [100, 142, 167, 185, 199, 220, 247, 397, 424, 450, 464, 524], "1000": [72, 167, 220, 247, 413, 414, 419, 421, 423, 424, 425, 426, 427, 434, 435, 438, 440, 442, 445, 447, 453, 457, 458, 459, 460, 464, 510], "10000": [95, 220, 422, 437, 446, 456], "100000": 431, "1000000": [450, 452, 454, 455], "101": [59, 63, 66, 202, 473], "1010": [66, 473], "10100": [63, 202], "1024": 0, "10394325": 487, "104": 6, "105": 114, "11": [33, 34, 58, 59, 89, 98, 100, 101, 108, 109, 123, 169, 175, 221, 232, 373, 431, 440, 478, 481, 488, 512, 513, 514, 516, 517, 518, 523, 529, 531], "110": [113, 182], "1100": 61, "11100": 67, "11101": [59, 65], "11110010": [62, 64, 184], "111111": 264, "113": 241, "11570901": 412, "11643488": 487, "1179187": 412, "118033988749895": 498, "119": 113, "1196081": 412, "12": [10, 33, 34, 57, 61, 92, 97, 98, 100, 101, 105, 109, 111, 113, 123, 127, 141, 166, 175, 180, 200, 228, 247, 404, 406, 411, 436, 462, 481, 512, 513, 514, 516, 517, 518, 523, 529, 531], "120": [94, 97], "123": [86, 108, 114, 358], "125": [152, 402, 403, 525], "12613779": 487, "127": 167, "128": [0, 167, 264], "12th": 113, "13": [10, 33, 34, 61, 62, 64, 65, 67, 100, 101, 107, 109, 111, 113, 175, 183, 184, 216, 250, 462, 481, 513, 514, 517, 518, 522, 523, 529], "130": 113, "134": 182, "13436424": 412, "135": [31, 53], "13710533": 416, "139884456208480": 17, "13j": 464, "14": [33, 34, 61, 62, 64, 100, 101, 107, 109, 146, 175, 182, 184, 229, 481, 506, 513, 514, 517, 518, 523, 529], "140": 524, "140053638309840": 22, "14157194": 510, "14159265": [14, 26, 31, 53, 96, 411], "1424356": 86, "14243561": 86, "14423775e": 126, "14j": 464, "15": [33, 34, 95, 100, 101, 105, 109, 113, 131, 136, 175, 221, 238, 436, 481, 513, 514, 517, 518, 523, 529], "150": 97, "15591488": 487, "15716429": 86, "15888336": 247, "15j": 464, "16": [6, 61, 65, 100, 101, 109, 111, 126, 152, 162, 167, 169, 175, 234, 263, 402, 403, 464, 482, 504, 513, 514, 517, 518, 523, 529], "1621": [462, 522], "16227766": [206, 466], "16394577": 412, "164": 242, "1643624": 86, "166": 242, "16j": 126, "17": [6, 61, 67, 86, 126, 127, 141, 523], "17157288": [211, 213], "17281316e": 126, "17615308": 86, "177": [167, 247], "17j": 126, "18": [6, 94, 111, 112, 113, 129, 207, 217, 221, 247, 523], "180": [31, 53, 96, 97, 113, 410, 524, 548], "1805": 10, "18236388": 412, "18557831": 412, "1887902": 411, "18920668": 487, "19": [10, 90, 111, 462, 523, 524], "19083664": 86, "19083665": 86, "1923875335537315": 441, "19245009": 480, "1924881e": 152, "1965": 10, "19722458": 93, "1985": 221, "1d": [24, 112, 407, 408, 503, 510], "1e": [18, 122, 185, 210, 238, 239, 241, 242, 430], "1e10": [18, 185], "1j": [12, 13, 21, 29, 30, 39, 49, 52, 80, 81, 108, 137, 180, 186, 194, 210, 222, 227, 357, 371, 396, 463, 491, 495], "1th": [229, 506], "2": [0, 3, 4, 10, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 186, 189, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 343, 348, 351, 353, 356, 358, 360, 365, 367, 376, 377, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 416, 420, 424, 430, 436, 439, 441, 452, 454, 455, 458, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 488, 489, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533], "20": [63, 94, 105, 113, 142, 166, 181, 185, 199, 200, 201, 202, 221, 408, 414, 429, 481, 503, 523, 524], "20000": 414, "2007": 10, "200e": 114, "20477401j": [127, 141], "2048": 0, "2066992e": 86, "21": [95, 111, 523], "210": 97, "2123185": 86, "215": 247, "21623621": 487, "21941987": 412, "21968665": 412, "22": [407, 462, 522, 523], "220": 524, "220446049250313e": 464, "222222": 264, "22460635e": 504, "22464680e": 126, "22497216": 221, "22776602": 247, "23": [60, 412, 462, 523], "230": 113, "23387232": 487, "23598776": 411, "23606798": 221, "24": [33, 34, 92, 94, 108, 112, 113, 182, 199, 207, 229, 230, 232, 376, 404, 506, 508, 523], "240": 97, "24264069": 221, "24544512": 412, "247219128924647": 273, "25": [111, 113, 118, 128, 169, 173, 174, 214, 235, 263, 275, 441, 450, 482, 525, 526], "255": [61, 65], "25506903": 412, "256": [0, 167], "26": [67, 113], "260": 524, "26618007j": 240, "27": [73, 152, 247, 402, 403, 480, 525], "270": 97, "28": [67, 113], "28000000e": 264, "2800000e": 264, "283185307179586": 524, "28318531": 524, "28352814": 412, "2858386e": 86, "28904982": 242, "29": 65, "297": [6, 10], "2d": [227, 250, 477, 521], "2e": 95, "2f": 0, "2j": [80, 81, 107, 126, 180, 186, 194, 211, 213, 216, 250, 463, 484, 491, 527], "2k": 524, "3": [0, 3, 4, 6, 14, 16, 23, 24, 25, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 128, 129, 130, 131, 135, 136, 138, 139, 142, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 164, 167, 169, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 189, 194, 195, 196, 198, 199, 202, 206, 207, 208, 209, 210, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 348, 351, 356, 358, 360, 365, 367, 376, 377, 378, 386, 388, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 407, 411, 412, 416, 420, 427, 430, 436, 439, 440, 441, 451, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 485, 489, 490, 491, 493, 494, 496, 497, 498, 499, 501, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "30": [92, 97, 108, 113, 142, 377, 408, 411, 503, 527], "300": [97, 524], "3003003": 465, "301": 10, "30102999566": 238, "3012989": 488, "30258509": [93, 248], "308": 264, "308j": 264, "31": [6, 67, 167, 462, 522], "312": 115, "316": 247, "32": [111, 113, 167, 229, 272, 274, 506], "33": 465, "330": [6, 97], "333": 220, "33333333": 264, "3333333e": 264, "33340275": 510, "33486982e": 126, "33836967": 412, "340": 524, "34074171": 412, "34132519": 247, "34846923": [217, 221], "34960421": 247, "35": [113, 422], "35106603e": [217, 221], "35348576": 234, "35355338": 480, "36": 92, "360": 524, "37": [462, 478, 522], "371139e": 88, "38": [182, 414], "380": 524, "38268343": 211, "38268343j": 211, "38629436": 93, "38885": 414, "389": 6, "389056099": [119, 122], "39295758": 412, "39783284": 86, "3e": [0, 95, 464], "3j": [107, 216, 250, 491], "3rd": [78, 79, 109, 493], "3x3": 249, "3x8000": 451, "4": [0, 16, 17, 23, 24, 25, 33, 34, 36, 38, 39, 41, 55, 57, 58, 59, 61, 65, 68, 76, 77, 78, 79, 82, 85, 86, 88, 90, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 120, 123, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 148, 149, 152, 154, 155, 156, 160, 161, 162, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 183, 186, 189, 194, 198, 199, 201, 204, 207, 208, 209, 214, 216, 217, 218, 219, 221, 225, 228, 229, 230, 231, 232, 234, 235, 240, 243, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 265, 266, 268, 270, 273, 275, 348, 351, 356, 360, 365, 367, 376, 378, 386, 388, 391, 393, 395, 397, 399, 402, 403, 404, 406, 407, 411, 412, 413, 416, 436, 441, 457, 461, 462, 463, 464, 467, 468, 470, 471, 475, 476, 477, 478, 479, 482, 484, 487, 489, 490, 493, 494, 497, 498, 499, 501, 502, 506, 507, 509, 510, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 533], "40": [6, 63, 113, 142, 201, 202, 408, 503], "40882036": 412, "4096": 0, "41": [462, 487, 522], "41421356": [206, 221], "42": 482, "420": 524, "434": 6, "44": [400, 407], "4400": [113, 229, 506], "443469": 247, "44509285e": 126, "45": [21, 31, 53, 234], "45206687": 86, "4532": [113, 229, 506], "46": 113, "460": [6, 524], "46394577": 412, "464": 247, "46436927": 86, "4643693": 86, "4664": [113, 229, 506], "47": 6, "4730": [113, 229, 506], "4796": [113, 229, 506], "48": [6, 92], "48093112": 412, "48613152": 86, "48613155": 86, "4874": [113, 229, 506], "48927254": 412, "49": 6, "4928": [113, 229, 506], "49543509": 412, "49778714": 524, "499128": 107, "4d": 227, "4e": 464, "4j": [180, 463, 527], "4x4": [513, 517], "5": [0, 16, 17, 22, 23, 24, 25, 32, 33, 36, 41, 54, 55, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 74, 76, 78, 79, 82, 85, 86, 87, 90, 92, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 118, 123, 127, 128, 130, 138, 141, 142, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 166, 167, 169, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 186, 189, 194, 198, 199, 201, 202, 205, 207, 209, 211, 213, 214, 220, 221, 222, 226, 229, 232, 233, 234, 235, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 270, 273, 343, 348, 358, 360, 377, 388, 391, 393, 394, 395, 396, 397, 399, 402, 403, 406, 407, 411, 412, 413, 414, 416, 419, 431, 435, 436, 437, 438, 441, 444, 459, 461, 462, 463, 464, 465, 467, 470, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 489, 491, 493, 497, 498, 500, 501, 502, 506, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533], "50": [127, 141, 142, 167, 199, 229, 241, 242, 247, 408, 503, 506, 510, 531], "500": [199, 524], "5018": [113, 229, 506], "50455115": 487, "5091786": 89, "512": 0, "5147297e": 86, "5162": [113, 229, 506], "52069395e": 126, "52359878": 411, "52928804": 412, "53": 6, "5306": [113, 229, 506], "53702235": 86, "5399045e": 152, "54": [6, 412], "540": 524, "54288406": 412, "54465213": 412, "545": 6, "548739": 488, "54930614": [32, 54], "55": [400, 407, 482], "5555555555555554": 275, "562": 247, "5620499351813308": [12, 13], "56920387": 412, "5707963267948966": [28, 48], "57079633": [21, 31, 53, 411, 524], "5790461": 86, "57904613": 86, "58997253": 412, "591953": 89, "5e": [241, 242], "5j": [257, 393, 491], "6": [0, 4, 16, 23, 24, 25, 33, 34, 36, 41, 55, 58, 60, 65, 67, 69, 76, 78, 79, 85, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 117, 122, 123, 128, 131, 142, 149, 152, 165, 166, 169, 175, 176, 180, 181, 182, 183, 189, 198, 199, 200, 207, 209, 217, 221, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 247, 249, 251, 255, 267, 268, 272, 348, 358, 360, 376, 388, 391, 395, 397, 400, 402, 403, 406, 412, 429, 431, 436, 441, 461, 462, 463, 469, 470, 475, 476, 477, 478, 479, 482, 489, 491, 493, 497, 499, 500, 501, 502, 506, 508, 510, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 527, 528, 529, 530, 531, 533], "60": [92, 97, 113, 200, 229, 408, 503, 506, 524, 531], "600": 199, "60943791": 93, "6173796": 86, "61799388": 411, "62": 182, "6227766": 167, "62318272": 416, "62341325": 167, "624": 114, "63": 167, "63317787e": 504, "63522211": 412, "63836967": 412, "64": [0, 4, 113, 152, 167, 272, 274, 402, 403, 478], "64000": 113, "65157276": 86, "6515728": 86, "65354985": 86, "65745445": [15, 27], "6580445": 86, "66519143": 411, "6666666666666665": 270, "67": 113, "67305985": 159, "673174": 412, "67718303": 412, "6883078": 86, "69295758": 412, "69314718": [93, 225, 239], "6990877": 412, "6j": [180, 463, 527], "7": [16, 18, 23, 24, 25, 41, 55, 60, 69, 74, 76, 85, 86, 90, 92, 95, 98, 99, 100, 101, 103, 104, 106, 108, 109, 112, 119, 123, 149, 153, 167, 169, 175, 182, 183, 185, 198, 199, 209, 217, 221, 227, 229, 232, 234, 249, 251, 255, 260, 263, 358, 360, 391, 397, 405, 406, 412, 436, 462, 463, 467, 472, 474, 475, 477, 493, 499, 500, 501, 502, 506, 512, 513, 514, 516, 517, 518, 519, 520, 522, 523, 524, 527, 529, 531], "70": [199, 527, 531], "700": 199, "700e": 114, "70710677": [108, 357, 371], "70710678": [206, 210], "70710678j": 210, "70882036": 412, "7110255": 86, "71102554": 86, "71238898": 411, "718281828": [119, 122], "72": 92, "720": [94, 524], "72075441": 247, "72450536": 86, "72538256": [29, 49], "74165739": 221, "742278e": 486, "74596669": [217, 221], "7485727": 86, "74857277": 86, "74921661": 412, "75": [58, 118, 128, 169, 174, 214, 235], "754": 145, "75682673": 487, "75958653": 411, "76096244": 412, "76377462": 412, "77447665": 242, "78539816": [21, 30, 31, 52, 53, 524], "78927254": 412, "79175947": 93, "7937219": 86, "79727215": 86, "7972722": 86, "79769313e": 264, "7j": 405, "8": [4, 16, 18, 23, 24, 41, 55, 62, 64, 73, 76, 85, 92, 98, 99, 100, 101, 103, 104, 108, 109, 111, 113, 114, 123, 126, 128, 142, 143, 149, 152, 167, 169, 175, 180, 183, 184, 185, 198, 208, 209, 221, 225, 227, 228, 229, 230, 232, 233, 234, 235, 247, 249, 251, 360, 376, 391, 397, 402, 403, 404, 406, 412, 436, 455, 462, 463, 475, 477, 480, 486, 493, 502, 506, 508, 510, 512, 513, 514, 516, 517, 518, 522, 523, 524, 525, 528, 529, 531], "80": [111, 113, 531], "8000": 451, "8012391e": 86, "80226506": 412, "8058837395885292": 234, "8104691": 86, "81715362": 412, "827941": [167, 247], "82842712": [211, 213], "8399546e": 86, "84086883": 86, "84288406": 412, "84401099": 412, "84743374": 412, "84803548": 221, "85": 113, "86": 182, "87649168": 241, "88": 112, "88178420e": 126, "881943016134134": 234, "88194302": 234, "88997253": 412, "8900264": 86, "89002645": 86, "89920014": 416, "8f": 111, "8j": 527, "9": [4, 16, 23, 24, 41, 55, 76, 85, 86, 92, 95, 98, 99, 100, 101, 103, 106, 108, 109, 113, 115, 123, 126, 129, 130, 135, 146, 152, 154, 162, 167, 169, 175, 185, 198, 209, 210, 215, 217, 221, 223, 224, 227, 228, 229, 232, 234, 247, 249, 263, 264, 358, 391, 406, 412, 414, 416, 436, 462, 463, 475, 493, 494, 499, 506, 512, 513, 514, 516, 517, 518, 519, 522, 523, 524, 525, 529, 531], "90": [21, 97, 410, 477, 531], "9011005": 86, "917152": 505, "92387953": 211, "92387953j": 211, "9305482": 86, "93548928": 487, "9377134e": 86, "9387854e": 86, "9393724": 86, "9393725": 86, "94": 113, "94591015": 93, "95": 215, "9520904e": 86, "95799250e": 126, "968541": 86, "9685411": 86, "9724453": 86, "98": [216, 250], "98024613": 247, "9875833": 86, "99": [112, 239, 408], "9909503": 86, "99095035": 86, "99322285": [15, 27], "994938": 86, "9949381": 86, "9951523": 86, "99532227": 118, "996272": 505, "99822295": [29, 49], "99853728": 118, "999": [114, 183], "9990000e": 264, "99959305": 118, "99989938": 118, "9999": 264, "99997791": 118, "9999999": 86, "99999994": 86, "999999e": 185, "A": [10, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 132, 133, 134, 138, 139, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 175, 177, 178, 180, 181, 183, 184, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 205, 209, 211, 212, 213, 215, 219, 220, 221, 224, 225, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 255, 257, 259, 260, 263, 267, 268, 272, 274, 343, 348, 356, 358, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 405, 410, 411, 412, 414, 431, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 461, 462, 463, 465, 467, 470, 473, 474, 477, 480, 484, 485, 486, 487, 488, 492, 493, 494, 495, 499, 501, 502, 504, 505, 506, 507, 509, 511, 513, 515, 517, 519, 520, 525, 528, 529, 531, 532, 533, 548], "AND": [17, 61, 62, 64, 65, 67, 184, 243, 244, 245, 246], "And": [4, 50, 51, 100, 108, 343, 513, 517], "As": 521, "Be": 210, "Being": 3, "But": [4, 111], "By": [33, 34, 44, 51, 92, 108, 127, 131, 133, 137, 139, 143, 167, 215, 235, 247, 250, 252, 254, 258, 265, 266, 269, 270, 271, 272, 273, 274, 275, 343, 468, 475, 489, 498, 502, 511, 513, 515, 517, 526, 528], "For": [0, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 353, 356, 357, 358, 365, 371, 373, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541, 548], "If": [4, 10, 12, 13, 17, 18, 22, 23, 25, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 58, 59, 71, 76, 78, 79, 86, 90, 92, 93, 94, 95, 98, 99, 103, 104, 107, 108, 109, 111, 112, 113, 114, 121, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 155, 156, 158, 163, 167, 169, 173, 174, 175, 176, 180, 181, 182, 183, 185, 189, 192, 193, 194, 205, 207, 215, 217, 218, 219, 220, 221, 223, 224, 227, 229, 231, 232, 234, 235, 236, 247, 248, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 360, 378, 399, 400, 404, 407, 408, 412, 434, 456, 463, 464, 466, 468, 469, 470, 471, 475, 478, 479, 481, 490, 493, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 521, 524, 525, 526, 527, 528, 529, 530, 531, 541, 548], "In": [4, 10, 33, 34, 59, 86, 92, 94, 95, 113, 114, 132, 133, 134, 137, 139, 169, 205, 212, 220, 224, 242, 247, 267, 268, 270, 272, 274, 404, 407, 412, 456, 461, 462, 470, 471, 500, 502, 520], "It": [4, 10, 17, 22, 23, 24, 33, 34, 76, 94, 95, 105, 107, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 169, 183, 211, 213, 242, 250, 254, 255, 265, 266, 267, 268, 269, 270, 271, 273, 275, 397, 404, 470, 471, 482, 492, 498, 500, 502, 526, 548], "Its": [76, 230, 408, 508], "NOT": [62, 64, 184, 243, 244, 245, 246], "No": [43, 44, 113, 205], "Not": [17, 22, 44, 188, 264, 267, 268, 269, 271, 272, 274, 404], "OR": [22, 61, 62, 64, 65, 67, 184, 243, 244, 245, 246], "On": 4, "One": [55, 56, 57, 92, 110, 111, 137, 222, 397, 470], "Ones": 38, "Or": [169, 510], "That": 249, "The": [3, 4, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 184, 185, 187, 188, 189, 190, 191, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 252, 253, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 343, 348, 357, 360, 365, 367, 371, 376, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 415, 417, 418, 428, 433, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 528, 530, 531, 532, 533, 541, 544, 548], "Then": [10, 45, 47, 249], "There": [10, 235, 521], "These": [4, 23, 111, 113, 114, 121, 249, 262, 408, 503, 513, 517, 541, 544], "To": [4, 131, 137, 139, 152, 391, 524], "With": [33, 34, 58, 90, 175, 217, 221, 234, 252, 258, 265, 266, 272, 274, 404, 500, 529], "_": [0, 174, 497, 510], "__array_interface__": 111, "__bool__": 541, "__dlpack__": 158, "__dlpack_device__": 158, "__eq__": [108, 111, 147, 412], "__ge__": [108, 111, 147, 412], "__getitem__": [108, 111, 147], "__gt__": [108, 111, 147, 412], "__iter__": 147, "__le__": [108, 111, 147, 412], "__len__": [108, 111], "__lt__": [108, 111, 147, 412], "__main__": 0, "__name__": 0, "__ne__": [108, 111, 147, 412], "__next__": 147, "__setitem__": [108, 147], "__sycl_usm_array_interface__": 46, "_core": 111, "_dtypes_list": 0, "_f": 221, "a1": [39, 40], "a2": [39, 40], "a_": [10, 221], "a_ax": [229, 506], "a_i": [233, 528], "a_k": 10, "a_m": 10, "a_resamp": 137, "ab": [6, 10, 13, 18, 185, 221], "abc": 113, "abcd": 114, "abl": 221, "about": [45, 47, 108, 145, 210, 354, 397, 469, 541], "abov": [3, 14, 15, 26, 27, 28, 29, 32, 48, 49, 54, 93, 99, 102, 129, 134, 139, 143, 181, 209, 224, 232, 248, 264, 466, 511, 512, 516], "absolut": [6, 12, 18, 21, 59, 125, 166, 185, 200, 225, 273, 275, 405, 464, 498, 524, 526, 548], "accept": [24, 113, 222, 412, 513, 517], "access": [10, 100, 101, 144, 249, 513, 517, 541], "accord": [17, 22, 58, 66, 72, 111, 143, 145, 210, 211, 212, 213, 248, 254, 255, 270, 273, 275, 397, 466, 473, 498, 526], "accordingli": [92, 269, 271], "account": [461, 470], "accumul": [93, 94, 95, 113, 173, 232, 267, 268, 272, 274, 404, 500, 508], "accur": [111, 122, 169, 239, 241], "accuraci": [132, 133, 134, 137, 139], "achiev": 113, "aco": [6, 26], "acosh": [6, 27], "across": [103, 174, 267, 268, 272, 274], "activ": 4, "actual": [111, 173, 174, 205, 220], "ad": [18, 59, 111, 114, 121, 137, 185, 208, 225, 242, 524, 544], "add": [6, 86, 111, 548], "addit": [24, 86, 93, 205, 270, 521], "address": 111, "adjac": [209, 232, 492, 524], "advanc": 113, "advers": 113, "advis": 4, "affect": [25, 103, 113, 144, 173, 174], "after": [110, 144, 390, 397, 431, 475], "after_1": 397, "after_n": 397, "ag": 111, "against": [18, 33, 34, 68, 69, 70, 76, 90, 168, 185, 217, 221, 223, 234, 252, 258, 265, 266, 272, 274, 404, 408, 500, 503], "ai": [3, 408, 503], "ai_max": 503, "ai_min": 503, "ainv": [214, 230], "al": 10, "algebra": [534, 544], "algorithm": [10, 35, 113, 114, 126, 132, 140, 490], "alia": [10, 14, 15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 62, 63, 64, 66, 78, 79, 106, 116, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 165, 184, 202, 260, 276, 395, 399, 402, 403, 412, 442, 445, 447, 461, 467, 470, 473, 479, 509, 519, 524, 530, 533], "alias": [9, 131, 132, 137, 139, 487], "align": 111, "all": [4, 6, 9, 18, 21, 22, 23, 39, 40, 44, 51, 58, 77, 86, 90, 97, 104, 108, 110, 111, 113, 114, 119, 120, 122, 124, 129, 130, 134, 135, 138, 139, 143, 144, 149, 150, 151, 159, 160, 162, 167, 169, 176, 178, 180, 198, 205, 207, 219, 223, 234, 235, 247, 252, 255, 258, 265, 266, 269, 271, 343, 346, 353, 367, 397, 404, 414, 463, 464, 475, 479, 482, 496, 500, 521, 523, 528, 530, 541, 548], "allclos": [6, 39, 185, 214, 223, 224, 226, 227, 231], "alloc": [3, 4, 23, 25, 38, 42, 43, 44, 45, 46, 47, 51, 58, 83, 93, 99, 100, 102, 108, 115, 116, 124, 128, 142, 146, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 192, 193, 235, 236, 247, 248, 249, 254, 255, 257, 270, 273, 275, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 466, 496, 498, 511, 513, 517, 525, 526, 528, 532, 533], "allow": [41, 51, 98, 108, 113, 173, 174, 189, 242, 249, 255, 343, 373, 502, 541], "almost": [36, 210, 513], "along": [3, 4, 17, 19, 20, 22, 23, 24, 33, 34, 35, 41, 58, 77, 78, 79, 90, 93, 94, 95, 98, 99, 100, 102, 103, 104, 108, 109, 110, 112, 123, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 149, 150, 151, 155, 156, 161, 167, 169, 175, 176, 181, 183, 221, 224, 229, 230, 231, 232, 233, 234, 235, 247, 248, 252, 253, 254, 255, 256, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 340, 341, 342, 349, 350, 361, 363, 368, 369, 377, 380, 382, 384, 385, 387, 397, 400, 404, 406, 407, 408, 461, 466, 468, 475, 476, 477, 479, 482, 489, 490, 493, 497, 498, 500, 502, 503, 506, 507, 508, 510, 513, 514, 517, 518, 521, 523, 524, 526, 528, 529, 530, 541], "alpha": [413, 418, 419, 435, 438], "alreadi": [4, 10, 43, 44, 55, 56, 57, 396, 397, 521], "also": [3, 4, 10, 14, 15, 16, 18, 21, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 63, 65, 66, 67, 84, 86, 106, 108, 111, 113, 117, 121, 129, 134, 138, 139, 140, 143, 152, 154, 155, 156, 157, 161, 163, 166, 169, 170, 171, 172, 173, 177, 185, 189, 200, 202, 203, 204, 205, 241, 242, 249, 253, 259, 260, 262, 263, 376, 391, 392, 402, 403, 450, 467, 473, 487, 499, 502, 519, 521, 541], "alter": 103, "altern": [3, 4, 17, 22, 94, 95, 107, 108, 250, 252, 254, 255, 258, 267, 268, 270, 272, 273, 274, 275, 386, 404, 498, 500, 526], "although": [21, 111, 133, 134, 135, 507], "alwai": [4, 10, 14, 15, 26, 27, 28, 29, 30, 32, 35, 42, 48, 49, 51, 52, 54, 103, 108, 109, 112, 125, 152, 158, 175, 211, 213, 273, 275, 343, 391, 470, 491, 498, 526, 529], "amax": [6, 60, 252], "ambigu": 541, "amin": [6, 258], "among": 112, "amplitud": 10, "an": [0, 3, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 207, 208, 209, 212, 215, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 283, 342, 343, 344, 345, 348, 358, 361, 365, 367, 369, 372, 373, 376, 377, 378, 379, 383, 384, 386, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 419, 420, 422, 431, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 541, 548], "anaconda": 3, "analog": [127, 129, 131, 133, 134, 136], "analysi": 10, "analyt": [3, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "angl": [6, 10, 14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 96, 97, 180, 410, 411, 463, 464, 524, 548], "ani": [3, 6, 17, 18, 23, 24, 38, 42, 43, 44, 45, 46, 47, 51, 68, 69, 70, 83, 99, 102, 104, 108, 111, 113, 114, 127, 129, 133, 134, 139, 143, 144, 164, 165, 167, 169, 174, 176, 187, 195, 196, 218, 231, 235, 247, 249, 269, 271, 343, 365, 397, 412, 456, 469, 487, 492, 525, 541], "anoth": [4, 85, 86, 108, 123, 133, 134, 158, 348, 369, 400, 407, 476], "answer": 414, "anti": [103, 144, 209, 487], "anyth": 111, "ap": 215, "apart": 510, "api": [0, 2, 3, 6, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 92, 99, 100, 102, 103, 108, 111, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 207, 209, 216, 217, 222, 223, 232, 233, 234, 235, 236, 247, 249, 250, 257, 343, 348, 393, 394, 395, 396, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 508, 511, 513, 517, 525, 527, 528, 532, 533], "appear": [121, 150, 151, 521], "append": [0, 6, 63, 98, 104, 112, 114, 121, 132, 133, 134, 183, 202, 209], "appli": [24, 33, 34, 35, 58, 72, 98, 113, 229, 264, 462, 471, 472, 490, 506, 510], "applic": [10, 111, 487], "apply_along_axi": [6, 544], "apply_over_ax": [6, 24], "approach": [108, 111, 132, 133, 134, 376], "appropri": [4, 33, 34, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 168, 231, 265, 266, 269, 271, 412, 440, 443, 471, 502, 541], "approxim": [145, 510], "ar": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 166, 167, 169, 170, 171, 172, 173, 174, 177, 182, 184, 185, 188, 189, 190, 191, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 366, 367, 376, 388, 389, 390, 391, 392, 397, 398, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 437, 438, 440, 443, 444, 446, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 471, 473, 474, 475, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 510, 514, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 541, 548], "arang": [0, 6, 16, 33, 34, 36, 41, 55, 56, 57, 58, 60, 76, 84, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 113, 117, 119, 120, 122, 123, 126, 148, 149, 152, 157, 165, 166, 167, 169, 173, 175, 181, 182, 183, 198, 199, 200, 201, 209, 216, 217, 221, 229, 232, 234, 235, 238, 239, 243, 244, 245, 246, 247, 249, 250, 252, 256, 258, 260, 263, 351, 360, 392, 395, 397, 400, 402, 403, 407, 411, 436, 467, 469, 470, 472, 475, 477, 482, 493, 499, 506, 508, 510, 513, 514, 517, 518, 519, 523, 529, 531, 533], "arbitrari": [50, 107, 111, 113, 182, 250, 472, 513, 517], "arbitrarili": 113, "arc": [21, 28, 30, 48, 52], "arcco": [6, 14, 15, 27, 28, 30, 31, 48, 52, 53, 88], "arccosh": [6, 14, 15, 26, 29, 32, 49, 54, 89], "arcsin": [6, 14, 26, 29, 30, 31, 48, 49, 52, 53, 486], "arcsinh": [6, 15, 27, 28, 32, 48, 49, 54, 488], "arctan": [6, 14, 21, 26, 28, 31, 32, 48, 52, 53, 54, 504], "arctan2": [6, 21, 28, 30, 48, 52, 53], "arctanh": [6, 15, 27, 29, 30, 31, 49, 52, 53, 54, 505], "area": 510, "arg": [24, 68, 69, 108, 198, 358, 412], "arg1": 197, "arg2": 197, "argmax": [0, 6, 34, 108, 265, 408, 503, 541], "argmin": [6, 33, 108, 266, 503, 541], "argpartit": [6, 35, 408, 503, 541], "argsort": [6, 108, 399, 408, 481, 490, 503, 509, 541], "argument": [0, 10, 12, 13, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 76, 78, 79, 84, 88, 89, 96, 97, 106, 107, 108, 111, 114, 118, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 166, 172, 177, 180, 184, 196, 197, 200, 201, 202, 207, 209, 216, 220, 221, 222, 229, 232, 233, 238, 239, 240, 241, 242, 249, 250, 253, 259, 260, 261, 263, 358, 373, 386, 389, 390, 397, 401, 402, 403, 405, 407, 410, 411, 463, 464, 465, 467, 470, 472, 473, 474, 480, 484, 485, 486, 487, 488, 492, 497, 499, 504, 505, 506, 510, 519, 520, 528, 541, 548], "argwher": [6, 391], "ari": [41, 55, 56, 57, 109, 112, 175, 493, 529], "arithmet": [58, 167, 254, 255, 270, 273, 275, 401, 498, 500, 526, 534, 544], "around": [6, 108, 167, 397, 407, 462, 478], "arr": [23, 24, 44, 98, 101, 111, 174, 183, 409, 436, 461, 462, 514, 518, 523], "arr2": [111, 523], "arr_t": [51, 108, 343], "arrai": [0, 2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 283, 340, 341, 342, 343, 344, 345, 348, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 364, 365, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 544, 548], "array2str": 6, "array_equ": [6, 183], "array_equiv": [6, 39], "array_lik": [23, 38, 42, 43, 44, 45, 46, 47, 50, 58, 83, 85, 99, 102, 112, 123, 164, 165, 167, 183, 187, 195, 229, 235, 247, 388, 397, 400, 407, 408, 412, 477, 483, 489, 502, 506, 525], "array_of_diagon": 103, "array_repr": 6, "array_split": [6, 78, 79, 493], "array_str": 6, "array_util": 71, "arrays_and_dtyp": 472, "art": 10, "asanyarrai": [6, 43, 44, 47, 469], "asarrai": [4, 6, 42, 44, 45, 47, 50, 388, 469, 489], "asarray_chkfinit": [6, 42, 43], "ascend": [211, 213, 481], "ascii": 111, "ascontiguousarrai": [6, 42, 43, 44, 47, 469], "asfarrai": [42, 43], "asfortranarrai": [6, 42, 43, 44, 45, 469], "asin": [6, 28], "asinh": [6, 29], "asmatrix": 6, "asnumpi": 108, "aspect": 111, "assembl": [78, 79, 110, 176, 479, 497, 523, 530], "assert": 255, "assign": [108, 353, 376, 513, 517], "associ": [58, 173, 174, 541], "assum": [10, 58, 92, 114, 131, 137, 139, 209, 219, 223, 227, 249, 510], "astyp": [6, 86, 108, 167, 391], "atan": [6, 30], "atan2": [6, 31], "atanh": [6, 32], "atleast_1d": [6, 56, 57, 121], "atleast_2d": [6, 55, 57, 121], "atleast_3d": [6, 55, 56, 121], "atol": [18, 185], "attain": 0, "attempt": [107, 220], "attribut": [108, 111, 116, 145, 165, 179, 224, 395, 533, 534], "automat": [173, 174], "avail": [2, 3, 4, 10, 87, 91, 111, 118, 261, 265, 266, 269, 271, 272, 534, 541], "averag": [6, 24, 108, 254, 255, 270, 362, 500, 544], "avg": 58, "avoid": [38, 43, 56, 57, 131, 137, 139, 470], "aweight": 91, "ax": [17, 22, 24, 33, 34, 58, 90, 92, 93, 104, 107, 108, 113, 121, 127, 129, 130, 133, 134, 135, 138, 139, 141, 143, 149, 169, 182, 207, 217, 221, 226, 229, 230, 231, 232, 234, 248, 250, 251, 252, 254, 255, 258, 262, 265, 266, 269, 270, 271, 272, 273, 274, 275, 383, 386, 396, 397, 399, 404, 466, 471, 475, 476, 477, 496, 498, 500, 501, 506, 507, 508, 509, 521, 526, 528], "axi": [17, 19, 20, 22, 23, 24, 33, 34, 35, 41, 58, 77, 78, 79, 90, 92, 93, 94, 95, 98, 103, 104, 108, 109, 110, 112, 113, 121, 123, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 149, 150, 151, 155, 156, 161, 167, 169, 175, 176, 181, 183, 207, 215, 221, 229, 233, 234, 235, 247, 248, 250, 252, 253, 254, 255, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 342, 349, 350, 356, 361, 362, 363, 367, 368, 369, 372, 377, 378, 379, 380, 382, 384, 386, 387, 397, 398, 399, 400, 404, 406, 407, 408, 461, 466, 468, 470, 471, 475, 476, 477, 479, 482, 489, 490, 493, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 521, 523, 524, 526, 528, 529, 530, 541], "axis1": [103, 108, 351, 383, 385, 501, 508], "axis2": [103, 108, 351, 383, 385, 501, 508], "axisa": 92, "axisb": 92, "axisc": 92, "axiserror": [35, 490], "b": [10, 16, 18, 23, 24, 33, 34, 39, 40, 61, 67, 77, 78, 79, 85, 92, 95, 107, 108, 110, 111, 113, 114, 117, 159, 160, 170, 171, 176, 182, 183, 185, 189, 199, 203, 204, 207, 208, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 243, 245, 250, 251, 252, 255, 258, 390, 392, 396, 402, 403, 413, 472, 479, 492, 497, 506, 507, 515, 527, 528, 530, 548], "b_ax": [229, 506], "b_i": [233, 528], "back": [108, 161, 356, 461, 470, 471, 476, 515], "backend": [2, 168, 415, 417, 418, 428, 433, 449], "backward": [10, 51, 108, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 169, 343, 470, 475, 476], "bad": 424, "baltimor": 221, "bandlimit": 487, "bartlett": 6, "base": [0, 4, 59, 111, 113, 120, 123, 152, 167, 173, 174, 227, 237, 238, 239, 240, 241, 242, 247, 248, 250, 400, 402, 403, 407, 409, 528], "base_repr": [6, 59], "basic": [72, 113, 541, 544], "batch": 234, "bc": [208, 225], "bcde": 114, "becaus": [10, 17, 22, 131, 137, 139, 524, 541], "becom": [10, 108, 173, 386], "been": [110, 408, 476, 503], "befor": [4, 23, 35, 78, 79, 93, 108, 112, 132, 133, 134, 150, 151, 183, 231, 248, 252, 258, 273, 275, 367, 378, 397, 404, 466, 475, 476, 490, 498, 500, 507, 526, 527], "before_1": 397, "before_n": 397, "begin": [112, 114, 167, 235, 247, 397, 482], "behav": [183, 236, 407], "behavior": [35, 108, 141, 232, 264, 348, 471, 490, 507], "behind": [108, 367], "being": [3, 86, 111, 155, 156, 253, 259, 397], "belong": [105, 173], "below": [0, 4, 9, 14, 26, 28, 29, 32, 48, 49, 54, 86, 99, 102, 111, 137, 209, 219, 221, 232, 511, 512, 516, 524, 541], "best": 114, "beta": [6, 423], "between": [18, 25, 41, 71, 72, 86, 104, 112, 145, 160, 163, 169, 182, 183, 185, 235, 247, 397, 429, 443, 492, 499, 510, 524], "beyond": [4, 475], "bia": 91, "big": 111, "bin": [59, 60, 105, 126, 128, 142, 173, 174, 450], "bin_edg": [173, 174], "binari": [59, 61, 62, 63, 64, 65, 66, 67, 159, 160, 162, 163, 184, 202, 473], "binary_repr": [6, 61, 62, 63, 64, 65, 66, 67, 184, 202, 473], "bincount": [6, 105, 173], "binomi": [6, 431], "bins_0": 174, "bins_1": 174, "bit": [59, 61, 62, 63, 64, 65, 66, 67, 111, 145, 179, 184, 202, 243, 245, 246, 272, 274, 473, 485, 534, 544], "bitwis": [61, 65, 67], "bitwise_and": [6, 62, 64, 65, 67, 184, 243], "bitwise_count": 6, "bitwise_invert": [6, 64, 184], "bitwise_left_shift": [6, 202], "bitwise_not": 6, "bitwise_or": [6, 61, 62, 64, 67, 184, 245], "bitwise_right_shift": [6, 473], "bitwise_xor": [6, 61, 62, 64, 65, 184, 246], "biufcmmosuv": 111, "blackman": 6, "block": [6, 78, 79, 110, 144, 176, 199, 479, 497, 523, 530], "bmat": 6, "bool": [9, 17, 18, 21, 22, 33, 34, 35, 38, 39, 40, 43, 46, 51, 58, 72, 85, 86, 90, 93, 98, 105, 108, 111, 114, 117, 144, 158, 167, 170, 171, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 205, 217, 219, 221, 223, 227, 234, 235, 247, 248, 252, 254, 255, 256, 258, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 343, 391, 392, 404, 466, 470, 482, 485, 490, 498, 500, 502, 521, 525, 526, 541], "bool_": 9, "boolean": [61, 62, 64, 65, 67, 85, 93, 98, 111, 123, 152, 158, 181, 184, 185, 188, 190, 191, 192, 193, 194, 198, 243, 245, 248, 249, 254, 255, 270, 272, 273, 275, 391, 400, 466, 498, 502, 526], "boolean_sequ": 198, "both": [10, 16, 18, 23, 31, 39, 40, 53, 58, 61, 63, 65, 66, 67, 76, 84, 92, 106, 107, 117, 133, 140, 152, 154, 155, 156, 157, 166, 170, 171, 172, 177, 182, 185, 199, 200, 201, 202, 203, 204, 216, 221, 229, 241, 242, 243, 245, 246, 250, 253, 259, 260, 263, 274, 390, 392, 402, 403, 467, 470, 473, 499, 506, 508, 513, 515, 517, 519, 527, 528, 531], "bound": [407, 408, 462, 481, 502, 503], "boundari": [169, 407, 462], "branch": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "briefli": 541, "broadcast": [16, 17, 22, 33, 34, 40, 58, 68, 69, 70, 76, 85, 90, 106, 113, 123, 152, 155, 156, 177, 192, 193, 216, 217, 221, 223, 234, 246, 248, 250, 252, 253, 254, 255, 258, 259, 263, 265, 266, 270, 272, 273, 274, 275, 402, 403, 404, 407, 408, 466, 468, 498, 499, 500, 503, 507, 519, 526, 528, 531], "broadcast_arrai": [6, 69, 70], "broadcast_shap": 6, "broadcast_to": [6, 68, 69, 507], "brought": 10, "buffer": [46, 94, 95, 108, 158, 159, 160, 162, 163, 236, 252, 258, 267, 268], "buffer_lik": 159, "buffererror": 158, "build": 544, "build_loc": 4, "built": [59, 111], "busday_count": 6, "busday_offset": 6, "byte": [6, 51, 71, 108, 111, 113, 159, 160, 236, 343, 359, 364], "byteord": 111, "byteswap": 6, "bz2": 236, "c": [2, 4, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 92, 96, 97, 106, 107, 108, 111, 113, 114, 115, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 164, 165, 166, 168, 170, 171, 172, 177, 180, 182, 184, 188, 189, 190, 191, 199, 200, 201, 202, 203, 204, 208, 215, 220, 221, 225, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 259, 260, 263, 343, 348, 356, 370, 373, 389, 390, 391, 392, 394, 395, 401, 402, 403, 405, 410, 411, 461, 462, 463, 465, 467, 469, 470, 471, 473, 474, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 506, 507, 519, 520, 521, 522, 528, 531, 532, 533, 548], "c_contigu": [45, 47, 108, 348, 469], "ca": 82, "calcul": [10, 12, 13, 16, 21, 31, 53, 58, 92, 93, 95, 104, 106, 112, 113, 117, 119, 120, 122, 126, 135, 152, 153, 154, 157, 169, 174, 177, 210, 211, 212, 213, 215, 221, 223, 239, 241, 242, 248, 250, 254, 255, 260, 263, 270, 273, 275, 392, 397, 402, 403, 404, 466, 467, 498, 499, 519, 526, 527, 534, 548], "call": [10, 21, 23, 31, 33, 34, 35, 45, 47, 53, 60, 111, 132, 133, 134, 137, 140, 161, 183, 210, 212, 220, 228, 249, 255, 283, 391, 496, 502, 507, 510, 548], "callabl": [161, 249], "cambridg": 10, "can": [0, 3, 4, 10, 16, 18, 23, 24, 25, 31, 38, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 53, 58, 59, 61, 62, 63, 64, 65, 66, 67, 72, 83, 84, 86, 92, 99, 100, 102, 103, 106, 107, 108, 111, 113, 114, 115, 116, 117, 124, 126, 127, 128, 129, 132, 133, 134, 137, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 176, 177, 178, 181, 182, 184, 185, 187, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 214, 215, 218, 219, 221, 223, 229, 231, 232, 235, 236, 241, 242, 243, 245, 246, 247, 249, 250, 253, 257, 259, 260, 263, 272, 274, 343, 348, 376, 378, 389, 390, 391, 392, 393, 394, 395, 401, 402, 403, 408, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 461, 462, 467, 469, 470, 473, 492, 499, 502, 503, 506, 508, 510, 511, 513, 517, 518, 519, 521, 525, 527, 531, 532, 533, 541, 548], "can_cast": [6, 544], "cannot": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 78, 79, 265, 266, 470, 493, 496, 497], "capabl": [25, 38, 42, 43, 45, 47, 58, 125, 167, 235, 247, 250, 528], "cardin": 487, "cardinali": 487, "care": [25, 210], "cartesian": 256, "case": [4, 17, 22, 25, 33, 34, 38, 42, 43, 44, 45, 47, 58, 83, 92, 94, 95, 99, 102, 104, 108, 113, 114, 115, 116, 124, 128, 131, 136, 140, 142, 159, 160, 161, 162, 164, 165, 167, 169, 178, 210, 224, 227, 229, 235, 236, 242, 247, 257, 267, 268, 272, 274, 358, 393, 394, 395, 404, 461, 470, 471, 500, 506, 511, 524, 525, 532, 533, 541], "cast": [17, 22, 51, 72, 78, 79, 85, 93, 94, 95, 108, 113, 152, 176, 183, 210, 248, 250, 254, 255, 264, 267, 268, 270, 272, 273, 274, 275, 343, 404, 466, 479, 497, 498, 500, 526, 528, 530], "cat": [414, 431], "cauchi": 450, "cbrt": [6, 494], "cdef": 114, "cdot": [229, 233, 506, 528], "cdoubl": 9, "ceil": [6, 37, 146, 153, 154, 474, 478, 520], "center": [127, 128, 129, 130, 134, 135, 142], "central": [169, 432, 433], "certain": [111, 249], "ch": 10, "chain": [107, 108, 113, 114], "chang": [51, 83, 92, 108, 111, 113, 123, 267, 268, 343, 356, 381, 386, 389, 400, 401, 407, 408, 409, 461, 470, 471, 476, 524, 544], "char": 111, "charact": [111, 160], "check": [17, 22, 42, 43, 44, 72, 131, 187, 189, 195, 205, 223, 226, 541], "check_valid": 430, "chi": [416, 432], "chisquar": 6, "choic": [6, 75, 108, 126, 127, 129, 132, 133, 134, 138, 139, 141, 143, 211, 213, 344], "choicelist": 482, "choleski": 6, "choos": [6, 21, 28, 30, 48, 52, 108, 114, 482, 531, 541], "chosen": [36, 173, 521, 531], "chunk": 60, "circ": 548, "circl": [225, 510], "clamp": [407, 408, 502, 503], "clariti": 144, "class": [3, 4, 108, 111, 147, 159, 160, 161, 163, 181, 236, 412, 440, 511, 544], "classic": 113, "clear": [111, 201, 541], "clip": [6, 108, 407, 408, 462, 502, 503, 541], "close": [14, 15, 21, 26, 27, 28, 30, 48, 50, 51, 52, 108, 113, 121, 180, 235, 343, 412, 440, 463, 464, 474, 478, 510], "closer": 520, "cloud": 3, "cmake": 4, "co": [6, 14, 15, 26, 27, 28, 48, 89, 212, 486, 504, 510], "coars": [222, 396], "code": [46, 111, 197, 469], "codeplai": 4, "coeffici": [86, 215, 226, 231], "coerc": [46, 159, 160, 161, 162, 163, 236], "coin": 414, "col": 181, "collaps": [108, 356, 521], "column": [6, 42, 43, 44, 45, 47, 50, 51, 77, 78, 79, 86, 94, 95, 103, 108, 110, 124, 144, 150, 151, 169, 175, 176, 178, 210, 211, 215, 220, 224, 227, 343, 461, 462, 469, 479, 493, 497, 511, 513, 517, 522, 525, 530], "column_stack": [6, 78, 79, 110, 176, 479, 497, 530], "com": 4, "combin": [0, 111, 121, 129, 134, 139, 143, 169], "combinatori": 114, "come": 521, "comma": [111, 113], "command": 4, "common": [132, 133, 134, 166, 200, 229, 391, 506], "common_typ": 6, "compani": [414, 431], "compar": [18, 35, 39, 117, 155, 156, 174, 185, 222, 253, 259, 490], "comparison": [2, 117, 170, 171, 203, 204, 392, 534, 544], "compat": [3, 4, 10, 17, 22, 51, 58, 92, 103, 108, 207, 209, 216, 217, 222, 223, 232, 233, 234, 248, 250, 254, 255, 269, 270, 271, 273, 275, 343, 396, 466, 470, 498, 508, 526, 527, 528, 544], "compil": [4, 111, 168, 469], "complement": [59, 524], "complementari": [154, 524], "complet": [3, 4, 114, 160, 161, 224, 476, 541], "complex": [10, 12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 38, 39, 48, 49, 52, 53, 54, 72, 93, 107, 108, 111, 114, 118, 125, 126, 127, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 152, 155, 156, 180, 186, 187, 194, 195, 201, 210, 211, 212, 213, 216, 224, 225, 227, 233, 248, 250, 253, 259, 264, 273, 275, 346, 347, 405, 463, 464, 466, 491, 498, 521, 526, 527, 528, 541, 544], "complex128": [9, 58, 472], "complex64": [9, 58, 71, 108, 152, 377], "compliant": 108, "complic": [113, 548], "compon": [10, 39, 92, 130, 135, 142, 145, 180, 219, 229, 264, 463, 506], "compos": 84, "composit": [95, 199, 500, 510], "compress": [6, 123, 482, 502, 541], "comput": [4, 10, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 58, 60, 61, 62, 64, 65, 67, 73, 80, 81, 86, 88, 89, 93, 94, 95, 104, 105, 113, 119, 120, 121, 122, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 153, 169, 170, 171, 172, 173, 174, 180, 181, 184, 199, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 248, 250, 254, 255, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 389, 396, 401, 405, 463, 465, 466, 467, 474, 478, 480, 484, 485, 486, 488, 494, 498, 500, 504, 505, 506, 510, 513, 517, 526, 528], "compute_uv": [206, 227, 228], "concat": [6, 79], "concaten": [6, 77, 78, 110, 176, 183, 479, 493, 497, 503, 523, 530], "concept": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533, 541], "cond": [6, 214], "condit": [36, 51, 107, 108, 123, 206, 214, 220, 343, 391, 400, 407, 409, 482, 531], "condlist": 482, "confus": 157, "conj": [6, 81, 108, 131, 180, 205, 210, 405], "conjug": [6, 10, 80, 107, 108, 137, 140, 180, 205, 210, 211, 212, 213, 216, 233, 250, 346, 405, 527, 528], "consecut": [104, 112, 169], "conserv": 256, "consid": [18, 25, 38, 39, 42, 43, 45, 47, 114, 142, 167, 185, 188, 211, 213, 219, 235, 247, 250, 412, 440, 471, 492, 521, 528], "consist": [39, 40, 112, 126, 127, 129, 132, 133, 134, 138, 139, 141, 143, 160, 174, 229, 231, 235, 503, 506], "constant": [9, 111, 169, 397], "constant_valu": 397, "constraint": 58, "construct": [42, 43, 44, 75, 99, 102, 103, 108, 111, 124, 159, 160, 161, 162, 163, 178, 198, 201, 236, 257, 344, 393, 482, 487, 507, 508, 531, 534], "constructor": 541, "consum": [108, 364], "contain": [10, 12, 13, 14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 44, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 84, 85, 86, 88, 89, 92, 93, 103, 106, 108, 111, 117, 119, 120, 122, 127, 128, 129, 132, 137, 140, 142, 148, 152, 153, 154, 155, 156, 157, 158, 163, 168, 169, 170, 171, 173, 174, 177, 180, 181, 184, 202, 203, 204, 207, 209, 211, 224, 227, 229, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 253, 254, 259, 260, 263, 265, 266, 269, 270, 271, 273, 275, 373, 389, 391, 392, 399, 401, 402, 403, 405, 412, 463, 465, 466, 467, 473, 474, 478, 480, 484, 485, 486, 487, 488, 494, 495, 498, 499, 504, 505, 506, 509, 513, 514, 517, 518, 519, 520, 526, 541], "content": [45, 108, 255, 449], "context": 10, "contigu": [42, 43, 44, 45, 47, 71, 107, 108, 113, 189, 220, 370, 461, 469, 470], "continu": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 412, 444, 487], "contourf": 256, "contract": [113, 114, 229, 506], "contrari": [207, 209, 216, 232, 233], "contrast": [113, 407], "contribut": [10, 58, 173, 174], "control": [4, 51, 72, 78, 79, 85, 108, 113, 176, 250, 343, 479, 497, 528, 530], "conveni": [108, 386, 412], "convent": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 107, 113, 114, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 182, 216, 229, 231, 250, 396, 506, 528], "convers": [51, 108, 113, 343, 534], "convert": [23, 33, 34, 38, 42, 43, 44, 45, 46, 47, 50, 55, 56, 57, 83, 96, 97, 99, 102, 111, 113, 114, 121, 164, 165, 167, 183, 187, 195, 235, 247, 410, 411, 462, 469, 522, 524, 525], "convolut": [10, 82, 87], "convolv": [6, 87], "coolei": 10, "coordin": [90, 161, 169, 181, 198, 256, 462, 522], "copi": [6, 23, 25, 35, 38, 39, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 85, 98, 99, 100, 102, 103, 108, 111, 115, 116, 123, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 183, 235, 236, 247, 249, 255, 256, 257, 264, 283, 343, 356, 358, 367, 373, 376, 393, 394, 395, 398, 400, 401, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 461, 469, 470, 471, 481, 490, 496, 511, 512, 513, 516, 517, 525, 532, 533, 541], "copysign": [6, 389, 401], "copyto": [6, 108, 123, 348, 400], "core": [3, 113, 528, 541], "corner": [127, 129, 133, 134, 397], "corrcoef": [6, 91], "correct": [12, 13, 14, 15, 16, 21, 23, 26, 27, 28, 29, 30, 31, 32, 36, 37, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 78, 79, 80, 81, 84, 88, 89, 96, 97, 106, 117, 119, 120, 122, 125, 131, 137, 139, 146, 152, 153, 154, 155, 156, 157, 166, 170, 171, 172, 177, 180, 184, 188, 190, 191, 200, 201, 202, 203, 204, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 253, 259, 260, 263, 389, 390, 392, 401, 402, 403, 405, 410, 411, 463, 465, 467, 469, 473, 474, 478, 480, 484, 485, 486, 487, 488, 492, 494, 495, 497, 499, 504, 505, 519, 520], "correctli": [21, 28, 30, 33, 34, 48, 52, 90, 217, 221, 234, 252, 258, 265, 266, 272, 274, 391, 404, 500], "correl": [6, 86, 544], "correspond": [6, 10, 25, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 51, 76, 78, 79, 83, 96, 97, 99, 100, 102, 103, 108, 109, 115, 116, 124, 127, 128, 129, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 175, 178, 181, 198, 207, 210, 211, 229, 233, 235, 236, 247, 249, 250, 257, 343, 348, 352, 393, 394, 395, 399, 410, 411, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 475, 482, 483, 493, 498, 506, 509, 510, 511, 513, 517, 525, 526, 528, 529, 532, 533, 541], "correspondingli": [10, 493], "cosh": [6, 15, 27, 88, 488, 505], "cosin": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 486, 488, 504, 505], "cost": [113, 114], "costli": 114, "could": [108, 131, 137, 139, 378], "count": [17, 22, 60, 90, 105, 111, 114, 149, 159, 160, 162, 163, 169, 173, 174, 391, 404, 414, 489, 500, 521, 534, 544], "count_nonzero": [6, 391], "counterclockwis": [150, 151, 477], "counterpart": [10, 131, 137, 139, 541], "cov": [6, 86, 430], "covari": [86, 91], "cover": [513, 517, 544], "cpu": [4, 25, 38, 42, 43, 44, 45, 47, 83, 87, 91, 99, 102, 115, 116, 118, 124, 128, 142, 159, 160, 161, 162, 164, 165, 167, 178, 235, 236, 247, 257, 261, 272, 393, 394, 395, 511, 525, 532, 533], "creat": [3, 4, 25, 38, 40, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 101, 102, 103, 108, 111, 114, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 264, 343, 348, 393, 394, 395, 397, 408, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 508, 511, 513, 514, 517, 518, 525, 532, 533, 541, 544], "creation": [111, 114, 534, 541, 544, 548], "crop": [126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143], "cross": [6, 87, 198], "csingl": 9, "ct": 10, "ctype": 469, "cube": [73, 152, 494], "cubic": 114, "cuda": 4, "cumprod": [6, 108, 267, 541], "cumsum": [6, 104, 108, 268, 500, 510, 541], "cumul": [93, 94, 95, 104, 108, 267, 268, 349, 350, 500, 510], "cumulative_prod": 6, "cumulative_sum": 6, "cupi": [2, 534], "current": [10, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 84, 88, 89, 96, 97, 106, 108, 111, 114, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 160, 166, 172, 174, 177, 178, 184, 200, 201, 202, 238, 239, 240, 241, 242, 253, 259, 260, 261, 263, 376, 389, 390, 397, 401, 402, 403, 405, 410, 411, 465, 467, 469, 473, 474, 480, 484, 485, 486, 488, 492, 499, 504, 505, 519, 520], "curv": 510, "custom": 541, "customarili": 10, "cut": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 215, 528], "cutoff": 223, "cycl": [128, 142, 198, 471], "cyclic": 407, "cython": 4, "d": [0, 17, 22, 24, 25, 58, 77, 78, 79, 86, 94, 95, 99, 100, 101, 102, 103, 107, 108, 110, 111, 124, 128, 130, 135, 142, 144, 148, 150, 151, 163, 175, 176, 178, 182, 198, 208, 209, 211, 212, 216, 220, 221, 225, 229, 232, 250, 256, 267, 268, 274, 356, 391, 402, 403, 404, 407, 417, 461, 470, 479, 481, 483, 497, 500, 502, 506, 507, 508, 515, 521, 525, 528, 530, 541], "d0": [412, 439, 441], "d1": [412, 441], "d3": 100, "data": [1, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 99, 102, 105, 106, 107, 108, 111, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 131, 137, 139, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 187, 188, 190, 191, 192, 193, 195, 200, 201, 202, 203, 204, 209, 215, 222, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 343, 373, 386, 388, 389, 390, 392, 394, 395, 400, 401, 402, 403, 405, 407, 408, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 503, 504, 505, 508, 511, 519, 520, 526, 528, 530, 531, 532, 533, 534, 544], "datatyp": [111, 219], "date": 4, "datetim": 111, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [91, 108, 273, 275, 380, 387, 498, 526], "decai": 425, "decim": [37, 59, 108, 145, 146, 374, 474, 478], "decomposit": [205, 214, 219, 223, 227, 228, 544], "decompress": 236, "decreas": [105, 510], "decreasingli": [10, 127, 129, 133, 134], "deem": 158, "def": [0, 24, 397], "default": [3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 213, 215, 217, 219, 220, 221, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 356, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 416, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 541], "default_rng": 6, "defg": 114, "defici": 219, "defin": [10, 31, 53, 92, 98, 111, 116, 126, 155, 156, 165, 172, 173, 174, 183, 207, 209, 221, 233, 253, 259, 264, 395, 401, 464, 477, 528, 533, 541], "definit": [92, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 153, 205, 510], "deg": [21, 411], "deg2rad": [6, 410, 411, 524], "degre": [6, 21, 96, 273, 275, 410, 411, 454, 477, 498, 524, 526, 548], "del": 548, "delet": [6, 23, 183], "delta": [10, 273, 275, 498, 524, 526], "demonstr": [0, 4, 111], "denot": [233, 528], "dens": [181, 198, 257], "densiti": 173, "depend": [4, 36, 103, 125, 131, 137, 139, 209, 211, 215, 221, 224, 226, 227, 235, 272, 274, 482, 531], "depth": [77, 78, 79, 109, 110, 176, 479, 493, 497, 530], "deriv": 169, "descend": 227, "descr": 111, "describ": [93, 111, 221, 232, 248, 466, 544], "descript": [93, 111, 132, 134, 173, 248, 466, 541], "design": [10, 59], "desir": [25, 38, 42, 43, 45, 47, 50, 70, 115, 116, 124, 132, 133, 134, 164, 165, 167, 178, 235, 247, 394, 395, 461, 507, 511, 532, 533], "destin": [78, 79, 176, 262, 407, 408, 479, 497, 503, 530], "destruct": 548, "det": [6, 225], "detail": [37, 127, 129, 133, 134, 138, 139, 141, 143, 158, 217, 234, 478, 513, 514, 517, 518, 521, 541], "determin": [14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 63, 65, 66, 67, 73, 84, 88, 89, 96, 97, 106, 119, 120, 122, 154, 155, 156, 157, 160, 161, 163, 177, 202, 208, 209, 215, 224, 225, 232, 237, 238, 239, 240, 241, 242, 250, 253, 259, 260, 263, 390, 402, 403, 410, 411, 462, 465, 467, 473, 480, 482, 484, 486, 487, 488, 492, 494, 495, 499, 504, 505, 508, 519, 520, 522, 528], "devel": 4, "develop": [3, 4], "deviat": [108, 254, 270, 273, 275, 380, 412, 427, 434, 498, 526], "devic": [0, 2, 3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 58, 83, 93, 99, 100, 102, 108, 113, 115, 116, 124, 125, 128, 142, 146, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 248, 249, 250, 254, 255, 257, 270, 273, 275, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 466, 496, 498, 511, 513, 517, 525, 526, 528, 532, 533], "df": [416, 432, 454, 455], "dfden": [420, 433], "dfnum": [420, 433], "dft": [10, 126, 131, 132, 136, 137, 140], "di": [100, 101], "diag": [6, 24, 102, 103, 113, 124, 150, 151, 178, 210, 212, 227, 482, 508], "diag_indic": [6, 101, 144], "diag_indices_from": [6, 100, 144], "diagflat": [6, 99, 103, 508], "diagon": [6, 99, 100, 101, 102, 108, 113, 124, 144, 178, 205, 211, 212, 213, 232, 249, 385, 482, 508, 511, 512, 513, 514, 516, 517, 518, 541], "dice": 429, "dict": [111, 397], "dictionari": 111, "diff": [6, 95, 112, 169, 173], "differ": [3, 10, 18, 25, 38, 41, 42, 43, 44, 45, 47, 58, 83, 93, 95, 99, 102, 104, 108, 111, 112, 115, 116, 124, 127, 128, 132, 133, 135, 138, 141, 142, 145, 150, 151, 152, 159, 160, 161, 162, 164, 165, 167, 169, 178, 183, 185, 213, 221, 232, 235, 236, 247, 248, 250, 257, 348, 393, 394, 395, 400, 402, 403, 408, 466, 471, 477, 499, 503, 511, 513, 517, 524, 525, 532, 533, 544], "differenti": 487, "digit": [6, 10, 60, 145, 173], "dim": [18, 462], "dimens": [17, 22, 23, 24, 33, 34, 38, 55, 56, 57, 58, 77, 78, 79, 85, 90, 91, 92, 100, 103, 104, 108, 109, 111, 121, 133, 134, 146, 150, 151, 169, 176, 181, 182, 198, 207, 209, 217, 219, 221, 224, 228, 229, 232, 233, 234, 248, 251, 252, 254, 255, 256, 257, 258, 262, 265, 266, 269, 270, 271, 272, 273, 274, 275, 356, 360, 365, 376, 388, 391, 393, 404, 408, 412, 442, 444, 445, 447, 461, 462, 466, 470, 477, 483, 493, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 513, 514, 517, 518, 521, 522, 523, 526, 528, 529, 541, 544], "dimension": [2, 4, 24, 35, 60, 82, 87, 90, 93, 98, 100, 101, 102, 103, 104, 105, 108, 112, 113, 126, 127, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 159, 160, 162, 169, 175, 181, 183, 198, 207, 215, 222, 224, 230, 231, 248, 252, 256, 257, 258, 265, 266, 269, 271, 273, 275, 379, 388, 393, 396, 404, 466, 490, 498, 500, 502, 507, 510, 521, 526, 527, 529, 534], "direct": [10, 92, 104, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 150, 151, 169, 207, 390, 477], "directli": [111, 161, 181, 247, 391, 503], "directori": 168, "dirichlet": 6, "discard": 520, "discont": 524, "discontinu": 524, "discret": [3, 82, 87, 95, 104, 112, 126, 127, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 169, 412, 487, 534, 544], "dispers": 457, "displac": [108, 381], "disregard": 471, "distanc": [169, 492], "distinct": [155, 156, 253, 259, 471], "distinguish": 111, "distribut": [3, 4, 247, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 444, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 544], "divid": [6, 41, 109, 110, 154, 157, 175, 260, 467, 493, 519, 529], "divis": [106, 154, 157, 260, 402, 403, 467, 493, 519, 520], "divisor": [166, 200, 273, 275, 498, 526], "divmod": [6, 541], "dlpack": 158, "dmlc": 158, "dn": [412, 439, 441], "do": [3, 4, 111, 249, 255, 414, 476, 510], "docstr": 541, "document": [0, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541], "doe": [23, 25, 41, 72, 98, 108, 113, 123, 125, 140, 155, 156, 158, 183, 224, 264, 267, 268, 358, 400, 471, 493, 502], "domain": [10, 131, 136], "done": [3, 51, 108, 113, 231, 343, 521, 524], "dot": [6, 108, 113, 114, 182, 205, 212, 214, 220, 223, 224, 226, 227, 229, 230, 231, 233, 250, 506, 527, 528], "doubl": [9, 229, 425, 506], "down": 151, "dp": [106, 208, 211, 225, 226, 402, 403, 499, 519], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 265, 266, 269, 271, 272, 343, 348, 393, 394, 395, 406, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "dpnp": [0, 2, 3, 4, 10, 534, 541, 544, 545, 548], "dpnp_arrai": [25, 38, 42, 43, 44, 45, 47, 51, 83, 99, 100, 102, 115, 116, 124, 128, 142, 145, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 179, 181, 235, 236, 247, 249, 257, 276, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533, 534], "dpnp_iface_arraycr": [257, 393], "draw": [412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "drawn": [412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 437, 438, 440, 443, 446, 452, 453, 454, 455, 456, 457, 458, 459, 460, 482], "drill": [414, 431], "driver": 2, "drop": [3, 111], "dsplit": [6, 78, 79, 110, 493], "dst": 85, "dstack": [6, 77, 78, 79, 176, 479, 493, 497, 530], "dt": [111, 510], "dt2": 111, "dtype": [0, 9, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 78, 79, 80, 81, 84, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 100, 106, 108, 113, 115, 116, 117, 119, 120, 122, 124, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 181, 183, 184, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 220, 223, 227, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 349, 350, 362, 368, 377, 380, 382, 385, 387, 389, 390, 392, 394, 395, 401, 402, 403, 404, 405, 410, 411, 412, 434, 440, 456, 465, 466, 467, 469, 472, 473, 474, 478, 479, 480, 484, 485, 486, 487, 488, 491, 492, 494, 495, 497, 498, 499, 500, 502, 504, 505, 508, 511, 512, 516, 519, 520, 526, 528, 529, 530, 532, 533, 541], "due": [140, 548], "dump": 6, "dx": [169, 510], "dy": 169, "dz": 169, "e": [9, 10, 15, 27, 29, 49, 63, 93, 94, 103, 111, 115, 116, 121, 124, 127, 131, 132, 133, 134, 137, 139, 140, 152, 160, 164, 165, 169, 178, 202, 210, 225, 230, 234, 237, 255, 394, 395, 412, 464, 468, 471, 501, 511, 523, 532, 533], "ea": 114, "each": [0, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 30, 31, 32, 41, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 80, 81, 84, 86, 88, 89, 94, 95, 100, 103, 105, 106, 108, 109, 111, 114, 117, 119, 120, 122, 127, 129, 131, 133, 134, 137, 138, 139, 141, 143, 150, 151, 152, 153, 154, 157, 161, 169, 170, 171, 173, 174, 175, 180, 184, 188, 190, 191, 198, 202, 203, 204, 207, 210, 211, 212, 213, 215, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 260, 262, 263, 264, 374, 389, 391, 392, 397, 401, 402, 403, 405, 408, 414, 431, 462, 463, 465, 467, 468, 471, 473, 474, 475, 478, 480, 484, 485, 486, 488, 493, 494, 495, 497, 499, 503, 504, 505, 507, 510, 513, 514, 517, 518, 519, 520, 521, 522, 528, 529, 541], "easier": 502, "easiest": [4, 397], "easili": [0, 174], "edg": [76, 105, 173, 174, 397], "edge_ord": 169, "ediff1d": [6, 104, 169], "effect": [114, 152, 155, 156, 253, 259, 402, 403, 524], "effici": [10, 126, 140, 160, 219, 223, 227], "efgh": 114, "eig": [6, 211, 212, 213], "eigenvalu": [210, 211, 212, 213, 544], "eigenvector": [210, 211, 212, 213], "eigh": [6, 210, 212, 213], "eight": 221, "eigval": [6, 210, 211, 213], "eigvalsh": [6, 210, 211, 212], "einstein": [107, 113, 114, 182, 229, 231, 250, 396, 506, 528], "einsum": [6, 107, 114, 182, 229, 231, 250, 396, 506, 528], "einsum_path": [6, 113], "either": [39, 40, 47, 58, 92, 93, 103, 111, 127, 129, 131, 133, 134, 137, 139, 141, 143, 144, 169, 182, 209, 211, 213, 221, 224, 248, 265, 266, 269, 271, 272, 274, 462, 466, 471, 481, 482, 503, 510], "element": [4, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 44, 48, 49, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 84, 85, 88, 89, 93, 94, 95, 98, 101, 103, 104, 105, 106, 108, 111, 112, 114, 117, 119, 120, 122, 123, 124, 125, 127, 129, 133, 134, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 207, 209, 212, 218, 229, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 258, 259, 260, 261, 263, 264, 267, 268, 269, 271, 272, 273, 274, 275, 338, 339, 346, 347, 349, 350, 352, 353, 356, 358, 359, 362, 364, 366, 367, 372, 373, 374, 375, 377, 380, 381, 384, 387, 389, 390, 391, 392, 400, 401, 402, 403, 404, 405, 407, 409, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 498, 499, 500, 502, 504, 505, 506, 507, 508, 510, 512, 514, 516, 518, 519, 520, 521, 522, 524, 526, 528, 531, 541, 544, 548], "element_count": [108, 377, 489], "elimin": 24, "ellipsi": 113, "els": [0, 111, 225, 281], "elsewher": [124, 178, 511, 531], "empti": [4, 6, 38, 108, 116, 127, 129, 133, 134, 138, 139, 141, 143, 160, 164, 165, 215, 353, 394, 395, 397, 400, 493, 532, 533, 541], "empty_lik": [6, 38, 115, 165, 395, 533], "enabl": [144, 219, 223, 227], "encount": [267, 268, 269, 271, 482], "end": [23, 25, 71, 98, 103, 111, 112, 114, 132, 167, 183, 235, 247, 397], "end_tim": 0, "end_valu": 397, "endian": 111, "endpoint": [25, 167, 235, 247, 510], "engin": 448, "enlarg": 471, "enough": 173, "ensur": 469, "entir": [58, 93, 131, 173, 174, 248, 254, 269, 270, 271, 273, 275, 397, 466, 498, 526], "entiti": 471, "entri": [41, 98, 108, 109, 111, 115, 123, 131, 137, 139, 144, 149, 150, 151, 175, 379, 493, 496, 528, 529], "enumer": 158, "env": 4, "environ": 4, "ep": [145, 219, 223, 390, 464, 492], "epsilon": [219, 464], "epsneg": 145, "equal": [6, 17, 18, 22, 24, 35, 39, 40, 41, 58, 60, 63, 66, 78, 79, 87, 91, 95, 108, 109, 124, 167, 169, 170, 171, 173, 174, 175, 176, 185, 187, 195, 197, 202, 203, 204, 209, 218, 223, 224, 231, 235, 247, 260, 367, 392, 397, 412, 422, 456, 467, 473, 474, 478, 479, 484, 487, 490, 493, 496, 497, 511, 513, 517, 523, 529, 530], "equal_nan": [18, 39, 185, 521], "equat": [215, 226, 230, 231, 544], "equiv": [51, 72, 78, 79, 85, 108, 113, 176, 218, 250, 343, 479, 497, 528, 530], "equival": [10, 16, 17, 19, 20, 22, 24, 33, 34, 35, 37, 40, 58, 59, 83, 92, 93, 96, 97, 98, 106, 107, 108, 109, 110, 114, 121, 123, 148, 155, 156, 157, 175, 198, 228, 229, 230, 234, 248, 251, 260, 263, 283, 338, 339, 351, 365, 373, 376, 386, 388, 391, 396, 399, 401, 410, 411, 412, 440, 466, 467, 470, 477, 478, 483, 490, 499, 500, 502, 506, 509, 519, 521, 523, 528, 529, 541, 548], "error": [59, 93, 109, 113, 118, 131, 136, 175, 210, 248, 462, 466, 493, 496, 529, 534, 541], "essenti": 4, "estim": [91, 174, 414, 431, 510], "et": 10, "etc": [10, 38, 43, 111, 127, 129, 133, 134, 138, 139, 141, 143, 431], "euclidean": 215, "euler_gamma": 9, "evalu": [17, 18, 22, 108, 113, 114, 117, 187, 189, 195, 229, 231, 256, 338, 339, 396, 482, 506], "even": [10, 108, 111, 128, 130, 131, 132, 135, 136, 137, 139, 140, 142, 187, 189, 195, 255, 360, 397, 474, 478], "evenli": [25, 167, 235, 247, 474, 510], "event": 242, "everi": [59, 71, 139, 408, 503], "everywher": [137, 487], "exact": [123, 220, 400], "exactli": [10, 50, 163, 412, 440, 482], "examin": 215, "exampl": [2, 3, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 351, 353, 356, 357, 358, 360, 365, 367, 371, 373, 376, 377, 378, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541, 548], "exce": [242, 493], "except": [4, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 79, 80, 81, 83, 84, 88, 89, 96, 97, 104, 105, 106, 107, 108, 115, 116, 117, 119, 120, 122, 124, 125, 138, 139, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 175, 176, 177, 178, 184, 188, 190, 191, 200, 201, 202, 203, 204, 220, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 254, 258, 259, 260, 263, 269, 270, 271, 272, 273, 274, 275, 343, 358, 389, 390, 392, 394, 395, 401, 402, 403, 404, 405, 410, 411, 461, 465, 467, 468, 469, 473, 474, 480, 484, 485, 486, 488, 490, 492, 493, 494, 495, 498, 499, 500, 504, 505, 519, 520, 526, 528, 532, 533, 544], "exclud": [12, 13, 23, 235, 412, 456], "exclus": [412, 440], "execut": [3, 4, 24, 42, 43, 44, 87, 91, 118, 161, 261, 272, 415, 417, 418, 428, 433, 449, 548], "executor": 0, "exist": [10, 77, 78, 79, 110, 111, 121, 158, 176, 183, 479, 493, 497, 523, 530, 544], "exp": [6, 10, 120, 122, 126, 225, 239, 241, 248], "exp2": [6, 119, 122], "expand": [104, 121], "expand_dim": [6, 33, 34], "expect": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 80, 81, 84, 88, 89, 90, 93, 94, 95, 96, 97, 106, 107, 111, 117, 119, 120, 122, 125, 137, 146, 152, 153, 154, 155, 156, 157, 166, 170, 171, 172, 177, 180, 184, 185, 188, 190, 191, 200, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 258, 259, 260, 263, 267, 268, 270, 272, 273, 274, 275, 389, 390, 392, 401, 402, 403, 404, 405, 410, 411, 463, 465, 466, 467, 473, 474, 478, 480, 484, 485, 486, 487, 488, 492, 494, 495, 498, 499, 500, 504, 505, 519, 520, 526, 531], "explain": [129, 134, 139, 143, 541], "explan": 111, "explicit": 113, "explicitli": [103, 127, 129, 133, 134, 138, 139, 141, 143], "exploit": [10, 140], "explor": [114, 414, 431], "expm1": [6, 119, 120, 239], "expon": [10, 119, 120, 122, 152, 201, 218, 241, 242, 248, 402, 403, 438, 544], "exponenti": [6, 10, 114, 241, 242, 248, 425, 451], "expos": [159, 541], "express": [10, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 113, 114, 201, 236, 548], "extend": [10, 111, 199, 397, 541], "extens": [0, 1, 3, 4, 9, 168, 236, 534], "extra": [111, 137, 163], "extract": [6, 99, 102, 103, 113, 124, 148, 178, 181, 249, 400, 482, 502, 508], "extrapol": 471, "extrema": 544, "ey": [6, 71, 80, 81, 90, 108, 133, 134, 155, 156, 178, 182, 199, 214, 218, 219, 230, 231, 232, 246, 253, 259, 483, 508], "f": [0, 6, 10, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 106, 108, 111, 113, 115, 116, 117, 119, 120, 122, 124, 125, 128, 140, 142, 146, 152, 153, 154, 155, 156, 157, 164, 165, 166, 169, 170, 171, 172, 177, 180, 184, 188, 189, 190, 191, 200, 201, 202, 203, 204, 218, 221, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 259, 260, 263, 343, 348, 356, 389, 390, 392, 394, 395, 401, 402, 403, 405, 410, 411, 433, 461, 462, 463, 465, 467, 469, 470, 473, 474, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 515, 519, 520, 522, 528, 531, 532, 533], "f0": 111, "f1": 111, "f2": 111, "f4": 72, "f8": [72, 111], "f_contigu": [45, 47, 189, 469], "f_k": 10, "fab": [6, 12, 13], "fact": 212, "factor": [10, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 205, 224], "fail": [108, 376, 414], "fallback": [210, 212, 415, 417, 418, 428, 433, 449], "fals": [17, 18, 19, 20, 21, 22, 33, 34, 35, 38, 39, 40, 43, 45, 47, 51, 58, 61, 62, 64, 67, 68, 70, 72, 83, 86, 90, 91, 93, 95, 98, 105, 108, 111, 113, 114, 116, 117, 123, 144, 158, 161, 165, 167, 170, 171, 173, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 203, 204, 205, 206, 217, 219, 221, 223, 227, 228, 234, 235, 243, 244, 245, 246, 247, 248, 252, 254, 255, 256, 258, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 281, 338, 339, 340, 341, 343, 361, 362, 363, 368, 380, 382, 387, 391, 392, 395, 404, 406, 466, 469, 470, 482, 485, 490, 498, 500, 521, 525, 526, 531, 533], "famili": 10, "fanci": 502, "fashion": [242, 541], "fast": [10, 126, 127, 129, 133, 134, 139, 140, 143], "faster": [10, 24, 59, 155, 156], "fastest": [108, 189, 356, 461, 470], "fb": [114, 515], "featur": 111, "fetch": 470, "few": 144, "fft": [6, 544], "fft2": [6, 126, 129, 133], "fftfreq": [6, 10, 126, 130, 135, 142], "fftn": [6, 126, 127, 134, 140, 143], "fftshift": [6, 10, 127, 129, 134, 135], "fh": 160, "field": [111, 256], "field1": 111, "file": [159, 160, 162, 163, 168, 236], "filenam": [160, 236], "fill": [6, 23, 38, 108, 115, 116, 144, 164, 165, 173, 174, 256, 264, 348, 394, 395, 471, 511, 532, 533], "fill_diagon": 6, "fill_valu": [164, 165], "filt": 515, "filter": [10, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 487, 511, 513, 517, 525, 532, 533], "final": [4, 10, 86, 139, 140, 141, 143, 167, 247], "find": [36, 60, 86, 105, 108, 125, 173, 219, 223, 227, 375, 390, 391, 468, 481, 490, 492, 521, 544], "fine": 4, "finfo": [223, 390, 464, 492], "finfo_object": 145, "finit": [44, 188, 190, 191, 192, 193, 264, 492], "first": [16, 17, 18, 22, 24, 31, 33, 34, 35, 39, 40, 53, 58, 61, 63, 65, 66, 67, 71, 77, 78, 79, 84, 86, 92, 93, 103, 106, 107, 108, 111, 114, 117, 120, 127, 129, 131, 133, 134, 149, 152, 154, 155, 156, 157, 166, 169, 170, 171, 173, 174, 175, 177, 182, 183, 185, 189, 197, 199, 200, 202, 203, 204, 207, 209, 216, 220, 229, 230, 232, 233, 236, 241, 242, 243, 245, 246, 249, 250, 252, 253, 255, 256, 258, 259, 260, 263, 265, 266, 356, 392, 396, 397, 400, 402, 403, 404, 461, 467, 470, 473, 475, 477, 479, 481, 482, 490, 491, 495, 499, 500, 501, 503, 506, 508, 519, 521, 523, 527, 528, 529, 530], "fit": [215, 468], "fix": [6, 37, 74, 103, 111, 153, 407, 474, 478, 520], "flag": [45, 47, 108, 111, 189, 348, 469], "flanneri": 10, "flat": [33, 34, 108, 112, 147, 356, 358, 461, 462, 468, 522], "flatnonzero": [6, 391], "flatten": [6, 23, 33, 34, 35, 78, 79, 90, 94, 95, 98, 99, 102, 103, 108, 112, 144, 148, 173, 174, 183, 234, 252, 255, 258, 265, 266, 267, 268, 272, 274, 355, 370, 378, 391, 396, 408, 461, 462, 468, 475, 490, 502, 503, 508, 521, 522, 527], "flexibl": [107, 111, 160, 220], "flip": [6, 62, 64, 103, 144, 150, 151, 184, 209, 414, 477], "fliplr": [6, 103, 144, 149, 151, 209, 477], "flipud": [6, 103, 144, 149, 150, 209, 477], "float": [12, 13, 21, 25, 31, 42, 43, 46, 53, 58, 72, 84, 93, 95, 111, 115, 116, 120, 124, 125, 128, 142, 145, 146, 152, 159, 160, 161, 162, 163, 164, 165, 166, 169, 173, 174, 178, 180, 201, 215, 218, 219, 221, 223, 234, 235, 236, 241, 242, 247, 248, 252, 254, 255, 258, 264, 270, 273, 275, 390, 394, 395, 402, 403, 412, 416, 441, 442, 444, 445, 447, 450, 451, 453, 456, 463, 464, 465, 466, 480, 487, 498, 511, 524, 526, 532, 533, 541, 544], "float16": [9, 152], "float32": [0, 9, 44, 46, 51, 60, 72, 86, 94, 108, 111, 113, 152, 343, 390, 412, 434, 439, 441, 442, 444, 445, 447, 453, 456, 469, 472], "float64": [0, 9, 46, 51, 58, 72, 95, 108, 111, 113, 343, 412, 413, 419, 420, 421, 423, 425, 426, 427, 434, 435, 438, 439, 441, 442, 444, 445, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 472, 487, 492, 529], "float_pow": [6, 402, 403], "floor": [6, 37, 74, 146, 154, 260, 467, 474, 478, 520], "floor_divid": [6, 260, 467], "flop": 114, "flush": 160, "fmax": [6, 156, 252, 253, 259, 269, 402, 403], "fmin": [6, 155, 253, 258, 259, 271, 402, 403], "fmod": [6, 260, 402, 403, 467], "fn": 161, "fname": 236, "follow": [4, 10, 24, 58, 111, 121, 137, 145, 158, 179, 211, 213, 221, 223, 229, 397, 469, 506, 541, 544], "forc": [111, 113], "forg": 4, "form": [10, 23, 38, 42, 43, 44, 45, 46, 47, 59, 77, 83, 99, 102, 108, 110, 113, 114, 133, 134, 137, 164, 165, 167, 187, 195, 198, 209, 217, 228, 232, 235, 247, 251, 386, 397, 471, 479, 525, 530], "format": [111, 158, 160, 163, 544], "format_float_posit": 6, "format_float_scientif": 6, "former": [14, 26, 28, 29, 30, 32, 48, 49, 52, 54, 408, 503], "forth": [229, 506], "fortran": [47, 51, 108, 189, 343, 356, 461, 462, 469, 470, 522], "forward": [10, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 169], "found": [4, 481, 541], "four": [412, 441], "fourier": [126, 127, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 534, 544], "fourth": 127, "frac": [10, 510], "fraction": [261, 520], "free": [108, 373], "freedom": [273, 275, 454, 498, 526], "freq": [128, 130, 135, 142], "freq_spectrum": 131, "frequenc": [10, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142], "freshli": [192, 193, 528], "frexp": [6, 201], "fro": [206, 217, 221, 234], "frobeniu": [206, 221], "from": [3, 10, 14, 15, 17, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 68, 72, 75, 78, 79, 83, 85, 93, 96, 97, 99, 100, 102, 103, 108, 110, 111, 113, 115, 116, 120, 123, 124, 128, 132, 141, 142, 143, 149, 152, 158, 159, 160, 161, 162, 163, 164, 165, 169, 173, 176, 178, 181, 183, 198, 201, 210, 212, 213, 219, 220, 232, 236, 248, 249, 256, 257, 344, 348, 379, 384, 393, 394, 395, 397, 400, 404, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 466, 470, 471, 472, 477, 479, 481, 482, 495, 496, 497, 500, 502, 503, 508, 511, 513, 515, 517, 518, 521, 523, 524, 525, 530, 531, 532, 533, 544], "from_": 72, "from_dlpack": 6, "frombuff": [6, 160, 162, 163, 236], "fromfil": [6, 159, 162, 163], "fromfunct": [6, 42, 43, 44], "fromit": [6, 42, 43, 44, 159, 160, 163], "frompyfunc": 6, "fromregex": [6, 236], "fromstr": [6, 159, 160, 162, 236], "front": [59, 515], "full": [6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "full_lik": [6, 38, 116, 164, 395, 533], "full_matric": 227, "fulli": [111, 255], "func1d": 24, "function": [0, 2, 3, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 83, 87, 91, 93, 96, 97, 103, 106, 108, 113, 115, 116, 118, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 139, 140, 143, 144, 152, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 173, 174, 178, 189, 198, 207, 209, 210, 212, 216, 217, 220, 221, 222, 228, 229, 232, 233, 234, 236, 239, 241, 242, 248, 249, 251, 256, 260, 261, 272, 338, 339, 348, 351, 358, 373, 376, 386, 394, 395, 397, 402, 403, 408, 410, 411, 412, 415, 417, 418, 428, 433, 449, 461, 466, 467, 469, 471, 478, 479, 484, 487, 498, 502, 503, 506, 507, 513, 514, 517, 518, 519, 523, 526, 530, 531, 532, 533, 534, 541, 544], "fundament": [10, 111], "further": [98, 513, 517], "futur": [111, 174], "fweight": 91, "g": [4, 10, 111, 115, 116, 124, 164, 165, 178, 221, 394, 395, 412, 511, 532, 533, 548], "gamma": [6, 452], "gauss": 10, "gaussian": [412, 434, 458], "gc": 114, "gc69dfca1b0a": 6, "gcd": [6, 200], "gen": 113, "gender": 111, "gener": [4, 10, 35, 58, 59, 86, 111, 132, 137, 140, 143, 167, 182, 210, 211, 212, 213, 217, 223, 224, 234, 236, 247, 412, 414, 417, 448, 461, 492, 510, 513, 517, 525, 541, 544], "genfromtxt": [6, 236], "geometr": [6, 167, 235], "geomspac": [6, 235, 247], "get": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 101, 102, 108, 115, 116, 124, 128, 131, 137, 139, 142, 152, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 228, 233, 235, 236, 247, 249, 257, 348, 376, 393, 394, 395, 397, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 503, 511, 513, 514, 517, 518, 525, 528, 532, 533, 541], "get_arrai": 108, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 412], "get_sycl_devic": 412, "get_sycl_queu": 412, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 111], "getter": [108, 376], "gid": 174, "github": 158, "give": [10, 102, 108, 152, 174, 386, 470, 483, 489, 521], "given": [17, 18, 22, 23, 24, 25, 33, 34, 37, 38, 39, 42, 43, 45, 47, 51, 58, 59, 77, 83, 90, 91, 94, 95, 104, 107, 108, 110, 111, 112, 114, 115, 116, 123, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 155, 156, 164, 165, 167, 169, 173, 174, 183, 185, 214, 221, 229, 233, 235, 247, 249, 252, 253, 255, 256, 258, 259, 267, 268, 269, 271, 272, 273, 274, 275, 340, 341, 343, 349, 350, 363, 368, 369, 374, 377, 380, 382, 387, 391, 394, 395, 400, 404, 406, 407, 412, 417, 439, 456, 466, 468, 469, 470, 474, 475, 476, 477, 479, 481, 482, 489, 493, 498, 500, 502, 506, 507, 510, 511, 521, 523, 526, 528, 530, 532, 533, 541], "global": 0, "golub": 221, "good": 424, "gpu": [0, 3, 4, 25, 38, 42, 43, 44, 45, 47, 83, 99, 102, 115, 116, 124, 128, 142, 159, 160, 161, 162, 164, 165, 167, 178, 235, 236, 247, 257, 393, 394, 395, 511, 525, 532, 533], "grade": 111, "gradient": [6, 104, 112, 215], "graphic": 4, "great": 10, "greater": [6, 63, 66, 108, 109, 117, 154, 171, 202, 203, 204, 219, 224, 367, 392, 397, 473, 482, 484, 496, 524], "greater_equ": [6, 117, 170, 203, 204, 392], "greatest": [154, 166, 200], "greedi": [113, 114], "grid": [42, 43, 44, 161, 181, 222, 256, 257, 393, 396], "group": [36, 391], "guarante": [111, 469, 470], "guid": [2, 3], "gumbel": 6, "gz": 236, "h": [168, 205, 221, 224, 256], "ha": [4, 10, 12, 13, 14, 15, 17, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 48, 49, 52, 54, 58, 65, 86, 93, 94, 95, 105, 111, 117, 121, 131, 136, 137, 161, 169, 170, 171, 176, 180, 186, 187, 194, 195, 203, 204, 212, 225, 227, 232, 248, 254, 255, 260, 267, 268, 270, 272, 273, 274, 275, 392, 397, 404, 463, 464, 465, 466, 467, 468, 476, 480, 482, 496, 497, 498, 500, 501, 502, 507, 508, 522, 526, 541], "had": [408, 503], "hadamard": 114, "half": [15, 27, 127, 129, 130, 131, 133, 134, 235, 412, 442, 444, 445, 447, 456, 501], "ham": 6, "han": 6, "hand": [92, 207, 231], "handl": [25, 111, 125, 236, 391, 408, 462, 502, 503, 544], "happen": [51, 58, 108, 343, 414, 510], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 111, "have": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 48, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 73, 74, 77, 78, 79, 80, 81, 84, 88, 89, 92, 93, 94, 95, 96, 97, 106, 107, 110, 111, 117, 119, 120, 122, 125, 133, 134, 143, 145, 146, 152, 153, 154, 155, 156, 157, 166, 170, 171, 172, 176, 177, 180, 184, 185, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 209, 215, 217, 220, 222, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 253, 254, 255, 259, 260, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 389, 390, 392, 400, 401, 402, 403, 404, 405, 410, 411, 431, 463, 465, 466, 467, 468, 469, 470, 473, 474, 478, 479, 480, 484, 485, 486, 487, 488, 492, 494, 495, 497, 498, 499, 500, 504, 505, 507, 519, 520, 524, 526, 528, 530, 541], "hd": 114, "header": 168, "heapsort": [35, 490], "heavisid": 6, "hello": 111, "help": 548, "helper": 544, "henc": [121, 169], "here": [6, 111, 113, 131, 136, 137, 513, 517], "hermit": [211, 213], "hermitian": [131, 136, 137, 139, 140, 205, 210, 211, 212, 213, 219, 223, 227, 228, 544], "hfft": [6, 10, 136], "hierarchi": 197, "high": [71, 137, 412, 440, 443, 456], "higher": [24, 108, 113, 175, 183, 360, 527, 529], "highest": 126, "highli": 160, "hist": [173, 450], "hist_0": 174, "hist_1": 174, "histogram": [6, 60, 105, 174, 481, 544], "histogram2d": 6, "histogram_bin_edg": [6, 173], "histogramdd": [6, 173], "hold": [76, 94, 95, 173, 221, 255, 267, 268, 272, 274, 461, 508], "homogen": 111, "hopkin": 221, "horizont": [77, 78, 79, 103, 110, 144, 149, 175, 176, 209, 477, 479, 493, 497, 530], "host": [3, 4, 25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 511, 513, 517, 525, 532, 533], "household": 224, "how": [0, 4, 111, 137, 140, 169, 407, 408, 462, 502, 503, 513, 517], "howev": [108, 378, 502], "hsplit": [6, 78, 79, 493], "hstack": [6, 77, 78, 79, 110, 479, 493, 497, 530], "http": [4, 158], "hyperbol": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 486, 488, 504, 505, 544], "hypergeometr": 6, "hypot": [6, 466], "hypotenus": [177, 466], "i": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 283, 343, 348, 358, 360, 367, 373, 376, 378, 381, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541, 548], "i0": 6, "i1": [108, 111, 381], "i2": [108, 111, 381], "i3": [108, 381], "i4": [72, 111], "i7": 113, "i8": [72, 111], "iaxi": 397, "iaxis_pad_width": 397, "icpx": 4, "icx": 4, "id": [17, 22], "ideal": 487, "ident": [3, 6, 17, 22, 24, 44, 93, 111, 124, 135, 144, 226, 233, 451, 528], "identifi": 111, "idx": 183, "ieee": 145, "ifft": [6, 126, 133, 134, 136, 137, 142], "ifft2": [6, 127, 132, 134], "ifftn": [6, 129, 132, 133], "ifftshift": [6, 10, 130, 134], "ignor": [33, 34, 92, 111, 155, 156, 163, 173, 174, 252, 253, 254, 258, 259, 265, 266, 269, 270, 271, 273, 275, 498, 526], "ihfft": [6, 131], "ii": [24, 113, 435], "iinfo": 429, "iinfo_object": 179, "ij": [113, 114, 256], "ijk": 113, "il": 114, "il1": 513, "il2": 513, "illustr": 212, "ilm": 113, "im": [222, 396], "imag": [6, 10, 21, 39, 108, 463, 464, 471, 541], "imaginari": [21, 39, 108, 137, 155, 156, 180, 186, 187, 194, 195, 210, 211, 213, 218, 253, 259, 264, 357, 463, 464, 491, 521], "implement": [3, 4, 6, 46, 126, 158], "impli": [111, 461], "implicit": 113, "import": [0, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 351, 353, 356, 357, 358, 360, 365, 367, 371, 376, 377, 378, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 437, 446, 450, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "improv": 113, "in1d": 6, "in_array1": 118, "includ": [4, 10, 17, 22, 23, 25, 38, 42, 43, 44, 45, 46, 47, 58, 83, 93, 99, 102, 105, 113, 114, 125, 164, 165, 167, 168, 173, 174, 187, 195, 223, 235, 247, 248, 254, 255, 269, 270, 271, 273, 275, 412, 456, 466, 487, 498, 525, 526], "include_initi": 93, "inclus": [412, 440, 443, 482], "increas": [105, 111, 121, 132, 137, 173, 397, 471, 525], "ind": [35, 105, 230, 407, 408, 513, 514, 517, 518], "independ": 207, "index": [4, 23, 33, 34, 35, 36, 75, 108, 111, 114, 124, 127, 133, 141, 148, 158, 181, 183, 189, 198, 256, 265, 266, 344, 356, 358, 381, 391, 407, 408, 461, 462, 470, 471, 481, 482, 493, 502, 503, 513, 517, 521, 522, 531, 534, 544], "index_arrai": [33, 34, 35], "indic": [6, 10, 24, 33, 34, 35, 36, 41, 60, 93, 98, 100, 101, 105, 108, 109, 111, 113, 114, 123, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 148, 158, 161, 173, 175, 183, 230, 231, 249, 250, 257, 265, 266, 340, 341, 342, 366, 369, 375, 384, 391, 399, 407, 408, 462, 481, 484, 485, 490, 493, 502, 503, 509, 513, 514, 517, 518, 521, 522, 528, 529, 531], "indices_or_sect": [41, 109, 175, 493, 529], "indirect": [35, 490], "individu": 422, "inequ": 392, "inexact": [152, 264, 272, 274], "inf": [9, 14, 15, 18, 26, 27, 28, 31, 32, 42, 43, 44, 48, 53, 54, 84, 106, 185, 188, 190, 191, 192, 193, 206, 217, 221, 234, 237, 238, 240, 253, 259, 264, 265, 266, 269, 271, 274, 405, 492, 494, 519], "infer": [44, 93, 248, 466, 470], "infin": [14, 15, 17, 22, 26, 27, 28, 29, 30, 32, 44, 48, 49, 52, 54, 154, 188, 190, 191, 192, 193, 260, 264, 269, 271, 274, 467, 520, 544], "infinit": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 206, 221, 487], "infj": [29, 30, 49, 52], "info": 6, "inform": [0, 45, 47, 108, 111, 131, 137, 139, 145, 354, 469, 541, 544], "initi": [19, 20, 93, 108, 115, 163, 252, 258, 269, 271, 272, 274, 361, 363, 368, 382, 404, 412, 500], "inner": [6, 24, 92, 113, 114, 216, 220, 250, 396], "innermost": [209, 217, 232, 251], "input": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 73, 74, 76, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 216, 217, 219, 221, 222, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 356, 365, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 434, 440, 456, 461, 463, 464, 465, 466, 467, 468, 469, 473, 474, 475, 476, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 519, 520, 521, 524, 525, 526, 527, 528, 529, 532, 533], "insert": [6, 23, 24, 33, 34, 98, 103, 105, 108, 113, 121, 167, 173, 235, 247, 265, 266, 269, 271, 375, 408, 470, 481, 482, 544], "instal": 2, "instanc": [3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 131, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 178, 181, 235, 236, 247, 249, 250, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 528, 532, 533], "instead": [36, 51, 103, 107, 108, 113, 121, 153, 167, 173, 174, 181, 189, 220, 235, 242, 247, 252, 258, 343, 391, 404, 462, 471, 500, 541], "instruct": 4, "insuffici": 59, "int": [9, 17, 22, 23, 24, 25, 33, 34, 35, 37, 38, 41, 46, 58, 59, 60, 69, 70, 78, 79, 90, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 108, 109, 111, 115, 116, 117, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 159, 160, 161, 162, 163, 164, 165, 167, 169, 173, 174, 175, 178, 179, 181, 183, 207, 209, 215, 218, 221, 229, 230, 231, 232, 233, 234, 235, 247, 248, 249, 252, 254, 255, 258, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 358, 365, 377, 386, 388, 394, 395, 397, 398, 399, 404, 407, 408, 412, 440, 443, 462, 466, 468, 470, 471, 475, 476, 477, 478, 489, 490, 493, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 521, 522, 523, 524, 525, 526, 528, 529, 532, 533, 541], "int16": 111, "int32": [0, 9, 46, 72, 111, 115, 116, 124, 159, 162, 164, 165, 178, 236, 272, 274, 394, 395, 412, 414, 422, 424, 429, 431, 437, 440, 456, 472, 500, 511, 532, 533], "int64": [0, 9, 72, 111, 272, 274, 472], "int8": [111, 404], "int_": 9, "int_0": 510, "int_t": 510, "intc": 9, "integ": [25, 37, 41, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 74, 93, 94, 95, 105, 108, 109, 111, 146, 149, 152, 153, 154, 158, 166, 173, 175, 179, 184, 198, 200, 201, 202, 218, 221, 229, 230, 232, 234, 248, 252, 254, 258, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 378, 386, 402, 403, 404, 407, 412, 440, 443, 448, 462, 466, 467, 468, 470, 473, 474, 475, 477, 478, 481, 482, 483, 493, 495, 498, 500, 502, 506, 508, 520, 521, 522, 524, 526, 529, 541], "integer_lik": [229, 506], "integr": [3, 4, 58, 93, 95, 152, 173, 248, 254, 255, 261, 270, 273, 275, 402, 403, 466, 498, 500, 510, 526], "intel": [3, 113], "intend": [108, 386], "intent": 152, "interchang": [108, 262, 383, 501], "interfac": [0, 159], "interior": 169, "intermedi": [94, 113, 114], "intern": [35, 412, 490], "interp": 6, "interpol": [137, 471, 487], "interpret": [2, 42, 43, 44, 50, 70, 83, 108, 111, 131, 137, 139, 159, 198, 249, 358, 391, 407, 541], "intersect1d": 6, "interv": [10, 14, 15, 25, 26, 27, 28, 30, 48, 52, 105, 121, 167, 235, 247, 412, 440, 442, 444, 445, 447, 455, 456, 501], "intp": [272, 274], "intrins": 541, "introduc": 475, "introduct": 10, "introselect": [108, 367, 398], "inv": [6, 206, 223], "invers": [10, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 201, 214, 223, 230, 231, 239, 458, 486, 488, 504, 505, 521], "invert": [6, 62, 64, 214, 223, 230], "invok": 541, "involv": 230, "io": [158, 236], "irfft": [6, 128, 131, 136, 138, 139, 140, 142], "irfft2": [6, 137, 139, 141], "irfftn": [6, 137, 138, 143], "irrespect": 35, "is_busdai": 6, "isalignedstruct": 111, "isbuiltin": 111, "isclos": [6, 18], "iscomplex": [6, 187, 194], "iscomplexobj": [6, 186, 195], "isdtyp": 6, "isfinit": [6, 190, 191, 192, 193, 264, 269, 271, 274], "isfortran": 6, "isin": 6, "isinf": [6, 188, 191, 192, 193, 264], "isn": 111, "isnan": [6, 188, 190, 192, 193, 264, 267, 268, 269, 271, 272, 274], "isnat": [6, 191], "isneginf": [6, 188, 190, 191, 193, 264], "isposinf": [6, 188, 190, 191, 192, 264], "isreal": [6, 186, 195], "isrealobj": [6, 187, 194], "isscalar": 6, "issu": 133, "issubdtyp": 6, "item": [6, 36, 108, 159, 160, 162, 521, 534], "item_dtyp": 111, "item_hasobject": 111, "item_is_point": 111, "items": [71, 108, 111], "iter": [6, 42, 43, 44, 108, 114, 147, 159, 160, 162, 163, 355, 356, 408, 461, 471, 503, 523, 544], "its": [4, 6, 10, 12, 13, 17, 22, 35, 58, 99, 108, 131, 137, 139, 145, 173, 174, 178, 210, 211, 212, 213, 220, 223, 231, 254, 270, 273, 275, 386, 399, 449, 461, 466, 470, 490, 498, 509, 510, 511, 526, 541], "itself": [51, 108, 111, 201, 264, 343, 541], "iu": 249, "iu1": [249, 517], "iu2": 517, "ix_": 6, "ixgrid": 198, "j": [38, 80, 81, 108, 113, 127, 129, 131, 132, 133, 134, 136, 137, 140, 141, 143, 152, 161, 180, 181, 199, 205, 210, 211, 221, 222, 229, 232, 240, 250, 264, 386, 396, 405, 408, 463, 491, 495, 503, 506], "j1": 199, "jame": 10, "ji": 113, "jil": 113, "jj": 24, "jk": [113, 114], "jl": 114, "john": [10, 221], "join": [77, 78, 79, 110, 176, 183, 479, 493, 497, 523, 530, 544], "jump": [96, 410], "just": [71, 77, 103, 111, 127, 133, 138, 140, 141, 183], "k": [10, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 99, 102, 106, 108, 113, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 165, 166, 170, 171, 172, 177, 180, 184, 188, 190, 191, 199, 200, 201, 202, 203, 204, 215, 224, 226, 227, 228, 229, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 259, 260, 263, 283, 343, 348, 389, 390, 392, 395, 401, 402, 403, 405, 410, 411, 461, 463, 465, 467, 473, 474, 477, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 506, 511, 512, 513, 514, 516, 517, 518, 519, 520, 524, 528, 531, 533, 548], "kaiser": 6, "kappa": 457, "keep": [50, 51, 108, 343, 521], "keepdim": [17, 19, 20, 22, 33, 34, 58, 90, 108, 217, 221, 234, 248, 252, 254, 255, 258, 265, 266, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 361, 362, 363, 368, 380, 382, 387, 404, 406, 408, 466, 498, 500, 503, 526], "kei": [3, 35, 108, 111, 147, 288, 333, 490], "kernel": 487, "key2": 111, "keyword": [10, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 83, 84, 88, 89, 92, 96, 97, 99, 100, 102, 106, 108, 115, 116, 119, 120, 122, 124, 125, 128, 142, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 177, 178, 181, 184, 200, 201, 202, 207, 209, 216, 222, 232, 233, 236, 238, 239, 240, 241, 242, 249, 250, 253, 257, 259, 260, 261, 263, 264, 348, 389, 390, 393, 394, 395, 397, 401, 402, 403, 405, 410, 411, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 465, 467, 470, 473, 474, 480, 484, 485, 486, 488, 492, 499, 504, 505, 511, 513, 517, 519, 520, 525, 528, 531, 532, 533, 541], "ki": 113, "kind": [35, 51, 72, 78, 79, 85, 93, 108, 111, 113, 145, 176, 220, 248, 250, 342, 343, 367, 378, 398, 466, 470, 479, 490, 497, 528, 530, 544], "kk": 24, "kl": [10, 113, 114], "known": [10, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 160, 450], "kron": 6, "kroneck": 199, "kth": [108, 367, 398], "kwarg": [12, 13, 14, 15, 16, 24, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 84, 88, 89, 96, 97, 106, 108, 117, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 161, 166, 170, 171, 172, 177, 184, 188, 190, 191, 200, 201, 202, 203, 204, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 253, 259, 260, 261, 263, 314, 345, 389, 390, 392, 397, 401, 402, 403, 405, 410, 411, 465, 467, 473, 474, 480, 484, 485, 486, 488, 492, 494, 495, 499, 504, 505, 519, 520], "l": [10, 41, 111, 205, 211, 213, 232], "la": [210, 212, 213], "label": 113, "laid": 47, "lam": 437, "lambda": 161, "lanczo": 487, "lapack": [210, 212], "laplac": 6, "laptop": 4, "larg": [10, 96, 111, 173, 223, 264, 410, 524, 548], "larger": [113, 126, 127, 129, 132, 133, 134, 136, 138, 139, 140, 141, 143, 145, 471, 508, 524], "largest": [10, 114, 140, 145, 153, 179, 215, 221, 260, 264, 467], "largest_singular_valu": 223, "last": [17, 22, 23, 24, 35, 60, 71, 92, 103, 104, 108, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 149, 167, 169, 182, 189, 209, 220, 228, 229, 232, 235, 247, 250, 356, 360, 397, 404, 461, 470, 475, 481, 490, 496, 500, 506, 523, 524, 528], "later": [397, 548], "latest": [4, 158], "latter": [14, 26, 28, 29, 30, 32, 48, 49, 52, 54, 155, 156, 253, 259, 408, 503], "layout": [4, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 106, 108, 113, 115, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 164, 165, 166, 170, 171, 172, 177, 180, 184, 188, 190, 191, 200, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 259, 260, 263, 348, 354, 389, 390, 392, 394, 395, 401, 402, 403, 405, 410, 411, 461, 463, 465, 467, 469, 470, 473, 474, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 519, 520, 528, 531, 532, 533, 534], "lcm": [6, 166], "ldexp": 6, "ldot": 10, "lead": [132, 133, 134, 267, 268, 515], "learn": [3, 4, 242], "least": [55, 56, 57, 58, 59, 101, 110, 111, 114, 121, 144, 150, 155, 156, 160, 187, 215, 224, 253, 259, 479, 530], "left": [10, 30, 33, 34, 37, 52, 63, 66, 90, 103, 105, 108, 150, 151, 202, 212, 217, 221, 234, 252, 258, 265, 266, 272, 274, 375, 404, 455, 473, 478, 481, 500, 510, 525], "left_shift": [6, 63, 66, 473], "leg": [177, 466], "legaci": 448, "legal": 183, "len": [98, 108, 111, 129, 130, 131, 134, 136, 137, 138, 139, 143, 181, 215, 252, 256, 257, 258, 306, 483, 525], "length": [25, 41, 58, 59, 60, 94, 95, 104, 117, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 163, 167, 169, 173, 176, 210, 227, 228, 229, 247, 252, 255, 256, 258, 267, 268, 397, 408, 415, 470, 472, 479, 481, 482, 483, 496, 503, 506, 507, 530], "less": [6, 94, 95, 108, 117, 170, 171, 173, 174, 204, 215, 223, 232, 267, 268, 272, 274, 360, 392, 404, 482, 484, 500, 508], "less_equ": [6, 117, 170, 171, 203, 392], "let": [233, 414, 470, 528], "level": [534, 541], "level_zero": [25, 38, 42, 43, 44, 45, 47, 83, 99, 102, 115, 116, 124, 128, 142, 159, 160, 161, 162, 164, 165, 167, 178, 235, 236, 247, 257, 393, 394, 395, 511, 525, 532, 533], "lexicograph": 521, "lexsort": [6, 35, 490], "li": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 475, 476], "lib": 71, "librari": [3, 4, 541], "light": 10, "like": [25, 38, 42, 43, 45, 47, 51, 55, 56, 57, 77, 98, 108, 110, 113, 115, 124, 139, 159, 160, 161, 162, 163, 164, 167, 178, 183, 235, 236, 247, 249, 343, 356, 365, 388, 394, 408, 412, 456, 461, 469, 470, 503, 532, 544], "likewis": [61, 65, 67], "limit": [3, 4, 12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 80, 81, 83, 84, 87, 88, 89, 91, 96, 97, 106, 108, 111, 115, 116, 117, 118, 119, 120, 122, 124, 125, 145, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 177, 178, 179, 184, 188, 190, 191, 200, 201, 202, 203, 204, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 269, 270, 271, 272, 273, 274, 275, 343, 345, 389, 390, 392, 394, 395, 398, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 437, 438, 440, 443, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 465, 467, 469, 473, 474, 480, 484, 485, 486, 487, 488, 490, 492, 494, 495, 498, 499, 500, 504, 505, 519, 520, 526, 528, 532, 533], "linalg": [6, 92, 103, 107, 113, 114, 250, 251, 396, 495, 506, 508, 527, 528], "line": [215, 236], "linear": [10, 82, 87, 215, 226, 247, 397, 534, 544], "linear_ramp": 397, "linspac": [0, 6, 25, 118, 167, 222, 247, 256, 396, 487, 510, 524], "linux": 4, "list": [3, 6, 9, 23, 38, 41, 42, 43, 44, 45, 47, 55, 56, 57, 68, 78, 79, 83, 99, 102, 108, 109, 110, 111, 113, 114, 130, 135, 144, 164, 165, 167, 169, 175, 176, 187, 195, 229, 235, 236, 247, 250, 255, 386, 399, 462, 468, 469, 471, 472, 479, 482, 493, 497, 506, 509, 522, 523, 525, 528, 529, 530, 531], "list_pickl": 111, "littl": 111, "ln": 247, "load": [6, 160, 236], "loadtxt": [6, 160], "loan": 221, "loc": [412, 423, 425, 426, 434, 458], "local": 4, "locat": [0, 4, 168, 192, 193, 249, 396, 423, 425, 481, 528], "log": [6, 122, 167, 225, 235, 238, 239, 240, 241, 247, 248, 427], "log10": [6, 237, 239, 240], "log1p": [6, 120, 122, 237, 238, 240], "log2": [6, 237, 238, 239, 242], "log_bas": 247, "logabsdet": 225, "logaddexp": [6, 93, 242, 248], "logaddexp2": [6, 241, 248], "logarithm": [93, 208, 225, 235, 237, 238, 239, 240, 241, 242, 248, 428, 544], "logic": [17, 22, 243, 244, 245, 246, 534, 544], "logical_and": [6, 61, 244, 245, 246], "logical_not": [6, 62, 64, 184, 243, 245, 246], "logical_or": [6, 65, 243, 244, 246], "logical_xor": [6, 67, 243, 244, 245], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 167, 235], "logsumexp": [93, 241, 242], "lomax": 435, "long": [111, 218], "longer": [131, 137, 548], "look": [390, 503], "loop": [24, 113], "loos": 112, "lorentz": 450, "lose": [131, 137, 139], "low": [71, 127, 129, 133, 134, 412, 440, 443, 456, 541], "lower": [99, 124, 173, 174, 197, 205, 211, 213, 249, 511, 512, 513, 514, 517, 518], "lowest": [58, 113, 114, 166, 200, 412, 440], "lstsq": 6, "m": [4, 10, 24, 91, 110, 111, 113, 124, 127, 129, 131, 133, 134, 137, 138, 139, 143, 149, 150, 151, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 232, 249, 250, 251, 255, 408, 477, 482, 502, 503, 511, 512, 513, 514, 516, 517, 518], "machin": [4, 10, 145, 179, 215, 242, 464], "machineri": 111, "made": [38, 43, 55, 111, 158, 199, 264, 470, 493], "magnitud": [12, 13, 84, 125, 405], "mai": [17, 21, 22, 51, 72, 76, 78, 79, 85, 95, 108, 111, 113, 114, 121, 127, 129, 131, 132, 133, 134, 136, 137, 140, 143, 169, 174, 176, 206, 210, 211, 215, 217, 221, 224, 242, 247, 250, 264, 270, 273, 275, 343, 376, 408, 461, 464, 471, 479, 487, 497, 507, 528, 530, 541], "main": [99, 100, 101, 102, 103, 124, 144, 178, 209, 213, 232, 249, 508, 511, 512, 513, 516, 517], "mainstai": 10, "maintain": [35, 105, 108, 111, 173, 375, 481, 490, 503], "major": [4, 42, 43, 44, 45, 47, 50, 51, 108, 343, 391, 461, 462, 469, 522], "make": [45, 47, 77, 111, 222, 256, 396, 469, 487, 521, 524], "manag": 0, "mandelbrot": [222, 396], "mani": [10, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 461, 541], "manipul": [3, 100, 534, 544], "mantissa": 201, "manual": [4, 111, 507], "mappingproxi": 111, "mask": [98, 111, 198, 249, 391, 400, 409, 502, 513, 517], "mask_func": 249, "mask_indic": [6, 513, 517], "mass": 173, "match": [12, 13, 43, 78, 79, 85, 90, 93, 104, 111, 158, 160, 169, 182, 229, 248, 250, 407, 408, 466, 497, 502, 503, 506, 531], "math": [10, 118], "mathbf": [233, 528], "mathemat": [221, 534, 544], "matlab": 157, "matmul": [6, 107, 224, 227, 527], "matplotlib": [256, 450], "matric": [144, 161, 181, 198, 208, 209, 210, 212, 214, 217, 219, 221, 223, 224, 225, 227, 228, 232, 250, 251, 256, 544], "matrix": [86, 91, 107, 108, 113, 182, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 232, 250, 251, 256, 360, 495, 516, 525, 527, 528, 534, 544], "matrix_norm": [6, 221], "matrix_pow": [6, 495], "matrix_rank": 6, "matrix_transpos": 6, "matter": 521, "max": [0, 6, 19, 33, 60, 76, 108, 145, 155, 156, 173, 174, 179, 215, 219, 221, 223, 253, 258, 259, 269, 345, 429, 503, 507, 524, 541], "max_arg": 0, "max_val": 0, "maxima": [155, 252, 253], "maximum": [0, 6, 19, 33, 34, 76, 108, 114, 155, 156, 252, 258, 259, 265, 266, 269, 271, 340, 361, 397, 402, 403, 406, 408, 524], "may_share_memori": 6, "md": 221, "mean": [3, 6, 10, 25, 38, 40, 42, 43, 44, 45, 46, 47, 51, 58, 83, 90, 99, 100, 102, 108, 113, 115, 116, 124, 127, 128, 129, 133, 134, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 169, 178, 181, 206, 221, 236, 249, 255, 257, 270, 273, 275, 343, 348, 356, 386, 393, 394, 395, 397, 412, 425, 427, 430, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 457, 458, 461, 470, 477, 498, 500, 511, 513, 517, 525, 526, 532, 533, 541], "meaningfulli": 541, "meant": 541, "median": [0, 6, 397], "meet": [38, 482], "memori": [3, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 106, 108, 111, 113, 115, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 170, 171, 172, 177, 180, 184, 188, 189, 190, 191, 200, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 255, 256, 259, 260, 263, 348, 354, 381, 389, 390, 392, 394, 395, 401, 402, 403, 405, 410, 411, 461, 463, 465, 467, 469, 470, 473, 474, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 519, 520, 528, 531, 532, 533, 534, 548], "mergesort": [35, 490], "mersenn": 412, "mesh": 198, "meshgrid": [6, 161, 181, 198, 257, 393], "met": [107, 220], "meta": 111, "metadata": 111, "method": [10, 17, 19, 20, 22, 35, 51, 83, 107, 108, 111, 147, 158, 160, 219, 223, 227, 251, 343, 348, 358, 365, 373, 376, 388, 391, 399, 412, 470, 483, 500, 502, 509, 534], "mgrid": [127, 129, 138, 141, 181, 198], "mgridclass": 257, "middl": [10, 103, 127, 129, 133, 134, 212, 255], "might": [113, 132, 133, 134], "min": [6, 20, 34, 76, 108, 145, 155, 156, 173, 174, 179, 206, 209, 215, 221, 224, 227, 228, 252, 253, 259, 271, 345, 503, 541], "min_scalar_typ": 6, "minima": [156, 258, 259], "minimum": [6, 20, 33, 34, 38, 60, 76, 108, 152, 155, 156, 252, 253, 258, 265, 266, 269, 271, 341, 363, 397, 402, 403, 406], "minlength": 60, "mintypecod": 6, "minu": [59, 122, 154, 260, 467, 520], "mirror": 397, "miscellan": [2, 534, 544], "mise": 457, "miss": 236, "mix": [216, 250], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 123, 467, 524], "mode": [75, 82, 87, 108, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 224, 344, 369, 384, 397, 407, 408, 450, 455, 462, 481, 502, 503], "model": [4, 414], "modf": 6, "modifi": [83, 103, 144, 255, 397, 449], "modul": [126, 168, 534], "modulu": [157, 260, 467], "moment": 86, "monoton": [105, 173], "moor": 223, "more": [0, 3, 4, 35, 38, 55, 56, 57, 110, 111, 113, 114, 122, 138, 141, 150, 151, 158, 160, 174, 176, 181, 201, 207, 209, 215, 216, 218, 219, 220, 222, 223, 227, 229, 232, 233, 239, 241, 471, 477, 497, 506, 510, 521, 524, 541, 548], "most": [3, 4, 23, 60, 103, 104, 111, 114, 126, 132, 264, 412, 448, 471, 496], "move": [108, 262, 367, 399, 475, 476, 509, 521], "moveaxi": [6, 399, 475, 476, 509, 523], "msg": 0, "mt": [108, 251], "mt19937": 448, "mu": [423, 427, 434, 457], "multi": [2, 108, 181, 198, 207, 257, 381, 393, 462, 521, 534], "multi_dot": [6, 107, 113, 114], "multi_index": 462, "multiarrai": 111, "multidimension": [173, 182, 531], "multinomi": 6, "multipl": [4, 10, 24, 33, 34, 35, 41, 58, 78, 79, 86, 92, 93, 109, 111, 113, 127, 129, 133, 134, 138, 139, 141, 143, 166, 174, 175, 176, 183, 198, 200, 207, 210, 211, 212, 213, 214, 220, 248, 252, 254, 258, 269, 270, 271, 273, 275, 461, 466, 479, 482, 490, 493, 497, 498, 510, 521, 523, 526, 529, 530, 534], "multipli": [6, 94, 113, 201, 212, 272, 404], "multivalu": [14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54], "multivari": 430, "multivariate_norm": 6, "must": [12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 74, 76, 77, 78, 79, 80, 81, 84, 88, 89, 90, 93, 94, 95, 96, 97, 104, 106, 107, 110, 119, 120, 121, 122, 125, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 150, 152, 153, 154, 155, 156, 157, 160, 163, 166, 169, 170, 171, 172, 173, 174, 176, 177, 180, 184, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 205, 207, 209, 220, 221, 222, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 389, 390, 392, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 463, 465, 466, 467, 468, 473, 474, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 492, 494, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 519, 520, 526, 528, 530, 531], "mx": 215, "mxn": [209, 217, 232, 251], "my_func": 24, "n": [0, 4, 10, 36, 41, 59, 95, 100, 101, 104, 105, 108, 109, 110, 111, 112, 121, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 153, 161, 169, 175, 178, 198, 209, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 249, 250, 251, 255, 256, 273, 275, 386, 397, 399, 400, 407, 408, 414, 429, 431, 441, 451, 481, 483, 493, 495, 498, 501, 502, 503, 506, 509, 510, 511, 512, 513, 514, 516, 517, 518, 525, 526, 528, 529, 541], "n1": 256, "n2": [236, 256], "n3": 256, "naiv": 114, "name": [0, 6, 24, 111, 223, 487], "namedtupl": 224, "nan": [9, 14, 15, 17, 18, 22, 26, 27, 28, 29, 30, 32, 33, 34, 39, 42, 43, 44, 48, 49, 52, 54, 106, 152, 155, 156, 185, 188, 190, 191, 192, 193, 238, 252, 253, 254, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 402, 403, 404, 492, 494, 498, 519, 521, 526, 544], "nan_to_num": 6, "nanargmax": [6, 33, 266], "nanargmin": [6, 34, 265], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 155, 156, 252, 253, 259, 271], "nanmean": [6, 254, 273, 275, 498, 526], "nanmedian": 6, "nanmin": [6, 155, 156, 253, 258, 259, 269], "nanpercentil": 6, "nanprod": [6, 404], "nanquantil": 6, "nanstd": [6, 254, 270, 275, 498, 526], "nansum": 6, "nanvar": [6, 254, 270, 273, 498, 526], "nat": 191, "nativ": 111, "native_cod": 111, "native_dt": 111, "natur": [225, 237, 238, 239, 240, 241, 242, 248], "nbad": 424, "nbyte": 108, "nd": [108, 358], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 545], "ndim": [6, 36, 38, 45, 47, 55, 56, 57, 91, 100, 103, 108, 111, 144, 199, 221, 227, 228, 251, 252, 258, 394, 399, 507, 509, 532], "ndindex": 24, "ndmin": 38, "ne": 487, "nearest": [37, 74, 146, 153, 154, 260, 467, 474, 478, 492, 520], "necessari": [4, 17, 22, 25, 38, 42, 43, 45, 47, 55, 85, 94, 95, 112, 123, 131, 137, 139, 144, 158, 167, 235, 247, 250, 254, 255, 267, 268, 270, 272, 273, 274, 275, 404, 471, 498, 500, 526, 548], "necessarili": [210, 212], "need": [4, 38, 43, 60, 103, 113, 168, 255, 469, 502, 503, 531], "needs_init": 111, "needs_pyapi": 111, "neg": [6, 10, 17, 22, 37, 59, 60, 84, 102, 103, 105, 108, 121, 124, 127, 129, 132, 133, 134, 137, 140, 149, 152, 163, 169, 173, 188, 190, 191, 192, 193, 218, 229, 264, 269, 271, 273, 274, 275, 376, 401, 402, 403, 404, 407, 408, 431, 462, 478, 498, 500, 502, 503, 506, 508, 526], "negat": 482, "negative_binomi": 6, "neginf": 264, "neither": [107, 155, 156, 216, 227, 250, 269, 271], "nest": [46, 110, 176, 479, 497, 523, 530], "nested_it": 6, "net": [155, 156, 253, 259], "never": 524, "new": [23, 24, 38, 51, 68, 69, 70, 77, 78, 79, 90, 93, 94, 95, 98, 103, 108, 110, 111, 112, 115, 116, 121, 155, 156, 158, 162, 163, 164, 165, 167, 176, 178, 183, 235, 247, 248, 249, 253, 255, 259, 262, 267, 268, 272, 274, 343, 373, 376, 386, 394, 395, 399, 466, 470, 471, 475, 476, 479, 493, 497, 507, 509, 523, 530, 531, 532, 533, 541], "new_dtyp": 111, "new_ord": 111, "new_shap": 471, "newaxi": 121, "newbyteord": 111, "newli": [12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 44, 48, 49, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 106, 108, 115, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 164, 165, 166, 170, 171, 172, 177, 180, 184, 188, 190, 191, 200, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 259, 260, 263, 343, 348, 389, 390, 392, 394, 395, 401, 402, 403, 405, 410, 411, 463, 465, 467, 473, 474, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 519, 520, 528, 532, 533], "newshap": 470, "next": [4, 145, 390], "nextaft": 6, "ngood": 424, "ni": [24, 256, 408, 502, 503], "nine": 414, "ninja": 4, "nj": [24, 408, 502, 503], "njm": 113, "nk": [24, 408, 502, 503], "nl": 10, "nlk": 113, "nn": 256, "noisi": 215, "non": [25, 36, 38, 42, 43, 44, 45, 46, 47, 51, 58, 60, 83, 90, 99, 100, 102, 105, 108, 115, 116, 123, 124, 128, 137, 140, 142, 148, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 173, 174, 178, 181, 186, 188, 198, 207, 229, 235, 236, 247, 249, 257, 264, 265, 266, 269, 271, 273, 275, 343, 348, 366, 376, 391, 393, 394, 395, 400, 402, 403, 412, 432, 433, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 498, 506, 511, 513, 517, 525, 526, 531, 532, 533], "nonc": [432, 433], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 183, 184, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 206, 215, 217, 219, 220, 221, 223, 227, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 358, 361, 362, 363, 367, 368, 369, 372, 373, 374, 375, 378, 379, 380, 382, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 473, 474, 475, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 508, 509, 510, 511, 513, 517, 519, 520, 521, 522, 524, 525, 526, 528, 530, 531, 532, 533, 541], "nonneg": 60, "nonzero": [6, 36, 90, 108, 148, 198, 531, 541], "nor": [155, 156, 212, 269, 271], "norm": [6, 10, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 206, 212, 215, 217, 234, 544], "normal": [6, 91, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 173, 210, 211, 224, 233, 242, 412, 427, 430, 441, 453, 462, 487, 528], "not_equ": [6, 117, 170, 171, 203, 204], "note": [12, 13, 14, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 50, 52, 53, 54, 59, 62, 63, 64, 66, 78, 79, 83, 92, 96, 98, 103, 105, 106, 108, 111, 113, 114, 121, 123, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 153, 155, 156, 159, 160, 161, 162, 163, 173, 181, 183, 184, 188, 201, 202, 207, 209, 210, 217, 221, 229, 234, 236, 247, 255, 260, 263, 273, 274, 275, 348, 373, 391, 397, 399, 400, 402, 403, 407, 410, 415, 417, 418, 428, 433, 461, 467, 469, 470, 471, 473, 477, 487, 490, 492, 498, 499, 501, 506, 507, 509, 510, 519, 521, 523, 524, 526, 527], "notic": [111, 137, 140], "notimplementederror": [12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 106, 108, 115, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 177, 178, 184, 188, 190, 191, 200, 201, 202, 203, 204, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 254, 258, 259, 260, 263, 269, 270, 271, 273, 274, 275, 343, 389, 390, 392, 394, 395, 401, 402, 403, 404, 405, 410, 411, 461, 465, 467, 469, 473, 474, 480, 484, 485, 486, 488, 490, 492, 494, 495, 498, 499, 500, 504, 505, 519, 520, 526, 528, 532, 533], "now": [17, 22, 45, 47, 86, 100, 212, 215, 249], "np": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 351, 353, 356, 357, 358, 360, 365, 367, 371, 376, 377, 378, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 437, 446, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "nr": 10, "nsamp": 424, "nsampl": 424, "nth": [229, 506], "nuc": [217, 221, 234], "nuclear": 221, "num": [0, 59, 111, 118, 167, 235, 247, 510, 524], "number": [10, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 44, 48, 49, 52, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 90, 100, 102, 104, 105, 108, 111, 112, 113, 114, 121, 124, 125, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 145, 146, 154, 159, 160, 162, 163, 167, 169, 173, 174, 178, 179, 184, 185, 186, 187, 188, 195, 198, 201, 202, 206, 214, 219, 221, 224, 225, 227, 230, 231, 235, 242, 247, 260, 264, 267, 268, 269, 271, 272, 273, 274, 275, 365, 374, 377, 388, 391, 397, 399, 400, 404, 405, 412, 414, 424, 448, 467, 468, 471, 473, 474, 475, 476, 477, 478, 485, 489, 492, 498, 501, 507, 509, 511, 520, 521, 525, 526, 541, 544], "number_of_dimens": [108, 365, 388], "numer": [3, 4, 10, 12, 13, 14, 15, 16, 18, 26, 27, 28, 29, 30, 32, 37, 48, 49, 52, 54, 80, 81, 84, 88, 89, 106, 111, 117, 119, 122, 132, 133, 134, 137, 139, 154, 155, 156, 170, 171, 180, 185, 188, 190, 191, 203, 204, 221, 222, 237, 238, 239, 240, 253, 259, 263, 389, 392, 401, 402, 403, 405, 463, 474, 478, 484, 485, 486, 488, 499, 504, 505, 519, 544], "numpi": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 352, 353, 356, 357, 358, 365, 371, 376, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 541, 544], "nvidia": 4, "nx": 256, "ny": 256, "nyquist": [10, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 142], "o": [4, 17, 22, 111], "obj": [33, 34, 35, 98, 111, 158, 173, 183], "object": [25, 38, 42, 43, 44, 45, 46, 47, 50, 51, 83, 99, 100, 102, 108, 111, 115, 116, 121, 124, 128, 142, 145, 147, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 179, 181, 183, 206, 211, 221, 229, 235, 236, 247, 249, 257, 343, 348, 358, 373, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 470, 506, 511, 513, 517, 525, 532, 533, 541], "observ": 86, "obsolet": 189, "obtain": [10, 103, 205, 209, 232, 391], "obviou": 10, "occupi": [145, 179], "occur": [23, 51, 72, 78, 79, 85, 98, 108, 113, 176, 183, 210, 250, 264, 343, 479, 497, 528, 530], "occurr": [33, 34, 60, 105, 173, 265, 266, 521], "odd": [10, 128, 131, 135, 136, 137, 139, 140, 142, 255, 397], "off": [25, 131, 136, 209, 210, 215, 232], "offset": [103, 108, 111, 159, 160, 209, 232, 249, 351, 385, 508, 513, 514, 517, 518], "often": [98, 172], "ogrid": [181, 198, 531], "ogridclass": 393, "oil": [414, 431], "old": 471, "omit": [412, 440], "onc": 214, "one": [3, 4, 33, 34, 35, 38, 40, 46, 55, 56, 57, 58, 82, 85, 87, 90, 98, 108, 111, 115, 117, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 150, 151, 152, 155, 156, 160, 164, 169, 174, 176, 178, 181, 183, 187, 198, 212, 217, 218, 221, 229, 234, 237, 238, 240, 249, 252, 253, 256, 257, 258, 259, 265, 266, 272, 274, 348, 356, 358, 359, 391, 393, 395, 400, 404, 431, 462, 476, 482, 490, 496, 497, 500, 502, 506, 510, 513, 514, 517, 518, 521, 532, 541], "oneapi": [4, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "onedpl": 4, "onemkl": [4, 210, 212], "ones": [6, 38, 45, 47, 58, 93, 98, 106, 108, 113, 115, 116, 117, 121, 124, 143, 164, 165, 177, 178, 199, 215, 219, 222, 248, 249, 267, 272, 395, 396, 399, 404, 466, 472, 476, 509, 511, 519, 532, 533], "ones_lik": [6, 38, 116, 165, 394, 533], "onli": [10, 17, 22, 25, 33, 34, 35, 38, 41, 42, 43, 45, 47, 51, 55, 58, 59, 83, 87, 91, 108, 111, 113, 114, 115, 116, 124, 130, 140, 144, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 173, 174, 181, 189, 205, 211, 213, 216, 219, 221, 222, 223, 224, 227, 235, 236, 247, 249, 250, 252, 254, 258, 264, 265, 266, 269, 270, 271, 272, 273, 275, 343, 358, 376, 378, 394, 395, 398, 400, 401, 404, 412, 434, 440, 456, 461, 469, 470, 487, 490, 498, 500, 503, 517, 521, 524, 526, 528, 531, 532, 533, 541], "open": [160, 181, 198, 235, 393, 412, 442, 444, 445, 447, 456, 501], "opencl": [25, 38, 42, 43, 44, 45, 47, 83, 99, 102, 115, 116, 124, 128, 142, 159, 160, 161, 162, 164, 165, 167, 178, 235, 236, 247, 257, 393, 394, 395, 511, 525, 532, 533], "oper": [10, 16, 24, 61, 62, 63, 64, 65, 66, 67, 106, 111, 113, 114, 117, 121, 144, 154, 157, 170, 171, 184, 202, 203, 204, 205, 243, 245, 250, 252, 258, 260, 263, 264, 265, 266, 389, 392, 401, 402, 403, 407, 467, 473, 499, 507, 519, 521, 523, 524, 528, 534, 544], "operand": [113, 114, 229, 231, 396, 506], "opposit": [10, 111, 123, 131, 136, 400, 461], "optim": [4, 113, 114, 173, 174], "option": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185, 188, 190, 191, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 213, 215, 217, 219, 220, 221, 223, 224, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 356, 386, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 548], "ord": [217, 221, 234], "order": [10, 12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 96, 97, 103, 105, 106, 108, 111, 113, 114, 115, 116, 117, 119, 120, 122, 124, 125, 127, 129, 132, 133, 134, 137, 139, 143, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 169, 170, 171, 172, 173, 177, 180, 184, 188, 189, 190, 191, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 217, 221, 227, 229, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 256, 259, 260, 262, 263, 283, 342, 343, 348, 356, 367, 370, 373, 375, 378, 386, 389, 390, 391, 392, 394, 395, 398, 399, 401, 402, 403, 405, 410, 411, 461, 462, 463, 465, 467, 469, 470, 471, 473, 474, 477, 480, 481, 484, 485, 486, 487, 488, 490, 492, 494, 495, 499, 504, 505, 506, 509, 519, 520, 521, 522, 525, 528, 531, 532, 533, 544], "ordin": [215, 226], "ordinari": [137, 182, 205], "orient": [92, 408, 503], "origin": [68, 103, 108, 131, 137, 139, 217, 221, 234, 256, 262, 272, 274, 470, 471, 475, 521], "ortho": [10, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143], "orthogon": [212, 224], "orthonorm": 224, "other": [40, 51, 68, 69, 70, 104, 108, 111, 132, 133, 134, 137, 139, 153, 161, 178, 210, 212, 220, 221, 262, 279, 280, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 343, 412, 456, 471, 476, 521, 528, 534, 544], "otherwis": [3, 12, 13, 14, 15, 16, 17, 18, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 96, 97, 99, 104, 106, 108, 111, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 177, 178, 182, 184, 188, 190, 191, 200, 201, 202, 203, 204, 215, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 258, 259, 260, 261, 263, 265, 266, 269, 270, 271, 272, 273, 274, 275, 343, 373, 389, 390, 392, 394, 395, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 473, 474, 480, 481, 484, 485, 486, 488, 490, 492, 494, 495, 496, 498, 499, 500, 504, 505, 508, 519, 520, 526, 528, 531, 532, 533], "otim": [229, 506], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 214, 216, 217, 220, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 344, 345, 348, 349, 350, 356, 358, 361, 362, 363, 368, 374, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 519, 520, 524, 525, 526, 527, 528, 530, 531, 532, 533], "outer": [6, 92, 103, 113, 114, 199], "output": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 88, 89, 93, 94, 95, 96, 97, 99, 100, 102, 104, 106, 107, 108, 111, 113, 114, 115, 116, 117, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 177, 178, 180, 181, 184, 185, 186, 188, 190, 191, 198, 200, 201, 202, 203, 204, 220, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 266, 267, 268, 270, 272, 273, 274, 275, 343, 348, 389, 390, 392, 393, 394, 395, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 467, 468, 470, 473, 474, 478, 480, 482, 484, 485, 486, 487, 488, 490, 492, 494, 495, 496, 498, 499, 500, 502, 504, 505, 507, 508, 511, 513, 517, 519, 520, 521, 524, 525, 526, 528, 531, 532, 533, 544, 548], "outsid": [173, 174], "over": [10, 17, 22, 24, 58, 60, 93, 94, 95, 107, 108, 113, 114, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 147, 149, 161, 167, 173, 174, 182, 207, 217, 221, 229, 233, 234, 235, 247, 248, 250, 252, 254, 256, 258, 267, 268, 269, 270, 271, 272, 273, 274, 275, 356, 404, 408, 412, 439, 444, 455, 456, 461, 466, 471, 498, 500, 502, 503, 506, 510, 524, 526, 528, 544], "overal": [127, 129, 133, 134, 138, 139, 141, 143], "overflow": 152, "overlin": [233, 528], "overrid": [92, 116, 165, 395, 533], "overview": 2, "overwrite_input": 255, "p": [10, 206, 215, 218, 414, 417, 422, 428, 431, 524], "pack": [103, 461, 544], "packag": [0, 3], "packbit": 6, "pad": [6, 111, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 471], "pad_valu": 397, "pad_width": 397, "padder": 397, "padding_func": 397, "page": [3, 544], "pair": [10, 114, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 207, 210], "parallel": [1, 3, 4, 9, 534], "paramet": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 353, 356, 358, 373, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "parameter": [412, 434, 456], "parametr": 510, "pareto": 6, "pars": [160, 236], "part": [3, 10, 14, 15, 21, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 108, 137, 155, 156, 180, 186, 187, 194, 195, 210, 211, 213, 249, 253, 259, 261, 357, 371, 397, 463, 464, 491, 513, 517, 520, 521, 541], "partial": [35, 255, 490], "particular": [111, 220], "particularli": 113, "partit": [6, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 490, 511, 513, 517, 525, 532, 533, 541], "pass": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 111, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 174, 178, 181, 198, 215, 236, 249, 257, 264, 348, 373, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 469, 511, 513, 514, 517, 518, 525, 528, 532, 533], "past": 71, "path": [4, 113, 114, 160, 236], "path_info": 114, "pathlib": 236, "pattern": 58, "pearson": 86, "penros": 223, "per": [113, 128, 142, 462], "percentil": [6, 255], "perf_count": 0, "perform": [17, 22, 43, 44, 60, 76, 104, 113, 127, 129, 132, 133, 134, 138, 139, 141, 143, 149, 205, 228, 404, 500], "perhap": 469, "period": [10, 524], "permit": 160, "permut": [6, 108, 113, 262, 386, 399, 509, 544], "permute_dim": [6, 509], "perpendicular": 92, "pg": 221, "phase": [10, 21, 524], "phase_deg": 524, "pi": [0, 9, 10, 14, 26, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 96, 97, 126, 410, 486, 487, 488, 504, 505, 510, 524, 548], "pickl": [160, 236], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 17, 18, 22, 23, 24, 37, 76, 78, 79, 94, 95, 98, 107, 108, 121, 123, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 158, 181, 183, 185, 250, 252, 254, 255, 258, 264, 267, 268, 270, 272, 273, 274, 275, 356, 376, 378, 386, 393, 397, 404, 407, 408, 449, 470, 471, 475, 478, 490, 497, 498, 500, 502, 508, 526, 541], "plane": 477, "platform": [94, 95, 111, 267, 268, 272, 274, 404, 500], "pleas": [0, 3, 41, 109, 113, 173, 175, 529, 541], "plot": 450, "plt": [256, 450], "plu": [237, 238, 240], "plugin": 4, "point": [10, 12, 13, 21, 25, 31, 37, 42, 43, 53, 58, 71, 84, 93, 111, 115, 116, 120, 124, 125, 126, 131, 132, 136, 137, 138, 139, 140, 145, 146, 152, 159, 160, 161, 163, 164, 165, 169, 178, 180, 201, 215, 218, 235, 236, 241, 242, 248, 254, 255, 264, 270, 273, 275, 390, 394, 395, 412, 441, 453, 463, 465, 466, 478, 480, 481, 487, 498, 510, 511, 526, 532, 533, 544], "pointer": [71, 111], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [12, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 37, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 80, 81, 84, 88, 89, 96, 97, 106, 108, 117, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 166, 170, 171, 172, 177, 180, 184, 188, 190, 191, 200, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 253, 259, 260, 263, 389, 390, 392, 401, 402, 403, 405, 410, 411, 412, 439, 463, 465, 467, 473, 474, 478, 480, 484, 485, 486, 487, 488, 492, 494, 495, 499, 504, 505, 519, 520], "portion": [173, 174], "posinf": 264, "posit": [6, 10, 17, 18, 22, 25, 37, 42, 43, 44, 59, 73, 84, 102, 103, 108, 121, 124, 125, 127, 129, 132, 133, 134, 137, 140, 142, 145, 152, 160, 185, 188, 190, 191, 192, 193, 205, 218, 230, 262, 264, 269, 271, 274, 367, 381, 389, 399, 414, 438, 475, 476, 478, 480, 482, 494, 495, 508, 509], "possess": 210, "possibl": [10, 50, 51, 56, 57, 60, 108, 109, 113, 114, 121, 155, 156, 169, 173, 175, 249, 343, 373, 399, 408, 461, 470, 493, 496, 501, 502, 503, 509, 529], "possibli": 46, "pow": [6, 403, 541], "power": [6, 10, 120, 126, 152, 218, 402, 495, 525], "pre": 174, "precis": [12, 13, 58, 94, 95, 111, 113, 145, 152, 180, 215, 232, 249, 267, 268, 272, 274, 404, 463, 500, 508], "predecessor": 524, "prefer": [75, 83, 98, 108, 348, 376, 391, 461], "prepend": [38, 104, 112, 507], "present": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 111, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 178, 181, 236, 249, 257, 269, 271, 274, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 511, 513, 517, 525, 532, 533], "preserv": [51, 55, 56, 57, 76, 108, 111, 113, 149, 150, 151, 152, 211, 212, 213, 255, 343, 461, 469, 508, 521], "press": [10, 221], "prevent": 113, "previou": [58, 397], "print": [0, 4, 44, 58, 82, 105, 111, 114, 412, 431, 436], "print_device_info": 0, "printabl": 114, "printopt": 6, "prior": 104, "prob1": [241, 242], "prob12": [241, 242], "prob2": [241, 242], "probabl": [173, 242, 255, 414, 422, 431], "proce": 541, "process": [10, 487], "processor": 113, "prod": [6, 94, 108, 230, 231, 272, 541], "produc": [10, 36, 111, 236, 408, 481, 503], "product": [86, 92, 94, 107, 108, 113, 114, 182, 198, 199, 207, 216, 220, 222, 226, 229, 230, 231, 233, 250, 263, 267, 272, 349, 396, 404, 506, 527, 528, 544], "program": [4, 153, 534, 544], "progress": [167, 235], "project": [4, 111, 233, 405, 528], "promot": [14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 61, 63, 65, 66, 67, 72, 73, 84, 88, 89, 96, 97, 106, 119, 120, 122, 152, 154, 155, 156, 157, 167, 177, 202, 235, 237, 238, 239, 240, 241, 242, 247, 250, 253, 259, 260, 263, 390, 402, 403, 410, 411, 465, 467, 472, 473, 480, 484, 486, 487, 488, 492, 494, 495, 499, 504, 505, 507, 519, 520, 528], "promote_typ": 6, "propag": [111, 155, 156, 252, 253, 258, 259, 267, 268, 269, 271, 272, 274], "proper": [155, 156, 210, 212], "properti": [10, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 211, 213, 224, 235, 236, 247, 249, 257, 277, 343, 348, 352, 354, 355, 357, 359, 360, 364, 365, 371, 376, 377, 381, 386, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533, 541], "proport": 487, "protocol": [46, 111, 158], "prototyp": 116, "provid": [0, 6, 10, 33, 34, 38, 59, 78, 79, 85, 93, 108, 109, 113, 114, 121, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 162, 173, 174, 176, 192, 193, 219, 223, 248, 265, 266, 269, 271, 272, 274, 412, 440, 443, 466, 469, 479, 497, 502, 510, 521, 528, 530, 531, 548], "pseudo": [223, 412], "ptp": 6, "pure": [10, 131, 137, 139, 140], "purpos": [36, 215, 221], "put": [6, 10, 108, 123, 131, 137, 139, 400, 408, 503, 541], "put_along_axi": [6, 407, 503], "putmask": [6, 407], "pval": 429, "py": 4, "pypi": 4, "pyplot": [256, 450], "pytest": 4, "python": [0, 2, 3, 46, 59, 108, 111, 157, 158, 260, 358, 467, 468, 541], "q": [212, 218, 224, 231, 255], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [21, 28, 30, 48, 52, 127], "quantil": 6, "quaternion": 218, "question": 99, "queue": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "quick": [2, 3], "quickest": 461, "quickli": [198, 548], "quicksort": [35, 490], "quotient": [31, 53], "r": [86, 92, 97, 224], "r1": 86, "r2": [86, 224], "r3": 86, "rad": 97, "rad2deg": [6, 96, 97, 524], "radian": [6, 14, 15, 21, 26, 27, 28, 30, 31, 48, 52, 53, 96, 97, 410, 524, 548], "radixsort": [35, 490], "rais": [12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 83, 84, 85, 88, 89, 93, 96, 97, 105, 106, 107, 108, 109, 115, 116, 117, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 175, 177, 178, 184, 188, 190, 191, 200, 201, 202, 203, 204, 218, 220, 221, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 258, 259, 260, 263, 265, 266, 269, 270, 271, 273, 274, 275, 343, 344, 360, 389, 390, 392, 394, 395, 401, 402, 403, 404, 405, 410, 411, 461, 462, 465, 466, 467, 469, 470, 473, 474, 480, 484, 485, 486, 488, 490, 492, 493, 494, 495, 496, 498, 499, 500, 504, 505, 519, 520, 526, 528, 529, 532, 533, 541], "ramp": 397, "rand": [6, 86, 114, 412, 442, 444, 445, 447], "randint": [6, 108, 358, 412, 443], "randn": [6, 149, 150, 151, 223, 224, 227, 231, 412, 497], "random": [86, 108, 114, 149, 150, 151, 212, 220, 223, 224, 227, 231, 358, 497, 534, 544], "random_integ": [6, 412, 440], "random_sampl": [6, 412, 439, 442, 445, 447], "randomli": 436, "randomst": 440, "ranf": 6, "rang": [0, 59, 105, 162, 173, 174, 229, 242, 399, 406, 407, 431, 436, 462, 468, 497, 506, 509, 524, 544], "rank": [121, 123, 161, 215, 219, 232, 397, 501], "rate": [128, 142], "rather": 391, "ratio": [0, 106, 154, 215, 519, 548], "ration": 544, "ravel": [6, 108, 123, 148, 221, 356, 396, 470, 541], "ravel_multi_index": [6, 522], "raveled_indic": 462, "raw": 224, "rayleigh": 6, "rcond": [215, 223], "re": [33, 34, 99, 137, 475], "read": [99, 103, 108, 111, 159, 160, 162, 163, 236, 356, 461, 470], "readonli": 111, "real": [6, 12, 13, 14, 15, 21, 25, 26, 27, 28, 29, 30, 31, 32, 39, 48, 49, 52, 53, 54, 73, 74, 84, 93, 108, 126, 129, 131, 136, 137, 138, 139, 140, 141, 143, 145, 153, 155, 156, 157, 177, 180, 186, 194, 195, 205, 210, 211, 212, 213, 219, 223, 224, 225, 227, 241, 242, 248, 253, 259, 260, 264, 273, 275, 414, 431, 464, 465, 466, 467, 480, 491, 492, 498, 520, 521, 526, 541, 544], "real_if_clos": [6, 21, 180, 463], "rearrang": [108, 367, 544], "reason": 139, "rebuild": 110, "recal": 111, "recent": [23, 60, 496], "recip": [4, 10], "reciproc": [6, 480, 494], "recommend": [113, 391, 507], "reconstruct": [111, 227, 521], "recov": 10, "reduc": [17, 22, 33, 34, 58, 224, 227, 248, 252, 254, 255, 256, 258, 265, 266, 269, 270, 271, 272, 273, 274, 275, 404, 466, 471, 498, 500, 526], "reduce_hypot": 177, "reduct": [17, 22], "redund": 140, "refer": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541], "reflect": [397, 541], "reflect_typ": 397, "reflector": 224, "regardless": [111, 211, 213, 529], "regular": 236, "rel": [18, 35, 108, 185, 209, 219, 232, 381, 475, 476, 490], "relat": 111, "relationship": 86, "relev": [111, 167, 235, 247], "rem": 157, "remain": [17, 22, 58, 114, 141, 143, 173, 248, 254, 255, 262, 270, 273, 275, 466, 470, 498, 526], "remaind": [6, 154, 157, 260, 402, 403], "remov": [24, 33, 34, 96, 98, 103, 108, 121, 137, 209, 232, 379, 404, 410, 496, 500, 528, 544], "reorder": [113, 149, 231, 262], "rep": 507, "repeat": [6, 108, 127, 129, 133, 134, 138, 139, 141, 143, 144, 210, 211, 212, 213, 256, 400, 471, 507, 510, 521, 541], "repeatedli": [24, 113], "repetit": [0, 468, 507], "replac": [3, 10, 24, 46, 76, 123, 264, 267, 268, 400, 408, 417, 470, 482, 541], "replic": 507, "repo": 4, "repr": 320, "repres": [10, 25, 38, 42, 43, 45, 46, 47, 58, 59, 61, 62, 64, 65, 67, 86, 111, 114, 132, 140, 158, 161, 167, 169, 181, 184, 225, 235, 247, 256, 275, 397, 412, 471, 515, 521, 541], "represent": [59, 61, 62, 63, 64, 65, 66, 67, 114, 145, 179, 181, 184, 202, 264, 390, 473, 492, 541], "request": 476, "requir": [4, 6, 38, 43, 44, 45, 47, 51, 108, 111, 113, 125, 181, 264, 343, 376, 397, 470, 471], "res_cpu": 99, "res_host": 99, "resampl": 487, "rese": 448, "reset": 541, "reshap": [0, 6, 16, 33, 34, 36, 55, 57, 58, 99, 100, 101, 103, 106, 107, 108, 109, 110, 113, 121, 123, 130, 135, 149, 157, 175, 181, 182, 183, 198, 199, 209, 216, 217, 221, 229, 232, 234, 249, 250, 252, 258, 263, 351, 356, 360, 376, 386, 397, 400, 436, 461, 469, 471, 475, 477, 499, 506, 508, 510, 513, 514, 517, 518, 519, 521, 523, 529, 541], "resid": [121, 125, 158], "residu": 215, "resiz": [6, 121, 541], "resolut": 145, "resolv": [93, 121, 248, 466], "resourc": 0, "respect": [16, 31, 53, 59, 61, 63, 65, 66, 67, 106, 108, 117, 152, 154, 157, 169, 170, 171, 202, 203, 204, 207, 241, 242, 243, 245, 246, 260, 263, 381, 392, 402, 403, 467, 473, 499, 519, 524], "rest": 41, "restor": 475, "restrict": 233, "result": [0, 4, 10, 17, 22, 31, 33, 34, 36, 38, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 76, 78, 79, 84, 86, 90, 93, 94, 95, 98, 106, 107, 111, 114, 116, 117, 122, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 146, 152, 154, 159, 160, 161, 162, 163, 165, 167, 170, 171, 173, 174, 181, 184, 188, 190, 191, 192, 193, 201, 202, 203, 204, 205, 209, 210, 216, 217, 221, 224, 229, 234, 235, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 258, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 391, 392, 395, 396, 402, 403, 404, 407, 412, 414, 444, 466, 470, 472, 473, 474, 476, 478, 481, 484, 485, 487, 493, 497, 498, 500, 502, 503, 506, 507, 510, 515, 519, 520, 521, 523, 526, 528, 531, 533, 541], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 72, 111, 544], "ret": 411, "retain": 470, "retriev": [103, 111, 209], "retstep": 235, "return": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 363, 365, 366, 367, 368, 370, 373, 374, 377, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 415, 434, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 541], "return_count": 521, "return_index": 521, "return_invers": 521, "reus": [158, 174], "revers": [103, 108, 144, 149, 150, 151, 209, 386, 399, 477, 509, 510, 523, 525], "rewrit": 215, "rfft": [6, 10, 128, 131, 136, 137, 138, 139, 141, 142, 143], "rfft2": [6, 138], "rfftfreq": [6, 128], "rfftn": [6, 126, 129, 139, 140, 141], "right": [10, 30, 52, 63, 66, 76, 92, 103, 105, 150, 151, 177, 202, 207, 210, 211, 212, 213, 220, 231, 249, 455, 466, 473, 481, 508, 510, 513, 517, 525], "right_shift": [6, 63, 66, 202], "rightmost": [173, 174, 231], "rint": [6, 37, 74, 146, 153, 478, 520], "rl": [222, 396], "roll": [6, 476], "rollaxi": [6, 475], "root": [6, 73, 177, 206, 465, 466, 480, 494, 495], "rot90": [6, 150, 151], "rotat": [150, 151, 477], "roughli": [111, 215], "round": [6, 25, 37, 74, 108, 131, 136, 146, 153, 154, 166, 210, 260, 467, 474, 520, 541, 544], "routin": [2, 534, 541], "row": [47, 51, 77, 78, 79, 86, 94, 95, 103, 108, 110, 124, 150, 151, 169, 176, 178, 181, 220, 227, 343, 391, 461, 462, 479, 493, 497, 511, 513, 521, 522, 529, 530], "row_stack": [6, 530], "rowvar": [86, 91], "rsqrt": [465, 494], "rtol": [18, 185, 219, 223], "rule": [14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 43, 45, 47, 48, 49, 52, 53, 54, 58, 61, 63, 65, 66, 67, 72, 73, 84, 85, 88, 89, 92, 95, 96, 97, 106, 119, 120, 122, 154, 155, 156, 157, 167, 177, 202, 207, 235, 237, 238, 239, 240, 241, 242, 247, 248, 250, 253, 254, 255, 259, 260, 263, 270, 273, 275, 390, 402, 403, 410, 411, 465, 466, 467, 472, 473, 480, 484, 486, 487, 488, 492, 494, 495, 498, 499, 500, 504, 505, 510, 519, 520, 526, 528], "run": [0, 4], "runtim": 4, "runtimewarn": [269, 271], "s1": [108, 111, 199, 381], "s10": 111, "s16": 111, "s2": [108, 111, 381], "s25": 111, "s3": [108, 381], "s_": 24, "safe": [51, 72, 78, 79, 85, 108, 113, 176, 250, 343, 479, 497, 528, 530], "sai": 470, "said": 231, "same": [4, 10, 12, 13, 16, 17, 18, 22, 23, 24, 31, 33, 34, 35, 36, 37, 39, 40, 45, 47, 50, 51, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 76, 77, 78, 79, 84, 86, 93, 94, 95, 103, 104, 105, 106, 107, 108, 110, 116, 117, 121, 123, 132, 133, 134, 139, 144, 146, 152, 154, 155, 156, 157, 158, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 180, 182, 184, 185, 192, 193, 194, 199, 200, 201, 202, 203, 204, 207, 209, 212, 218, 223, 224, 228, 229, 232, 241, 242, 243, 245, 246, 248, 252, 253, 254, 255, 258, 259, 260, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 373, 386, 390, 392, 395, 397, 400, 402, 403, 404, 408, 412, 434, 440, 456, 461, 463, 466, 467, 468, 470, 473, 475, 476, 479, 481, 482, 490, 496, 497, 498, 499, 500, 502, 503, 506, 508, 512, 514, 516, 518, 519, 522, 526, 527, 530, 533, 548], "same_kind": [51, 72, 78, 79, 85, 108, 113, 176, 250, 343, 479, 497, 528, 530], "sampl": [10, 128, 135, 137, 140, 142, 167, 169, 173, 235, 247, 408, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 503, 510, 513, 517, 534, 544], "sample_r": 142, "satisfi": [38, 43, 45, 47, 51, 108, 123, 214, 343, 400, 469, 482], "save": [6, 160, 255, 548], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [16, 18, 23, 31, 38, 39, 40, 42, 43, 45, 46, 47, 53, 61, 63, 65, 66, 67, 72, 83, 84, 85, 92, 99, 102, 104, 106, 107, 108, 111, 113, 114, 117, 123, 128, 142, 144, 152, 154, 155, 156, 157, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 177, 182, 183, 185, 187, 195, 196, 199, 200, 201, 202, 203, 204, 216, 226, 229, 235, 241, 242, 243, 245, 246, 247, 249, 250, 253, 256, 259, 260, 263, 353, 358, 388, 390, 392, 397, 400, 402, 403, 407, 408, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 437, 438, 440, 443, 446, 448, 452, 454, 455, 456, 457, 458, 459, 460, 464, 467, 473, 481, 482, 499, 502, 506, 510, 519, 520, 525, 527, 531, 541], "scale": [10, 114, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 167, 199, 224, 235, 247, 412, 419, 421, 423, 424, 425, 426, 434, 446, 451, 458], "scientif": 10, "scipi": 118, "scope": 4, "script": 4, "search": [114, 534, 544], "searchsort": [6, 105, 108, 173, 490, 541], "second": [16, 18, 31, 39, 40, 53, 58, 61, 63, 65, 66, 67, 71, 84, 92, 103, 106, 107, 111, 114, 117, 120, 127, 128, 129, 130, 133, 134, 137, 140, 142, 152, 154, 155, 156, 157, 166, 169, 170, 171, 173, 174, 175, 176, 177, 182, 185, 199, 200, 202, 203, 204, 207, 209, 216, 229, 232, 233, 241, 242, 243, 245, 246, 249, 250, 252, 253, 256, 258, 259, 260, 263, 392, 396, 402, 403, 467, 473, 477, 495, 499, 501, 506, 508, 519, 527, 528], "section": [4, 41, 111, 129, 134, 139, 143, 217, 234, 541], "see": [3, 37, 86, 111, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 158, 173, 215, 217, 234, 397, 429, 478, 513, 514, 517, 518, 521, 541], "seed": [6, 86, 108, 114, 358, 412], "seek": 160, "seldom": 152, "select": [6, 35, 85, 123, 252, 258, 490, 496, 502, 510, 534], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "self": [108, 111, 147, 278, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 355, 412], "semant": 173, "sens": 231, "sep": [160, 163], "separ": [10, 108, 111, 113, 160, 163, 174, 264, 373, 471], "sequenc": [41, 46, 55, 56, 57, 77, 78, 79, 82, 87, 109, 110, 113, 114, 115, 116, 127, 129, 133, 134, 137, 138, 139, 141, 143, 164, 165, 167, 173, 174, 175, 176, 181, 183, 198, 220, 229, 235, 247, 255, 262, 394, 395, 397, 400, 436, 449, 468, 469, 472, 479, 493, 497, 506, 510, 523, 529, 530, 532, 533], "sequenti": [87, 91, 118, 261, 272], "seri": [10, 137, 428], "serv": 523, "set": [10, 24, 33, 34, 35, 38, 51, 60, 75, 86, 90, 99, 100, 102, 105, 108, 111, 113, 115, 164, 173, 174, 178, 181, 217, 219, 221, 222, 223, 234, 235, 252, 258, 265, 266, 274, 333, 343, 344, 355, 376, 394, 395, 396, 397, 404, 482, 484, 485, 490, 500, 513, 517, 532, 533, 541], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 111], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 214, "shape": [4, 6, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 45, 48, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 104, 105, 106, 107, 108, 110, 111, 115, 116, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 149, 152, 153, 154, 155, 156, 157, 161, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 208, 209, 214, 215, 216, 217, 218, 220, 224, 225, 226, 227, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 365, 373, 377, 379, 386, 388, 389, 390, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 421, 424, 429, 430, 435, 439, 440, 441, 442, 443, 444, 445, 447, 452, 453, 459, 461, 462, 463, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 511, 512, 514, 516, 517, 518, 519, 520, 522, 523, 526, 528, 529, 530, 531, 532, 533, 534, 544], "share": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 511, 513, 517, 525, 532, 533], "shared_bin": 174, "shares_memori": 6, "shift": [10, 63, 66, 127, 129, 130, 134, 135, 202, 473, 475], "short": [487, 520, 528, 541], "shortcut": 397, "shorter": [131, 137], "shorthand": [12, 13, 16, 61, 62, 63, 64, 65, 66, 67, 106, 117, 154, 170, 171, 184, 202, 203, 204, 243, 245, 250, 260, 263, 389, 392, 401, 402, 403, 467, 473, 499, 519, 531], "should": [24, 33, 34, 38, 41, 51, 103, 105, 107, 108, 113, 114, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 157, 160, 168, 173, 183, 198, 215, 218, 229, 250, 262, 265, 266, 269, 271, 343, 375, 397, 429, 462, 470, 471, 481, 492, 502, 506, 508, 522, 524, 528, 541], "show": [9, 40, 111, 144, 177, 246, 256, 264, 267, 268, 269, 271, 274, 450], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [108, 169, 212, 375, 481], "sigma": [427, 434], "sign": [6, 10, 18, 59, 84, 111, 185, 208, 225, 260, 389, 401, 404, 467, 485, 500, 520], "signal": [10, 128, 131, 136, 137, 139, 142, 487, 524], "signatur": [249, 250, 397, 528], "signbit": [6, 484], "signific": 113, "significantli": 59, "signum": 484, "similar": [3, 42, 43, 108, 111, 167, 183, 207, 209, 216, 222, 232, 233, 235, 247, 249, 348, 376, 400, 412, 440, 513, 514, 517, 518], "simpl": [4, 246, 544], "simpli": [101, 108, 160, 173, 174, 201, 386], "sin": [0, 6, 28, 29, 48, 49, 88, 212, 256, 487, 488, 504, 510], "sinc": [6, 86, 108, 137, 210, 212, 378, 391, 523], "sine": [14, 15, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 486, 487, 488, 504, 505], "sing": 221, "singl": [9, 10, 35, 69, 70, 77, 86, 108, 113, 114, 169, 183, 220, 229, 252, 258, 358, 379, 404, 412, 431, 440, 441, 442, 443, 444, 445, 447, 453, 500, 506, 510, 528, 541], "singleton": [17, 22, 58, 121, 248, 254, 255, 269, 270, 271, 273, 275, 466, 496, 498, 526], "singular": [214, 215, 219, 221, 223, 227, 228], "sinh": [6, 15, 27, 29, 49, 89, 486, 505], "sinu": 487, "size": [0, 6, 25, 33, 34, 38, 41, 58, 60, 71, 78, 79, 87, 90, 91, 94, 95, 100, 105, 108, 109, 111, 114, 123, 126, 128, 132, 142, 160, 167, 169, 175, 176, 207, 209, 217, 221, 222, 224, 227, 229, 233, 234, 235, 247, 249, 252, 254, 258, 265, 266, 267, 268, 270, 272, 274, 358, 359, 376, 394, 400, 404, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 471, 475, 479, 493, 496, 497, 500, 506, 517, 523, 524, 528, 529, 530, 532, 541], "skip": 103, "slice": [24, 98, 123, 183, 265, 266, 269, 270, 271, 273, 275, 407, 408, 482, 503, 510, 517, 518, 541], "slogdet": [6, 208], "slower": [229, 506], "slowest": [108, 356, 461, 470], "small": [18, 122, 185, 215, 223, 239, 241, 242, 264, 517], "smaller": [104, 108, 126, 127, 129, 132, 133, 134, 136, 138, 139, 140, 141, 143, 145, 215, 260, 367, 400, 467, 524], "smallest": [145, 179, 221, 521], "smallest_norm": 145, "smat": 227, "so": [10, 14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 58, 111, 117, 131, 136, 152, 173, 183, 195, 229, 235, 242, 248, 254, 255, 256, 270, 273, 275, 450, 466, 498, 506, 507, 526], "softwar": 4, "solut": [215, 226, 471], "solv": [6, 215, 230, 231, 544], "some": [25, 111, 121, 123, 153, 182, 215, 397, 400, 524, 531, 541], "sometim": [172, 541], "somewhat": 218, "sophist": 218, "sort": [6, 24, 35, 41, 108, 109, 175, 227, 255, 342, 367, 399, 481, 491, 493, 503, 509, 510, 521, 529, 534, 541, 544], "sort_complex": 6, "sorter": [108, 375, 481], "sought": 206, "sourc": [4, 17, 18, 19, 20, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 75, 76, 77, 79, 82, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 173, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 388, 391, 394, 395, 396, 397, 398, 400, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 470, 471, 472, 475, 476, 477, 481, 482, 483, 489, 490, 491, 493, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "space": [6, 25, 128, 130, 142, 160, 167, 169, 235, 247, 510, 548], "spars": [181, 256], "speak": 221, "special": [2, 111, 118, 534, 544], "specif": [0, 4, 111, 161], "specifi": [17, 22, 23, 24, 25, 33, 34, 35, 37, 38, 42, 43, 44, 45, 47, 58, 59, 70, 72, 78, 79, 83, 93, 94, 95, 98, 99, 102, 103, 108, 113, 114, 115, 116, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 159, 160, 161, 162, 164, 165, 167, 169, 178, 189, 209, 211, 213, 221, 229, 230, 231, 232, 233, 234, 235, 236, 247, 248, 254, 255, 257, 267, 268, 270, 272, 273, 274, 275, 342, 351, 358, 393, 394, 395, 399, 400, 404, 407, 408, 412, 425, 435, 453, 461, 462, 466, 469, 471, 475, 476, 477, 478, 482, 489, 497, 498, 500, 502, 503, 506, 508, 509, 510, 511, 521, 523, 525, 526, 528, 532, 533], "spectrum": [10, 130, 131, 135, 136], "speed": 113, "speedup": 114, "spell": 391, "split": [6, 41, 78, 79, 109, 110, 175, 176, 479, 497, 523, 529, 530, 544], "spreadsheet": 153, "sqrt": [6, 10, 73, 108, 357, 371, 466, 480, 495], "squar": [6, 73, 177, 178, 205, 206, 210, 211, 212, 214, 215, 218, 225, 230, 231, 249, 273, 275, 416, 432, 465, 466, 480, 482, 494, 498, 514, 518, 525, 526], "squeez": [6, 108, 121, 541], "src": 85, "stabil": [35, 490], "stabl": [35, 490], "stack": [6, 77, 78, 79, 110, 176, 208, 209, 216, 217, 219, 223, 224, 225, 228, 232, 250, 251, 391, 479, 493, 503, 523, 530], "stai": 76, "stand": 169, "standard": [108, 145, 154, 157, 254, 260, 270, 273, 275, 358, 380, 412, 427, 434, 441, 450, 451, 452, 453, 454, 467, 498, 526, 541, 544], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 412, 441], "standard_t": 6, "start": [2, 3, 25, 45, 47, 114, 128, 132, 142, 159, 167, 235, 247, 249, 471, 476, 513, 517], "start_tim": 0, "stat_length": 397, "state": 412, "statist": [397, 534, 544], "std": [6, 108, 254, 270, 273, 275, 526, 541], "stdev": [412, 453], "step": [4, 25, 114, 167, 172, 235, 247], "sticki": 111, "still": [58, 175, 221, 529], "stop": [25, 167, 235, 247], "store": [146, 167, 192, 193, 232, 235, 242, 247, 250, 396, 528], "str": [44, 46, 59, 78, 79, 111, 113, 114, 160, 163, 176, 236, 334, 397, 469, 479, 497, 515, 530], "str_": 111, "straightforward": 181, "strictli": 221, "stride": [50, 51, 108, 343], "string": [25, 38, 42, 43, 44, 45, 46, 47, 51, 59, 61, 62, 63, 64, 65, 66, 67, 83, 99, 100, 102, 108, 111, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 184, 202, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 397, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 473, 511, 513, 515, 517, 525, 532, 533, 541], "string_repr": 114, "stringio": 236, "strongli": [4, 507], "struct": 111, "structur": [111, 236], "student": 454, "style": [51, 108, 343, 391, 397, 461, 462, 522], "sub": [41, 78, 79, 98, 103, 109, 111, 113, 175, 176, 231, 232, 479, 493, 497, 508, 511, 523, 529, 530], "subarrai": [98, 111, 181, 521], "subclass": [43, 469], "subdiagon": [209, 232], "subdivid": 111, "subdtyp": 111, "subject": 4, "subok": [12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 38, 48, 49, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 80, 81, 83, 84, 88, 89, 96, 97, 106, 108, 116, 117, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 165, 166, 170, 171, 172, 177, 184, 188, 190, 191, 200, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 259, 260, 263, 343, 389, 390, 392, 395, 401, 402, 403, 405, 410, 411, 465, 467, 473, 474, 480, 484, 485, 486, 488, 492, 494, 495, 499, 504, 505, 519, 520, 528, 533], "subscript": [113, 114], "subset": [3, 169, 496, 544], "subtract": [6, 397], "subtyp": 461, "succeed": 112, "success": [44, 414, 422, 431], "suffici": 59, "sugar": [101, 514, 518], "suggest": 103, "suit": 4, "suitabl": [36, 108, 358, 386, 408, 471, 481, 503], "sum": [0, 3, 4, 6, 10, 16, 58, 60, 93, 95, 99, 102, 103, 104, 107, 108, 113, 132, 173, 177, 182, 206, 215, 216, 221, 229, 230, 232, 241, 242, 248, 250, 267, 268, 274, 350, 385, 414, 429, 431, 466, 506, 508, 510, 528, 541, 544], "sum_": [10, 221, 233, 528], "sum_along_diagon": 508, "sum_of_weight": 58, "summari": 534, "summat": [107, 113, 114, 182, 229, 231, 250, 396, 506, 528], "superdiagon": [209, 232], "suppli": [131, 136, 220, 397, 412, 441], "support": [3, 4, 9, 12, 13, 14, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 80, 81, 83, 84, 87, 88, 89, 91, 96, 97, 106, 108, 111, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 177, 178, 183, 184, 188, 190, 191, 200, 201, 202, 203, 204, 207, 209, 216, 222, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 269, 270, 271, 272, 273, 274, 275, 343, 376, 389, 390, 392, 394, 395, 398, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 467, 469, 473, 474, 480, 484, 485, 486, 490, 492, 494, 495, 498, 499, 500, 504, 505, 519, 520, 526, 528, 532, 533, 548], "sure": 469, "surnam": 111, "surpris": [132, 133, 134], "svd": [6, 206, 214, 219, 223, 228], "svdval": 6, "swap": [111, 127, 130, 501], "swapax": [6, 108, 262, 541], "swapped_cod": 111, "swapped_dt": 111, "sy": 111, "sycl": [0, 3, 25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "sycl_context": 108, "sycl_devic": 108, "sycl_queu": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "sycldevic": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "syclqueu": [25, 38, 42, 43, 44, 45, 46, 47, 51, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 158, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 343, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 511, 513, 517, 525, 532, 533], "symmetr": [131, 137, 139, 140, 205, 210, 211, 212, 213, 219, 223, 227, 397], "symmetri": [10, 126, 131, 136, 137, 140], "syntact": [101, 514, 518], "syntax": 541, "sys_is_l": 111, "system": [3, 4, 59, 226], "t": [10, 78, 79, 91, 108, 111, 131, 189, 205, 210, 212, 215, 386, 391, 454, 461, 510], "t1": 548, "tabl": [2, 9, 217, 234, 534], "tack": 111, "take": [6, 77, 108, 123, 198, 249, 400, 408, 461, 470, 481, 482, 487, 503, 521, 524, 541, 548], "take_along_axi": [6, 33, 34, 35, 75, 408, 502], "taken": [58, 103, 104, 112, 114, 131, 137, 138, 139, 140, 141, 143, 172, 173, 250, 273, 275, 482, 498, 508, 511, 513, 517, 526, 527, 528], "tall": 144, "tan": [6, 28, 30, 31, 32, 48, 52, 53, 54, 88, 486, 505], "tangent": [14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 486, 488, 504, 505], "tanh": [6, 15, 27, 32, 54, 89, 488, 504], "target": [51, 72, 108, 343, 407], "target_devic": 108, "tau": 224, "tbb": 4, "tempfil": 160, "temporari": [160, 548], "temporaryfil": 160, "ten": 422, "tensor": [46, 108, 113, 114, 158, 229, 230, 231, 265, 266, 269, 271, 272, 406, 506], "tensordot": [6, 107, 113, 182, 230, 231, 250, 396], "tensorinv": [6, 231], "tensorsolv": [6, 230], "term": [10, 16, 106, 114, 126, 127, 129, 132, 133, 134, 137, 140, 263, 499, 519], "test": [0, 2, 17, 18, 22, 117, 170, 171, 186, 188, 190, 191, 192, 193, 203, 204, 272, 391, 392, 414, 541, 544], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [159, 160, 162, 163, 236], "th": [95, 99, 102, 104, 108, 112, 124, 169, 181, 255, 386, 393, 399, 482, 509, 512, 514, 516, 518], "than": [24, 38, 63, 66, 94, 95, 108, 109, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 150, 151, 154, 161, 170, 171, 173, 174, 176, 202, 203, 204, 215, 219, 223, 224, 229, 232, 267, 268, 272, 274, 360, 367, 391, 397, 400, 404, 471, 473, 482, 484, 496, 497, 500, 506, 508, 520, 524, 548], "thei": [18, 40, 111, 185, 189, 201, 212, 215, 229, 479, 481, 506, 510, 513, 517, 524, 525, 530, 541], "them": [77, 219, 223, 541], "theor": 210, "theoret": 114, "therefor": [61, 67, 126, 140, 161, 211, 213, 471], "theta": 510, "thi": [10, 12, 13, 19, 20, 23, 24, 25, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 76, 78, 79, 83, 86, 90, 93, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 150, 151, 152, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 174, 176, 187, 189, 195, 198, 207, 209, 211, 213, 215, 216, 217, 220, 221, 222, 225, 228, 232, 233, 234, 235, 236, 239, 241, 242, 247, 248, 249, 250, 252, 255, 258, 260, 262, 264, 265, 266, 269, 271, 272, 274, 343, 348, 353, 356, 358, 367, 373, 386, 391, 397, 400, 404, 407, 408, 445, 447, 461, 466, 467, 469, 470, 471, 476, 477, 479, 490, 497, 500, 502, 503, 507, 510, 514, 518, 521, 523, 524, 525, 528, 530, 531], "thing": 502, "think": [397, 470], "third": [77, 78, 79, 92, 109, 110, 127, 176, 229, 479, 493, 497, 506, 530], "those": [10, 24, 76, 86, 98, 218, 408], "though": 132, "thousand": 422, "three": [55, 56, 57, 121, 218, 229, 249, 412, 448, 506, 521], "threshold": 219, "through": [43, 111, 174, 198, 210, 212, 215, 249, 469, 541], "throw": 429, "thu": [10, 131, 137, 139, 507], "tile": [6, 468, 544], "time": [0, 10, 16, 18, 31, 39, 40, 53, 61, 63, 65, 66, 67, 84, 104, 106, 107, 117, 127, 129, 131, 133, 134, 136, 138, 139, 141, 143, 152, 154, 155, 156, 157, 166, 170, 171, 172, 177, 182, 183, 185, 191, 199, 200, 201, 202, 203, 204, 215, 219, 223, 229, 241, 242, 243, 245, 246, 253, 259, 260, 263, 390, 392, 397, 402, 403, 414, 429, 467, 473, 477, 487, 499, 503, 506, 507, 519, 521, 527], "time_dpnp": 0, "time_numpi": 0, "timedelta": 111, "timeit": 113, "timestep": 128, "tini": 145, "titl": 111, "tm": 157, "to_begin": 112, "to_devic": [6, 108], "to_end": 112, "tobyt": 6, "todo": 432, "tofil": [6, 160], "togeth": [18, 78, 79, 111, 132, 185, 198, 497, 531], "tol": [219, 430, 464], "toler": [18, 39, 185, 219, 464], "tolist": 6, "too": [4, 127, 129, 133, 134, 138, 139, 141, 143, 531], "toolkit": 3, "tostr": 6, "total": [6, 90, 94, 108, 364, 471, 489, 498, 526], "toward": [37, 74, 146, 153, 154, 173, 174, 260, 390, 467, 474, 477, 478, 520], "trace": [6, 99, 102, 103, 108, 113, 541], "traceback": [23, 60, 496], "trail": 515, "transfer": 108, "transform": [114, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 534, 544], "transpos": [6, 36, 86, 108, 113, 189, 205, 212, 251, 262, 277, 360, 399, 541, 544], "trapezoid": [6, 95, 500], "trapz": 6, "treat": [18, 86, 98, 131, 137, 139, 160, 169, 185, 211, 213, 215, 220, 236, 255, 267, 268, 272, 274, 404, 408, 481, 503, 507, 521, 524, 541], "tri": 6, "trial": 414, "triangl": [99, 177, 249, 466, 511, 512, 513, 514, 516, 517, 518], "triangular": [6, 205, 211, 213, 224, 249, 513, 514, 517, 518], "trigonometr": [14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 88, 89, 486, 488, 504, 505, 544], "tril": [6, 99, 249, 511, 513, 514, 517], "tril_indic": [6, 249, 514, 517], "tril_indices_from": [6, 518], "trili": 514, "trili1": 514, "trim": [127, 129, 133, 134, 138, 139, 141, 143, 515], "trim_zero": 6, "triu": [6, 99, 249, 511, 513, 517, 518], "triu_indic": [6, 249, 513, 518], "triu_indices_from": [6, 514], "triui": 518, "triuim1": 518, "trivial": [210, 503], "true": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 105, 106, 108, 111, 113, 114, 117, 119, 120, 121, 122, 123, 125, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 166, 167, 170, 171, 172, 173, 177, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 217, 219, 221, 223, 224, 226, 227, 229, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 281, 338, 339, 343, 348, 361, 362, 363, 368, 380, 382, 387, 389, 390, 391, 392, 400, 401, 402, 403, 404, 405, 408, 410, 411, 417, 465, 466, 467, 469, 470, 473, 474, 480, 482, 484, 485, 486, 488, 490, 492, 494, 495, 498, 499, 500, 503, 504, 505, 506, 510, 519, 520, 521, 523, 525, 526, 528, 531], "true_divid": [6, 106], "trunc": [6, 37, 74, 146, 153, 474, 478], "truncat": [37, 74, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 146, 153, 450, 474, 478, 520], "trust": [265, 266], "truth": [61, 62, 64, 65, 67, 117, 170, 171, 184, 203, 204, 243, 244, 245, 246, 392, 541, 544], "try": [4, 44], "tukei": 10, "tup": [77, 110, 176, 479, 530], "tupl": [17, 22, 23, 24, 33, 34, 38, 42, 43, 44, 45, 47, 58, 69, 70, 71, 83, 90, 93, 99, 100, 101, 102, 108, 111, 114, 121, 130, 135, 149, 158, 161, 164, 165, 167, 169, 173, 174, 176, 181, 187, 195, 198, 199, 221, 224, 231, 234, 235, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 269, 270, 271, 272, 273, 274, 275, 358, 376, 386, 391, 393, 397, 399, 404, 462, 466, 468, 470, 471, 475, 479, 483, 496, 497, 498, 500, 507, 509, 513, 514, 517, 518, 522, 523, 525, 526, 528, 530, 541], "turn": 77, "twister": 412, "two": [10, 18, 39, 55, 56, 59, 61, 62, 64, 65, 67, 82, 86, 87, 92, 102, 103, 104, 107, 108, 111, 113, 114, 121, 126, 127, 129, 132, 133, 134, 137, 138, 139, 141, 143, 155, 156, 169, 182, 184, 185, 199, 201, 209, 211, 215, 217, 220, 222, 226, 228, 229, 232, 243, 245, 246, 250, 251, 252, 253, 255, 258, 259, 262, 269, 271, 360, 367, 383, 396, 397, 412, 441, 461, 474, 477, 478, 482, 501, 506, 508, 513, 514, 517, 518, 527], "type": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 352, 356, 358, 365, 373, 377, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 544], "type_nam": 0, "typeerror": [58, 60, 85, 108, 158, 201, 376], "typenam": 6, "typestr": 111, "typic": [18, 131, 185, 481, 541], "u": [111, 205, 211, 213, 227, 249, 272, 274, 521], "u1": [111, 159, 160], "u16": 111, "u4": 72, "u8": 111, "ufunc": [2, 534, 541], "uint64": 111, "uint8": [111, 159, 160], "uk": 10, "un": 111, "unalt": 397, "unari": 541, "unchang": 143, "undefin": [21, 108, 255, 367, 397], "under": [217, 234], "underli": [61, 65, 67, 461, 470], "undo": [10, 134], "undocu": 111, "unexpect": [272, 274], "unicod": 111, "uniform": [6, 111, 169, 173, 174, 247, 412, 439, 442, 444, 445, 447], "uniformli": [247, 412, 456], "uniniti": [38, 115, 116, 164, 394, 532], "union1d": 6, "uniqu": [6, 58, 60, 93, 105, 111, 248, 254, 262, 270, 273, 275, 397, 466, 468, 498, 526], "unique_al": 6, "unique_count": [6, 521], "unique_indic": 521, "unique_invers": [6, 521], "unique_valu": 6, "unit": [108, 128, 142, 198, 210, 218, 225, 381], "unitari": [10, 169, 224, 227], "uniti": 173, "univ": 10, "univers": [2, 221, 534, 541], "unless": [17, 22, 51, 94, 95, 108, 113, 173, 210, 219, 221, 247, 267, 268, 272, 274, 343, 404, 500, 521, 528], "unlik": [108, 142, 373, 376], "unmodifi": 174, "unpackbit": 6, "unravel": 522, "unravel_index": [6, 33, 34, 462], "unraveled_coord": 522, "unsaf": [51, 72, 78, 79, 85, 108, 113, 176, 250, 343, 479, 497, 528, 530], "unscal": 10, "unsign": [111, 404, 500], "unspecifi": 470, "unstack": [6, 176, 479, 497, 530], "unsupport": [12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 84, 88, 89, 96, 97, 106, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 158, 166, 172, 177, 184, 200, 201, 202, 238, 239, 240, 241, 242, 253, 259, 260, 261, 263, 389, 390, 401, 402, 403, 405, 410, 411, 465, 467, 473, 474, 480, 484, 485, 486, 488, 492, 499, 504, 505, 519, 520], "until": [114, 475, 476], "unwrap": [6, 96, 410], "up": [4, 10, 111, 113, 151, 503, 514, 521], "upcast": 38, "updat": 4, "uplo": [211, 213], "upon": [108, 381], "upper": [99, 124, 173, 174, 205, 211, 213, 224, 249, 511, 513, 514, 516, 517, 518], "url": 4, "us": [4, 10, 16, 23, 24, 25, 31, 36, 38, 42, 43, 44, 45, 46, 47, 50, 51, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 76, 78, 79, 83, 86, 92, 94, 95, 98, 99, 100, 102, 103, 106, 108, 111, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 153, 154, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 178, 181, 182, 184, 189, 198, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 219, 220, 221, 223, 229, 232, 235, 236, 242, 243, 245, 247, 249, 250, 252, 254, 255, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 283, 343, 348, 356, 376, 389, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 408, 412, 415, 417, 418, 428, 433, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 453, 456, 461, 464, 467, 468, 469, 470, 471, 473, 475, 481, 482, 484, 487, 491, 498, 499, 500, 502, 503, 506, 507, 508, 510, 511, 513, 514, 517, 518, 519, 521, 522, 525, 526, 528, 531, 532, 533, 541, 548], "usabl": 152, "usag": [3, 4, 128, 142], "use_getitem": 111, "use_setitem": 111, "user": [111, 264, 397], "usm": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 496, 511, 513, 517, 525, 532, 533], "usm_ndarrai": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 353, 388, 389, 390, 391, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533], "usm_typ": [25, 38, 42, 43, 44, 45, 46, 47, 83, 99, 100, 102, 108, 115, 116, 124, 128, 142, 159, 160, 161, 162, 163, 164, 165, 167, 178, 181, 235, 236, 247, 249, 257, 348, 393, 394, 395, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 511, 513, 517, 525, 532, 533], "usual": [100, 108, 111, 216, 250, 376], "util": 534, "v": [82, 99, 102, 108, 111, 210, 211, 233, 255, 375, 407, 481, 528], "v0": 6, "v10": 111, "v13": 6, "v2": 6, "v_sort": 255, "val": [108, 144, 147, 333, 369, 400], "valid": [87, 121, 249, 501, 513, 514, 517, 518], "valu": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 104, 105, 106, 108, 111, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 131, 132, 137, 139, 140, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 183, 184, 185, 187, 188, 190, 191, 194, 195, 198, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 218, 219, 221, 223, 225, 226, 227, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 279, 280, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 341, 343, 345, 348, 353, 355, 367, 369, 376, 389, 390, 391, 392, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 422, 439, 440, 456, 463, 465, 466, 467, 468, 469, 470, 473, 474, 475, 478, 480, 481, 482, 484, 485, 486, 487, 490, 492, 494, 495, 498, 499, 500, 502, 503, 504, 505, 508, 510, 513, 517, 519, 520, 521, 524, 526, 528, 531, 532, 533, 541, 544], "value2": 111, "valueerror": [23, 38, 43, 44, 108, 158, 221, 265, 266, 360, 470, 493, 496], "van": 221, "vander": 6, "vandermond": 525, "var": [6, 108, 254, 270, 273, 275, 498, 541], "vararg": 169, "vari": [10, 17, 21, 22, 103, 114, 127, 129, 131, 132, 133, 134, 136, 137, 140, 143, 161, 181, 189, 206, 209, 210, 211, 215, 217, 221, 264, 270, 273, 275, 461, 464, 487], "variabl": [60, 86, 91, 215, 226], "varianc": [108, 254, 270, 273, 275, 387, 498, 526, 544], "variou": [221, 487, 548], "vdot": [6, 107, 233, 250, 528], "vecdot": [6, 527], "vector": [92, 113, 161, 181, 182, 198, 206, 207, 216, 219, 220, 221, 222, 227, 228, 233, 234, 250, 255, 256, 396, 397, 527, 528, 544], "vector_norm": [6, 221], "vendor": 4, "veri": [3, 10, 18, 183, 185, 222, 256, 264, 396], "verif": 0, "verifi": 205, "version": [4, 90, 92, 103, 108, 111, 148, 250, 255, 355, 391, 396, 462, 508, 522, 527, 528], "vertic": [77, 78, 79, 103, 110, 144, 149, 150, 176, 209, 477, 479, 493, 497, 529, 530], "vetterlin": 10, "vh": 227, "via": 137, "view": [6, 41, 55, 56, 57, 68, 99, 103, 108, 109, 121, 127, 129, 133, 134, 138, 139, 141, 143, 149, 150, 151, 175, 256, 262, 277, 360, 373, 386, 399, 408, 461, 462, 470, 477, 493, 496, 501, 509, 522, 529], "violat": 85, "void": 111, "void640": 111, "von": 457, "vonmis": 6, "vsplit": [6, 78, 79, 493], "vstack": [6, 77, 78, 79, 110, 176, 215, 479, 493, 497], "w": [10, 58, 60, 210, 211, 212, 213, 218, 469], "wa": [10, 93, 111, 220, 248, 269, 271, 273, 275, 412, 453, 466, 470, 498, 526], "wai": [3, 4, 10, 108, 114, 126, 132, 133, 134, 139, 160, 229, 367, 506], "wald": 6, "walk": 111, "want": [4, 189, 503], "warn": [111, 265, 266, 430, 471], "we": [83, 86, 100, 103, 114, 144, 215, 249, 408, 503, 510], "weibul": [6, 460], "weight": [58, 60, 91, 173, 174, 254, 270, 500], "well": [111, 113, 160, 173, 174, 404, 414, 431, 450], "were": [78, 79, 161, 412, 441, 497, 524], "what": [10, 51, 72, 78, 79, 85, 108, 111, 113, 117, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 176, 186, 250, 343, 414, 431, 479, 497, 528, 530, 541], "when": [10, 23, 25, 35, 38, 39, 42, 43, 45, 47, 50, 51, 58, 59, 83, 85, 105, 108, 111, 113, 126, 137, 139, 140, 155, 156, 167, 172, 183, 210, 216, 221, 224, 228, 229, 235, 242, 247, 249, 250, 255, 260, 267, 268, 269, 271, 272, 274, 343, 461, 467, 471, 474, 476, 478, 482, 490, 502, 506, 510, 521, 528, 531, 548], "whenev": [121, 399, 501, 509], "where": [0, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 80, 81, 83, 84, 85, 88, 89, 92, 93, 96, 97, 99, 100, 102, 104, 105, 106, 108, 109, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 131, 137, 138, 139, 142, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 177, 178, 181, 182, 184, 185, 186, 187, 188, 190, 191, 194, 195, 200, 201, 202, 203, 204, 205, 209, 215, 219, 224, 227, 228, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 257, 258, 259, 260, 263, 269, 270, 271, 272, 273, 274, 275, 338, 339, 343, 348, 361, 362, 363, 368, 375, 380, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 448, 453, 456, 461, 465, 466, 467, 471, 473, 474, 476, 480, 481, 482, 484, 485, 486, 488, 492, 493, 494, 495, 498, 499, 500, 504, 505, 508, 509, 511, 513, 517, 519, 520, 524, 525, 526, 528, 529, 532, 533], "wherev": 85, "whether": [17, 18, 22, 39, 93, 105, 111, 158, 185, 186, 189, 205, 224, 235, 264, 272, 274, 462, 485, 521, 522, 541], "which": [3, 4, 10, 17, 22, 23, 24, 25, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 51, 58, 60, 68, 78, 79, 83, 85, 90, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 111, 113, 114, 115, 116, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 155, 156, 159, 160, 161, 162, 163, 164, 165, 167, 169, 173, 174, 176, 178, 181, 183, 188, 190, 191, 192, 193, 205, 207, 209, 210, 217, 219, 221, 228, 231, 232, 233, 234, 236, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 343, 348, 358, 391, 393, 394, 395, 399, 404, 407, 412, 434, 439, 440, 441, 442, 443, 444, 445, 447, 453, 456, 462, 466, 468, 471, 475, 482, 489, 490, 493, 496, 497, 498, 500, 502, 508, 509, 510, 511, 512, 513, 516, 517, 520, 523, 524, 525, 526, 528, 531, 532, 533, 541, 548], "whichev": 182, "while": [10, 86, 141, 143, 173, 174, 254, 270, 273, 275, 391, 400, 404, 475, 498, 500, 511, 526], "whitespac": [160, 163], "whole": [127, 129, 133, 134, 138, 139, 141, 143, 513, 517], "whose": [12, 13, 14, 15, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 103, 111, 123, 124, 144, 206, 209, 211, 212, 213, 217, 228, 230, 232, 249, 251, 262, 475, 514, 518, 522], "why": 137, "wide": 144, "width": [59, 62, 64, 111, 173, 174, 184, 397], "wild": [414, 431], "window": [4, 128, 142], "wise": [12, 13, 14, 15, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 37, 39, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 73, 74, 77, 78, 79, 80, 81, 84, 86, 88, 89, 93, 106, 108, 110, 117, 119, 120, 122, 125, 146, 152, 153, 154, 155, 156, 157, 170, 171, 172, 175, 176, 177, 180, 184, 185, 188, 190, 191, 192, 193, 201, 202, 203, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 258, 259, 260, 261, 263, 269, 271, 272, 347, 389, 390, 392, 401, 402, 403, 405, 463, 465, 467, 473, 474, 478, 479, 480, 484, 485, 486, 487, 488, 493, 494, 495, 497, 499, 504, 505, 519, 520, 529, 530, 534, 541, 544, 548], "wish": 541, "within": [18, 25, 39, 51, 108, 113, 131, 132, 133, 134, 136, 137, 139, 173, 174, 185, 343, 407, 412, 456], "without": [103, 108, 115, 144, 386, 461, 470, 471, 541], "won": 111, "word": [132, 133, 134, 137, 139, 153, 212, 412, 456], "work": [4, 37, 50, 108, 358, 503, 541], "world": [111, 414, 431], "would": [35, 78, 79, 108, 111, 161, 181, 220, 249, 250, 367, 399, 412, 462, 490, 493, 497, 503, 509, 524, 528], "wrap": [96, 108, 144, 369, 384, 397, 407, 408, 410, 462, 481, 502, 503, 524], "wrapper": 108, "writabl": 469, "write": [99, 103, 108, 144, 160, 356, 470], "writeabl": 469, "written": [4, 90, 93, 144, 160, 189, 248, 466, 531], "x": [0, 3, 4, 12, 13, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 54, 55, 56, 57, 60, 62, 64, 68, 70, 73, 74, 80, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 97, 99, 102, 104, 105, 108, 109, 111, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 133, 134, 135, 141, 142, 143, 146, 147, 148, 153, 159, 160, 161, 162, 164, 165, 166, 167, 169, 175, 178, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 201, 206, 207, 209, 212, 215, 217, 221, 224, 226, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 256, 257, 261, 262, 264, 343, 348, 357, 358, 365, 371, 376, 377, 389, 391, 393, 394, 395, 401, 404, 405, 406, 410, 411, 430, 436, 461, 463, 465, 466, 468, 469, 474, 475, 476, 478, 480, 482, 484, 485, 486, 487, 488, 492, 493, 494, 495, 496, 501, 502, 504, 505, 510, 511, 520, 523, 525, 529, 531, 532, 533], "x0": [45, 47, 83, 102, 395, 525, 533], "x00": 160, "x01": [159, 160], "x02": [159, 160], "x03": [159, 160], "x04": [159, 160], "x05": 159, "x1": [16, 18, 21, 28, 30, 31, 39, 40, 48, 51, 52, 53, 61, 63, 65, 66, 67, 75, 84, 87, 106, 108, 117, 152, 154, 155, 156, 157, 166, 170, 171, 172, 177, 198, 200, 201, 202, 203, 204, 207, 216, 222, 233, 241, 242, 243, 244, 245, 246, 250, 253, 256, 259, 260, 261, 263, 343, 389, 390, 392, 398, 401, 402, 403, 409, 449, 467, 473, 475, 499, 519, 528], "x1_i": [16, 31, 53, 61, 63, 65, 66, 67, 84, 106, 117, 152, 154, 157, 170, 171, 177, 202, 203, 204, 241, 242, 243, 245, 246, 260, 263, 392, 402, 403, 467, 473, 499, 519], "x2": [16, 17, 18, 21, 22, 28, 30, 31, 38, 39, 40, 48, 52, 53, 61, 63, 65, 66, 67, 84, 87, 106, 117, 152, 154, 155, 156, 157, 166, 170, 171, 172, 177, 198, 200, 201, 202, 203, 204, 207, 216, 222, 233, 241, 242, 243, 244, 245, 246, 250, 253, 256, 259, 260, 263, 389, 390, 392, 401, 402, 403, 467, 473, 475, 494, 499, 519, 528], "x2_i": [16, 31, 53, 61, 63, 65, 66, 67, 84, 106, 117, 152, 154, 157, 170, 171, 177, 202, 203, 204, 241, 242, 243, 245, 246, 260, 263, 392, 402, 403, 467, 473, 499, 519], "x3": [17, 22, 152], "x_i": [12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 32, 48, 49, 52, 54, 62, 64, 73, 74, 80, 81, 88, 89, 119, 120, 122, 153, 180, 184, 237, 238, 239, 240, 244, 389, 401, 405, 463, 465, 474, 478, 480, 484, 485, 486, 488, 494, 495, 504, 505, 520], "xarr": 86, "xi": [240, 256], "xn": [198, 256], "xor": [61, 62, 64, 65, 67, 184, 243, 244, 245, 246], "xv": 256, "xx": 256, "xy": 256, "y": [0, 4, 14, 15, 25, 26, 27, 28, 29, 30, 32, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 55, 68, 83, 86, 91, 92, 102, 108, 111, 112, 115, 116, 121, 124, 128, 142, 159, 160, 161, 162, 164, 165, 167, 169, 178, 192, 193, 206, 207, 215, 235, 236, 247, 256, 257, 261, 264, 348, 365, 373, 376, 393, 394, 395, 469, 510, 511, 525, 531, 532, 533], "y1": 201, "y2": 201, "yarr": 86, "yet": [4, 6], "yield": [14, 15, 26, 27, 28, 29, 30, 32, 35, 48, 49, 52, 54, 272, 274, 391, 397, 412, 531, 541], "you": [4, 103, 131, 136, 137, 189, 249, 255, 470, 502, 503, 541, 548], "your": [4, 103, 548], "yv": 256, "yy": 256, "z": [14, 15, 17, 22, 25, 26, 27, 28, 29, 30, 32, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 83, 92, 102, 115, 116, 124, 128, 142, 159, 160, 161, 162, 164, 165, 167, 178, 235, 236, 247, 256, 257, 393, 394, 395, 422, 511, 525, 532, 533], "zero": [6, 10, 17, 21, 22, 35, 36, 37, 38, 63, 74, 90, 92, 93, 100, 104, 108, 115, 116, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 153, 160, 164, 165, 178, 180, 186, 187, 192, 193, 194, 195, 202, 210, 211, 213, 215, 218, 219, 223, 227, 229, 248, 249, 252, 254, 258, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 365, 366, 376, 377, 381, 388, 391, 394, 395, 397, 404, 412, 414, 442, 444, 445, 447, 463, 464, 466, 471, 474, 478, 484, 490, 498, 500, 506, 511, 512, 515, 516, 520, 526, 531, 533], "zeros_lik": [6, 38, 97, 116, 165, 255, 395, 411, 532], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 278, "__add__": 279, "__and__": 280, "__bool__": 281, "__complex__": 282, "__copy__": 283, "__eq__": 284, "__float__": 285, "__floordiv__": 286, "__ge__": 287, "__getitem__": 288, "__gt__": 289, "__iadd__": 290, "__iand__": 291, "__ifloordiv__": 292, "__ilshift__": 293, "__imatmul__": 294, "__imod__": 295, "__imul__": 296, "__int__": 297, "__invert__": 298, "__ior__": 299, "__ipow__": 300, "__irshift__": 301, "__isub__": 302, "__itruediv__": 303, "__ixor__": 304, "__le__": 305, "__len__": 306, "__lshift__": 307, "__lt__": 308, "__matmul__": 309, "__mod__": 310, "__mul__": 311, "__ne__": 312, "__neg__": 313, "__new__": 314, "__or__": 315, "__pos__": 316, "__pow__": 317, "__radd__": 318, "__rand__": 319, "__repr__": 320, "__rfloordiv__": 321, "__rlshift__": 322, "__rmatmul__": 323, "__rmod__": 324, "__rmul__": 325, "__ror__": 326, "__rpow__": 327, "__rrshift__": 328, "__rshift__": 329, "__rsub__": 330, "__rtruediv__": 331, "__rxor__": 332, "__setitem__": 333, "__str__": 334, "__sub__": 335, "__truediv__": 336, "__xor__": 337, "ab": 12, "absolut": 13, "aco": 14, "acosh": 15, "ad": 538, "add": 16, "algebra": [6, 536], "all": [17, 338], "allclos": 18, "amax": 19, "amin": 20, "angl": 21, "ani": [22, 339], "api": [1, 534], "append": 23, "apply_along_axi": 24, "arang": 25, "arcco": 26, "arccosh": 27, "arcsin": 28, "arcsinh": 29, "arctan": 30, "arctan2": 31, "arctanh": 32, "argmax": [33, 340], "argmin": [34, 341], "argsort": [35, 342], "argwher": 36, "arithmet": [539, 541, 542], "around": 37, "arrai": [6, 7, 9, 38, 535, 537, 538, 541], "array_equ": 39, "array_equiv": 40, "array_split": 41, "asanyarrai": 42, "asarrai": 43, "asarray_chkfinit": 44, "ascontiguousarrai": 45, "asfarrai": 46, "asfortranarrai": 47, "asin": 48, "asinh": 49, "asnumpi": 50, "astyp": [51, 343], "atan": 52, "atan2": 53, "atanh": 54, "atleast_1d": 55, "atleast_2d": 56, "atleast_3d": 57, "attribut": 541, "avail": [9, 548], "averag": [58, 547], "backend": 1, "background": 10, "basic": [538, 542], "beta": 413, "binary_repr": 59, "bincount": 60, "binomi": 414, "bit": [5, 548], "bitwise_and": 61, "bitwise_invert": 62, "bitwise_left_shift": 63, "bitwise_not": 64, "bitwise_or": 65, "bitwise_right_shift": 66, "bitwise_xor": 67, "broadcast_arrai": 68, "broadcast_shap": 69, "broadcast_to": 70, "build": [4, 7], "byte": 415, "byte_bound": 71, "c": 1, "calcul": 541, "can_cast": 72, "cbrt": 73, "ceil": 74, "chang": 538, "channel": 4, "chisquar": 416, "choic": 417, "choleski": 205, "choos": [75, 344], "class": 7, "clip": [76, 345], "co": 88, "column_stack": 77, "comparison": [6, 537, 541, 548], "complex": 539, "concat": 78, "concaten": 79, "cond": 206, "conda": 4, "conj": [80, 346], "conjug": [81, 347], "construct": 541, "control": 0, "convers": 541, "convolv": 82, "copi": [83, 348], "copysign": 84, "copyto": 85, "corrcoef": 86, "correl": [87, 547], "cosh": 89, "count": 545, "count_nonzero": 90, "cov": 91, "creat": 8, "creation": 7, "cross": [92, 207], "cumlogsumexp": 93, "cumprod": [94, 349], "cumsum": [95, 350], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 535, 541, 543], "decomposit": 536, "deg2rad": 96, "degre": 97, "delet": 98, "det": 208, "detail": 10, "develop": 2, "devic": 4, "diag": 99, "diag_indic": 100, "diag_indices_from": 101, "diagflat": 102, "diagon": [103, 209, 351], "diff": 104, "differ": 539, "digit": 105, "dimens": [10, 538], "dimension": [6, 541], "dirichlet": 418, "discret": [6, 10], "distribut": 543, "divid": 106, "dot": 107, "dpnp": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 543], "dpnp_arrai": 108, "driver": 4, "dsplit": 109, "dstack": 110, "dtype": [111, 352], "ediff1d": 112, "eig": 210, "eigenvalu": 536, "eigh": 211, "eigval": 212, "eigvalsh": 213, "einsum": 113, "einsum_path": 114, "element": [5, 538], "empti": 115, "empty_lik": 116, "equal": 117, "equat": 536, "erf": 118, "error": 546, "exampl": [0, 4], "except": 536, "exist": 7, "exp": 119, "exp2": 120, "expand_dim": 121, "expm1": 122, "expon": 539, "exponenti": 419, "extens": 2, "extract": 123, "extrema": 539, "ey": 124, "f": 420, "fab": 125, "fft": [10, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "fft2": 127, "fftfreq": 128, "fftn": 129, "fftshift": 130, "fill": 353, "fill_diagon": 144, "find": 539, "finfo": 145, "fix": 146, "flag": 354, "flat": 355, "flatit": 147, "flatnonzero": 148, "flatten": 356, "flip": 149, "fliplr": 150, "flipud": 151, "float": [539, 548], "float_pow": 152, "floor": 153, "floor_divid": 154, "fmax": 155, "fmin": 156, "fmod": 157, "format": 5, "fourier": [6, 10], "from": [4, 7], "from_dlpack": 158, "frombuff": 159, "fromfil": 160, "fromfunct": 161, "fromit": 162, "fromstr": 163, "full": 164, "full_lik": 165, "function": [11, 537, 539, 546, 548], "gamma": 421, "gcd": 166, "gener": [535, 543], "geometr": 422, "geomspac": 167, "get_includ": 168, "gradient": 169, "greater": 170, "greater_equ": 171, "guid": 4, "gumbel": 423, "handl": 539, "heavisid": 172, "helper": 10, "hermitian": 10, "hfft": 131, "higher": 10, "histogram": [173, 547], "histogram_bin_edg": 174, "hsplit": 175, "hstack": 176, "hyperbol": 539, "hypergeometr": 424, "hypot": 177, "ident": 178, "ifft": 132, "ifft2": 133, "ifftn": 134, "ifftshift": 135, "ihfft": 136, "iinfo": 179, "imag": [180, 357], "implement": 10, "index": [535, 541], "indic": 181, "infin": 537, "inform": [2, 8, 10], "inner": 182, "insert": [183, 535], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 214, "invert": 184, "irfft": 137, "irfft2": 138, "irfftn": 139, "isclos": 185, "iscomplex": 186, "iscomplexobj": 187, "isfinit": 188, "isfortran": 189, "isinf": 190, "isnan": 191, "isneginf": 192, "isposinf": 193, "isreal": 194, "isrealobj": 195, "isscalar": 196, "issubdtyp": 197, "item": [358, 541], "items": 359, "iter": 535, "ix_": 198, "join": 538, "kind": 538, "kron": 199, "laplac": 425, "layout": 541, "lcm": 200, "ldexp": 201, "left_shift": 202, "less": 203, "less_equ": 204, "level": 6, "librari": 0, "like": [535, 538], "linalg": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "linear": [6, 536], "linspac": 235, "loadtxt": 236, "log": 237, "log10": 238, "log1p": 239, "log2": 240, "logaddexp": 241, "logaddexp2": 242, "logarithm": 539, "logic": 537, "logical_and": 243, "logical_not": 244, "logical_or": 245, "logical_xor": 246, "logist": 426, "lognorm": 427, "logseri": 428, "logspac": 247, "logsumexp": 248, "lstsq": 215, "manipul": [538, 541], "mask_indic": 249, "math": 548, "mathemat": 539, "matmul": [216, 250], "matric": 7, "matrix": [7, 536, 541], "matrix_norm": 217, "matrix_pow": 218, "matrix_rank": 219, "matrix_transpos": 251, "max": [252, 361], "maximum": 253, "mean": [254, 362], "median": 255, "memori": 541, "meshgrid": 256, "method": 541, "mgrid": 257, "min": [258, 363], "minimum": 259, "miscellan": [8, 539, 540], "mod": 260, "modf": 261, "modul": [6, 542], "moveaxi": 262, "mt": 360, "multi": [6, 541], "multi_dot": 220, "multinomi": 429, "multipl": 541, "multipli": 263, "multivariate_norm": 430, "nan": 537, "nan_to_num": 264, "nanargmax": 265, "nanargmin": 266, "nancumprod": 267, "nancumsum": 268, "nanmax": 269, "nanmean": 270, "nanmin": 271, "nanprod": 272, "nanstd": 273, "nansum": 274, "nanvar": 275, "nbyte": 364, "ndarrai": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 541], "ndim": [365, 388], "neg": 389, "negative_binomi": 431, "nextaft": 390, "noncentral_chisquar": 432, "noncentral_f": 433, "nonzero": [366, 391], "norm": [221, 536], "normal": [10, 434], "not_equ": 392, "number": [536, 538, 539], "numer": 7, "numpi": [2, 6], "ogrid": 393, "ones": 394, "ones_lik": 395, "oper": [5, 535, 536, 537, 538, 539, 541, 548], "order": 547, "other": [536, 539, 541], "outer": [222, 396], "output": 5, "over": 535, "overview": 3, "pack": 5, "packag": [4, 542], "pad": 397, "parallel": [0, 2], "pareto": 435, "partit": [367, 398], "permut": [436, 543], "permute_dim": 399, "pinv": 223, "place": 400, "point": 539, "poisson": 437, "poly1d": 542, "polynomi": 542, "polyutil": 542, "posit": 401, "pow": 402, "power": [403, 438], "prod": [368, 404], "product": [536, 539], "program": 11, "proj": 405, "ptp": 406, "put": [369, 407], "put_along_axi": 408, "putmask": 409, "python": 4, "qr": 224, "quick": 4, "r": 4, "rad2deg": 410, "radian": 411, "rand": 439, "randint": 440, "randn": 441, "random": [6, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 543], "random_integ": 443, "random_sampl": 444, "randomst": 412, "ranf": 445, "rang": 7, "ration": 539, "ravel": [370, 461], "ravel_multi_index": 462, "rayleigh": 446, "real": [10, 371, 463], "real_if_clos": 464, "rearrang": 538, "reciproc": 465, "reduce_hypot": 466, "refer": [1, 534], "remaind": 467, "remov": 538, "repeat": [372, 468], "requir": 469, "reshap": [373, 470], "resiz": 471, "result_typ": 472, "rfft": 140, "rfft2": 141, "rfftfreq": 142, "rfftn": 143, "right_shift": 473, "rint": 474, "roll": 475, "rollaxi": 476, "rot90": 477, "round": [374, 478, 539], "routin": [7, 8, 10, 535, 538, 539, 540, 544], "row_stack": 479, "rsqrt": 480, "sampl": [6, 447, 543], "scikit": 4, "search": 545, "searchsort": [375, 481], "seed": 448, "select": [482, 541], "shape": [7, 376, 483, 538, 541], "shuffl": 449, "sign": 484, "signbit": 485, "simpl": 543, "sin": 486, "sinc": 487, "sinh": 488, "size": [377, 489], "slogdet": 225, "solv": [226, 536], "sort": [378, 490, 545], "sort_complex": 491, "space": 492, "special": [539, 541, 546], "split": [493, 538], "sqrt": 494, "squar": 495, "squeez": [379, 496], "stack": 497, "standard": 10, "standard_cauchi": 450, "standard_exponenti": 451, "standard_gamma": 452, "standard_norm": 453, "standard_t": 454, "start": 4, "statist": 547, "std": [380, 498], "stride": 381, "subtract": 499, "sum": [382, 500, 539], "summari": 6, "svd": 227, "svdval": 228, "swapax": [383, 501], "sycl": 4, "t": 277, "tabl": 6, "take": [384, 502], "take_along_axi": 503, "tan": 504, "tanh": 505, "target": 4, "tensordot": [229, 506], "tensorinv": 230, "tensorsolv": 231, "test": [4, 8, 537], "tile": [507, 538], "trace": [232, 385, 508], "transform": [6, 10], "transpos": [386, 509, 538], "trapezoid": 510, "tri": 511, "triangular": 455, "trigonometr": [539, 548], "tril": 512, "tril_indic": 513, "tril_indices_from": 514, "trim_zero": 515, "triu": 516, "triu_indic": 517, "triu_indices_from": 518, "true_divid": 519, "trunc": 520, "truth": 537, "twiddl": 548, "type": [8, 9, 537, 541], "ufunc": 548, "uniform": 456, "uniqu": 521, "univers": 548, "unravel_index": 522, "unstack": 523, "unwrap": 524, "util": 540, "valu": [7, 537], "vander": 525, "var": [387, 526], "varianc": 547, "vdot": 527, "vecdot": [233, 528], "vector": 536, "vector_norm": 234, "vonmis": 457, "vsplit": 529, "vstack": 530, "wald": 458, "weibul": 459, "where": 531, "wise": 5, "zero": 532, "zeros_lik": 533, "zipf": 460}})