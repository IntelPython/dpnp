Search.setIndex({"alltitles": {"API Reference": [[511, null]], "Adding and removing elements": [[515, "adding-and-removing-elements"]], "Arithmetic": [[519, "arithmetic"]], "Arithmetic operations": [[516, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[518, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[515, null]], "Array attributes": [[518, "array-attributes"]], "Array conversion": [[518, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[518, "array-methods"]], "Array type testing": [[514, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[525, "available-ufuncs"]], "Averages and variances": [[524, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[515, "basic-operations"]], "Basics": [[519, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[525, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[518, "calculation"]], "Changing array shape": [[515, "changing-array-shape"]], "Changing kind of array": [[515, "changing-kind-of-array"]], "Changing number of dimensions": [[515, "changing-number-of-dimensions"]], "Comparison": [[514, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[525, "comparison-functions"]], "Constructing arrays": [[518, "constructing-arrays"]], "Correlations": [[524, "correlations"]], "Counting": [[522, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[518, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[513, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[520, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[523, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[513, "exceptions"]], "Exponents and logarithms": [[516, "exponents-and-logarithms"]], "Extrema finding": [[516, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[525, "floating-functions"]], "Floating point routines": [[516, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[512, "generating-index-arrays"]], "Handling complex numbers": [[516, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[524, "histograms"]], "Hyperbolic functions": [[516, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[518, "indexing-arrays"]], "Indexing routines": [[512, null]], "Indexing-like operations": [[512, "indexing-like-operations"]], "Infinities and NaNs": [[514, "infinities-and-nans"]], "Inserting data into arrays": [[512, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[518, "item-selection-and-manipulation"]], "Iterating over arrays": [[512, "iterating-over-arrays"]], "Joining arrays": [[515, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [513, null]], "Logic Functions": [[514, null]], "Logic operations": [[514, "logic-operations"]], "Math operations": [[525, "math-operations"]], "Mathematical functions": [[516, null]], "Matrix and vector products": [[513, "matrix-and-vector-products"]], "Matrix eigenvalues": [[513, "matrix-eigenvalues"]], "Memory layout": [[518, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [516, "miscellaneous"]], "Miscellaneous routines": [[517, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[518, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[513, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[524, "order-statistics"]], "Other attributes": [[518, "other-attributes"]], "Other matrix operations": [[513, "other-matrix-operations"]], "Other special functions": [[516, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[520, "permutations"]], "Poly1d": [[519, "poly1d"]], "Polynomial Module": [[519, "polynomial-module"]], "Polynomial Package": [[519, "polynomial-package"]], "Polynomials": [[519, null]], "Polyutils": [[519, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[520, null]], "Random generator": [[520, "random-generator"]], "Rational routines": [[516, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[515, "rearranging-elements"]], "Rounding": [[516, "rounding"]], "Routines": [[521, null]], "Searching": [[522, "searching"]], "Shape manipulation": [[518, "shape-manipulation"]], "Simple random data": [[520, "simple-random-data"]], "Solving linear equations": [[513, "solving-linear-equations"]], "Sorting": [[522, "sorting"]], "Sorting, Searching, and Counting": [[522, null]], "Special Functions": [[523, null]], "Special methods": [[518, "special-methods"]], "Splitting arrays": [[515, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[524, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[516, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[515, "tiling-arrays"]], "Transpose-like operations": [[515, "transpose-like-operations"]], "Trigonometric functions": [[516, "trigonometric-functions"], [525, "trigonometric-functions"]], "Truth value testing": [[514, "truth-value-testing"]], "Universal Functions (ufunc)": [[525, null]], "Utility": [[517, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_invert": [[59, null]], "dpnp.bitwise_left_shift": [[60, null]], "dpnp.bitwise_not": [[61, null]], "dpnp.bitwise_or": [[62, null]], "dpnp.bitwise_right_shift": [[63, null]], "dpnp.bitwise_xor": [[64, null]], "dpnp.broadcast_arrays": [[65, null]], "dpnp.broadcast_to": [[66, null]], "dpnp.can_cast": [[67, null]], "dpnp.cbrt": [[68, null]], "dpnp.ceil": [[69, null]], "dpnp.choose": [[70, null]], "dpnp.clip": [[71, null]], "dpnp.column_stack": [[72, null]], "dpnp.concat": [[73, null]], "dpnp.concatenate": [[74, null]], "dpnp.conj": [[75, null]], "dpnp.conjugate": [[76, null]], "dpnp.convolve": [[77, null]], "dpnp.copy": [[78, null]], "dpnp.copysign": [[79, null]], "dpnp.copyto": [[80, null]], "dpnp.correlate": [[81, null]], "dpnp.cos": [[82, null]], "dpnp.cosh": [[83, null]], "dpnp.count_nonzero": [[84, null]], "dpnp.cov": [[85, null]], "dpnp.cross": [[86, null]], "dpnp.cumlogsumexp": [[87, null]], "dpnp.cumprod": [[88, null]], "dpnp.cumsum": [[89, null]], "dpnp.deg2rad": [[90, null]], "dpnp.degrees": [[91, null]], "dpnp.diag": [[92, null]], "dpnp.diag_indices": [[93, null]], "dpnp.diag_indices_from": [[94, null]], "dpnp.diagflat": [[95, null]], "dpnp.diagonal": [[96, null]], "dpnp.diff": [[97, null]], "dpnp.digitize": [[98, null]], "dpnp.divide": [[99, null]], "dpnp.dot": [[100, null]], "dpnp.dpnp_array.dpnp_array": [[101, null]], "dpnp.dsplit": [[102, null]], "dpnp.dstack": [[103, null]], "dpnp.dtype": [[104, null]], "dpnp.ediff1d": [[105, null]], "dpnp.einsum": [[106, null]], "dpnp.einsum_path": [[107, null]], "dpnp.empty": [[108, null]], "dpnp.empty_like": [[109, null]], "dpnp.equal": [[110, null]], "dpnp.erf": [[111, null]], "dpnp.exp": [[112, null]], "dpnp.exp2": [[113, null]], "dpnp.expand_dims": [[114, null]], "dpnp.expm1": [[115, null]], "dpnp.extract": [[116, null]], "dpnp.eye": [[117, null]], "dpnp.fabs": [[118, null]], "dpnp.fft.fft": [[119, null]], "dpnp.fft.fft2": [[120, null]], "dpnp.fft.fftfreq": [[121, null]], "dpnp.fft.fftn": [[122, null]], "dpnp.fft.fftshift": [[123, null]], "dpnp.fft.hfft": [[124, null]], "dpnp.fft.ifft": [[125, null]], "dpnp.fft.ifft2": [[126, null]], "dpnp.fft.ifftn": [[127, null]], "dpnp.fft.ifftshift": [[128, null]], "dpnp.fft.ihfft": [[129, null]], "dpnp.fft.irfft": [[130, null]], "dpnp.fft.irfft2": [[131, null]], "dpnp.fft.irfftn": [[132, null]], "dpnp.fft.rfft": [[133, null]], "dpnp.fft.rfft2": [[134, null]], "dpnp.fft.rfftfreq": [[135, null]], "dpnp.fft.rfftn": [[136, null]], "dpnp.fill_diagonal": [[137, null]], "dpnp.finfo": [[138, null]], "dpnp.fix": [[139, null]], "dpnp.flatiter": [[140, null]], "dpnp.flatnonzero": [[141, null]], "dpnp.flip": [[142, null]], "dpnp.fliplr": [[143, null]], "dpnp.flipud": [[144, null]], "dpnp.float_power": [[145, null]], "dpnp.floor": [[146, null]], "dpnp.floor_divide": [[147, null]], "dpnp.fmax": [[148, null]], "dpnp.fmin": [[149, null]], "dpnp.fmod": [[150, null]], "dpnp.from_dlpack": [[151, null]], "dpnp.frombuffer": [[152, null]], "dpnp.fromfile": [[153, null]], "dpnp.fromfunction": [[154, null]], "dpnp.fromiter": [[155, null]], "dpnp.fromstring": [[156, null]], "dpnp.full": [[157, null]], "dpnp.full_like": [[158, null]], "dpnp.gcd": [[159, null]], "dpnp.geomspace": [[160, null]], "dpnp.get_include": [[161, null]], "dpnp.gradient": [[162, null]], "dpnp.greater": [[163, null]], "dpnp.greater_equal": [[164, null]], "dpnp.heaviside": [[165, null]], "dpnp.histogram": [[166, null]], "dpnp.histogram_bin_edges": [[167, null]], "dpnp.hsplit": [[168, null]], "dpnp.hstack": [[169, null]], "dpnp.hypot": [[170, null]], "dpnp.identity": [[171, null]], "dpnp.iinfo": [[172, null]], "dpnp.imag": [[173, null]], "dpnp.indices": [[174, null]], "dpnp.inner": [[175, null]], "dpnp.invert": [[176, null]], "dpnp.isclose": [[177, null]], "dpnp.iscomplex": [[178, null]], "dpnp.iscomplexobj": [[179, null]], "dpnp.isfinite": [[180, null]], "dpnp.isfortran": [[181, null]], "dpnp.isinf": [[182, null]], "dpnp.isnan": [[183, null]], "dpnp.isneginf": [[184, null]], "dpnp.isposinf": [[185, null]], "dpnp.isreal": [[186, null]], "dpnp.isrealobj": [[187, null]], "dpnp.isscalar": [[188, null]], "dpnp.issubdtype": [[189, null]], "dpnp.ix_": [[190, null]], "dpnp.kron": [[191, null]], "dpnp.lcm": [[192, null]], "dpnp.ldexp": [[193, null]], "dpnp.left_shift": [[194, null]], "dpnp.less": [[195, null]], "dpnp.less_equal": [[196, null]], "dpnp.linalg.cholesky": [[197, null]], "dpnp.linalg.cond": [[198, null]], "dpnp.linalg.cross": [[199, null]], "dpnp.linalg.det": [[200, null]], "dpnp.linalg.diagonal": [[201, null]], "dpnp.linalg.eig": [[202, null]], "dpnp.linalg.eigh": [[203, null]], "dpnp.linalg.eigvals": [[204, null]], "dpnp.linalg.eigvalsh": [[205, null]], "dpnp.linalg.inv": [[206, null]], "dpnp.linalg.lstsq": [[207, null]], "dpnp.linalg.matmul": [[208, null]], "dpnp.linalg.matrix_norm": [[209, null]], "dpnp.linalg.matrix_power": [[210, null]], "dpnp.linalg.matrix_rank": [[211, null]], "dpnp.linalg.multi_dot": [[212, null]], "dpnp.linalg.norm": [[213, null]], "dpnp.linalg.outer": [[214, null]], "dpnp.linalg.pinv": [[215, null]], "dpnp.linalg.qr": [[216, null]], "dpnp.linalg.slogdet": [[217, null]], "dpnp.linalg.solve": [[218, null]], "dpnp.linalg.svd": [[219, null]], "dpnp.linalg.svdvals": [[220, null]], "dpnp.linalg.tensordot": [[221, null]], "dpnp.linalg.tensorinv": [[222, null]], "dpnp.linalg.tensorsolve": [[223, null]], "dpnp.linalg.trace": [[224, null]], "dpnp.linalg.vecdot": [[225, null]], "dpnp.linalg.vector_norm": [[226, null]], "dpnp.linspace": [[227, null]], "dpnp.loadtxt": [[228, null]], "dpnp.log": [[229, null]], "dpnp.log10": [[230, null]], "dpnp.log1p": [[231, null]], "dpnp.log2": [[232, null]], "dpnp.logaddexp": [[233, null]], "dpnp.logaddexp2": [[234, null]], "dpnp.logical_and": [[235, null]], "dpnp.logical_not": [[236, null]], "dpnp.logical_or": [[237, null]], "dpnp.logical_xor": [[238, null]], "dpnp.logspace": [[239, null]], "dpnp.logsumexp": [[240, null]], "dpnp.mask_indices": [[241, null]], "dpnp.matmul": [[242, null]], "dpnp.matrix_transpose": [[243, null]], "dpnp.max": [[244, null]], "dpnp.maximum": [[245, null]], "dpnp.mean": [[246, null]], "dpnp.median": [[247, null]], "dpnp.meshgrid": [[248, null]], "dpnp.mgrid": [[249, null]], "dpnp.min": [[250, null]], "dpnp.minimum": [[251, null]], "dpnp.mod": [[252, null]], "dpnp.modf": [[253, null]], "dpnp.moveaxis": [[254, null]], "dpnp.multiply": [[255, null]], "dpnp.nan_to_num": [[256, null]], "dpnp.nanargmax": [[257, null]], "dpnp.nanargmin": [[258, null]], "dpnp.nancumprod": [[259, null]], "dpnp.nancumsum": [[260, null]], "dpnp.nanmax": [[261, null]], "dpnp.nanmean": [[262, null]], "dpnp.nanmin": [[263, null]], "dpnp.nanprod": [[264, null]], "dpnp.nanstd": [[265, null]], "dpnp.nansum": [[266, null]], "dpnp.nanvar": [[267, null]], "dpnp.ndarray": [[268, null]], "dpnp.ndarray.T": [[269, null]], "dpnp.ndarray.__abs__": [[270, null]], "dpnp.ndarray.__add__": [[271, null]], "dpnp.ndarray.__and__": [[272, null]], "dpnp.ndarray.__bool__": [[273, null]], "dpnp.ndarray.__complex__": [[274, null]], "dpnp.ndarray.__copy__": [[275, null]], "dpnp.ndarray.__eq__": [[276, null]], "dpnp.ndarray.__float__": [[277, null]], "dpnp.ndarray.__floordiv__": [[278, null]], "dpnp.ndarray.__ge__": [[279, null]], "dpnp.ndarray.__getitem__": [[280, null]], "dpnp.ndarray.__gt__": [[281, null]], "dpnp.ndarray.__iadd__": [[282, null]], "dpnp.ndarray.__iand__": [[283, null]], "dpnp.ndarray.__ifloordiv__": [[284, null]], "dpnp.ndarray.__ilshift__": [[285, null]], "dpnp.ndarray.__imod__": [[286, null]], "dpnp.ndarray.__imul__": [[287, null]], "dpnp.ndarray.__int__": [[288, null]], "dpnp.ndarray.__invert__": [[289, null]], "dpnp.ndarray.__ior__": [[290, null]], "dpnp.ndarray.__ipow__": [[291, null]], "dpnp.ndarray.__irshift__": [[292, null]], "dpnp.ndarray.__isub__": [[293, null]], "dpnp.ndarray.__itruediv__": [[294, null]], "dpnp.ndarray.__ixor__": [[295, null]], "dpnp.ndarray.__le__": [[296, null]], "dpnp.ndarray.__len__": [[297, null]], "dpnp.ndarray.__lshift__": [[298, null]], "dpnp.ndarray.__lt__": [[299, null]], "dpnp.ndarray.__matmul__": [[300, null]], "dpnp.ndarray.__mod__": [[301, null]], "dpnp.ndarray.__mul__": [[302, null]], "dpnp.ndarray.__ne__": [[303, null]], "dpnp.ndarray.__neg__": [[304, null]], "dpnp.ndarray.__new__": [[305, null]], "dpnp.ndarray.__or__": [[306, null]], "dpnp.ndarray.__pos__": [[307, null]], "dpnp.ndarray.__pow__": [[308, null]], "dpnp.ndarray.__repr__": [[309, null]], "dpnp.ndarray.__rshift__": [[310, null]], "dpnp.ndarray.__setitem__": [[311, null]], "dpnp.ndarray.__str__": [[312, null]], "dpnp.ndarray.__sub__": [[313, null]], "dpnp.ndarray.__truediv__": [[314, null]], "dpnp.ndarray.__xor__": [[315, null]], "dpnp.ndarray.all": [[316, null]], "dpnp.ndarray.any": [[317, null]], "dpnp.ndarray.argmax": [[318, null]], "dpnp.ndarray.argmin": [[319, null]], "dpnp.ndarray.argsort": [[320, null]], "dpnp.ndarray.astype": [[321, null]], "dpnp.ndarray.choose": [[322, null]], "dpnp.ndarray.clip": [[323, null]], "dpnp.ndarray.conj": [[324, null]], "dpnp.ndarray.conjugate": [[325, null]], "dpnp.ndarray.copy": [[326, null]], "dpnp.ndarray.cumprod": [[327, null]], "dpnp.ndarray.cumsum": [[328, null]], "dpnp.ndarray.diagonal": [[329, null]], "dpnp.ndarray.dtype": [[330, null]], "dpnp.ndarray.fill": [[331, null]], "dpnp.ndarray.flags": [[332, null]], "dpnp.ndarray.flat": [[333, null]], "dpnp.ndarray.flatten": [[334, null]], "dpnp.ndarray.imag": [[335, null]], "dpnp.ndarray.item": [[336, null]], "dpnp.ndarray.itemsize": [[337, null]], "dpnp.ndarray.mT": [[338, null]], "dpnp.ndarray.max": [[339, null]], "dpnp.ndarray.mean": [[340, null]], "dpnp.ndarray.min": [[341, null]], "dpnp.ndarray.nbytes": [[342, null]], "dpnp.ndarray.ndim": [[343, null]], "dpnp.ndarray.nonzero": [[344, null]], "dpnp.ndarray.partition": [[345, null]], "dpnp.ndarray.prod": [[346, null]], "dpnp.ndarray.put": [[347, null]], "dpnp.ndarray.ravel": [[348, null]], "dpnp.ndarray.real": [[349, null]], "dpnp.ndarray.repeat": [[350, null]], "dpnp.ndarray.reshape": [[351, null]], "dpnp.ndarray.round": [[352, null]], "dpnp.ndarray.searchsorted": [[353, null]], "dpnp.ndarray.shape": [[354, null]], "dpnp.ndarray.size": [[355, null]], "dpnp.ndarray.sort": [[356, null]], "dpnp.ndarray.squeeze": [[357, null]], "dpnp.ndarray.std": [[358, null]], "dpnp.ndarray.strides": [[359, null]], "dpnp.ndarray.sum": [[360, null]], "dpnp.ndarray.swapaxes": [[361, null]], "dpnp.ndarray.take": [[362, null]], "dpnp.ndarray.trace": [[363, null]], "dpnp.ndarray.transpose": [[364, null]], "dpnp.ndarray.var": [[365, null]], "dpnp.ndim": [[366, null]], "dpnp.negative": [[367, null]], "dpnp.nextafter": [[368, null]], "dpnp.nonzero": [[369, null]], "dpnp.not_equal": [[370, null]], "dpnp.ogrid": [[371, null]], "dpnp.ones": [[372, null]], "dpnp.ones_like": [[373, null]], "dpnp.outer": [[374, null]], "dpnp.pad": [[375, null]], "dpnp.partition": [[376, null]], "dpnp.permute_dims": [[377, null]], "dpnp.place": [[378, null]], "dpnp.positive": [[379, null]], "dpnp.pow": [[380, null]], "dpnp.power": [[381, null]], "dpnp.prod": [[382, null]], "dpnp.proj": [[383, null]], "dpnp.ptp": [[384, null]], "dpnp.put": [[385, null]], "dpnp.put_along_axis": [[386, null]], "dpnp.putmask": [[387, null]], "dpnp.rad2deg": [[388, null]], "dpnp.radians": [[389, null]], "dpnp.random.RandomState": [[390, null]], "dpnp.random.beta": [[391, null]], "dpnp.random.binomial": [[392, null]], "dpnp.random.bytes": [[393, null]], "dpnp.random.chisquare": [[394, null]], "dpnp.random.choice": [[395, null]], "dpnp.random.dirichlet": [[396, null]], "dpnp.random.exponential": [[397, null]], "dpnp.random.f": [[398, null]], "dpnp.random.gamma": [[399, null]], "dpnp.random.geometric": [[400, null]], "dpnp.random.gumbel": [[401, null]], "dpnp.random.hypergeometric": [[402, null]], "dpnp.random.laplace": [[403, null]], "dpnp.random.logistic": [[404, null]], "dpnp.random.lognormal": [[405, null]], "dpnp.random.logseries": [[406, null]], "dpnp.random.multinomial": [[407, null]], "dpnp.random.multivariate_normal": [[408, null]], "dpnp.random.negative_binomial": [[409, null]], "dpnp.random.noncentral_chisquare": [[410, null]], "dpnp.random.noncentral_f": [[411, null]], "dpnp.random.normal": [[412, null]], "dpnp.random.pareto": [[413, null]], "dpnp.random.permutation": [[414, null]], "dpnp.random.poisson": [[415, null]], "dpnp.random.power": [[416, null]], "dpnp.random.rand": [[417, null]], "dpnp.random.randint": [[418, null]], "dpnp.random.randn": [[419, null]], "dpnp.random.random": [[420, null]], "dpnp.random.random_integers": [[421, null]], "dpnp.random.random_sample": [[422, null]], "dpnp.random.ranf": [[423, null]], "dpnp.random.rayleigh": [[424, null]], "dpnp.random.sample": [[425, null]], "dpnp.random.seed": [[426, null]], "dpnp.random.shuffle": [[427, null]], "dpnp.random.standard_cauchy": [[428, null]], "dpnp.random.standard_exponential": [[429, null]], "dpnp.random.standard_gamma": [[430, null]], "dpnp.random.standard_normal": [[431, null]], "dpnp.random.standard_t": [[432, null]], "dpnp.random.triangular": [[433, null]], "dpnp.random.uniform": [[434, null]], "dpnp.random.vonmises": [[435, null]], "dpnp.random.wald": [[436, null]], "dpnp.random.weibull": [[437, null]], "dpnp.random.zipf": [[438, null]], "dpnp.ravel": [[439, null]], "dpnp.ravel_multi_index": [[440, null]], "dpnp.real": [[441, null]], "dpnp.real_if_close": [[442, null]], "dpnp.reciprocal": [[443, null]], "dpnp.reduce_hypot": [[444, null]], "dpnp.remainder": [[445, null]], "dpnp.repeat": [[446, null]], "dpnp.require": [[447, null]], "dpnp.reshape": [[448, null]], "dpnp.resize": [[449, null]], "dpnp.result_type": [[450, null]], "dpnp.right_shift": [[451, null]], "dpnp.rint": [[452, null]], "dpnp.roll": [[453, null]], "dpnp.rollaxis": [[454, null]], "dpnp.rot90": [[455, null]], "dpnp.round": [[456, null]], "dpnp.row_stack": [[457, null]], "dpnp.rsqrt": [[458, null]], "dpnp.searchsorted": [[459, null]], "dpnp.select": [[460, null]], "dpnp.shape": [[461, null]], "dpnp.sign": [[462, null]], "dpnp.signbit": [[463, null]], "dpnp.sin": [[464, null]], "dpnp.sinh": [[465, null]], "dpnp.size": [[466, null]], "dpnp.sort": [[467, null]], "dpnp.sort_complex": [[468, null]], "dpnp.spacing": [[469, null]], "dpnp.split": [[470, null]], "dpnp.sqrt": [[471, null]], "dpnp.square": [[472, null]], "dpnp.squeeze": [[473, null]], "dpnp.stack": [[474, null]], "dpnp.std": [[475, null]], "dpnp.subtract": [[476, null]], "dpnp.sum": [[477, null]], "dpnp.swapaxes": [[478, null]], "dpnp.take": [[479, null]], "dpnp.take_along_axis": [[480, null]], "dpnp.tan": [[481, null]], "dpnp.tanh": [[482, null]], "dpnp.tensordot": [[483, null]], "dpnp.tile": [[484, null]], "dpnp.trace": [[485, null]], "dpnp.transpose": [[486, null]], "dpnp.trapezoid": [[487, null]], "dpnp.tri": [[488, null]], "dpnp.tril": [[489, null]], "dpnp.tril_indices": [[490, null]], "dpnp.tril_indices_from": [[491, null]], "dpnp.trim_zeros": [[492, null]], "dpnp.triu": [[493, null]], "dpnp.triu_indices": [[494, null]], "dpnp.triu_indices_from": [[495, null]], "dpnp.true_divide": [[496, null]], "dpnp.trunc": [[497, null]], "dpnp.unique": [[498, null]], "dpnp.unravel_index": [[499, null]], "dpnp.unstack": [[500, null]], "dpnp.unwrap": [[501, null]], "dpnp.vander": [[502, null]], "dpnp.var": [[503, null]], "dpnp.vdot": [[504, null]], "dpnp.vecdot": [[505, null]], "dpnp.vsplit": [[506, null]], "dpnp.vstack": [[507, null]], "dpnp.where": [[508, null]], "dpnp.zeros": [[509, null]], "dpnp.zeros_like": [[510, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[104, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[104, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[104, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[104, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[104, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[104, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[104, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[104, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[140, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[104, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[316, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[317, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[318, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[319, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[320, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[321, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[104, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[391, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[392, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[59, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[60, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[61, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[62, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[63, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[64, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[65, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[66, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[104, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[393, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[67, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[68, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[69, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[104, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[394, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[395, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[197, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[322, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[70, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[323, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[71, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[72, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[73, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[74, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[198, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[324, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[75, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[325, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[76, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[77, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[326, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[78, "dpnp.copy", false]], "copysign() (in module dpnp)": [[79, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[80, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[81, "dpnp.correlate", false]], "cos() (in module dpnp)": [[82, "dpnp.cos", false]], "cosh() (in module dpnp)": [[83, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[84, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[85, "dpnp.cov", false]], "cross() (in module dpnp)": [[86, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[199, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[87, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[327, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[88, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[328, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[89, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[90, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[91, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[104, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[200, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[92, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[93, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[94, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[95, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[329, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[96, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[201, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[97, "dpnp.diff", false]], "digitize() (in module dpnp)": [[98, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[396, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[99, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[100, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[101, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[102, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[103, "dpnp.dstack", false]], "dtype (class in dpnp)": [[104, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[330, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[105, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[202, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[203, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[204, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[205, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[106, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[107, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[108, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[109, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[110, "dpnp.equal", false]], "erf() (in module dpnp)": [[111, "dpnp.erf", false]], "exp() (in module dpnp)": [[112, "dpnp.exp", false]], "exp2() (in module dpnp)": [[113, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[114, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[115, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[397, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[116, "dpnp.extract", false]], "eye() (in module dpnp)": [[117, "dpnp.eye", false]], "f() (in module dpnp.random)": [[398, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[118, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[119, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[120, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[121, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[122, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[123, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[104, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[331, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[137, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[138, "dpnp.finfo", false]], "fix() (in module dpnp)": [[139, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[104, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[332, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[333, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[140, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[141, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[334, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[142, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[143, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[144, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[145, "dpnp.float_power", false]], "floor() (in module dpnp)": [[146, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[147, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[148, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[149, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[150, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[151, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[152, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[153, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[154, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[155, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[156, "dpnp.fromstring", false]], "full() (in module dpnp)": [[157, "dpnp.full", false]], "full_like() (in module dpnp)": [[158, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[399, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[159, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[400, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[160, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[161, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[162, "dpnp.gradient", false]], "greater() (in module dpnp)": [[163, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[164, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[401, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[104, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[165, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[124, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[166, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[167, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[168, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[169, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[402, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[170, "dpnp.hypot", false]], "identity() (in module dpnp)": [[171, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[125, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[126, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[127, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[128, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[129, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[172, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[335, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[173, "dpnp.imag", false]], "indices() (in module dpnp)": [[174, "dpnp.indices", false]], "inner() (in module dpnp)": [[175, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[206, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[176, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[130, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[131, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[132, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[104, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[104, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[177, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[178, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[179, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[180, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[181, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[182, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[183, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[104, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[184, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[185, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[186, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[187, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[188, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[189, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[336, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[104, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[337, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[190, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[104, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[191, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[403, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[192, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[193, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[194, "dpnp.left_shift", false]], "less() (in module dpnp)": [[195, "dpnp.less", false]], "less_equal() (in module dpnp)": [[196, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[227, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[228, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[229, "dpnp.log", false]], "log10() (in module dpnp)": [[230, "dpnp.log10", false]], "log1p() (in module dpnp)": [[231, "dpnp.log1p", false]], "log2() (in module dpnp)": [[232, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[233, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[234, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[235, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[236, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[237, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[238, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[404, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[405, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[406, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[239, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[240, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[207, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[241, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[242, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[208, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[209, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[210, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[211, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[243, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[339, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[244, "dpnp.max", false]], "maximum() (in module dpnp)": [[245, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[340, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[246, "dpnp.mean", false]], "median() (in module dpnp)": [[247, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[248, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[104, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[249, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[341, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[250, "dpnp.min", false]], "minimum() (in module dpnp)": [[251, "dpnp.minimum", false]], "mod() (in module dpnp)": [[252, "dpnp.mod", false]], "modf() (in module dpnp)": [[253, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[254, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[338, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[212, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[407, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[255, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[408, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[104, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[104, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[256, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[257, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[258, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[259, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[260, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[261, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[262, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[263, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[264, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[265, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[266, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[267, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[342, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[268, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[104, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[343, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[366, "dpnp.ndim", false]], "negative() (in module dpnp)": [[367, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[409, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[104, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[368, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[410, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[411, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[344, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[369, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[213, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[412, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[370, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[104, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[371, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[372, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[373, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[374, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[214, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[375, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[413, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[345, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[376, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[414, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[377, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[215, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[378, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[415, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[379, "dpnp.positive", false]], "pow() (in module dpnp)": [[380, "dpnp.pow", false]], "power() (in module dpnp)": [[381, "dpnp.power", false]], "power() (in module dpnp.random)": [[416, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[346, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[382, "dpnp.prod", false]], "proj() (in module dpnp)": [[383, "dpnp.proj", false]], "ptp() (in module dpnp)": [[384, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[347, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[385, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[386, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[387, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[216, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[388, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[389, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[417, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[418, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[419, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[420, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[421, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[422, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[390, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[423, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[348, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[439, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[440, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[424, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[349, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[441, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[442, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[443, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[444, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[445, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[350, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[446, "dpnp.repeat", false]], "require() (in module dpnp)": [[447, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[351, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[448, "dpnp.reshape", false]], "resize() (in module dpnp)": [[449, "dpnp.resize", false]], "result_type() (in module dpnp)": [[450, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[133, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[134, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[135, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[136, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[451, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[452, "dpnp.rint", false]], "roll() (in module dpnp)": [[453, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[454, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[455, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[352, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[456, "dpnp.round", false]], "row_stack() (in module dpnp)": [[457, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[458, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[425, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[353, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[459, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[426, "dpnp.random.seed", false]], "select() (in module dpnp)": [[460, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[104, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[354, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[461, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[427, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[462, "dpnp.sign", false]], "signbit() (in module dpnp)": [[463, "dpnp.signbit", false]], "sin() (in module dpnp)": [[464, "dpnp.sin", false]], "sinh() (in module dpnp)": [[465, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[355, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[466, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[217, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[218, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[356, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[467, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[468, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[469, "dpnp.spacing", false]], "split() (in module dpnp)": [[470, "dpnp.split", false]], "sqrt() (in module dpnp)": [[471, "dpnp.sqrt", false]], "square() (in module dpnp)": [[472, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[357, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[473, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[474, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[428, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[429, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[430, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[431, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[432, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[358, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[475, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[104, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[359, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[104, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[476, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[360, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[477, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[219, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[220, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[361, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[478, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[269, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[362, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[479, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[480, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[481, "dpnp.tan", false]], "tanh() (in module dpnp)": [[482, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[483, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[221, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[222, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[223, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[484, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[363, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[485, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[224, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[364, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[486, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[487, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[488, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[433, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[489, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[490, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[491, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[492, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[493, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[494, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[495, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[496, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[497, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[104, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[390, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[434, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[498, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[499, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[500, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[501, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[101, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[502, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[101, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[365, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[503, "dpnp.var", false]], "vdot() (in module dpnp)": [[504, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[505, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[225, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[226, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[435, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[506, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[507, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[436, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[437, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[508, "dpnp.where", false]], "zeros() (in module dpnp)": [[509, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[510, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[438, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_invert"], [60, 1, 1, "", "bitwise_left_shift"], [61, 1, 1, "", "bitwise_not"], [62, 1, 1, "", "bitwise_or"], [63, 1, 1, "", "bitwise_right_shift"], [64, 1, 1, "", "bitwise_xor"], [65, 1, 1, "", "broadcast_arrays"], [66, 1, 1, "", "broadcast_to"], [67, 1, 1, "", "can_cast"], [68, 1, 1, "", "cbrt"], [69, 1, 1, "", "ceil"], [70, 1, 1, "", "choose"], [71, 1, 1, "", "clip"], [72, 1, 1, "", "column_stack"], [73, 1, 1, "", "concat"], [74, 1, 1, "", "concatenate"], [75, 1, 1, "", "conj"], [76, 1, 1, "", "conjugate"], [77, 1, 1, "", "convolve"], [78, 1, 1, "", "copy"], [79, 1, 1, "", "copysign"], [80, 1, 1, "", "copyto"], [81, 1, 1, "", "correlate"], [82, 1, 1, "", "cos"], [83, 1, 1, "", "cosh"], [84, 1, 1, "", "count_nonzero"], [85, 1, 1, "", "cov"], [86, 1, 1, "", "cross"], [87, 1, 1, "", "cumlogsumexp"], [88, 1, 1, "", "cumprod"], [89, 1, 1, "", "cumsum"], [90, 1, 1, "", "deg2rad"], [91, 1, 1, "", "degrees"], [92, 1, 1, "", "diag"], [93, 1, 1, "", "diag_indices"], [94, 1, 1, "", "diag_indices_from"], [95, 1, 1, "", "diagflat"], [96, 1, 1, "", "diagonal"], [97, 1, 1, "", "diff"], [98, 1, 1, "", "digitize"], [99, 1, 1, "", "divide"], [100, 1, 1, "", "dot"], [102, 1, 1, "", "dsplit"], [103, 1, 1, "", "dstack"], [104, 2, 1, "", "dtype"], [105, 1, 1, "", "ediff1d"], [106, 1, 1, "", "einsum"], [107, 1, 1, "", "einsum_path"], [108, 1, 1, "", "empty"], [109, 1, 1, "", "empty_like"], [110, 1, 1, "", "equal"], [111, 1, 1, "", "erf"], [112, 1, 1, "", "exp"], [113, 1, 1, "", "exp2"], [114, 1, 1, "", "expand_dims"], [115, 1, 1, "", "expm1"], [116, 1, 1, "", "extract"], [117, 1, 1, "", "eye"], [118, 1, 1, "", "fabs"], [137, 1, 1, "", "fill_diagonal"], [138, 1, 1, "", "finfo"], [139, 1, 1, "", "fix"], [140, 2, 1, "", "flatiter"], [141, 1, 1, "", "flatnonzero"], [142, 1, 1, "", "flip"], [143, 1, 1, "", "fliplr"], [144, 1, 1, "", "flipud"], [145, 1, 1, "", "float_power"], [146, 1, 1, "", "floor"], [147, 1, 1, "", "floor_divide"], [148, 1, 1, "", "fmax"], [149, 1, 1, "", "fmin"], [150, 1, 1, "", "fmod"], [151, 1, 1, "", "from_dlpack"], [152, 1, 1, "", "frombuffer"], [153, 1, 1, "", "fromfile"], [154, 1, 1, "", "fromfunction"], [155, 1, 1, "", "fromiter"], [156, 1, 1, "", "fromstring"], [157, 1, 1, "", "full"], [158, 1, 1, "", "full_like"], [159, 1, 1, "", "gcd"], [160, 1, 1, "", "geomspace"], [161, 1, 1, "", "get_include"], [162, 1, 1, "", "gradient"], [163, 1, 1, "", "greater"], [164, 1, 1, "", "greater_equal"], [165, 1, 1, "", "heaviside"], [166, 1, 1, "", "histogram"], [167, 1, 1, "", "histogram_bin_edges"], [168, 1, 1, "", "hsplit"], [169, 1, 1, "", "hstack"], [170, 1, 1, "", "hypot"], [171, 1, 1, "", "identity"], [172, 1, 1, "", "iinfo"], [173, 1, 1, "", "imag"], [174, 1, 1, "", "indices"], [175, 1, 1, "", "inner"], [176, 1, 1, "", "invert"], [177, 1, 1, "", "isclose"], [178, 1, 1, "", "iscomplex"], [179, 1, 1, "", "iscomplexobj"], [180, 1, 1, "", "isfinite"], [181, 1, 1, "", "isfortran"], [182, 1, 1, "", "isinf"], [183, 1, 1, "", "isnan"], [184, 1, 1, "", "isneginf"], [185, 1, 1, "", "isposinf"], [186, 1, 1, "", "isreal"], [187, 1, 1, "", "isrealobj"], [188, 1, 1, "", "isscalar"], [189, 1, 1, "", "issubdtype"], [190, 1, 1, "", "ix_"], [191, 1, 1, "", "kron"], [192, 1, 1, "", "lcm"], [193, 1, 1, "", "ldexp"], [194, 1, 1, "", "left_shift"], [195, 1, 1, "", "less"], [196, 1, 1, "", "less_equal"], [227, 1, 1, "", "linspace"], [228, 1, 1, "", "loadtxt"], [229, 1, 1, "", "log"], [230, 1, 1, "", "log10"], [231, 1, 1, "", "log1p"], [232, 1, 1, "", "log2"], [233, 1, 1, "", "logaddexp"], [234, 1, 1, "", "logaddexp2"], [235, 1, 1, "", "logical_and"], [236, 1, 1, "", "logical_not"], [237, 1, 1, "", "logical_or"], [238, 1, 1, "", "logical_xor"], [239, 1, 1, "", "logspace"], [240, 1, 1, "", "logsumexp"], [241, 1, 1, "", "mask_indices"], [242, 1, 1, "", "matmul"], [243, 1, 1, "", "matrix_transpose"], [244, 1, 1, "", "max"], [245, 1, 1, "", "maximum"], [246, 1, 1, "", "mean"], [247, 1, 1, "", "median"], [248, 1, 1, "", "meshgrid"], [249, 5, 1, "", "mgrid"], [250, 1, 1, "", "min"], [251, 1, 1, "", "minimum"], [252, 1, 1, "", "mod"], [253, 1, 1, "", "modf"], [254, 1, 1, "", "moveaxis"], [255, 1, 1, "", "multiply"], [256, 1, 1, "", "nan_to_num"], [257, 1, 1, "", "nanargmax"], [258, 1, 1, "", "nanargmin"], [259, 1, 1, "", "nancumprod"], [260, 1, 1, "", "nancumsum"], [261, 1, 1, "", "nanmax"], [262, 1, 1, "", "nanmean"], [263, 1, 1, "", "nanmin"], [264, 1, 1, "", "nanprod"], [265, 1, 1, "", "nanstd"], [266, 1, 1, "", "nansum"], [267, 1, 1, "", "nanvar"], [268, 3, 1, "", "ndarray"], [366, 1, 1, "", "ndim"], [367, 1, 1, "", "negative"], [368, 1, 1, "", "nextafter"], [369, 1, 1, "", "nonzero"], [370, 1, 1, "", "not_equal"], [371, 5, 1, "", "ogrid"], [372, 1, 1, "", "ones"], [373, 1, 1, "", "ones_like"], [374, 1, 1, "", "outer"], [375, 1, 1, "", "pad"], [376, 1, 1, "", "partition"], [377, 1, 1, "", "permute_dims"], [378, 1, 1, "", "place"], [379, 1, 1, "", "positive"], [380, 1, 1, "", "pow"], [381, 1, 1, "", "power"], [382, 1, 1, "", "prod"], [383, 1, 1, "", "proj"], [384, 1, 1, "", "ptp"], [385, 1, 1, "", "put"], [386, 1, 1, "", "put_along_axis"], [387, 1, 1, "", "putmask"], [388, 1, 1, "", "rad2deg"], [389, 1, 1, "", "radians"], [439, 1, 1, "", "ravel"], [440, 1, 1, "", "ravel_multi_index"], [441, 1, 1, "", "real"], [442, 1, 1, "", "real_if_close"], [443, 1, 1, "", "reciprocal"], [444, 1, 1, "", "reduce_hypot"], [445, 1, 1, "", "remainder"], [446, 1, 1, "", "repeat"], [447, 1, 1, "", "require"], [448, 1, 1, "", "reshape"], [449, 1, 1, "", "resize"], [450, 1, 1, "", "result_type"], [451, 1, 1, "", "right_shift"], [452, 1, 1, "", "rint"], [453, 1, 1, "", "roll"], [454, 1, 1, "", "rollaxis"], [455, 1, 1, "", "rot90"], [456, 1, 1, "", "round"], [457, 1, 1, "", "row_stack"], [458, 1, 1, "", "rsqrt"], [459, 1, 1, "", "searchsorted"], [460, 1, 1, "", "select"], [461, 1, 1, "", "shape"], [462, 1, 1, "", "sign"], [463, 1, 1, "", "signbit"], [464, 1, 1, "", "sin"], [465, 1, 1, "", "sinh"], [466, 1, 1, "", "size"], [467, 1, 1, "", "sort"], [468, 1, 1, "", "sort_complex"], [469, 1, 1, "", "spacing"], [470, 1, 1, "", "split"], [471, 1, 1, "", "sqrt"], [472, 1, 1, "", "square"], [473, 1, 1, "", "squeeze"], [474, 1, 1, "", "stack"], [475, 1, 1, "", "std"], [476, 1, 1, "", "subtract"], [477, 1, 1, "", "sum"], [478, 1, 1, "", "swapaxes"], [479, 1, 1, "", "take"], [480, 1, 1, "", "take_along_axis"], [481, 1, 1, "", "tan"], [482, 1, 1, "", "tanh"], [483, 1, 1, "", "tensordot"], [484, 1, 1, "", "tile"], [485, 1, 1, "", "trace"], [486, 1, 1, "", "transpose"], [487, 1, 1, "", "trapezoid"], [488, 1, 1, "", "tri"], [489, 1, 1, "", "tril"], [490, 1, 1, "", "tril_indices"], [491, 1, 1, "", "tril_indices_from"], [492, 1, 1, "", "trim_zeros"], [493, 1, 1, "", "triu"], [494, 1, 1, "", "triu_indices"], [495, 1, 1, "", "triu_indices_from"], [496, 1, 1, "", "true_divide"], [497, 1, 1, "", "trunc"], [498, 1, 1, "", "unique"], [499, 1, 1, "", "unravel_index"], [500, 1, 1, "", "unstack"], [501, 1, 1, "", "unwrap"], [502, 1, 1, "", "vander"], [503, 1, 1, "", "var"], [504, 1, 1, "", "vdot"], [505, 1, 1, "", "vecdot"], [506, 1, 1, "", "vsplit"], [507, 1, 1, "", "vstack"], [508, 1, 1, "", "where"], [509, 1, 1, "", "zeros"], [510, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[101, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[101, 3, 1, "", "T"], [101, 4, 1, "", "__eq__"], [101, 4, 1, "", "__ge__"], [101, 4, 1, "", "__getitem__"], [101, 4, 1, "", "__gt__"], [101, 4, 1, "", "__le__"], [101, 4, 1, "", "__len__"], [101, 4, 1, "", "__lt__"], [101, 4, 1, "", "__ne__"], [101, 4, 1, "", "__setitem__"], [101, 4, 1, "", "all"], [101, 4, 1, "", "any"], [101, 4, 1, "", "argmax"], [101, 4, 1, "", "argmin"], [101, 4, 1, "", "argsort"], [101, 4, 1, "", "asnumpy"], [101, 4, 1, "", "astype"], [101, 4, 1, "", "choose"], [101, 4, 1, "", "clip"], [101, 4, 1, "", "conj"], [101, 4, 1, "", "conjugate"], [101, 4, 1, "", "copy"], [101, 4, 1, "", "cumprod"], [101, 4, 1, "", "cumsum"], [101, 3, 1, "", "device"], [101, 4, 1, "", "diagonal"], [101, 4, 1, "", "dot"], [101, 3, 1, "", "dtype"], [101, 4, 1, "", "fill"], [101, 3, 1, "", "flags"], [101, 3, 1, "", "flat"], [101, 4, 1, "", "flatten"], [101, 4, 1, "", "get_array"], [101, 3, 1, "", "imag"], [101, 4, 1, "", "item"], [101, 3, 1, "", "itemsize"], [101, 3, 1, "", "mT"], [101, 4, 1, "", "max"], [101, 4, 1, "", "mean"], [101, 4, 1, "", "min"], [101, 3, 1, "", "nbytes"], [101, 3, 1, "", "ndim"], [101, 4, 1, "", "nonzero"], [101, 4, 1, "", "partition"], [101, 4, 1, "", "prod"], [101, 4, 1, "", "put"], [101, 4, 1, "", "ravel"], [101, 3, 1, "", "real"], [101, 4, 1, "", "repeat"], [101, 4, 1, "", "reshape"], [101, 4, 1, "", "round"], [101, 4, 1, "", "searchsorted"], [101, 3, 1, "", "shape"], [101, 3, 1, "", "size"], [101, 4, 1, "", "sort"], [101, 4, 1, "", "squeeze"], [101, 4, 1, "", "std"], [101, 3, 1, "", "strides"], [101, 4, 1, "", "sum"], [101, 4, 1, "", "swapaxes"], [101, 3, 1, "", "sycl_context"], [101, 3, 1, "", "sycl_device"], [101, 3, 1, "", "sycl_queue"], [101, 4, 1, "", "take"], [101, 4, 1, "", "to_device"], [101, 4, 1, "", "trace"], [101, 4, 1, "", "transpose"], [101, 3, 1, "", "usm_type"], [101, 4, 1, "", "var"]], "dpnp.dtype": [[104, 4, 1, "", "__eq__"], [104, 4, 1, "", "__ge__"], [104, 4, 1, "", "__getitem__"], [104, 4, 1, "", "__gt__"], [104, 4, 1, "", "__le__"], [104, 4, 1, "", "__len__"], [104, 4, 1, "", "__lt__"], [104, 4, 1, "", "__ne__"], [104, 3, 1, "", "alignment"], [104, 3, 1, "", "base"], [104, 3, 1, "", "byteorder"], [104, 3, 1, "", "char"], [104, 3, 1, "", "descr"], [104, 3, 1, "", "fields"], [104, 3, 1, "", "flags"], [104, 3, 1, "", "hasobject"], [104, 3, 1, "", "isalignedstruct"], [104, 3, 1, "", "isbuiltin"], [104, 3, 1, "", "isnative"], [104, 3, 1, "", "itemsize"], [104, 3, 1, "", "kind"], [104, 3, 1, "", "metadata"], [104, 3, 1, "", "name"], [104, 3, 1, "", "names"], [104, 3, 1, "", "ndim"], [104, 4, 1, "", "newbyteorder"], [104, 3, 1, "", "num"], [104, 3, 1, "", "shape"], [104, 3, 1, "", "str"], [104, 3, 1, "", "subdtype"], [104, 3, 1, "", "type"]], "dpnp.fft": [[119, 1, 1, "", "fft"], [120, 1, 1, "", "fft2"], [121, 1, 1, "", "fftfreq"], [122, 1, 1, "", "fftn"], [123, 1, 1, "", "fftshift"], [124, 1, 1, "", "hfft"], [125, 1, 1, "", "ifft"], [126, 1, 1, "", "ifft2"], [127, 1, 1, "", "ifftn"], [128, 1, 1, "", "ifftshift"], [129, 1, 1, "", "ihfft"], [130, 1, 1, "", "irfft"], [131, 1, 1, "", "irfft2"], [132, 1, 1, "", "irfftn"], [133, 1, 1, "", "rfft"], [134, 1, 1, "", "rfft2"], [135, 1, 1, "", "rfftfreq"], [136, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[140, 4, 1, "", "__eq__"], [140, 4, 1, "", "__ge__"], [140, 4, 1, "", "__getitem__"], [140, 4, 1, "", "__gt__"], [140, 4, 1, "", "__iter__"], [140, 4, 1, "", "__le__"], [140, 4, 1, "", "__lt__"], [140, 4, 1, "", "__ne__"], [140, 4, 1, "", "__next__"], [140, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[197, 1, 1, "", "cholesky"], [198, 1, 1, "", "cond"], [199, 1, 1, "", "cross"], [200, 1, 1, "", "det"], [201, 1, 1, "", "diagonal"], [202, 1, 1, "", "eig"], [203, 1, 1, "", "eigh"], [204, 1, 1, "", "eigvals"], [205, 1, 1, "", "eigvalsh"], [206, 1, 1, "", "inv"], [207, 1, 1, "", "lstsq"], [208, 1, 1, "", "matmul"], [209, 1, 1, "", "matrix_norm"], [210, 1, 1, "", "matrix_power"], [211, 1, 1, "", "matrix_rank"], [212, 1, 1, "", "multi_dot"], [213, 1, 1, "", "norm"], [214, 1, 1, "", "outer"], [215, 1, 1, "", "pinv"], [216, 1, 1, "", "qr"], [217, 1, 1, "", "slogdet"], [218, 1, 1, "", "solve"], [219, 1, 1, "", "svd"], [220, 1, 1, "", "svdvals"], [221, 1, 1, "", "tensordot"], [222, 1, 1, "", "tensorinv"], [223, 1, 1, "", "tensorsolve"], [224, 1, 1, "", "trace"], [225, 1, 1, "", "vecdot"], [226, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[269, 6, 1, "", "T"], [270, 4, 1, "", "__abs__"], [271, 4, 1, "", "__add__"], [272, 4, 1, "", "__and__"], [273, 4, 1, "", "__bool__"], [274, 4, 1, "", "__complex__"], [275, 4, 1, "", "__copy__"], [276, 4, 1, "", "__eq__"], [277, 4, 1, "", "__float__"], [278, 4, 1, "", "__floordiv__"], [279, 4, 1, "", "__ge__"], [280, 4, 1, "", "__getitem__"], [281, 4, 1, "", "__gt__"], [282, 4, 1, "", "__iadd__"], [283, 4, 1, "", "__iand__"], [284, 4, 1, "", "__ifloordiv__"], [285, 4, 1, "", "__ilshift__"], [286, 4, 1, "", "__imod__"], [287, 4, 1, "", "__imul__"], [288, 4, 1, "", "__int__"], [289, 4, 1, "", "__invert__"], [290, 4, 1, "", "__ior__"], [291, 4, 1, "", "__ipow__"], [292, 4, 1, "", "__irshift__"], [293, 4, 1, "", "__isub__"], [294, 4, 1, "", "__itruediv__"], [295, 4, 1, "", "__ixor__"], [296, 4, 1, "", "__le__"], [297, 4, 1, "", "__len__"], [298, 4, 1, "", "__lshift__"], [299, 4, 1, "", "__lt__"], [300, 4, 1, "", "__matmul__"], [301, 4, 1, "", "__mod__"], [302, 4, 1, "", "__mul__"], [303, 4, 1, "", "__ne__"], [304, 4, 1, "", "__neg__"], [305, 4, 1, "", "__new__"], [306, 4, 1, "", "__or__"], [307, 4, 1, "", "__pos__"], [308, 4, 1, "", "__pow__"], [309, 4, 1, "", "__repr__"], [310, 4, 1, "", "__rshift__"], [311, 4, 1, "", "__setitem__"], [312, 4, 1, "", "__str__"], [313, 4, 1, "", "__sub__"], [314, 4, 1, "", "__truediv__"], [315, 4, 1, "", "__xor__"], [316, 4, 1, "", "all"], [317, 4, 1, "", "any"], [318, 4, 1, "", "argmax"], [319, 4, 1, "", "argmin"], [320, 4, 1, "", "argsort"], [321, 4, 1, "", "astype"], [322, 4, 1, "", "choose"], [323, 4, 1, "", "clip"], [324, 4, 1, "", "conj"], [325, 4, 1, "", "conjugate"], [326, 4, 1, "", "copy"], [327, 4, 1, "", "cumprod"], [328, 4, 1, "", "cumsum"], [329, 4, 1, "", "diagonal"], [330, 6, 1, "", "dtype"], [331, 4, 1, "", "fill"], [332, 6, 1, "", "flags"], [333, 6, 1, "", "flat"], [334, 4, 1, "", "flatten"], [335, 6, 1, "", "imag"], [336, 4, 1, "", "item"], [337, 6, 1, "", "itemsize"], [338, 6, 1, "", "mT"], [339, 4, 1, "", "max"], [340, 4, 1, "", "mean"], [341, 4, 1, "", "min"], [342, 6, 1, "", "nbytes"], [343, 6, 1, "", "ndim"], [344, 4, 1, "", "nonzero"], [345, 4, 1, "", "partition"], [346, 4, 1, "", "prod"], [347, 4, 1, "", "put"], [348, 4, 1, "", "ravel"], [349, 6, 1, "", "real"], [350, 4, 1, "", "repeat"], [351, 4, 1, "", "reshape"], [352, 4, 1, "", "round"], [353, 4, 1, "", "searchsorted"], [354, 6, 1, "", "shape"], [355, 6, 1, "", "size"], [356, 4, 1, "", "sort"], [357, 4, 1, "", "squeeze"], [358, 4, 1, "", "std"], [359, 6, 1, "", "strides"], [360, 4, 1, "", "sum"], [361, 4, 1, "", "swapaxes"], [362, 4, 1, "", "take"], [363, 4, 1, "", "trace"], [364, 4, 1, "", "transpose"], [365, 4, 1, "", "var"]], "dpnp.random": [[390, 2, 1, "", "RandomState"], [391, 1, 1, "", "beta"], [392, 1, 1, "", "binomial"], [393, 1, 1, "", "bytes"], [394, 1, 1, "", "chisquare"], [395, 1, 1, "", "choice"], [396, 1, 1, "", "dirichlet"], [397, 1, 1, "", "exponential"], [398, 1, 1, "", "f"], [399, 1, 1, "", "gamma"], [400, 1, 1, "", "geometric"], [401, 1, 1, "", "gumbel"], [402, 1, 1, "", "hypergeometric"], [403, 1, 1, "", "laplace"], [404, 1, 1, "", "logistic"], [405, 1, 1, "", "lognormal"], [406, 1, 1, "", "logseries"], [407, 1, 1, "", "multinomial"], [408, 1, 1, "", "multivariate_normal"], [409, 1, 1, "", "negative_binomial"], [410, 1, 1, "", "noncentral_chisquare"], [411, 1, 1, "", "noncentral_f"], [412, 1, 1, "", "normal"], [413, 1, 1, "", "pareto"], [414, 1, 1, "", "permutation"], [415, 1, 1, "", "poisson"], [416, 1, 1, "", "power"], [417, 1, 1, "", "rand"], [418, 1, 1, "", "randint"], [419, 1, 1, "", "randn"], [420, 1, 1, "", "random"], [421, 1, 1, "", "random_integers"], [422, 1, 1, "", "random_sample"], [423, 1, 1, "", "ranf"], [424, 1, 1, "", "rayleigh"], [425, 1, 1, "", "sample"], [426, 1, 1, "", "seed"], [427, 1, 1, "", "shuffle"], [428, 1, 1, "", "standard_cauchy"], [429, 1, 1, "", "standard_exponential"], [430, 1, 1, "", "standard_gamma"], [431, 1, 1, "", "standard_normal"], [432, 1, 1, "", "standard_t"], [433, 1, 1, "", "triangular"], [434, 1, 1, "", "uniform"], [435, 1, 1, "", "vonmises"], [436, 1, 1, "", "wald"], [437, 1, 1, "", "weibull"], [438, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[390, 4, 1, "", "__eq__"], [390, 4, 1, "", "__ge__"], [390, 4, 1, "", "__gt__"], [390, 4, 1, "", "__le__"], [390, 4, 1, "", "__lt__"], [390, 4, 1, "", "__ne__"], [390, 4, 1, "", "get_state"], [390, 4, 1, "", "get_sycl_device"], [390, 4, 1, "", "get_sycl_queue"], [390, 4, 1, "", "normal"], [390, 4, 1, "", "rand"], [390, 4, 1, "", "randint"], [390, 4, 1, "", "randn"], [390, 4, 1, "", "random_sample"], [390, 4, 1, "", "standard_normal"], [390, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 86, 89, 101, 104, 105, 120, 122, 124, 126, 127, 129, 131, 132, 134, 136, 137, 152, 153, 207, 211, 213, 215, 219, 220, 221, 330, 364, 390, 391, 392, 397, 398, 399, 401, 402, 403, 404, 405, 407, 409, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 448, 483, 484, 518], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 160, 162, 165, 166, 167, 168, 171, 174, 175, 177, 180, 182, 183, 184, 185, 190, 191, 192, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 326, 329, 331, 335, 336, 338, 349, 352, 354, 356, 358, 363, 364, 365, 366, 369, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 389, 390, 392, 397, 399, 400, 401, 403, 404, 405, 407, 408, 409, 412, 414, 415, 416, 417, 420, 422, 423, 424, 425, 428, 431, 433, 434, 435, 440, 443, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 508, 509, 510, 518], "00": [82, 107, 119, 464], "000": [256, 392], "00000000005e": 115, "00000000e": [119, 256], "000000082740371e": 115, "000000e": [82, 464], "00001e10": [17, 177], "0001e10": 177, "000e": 107, "000j": 256, "002": 256, "00867716": 394, "01": 107, "02": [107, 256], "03": 256, "03088525e": 108, "0396842": 239, "04": 107, "04719755": 389, "04921661": 390, "05": [17, 107, 177], "0614962j": [120, 134], "06310682": 390, "07": 256, "07944154": [87, 217], "08": [17, 82, 107, 145, 177, 408, 464], "08156915": 390, "0943951": 389, "09640474": 234, "09861229": [87, 217, 231], "0d": 34, "0dev0": 6, "0j": [20, 100, 101, 178, 179, 186, 187, 208, 242, 335, 349, 462], "0th": [221, 483], "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 181, 186, 187, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 320, 321, 326, 329, 331, 334, 335, 336, 338, 343, 345, 349, 354, 356, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 392, 394, 395, 397, 399, 401, 403, 404, 405, 407, 408, 409, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 429, 431, 434, 439, 440, 441, 442, 443, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 518], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 60, 63, 71, 78, 87, 88, 89, 93, 94, 97, 98, 101, 102, 104, 106, 107, 115, 116, 123, 135, 157, 160, 166, 167, 168, 173, 177, 190, 191, 193, 194, 224, 225, 229, 230, 231, 232, 239, 240, 247, 255, 351, 375, 384, 386, 390, 392, 402, 414, 444, 450, 451, 453, 456, 459, 470, 474, 480, 489, 490, 491, 493, 494, 495, 500, 505, 506, 508], "100": [93, 135, 160, 177, 191, 212, 239, 375, 402, 428, 442, 501], "1000": [67, 160, 212, 239, 391, 392, 397, 399, 401, 402, 403, 404, 405, 412, 413, 416, 418, 420, 423, 425, 431, 435, 436, 437, 438, 442, 487], "10000": [89, 212, 400, 415, 424, 434], "100000": 409, "1000000": [428, 430, 432, 433], "1024": 0, "105": 107, "11": [31, 32, 56, 83, 93, 94, 101, 102, 116, 162, 168, 213, 224, 351, 409, 418, 456, 459, 465, 489, 490, 491, 493, 494, 495, 500, 506, 508], "110": [106, 175], "111111": 256, "113": 233, "11570901": 390, "1179187": 390, "118033988749895": 475, "119": 106, "1196081": 390, "12": [10, 31, 32, 55, 86, 91, 93, 94, 98, 102, 104, 106, 116, 120, 134, 159, 168, 173, 192, 220, 239, 382, 384, 389, 414, 440, 459, 489, 490, 491, 493, 494, 495, 500, 506, 508], "120": [88, 91], "123": [101, 107, 336], "125": [145, 380, 381, 502], "127": 160, "128": [0, 160, 256], "12th": 106, "13": [10, 31, 32, 59, 61, 93, 94, 100, 102, 104, 106, 168, 176, 208, 242, 440, 459, 490, 491, 494, 495, 499, 500, 506], "130": 106, "132": 6, "134": 175, "13436424": 390, "135": [29, 51], "13710533": 394, "139884456208480": 16, "13j": 442, "14": [31, 32, 58, 59, 61, 93, 94, 100, 102, 139, 168, 175, 176, 221, 459, 483, 490, 491, 494, 495, 500, 506], "140": 501, "140053638309840": 21, "14157194": 487, "14159265": [13, 24, 29, 51, 90, 389], "14423775e": 119, "14j": 442, "15": [31, 32, 89, 93, 94, 98, 102, 106, 124, 129, 168, 213, 230, 414, 459, 490, 491, 494, 495, 500, 506], "150": 91, "15888336": 239, "15j": 442, "16": [6, 58, 93, 94, 102, 104, 119, 145, 155, 160, 162, 168, 226, 255, 380, 381, 442, 460, 481, 490, 491, 494, 495, 500, 506], "1621": [440, 499], "16227766": [198, 444], "16394577": 390, "164": 234, "166": 234, "16j": 119, "17": [6, 119, 120, 134, 500], "17157288": [203, 205], "17281316e": 119, "177": [160, 239], "17j": 119, "18": [6, 88, 104, 105, 106, 122, 199, 209, 213, 239, 500], "180": [29, 51, 90, 91, 106, 388, 501, 525], "1805": 10, "18236388": 390, "18557831": 390, "1887902": 389, "19": [10, 84, 104, 440, 500, 501], "1923875335537315": 419, "19245009": 458, "1924881e": 145, "1965": 10, "19722458": 87, "1985": 213, "1d": [105, 385, 386, 480, 487], "1e": [17, 115, 177, 202, 230, 231, 233, 234, 408], "1e10": [17, 177], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 75, 76, 101, 130, 173, 178, 186, 202, 214, 219, 335, 349, 374, 441, 468, 472], "1th": [221, 483], "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 178, 181, 186, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 321, 326, 329, 331, 334, 336, 338, 343, 345, 354, 355, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 394, 398, 402, 408, 414, 417, 419, 430, 432, 433, 436, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510], "20": [6, 60, 88, 98, 106, 135, 159, 174, 177, 191, 192, 193, 194, 213, 386, 392, 407, 459, 480, 500, 501], "20000": 392, "2007": 10, "200e": 107, "20477401j": [120, 134], "2048": 0, "21": [89, 104, 500], "210": 91, "215": 239, "21941987": 390, "21968665": 390, "22": [385, 440, 499, 500], "220": 501, "220446049250313e": 442, "222222": 256, "22460635e": 481, "22464680e": 119, "22497216": 213, "22776602": 239, "23": [6, 390, 440, 500], "230": 106, "23598776": 389, "23606798": 213, "24": [31, 32, 86, 88, 101, 105, 106, 175, 191, 199, 221, 222, 224, 354, 382, 483, 485, 500], "240": 91, "24264069": 213, "24544512": 390, "247219128924647": 265, "25": [104, 106, 111, 121, 162, 166, 167, 206, 227, 255, 267, 419, 428, 460, 502, 503], "255": [58, 62], "25506903": 390, "256": [0, 160], "26": [64, 106], "260": 501, "26618007j": 232, "27": [68, 145, 239, 380, 381, 458, 502], "270": 91, "273": 6, "28": 106, "28000000e": 256, "2800000e": 256, "283185307179586": 501, "28318531": 501, "28352814": 390, "28904982": 234, "297": 10, "299": 6, "2d": [219, 242, 455, 498], "2e": 89, "2f": 0, "2j": [75, 76, 100, 119, 173, 178, 186, 203, 205, 208, 242, 441, 462, 468, 504], "2k": 501, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 68, 71, 72, 73, 74, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 122, 123, 124, 128, 129, 131, 132, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 160, 162, 166, 167, 168, 169, 170, 171, 173, 174, 175, 178, 179, 181, 186, 187, 188, 190, 191, 194, 198, 199, 200, 201, 202, 206, 207, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 326, 329, 334, 336, 338, 343, 345, 354, 355, 356, 364, 366, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 385, 389, 390, 394, 398, 405, 408, 414, 417, 418, 419, 429, 433, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 463, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "30": [86, 91, 101, 106, 135, 355, 386, 389, 480, 504], "300": [91, 501], "3003003": 443, "301": 10, "30102999566": 230, "3012989": 465, "30258509": [87, 240], "308": 256, "308j": 256, "31": [64, 160, 440, 499], "312": 108, "316": 239, "32": [104, 106, 160, 221, 264, 266, 483], "33": 443, "330": 91, "333": 212, "33333333": 256, "3333333e": 256, "33340275": 487, "33486982e": 119, "33836967": 390, "340": 501, "34074171": 390, "34132519": 239, "34846923": [209, 213], "34960421": 239, "35": [106, 400], "35106603e": [209, 213], "35348576": 226, "35355338": 458, "36": 86, "360": 501, "37": [440, 456, 499], "371139e": 82, "38": [175, 392], "380": 501, "38268343": 203, "38268343j": 203, "38629436": 87, "38885": 392, "389056099": [112, 115], "39": 6, "39295758": 390, "397": 6, "398": 6, "3e": [0, 89, 442], "3j": [100, 208, 242, 468], "3rd": [73, 74, 102, 470], "3x3": 241, "3x8000": 429, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 62, 65, 71, 72, 73, 74, 77, 80, 82, 84, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 116, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 141, 142, 145, 147, 148, 149, 153, 154, 155, 157, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 173, 174, 175, 178, 181, 186, 190, 191, 193, 196, 199, 200, 201, 206, 208, 209, 210, 211, 213, 217, 220, 221, 222, 223, 224, 226, 227, 232, 235, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 258, 260, 262, 265, 267, 326, 329, 334, 338, 343, 345, 354, 356, 364, 366, 369, 371, 373, 375, 377, 380, 381, 382, 384, 385, 389, 390, 391, 394, 414, 419, 435, 439, 440, 441, 442, 445, 446, 448, 449, 453, 454, 455, 456, 457, 460, 462, 466, 467, 470, 471, 474, 475, 476, 478, 479, 483, 484, 486, 487, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 510], "40": [60, 106, 135, 193, 194, 386, 480], "40882036": 390, "4096": 0, "41": [440, 499], "41421356": [198, 213], "42": 460, "420": 501, "429": 6, "44": [378, 385], "4400": [106, 221, 483], "443469": 239, "44509285e": 119, "45": [20, 29, 51, 226], "4532": [106, 221, 483], "46": 106, "460": 501, "46394577": 390, "464": 239, "4664": [106, 221, 483], "47": 6, "4730": [106, 221, 483], "4796": [106, 221, 483], "48": [6, 86], "48093112": 390, "4874": [106, 221, 483], "48927254": 390, "49": 6, "4928": [106, 221, 483], "49543509": 390, "49778714": 501, "499128": 100, "4d": 219, "4e": 442, "4j": [173, 441, 504], "4x4": [490, 494], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 69, 71, 73, 74, 77, 80, 81, 84, 86, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 111, 116, 120, 121, 123, 131, 134, 135, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 159, 160, 162, 165, 166, 167, 168, 169, 170, 173, 174, 175, 178, 181, 186, 190, 191, 193, 194, 197, 199, 201, 203, 205, 206, 212, 213, 214, 218, 221, 224, 225, 226, 227, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 262, 265, 321, 326, 336, 338, 355, 366, 369, 371, 372, 373, 374, 375, 377, 380, 381, 384, 385, 389, 390, 391, 392, 394, 397, 409, 413, 414, 415, 416, 419, 422, 437, 439, 440, 441, 442, 443, 445, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 466, 468, 470, 474, 475, 477, 478, 479, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510], "50": [120, 134, 135, 160, 191, 221, 233, 234, 239, 386, 480, 483, 487, 508], "500": [191, 501], "5018": [106, 221, 483], "5091786": 83, "51": 6, "512": 0, "5162": [106, 221, 483], "52069395e": 119, "52359878": 389, "52928804": 390, "5306": [106, 221, 483], "5399045e": 145, "54": 390, "540": 501, "542": 6, "54288406": 390, "54465213": 390, "548739": 465, "54930614": [30, 52], "55": [378, 385, 460], "5555555555555554": 267, "56": 6, "562": 239, "5620499351813308": [11, 12], "56920387": 390, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 389, 501], "58997253": 390, "591953": 83, "5e": [233, 234], "5j": [249, 371, 468], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 39, 53, 56, 62, 64, 71, 73, 74, 80, 86, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 110, 115, 116, 121, 124, 135, 142, 145, 158, 159, 162, 168, 169, 173, 174, 175, 181, 190, 191, 192, 199, 201, 209, 213, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 239, 241, 243, 247, 259, 260, 264, 326, 336, 338, 354, 366, 369, 373, 375, 378, 380, 381, 384, 390, 407, 409, 414, 419, 439, 440, 441, 447, 448, 453, 454, 455, 456, 457, 460, 466, 468, 470, 474, 476, 477, 478, 479, 483, 485, 487, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 510], "60": [86, 91, 106, 192, 221, 386, 480, 483, 501, 508], "600": 191, "60943791": 87, "61799388": 389, "62": 175, "6227766": 160, "62318272": 394, "62341325": 160, "624": 107, "63": 160, "63317787e": 481, "63522211": 390, "63836967": 390, "64": [0, 4, 106, 145, 160, 264, 266, 380, 381, 456], "64000": 106, "65745445": [14, 25], "66519143": 389, "6666666666666665": 262, "67": 106, "67305985": 152, "673174": 390, "67718303": 390, "69295758": 390, "69314718": [87, 217, 231], "6990877": 390, "6j": [173, 441, 504], "7": [15, 17, 22, 23, 39, 53, 69, 71, 80, 84, 86, 89, 92, 93, 94, 96, 97, 99, 101, 102, 105, 112, 116, 142, 146, 160, 162, 168, 175, 177, 190, 191, 201, 209, 213, 219, 221, 224, 226, 241, 243, 247, 252, 255, 336, 338, 369, 375, 383, 384, 390, 414, 440, 441, 445, 450, 452, 453, 455, 470, 476, 477, 478, 479, 483, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 504, 506, 508], "70": [191, 504, 508], "700": 191, "700e": 107, "70710677": [101, 335, 349], "70710678": [198, 202], "70710678j": 202, "70882036": 390, "71238898": 389, "718281828": [112, 115], "72": 86, "720": [88, 501], "72075441": 239, "72538256": [27, 47], "74165739": 213, "742278e": 464, "74596669": [209, 213], "74921661": 390, "75": [56, 111, 121, 162, 167, 206, 227], "754": 138, "75958653": 389, "76096244": 390, "76377462": 390, "77447665": 234, "78539816": [20, 28, 29, 50, 51, 501], "78927254": 390, "79175947": 87, "79769313e": 256, "7j": 383, "8": [4, 15, 17, 22, 39, 53, 68, 71, 80, 86, 92, 93, 94, 96, 97, 101, 102, 104, 106, 107, 116, 119, 121, 135, 136, 142, 145, 160, 162, 168, 173, 177, 190, 200, 201, 213, 217, 219, 220, 221, 222, 224, 225, 226, 227, 239, 241, 243, 338, 354, 369, 375, 380, 381, 382, 384, 390, 414, 433, 440, 441, 453, 455, 458, 464, 470, 479, 483, 485, 487, 489, 490, 491, 493, 494, 495, 499, 500, 501, 502, 505, 506, 508], "80": [104, 106, 508], "8000": 429, "80226506": 390, "8058837395885292": 226, "81715362": 390, "827941": [160, 239], "82842712": [203, 205], "84288406": 390, "84401099": 390, "84743374": 390, "84803548": 213, "85": 106, "86": 175, "87649168": 233, "88": 105, "88178420e": 119, "881943016134134": 226, "88194302": 226, "88997253": 390, "89920014": 394, "8f": 104, "8j": 504, "9": [4, 15, 22, 39, 53, 71, 80, 86, 89, 92, 93, 94, 96, 99, 101, 102, 106, 108, 116, 119, 122, 123, 128, 139, 145, 147, 155, 160, 162, 168, 177, 190, 201, 202, 207, 209, 213, 215, 216, 219, 220, 221, 224, 226, 239, 241, 255, 256, 336, 369, 384, 390, 392, 394, 414, 440, 441, 453, 470, 471, 476, 483, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 502, 506, 508], "90": [20, 91, 388, 455, 508], "917152": 482, "92387953": 203, "92387953j": 203, "94": 106, "94591015": 87, "95": 207, "95799250e": 119, "98": [208, 242], "98024613": 239, "99": [105, 231, 386], "99322285": [14, 25], "99532227": 111, "996272": 482, "99822295": [27, 47], "99853728": 111, "999": 107, "9990000e": 256, "99959305": 111, "99989938": 111, "9999": 256, "99997791": 111, "999999e": 177, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 75, 76, 78, 79, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 173, 174, 176, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 201, 203, 204, 205, 207, 211, 212, 213, 216, 217, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 247, 249, 251, 252, 255, 259, 260, 264, 266, 321, 326, 334, 336, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 383, 388, 389, 390, 392, 409, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 439, 440, 441, 443, 445, 448, 451, 452, 455, 458, 462, 463, 464, 465, 469, 470, 471, 472, 476, 478, 479, 481, 482, 483, 484, 486, 488, 490, 492, 494, 496, 497, 502, 505, 506, 508, 509, 510, 525], "AND": [16, 58, 59, 61, 62, 64, 176, 235, 236, 237, 238], "And": [4, 48, 49, 93, 101, 321, 490, 494], "As": 498, "Be": 202, "Being": 3, "But": [4, 104], "By": [31, 32, 42, 49, 86, 101, 120, 124, 126, 130, 132, 136, 160, 207, 227, 239, 242, 244, 246, 250, 257, 258, 261, 262, 263, 264, 265, 266, 267, 321, 446, 453, 466, 475, 479, 488, 490, 492, 494, 503, 505], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 331, 334, 335, 336, 343, 349, 351, 354, 359, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 518, 525], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 71, 73, 74, 84, 86, 87, 88, 89, 92, 96, 97, 100, 101, 102, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 148, 149, 151, 156, 160, 162, 166, 167, 168, 169, 173, 174, 175, 177, 181, 184, 185, 186, 197, 199, 207, 209, 210, 211, 212, 213, 215, 216, 219, 221, 223, 224, 226, 227, 228, 239, 240, 244, 245, 246, 247, 248, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 338, 356, 377, 378, 382, 385, 386, 390, 412, 434, 441, 442, 444, 446, 447, 448, 449, 453, 456, 457, 459, 467, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 498, 501, 502, 503, 504, 505, 506, 507, 508, 518, 525], "In": [4, 10, 31, 32, 86, 88, 89, 106, 107, 125, 126, 127, 130, 132, 162, 197, 204, 212, 216, 234, 239, 259, 260, 262, 264, 266, 382, 385, 390, 434, 439, 440, 448, 449, 477, 479, 497], "It": [4, 10, 16, 21, 22, 31, 32, 71, 88, 89, 98, 100, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 162, 203, 205, 234, 242, 246, 247, 257, 258, 259, 260, 261, 262, 263, 265, 267, 375, 382, 448, 449, 460, 469, 475, 477, 479, 503, 525], "Its": [71, 222, 386, 485], "NOT": [59, 61, 176, 235, 236, 237, 238], "No": [41, 42, 106, 197], "Not": [16, 21, 42, 180, 256, 259, 260, 261, 263, 264, 266, 382], "OR": [21, 58, 59, 61, 62, 64, 176, 235, 236, 237, 238], "On": 4, "One": [53, 54, 55, 86, 103, 104, 130, 214, 375, 448], "Ones": 36, "Or": [162, 487], "That": 241, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 174, 176, 177, 179, 180, 181, 182, 183, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 244, 245, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 321, 326, 335, 338, 343, 345, 349, 354, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 393, 395, 396, 406, 411, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 507, 508, 509, 510, 518, 521, 525], "Then": [10, 43, 45, 241], "There": [10, 227, 498], "These": [4, 22, 104, 106, 107, 114, 241, 254, 386, 480, 490, 494, 518, 521], "To": [4, 124, 130, 132, 145, 369, 501], "With": [31, 32, 56, 84, 168, 209, 213, 226, 244, 250, 257, 258, 264, 266, 382, 477, 506], "_": [0, 167, 474, 487], "__array_interface__": 104, "__bool__": 518, "__dlpack__": 151, "__dlpack_device__": 151, "__eq__": [101, 104, 140, 390], "__ge__": [101, 104, 140, 390], "__getitem__": [101, 104, 140], "__gt__": [101, 104, 140, 390], "__iter__": 140, "__le__": [101, 104, 140, 390], "__len__": [101, 104], "__lt__": [101, 104, 140, 390], "__main__": 0, "__name__": 0, "__ne__": [101, 104, 140, 390], "__next__": 140, "__setitem__": [101, 140], "__sycl_usm_array_interface__": 44, "_dtypes_list": 0, "_f": 213, "a1": [37, 38], "a2": [37, 38], "a_": [10, 213], "a_ax": [221, 483], "a_i": [225, 505], "a_k": 10, "a_m": 10, "a_resamp": 130, "ab": [6, 10, 12, 17, 177, 213], "abc": 106, "abcd": 107, "abl": 213, "about": [43, 45, 101, 138, 202, 332, 375, 447, 518], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 87, 92, 95, 122, 127, 132, 136, 174, 201, 216, 224, 240, 256, 444, 488, 489, 493], "absolut": [6, 11, 17, 20, 118, 159, 177, 192, 217, 265, 267, 383, 442, 475, 501, 503, 525], "accept": [33, 106, 214, 390, 467, 490, 494], "access": [10, 93, 94, 137, 241, 490, 494, 518], "accord": [16, 21, 56, 63, 67, 104, 136, 138, 202, 203, 204, 205, 240, 246, 247, 262, 265, 267, 375, 444, 451, 475, 503], "accordingli": [86, 261, 263], "account": [439, 448], "accumul": [87, 88, 89, 106, 166, 224, 259, 260, 264, 266, 382, 477, 485], "accur": [104, 115, 162, 231, 233], "accuraci": [125, 126, 127, 130, 132], "achiev": 106, "aco": 24, "acosh": 25, "across": [96, 167, 259, 260, 264, 266], "activ": 4, "actual": [104, 166, 167, 197, 212], "ad": [17, 104, 107, 114, 130, 177, 200, 217, 234, 501, 521], "add": [6, 104, 525], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [87, 197, 262, 498], "address": 104, "adjac": [201, 224, 469, 501], "advanc": 106, "advers": 106, "advis": 4, "affect": [23, 96, 106, 137, 166, 167], "after": [103, 137, 368, 375, 409, 453], "after_1": 375, "after_n": 375, "ag": 104, "against": [17, 31, 32, 65, 66, 71, 84, 161, 177, 209, 213, 215, 226, 244, 250, 257, 258, 264, 266, 382, 386, 477, 480], "ai": [3, 386, 480], "ai_max": 480, "ai_min": 480, "ainv": [206, 222], "al": 10, "algebra": [511, 521], "algorithm": [10, 33, 106, 107, 119, 125, 133, 467], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 60, 61, 63, 73, 74, 99, 109, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 158, 176, 194, 252, 268, 373, 377, 380, 381, 390, 420, 423, 425, 439, 445, 448, 451, 457, 486, 496, 501, 507, 510], "alias": [9, 124, 125, 130, 132], "align": 104, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 72, 84, 91, 97, 101, 103, 104, 106, 107, 112, 113, 115, 117, 122, 123, 127, 128, 131, 132, 136, 137, 142, 143, 144, 152, 153, 155, 160, 162, 169, 171, 173, 190, 197, 199, 211, 215, 226, 227, 239, 244, 247, 250, 257, 258, 261, 263, 321, 324, 331, 345, 375, 382, 392, 441, 442, 453, 457, 460, 473, 477, 498, 500, 505, 507, 518, 525], "allclos": [6, 37, 177, 206, 215, 216, 218, 219, 223], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 78, 87, 92, 93, 95, 101, 108, 109, 117, 121, 135, 139, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 184, 185, 227, 228, 239, 240, 241, 246, 247, 249, 262, 265, 267, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 444, 473, 475, 488, 490, 494, 502, 503, 505, 509, 510], "allow": [39, 49, 101, 106, 166, 167, 181, 234, 241, 247, 321, 351, 479, 518], "alltru": 6, "almost": [34, 202, 490], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 72, 73, 74, 84, 87, 88, 89, 92, 93, 95, 96, 97, 101, 102, 103, 105, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 142, 143, 144, 148, 149, 154, 160, 162, 168, 169, 174, 213, 216, 221, 222, 223, 224, 225, 226, 227, 239, 240, 244, 245, 246, 247, 248, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 318, 319, 320, 327, 328, 339, 341, 346, 347, 355, 358, 360, 362, 363, 365, 375, 378, 382, 384, 385, 386, 439, 444, 446, 453, 454, 455, 457, 460, 466, 467, 470, 474, 475, 477, 479, 480, 483, 484, 485, 487, 490, 491, 494, 495, 498, 500, 501, 503, 505, 506, 507, 518], "alpha": [391, 396, 397, 413, 416], "alreadi": [4, 10, 41, 42, 53, 54, 55, 374, 375, 498], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 79, 99, 101, 104, 106, 110, 114, 122, 127, 131, 132, 133, 136, 145, 147, 148, 149, 150, 154, 156, 159, 162, 163, 164, 165, 166, 170, 177, 181, 192, 194, 195, 196, 197, 233, 234, 241, 245, 251, 252, 254, 255, 354, 369, 370, 380, 381, 428, 445, 451, 476, 479, 496, 498, 518], "alter": 96, "altern": [3, 4, 16, 21, 88, 89, 100, 101, 242, 244, 246, 247, 250, 259, 260, 262, 264, 265, 266, 267, 364, 382, 475, 477, 503], "although": [20, 104, 126, 127, 128, 484], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 96, 101, 102, 105, 118, 145, 151, 168, 203, 205, 265, 267, 321, 369, 448, 468, 475, 503, 506], "amax": [6, 244], "ambigu": 518, "amin": [6, 250], "among": 105, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 187, 190, 192, 193, 194, 195, 196, 199, 200, 201, 204, 207, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 275, 320, 321, 322, 323, 326, 336, 339, 343, 345, 347, 350, 351, 354, 355, 356, 357, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 397, 398, 400, 409, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 518, 525], "anaconda": 3, "analog": [120, 122, 124, 126, 127, 129], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 90, 91, 173, 388, 389, 441, 442, 501, 525], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 65, 66, 78, 92, 95, 97, 101, 104, 106, 107, 120, 122, 126, 127, 132, 136, 137, 157, 158, 160, 162, 167, 169, 179, 187, 188, 210, 223, 227, 239, 241, 261, 263, 321, 343, 375, 390, 434, 447, 469, 502, 518], "anoth": [4, 80, 101, 116, 126, 127, 151, 326, 347, 378, 385, 454], "answer": 392, "anti": [96, 137, 201], "anyth": 104, "ap": 207, "apart": 487, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 86, 92, 93, 95, 96, 101, 104, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 199, 201, 208, 209, 214, 215, 224, 225, 226, 227, 228, 239, 241, 242, 249, 321, 326, 371, 372, 373, 374, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 485, 488, 490, 494, 502, 504, 505, 509, 510], "appear": [114, 143, 144, 498], "append": [0, 6, 60, 97, 105, 107, 114, 125, 126, 127, 194, 201], "appli": [31, 32, 33, 56, 67, 106, 221, 256, 440, 449, 450, 467, 483, 487], "applic": [10, 104], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [101, 104, 125, 126, 127, 354], "appropri": [4, 31, 32, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 161, 223, 257, 258, 261, 263, 390, 418, 421, 449, 479, 518], "approxim": [138, 487], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 159, 160, 162, 163, 164, 165, 166, 167, 170, 175, 176, 177, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 344, 345, 354, 366, 367, 368, 369, 370, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 415, 416, 418, 421, 422, 424, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 449, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 487, 491, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 518, 525], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 71, 79, 91, 92, 93, 94, 96, 99, 100, 101, 102, 106, 110, 112, 113, 115, 116, 119, 141, 142, 145, 150, 158, 159, 160, 162, 166, 168, 174, 175, 190, 191, 192, 193, 201, 208, 209, 213, 221, 224, 226, 227, 230, 231, 235, 236, 237, 238, 239, 241, 242, 244, 248, 250, 252, 255, 329, 338, 370, 373, 375, 378, 380, 381, 385, 389, 414, 445, 447, 448, 450, 453, 455, 460, 470, 476, 483, 485, 487, 490, 491, 494, 495, 496, 500, 506, 508, 510], "arbitrari": [48, 100, 104, 106, 175, 242, 450, 490, 494], "arbitrarili": 106, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 82], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 83], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 464], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 465], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 481], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 482], "area": 487, "arg": [65, 101, 190, 336, 390], "arg1": 189, "arg2": 189, "argmax": [0, 6, 32, 101, 257, 386, 480, 518], "argmin": [6, 31, 101, 258, 480, 518], "argpartit": [6, 33, 386, 480, 518], "argsort": [6, 101, 377, 386, 459, 467, 480, 486, 518], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 79, 82, 83, 90, 91, 99, 100, 101, 104, 107, 111, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 159, 165, 170, 173, 176, 188, 189, 192, 193, 194, 199, 201, 208, 212, 213, 214, 221, 224, 225, 230, 231, 232, 233, 234, 241, 242, 245, 251, 252, 253, 255, 336, 351, 364, 367, 368, 375, 379, 380, 381, 383, 385, 388, 389, 441, 442, 443, 445, 448, 450, 451, 452, 458, 462, 463, 464, 465, 469, 474, 476, 481, 482, 483, 487, 496, 497, 505, 518, 525], "argwher": [6, 369], "ari": [39, 53, 54, 55, 102, 105, 168, 470, 506], "arithmet": [56, 160, 246, 247, 262, 265, 267, 379, 475, 477, 503, 511, 521], "around": [6, 101, 160, 375, 385, 440, 456], "arr": [22, 42, 94, 104, 167, 387, 414, 439, 440, 491, 495, 500], "arr2": [104, 500], "arr_t": [49, 101, 321], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 275, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 521, 525], "array2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 78, 80, 92, 95, 105, 116, 157, 158, 160, 179, 187, 221, 227, 239, 366, 375, 378, 385, 386, 390, 455, 461, 466, 479, 483, 502], "array_of_diagon": 96, "array_repr": 6, "array_split": [6, 73, 74, 470], "array_str": 6, "arrays_and_dtyp": 450, "art": 10, "asanyarrai": [6, 41, 42, 45, 447], "asarrai": [4, 6, 40, 42, 43, 45, 48, 366, 447, 466], "asarray_chkfinit": [6, 40, 41], "ascend": [203, 205, 459], "ascii": 104, "ascontiguousarrai": [6, 40, 41, 42, 45, 447], "asfarrai": [6, 40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 447], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 101, "aspect": 104, "assembl": [73, 74, 103, 169, 457, 474, 500, 507], "assert": 247, "assign": [101, 331, 354, 490, 494], "associ": [56, 166, 167, 518], "assum": [10, 56, 86, 107, 124, 130, 132, 201, 211, 215, 219, 241, 487], "astyp": [6, 101, 160, 369], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 54, 55, 114], "atleast_2d": [6, 53, 55, 114], "atleast_3d": [6, 53, 54, 114], "atol": [17, 177], "attain": 0, "attempt": [100, 212], "attribut": [101, 104, 109, 138, 158, 172, 216, 373, 510, 511], "automat": [166, 167], "avail": [2, 3, 4, 10, 81, 85, 104, 111, 253, 257, 258, 261, 263, 264, 511, 518], "averag": [6, 101, 246, 247, 262, 340, 477, 521], "avg": 56, "avoid": [36, 41, 54, 55, 124, 130, 132, 448], "aweight": 85, "ax": [16, 21, 31, 32, 56, 84, 86, 87, 97, 100, 101, 106, 114, 120, 122, 123, 126, 127, 128, 131, 132, 134, 136, 142, 162, 175, 199, 209, 213, 218, 221, 222, 223, 224, 226, 240, 242, 243, 244, 246, 247, 250, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 361, 364, 374, 375, 377, 382, 444, 449, 453, 454, 455, 473, 475, 477, 478, 483, 484, 485, 486, 498, 503, 505], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 72, 73, 74, 84, 86, 87, 88, 89, 96, 97, 101, 102, 103, 105, 106, 114, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 142, 143, 144, 148, 149, 154, 160, 162, 168, 169, 174, 199, 207, 213, 221, 225, 226, 227, 239, 240, 242, 244, 245, 246, 247, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 316, 317, 318, 319, 320, 327, 328, 334, 339, 340, 341, 345, 346, 347, 350, 355, 356, 357, 358, 360, 362, 364, 365, 375, 376, 377, 378, 382, 384, 385, 386, 439, 444, 446, 448, 449, 453, 454, 455, 457, 460, 466, 467, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 498, 500, 501, 503, 505, 506, 507, 518], "axis1": [96, 101, 329, 361, 363, 478, 485], "axis2": [96, 101, 329, 361, 363, 478, 485], "axisa": 86, "axisb": 86, "axisc": 86, "axiserror": [33, 467], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 64, 72, 73, 74, 80, 86, 89, 100, 101, 103, 104, 106, 107, 110, 152, 153, 163, 164, 169, 175, 177, 181, 191, 195, 196, 199, 200, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 235, 237, 242, 243, 244, 247, 250, 368, 370, 374, 380, 381, 391, 450, 457, 469, 474, 483, 484, 492, 504, 505, 507, 525], "b_ax": [221, 483], "b_i": [225, 505], "back": [101, 154, 334, 439, 448, 449, 454, 492], "backend": [2, 161, 393, 395, 396, 406, 411, 427], "backward": [10, 49, 101, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 162, 321, 448, 453, 454], "bad": 402, "baltimor": 213, "bartlett": 6, "base": [0, 4, 104, 106, 113, 116, 145, 160, 166, 167, 219, 229, 230, 231, 232, 233, 234, 239, 240, 242, 378, 380, 381, 385, 387, 505], "base_repr": 6, "basic": [67, 106, 518, 521], "batch": 226, "bc": [200, 217], "bcde": 107, "becaus": [10, 16, 21, 124, 130, 132, 501, 518], "becom": [10, 101, 166, 364], "been": [103, 386, 454, 480], "befor": [4, 22, 33, 73, 74, 87, 101, 105, 125, 126, 127, 143, 144, 223, 240, 244, 250, 265, 267, 345, 356, 375, 382, 444, 453, 454, 467, 475, 477, 484, 503, 504], "before_1": 375, "before_n": 375, "begin": [105, 107, 160, 227, 239, 375, 460], "behav": [228, 385], "behavior": [33, 101, 134, 224, 256, 326, 449, 467, 484], "behind": [101, 345], "being": [3, 104, 148, 149, 245, 251, 375], "belong": [98, 166], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 92, 95, 104, 130, 201, 211, 213, 224, 488, 489, 493, 501, 518], "best": 107, "beta": [6, 401], "between": [17, 23, 39, 67, 97, 105, 138, 153, 156, 162, 175, 177, 227, 239, 375, 407, 421, 469, 476, 487, 501], "beyond": [4, 453], "bia": 85, "big": 104, "bin": [98, 119, 121, 135, 166, 167, 428], "bin_edg": [166, 167], "binari": [58, 62, 64, 152, 153, 155, 156], "binary_repr": 6, "bincount": [6, 98, 166], "binomi": [6, 409], "bins_0": 167, "bins_1": 167, "bit": [58, 59, 60, 61, 62, 63, 64, 104, 138, 172, 176, 194, 235, 237, 238, 264, 266, 451, 463, 511, 521], "bitwis": [58, 62, 64], "bitwise_and": [6, 59, 61, 62, 64, 176, 235], "bitwise_invert": [61, 176], "bitwise_left_shift": 194, "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 64, 176, 237], "bitwise_right_shift": 451, "bitwise_xor": [6, 58, 59, 61, 62, 176, 238], "biufcmmosuv": 104, "blackman": 6, "block": [6, 73, 74, 103, 137, 169, 191, 457, 474, 500, 507], "bmat": 6, "bool": [9, 16, 17, 20, 21, 31, 32, 33, 36, 37, 38, 41, 44, 49, 56, 67, 80, 84, 87, 98, 101, 104, 107, 110, 137, 151, 160, 163, 164, 166, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 195, 196, 197, 209, 211, 213, 215, 219, 226, 227, 239, 240, 244, 246, 247, 248, 250, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 321, 369, 370, 382, 444, 448, 460, 463, 467, 475, 477, 479, 498, 502, 503, 518], "bool_": 9, "boolean": [58, 59, 61, 62, 64, 80, 87, 104, 116, 145, 151, 174, 176, 177, 180, 182, 183, 184, 185, 186, 190, 235, 237, 240, 241, 246, 247, 262, 264, 265, 267, 369, 378, 444, 475, 479, 503], "boolean_sequ": 190, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 71, 79, 86, 99, 100, 110, 126, 133, 145, 147, 148, 149, 150, 159, 163, 164, 165, 170, 175, 177, 191, 192, 193, 194, 195, 196, 208, 213, 221, 233, 234, 235, 237, 238, 242, 245, 251, 252, 255, 266, 368, 370, 380, 381, 445, 448, 451, 476, 483, 485, 490, 492, 494, 496, 504, 505, 508], "bound": [385, 386, 440, 459, 479, 480], "boundari": [162, 385, 440], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 518, "broadcast": [15, 16, 21, 31, 32, 38, 56, 65, 66, 71, 80, 84, 99, 106, 116, 145, 148, 149, 170, 184, 185, 208, 209, 213, 215, 226, 238, 240, 242, 244, 245, 246, 247, 250, 251, 255, 257, 258, 262, 264, 265, 266, 267, 380, 381, 382, 385, 386, 444, 446, 475, 476, 477, 480, 484, 496, 503, 505, 508], "broadcast_arrai": [6, 66], "broadcast_shap": 6, "broadcast_to": [6, 65, 484], "brought": 10, "buffer": [44, 88, 89, 101, 151, 152, 153, 155, 156, 228, 244, 250, 259, 260], "buffer_lik": 152, "buffererror": 151, "build": 521, "build_loc": 4, "built": 104, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 101, 104, 106, 152, 153, 228, 321, 337, 342], "byte_bound": 6, "byteord": 104, "byteswap": 6, "bz2": 228, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 86, 90, 91, 99, 100, 101, 104, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 157, 158, 159, 161, 163, 164, 165, 170, 173, 175, 176, 180, 181, 182, 183, 191, 192, 193, 194, 195, 196, 200, 207, 212, 213, 217, 221, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 251, 252, 255, 321, 326, 334, 348, 351, 367, 368, 369, 370, 372, 373, 379, 380, 381, 383, 388, 389, 439, 440, 441, 443, 445, 447, 448, 449, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 483, 484, 496, 497, 498, 499, 505, 508, 509, 510, 525], "c_contigu": [43, 45, 101, 326, 447], "ca": 77, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 86, 87, 89, 97, 99, 105, 106, 110, 112, 113, 115, 119, 128, 145, 146, 147, 150, 162, 167, 170, 202, 203, 204, 205, 207, 213, 215, 231, 233, 234, 240, 242, 246, 247, 252, 255, 262, 265, 267, 370, 375, 380, 381, 382, 444, 445, 475, 476, 496, 503, 504, 511, 525], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 104, 125, 126, 127, 130, 133, 154, 202, 204, 212, 220, 241, 247, 275, 369, 473, 479, 484, 487, 525], "callabl": [154, 241], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 78, 79, 86, 92, 93, 95, 96, 99, 100, 101, 104, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 125, 126, 127, 130, 131, 132, 135, 137, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 171, 174, 175, 176, 177, 179, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 206, 207, 210, 211, 213, 215, 221, 223, 224, 227, 228, 233, 234, 235, 237, 238, 239, 241, 242, 245, 249, 251, 252, 255, 264, 266, 321, 326, 354, 356, 367, 368, 369, 370, 371, 372, 373, 379, 380, 381, 386, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 439, 440, 445, 447, 448, 451, 467, 469, 476, 479, 480, 483, 485, 487, 488, 490, 494, 495, 496, 498, 502, 504, 508, 509, 510, 518, 525], "can_cast": [6, 521], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 73, 74, 257, 258, 448, 470, 473, 474], "capabl": [23, 36, 40, 41, 43, 45, 56, 118, 160, 227, 239, 242, 505], "care": [23, 202], "cartesian": 248, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 78, 86, 88, 89, 92, 95, 97, 101, 106, 107, 108, 109, 117, 121, 124, 129, 133, 135, 152, 153, 154, 155, 157, 158, 160, 162, 171, 202, 216, 219, 221, 227, 228, 234, 239, 249, 259, 260, 264, 266, 336, 371, 372, 373, 382, 439, 448, 449, 477, 483, 488, 501, 502, 509, 510, 518], "cast": [16, 21, 49, 67, 73, 74, 80, 87, 88, 89, 101, 106, 145, 169, 202, 240, 242, 246, 247, 256, 259, 260, 262, 264, 265, 266, 267, 321, 382, 444, 457, 474, 475, 477, 503, 505, 507], "cat": [392, 409], "cauchi": 428, "cbrt": [6, 471], "cdef": 107, "cdot": [221, 225, 483, 505], "cdoubl": 9, "ceil": [6, 35, 139, 146, 147, 452, 456, 497], "center": [120, 121, 122, 123, 127, 128, 135], "central": [162, 410, 411], "certain": [104, 241], "ch": 10, "chain": [100, 101, 106, 107], "chang": [49, 78, 86, 101, 104, 106, 116, 259, 260, 321, 334, 359, 364, 367, 378, 379, 385, 386, 387, 439, 448, 449, 454, 501, 521], "char": 104, "charact": [104, 153], "check": [16, 21, 40, 41, 42, 67, 124, 179, 181, 187, 197, 215, 218], "check_valid": 408, "chi": [394, 410], "chisquar": 6, "choic": [6, 70, 101, 119, 120, 122, 125, 126, 127, 131, 132, 134, 136, 203, 205, 322], "choicelist": 460, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 101, 107, 460, 508, 518], "chosen": [34, 166, 498, 508], "circ": 525, "circl": [217, 487], "clamp": [385, 386, 479, 480], "clariti": 137, "class": [3, 4, 101, 104, 140, 152, 153, 154, 156, 174, 228, 390, 418, 488, 521], "classic": 106, "clear": [104, 193, 518], "clip": [6, 101, 385, 386, 440, 479, 480, 518], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 101, 106, 114, 173, 227, 321, 390, 418, 441, 442, 452, 456, 487], "closer": 497, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 83, 204, 464, 481, 487], "coars": [214, 374], "code": [44, 104, 189, 447], "codeplai": 4, "coeffici": [207, 218, 223], "coerc": [44, 152, 153, 154, 155, 156, 228], "coin": 392, "col": 174, "collaps": [101, 334, 498], "column": [6, 40, 41, 42, 43, 45, 48, 49, 72, 73, 74, 88, 89, 96, 101, 103, 117, 137, 143, 144, 162, 168, 169, 171, 202, 203, 207, 212, 216, 219, 321, 439, 440, 447, 457, 470, 474, 488, 490, 494, 499, 502, 507], "column_stack": [6, 73, 74, 103, 169, 457, 474, 507], "com": 4, "combin": [0, 104, 114, 122, 127, 132, 136, 162], "combinatori": 107, "come": 498, "comma": [104, 106], "command": 4, "common": [125, 126, 127, 159, 192, 221, 369, 483], "common_typ": 6, "compani": [392, 409], "compar": [17, 33, 37, 110, 148, 149, 167, 177, 214, 245, 251, 467], "compare_chararrai": 6, "comparison": [2, 110, 163, 164, 195, 196, 370, 511, 521], "compat": [3, 4, 10, 16, 21, 49, 56, 86, 96, 101, 199, 201, 208, 209, 214, 215, 224, 225, 226, 240, 242, 246, 247, 261, 262, 263, 265, 267, 321, 374, 444, 448, 475, 485, 503, 504, 505, 521], "compil": [4, 104, 161, 447], "complement": 501, "complementari": [147, 501], "complet": [3, 4, 107, 153, 154, 216, 454, 518], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 46, 47, 50, 51, 52, 67, 87, 100, 101, 104, 107, 111, 118, 119, 120, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 145, 148, 149, 173, 178, 179, 186, 187, 193, 202, 203, 204, 205, 208, 216, 217, 219, 225, 240, 242, 245, 251, 256, 265, 267, 324, 325, 383, 441, 442, 444, 468, 475, 498, 503, 504, 505, 518, 521], "complex128": [9, 56, 450], "complex64": [9, 56, 101, 145, 355], "compliant": 101, "complic": [106, 525], "compon": [10, 37, 86, 123, 128, 135, 138, 173, 211, 221, 256, 441, 483], "compos": 79, "composit": [89, 191, 477, 487], "compress": [6, 116, 460, 479, 518], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 64, 68, 75, 76, 82, 83, 87, 88, 89, 97, 98, 106, 112, 113, 114, 115, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 146, 162, 163, 164, 165, 166, 167, 173, 174, 176, 191, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 235, 236, 237, 238, 240, 242, 246, 247, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 367, 374, 379, 383, 441, 443, 444, 445, 452, 456, 458, 462, 463, 464, 465, 471, 475, 477, 481, 482, 483, 487, 490, 494, 503, 505], "compute_uv": [198, 219, 220], "concat": 74, "concaten": [6, 72, 73, 103, 169, 457, 470, 474, 480, 500, 507], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510, 518], "cond": [6, 206], "condit": [34, 49, 100, 101, 116, 198, 206, 212, 321, 369, 378, 385, 387, 460, 508], "condlist": 460, "confus": 150, "conj": [6, 76, 101, 124, 173, 197, 202, 383], "conjug": [6, 10, 75, 100, 101, 130, 133, 173, 197, 202, 203, 204, 205, 208, 225, 242, 324, 383, 504, 505], "consecut": [97, 105, 162], "conserv": 248, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 107, 135, 160, 177, 180, 203, 205, 211, 227, 239, 242, 390, 418, 449, 469, 498, 505], "consist": [37, 38, 105, 119, 120, 122, 125, 126, 127, 131, 132, 134, 136, 153, 167, 221, 223, 227, 480, 483], "constant": [9, 104, 162, 375], "constant_valu": 375, "constraint": 56, "construct": [40, 41, 42, 70, 92, 95, 96, 101, 104, 117, 152, 153, 154, 155, 156, 171, 190, 193, 228, 249, 322, 371, 460, 484, 485, 508, 511], "constructor": 518, "consum": [101, 342], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 79, 80, 82, 83, 86, 87, 96, 99, 101, 104, 110, 112, 113, 115, 120, 121, 122, 125, 130, 133, 135, 141, 145, 146, 147, 148, 149, 150, 151, 156, 161, 162, 163, 164, 166, 167, 170, 173, 174, 176, 194, 195, 196, 199, 201, 203, 216, 219, 221, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 245, 246, 251, 252, 255, 257, 258, 261, 262, 263, 265, 267, 351, 367, 369, 370, 377, 379, 380, 381, 383, 390, 441, 443, 444, 445, 451, 452, 456, 458, 462, 463, 464, 465, 471, 472, 475, 476, 481, 482, 483, 486, 490, 491, 494, 495, 496, 497, 503, 518], "content": [43, 101, 247, 427], "context": 10, "contigu": [40, 41, 42, 43, 45, 100, 101, 106, 181, 212, 348, 439, 447, 448], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 390, 422], "contourf": 248, "contract": [106, 107, 221, 483], "contrari": [199, 201, 208, 224, 225], "contrast": [106, 385], "contribut": [10, 56, 166, 167], "control": [4, 49, 67, 73, 74, 80, 101, 106, 169, 242, 321, 457, 474, 505, 507], "conveni": [101, 364, 390], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 100, 106, 107, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 175, 208, 221, 223, 242, 374, 483, 505], "convers": [49, 101, 106, 321, 511], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 78, 90, 91, 92, 95, 104, 106, 107, 114, 157, 158, 160, 179, 187, 227, 239, 388, 389, 440, 447, 499, 501, 502], "convolut": [10, 77, 81], "convolv": [6, 81], "coolei": 10, "coordin": [84, 154, 162, 174, 190, 248, 440, 499], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 80, 92, 93, 95, 96, 101, 104, 108, 109, 116, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 247, 248, 249, 256, 275, 321, 334, 336, 345, 351, 354, 371, 372, 373, 376, 378, 379, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 439, 447, 448, 449, 459, 467, 473, 488, 489, 490, 493, 494, 502, 509, 510, 518], "copysign": [6, 367, 379], "copyto": [6, 101, 116, 326, 378], "core": [3, 104, 106, 505, 518], "corner": [120, 122, 126, 127, 375], "corrcoef": [6, 85], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 73, 74, 75, 76, 79, 82, 83, 90, 91, 99, 110, 112, 113, 115, 118, 124, 130, 132, 139, 145, 146, 147, 148, 149, 150, 159, 163, 164, 165, 170, 173, 176, 180, 182, 183, 192, 193, 194, 195, 196, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 251, 252, 255, 367, 368, 370, 379, 380, 381, 383, 388, 389, 441, 443, 445, 447, 451, 452, 456, 458, 462, 463, 464, 465, 469, 471, 472, 474, 476, 481, 482, 496, 497], "correctli": [20, 26, 28, 31, 32, 46, 50, 84, 209, 213, 226, 244, 250, 257, 258, 264, 266, 369, 382, 477], "correl": [6, 521], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 71, 73, 74, 78, 90, 91, 92, 93, 95, 96, 101, 102, 108, 109, 117, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 168, 171, 174, 190, 199, 202, 203, 221, 225, 227, 228, 239, 241, 242, 249, 321, 326, 330, 371, 372, 373, 377, 388, 389, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 453, 460, 461, 470, 475, 483, 486, 487, 488, 490, 494, 502, 503, 505, 506, 509, 510, 518], "correspondingli": [10, 470], "cosh": [6, 14, 25, 82, 465, 482], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 464, 465, 481, 482], "cost": [106, 107], "costli": 107, "could": [101, 124, 130, 132, 356], "count": [16, 21, 57, 84, 98, 104, 107, 142, 152, 153, 155, 156, 162, 166, 167, 369, 382, 392, 466, 477, 498, 511, 521], "count_nonzero": [6, 369], "counterclockwis": [143, 144, 455], "counterpart": [10, 124, 130, 132, 518], "cov": [6, 408], "covari": 85, "cover": [490, 494, 521], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 78, 81, 85, 92, 95, 108, 109, 111, 117, 121, 135, 152, 153, 154, 155, 157, 158, 160, 171, 227, 228, 239, 249, 253, 264, 371, 372, 373, 488, 502, 509, 510], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 94, 95, 96, 101, 104, 107, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 256, 321, 326, 371, 372, 373, 375, 386, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 485, 488, 490, 491, 494, 495, 502, 509, 510, 518, 521], "creation": [104, 107, 511, 518, 521, 525], "crop": [119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136], "cross": [6, 81, 190], "csingl": 9, "ct": 10, "ctype": 447, "cube": [68, 145, 471], "cubic": 107, "cuda": 4, "cumprod": [6, 101, 259, 518], "cumproduct": 6, "cumsum": [6, 97, 101, 260, 477, 487, 518], "cumul": [87, 88, 89, 97, 101, 259, 260, 327, 328, 477, 487], "cupi": [2, 511], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 79, 82, 83, 90, 91, 99, 101, 104, 107, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 153, 159, 165, 167, 170, 171, 176, 192, 193, 194, 230, 231, 232, 233, 234, 245, 251, 252, 253, 255, 354, 367, 368, 375, 379, 380, 381, 383, 388, 389, 443, 445, 447, 451, 452, 458, 462, 463, 464, 465, 469, 476, 481, 482, 496, 497], "curv": 487, "custom": 518, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 207, 505], "cutoff": 215, "cycl": [121, 135, 190, 449], "cyclic": 385, "cython": 4, "d": [0, 16, 21, 23, 56, 72, 73, 74, 88, 89, 92, 93, 94, 95, 96, 100, 101, 103, 104, 117, 121, 123, 128, 135, 137, 141, 143, 144, 156, 168, 169, 171, 175, 190, 200, 201, 203, 204, 208, 212, 213, 217, 221, 224, 242, 248, 259, 260, 266, 334, 369, 380, 381, 382, 385, 395, 439, 448, 457, 459, 461, 474, 477, 479, 483, 484, 485, 492, 498, 502, 505, 507, 518], "d0": [390, 417, 419], "d1": [390, 419], "d3": 93, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 98, 99, 100, 101, 104, 106, 108, 109, 110, 111, 112, 113, 115, 117, 118, 124, 130, 132, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 183, 184, 185, 187, 192, 193, 194, 195, 196, 201, 207, 214, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 321, 351, 364, 366, 367, 368, 370, 372, 373, 378, 379, 380, 381, 383, 385, 386, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 469, 471, 472, 473, 474, 475, 476, 480, 481, 482, 485, 488, 496, 497, 503, 505, 507, 508, 509, 510, 511, 521], "datatyp": [104, 211], "date": 4, "datetim": 104, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [85, 101, 265, 267, 358, 365, 475, 503], "decai": 403, "decim": [35, 101, 138, 139, 352, 452, 456], "decomposit": [197, 206, 211, 215, 219, 220, 521], "decompress": 228, "decreas": [98, 487], "decreasingli": [10, 120, 122, 126, 127], "deem": 151, "def": [0, 375], "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 176, 177, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 209, 211, 212, 213, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 334, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 394, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 431, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 518], "default_rng": 6, "defg": 107, "defici": 211, "defin": [10, 29, 51, 86, 104, 109, 119, 148, 149, 158, 165, 166, 167, 199, 201, 213, 225, 245, 251, 256, 373, 379, 442, 455, 505, 510, 518], "definit": [86, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 146, 197, 487], "deg": [20, 389], "deg2rad": [6, 388, 389, 501], "degre": [6, 20, 90, 265, 267, 388, 389, 432, 455, 475, 501, 503, 525], "del": 525, "delet": [6, 22], "delta": [10, 265, 267, 475, 501, 503], "demonstr": [0, 4, 104], "denot": [225, 505], "dens": [174, 190, 249], "densiti": 166, "depend": [4, 34, 96, 118, 124, 130, 132, 201, 203, 207, 213, 216, 218, 219, 227, 264, 266, 460, 508], "deprec": 6, "deprecate_with_doc": 6, "depth": [72, 73, 74, 102, 103, 169, 457, 470, 474, 507], "deriv": 162, "descend": 219, "descr": 104, "describ": [87, 104, 213, 224, 240, 444, 521], "descript": [87, 104, 125, 127, 166, 240, 444, 518], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 66, 108, 109, 117, 125, 126, 127, 157, 158, 160, 171, 227, 239, 372, 373, 439, 484, 488, 509, 510], "destin": [73, 74, 169, 254, 385, 386, 457, 474, 480, 507], "destruct": 525, "det": [6, 217], "detail": [35, 120, 122, 126, 127, 131, 132, 134, 136, 151, 209, 226, 456, 490, 491, 494, 495, 498, 518], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 68, 79, 82, 83, 90, 91, 99, 112, 113, 115, 147, 148, 149, 150, 153, 154, 156, 170, 194, 200, 201, 207, 216, 217, 224, 229, 230, 231, 232, 233, 234, 242, 245, 251, 252, 255, 368, 380, 381, 388, 389, 440, 443, 445, 451, 458, 460, 462, 464, 465, 469, 471, 472, 476, 481, 482, 485, 496, 497, 499, 505], "devel": 4, "develop": [3, 4], "deviat": [101, 246, 262, 265, 267, 358, 390, 405, 412, 475, 503], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 78, 87, 92, 93, 95, 101, 106, 108, 109, 117, 118, 121, 135, 139, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 240, 241, 242, 246, 247, 249, 262, 265, 267, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 444, 473, 475, 488, 490, 494, 502, 503, 505, 509, 510], "df": [394, 410, 432, 433], "dfden": [398, 411], "dfnum": [398, 411], "dft": [10, 119, 124, 125, 129, 130, 133], "di": [93, 94], "diag": [6, 95, 96, 106, 117, 143, 144, 171, 202, 204, 219, 460, 485], "diag_indic": [6, 94, 137], "diag_indices_from": [6, 93, 137], "diagflat": [6, 92, 96, 485], "diagon": [6, 92, 93, 94, 95, 101, 106, 117, 137, 171, 197, 203, 204, 205, 224, 241, 363, 460, 485, 488, 489, 490, 491, 493, 494, 495, 518], "dice": 407, "dict": 375, "dictionari": 104, "diff": [6, 89, 105, 162, 166], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 78, 87, 89, 92, 95, 97, 101, 104, 105, 108, 109, 117, 120, 121, 125, 126, 128, 131, 134, 135, 138, 143, 144, 145, 152, 153, 154, 155, 157, 158, 160, 162, 171, 177, 205, 213, 224, 227, 228, 239, 240, 242, 249, 326, 371, 372, 373, 378, 380, 381, 386, 444, 449, 455, 476, 480, 488, 490, 494, 501, 502, 509, 510, 521], "digit": [6, 10, 138, 166], "dim": [17, 440], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 72, 73, 74, 80, 84, 85, 86, 93, 96, 97, 101, 102, 104, 114, 126, 127, 139, 143, 144, 162, 169, 174, 175, 190, 199, 201, 209, 211, 213, 216, 220, 221, 224, 225, 226, 240, 243, 244, 246, 247, 248, 249, 250, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 334, 338, 343, 354, 366, 369, 371, 382, 386, 390, 420, 422, 423, 425, 439, 440, 444, 448, 455, 461, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 490, 491, 494, 495, 498, 499, 500, 503, 505, 506, 518, 521], "dimension": [2, 4, 33, 77, 81, 84, 87, 93, 94, 95, 96, 97, 98, 101, 105, 106, 119, 120, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 137, 152, 153, 155, 162, 168, 174, 190, 199, 207, 214, 216, 222, 223, 240, 244, 248, 249, 250, 257, 258, 261, 263, 265, 267, 357, 366, 371, 374, 382, 444, 467, 475, 477, 479, 484, 487, 498, 503, 504, 506, 511], "direct": [10, 86, 97, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 143, 144, 162, 199, 368, 455], "directli": [104, 154, 174, 239, 369, 480], "directori": 161, "dirichlet": 6, "discard": 497, "discont": 501, "discontinu": 501, "discret": [3, 10, 77, 81, 89, 97, 105, 119, 120, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 162, 390, 511], "disp": 6, "dispers": 435, "displac": [101, 359], "disregard": 449, "distanc": [162, 469], "distinct": [148, 149, 245, 251, 449], "distinguish": 104, "distribut": [3, 4, 239, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 521], "divid": [6, 39, 102, 103, 147, 150, 168, 252, 445, 470, 496, 506], "divis": [99, 147, 150, 252, 380, 381, 445, 470, 496, 497], "divisor": [159, 192, 265, 267, 475, 503], "divmod": [6, 518], "dlpack": 151, "dmlc": 151, "dn": [390, 417, 419], "do": [3, 4, 104, 241, 247, 392, 454, 487], "docstr": 518, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 518], "doe": [22, 23, 39, 67, 101, 106, 116, 118, 133, 148, 149, 151, 216, 256, 259, 260, 336, 378, 449, 470, 479], "domain": [10, 124, 129], "done": [3, 49, 101, 106, 223, 321, 498, 501], "dot": [6, 101, 106, 107, 175, 197, 204, 206, 212, 215, 216, 218, 219, 221, 222, 223, 225, 242, 483, 504, 505], "doubl": [9, 221, 403, 483], "down": 144, "dp": [99, 200, 203, 217, 218, 380, 381, 476, 496], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 257, 258, 261, 263, 264, 321, 326, 371, 372, 373, 384, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "dpnp": [0, 2, 3, 4, 10, 511, 518, 521, 522, 525], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 78, 92, 93, 95, 108, 109, 117, 121, 135, 138, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 172, 174, 227, 228, 239, 241, 249, 268, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510, 511], "dpnp_iface_arraycr": [249, 371], "draw": [390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "drawn": [390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 415, 416, 418, 421, 424, 430, 431, 432, 433, 434, 435, 436, 437, 438, 460], "drill": [392, 409], "driver": 2, "drop": [3, 104], "dsplit": [6, 73, 74, 103, 470], "dst": 80, "dstack": [6, 72, 73, 74, 169, 457, 470, 474, 507], "dt": [104, 487], "dt2": 104, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 85, 87, 88, 89, 90, 91, 93, 99, 101, 106, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 176, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 212, 215, 219, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 327, 328, 340, 346, 355, 358, 360, 363, 365, 367, 368, 370, 372, 373, 379, 380, 381, 382, 383, 388, 389, 390, 412, 418, 434, 443, 444, 445, 447, 450, 451, 452, 456, 457, 458, 462, 463, 464, 465, 468, 469, 471, 472, 474, 475, 476, 477, 479, 481, 482, 485, 488, 489, 493, 496, 497, 503, 505, 506, 507, 509, 510, 518], "due": [133, 525], "dump": 6, "dx": [162, 487], "dy": 162, "dz": 162, "e": [9, 10, 14, 25, 27, 47, 60, 87, 88, 96, 104, 108, 109, 114, 117, 120, 124, 125, 126, 127, 130, 132, 133, 145, 153, 157, 158, 162, 171, 194, 202, 217, 222, 226, 229, 247, 372, 373, 390, 442, 446, 449, 478, 488, 500, 509, 510], "ea": 107, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 79, 82, 83, 88, 89, 93, 96, 98, 99, 101, 102, 104, 107, 110, 112, 113, 115, 120, 122, 124, 126, 127, 130, 131, 132, 134, 136, 143, 144, 145, 146, 147, 150, 154, 162, 163, 164, 166, 167, 168, 173, 176, 180, 182, 183, 190, 194, 195, 196, 199, 202, 203, 204, 205, 207, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 252, 254, 255, 256, 352, 367, 369, 370, 375, 379, 380, 381, 383, 386, 392, 409, 440, 441, 443, 445, 446, 449, 451, 452, 453, 456, 458, 462, 463, 464, 465, 470, 471, 472, 474, 476, 480, 481, 482, 484, 487, 490, 491, 494, 495, 496, 497, 498, 499, 505, 506, 518], "easier": 479, "easiest": [4, 375], "easili": [0, 167], "edg": [71, 98, 166, 167, 375], "edge_ord": 162, "ediff1d": [6, 97, 162], "effect": [107, 145, 148, 149, 245, 251, 380, 381, 501], "effici": [10, 119, 133, 153, 211, 215, 219], "efgh": 107, "eig": [6, 203, 204, 205], "eigenvalu": [202, 203, 204, 205, 521], "eigenvector": [202, 203, 204, 205], "eigh": [6, 202, 204, 205], "eight": 213, "eigval": [6, 202, 203, 205], "eigvalsh": [6, 202, 203, 204], "einstein": [100, 106, 107, 175, 221, 223, 242, 374, 483, 505], "einsum": [6, 100, 107, 175, 221, 223, 242, 374, 483, 505], "einsum_path": [6, 106], "either": [37, 38, 45, 56, 86, 87, 96, 104, 120, 122, 124, 126, 127, 130, 132, 134, 136, 137, 162, 175, 201, 203, 205, 213, 216, 240, 257, 258, 261, 263, 264, 266, 440, 444, 449, 459, 460, 480, 487], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 79, 80, 82, 83, 87, 88, 89, 94, 96, 97, 98, 99, 101, 104, 105, 107, 110, 112, 113, 115, 116, 117, 118, 120, 122, 126, 127, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 199, 201, 204, 210, 221, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 250, 251, 252, 253, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 316, 317, 324, 325, 327, 328, 330, 331, 334, 336, 337, 340, 342, 344, 345, 350, 351, 352, 353, 355, 358, 359, 362, 365, 367, 368, 369, 370, 378, 379, 380, 381, 382, 383, 385, 387, 439, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 491, 493, 495, 496, 497, 498, 499, 501, 503, 505, 508, 518, 521, 525], "element_count": [101, 355, 466], "ellipsi": 106, "els": [0, 217, 273], "elsewher": [117, 171, 488, 508], "empti": [4, 6, 36, 101, 109, 120, 122, 126, 127, 131, 132, 134, 136, 153, 157, 158, 207, 331, 372, 373, 375, 378, 470, 509, 510], "empty_lik": [6, 36, 108, 158, 373, 510], "enabl": [137, 211, 215, 219], "encount": [259, 260, 261, 263, 460], "end": [22, 23, 96, 104, 105, 107, 125, 160, 227, 239, 375], "end_tim": 0, "end_valu": 375, "endian": 104, "endpoint": [23, 160, 227, 239, 487], "engin": 426, "enlarg": 449, "enough": 166, "ensur": 447, "entir": [56, 87, 124, 166, 167, 240, 246, 261, 262, 263, 265, 267, 375, 444, 475, 503], "entiti": 449, "entri": [39, 101, 102, 104, 108, 116, 124, 130, 132, 137, 142, 143, 144, 168, 357, 470, 473, 505, 506], "enumer": 151, "env": 4, "environ": 4, "ep": [138, 211, 215, 368, 442, 469], "epsilon": [211, 442], "epsneg": 138, "equal": [6, 16, 17, 21, 33, 37, 38, 39, 56, 60, 63, 73, 74, 81, 85, 89, 101, 102, 117, 160, 162, 163, 164, 166, 167, 168, 169, 177, 179, 187, 189, 194, 195, 196, 201, 210, 215, 216, 223, 227, 239, 252, 345, 370, 375, 390, 400, 434, 445, 451, 452, 456, 457, 462, 467, 470, 473, 474, 488, 490, 494, 500, 506, 507], "equal_nan": [17, 37, 177, 498], "equat": [207, 218, 222, 223, 521], "equiv": [49, 67, 73, 74, 80, 101, 106, 169, 210, 242, 321, 457, 474, 505, 507], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 78, 86, 87, 90, 91, 99, 100, 101, 102, 103, 107, 114, 116, 141, 148, 149, 150, 168, 190, 220, 221, 222, 226, 240, 243, 252, 255, 275, 316, 317, 329, 343, 351, 354, 364, 366, 369, 374, 377, 379, 388, 389, 390, 418, 444, 445, 448, 455, 456, 461, 467, 476, 477, 479, 483, 486, 496, 498, 500, 505, 506, 518, 525], "error": [87, 102, 106, 111, 124, 129, 168, 202, 240, 440, 444, 470, 473, 506, 511, 518], "essenti": 4, "estim": [85, 167, 392, 409, 487], "et": 10, "etc": [10, 36, 41, 104, 120, 122, 126, 127, 131, 132, 134, 136, 409], "euclidean": 207, "euler_gamma": 9, "evalu": [16, 17, 21, 101, 106, 107, 110, 179, 181, 187, 221, 223, 248, 316, 317, 374, 460, 483, 518], "even": [10, 101, 104, 121, 123, 124, 125, 128, 129, 130, 132, 133, 135, 179, 181, 187, 247, 338, 375, 452, 456], "evenli": [23, 160, 227, 239, 452, 487], "event": 234, "everi": [132, 386, 480], "everywher": 130, "exact": [116, 212, 378], "exactli": [10, 48, 156, 390, 418, 460], "examin": 207, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 329, 331, 334, 335, 336, 338, 343, 345, 349, 351, 354, 355, 356, 359, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 525], "exce": [234, 470], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 82, 83, 90, 91, 97, 98, 99, 100, 101, 108, 109, 110, 112, 113, 115, 117, 118, 131, 132, 139, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 168, 169, 170, 171, 176, 180, 182, 183, 192, 193, 194, 195, 196, 212, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 245, 246, 250, 251, 252, 255, 261, 262, 263, 264, 265, 266, 267, 321, 336, 367, 368, 370, 372, 373, 379, 380, 381, 382, 383, 388, 389, 439, 443, 445, 446, 447, 451, 452, 458, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 476, 477, 481, 482, 496, 497, 503, 505, 509, 510, 521], "exclud": [11, 12, 22, 227, 390, 434], "exclus": [390, 418], "execut": [3, 4, 40, 41, 42, 81, 85, 111, 154, 253, 264, 393, 395, 396, 406, 411, 427, 525], "executor": 0, "exist": [10, 72, 73, 74, 103, 104, 114, 151, 169, 457, 470, 474, 500, 507, 521], "exp": [6, 10, 113, 115, 119, 217, 231, 233, 240], "exp2": [6, 112, 115], "expand": [97, 114], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 99, 100, 104, 110, 112, 113, 115, 118, 130, 139, 145, 146, 147, 148, 149, 150, 159, 163, 164, 165, 170, 173, 176, 177, 180, 182, 183, 192, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 250, 251, 252, 255, 259, 260, 262, 264, 265, 266, 267, 367, 368, 370, 379, 380, 381, 382, 383, 388, 389, 441, 443, 444, 445, 451, 452, 456, 458, 462, 463, 464, 465, 469, 471, 472, 475, 476, 477, 481, 482, 496, 497, 503, 508], "explain": [122, 127, 132, 136, 518], "explan": 104, "explicit": 106, "explicitli": [96, 120, 122, 126, 127, 131, 132, 134, 136], "exploit": [10, 133], "explor": [107, 392, 409], "expm1": [6, 112, 113, 231], "expon": [10, 112, 113, 115, 145, 193, 210, 233, 234, 240, 380, 381, 416, 521], "exponenti": [6, 10, 107, 233, 234, 240, 403, 429], "expos": [152, 518], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 106, 107, 193, 228, 525], "extend": [10, 104, 191, 375, 518], "extens": [0, 1, 3, 4, 9, 161, 228, 511], "extra": [104, 130, 156], "extract": [6, 92, 95, 96, 106, 117, 141, 171, 174, 241, 378, 460, 479, 485], "extrapol": 449, "extrema": 521, "ey": [6, 75, 76, 84, 101, 126, 127, 148, 149, 171, 175, 191, 206, 210, 211, 222, 223, 224, 238, 245, 251, 461, 485], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 99, 101, 104, 106, 108, 109, 110, 112, 113, 115, 117, 118, 121, 133, 135, 139, 145, 146, 147, 148, 149, 150, 157, 158, 159, 162, 163, 164, 165, 170, 173, 176, 180, 181, 182, 183, 192, 193, 194, 195, 196, 210, 213, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 251, 252, 255, 321, 326, 334, 367, 368, 370, 372, 373, 379, 380, 381, 383, 388, 389, 411, 439, 440, 441, 443, 445, 447, 448, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 492, 496, 497, 499, 505, 508, 509, 510], "f0": 104, "f1": 104, "f2": 104, "f4": 67, "f8": [67, 104], "f_contigu": [43, 45, 181, 447], "f_k": 10, "fab": [6, 11, 12], "fact": 204, "factor": [10, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 197, 216], "fail": [101, 354, 392], "fallback": [202, 204, 393, 395, 396, 406, 411, 427], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 33, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 64, 65, 66, 67, 78, 84, 85, 87, 89, 98, 101, 104, 106, 107, 109, 110, 116, 137, 151, 154, 158, 160, 163, 164, 166, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 195, 196, 197, 198, 209, 211, 213, 215, 219, 220, 226, 227, 235, 236, 237, 238, 239, 240, 244, 246, 247, 248, 250, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 273, 316, 317, 318, 319, 321, 339, 340, 341, 346, 358, 360, 365, 369, 370, 373, 382, 384, 444, 447, 448, 460, 463, 467, 475, 477, 498, 502, 503, 508, 510, 518], "famili": 10, "fanci": 479, "fashion": [234, 518], "fast": [10, 119, 120, 122, 126, 127, 132, 133, 136], "fastcopyandtranspos": 6, "faster": [10, 148, 149], "fastest": [101, 181, 334, 439, 448], "fb": [107, 492], "featur": 104, "fetch": 448, "few": 137, "fft": [6, 511, 521], "fft2": [6, 119, 122, 126], "fftfreq": [6, 10, 119, 123, 128, 135], "fftn": [6, 119, 120, 127, 133, 136], "fftshift": [6, 10, 120, 122, 127, 128], "fh": 153, "field": [104, 248], "field1": 104, "file": [152, 153, 155, 156, 161, 228], "filenam": [153, 228], "fill": [6, 22, 36, 101, 108, 109, 137, 157, 158, 166, 167, 248, 256, 326, 372, 373, 449, 488, 509, 510], "fill_diagon": 6, "fill_valu": [157, 158], "filt": 492, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "final": [4, 10, 132, 133, 134, 136, 160, 239], "find": [34, 57, 98, 101, 118, 166, 211, 215, 219, 353, 368, 369, 446, 459, 467, 469, 498, 521], "find_common_typ": 6, "fine": 4, "finfo": [215, 368, 442, 469], "finfo_object": 138, "finit": [42, 180, 182, 183, 184, 185, 256, 469], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 62, 63, 64, 72, 73, 74, 79, 86, 87, 96, 99, 100, 101, 104, 107, 110, 113, 120, 122, 124, 126, 127, 142, 145, 147, 148, 149, 150, 159, 162, 163, 164, 166, 167, 168, 170, 175, 177, 181, 189, 191, 192, 194, 195, 196, 199, 201, 208, 212, 221, 222, 224, 225, 228, 233, 234, 235, 237, 238, 241, 242, 244, 245, 247, 248, 250, 251, 252, 255, 257, 258, 334, 370, 374, 375, 378, 380, 381, 382, 439, 445, 448, 451, 453, 455, 457, 459, 460, 467, 468, 472, 476, 477, 478, 480, 483, 485, 496, 498, 500, 504, 505, 506, 507], "fit": [207, 446], "fix": [6, 35, 69, 96, 104, 146, 385, 452, 456, 497], "flag": [43, 45, 101, 104, 181, 326, 447], "flanneri": 10, "flat": [31, 32, 101, 105, 140, 334, 336, 439, 440, 446, 499], "flatnonzero": [6, 369], "flatten": [6, 22, 31, 32, 33, 73, 74, 84, 88, 89, 92, 95, 96, 101, 105, 137, 141, 166, 167, 226, 244, 247, 250, 257, 258, 259, 260, 264, 266, 333, 348, 356, 369, 374, 386, 439, 440, 446, 453, 467, 479, 480, 485, 498, 499, 504], "flexibl": [100, 104, 153, 212], "flip": [6, 59, 61, 96, 137, 143, 144, 176, 201, 392, 455], "fliplr": [6, 96, 137, 142, 144, 201, 455], "flipud": [6, 96, 137, 142, 143, 201, 455], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 67, 79, 87, 89, 104, 108, 109, 113, 117, 118, 121, 135, 138, 139, 145, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 167, 171, 173, 193, 207, 210, 211, 213, 215, 226, 227, 228, 233, 234, 239, 240, 244, 246, 247, 250, 256, 262, 265, 267, 368, 372, 373, 380, 381, 390, 394, 419, 420, 422, 423, 425, 428, 429, 431, 434, 441, 442, 443, 444, 458, 475, 488, 501, 503, 509, 510, 518, 521], "float16": [9, 145], "float32": [0, 9, 42, 44, 49, 67, 88, 101, 104, 106, 145, 321, 368, 390, 412, 417, 419, 420, 422, 423, 425, 431, 434, 447, 450], "float64": [0, 9, 44, 49, 56, 67, 89, 101, 104, 106, 321, 390, 391, 397, 398, 399, 401, 403, 404, 405, 412, 413, 416, 417, 419, 420, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 450, 469, 506], "float_pow": [6, 380, 381], "floor": [6, 35, 69, 139, 147, 252, 445, 452, 456, 497], "floor_divid": [6, 252, 445], "flop": 107, "flush": 153, "fmax": [6, 149, 244, 245, 251, 261, 380, 381], "fmin": [6, 148, 245, 250, 251, 263, 380, 381], "fmod": [6, 252, 380, 381, 445], "fn": 154, "fname": 228, "follow": [4, 10, 56, 104, 114, 130, 138, 151, 172, 203, 205, 213, 215, 221, 375, 447, 483, 518, 521], "forc": [104, 106], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 72, 78, 92, 95, 101, 103, 106, 107, 126, 127, 130, 157, 158, 160, 179, 187, 190, 201, 209, 220, 224, 227, 239, 243, 364, 375, 449, 457, 502, 507], "format": [104, 151, 153, 156, 521], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 386, 480], "forth": [221, 483], "fortran": [45, 49, 101, 181, 321, 334, 439, 440, 447, 448, 499], "forward": [10, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 162], "found": [4, 459, 518], "four": [390, 419], "fourier": [10, 119, 120, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 511], "fourth": 120, "frac": [10, 487], "fraction": [253, 497], "free": [101, 351], "freedom": [265, 267, 432, 475, 503], "freq": [121, 123, 128, 135], "freq_spectrum": 124, "frequenc": [10, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135], "freshli": [184, 185, 505], "frexp": [6, 193], "fro": [198, 209, 213, 226], "frobeniu": [198, 213], "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 67, 70, 73, 74, 78, 80, 87, 90, 91, 92, 93, 95, 96, 101, 103, 104, 106, 108, 109, 113, 116, 117, 121, 125, 134, 135, 136, 142, 145, 151, 152, 153, 154, 155, 156, 157, 158, 162, 166, 169, 171, 174, 190, 193, 202, 204, 205, 211, 212, 224, 228, 240, 241, 248, 249, 322, 326, 357, 362, 371, 372, 373, 375, 378, 382, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 444, 448, 449, 450, 455, 457, 459, 460, 472, 473, 474, 477, 479, 480, 485, 488, 490, 492, 494, 495, 498, 500, 501, 502, 507, 508, 509, 510, 521], "from_": 67, "from_dlpack": 6, "frombuff": [6, 153, 155, 156, 228], "fromfil": [6, 152, 155, 156], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 152, 153, 156], "frompyfunc": 6, "fromregex": [6, 228], "fromstr": [6, 152, 153, 155, 228], "front": 492, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "full_lik": [6, 36, 109, 157, 373, 510], "full_matric": 219, "fulli": [104, 247], "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 78, 81, 85, 87, 90, 91, 96, 99, 101, 106, 108, 109, 111, 115, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 132, 133, 136, 137, 145, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 165, 166, 167, 171, 181, 190, 199, 201, 202, 204, 208, 209, 212, 213, 214, 220, 221, 224, 225, 226, 228, 231, 233, 234, 240, 241, 243, 248, 252, 253, 264, 316, 317, 326, 329, 336, 351, 354, 364, 372, 373, 375, 380, 381, 386, 388, 389, 390, 393, 395, 396, 406, 411, 427, 439, 444, 445, 447, 449, 456, 457, 462, 475, 479, 480, 483, 484, 490, 491, 494, 495, 496, 500, 503, 507, 508, 509, 510, 511, 518, 521], "fundament": [10, 104], "further": [490, 494], "futur": [104, 167], "fweight": 85, "g": [4, 10, 104, 108, 109, 117, 157, 158, 171, 213, 372, 373, 390, 488, 509, 510, 525], "g306271ef56a": 6, "gamma": [6, 430], "gauss": 10, "gaussian": [390, 412, 436], "gc": 107, "gcd": [6, 192], "gen": 106, "gender": 104, "gener": [4, 10, 33, 56, 104, 125, 130, 133, 136, 160, 175, 202, 203, 204, 205, 209, 215, 216, 226, 228, 239, 390, 392, 395, 426, 439, 469, 487, 490, 494, 502, 518, 521], "genfromtxt": [6, 228], "geometr": [6, 160, 227], "geomspac": [6, 227, 239], "get": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 94, 95, 101, 108, 109, 117, 121, 124, 130, 132, 135, 145, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 220, 225, 227, 228, 239, 241, 249, 326, 354, 371, 372, 373, 375, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 480, 488, 490, 491, 494, 495, 502, 505, 509, 510, 518], "get_arrai": 101, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 390], "get_sycl_devic": 390, "get_sycl_queu": 390, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 104], "getter": [101, 354], "gid": 167, "github": 151, "give": [10, 95, 101, 145, 167, 364, 448, 461, 466, 498], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 72, 78, 84, 85, 88, 89, 97, 100, 101, 103, 104, 105, 107, 108, 109, 116, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 148, 149, 157, 158, 160, 162, 166, 167, 177, 206, 213, 221, 225, 227, 239, 241, 244, 245, 247, 248, 250, 251, 259, 260, 261, 263, 264, 265, 266, 267, 318, 319, 321, 327, 328, 341, 346, 347, 352, 355, 358, 360, 365, 369, 372, 373, 378, 382, 384, 385, 390, 395, 417, 434, 444, 446, 447, 448, 452, 453, 454, 455, 457, 459, 460, 466, 470, 475, 477, 479, 483, 484, 487, 488, 498, 500, 503, 505, 507, 509, 510, 518], "global": 0, "golub": 213, "good": 402, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 78, 92, 95, 108, 109, 117, 121, 135, 152, 153, 154, 155, 157, 158, 160, 171, 227, 228, 239, 249, 371, 372, 373, 488, 502, 509, 510], "grade": 104, "gradient": [6, 97, 105, 207], "graphic": 4, "great": 10, "greater": [6, 60, 63, 101, 102, 110, 147, 164, 194, 195, 196, 211, 216, 345, 370, 375, 451, 460, 462, 473, 501], "greater_equ": [6, 110, 163, 195, 196, 370], "greatest": [147, 159, 192], "greedi": [106, 107], "grid": [40, 41, 42, 154, 174, 214, 248, 249, 371, 374], "group": [34, 369], "guarante": [104, 447, 448], "guid": [2, 3], "gumbel": 6, "gz": 228, "h": [161, 197, 213, 216, 248], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 87, 88, 89, 98, 104, 110, 114, 124, 129, 130, 154, 162, 163, 164, 169, 173, 178, 179, 186, 187, 195, 196, 204, 217, 219, 224, 240, 246, 247, 252, 259, 260, 262, 264, 265, 266, 267, 370, 375, 382, 441, 442, 443, 444, 445, 446, 454, 458, 460, 473, 474, 475, 477, 478, 479, 484, 485, 499, 503, 518], "had": [386, 480], "hadamard": 107, "half": [14, 25, 120, 122, 123, 124, 126, 127, 227, 390, 420, 422, 423, 425, 434, 478], "ham": 6, "han": 6, "hand": [86, 199, 223], "handl": [23, 104, 118, 228, 369, 386, 440, 479, 480, 521], "happen": [49, 56, 101, 321, 392, 487], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 104, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 74, 75, 76, 79, 82, 83, 86, 87, 88, 89, 90, 91, 99, 100, 103, 104, 110, 112, 113, 115, 118, 126, 127, 136, 138, 139, 145, 146, 147, 148, 149, 150, 159, 163, 164, 165, 169, 170, 173, 176, 177, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 201, 207, 209, 212, 214, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 245, 246, 247, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 367, 368, 370, 378, 379, 380, 381, 382, 383, 388, 389, 409, 441, 443, 444, 445, 446, 447, 448, 451, 452, 456, 457, 458, 462, 463, 464, 465, 469, 471, 472, 474, 475, 476, 477, 481, 482, 484, 496, 497, 501, 503, 505, 507, 518], "hd": 107, "header": 161, "heavisid": 6, "hello": 104, "help": 525, "helper": 521, "henc": [114, 162], "here": [6, 33, 104, 106, 124, 129, 130, 467, 490, 494], "hermit": [203, 205], "hermitian": [124, 129, 130, 132, 133, 197, 202, 203, 204, 205, 211, 215, 219, 220, 521], "hfft": [6, 10, 129], "hierarchi": 189, "high": [130, 390, 418, 421, 434], "higher": [101, 106, 168, 338, 504, 506], "highest": 119, "highli": 153, "hist": [166, 428], "hist_0": 167, "hist_1": 167, "histogram": [6, 98, 167, 459, 521], "histogram2d": 6, "histogram_bin_edg": [6, 166], "histogramdd": [6, 166], "hold": [71, 88, 89, 166, 213, 247, 259, 260, 264, 266, 439, 485], "homogen": 104, "hopkin": 213, "horizont": [72, 73, 74, 96, 103, 137, 142, 168, 169, 201, 455, 457, 470, 474, 507], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 488, 490, 494, 502, 509, 510], "household": 216, "how": [0, 4, 104, 130, 133, 162, 385, 386, 440, 479, 480, 490, 494], "howev": [101, 356, 479], "hsplit": [6, 73, 74, 470], "hstack": [6, 72, 73, 74, 103, 457, 470, 474, 507], "http": [4, 151], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 464, 465, 481, 482, 521], "hypergeometr": 6, "hypot": [6, 444], "hypotenus": [170, 444], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 275, 321, 326, 336, 338, 345, 351, 354, 356, 359, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 518, 525], "i0": 6, "i1": [101, 104, 359], "i2": [101, 104, 359], "i3": [101, 359], "i4": [67, 104], "i7": 106, "i8": [67, 104], "iaxi": 375, "iaxis_pad_width": 375, "icpx": 4, "icx": 4, "id": [16, 21], "ident": [3, 6, 16, 21, 42, 87, 104, 117, 128, 137, 218, 225, 429, 505], "identifi": 104, "ieee": 138, "ifft": [6, 119, 126, 127, 129, 130, 135], "ifft2": [6, 120, 125, 127], "ifftn": [6, 122, 125, 126], "ifftshift": [6, 10, 123, 127], "ignor": [31, 32, 86, 104, 148, 149, 156, 166, 167, 244, 245, 246, 250, 251, 257, 258, 261, 262, 263, 265, 267, 475, 503], "ihfft": [6, 124], "ii": [106, 413], "iinfo": 407, "iinfo_object": 172, "ij": [106, 107, 248], "ijk": 106, "il": 107, "il1": 490, "il2": 490, "illustr": 204, "ilm": 106, "im": [214, 374], "imag": [6, 10, 20, 37, 101, 441, 442, 449, 518], "imaginari": [20, 37, 101, 130, 148, 149, 173, 178, 179, 186, 187, 202, 203, 205, 210, 245, 251, 256, 335, 441, 442, 468, 498], "implement": [3, 4, 6, 44, 119, 151], "impli": [104, 439], "implicit": 106, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 329, 331, 334, 335, 336, 338, 343, 345, 349, 354, 355, 356, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 415, 424, 428, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "improv": 106, "in1d": 6, "in_array1": 111, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 78, 87, 92, 95, 98, 106, 107, 118, 157, 158, 160, 161, 166, 167, 179, 187, 215, 227, 239, 240, 246, 247, 261, 262, 263, 265, 267, 390, 434, 444, 475, 502, 503], "include_initi": 87, "inclus": [390, 418, 421, 460], "increas": [98, 104, 114, 125, 130, 166, 375, 449, 502], "ind": [33, 98, 222, 385, 386, 490, 491, 494, 495], "independ": 199, "index": [4, 22, 31, 32, 33, 34, 70, 101, 104, 107, 117, 120, 126, 134, 141, 151, 174, 181, 190, 248, 257, 258, 322, 334, 336, 359, 369, 385, 386, 439, 440, 448, 449, 459, 460, 470, 479, 480, 490, 494, 498, 499, 508, 511, 521], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 87, 93, 94, 98, 101, 102, 104, 106, 107, 116, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 141, 151, 154, 166, 168, 222, 223, 241, 242, 249, 257, 258, 318, 319, 320, 344, 347, 353, 362, 369, 377, 385, 386, 440, 459, 462, 463, 467, 470, 479, 480, 486, 490, 491, 494, 495, 498, 499, 505, 506, 508], "indices_or_sect": [39, 102, 168, 470, 506], "indirect": [33, 467], "individu": 400, "inequ": 370, "inexact": [145, 256, 264, 266], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 79, 99, 177, 180, 182, 183, 184, 185, 198, 209, 213, 226, 229, 230, 232, 245, 251, 256, 257, 258, 261, 263, 266, 383, 469, 471, 496], "infer": [42, 87, 240, 444, 448], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 147, 180, 182, 183, 184, 185, 252, 256, 261, 263, 266, 445, 497, 521], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 198, 213], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 101, 104, 124, 130, 132, 138, 332, 447, 518, 521], "initi": [18, 19, 87, 101, 108, 156, 244, 250, 261, 263, 264, 266, 339, 341, 346, 360, 382, 390, 477], "inner": [6, 86, 106, 107, 208, 212, 242, 374], "innermost": [201, 209, 224, 243], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 334, 343, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 412, 418, 434, 439, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 496, 497, 498, 501, 502, 503, 504, 505, 506, 509, 510], "insert": [6, 22, 31, 32, 96, 98, 101, 106, 114, 160, 166, 227, 239, 257, 258, 261, 263, 353, 386, 448, 459, 460, 521], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 124, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 171, 174, 227, 228, 239, 241, 242, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 505, 509, 510], "instead": [34, 49, 96, 100, 101, 106, 114, 146, 160, 166, 167, 174, 181, 212, 227, 234, 239, 244, 250, 321, 369, 382, 440, 449, 477, 518], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 44, 56, 66, 73, 74, 84, 86, 87, 88, 89, 92, 93, 95, 96, 97, 101, 102, 104, 108, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 167, 168, 171, 172, 174, 199, 201, 207, 210, 213, 221, 222, 223, 224, 225, 226, 227, 239, 240, 241, 244, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 336, 343, 355, 364, 366, 372, 373, 375, 376, 377, 382, 385, 386, 390, 418, 421, 440, 444, 446, 448, 449, 453, 454, 455, 456, 466, 467, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 499, 500, 501, 502, 503, 505, 506, 509, 510, 518], "int16": 104, "int32": [0, 9, 44, 67, 104, 108, 109, 117, 152, 155, 157, 158, 171, 228, 264, 266, 372, 373, 390, 392, 400, 402, 407, 409, 415, 418, 434, 450, 477, 488, 509, 510], "int64": [0, 9, 67, 104, 264, 266, 450], "int8": [104, 382], "int_": 9, "int_0": 487, "int_t": 487, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 87, 88, 89, 98, 101, 102, 104, 139, 142, 145, 146, 147, 151, 159, 166, 168, 172, 176, 190, 192, 193, 194, 210, 213, 221, 222, 224, 226, 240, 244, 246, 250, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 356, 364, 380, 381, 382, 385, 390, 418, 421, 426, 440, 444, 445, 446, 448, 451, 452, 453, 455, 456, 459, 460, 461, 470, 472, 475, 477, 479, 483, 485, 497, 498, 499, 501, 503, 506, 518], "integer_lik": [221, 483], "integr": [3, 4, 56, 87, 89, 145, 166, 240, 246, 247, 253, 262, 265, 267, 380, 381, 444, 475, 477, 487, 503], "intel": [3, 106], "intend": [101, 364], "intent": 145, "interchang": [101, 254, 361, 478], "interfac": [0, 152], "interior": 162, "intermedi": [88, 106, 107], "intern": [33, 390, 467], "interp": 6, "interpol": [130, 449], "interpret": [2, 40, 41, 42, 48, 66, 78, 101, 104, 124, 130, 132, 152, 190, 241, 336, 369, 385, 518], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 98, 114, 160, 227, 239, 390, 418, 420, 422, 423, 425, 433, 434, 478], "intp": [264, 266], "intrins": 518, "introduc": 453, "introduct": 10, "introselect": [101, 345, 376], "inv": [6, 198, 215], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 193, 206, 215, 222, 223, 231, 436, 464, 465, 481, 482, 498], "invert": [6, 59, 61, 206, 215, 222], "invok": 518, "involv": 222, "io": [151, 228], "irfft": [6, 121, 124, 129, 131, 132, 133, 135], "irfft2": [6, 130, 132, 134], "irfftn": [6, 130, 131, 136], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 104, "isbuiltin": 104, "isclos": [6, 17], "iscomplex": [6, 179, 186], "iscomplexobj": [6, 178, 187], "isfinit": [6, 182, 183, 184, 185, 256, 261, 263, 266], "isfortran": 6, "isin": 6, "isinf": [6, 180, 183, 184, 185, 256], "isn": 104, "isnan": [6, 180, 182, 184, 185, 256, 259, 260, 261, 263, 264, 266], "isnat": [6, 183], "isneginf": [6, 180, 182, 183, 185, 256], "isposinf": [6, 180, 182, 183, 184, 256], "isreal": [6, 178, 187], "isrealobj": [6, 179, 186], "isscalar": 6, "issctyp": 6, "issu": 126, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 101, 152, 153, 155, 498, 511], "item_dtyp": 104, "item_hasobject": 104, "item_is_point": 104, "items": [101, 104], "itemset": 6, "iter": [6, 40, 41, 42, 101, 107, 140, 152, 153, 155, 156, 333, 334, 386, 439, 449, 480, 500, 521], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 92, 101, 124, 130, 132, 138, 166, 167, 171, 202, 203, 204, 205, 212, 215, 223, 246, 262, 265, 267, 364, 377, 427, 439, 444, 448, 467, 475, 486, 487, 488, 503, 518], "itself": [49, 101, 104, 193, 256, 321, 518], "iu": 241, "iu1": [241, 494], "iu2": 494, "ix_": 6, "ixgrid": 190, "j": [36, 75, 76, 101, 106, 120, 122, 124, 125, 126, 127, 129, 130, 133, 134, 136, 145, 154, 173, 174, 191, 197, 202, 203, 213, 214, 221, 224, 232, 242, 256, 364, 374, 383, 386, 441, 468, 472, 480, 483], "j1": 191, "jame": 10, "ji": 106, "jil": 106, "jk": [106, 107], "jl": 107, "john": [10, 213], "join": [72, 73, 74, 103, 169, 457, 470, 474, 500, 507, 521], "jump": [90, 388], "just": [72, 96, 104, 120, 126, 131, 133, 134], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 92, 95, 99, 101, 106, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 158, 159, 163, 164, 165, 170, 173, 176, 180, 182, 183, 191, 192, 193, 194, 195, 196, 207, 216, 218, 219, 220, 221, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 245, 251, 252, 255, 275, 321, 326, 367, 368, 370, 373, 379, 380, 381, 383, 388, 389, 439, 441, 443, 445, 451, 452, 455, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 483, 488, 489, 490, 491, 493, 494, 495, 496, 497, 501, 505, 508, 510, 525], "kaiser": 6, "kappa": 435, "keep": [48, 49, 101, 321, 498], "keepdim": [16, 18, 19, 21, 31, 32, 56, 84, 101, 209, 213, 226, 240, 244, 246, 247, 250, 257, 258, 261, 262, 263, 264, 265, 266, 267, 316, 317, 318, 319, 339, 340, 341, 346, 358, 360, 365, 382, 384, 386, 444, 475, 477, 480, 503], "kei": [3, 33, 101, 104, 140, 280, 311, 467], "key2": 104, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 78, 79, 82, 83, 86, 90, 91, 92, 93, 95, 99, 101, 108, 109, 112, 113, 115, 117, 118, 121, 135, 139, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 170, 171, 174, 176, 192, 193, 194, 199, 201, 208, 214, 224, 225, 228, 230, 231, 232, 233, 234, 241, 242, 245, 249, 251, 252, 253, 255, 256, 326, 367, 368, 371, 372, 373, 375, 379, 380, 381, 383, 388, 389, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 443, 445, 448, 451, 452, 458, 462, 463, 464, 465, 469, 476, 481, 482, 488, 490, 494, 496, 497, 502, 505, 508, 509, 510, 518], "ki": 106, "kind": [33, 49, 67, 73, 74, 80, 87, 101, 104, 106, 138, 169, 212, 240, 242, 320, 321, 345, 356, 376, 444, 448, 457, 467, 474, 505, 507, 521], "kl": [10, 106, 107], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 153, 428], "kron": 6, "kroneck": 191, "kth": [101, 345, 376], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 79, 82, 83, 90, 91, 99, 101, 110, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 154, 159, 163, 164, 165, 170, 176, 180, 182, 183, 192, 193, 194, 195, 196, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 251, 252, 253, 255, 305, 323, 367, 368, 370, 375, 379, 380, 381, 383, 388, 389, 443, 445, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 496, 497], "l": [10, 39, 104, 197, 203, 205, 224], "la": [202, 204, 205], "label": 106, "laid": 45, "lam": 415, "lambda": 154, "lapack": [202, 204], "laplac": 6, "laptop": 4, "larg": [10, 90, 104, 166, 215, 256, 388, 501, 525], "larger": [106, 119, 120, 122, 125, 126, 127, 129, 131, 132, 133, 134, 136, 138, 449, 485, 501, 518], "largest": [10, 107, 133, 138, 146, 172, 207, 213, 252, 256, 445], "largest_singular_valu": 215, "last": [16, 21, 22, 33, 86, 96, 97, 101, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 142, 160, 162, 175, 181, 201, 212, 220, 221, 224, 227, 239, 242, 334, 338, 375, 382, 439, 448, 453, 459, 467, 473, 477, 483, 500, 501, 505], "later": [375, 525], "latest": [4, 151], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 148, 149, 245, 251, 386, 480], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 99, 101, 106, 108, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 157, 158, 159, 163, 164, 165, 170, 173, 176, 180, 182, 183, 192, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 251, 252, 255, 326, 332, 367, 368, 370, 372, 373, 379, 380, 381, 383, 388, 389, 439, 441, 443, 445, 447, 448, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 496, 497, 505, 508, 509, 510, 511], "lcm": [6, 159], "ldexp": 6, "ldot": 10, "lead": [125, 126, 127, 259, 260, 492], "learn": [3, 4, 234], "least": [53, 54, 55, 56, 94, 103, 104, 107, 114, 137, 143, 148, 149, 153, 179, 207, 216, 245, 251, 457, 507], "left": [10, 28, 31, 32, 35, 50, 60, 63, 84, 96, 98, 101, 143, 144, 194, 204, 209, 213, 226, 244, 250, 257, 258, 264, 266, 353, 382, 433, 451, 456, 459, 477, 487, 502], "left_shift": [6, 60, 63, 451], "leg": [170, 444], "legaci": 426, "len": [101, 104, 122, 123, 124, 127, 129, 130, 131, 132, 136, 174, 207, 244, 248, 249, 250, 297, 461, 502], "length": [23, 39, 56, 88, 89, 97, 110, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 156, 160, 162, 166, 169, 202, 219, 220, 221, 239, 244, 247, 248, 250, 259, 260, 375, 386, 393, 448, 450, 457, 459, 460, 461, 473, 480, 483, 484, 507], "less": [6, 88, 89, 101, 110, 163, 164, 166, 167, 196, 207, 215, 224, 259, 260, 264, 266, 338, 370, 382, 460, 462, 477, 485], "less_equ": [6, 110, 163, 164, 195, 370], "let": [225, 392, 448, 505], "level": [511, 518], "level_zero": [23, 36, 40, 41, 42, 43, 45, 78, 92, 95, 108, 109, 117, 121, 135, 152, 153, 154, 155, 157, 158, 160, 171, 227, 228, 239, 249, 371, 372, 373, 488, 502, 509, 510], "lexicograph": 498, "lexsort": [6, 33, 467], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 453, 454], "librari": [3, 4, 518], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 72, 101, 103, 106, 108, 117, 132, 152, 153, 154, 155, 156, 157, 160, 171, 227, 228, 239, 241, 321, 334, 343, 366, 372, 386, 390, 434, 439, 447, 448, 480, 509, 521], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 75, 76, 78, 79, 81, 82, 83, 85, 90, 91, 99, 101, 104, 108, 109, 110, 111, 112, 113, 115, 117, 118, 138, 139, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 170, 171, 172, 176, 180, 182, 183, 192, 193, 194, 195, 196, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 245, 246, 250, 251, 252, 253, 255, 257, 258, 261, 262, 263, 264, 265, 266, 267, 321, 323, 367, 368, 370, 372, 373, 376, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 415, 416, 418, 421, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 443, 445, 447, 451, 452, 458, 462, 463, 464, 465, 467, 469, 471, 472, 475, 476, 477, 481, 482, 496, 497, 503, 505, 509, 510], "linalg": [6, 86, 96, 100, 106, 107, 242, 243, 374, 472, 483, 485, 504, 505], "line": [207, 228], "linear": [10, 77, 81, 207, 218, 239, 375, 511, 521], "linear_ramp": 375, "linspac": [0, 6, 23, 111, 160, 214, 239, 248, 374, 487, 501], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 65, 73, 74, 78, 92, 95, 101, 102, 103, 104, 106, 107, 123, 128, 137, 157, 158, 160, 162, 168, 169, 179, 187, 221, 227, 228, 239, 242, 247, 364, 377, 440, 446, 447, 449, 450, 457, 460, 470, 474, 483, 486, 499, 500, 502, 505, 506, 507, 508], "list_pickl": 104, "littl": 104, "ln": 239, "load": [6, 153, 228], "loadtxt": [6, 153], "loan": 213, "loc": [390, 401, 403, 404, 412, 436], "local": 4, "locat": [0, 4, 161, 184, 185, 241, 374, 401, 403, 459, 505], "log": [6, 115, 160, 217, 227, 230, 231, 232, 233, 239, 240, 405], "log10": [6, 229, 231, 232], "log1p": [6, 113, 115, 229, 230, 232], "log2": [6, 229, 230, 231, 234], "log_bas": 239, "logabsdet": 217, "logaddexp": [6, 87, 234, 240], "logaddexp2": [6, 233, 240], "logarithm": [87, 200, 217, 227, 229, 230, 231, 232, 233, 234, 240, 406, 521], "logic": [16, 21, 235, 236, 237, 238, 511, 521], "logical_and": [6, 58, 236, 237, 238], "logical_not": [6, 59, 61, 176, 235, 237, 238], "logical_or": [6, 62, 235, 236, 238], "logical_xor": [6, 64, 235, 236, 237], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 160, 227], "logsumexp": [87, 233, 234], "lomax": 413, "long": [104, 210], "longer": [124, 130, 525], "look": [368, 480], "lookfor": 6, "loop": 106, "loos": 105, "lorentz": 428, "lose": [124, 130, 132], "low": [120, 122, 126, 127, 390, 418, 421, 434, 518], "lower": [92, 117, 166, 167, 189, 197, 203, 205, 241, 488, 489, 490, 491, 494, 495], "lowest": [56, 106, 107, 159, 192, 390, 418], "lstsq": 6, "m": [4, 10, 85, 103, 104, 106, 117, 120, 122, 124, 126, 127, 130, 131, 132, 136, 142, 143, 144, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 224, 241, 242, 243, 247, 386, 455, 460, 479, 480, 488, 489, 490, 491, 493, 494, 495], "machin": [4, 10, 138, 172, 207, 234, 442], "machineri": 104, "made": [36, 41, 53, 104, 151, 191, 256, 448, 470], "magnitud": [11, 12, 79, 118, 383], "mai": [16, 20, 21, 49, 67, 71, 73, 74, 80, 89, 101, 104, 106, 107, 114, 120, 122, 124, 125, 126, 127, 129, 130, 133, 136, 162, 167, 169, 198, 202, 203, 207, 209, 213, 216, 234, 239, 242, 256, 262, 265, 267, 321, 354, 386, 439, 442, 449, 457, 474, 484, 505, 507, 518], "main": [92, 93, 94, 95, 96, 117, 137, 171, 201, 205, 224, 241, 485, 488, 489, 490, 493, 494], "mainstai": 10, "maintain": [33, 98, 101, 104, 166, 353, 459, 467, 480], "major": [4, 40, 41, 42, 43, 45, 48, 49, 101, 321, 369, 439, 440, 447, 499], "make": [43, 45, 72, 104, 214, 248, 374, 447, 498, 501], "manag": 0, "mandelbrot": [214, 374], "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 439, 518], "manipul": [3, 93, 511, 521], "mantissa": 193, "manual": [4, 104, 484], "mappingproxi": 104, "mask": [104, 190, 241, 369, 378, 387, 479, 490, 494], "mask_func": 241, "mask_indic": [6, 490, 494], "mass": 166, "mat": 6, "match": [11, 12, 41, 73, 74, 80, 84, 87, 97, 104, 151, 153, 162, 175, 221, 240, 242, 385, 386, 444, 474, 479, 480, 483, 508], "math": [10, 111], "mathbf": [225, 505], "mathemat": [213, 511, 521], "matlab": 150, "matmul": [6, 100, 216, 219, 504], "matplotlib": [248, 428], "matric": [137, 154, 174, 190, 200, 201, 202, 204, 206, 209, 211, 213, 215, 216, 217, 219, 220, 224, 242, 243, 248, 521], "matrix": [85, 100, 101, 106, 175, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 224, 242, 243, 248, 338, 472, 493, 502, 504, 505, 511, 521], "matrix_norm": 213, "matrix_pow": [6, 472], "matrix_rank": 6, "matter": 498, "max": [0, 6, 18, 31, 71, 101, 138, 148, 149, 166, 167, 172, 207, 211, 213, 215, 245, 250, 251, 261, 323, 407, 480, 484, 501, 518], "max_arg": 0, "max_val": 0, "maxima": [148, 244, 245], "maximum": [0, 6, 18, 31, 32, 71, 101, 107, 148, 149, 244, 250, 251, 257, 258, 261, 263, 318, 339, 375, 380, 381, 384, 386, 501], "maximum_sctyp": 6, "may_share_memori": 6, "md": 213, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 78, 84, 92, 93, 95, 101, 106, 108, 109, 117, 120, 121, 122, 126, 127, 131, 132, 133, 134, 135, 136, 152, 153, 154, 155, 156, 157, 158, 162, 171, 174, 198, 213, 228, 241, 247, 249, 262, 265, 267, 321, 326, 334, 364, 371, 372, 373, 375, 390, 403, 405, 408, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 435, 436, 439, 448, 455, 475, 477, 488, 490, 494, 502, 503, 509, 510, 518], "meaningfulli": 518, "meant": 518, "median": [0, 6, 375], "meet": [36, 460], "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 99, 101, 104, 106, 108, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 163, 164, 165, 170, 173, 176, 180, 181, 182, 183, 192, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 247, 248, 251, 252, 255, 326, 332, 359, 367, 368, 370, 372, 373, 379, 380, 381, 383, 388, 389, 439, 441, 443, 445, 447, 448, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 496, 497, 505, 508, 509, 510, 511, 525], "mersenn": 390, "mesh": 190, "meshgrid": [6, 154, 174, 190, 249, 371], "met": [100, 212], "meta": 104, "metadata": 104, "method": [10, 16, 18, 19, 21, 33, 49, 78, 100, 101, 104, 140, 151, 153, 211, 215, 219, 243, 321, 326, 336, 343, 351, 354, 366, 369, 377, 390, 448, 461, 477, 479, 486, 511], "mgrid": [120, 122, 131, 134, 174, 190], "mgridclass": 249, "middl": [10, 96, 120, 122, 126, 127, 204, 247], "might": [106, 125, 126, 127], "min": [6, 19, 32, 71, 101, 138, 148, 149, 166, 167, 172, 198, 201, 207, 213, 216, 219, 220, 244, 245, 251, 263, 323, 480, 518], "min_scalar_typ": 6, "minima": [149, 250, 251], "minimum": [6, 19, 31, 32, 36, 71, 101, 145, 148, 149, 244, 245, 250, 257, 258, 261, 263, 319, 341, 375, 380, 381, 384], "minlength": 57, "mintypecod": 6, "minu": [115, 147, 252, 445, 497], "mirror": 375, "miscellan": [2, 511, 521], "mise": 435, "miss": 228, "mix": [208, 242], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 116, 445, 501], "mode": [70, 77, 81, 101, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 216, 322, 347, 362, 375, 385, 386, 428, 433, 440, 459, 479, 480], "model": [4, 392], "modf": 6, "modifi": [78, 96, 137, 247, 375, 427], "modul": [119, 161, 511], "modulu": [150, 252, 445], "monoton": [98, 166], "moor": 215, "more": [0, 3, 4, 33, 36, 53, 54, 55, 103, 104, 106, 107, 115, 131, 134, 143, 144, 151, 153, 167, 169, 174, 193, 199, 201, 207, 208, 210, 211, 212, 214, 215, 219, 221, 224, 225, 231, 233, 449, 455, 474, 483, 487, 498, 501, 518, 525], "most": [3, 4, 22, 96, 97, 104, 107, 119, 125, 256, 390, 426, 449, 473], "move": [101, 254, 345, 377, 453, 454, 486, 498], "moveaxi": [6, 377, 453, 454, 486, 500], "msg": 0, "msort": 6, "mt": [101, 243], "mt19937": 426, "mu": [401, 405, 412, 435], "multi": [2, 101, 174, 190, 199, 249, 359, 371, 440, 498, 511], "multi_dot": [6, 100, 106, 107], "multi_index": 440, "multiarrai": 104, "multidimension": [166, 175, 508], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 73, 74, 86, 87, 102, 104, 106, 120, 122, 126, 127, 131, 132, 134, 136, 159, 167, 168, 169, 190, 192, 199, 202, 203, 204, 205, 206, 212, 240, 244, 246, 250, 261, 262, 263, 265, 267, 439, 444, 457, 460, 467, 470, 474, 475, 487, 498, 500, 503, 506, 507, 511], "multipli": [6, 88, 106, 193, 204, 264, 382], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 408, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 97, 99, 100, 103, 112, 113, 114, 115, 118, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 143, 145, 146, 147, 148, 149, 150, 153, 156, 159, 162, 163, 164, 165, 166, 167, 169, 170, 173, 176, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 199, 201, 212, 213, 214, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 367, 368, 370, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 441, 443, 444, 445, 446, 451, 452, 453, 455, 456, 457, 458, 459, 462, 463, 464, 465, 469, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 496, 497, 503, 505, 507, 508], "mx": 207, "mxn": [201, 209, 224, 243], "n": [0, 4, 10, 34, 39, 89, 93, 94, 97, 98, 101, 102, 103, 104, 105, 114, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 146, 154, 162, 168, 171, 190, 201, 207, 209, 210, 211, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 241, 242, 243, 247, 248, 265, 267, 364, 375, 377, 378, 385, 386, 392, 407, 409, 419, 429, 459, 461, 470, 472, 475, 478, 479, 480, 483, 486, 487, 488, 489, 490, 491, 493, 494, 495, 502, 503, 505, 506, 518], "n1": 248, "n2": [228, 248], "n3": 248, "naiv": 107, "name": [0, 6, 104, 215], "namedtupl": 216, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 99, 145, 148, 149, 177, 180, 182, 183, 184, 185, 230, 244, 245, 246, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 380, 381, 382, 469, 471, 475, 496, 498, 503, 521], "nan_to_num": 6, "nanargmax": [6, 31, 258], "nanargmin": [6, 32, 257], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 148, 149, 244, 245, 251, 263], "nanmean": [6, 246, 265, 267, 475, 503], "nanmedian": 6, "nanmin": [6, 148, 149, 245, 250, 251, 261], "nanpercentil": 6, "nanprod": [6, 382], "nanquantil": 6, "nanstd": [6, 246, 262, 267, 475, 503], "nansum": 6, "nanvar": [6, 246, 262, 265, 475, 503], "nat": 183, "nativ": 104, "native_cod": 104, "native_dt": 104, "natur": [217, 229, 230, 231, 232, 233, 234, 240], "nbad": 402, "nbyte": 101, "nd": [101, 336], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 522], "ndim": [6, 34, 36, 43, 45, 53, 54, 55, 85, 93, 96, 101, 104, 137, 191, 213, 219, 220, 243, 244, 250, 372, 377, 484, 486, 509], "ndmin": 36, "nearest": [35, 69, 139, 146, 147, 252, 445, 452, 456, 469, 497], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 80, 88, 89, 105, 116, 124, 130, 132, 137, 151, 160, 227, 239, 242, 246, 247, 259, 260, 262, 264, 265, 266, 267, 382, 449, 475, 477, 503, 525], "necessarili": [202, 204], "need": [4, 36, 41, 96, 106, 161, 247, 447, 479, 480, 508], "needs_init": 104, "needs_pyapi": 104, "neg": [6, 10, 16, 21, 35, 57, 79, 95, 96, 98, 101, 114, 117, 120, 122, 125, 126, 127, 130, 133, 142, 145, 156, 162, 166, 180, 182, 183, 184, 185, 210, 221, 256, 261, 263, 265, 266, 267, 354, 379, 380, 381, 382, 385, 386, 409, 440, 456, 475, 477, 479, 480, 483, 485, 503], "negat": 460, "negative_binomi": 6, "neginf": 256, "neither": [100, 148, 149, 208, 219, 242, 261, 263], "nest": [44, 103, 169, 457, 474, 500, 507], "nested_it": 6, "net": [148, 149, 245, 251], "never": 501, "new": [22, 36, 49, 65, 66, 72, 73, 74, 84, 87, 88, 89, 96, 101, 103, 104, 105, 108, 109, 114, 148, 149, 151, 155, 156, 157, 158, 160, 169, 171, 227, 239, 240, 241, 245, 247, 251, 254, 259, 260, 264, 266, 321, 351, 354, 364, 372, 373, 377, 444, 448, 449, 453, 454, 457, 470, 474, 484, 486, 500, 507, 508, 509, 510, 518], "new_dtyp": 104, "new_ord": 104, "new_shap": 449, "newaxi": 114, "newbyteord": [6, 104], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 99, 101, 108, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 157, 158, 159, 163, 164, 165, 170, 173, 176, 180, 182, 183, 192, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 251, 252, 255, 321, 326, 367, 368, 370, 372, 373, 379, 380, 381, 383, 388, 389, 441, 443, 445, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 496, 497, 505, 509, 510], "newshap": 448, "next": [4, 138, 368], "nextaft": 6, "ngood": 402, "ni": [248, 386, 479, 480], "nine": 392, "ninja": 4, "nj": [386, 479, 480], "njm": 106, "nk": [386, 479, 480], "nl": 10, "nlk": 106, "nn": 248, "noisi": 207, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 78, 84, 92, 93, 95, 98, 101, 108, 109, 116, 117, 121, 130, 133, 135, 141, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 167, 171, 174, 178, 180, 190, 199, 221, 227, 228, 239, 241, 249, 256, 257, 258, 261, 263, 265, 267, 321, 326, 344, 354, 369, 371, 372, 373, 378, 380, 381, 390, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 475, 483, 488, 490, 494, 502, 503, 508, 509, 510], "nonc": [410, 411], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 84, 101, 141, 190, 508, 518], "nor": [148, 149, 204, 261, 263], "norm": [6, 10, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 198, 204, 207, 209, 226, 521], "normal": [6, 85, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 166, 202, 203, 216, 225, 234, 390, 405, 408, 419, 431, 440, 505], "not_equ": [6, 110, 163, 164, 195, 196], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 60, 61, 63, 73, 74, 78, 86, 90, 96, 98, 99, 101, 104, 106, 107, 114, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 146, 148, 149, 152, 153, 154, 155, 156, 166, 174, 176, 180, 193, 194, 199, 201, 202, 209, 213, 221, 226, 228, 239, 247, 252, 255, 265, 266, 267, 326, 351, 369, 375, 377, 378, 380, 381, 385, 388, 393, 395, 396, 406, 411, 439, 445, 447, 448, 449, 451, 455, 467, 469, 475, 476, 478, 483, 484, 486, 487, 496, 498, 500, 501, 503, 504], "notic": [104, 130, 133], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 99, 101, 108, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 170, 171, 176, 180, 182, 183, 192, 193, 194, 195, 196, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 245, 246, 250, 251, 252, 255, 261, 262, 263, 265, 266, 267, 321, 367, 368, 370, 372, 373, 379, 380, 381, 382, 383, 388, 389, 439, 443, 445, 447, 451, 452, 458, 462, 463, 464, 465, 467, 469, 471, 472, 475, 476, 477, 481, 482, 496, 497, 503, 505, 509, 510], "now": [16, 21, 43, 45, 93, 204, 207, 241], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 329, 331, 334, 335, 336, 338, 343, 345, 349, 354, 355, 356, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 384, 385, 386, 388, 389, 415, 424, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "nr": 10, "nsamp": 402, "nsampl": 402, "nth": [221, 483], "nuc": [209, 213, 226], "nuclear": 213, "num": [0, 104, 111, 160, 227, 239, 487, 501], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 42, 46, 47, 50, 52, 56, 57, 65, 66, 84, 93, 95, 97, 98, 101, 104, 105, 106, 107, 114, 117, 118, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 147, 152, 153, 155, 156, 160, 162, 166, 167, 171, 172, 177, 178, 179, 180, 187, 190, 193, 198, 206, 211, 213, 216, 217, 219, 222, 223, 227, 234, 239, 252, 256, 259, 260, 261, 263, 264, 265, 266, 267, 343, 352, 355, 366, 369, 375, 377, 378, 382, 383, 390, 392, 402, 426, 445, 446, 449, 452, 453, 454, 455, 456, 463, 466, 469, 475, 478, 484, 486, 488, 497, 498, 502, 503, 518, 521], "number_of_dimens": [101, 343, 366], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 75, 76, 79, 82, 83, 99, 104, 110, 112, 115, 125, 126, 127, 130, 132, 147, 148, 149, 163, 164, 173, 177, 180, 182, 183, 195, 196, 213, 214, 229, 230, 231, 232, 245, 251, 255, 367, 370, 379, 380, 381, 383, 441, 452, 456, 462, 463, 464, 465, 476, 481, 482, 496, 521], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 330, 331, 334, 335, 336, 343, 349, 354, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 518, 521], "nvidia": 4, "nx": 248, "ny": 248, "nyquist": [10, 120, 122, 123, 124, 125, 126, 127, 130, 132, 133, 135], "o": [4, 16, 21, 104], "obj": [31, 32, 33, 104, 151, 166], "obj2sctyp": 6, "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 78, 92, 93, 95, 101, 104, 108, 109, 114, 117, 121, 135, 138, 140, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 172, 174, 198, 203, 213, 221, 227, 228, 239, 241, 249, 321, 326, 336, 351, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 448, 483, 488, 490, 494, 502, 509, 510, 518], "obsolet": 181, "obtain": [10, 96, 197, 201, 224, 369], "obviou": 10, "occupi": [138, 172], "occur": [22, 49, 67, 73, 74, 80, 101, 106, 169, 202, 242, 256, 321, 457, 474, 505, 507], "occurr": [31, 32, 57, 98, 166, 257, 258, 498], "odd": [10, 121, 124, 128, 129, 130, 132, 133, 135, 247, 375], "off": [23, 124, 129, 201, 202, 207, 224], "offset": [96, 101, 104, 152, 153, 201, 224, 241, 329, 363, 485, 490, 491, 494, 495], "often": 165, "ogrid": [174, 190, 508], "ogridclass": 371, "oil": [392, 409], "old": 449, "omit": [390, 418], "onc": 206, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 77, 80, 81, 84, 101, 104, 108, 110, 114, 116, 117, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 143, 144, 145, 148, 149, 153, 157, 162, 167, 169, 171, 174, 179, 190, 204, 209, 210, 213, 221, 226, 229, 230, 232, 241, 244, 245, 248, 249, 250, 251, 257, 258, 264, 266, 326, 334, 336, 337, 369, 371, 373, 378, 382, 409, 440, 454, 460, 467, 473, 474, 477, 479, 483, 487, 490, 491, 494, 495, 498, 509, 518], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "onedpl": 4, "onemkl": [4, 202, 204], "ones": [6, 36, 43, 45, 56, 87, 99, 101, 106, 108, 109, 110, 114, 117, 136, 157, 158, 170, 171, 191, 207, 211, 214, 240, 241, 259, 264, 373, 374, 377, 382, 444, 450, 454, 486, 488, 496, 509, 510], "ones_lik": [6, 36, 109, 158, 372, 510], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 78, 81, 85, 101, 104, 106, 107, 108, 109, 117, 123, 133, 137, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 167, 174, 181, 197, 203, 205, 208, 211, 213, 214, 215, 216, 219, 227, 228, 239, 241, 242, 244, 246, 250, 256, 257, 258, 261, 262, 263, 264, 265, 267, 321, 336, 354, 356, 372, 373, 376, 378, 379, 382, 390, 412, 418, 434, 439, 447, 448, 467, 475, 477, 480, 494, 498, 501, 503, 505, 508, 509, 510, 518], "open": [153, 174, 190, 227, 371, 390, 420, 422, 423, 425, 434, 478], "opencl": [23, 36, 40, 41, 42, 43, 45, 78, 92, 95, 108, 109, 117, 121, 135, 152, 153, 154, 155, 157, 158, 160, 171, 227, 228, 239, 249, 371, 372, 373, 488, 502, 509, 510], "oper": [10, 15, 58, 59, 60, 61, 62, 63, 64, 99, 104, 106, 107, 110, 114, 137, 147, 150, 163, 164, 176, 194, 195, 196, 197, 235, 237, 242, 244, 250, 252, 255, 256, 257, 258, 367, 370, 379, 380, 381, 385, 445, 451, 476, 484, 496, 498, 500, 501, 505, 511, 521], "operand": [106, 107, 221, 223, 374, 483], "opposit": [10, 104, 116, 124, 129, 378, 439], "optim": [4, 106, 107, 166, 167], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 176, 177, 180, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 209, 211, 212, 213, 215, 216, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 334, 364, 367, 368, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 525], "ord": [209, 213, 226], "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 90, 91, 96, 98, 99, 101, 104, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 120, 122, 125, 126, 127, 130, 132, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 157, 158, 159, 162, 163, 164, 165, 166, 170, 173, 176, 180, 181, 182, 183, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 209, 213, 219, 221, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 248, 251, 252, 254, 255, 275, 320, 321, 326, 334, 345, 348, 351, 353, 356, 364, 367, 368, 369, 370, 372, 373, 376, 377, 379, 380, 381, 383, 388, 389, 439, 440, 441, 443, 445, 447, 448, 449, 451, 452, 455, 458, 459, 462, 463, 464, 465, 467, 469, 471, 472, 476, 481, 482, 483, 486, 496, 497, 498, 499, 502, 505, 508, 509, 510, 521], "ordin": [207, 218], "ordinari": [130, 175, 197], "orient": [86, 386, 480], "origin": [65, 96, 101, 124, 130, 132, 209, 213, 226, 248, 254, 264, 266, 448, 449, 453, 498], "ortho": [10, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136], "orthogon": [204, 216], "orthonorm": 216, "other": [33, 38, 49, 65, 66, 97, 101, 104, 125, 126, 127, 130, 132, 146, 154, 171, 202, 204, 212, 213, 254, 271, 272, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 308, 310, 313, 314, 315, 321, 390, 434, 449, 454, 467, 498, 505, 511, 521], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 78, 79, 81, 82, 83, 84, 85, 90, 91, 92, 97, 99, 101, 104, 106, 108, 109, 110, 111, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 170, 171, 175, 176, 180, 182, 183, 192, 193, 194, 195, 196, 207, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 250, 251, 252, 253, 255, 257, 258, 261, 262, 263, 264, 265, 266, 267, 321, 351, 367, 368, 370, 372, 373, 379, 380, 381, 382, 383, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 451, 452, 458, 459, 462, 463, 464, 465, 467, 469, 471, 472, 473, 475, 476, 477, 481, 482, 485, 496, 497, 503, 505, 508, 509, 510], "otim": [221, 483], "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 206, 208, 209, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 316, 317, 318, 319, 322, 323, 326, 327, 328, 334, 336, 339, 340, 341, 346, 352, 358, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 496, 497, 501, 502, 503, 504, 505, 507, 508, 509, 510], "outer": [6, 86, 96, 106, 107, 191], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 82, 83, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 139, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 170, 171, 173, 174, 176, 177, 178, 180, 182, 183, 190, 192, 193, 194, 195, 196, 212, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 260, 262, 264, 265, 266, 267, 321, 326, 367, 368, 370, 371, 372, 373, 379, 380, 381, 382, 383, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 446, 448, 451, 452, 456, 458, 460, 462, 463, 464, 465, 467, 469, 471, 472, 473, 475, 476, 477, 479, 481, 482, 484, 485, 488, 490, 494, 496, 497, 498, 501, 502, 503, 505, 508, 509, 510, 521, 525], "outsid": [166, 167], "over": [10, 16, 21, 56, 87, 88, 89, 100, 101, 106, 107, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 142, 154, 160, 166, 167, 175, 199, 209, 213, 221, 225, 226, 227, 239, 240, 242, 244, 246, 248, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 334, 382, 386, 390, 417, 422, 433, 434, 439, 444, 449, 475, 477, 479, 480, 483, 487, 501, 503, 505, 521], "overal": [120, 122, 126, 127, 131, 132, 134, 136], "overflow": 145, "overlin": [225, 505], "overrid": [86, 109, 158, 373, 510], "overview": 2, "overwrite_input": 247, "p": [10, 198, 207, 210, 392, 395, 400, 406, 409, 501], "pack": [96, 439, 521], "packag": [0, 3], "packbit": 6, "pad": [6, 104, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 449], "pad_valu": 375, "pad_width": 375, "padder": 375, "padding_func": 375, "page": [3, 521], "pair": [10, 107, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 199, 202], "parallel": [1, 3, 4, 9, 511], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 331, 334, 336, 351, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "parameter": [390, 412, 434], "parametr": 487, "pareto": 6, "pars": [153, 228], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 101, 130, 148, 149, 173, 178, 179, 186, 187, 202, 203, 205, 241, 245, 251, 253, 335, 349, 375, 441, 442, 468, 490, 494, 497, 498, 518], "partial": [33, 247, 467], "particular": [104, 212], "particularli": 106, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 467, 488, 490, 494, 502, 509, 510, 518], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 104, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 167, 171, 174, 190, 207, 228, 241, 249, 256, 326, 351, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 447, 488, 490, 491, 494, 495, 502, 505, 509, 510], "path": [4, 106, 107, 153, 228], "path_info": 107, "pathlib": 228, "pattern": 56, "penros": 215, "per": [106, 121, 135, 440], "percentil": [6, 247], "perf_count": 0, "perform": [16, 21, 41, 42, 71, 97, 106, 120, 122, 125, 126, 127, 131, 132, 134, 136, 142, 197, 220, 382, 477], "perhap": 447, "period": [10, 501], "permit": 153, "permut": [6, 101, 106, 254, 364, 377, 486, 521], "permute_dim": 486, "perpendicular": 86, "pg": 213, "phase": [10, 20, 501], "phase_deg": 501, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 90, 91, 119, 388, 464, 465, 481, 482, 487, 501, 525], "pickl": [153, 228], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 71, 73, 74, 88, 89, 100, 101, 114, 116, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 151, 174, 177, 242, 244, 246, 247, 250, 256, 259, 260, 262, 264, 265, 266, 267, 334, 354, 356, 364, 371, 375, 382, 385, 386, 427, 448, 449, 453, 456, 467, 474, 475, 477, 479, 485, 503, 518], "plane": 455, "platform": [88, 89, 104, 259, 260, 264, 266, 382, 477], "pleas": [0, 3, 39, 102, 106, 166, 168, 506, 518], "plot": 428, "plt": [248, 428], "plu": [229, 230, 232], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 79, 87, 104, 108, 109, 113, 117, 118, 119, 124, 125, 129, 130, 131, 132, 133, 138, 139, 145, 152, 153, 154, 156, 157, 158, 162, 171, 173, 193, 207, 210, 227, 228, 233, 234, 240, 246, 247, 256, 262, 265, 267, 368, 372, 373, 390, 419, 431, 441, 443, 444, 456, 458, 459, 475, 487, 488, 503, 509, 510, 521], "pointer": 104, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 75, 76, 79, 82, 83, 90, 91, 99, 101, 110, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 159, 163, 164, 165, 170, 173, 176, 180, 182, 183, 192, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 251, 252, 255, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 417, 441, 443, 445, 451, 452, 456, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 496, 497], "portion": [166, 167], "posinf": 256, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 68, 79, 95, 96, 101, 114, 117, 118, 120, 122, 125, 126, 127, 130, 133, 135, 138, 145, 153, 177, 180, 182, 183, 184, 185, 197, 210, 222, 254, 256, 261, 263, 266, 345, 359, 367, 377, 392, 416, 453, 454, 456, 458, 460, 471, 472, 485, 486], "possess": 202, "possibl": [10, 48, 49, 54, 55, 101, 102, 106, 107, 114, 148, 149, 162, 166, 168, 241, 321, 351, 377, 386, 439, 448, 470, 473, 478, 479, 480, 486, 506], "possibli": 44, "pow": [381, 518], "power": [6, 10, 113, 119, 145, 210, 380, 472, 502], "pre": 167, "precis": [11, 12, 56, 88, 89, 104, 106, 138, 145, 173, 207, 224, 241, 259, 260, 264, 266, 382, 441, 477, 485], "predecessor": 501, "prefer": [70, 78, 101, 326, 354, 369, 439], "prepend": [36, 97, 105, 484], "present": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 104, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 171, 174, 228, 241, 249, 261, 263, 266, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 488, 490, 494, 502, 509, 510], "preserv": [49, 53, 54, 55, 71, 101, 104, 106, 142, 143, 144, 145, 203, 204, 205, 247, 321, 439, 447, 485, 498], "press": [10, 213], "prevent": 106, "previou": [56, 375], "print": [0, 4, 42, 56, 57, 77, 98, 104, 107, 390, 409, 414], "print_device_info": 0, "printabl": 107, "printopt": 6, "prior": 97, "prob1": [233, 234], "prob12": [233, 234], "prob2": [233, 234], "probabl": [166, 234, 247, 392, 400, 409], "proce": 518, "process": 10, "processor": 106, "prod": [6, 88, 101, 222, 223, 264, 518], "produc": [10, 34, 104, 228, 386, 459, 480], "product": [6, 86, 88, 100, 101, 106, 107, 175, 190, 191, 199, 208, 212, 214, 218, 221, 222, 223, 225, 242, 255, 259, 264, 327, 374, 382, 483, 504, 505, 521], "program": [4, 146], "progress": [160, 227], "project": [4, 104, 225, 383, 505], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 67, 68, 79, 82, 83, 90, 91, 99, 112, 113, 115, 145, 147, 148, 149, 150, 160, 170, 194, 227, 229, 230, 231, 232, 233, 234, 239, 242, 245, 251, 252, 255, 368, 380, 381, 388, 389, 443, 445, 450, 451, 458, 462, 464, 465, 469, 471, 472, 476, 481, 482, 484, 496, 497, 505], "promote_typ": 6, "propag": [104, 148, 149, 244, 245, 250, 251, 259, 260, 261, 263, 264, 266], "proper": [148, 149, 202, 204], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 203, 205, 216, 227, 228, 239, 241, 249, 269, 321, 326, 330, 332, 333, 335, 337, 338, 342, 343, 349, 354, 355, 359, 364, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510, 518], "protocol": [44, 104, 151], "prototyp": 109, "provid": [0, 6, 10, 31, 32, 36, 73, 74, 80, 87, 101, 102, 106, 107, 114, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 155, 166, 167, 169, 184, 185, 211, 215, 240, 257, 258, 261, 263, 264, 266, 390, 418, 421, 444, 447, 457, 474, 479, 487, 498, 505, 507, 508, 525], "pseudo": [215, 390], "ptp": 6, "pure": [10, 124, 130, 132, 133], "purpos": [34, 207, 213], "put": [6, 10, 101, 116, 124, 130, 132, 378, 386, 480, 518], "put_along_axi": [6, 385, 480], "putmask": [6, 385], "pval": 407, "py": 4, "pypi": 4, "pyplot": [248, 428], "pytest": 4, "python": [0, 2, 3, 44, 101, 104, 150, 151, 252, 336, 445, 446, 518], "q": [204, 210, 216, 223, 247], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 120], "quantil": 6, "quaternion": 210, "question": 92, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "quick": [2, 3], "quickest": 439, "quickli": [190, 525], "quotient": [29, 51], "r": [86, 91, 216], "r2": 216, "rad": 91, "rad2deg": [6, 90, 91, 501], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 90, 91, 388, 501, 525], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 78, 79, 80, 82, 83, 87, 90, 91, 98, 99, 100, 101, 102, 108, 109, 110, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 168, 170, 171, 176, 180, 182, 183, 192, 193, 194, 195, 196, 210, 212, 213, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 250, 251, 252, 255, 257, 258, 261, 262, 263, 265, 266, 267, 321, 322, 338, 367, 368, 370, 372, 373, 379, 380, 381, 382, 383, 388, 389, 439, 440, 443, 444, 445, 447, 448, 451, 452, 458, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 481, 482, 496, 497, 503, 505, 506, 509, 510, 518], "ramp": 375, "rand": [6, 107, 390, 420, 422, 423, 425], "randint": [6, 101, 336, 390, 421], "randn": [6, 142, 143, 144, 215, 216, 219, 223, 390, 474], "random": [101, 107, 142, 143, 144, 204, 212, 215, 216, 219, 223, 336, 474, 511, 521], "random_integ": [6, 390, 418], "random_sampl": [6, 390, 417, 420, 423, 425], "randomli": 414, "randomst": 418, "ranf": 6, "rang": [0, 98, 155, 166, 167, 221, 234, 377, 384, 385, 409, 414, 440, 446, 474, 483, 486, 501, 521], "rank": [114, 116, 154, 207, 211, 224, 375, 478], "rate": [121, 135], "rather": 369, "ratio": [0, 99, 147, 207, 496, 525], "ration": 521, "ravel": [6, 101, 116, 141, 213, 334, 374, 448, 518], "ravel_multi_index": [6, 499], "raveled_indic": 440, "raw": 216, "rayleigh": 6, "rcond": [207, 215], "re": [31, 32, 57, 92, 130, 453], "read": [92, 96, 101, 104, 152, 153, 155, 156, 228, 334, 439, 448], "readonli": 104, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 68, 69, 79, 87, 101, 119, 122, 124, 129, 130, 131, 132, 133, 134, 136, 138, 146, 148, 149, 150, 170, 173, 178, 186, 187, 197, 202, 203, 204, 205, 211, 215, 216, 217, 219, 233, 234, 240, 245, 251, 252, 256, 265, 267, 392, 409, 442, 443, 444, 445, 458, 468, 469, 475, 497, 498, 503, 518, 521], "real_if_clos": [6, 20, 173, 441], "rearrang": [101, 345, 521], "reason": 132, "rebuild": 103, "recal": 104, "recent": [22, 473], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 458, 471], "recommend": [106, 369, 484], "reconstruct": [104, 219, 498], "recov": 10, "reduc": [16, 21, 31, 32, 56, 216, 219, 240, 244, 246, 247, 248, 250, 257, 258, 261, 262, 263, 264, 265, 266, 267, 382, 444, 449, 475, 477, 503], "reduce_hypot": 170, "reduct": [16, 21], "redund": 133, "referreflect": [375, 518], "reflect_typ": 375, "reflector": 216, "regardless": [104, 203, 205, 506], "regular": 228, "rel": [17, 33, 101, 177, 201, 211, 224, 359, 453, 454, 467], "relat": 104, "relev": [104, 160, 227, 239], "rem": 150, "remain": [16, 21, 56, 107, 134, 136, 166, 240, 246, 247, 254, 262, 265, 267, 444, 448, 475, 503], "remaind": [6, 147, 150, 252, 380, 381], "remov": [31, 32, 90, 96, 101, 114, 130, 201, 224, 357, 382, 388, 473, 477, 505, 521], "reorder": [106, 142, 223, 254], "rep": 484, "repeat": [6, 101, 120, 122, 126, 127, 131, 132, 134, 136, 137, 202, 203, 204, 205, 248, 378, 449, 484, 487, 498, 518], "repeatedli": 106, "repetit": [0, 446, 484], "replac": [3, 10, 44, 71, 116, 256, 259, 260, 378, 386, 395, 448, 460, 518], "replic": 484, "repo": 4, "repr": 309, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 104, 107, 125, 133, 151, 154, 160, 162, 174, 217, 227, 239, 248, 267, 375, 390, 449, 492, 498, 518], "represent": [58, 62, 64, 107, 138, 172, 174, 256, 368, 469, 518], "request": 454, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 101, 104, 106, 118, 174, 256, 321, 354, 375, 448, 449], "res_cpu": 92, "res_host": 92, "rese": 426, "reset": 518, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 92, 93, 94, 96, 99, 100, 101, 102, 103, 106, 114, 116, 123, 128, 142, 150, 168, 174, 175, 190, 191, 201, 208, 209, 213, 221, 224, 226, 241, 242, 244, 250, 255, 329, 334, 338, 354, 364, 375, 378, 414, 439, 447, 449, 453, 455, 476, 483, 485, 487, 490, 491, 494, 495, 496, 498, 500, 506, 518], "resid": [114, 118, 151], "residu": 207, "resiz": [6, 114, 518], "resolut": 138, "resolv": [87, 114, 240, 444], "resourc": 0, "respect": [15, 29, 51, 58, 60, 62, 63, 64, 99, 101, 110, 145, 147, 150, 162, 163, 164, 194, 195, 196, 199, 233, 234, 235, 237, 238, 252, 255, 359, 370, 380, 381, 445, 451, 476, 496, 501], "rest": 39, "restor": 453, "restrict": 225, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 36, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 71, 73, 74, 79, 84, 87, 88, 89, 99, 100, 104, 107, 109, 110, 115, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 145, 147, 152, 153, 154, 155, 156, 158, 160, 163, 164, 166, 167, 174, 176, 180, 182, 183, 184, 185, 193, 194, 195, 196, 197, 201, 202, 208, 209, 213, 216, 221, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 250, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 369, 370, 373, 374, 380, 381, 382, 385, 390, 392, 422, 444, 448, 450, 451, 452, 454, 456, 459, 462, 463, 470, 474, 475, 477, 479, 480, 483, 484, 487, 492, 496, 497, 498, 500, 503, 505, 508, 510, 518], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 67, 104, 521], "ret": 389, "retain": 448, "retriev": [96, 104, 201], "retstep": 227, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 339, 340, 341, 343, 344, 345, 346, 348, 351, 352, 355, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 393, 412, 414, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 518], "return_count": 498, "return_index": 498, "return_invers": 498, "reus": [151, 167], "revers": [96, 101, 137, 142, 143, 144, 201, 364, 377, 455, 486, 487, 500, 502], "rewrit": 207, "rfft": [6, 10, 121, 124, 129, 130, 131, 132, 134, 135, 136], "rfft2": [6, 131], "rfftfreq": [6, 121], "rfftn": [6, 119, 122, 132, 133, 134], "right": [10, 28, 50, 60, 63, 71, 86, 96, 98, 143, 144, 170, 194, 199, 202, 203, 204, 205, 212, 223, 241, 433, 444, 451, 459, 485, 487, 490, 494, 502], "right_shift": [6, 60, 63, 194], "rightmost": [166, 167, 223], "rint": [6, 35, 69, 139, 146, 456, 497], "rl": [214, 374], "roll": [6, 454], "rollaxi": [6, 453], "root": [6, 68, 170, 198, 443, 444, 458, 471, 472], "rot90": [6, 143, 144], "rotat": [143, 144, 455], "roughli": [104, 207], "round": [6, 23, 35, 69, 101, 124, 129, 139, 146, 147, 159, 202, 252, 445, 452, 497, 518, 521], "round_": 6, "routin": [2, 511, 518], "row": [45, 49, 72, 73, 74, 88, 89, 96, 101, 103, 117, 143, 144, 162, 169, 171, 174, 212, 219, 321, 369, 439, 440, 457, 470, 474, 488, 490, 498, 499, 506, 507], "row_stack": [6, 507], "rowvar": 85, "rsqrt": [443, 471], "rtol": [17, 177, 211, 215], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 62, 63, 64, 67, 68, 79, 80, 82, 83, 86, 89, 90, 91, 99, 112, 113, 115, 147, 148, 149, 150, 160, 170, 194, 199, 227, 229, 230, 231, 232, 233, 234, 239, 240, 242, 245, 246, 247, 251, 252, 255, 262, 265, 267, 368, 380, 381, 388, 389, 443, 444, 445, 450, 451, 458, 462, 464, 465, 469, 471, 472, 475, 476, 477, 481, 482, 487, 496, 497, 503, 505], "run": [0, 4], "runtim": 4, "runtimewarn": [261, 263], "s1": [101, 104, 191, 359], "s10": 104, "s16": 104, "s2": [101, 104, 359], "s25": 104, "s3": [101, 359], "safe": [49, 67, 73, 74, 80, 101, 106, 169, 242, 321, 457, 474, 505, 507], "safe_ev": 6, "sai": 448, "said": 223, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 79, 87, 88, 89, 96, 97, 98, 99, 100, 101, 103, 109, 110, 114, 116, 125, 126, 127, 132, 137, 139, 145, 147, 148, 149, 150, 151, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 184, 185, 186, 191, 192, 193, 194, 195, 196, 199, 201, 204, 210, 215, 216, 220, 221, 224, 233, 234, 235, 237, 238, 240, 244, 245, 246, 247, 250, 251, 252, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 351, 364, 368, 370, 373, 375, 378, 380, 381, 382, 386, 390, 412, 418, 434, 439, 441, 444, 445, 446, 448, 451, 453, 454, 457, 459, 460, 467, 473, 474, 475, 476, 477, 479, 480, 483, 485, 489, 491, 493, 495, 496, 499, 503, 504, 507, 510, 525], "same_kind": [49, 67, 73, 74, 80, 101, 106, 169, 242, 321, 457, 474, 505, 507], "sampl": [10, 121, 128, 130, 133, 135, 160, 162, 166, 227, 239, 386, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 480, 487, 490, 494, 511, 521], "sample_r": 135, "satisfi": [36, 41, 43, 45, 49, 101, 116, 206, 321, 378, 447, 460], "save": [6, 153, 247, 525], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 62, 63, 64, 67, 78, 79, 80, 86, 92, 95, 97, 99, 100, 101, 104, 106, 107, 110, 116, 121, 135, 137, 145, 147, 148, 149, 150, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 175, 177, 179, 187, 188, 191, 192, 193, 194, 195, 196, 208, 218, 221, 227, 233, 234, 235, 237, 238, 239, 241, 242, 245, 248, 251, 252, 255, 331, 336, 366, 368, 370, 375, 378, 380, 381, 385, 386, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 418, 421, 424, 426, 430, 432, 433, 434, 435, 436, 437, 438, 442, 445, 451, 459, 460, 476, 479, 483, 487, 496, 497, 502, 504, 508, 518], "scale": [10, 107, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 160, 191, 216, 227, 239, 390, 397, 399, 401, 402, 403, 404, 412, 424, 429, 436], "scientif": 10, "scipi": 111, "scope": 4, "script": 4, "sctype2char": 6, "search": [107, 511, 521], "searchsort": [6, 98, 101, 166, 467, 518], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 79, 86, 96, 99, 100, 104, 107, 110, 113, 120, 121, 122, 123, 126, 127, 130, 133, 135, 145, 147, 148, 149, 150, 159, 162, 163, 164, 166, 167, 168, 169, 170, 175, 177, 191, 192, 194, 195, 196, 199, 201, 208, 221, 224, 225, 233, 234, 235, 237, 238, 241, 242, 244, 245, 248, 250, 251, 252, 255, 370, 374, 380, 381, 445, 451, 455, 472, 476, 478, 483, 485, 496, 504, 505], "section": [4, 39, 104, 122, 127, 132, 136, 209, 226, 518], "see": [3, 35, 104, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 151, 166, 207, 209, 226, 375, 407, 456, 490, 491, 494, 495, 498, 518], "seed": [6, 101, 107, 336, 390], "seek": 153, "seldom": 145, "select": [6, 33, 80, 116, 244, 250, 467, 473, 479, 487, 511], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "self": [101, 104, 140, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 333, 390], "semant": 166, "sens": 223, "sep": [153, 156], "separ": [10, 101, 104, 106, 153, 156, 167, 256, 351, 449], "sequenc": [39, 44, 53, 54, 55, 72, 73, 74, 77, 81, 102, 103, 106, 107, 108, 109, 120, 122, 126, 127, 130, 131, 132, 134, 136, 157, 158, 160, 166, 167, 168, 169, 174, 190, 212, 221, 227, 239, 247, 254, 372, 373, 375, 378, 414, 427, 446, 447, 450, 457, 470, 474, 483, 487, 500, 506, 507, 509, 510], "sequenti": [81, 85, 111, 253, 264], "seri": [10, 130, 406], "serv": 500, "set": [10, 31, 32, 33, 36, 49, 70, 84, 92, 93, 95, 98, 101, 104, 106, 108, 157, 166, 167, 171, 174, 209, 211, 213, 214, 215, 226, 227, 244, 250, 257, 258, 266, 311, 321, 322, 333, 354, 372, 373, 374, 375, 382, 460, 462, 463, 467, 477, 490, 494, 509, 510, 518], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 104], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 206, "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 103, 104, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 142, 145, 146, 147, 148, 149, 150, 154, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 176, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 343, 351, 355, 357, 364, 366, 367, 368, 370, 371, 372, 373, 375, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 399, 402, 407, 408, 413, 417, 418, 419, 420, 421, 422, 423, 425, 430, 431, 437, 439, 440, 441, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 488, 489, 491, 493, 494, 495, 496, 497, 499, 500, 503, 505, 506, 507, 508, 509, 510, 511, 521], "share": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 488, 490, 494, 502, 509, 510], "shared_bin": 167, "shares_memori": 6, "shift": [10, 60, 63, 120, 122, 123, 127, 128, 194, 451, 453], "short": [497, 505, 518], "shortcut": 375, "shorter": [124, 130], "shorthand": [11, 12, 15, 58, 59, 60, 61, 62, 63, 64, 99, 110, 147, 163, 164, 176, 194, 195, 196, 235, 237, 242, 252, 255, 367, 370, 379, 380, 381, 445, 451, 476, 496, 508], "should": [31, 32, 36, 39, 49, 96, 98, 100, 101, 106, 107, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 150, 153, 161, 166, 190, 207, 210, 221, 242, 254, 257, 258, 261, 263, 321, 353, 375, 407, 440, 448, 449, 459, 469, 479, 483, 485, 499, 501, 505, 518], "show": [9, 38, 104, 137, 170, 238, 248, 256, 259, 260, 261, 263, 266, 428], "show_config": 6, "shown": 4, "shuffl": 6, "side": [101, 162, 204, 353, 459], "sigma": [405, 412], "sign": [6, 10, 17, 79, 104, 177, 200, 217, 252, 367, 379, 382, 445, 463, 477, 497], "signal": [10, 121, 124, 129, 130, 132, 135, 501], "signatur": [241, 242, 375, 505], "signbit": [6, 462], "signific": 106, "signum": 462, "similar": [3, 40, 41, 101, 104, 160, 199, 201, 208, 214, 224, 225, 227, 239, 241, 326, 354, 378, 390, 418, 490, 491, 494, 495], "simpl": [4, 238, 521], "simpli": [94, 101, 153, 166, 167, 193, 364], "sin": [0, 6, 26, 27, 46, 47, 82, 204, 248, 465, 481, 487], "sinc": [6, 101, 130, 202, 204, 356, 369, 500], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 464, 465, 481, 482], "sing": 213, "singl": [9, 10, 33, 66, 72, 101, 106, 107, 162, 212, 221, 244, 250, 336, 357, 382, 390, 409, 418, 419, 420, 421, 422, 423, 425, 431, 477, 483, 487, 505, 518], "singleton": [16, 21, 56, 114, 240, 246, 247, 261, 262, 263, 265, 267, 444, 473, 475, 503], "singular": [206, 207, 211, 213, 215, 219, 220], "sinh": [6, 14, 25, 27, 47, 83, 464, 482], "size": [0, 6, 23, 31, 32, 36, 39, 56, 73, 74, 81, 84, 85, 88, 89, 93, 98, 101, 102, 104, 107, 116, 119, 121, 125, 135, 153, 160, 162, 168, 169, 199, 201, 209, 213, 214, 216, 219, 221, 225, 226, 227, 239, 241, 244, 246, 250, 257, 258, 259, 260, 262, 264, 266, 336, 337, 354, 372, 378, 382, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 449, 453, 457, 470, 473, 474, 477, 483, 494, 500, 501, 505, 506, 507, 509], "skip": 96, "slice": [116, 257, 258, 261, 262, 263, 265, 267, 385, 386, 460, 480, 487, 494, 495, 518], "slogdet": [6, 200], "slower": [221, 483], "slowest": [101, 334, 439, 448], "small": [17, 115, 177, 207, 215, 231, 233, 234, 256, 494], "smaller": [97, 101, 119, 120, 122, 125, 126, 127, 129, 131, 132, 133, 134, 136, 138, 207, 252, 345, 378, 445, 501], "smallest": [138, 172, 213, 498], "smallest_norm": 138, "smat": 219, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 104, 110, 124, 129, 145, 166, 187, 221, 227, 234, 240, 246, 247, 248, 262, 265, 267, 428, 444, 475, 483, 484, 503], "softwar": 4, "solut": [207, 218, 449], "solv": [6, 207, 222, 223, 521], "some": [23, 104, 114, 116, 146, 175, 207, 375, 378, 501, 508, 518], "sometim": [165, 518], "sometru": 6, "somewhat": 210, "sophist": 210, "sort": [6, 33, 39, 101, 102, 168, 219, 247, 320, 345, 377, 459, 468, 470, 480, 486, 487, 498, 506, 511, 518, 521], "sort_complex": 6, "sorter": [101, 353, 459], "sought": 198, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 65, 66, 67, 70, 71, 72, 74, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 167, 168, 169, 171, 172, 174, 175, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 366, 369, 372, 373, 374, 375, 376, 378, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 448, 449, 450, 453, 454, 455, 459, 460, 461, 466, 467, 468, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "space": [6, 23, 121, 123, 135, 153, 160, 162, 227, 239, 487, 525], "spars": [174, 248], "speak": 213, "special": [2, 104, 111, 511, 521], "specif": [0, 4, 104, 154], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 66, 67, 73, 74, 78, 87, 88, 89, 92, 95, 96, 101, 106, 107, 108, 109, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 142, 145, 152, 153, 154, 155, 157, 158, 160, 162, 171, 181, 201, 203, 205, 213, 221, 222, 223, 224, 225, 226, 227, 228, 239, 240, 246, 247, 249, 259, 260, 262, 264, 265, 266, 267, 320, 329, 336, 371, 372, 373, 377, 378, 382, 385, 386, 390, 403, 413, 431, 439, 440, 444, 447, 449, 453, 454, 455, 456, 460, 466, 474, 475, 477, 479, 480, 483, 485, 486, 487, 488, 498, 500, 502, 503, 505, 509, 510], "spectrum": [10, 123, 124, 128, 129], "speed": 106, "speedup": 107, "spell": 369, "split": [6, 39, 73, 74, 102, 103, 168, 169, 457, 474, 500, 506, 507, 521], "spreadsheet": 146, "sqrt": [6, 10, 68, 101, 335, 349, 444, 458, 472], "squar": [6, 68, 170, 171, 197, 198, 202, 203, 204, 206, 207, 210, 217, 222, 223, 241, 265, 267, 394, 410, 443, 444, 458, 460, 471, 475, 491, 495, 502, 503], "squeez": [6, 101, 114, 518], "src": 80, "stabil": [33, 467], "stabl": [33, 467], "stack": [6, 72, 73, 74, 103, 169, 200, 201, 208, 209, 211, 215, 216, 217, 220, 224, 242, 243, 369, 457, 470, 480, 500, 507], "stai": 71, "stand": 162, "standard": [101, 138, 147, 150, 246, 252, 262, 265, 267, 336, 358, 390, 405, 412, 419, 428, 429, 430, 431, 432, 445, 475, 503, 518, 521], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 390, 419], "standard_t": 6, "start": [2, 3, 23, 43, 45, 107, 121, 125, 135, 152, 160, 227, 239, 241, 449, 454, 490, 494], "start_tim": 0, "stat_length": 375, "state": 390, "statist": [375, 511, 521], "std": [6, 101, 246, 262, 265, 267, 503, 518], "stdev": [390, 431], "step": [4, 23, 107, 160, 165, 227, 239], "sticki": 104, "still": [56, 168, 213, 506], "stop": [23, 160, 227, 239], "store": [139, 160, 184, 185, 224, 227, 234, 239, 242, 374, 505], "str": [42, 44, 73, 74, 104, 106, 107, 153, 156, 169, 228, 312, 375, 447, 457, 474, 492, 507], "str_": 104, "straightforward": 174, "strictli": 213, "stride": [48, 49, 101, 321], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 104, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 375, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 492, 494, 502, 509, 510, 518], "string_repr": 107, "stringio": 228, "strongli": [4, 484], "struct": 104, "structur": [104, 228], "student": 432, "style": [49, 101, 321, 369, 375, 439, 440, 499], "sub": [39, 73, 74, 96, 102, 104, 106, 168, 169, 223, 224, 457, 470, 474, 485, 488, 500, 506, 507], "subarrai": [104, 174, 498], "subclass": [41, 447], "subdiagon": [201, 224], "subdivid": 104, "subdtyp": 104, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 78, 79, 82, 83, 90, 91, 99, 101, 109, 110, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 158, 159, 163, 164, 165, 170, 176, 180, 182, 183, 192, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 251, 252, 255, 321, 367, 368, 370, 373, 379, 380, 381, 383, 388, 389, 443, 445, 451, 452, 458, 462, 463, 464, 465, 469, 471, 472, 476, 481, 482, 496, 497, 505, 510], "subscript": [106, 107], "subset": [3, 162, 473, 521], "subtract": [6, 375], "subtyp": 439, "succeed": 105, "success": [42, 392, 400, 409], "sugar": [94, 491, 495], "suggest": 96, "suit": 4, "suitabl": [34, 101, 336, 364, 386, 449, 459, 480], "sum": [0, 3, 4, 6, 10, 15, 56, 87, 89, 92, 95, 96, 97, 100, 101, 106, 125, 166, 170, 175, 198, 207, 208, 213, 221, 222, 224, 233, 234, 240, 242, 259, 260, 266, 328, 363, 392, 407, 409, 444, 483, 485, 487, 505, 518, 521], "sum_": [10, 213, 225, 505], "sum_along_diagon": 485, "sum_of_weight": 56, "summari": 511, "summat": [100, 106, 107, 175, 221, 223, 242, 374, 483, 505], "superdiagon": [201, 224], "suppli": [124, 129, 212, 375, 390, 419], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 78, 79, 81, 82, 83, 85, 90, 91, 99, 101, 104, 106, 108, 109, 110, 111, 112, 113, 115, 117, 118, 139, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 170, 171, 176, 180, 182, 183, 192, 193, 194, 195, 196, 199, 201, 208, 214, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 245, 246, 250, 251, 252, 253, 255, 257, 258, 261, 262, 263, 264, 265, 266, 267, 321, 354, 367, 368, 370, 372, 373, 376, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 445, 447, 451, 452, 458, 462, 463, 464, 467, 469, 471, 472, 475, 476, 477, 481, 482, 496, 497, 503, 505, 509, 510, 525], "sure": 447, "surnam": 104, "surpris": [125, 126, 127], "svd": [6, 198, 206, 211, 215, 220], "swap": [104, 120, 123, 478], "swapax": [6, 101, 254, 518], "swapped_cod": 104, "swapped_dt": 104, "sy": 104, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "sycl_context": 101, "sycl_devic": 101, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 321, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 488, 490, 494, 502, 509, 510], "symmetr": [124, 130, 132, 133, 197, 202, 203, 204, 205, 211, 215, 219, 375], "symmetri": [10, 119, 124, 129, 130, 133], "syntact": [94, 491, 495], "syntax": 518, "sys_is_l": 104, "system": [3, 4, 218], "t": [10, 73, 74, 85, 101, 104, 124, 181, 197, 202, 204, 207, 364, 369, 432, 439, 487], "t1": 525, "tabl": [2, 9, 209, 226, 511], "tack": 104, "take": [6, 72, 101, 116, 190, 241, 378, 386, 439, 448, 459, 460, 480, 498, 501, 518, 525], "take_along_axi": [6, 31, 32, 33, 70, 386, 479], "taken": [56, 96, 97, 105, 107, 124, 130, 131, 132, 133, 134, 136, 165, 166, 242, 265, 267, 460, 475, 485, 488, 490, 494, 503, 504, 505], "tall": 137, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 82, 464, 482], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 464, 465, 481, 482], "tanh": [6, 14, 25, 30, 52, 83, 465, 481], "target": [49, 67, 101, 321, 385], "target_devic": 101, "tau": 216, "tbb": 4, "tempfil": 153, "temporari": [153, 525], "temporaryfil": 153, "ten": 400, "tensor": [44, 101, 106, 107, 151, 221, 222, 223, 257, 258, 261, 263, 264, 384, 483], "tensordot": [6, 100, 106, 175, 222, 223, 242, 374], "tensorinv": [6, 223], "tensorsolv": [6, 222], "term": [10, 15, 99, 107, 119, 120, 122, 125, 126, 127, 130, 133, 255, 476, 496], "test": [0, 2, 16, 17, 21, 110, 163, 164, 178, 180, 182, 183, 184, 185, 195, 196, 264, 369, 370, 392, 518, 521], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [152, 153, 155, 156, 228], "th": [89, 92, 95, 97, 101, 105, 117, 162, 174, 247, 364, 371, 377, 460, 486, 489, 491, 493, 495], "than": [36, 60, 63, 88, 89, 101, 102, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 143, 144, 147, 154, 163, 164, 166, 167, 169, 194, 195, 196, 207, 211, 215, 216, 221, 224, 259, 260, 264, 266, 338, 345, 369, 375, 378, 382, 449, 451, 460, 462, 473, 474, 477, 483, 485, 497, 501, 518, 525], "thei": [17, 38, 104, 177, 181, 193, 204, 207, 221, 457, 459, 483, 487, 490, 494, 501, 502, 507, 518], "them": [72, 211, 215, 518], "theor": 202, "theoret": 107, "therefor": [119, 133, 154, 203, 205, 449], "theta": 487, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 71, 73, 74, 78, 84, 87, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 167, 169, 179, 181, 187, 190, 199, 201, 203, 205, 207, 208, 209, 212, 213, 214, 217, 220, 224, 225, 226, 227, 228, 231, 233, 234, 239, 240, 241, 242, 244, 247, 250, 252, 254, 256, 257, 258, 261, 263, 264, 266, 321, 326, 331, 334, 336, 345, 351, 364, 369, 375, 378, 382, 385, 386, 423, 425, 439, 444, 445, 447, 448, 449, 454, 455, 457, 467, 474, 477, 479, 480, 484, 487, 491, 495, 498, 500, 501, 502, 505, 507, 508], "thing": 479, "think": [375, 448], "third": [72, 73, 74, 86, 102, 103, 120, 169, 221, 457, 470, 474, 483, 507], "those": [10, 71, 210, 386], "though": 125, "thousand": 400, "three": [53, 54, 55, 114, 210, 221, 241, 390, 426, 483, 498], "threshold": 211, "through": [41, 104, 167, 190, 202, 204, 207, 241, 447, 518], "throw": 407, "thu": [10, 124, 130, 132, 484], "tile": [6, 446, 521], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 62, 63, 64, 79, 97, 99, 100, 110, 120, 122, 124, 126, 127, 129, 131, 132, 134, 136, 145, 147, 148, 149, 150, 159, 163, 164, 165, 170, 175, 177, 183, 191, 192, 193, 194, 195, 196, 207, 211, 215, 221, 233, 234, 235, 237, 238, 245, 251, 252, 255, 368, 370, 375, 380, 381, 392, 407, 445, 451, 455, 476, 480, 483, 484, 496, 498, 504], "time_dpnp": 0, "time_numpi": 0, "timedelta": 104, "timeit": 106, "timestep": 121, "tini": 138, "titl": 104, "tm": 150, "to_begin": 105, "to_devic": 101, "to_end": 105, "tobyt": 6, "todo": 410, "tofil": [6, 153], "togeth": [17, 73, 74, 104, 125, 177, 190, 474, 508], "tol": [211, 408, 442], "toler": [17, 37, 177, 211, 442], "tolist": 6, "too": [4, 120, 122, 126, 127, 131, 132, 134, 136, 508], "toolkit": 3, "tostr": 6, "total": [6, 84, 88, 101, 342, 449, 466, 475, 503], "toward": [35, 69, 139, 146, 147, 166, 167, 252, 368, 445, 452, 455, 456, 497], "trace": [6, 92, 95, 96, 101, 106, 518], "traceback": [22, 473], "trail": 492, "transfer": 101, "transform": [107, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 511], "transpos": [6, 34, 101, 106, 181, 197, 204, 243, 254, 269, 338, 377, 518, 521], "trapezoid": [89, 477], "trapz": 6, "treat": [17, 124, 130, 132, 153, 162, 177, 203, 205, 207, 212, 228, 247, 259, 260, 264, 266, 382, 386, 459, 480, 484, 498, 501, 518], "tri": 6, "trial": 392, "triangl": [92, 170, 241, 444, 488, 489, 490, 491, 493, 494, 495], "triangular": [6, 197, 203, 205, 216, 241, 490, 491, 494, 495], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 82, 83, 464, 465, 481, 482, 521], "tril": [6, 92, 241, 488, 490, 491, 494], "tril_indic": [6, 241, 491, 494], "tril_indices_from": [6, 495], "trili": 491, "trili1": 491, "trim": [120, 122, 126, 127, 131, 132, 134, 136, 492], "trim_zero": 6, "triu": [6, 92, 241, 488, 490, 494, 495], "triu_indic": [6, 241, 490, 495], "triu_indices_from": [6, 491], "triui": 495, "triuim1": 495, "trivial": [202, 480], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 75, 76, 78, 79, 80, 82, 83, 84, 85, 89, 90, 91, 98, 99, 101, 104, 106, 107, 110, 112, 113, 114, 115, 116, 118, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 159, 160, 163, 164, 165, 166, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 273, 316, 317, 321, 326, 339, 340, 341, 346, 358, 360, 365, 367, 368, 369, 370, 378, 379, 380, 381, 382, 383, 386, 388, 389, 395, 443, 444, 445, 447, 448, 451, 452, 458, 460, 462, 463, 464, 465, 467, 469, 471, 472, 475, 476, 477, 480, 481, 482, 483, 487, 496, 497, 498, 500, 502, 503, 505, 508], "true_divid": [6, 99], "trunc": [6, 35, 69, 139, 146, 452, 456], "truncat": [35, 69, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 146, 428, 452, 456, 497], "trust": [257, 258], "truth": [58, 59, 61, 62, 64, 110, 163, 164, 176, 195, 196, 235, 236, 237, 238, 370, 518, 521], "try": [4, 42], "tukei": 10, "tup": [72, 103, 169, 457, 507], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 66, 78, 84, 87, 92, 93, 94, 95, 101, 104, 107, 114, 123, 128, 142, 151, 154, 157, 158, 160, 162, 166, 167, 169, 174, 179, 187, 190, 191, 213, 216, 223, 226, 227, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 261, 262, 263, 264, 265, 266, 267, 336, 354, 364, 369, 371, 375, 377, 382, 440, 444, 446, 448, 449, 453, 457, 461, 473, 474, 475, 477, 484, 486, 490, 491, 494, 495, 499, 500, 502, 503, 505, 507, 518], "turn": 72, "twister": 390, "two": [10, 17, 37, 53, 54, 58, 59, 61, 62, 64, 77, 81, 86, 95, 96, 97, 100, 101, 104, 106, 107, 114, 119, 120, 122, 125, 126, 127, 130, 131, 132, 134, 136, 148, 149, 162, 175, 176, 177, 191, 193, 201, 203, 207, 209, 212, 214, 218, 220, 221, 224, 235, 237, 238, 242, 243, 244, 245, 247, 250, 251, 254, 261, 263, 338, 345, 361, 374, 375, 390, 419, 439, 452, 455, 456, 460, 478, 483, 485, 490, 491, 494, 495, 504], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 330, 334, 336, 343, 351, 355, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 521], "type_nam": 0, "typeerror": [56, 80, 101, 151, 193, 354], "typenam": 6, "typestr": 104, "typic": [17, 124, 177, 459, 518], "u": [104, 197, 203, 205, 219, 241, 264, 266, 498], "u1": [104, 152, 153], "u16": 104, "u4": 67, "u8": 104, "ufunc": [2, 511, 518], "uint64": 104, "uint8": [104, 152, 153], "uk": 10, "un": 104, "unalt": 375, "unari": 518, "unchang": 136, "undefin": [20, 101, 247, 345, 375], "under": [209, 226], "underli": [58, 62, 64, 439, 448], "undo": [10, 127], "undocu": 104, "unexpect": [264, 266], "unicod": 104, "uniform": [6, 104, 162, 166, 167, 239, 390, 417, 420, 422, 423, 425], "uniformli": [239, 390, 434], "uniniti": [36, 108, 109, 157, 372, 509], "union1d": 6, "uniqu": [6, 56, 57, 87, 98, 104, 240, 246, 254, 262, 265, 267, 375, 444, 446, 475, 503], "unique_count": 498, "unique_indic": 498, "unique_invers": 498, "unit": [101, 121, 135, 190, 202, 210, 217, 359], "unitari": [10, 162, 216, 219], "uniti": 166, "univ": 10, "univers": [2, 213, 511, 518], "unless": [16, 21, 49, 88, 89, 101, 106, 166, 202, 211, 213, 239, 259, 260, 264, 266, 321, 382, 477, 498, 505], "unlik": [33, 101, 135, 351, 354, 467], "unmodifi": 167, "unpackbit": 6, "unravel": 499, "unravel_index": [6, 31, 32, 440], "unraveled_coord": 499, "unsaf": [49, 67, 73, 74, 80, 101, 106, 169, 242, 321, 457, 474, 505, 507], "unscal": 10, "unsign": [104, 382, 477], "unspecifi": 448, "unstack": [169, 457, 474, 507], "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 79, 82, 83, 90, 91, 99, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 151, 159, 165, 170, 176, 192, 193, 194, 230, 231, 232, 233, 234, 245, 251, 252, 253, 255, 367, 368, 379, 380, 381, 383, 388, 389, 443, 445, 451, 452, 458, 462, 463, 464, 465, 469, 476, 481, 482, 496, 497], "until": [107, 453, 454], "unwrap": [6, 90, 388], "up": [4, 10, 104, 106, 144, 480, 491, 498], "upcast": 36, "updat": 4, "uplo": [203, 205], "upon": [101, 359], "upper": [92, 117, 166, 167, 197, 203, 205, 216, 241, 488, 490, 491, 493, 494, 495], "url": 4, "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 67, 71, 73, 74, 78, 86, 88, 89, 92, 93, 95, 96, 99, 101, 104, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 146, 147, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 171, 174, 175, 176, 181, 190, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 207, 211, 212, 213, 215, 221, 224, 227, 228, 234, 235, 237, 239, 241, 242, 244, 246, 247, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 275, 321, 326, 334, 354, 367, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 386, 390, 393, 395, 396, 406, 411, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 431, 434, 439, 442, 445, 446, 447, 448, 449, 451, 453, 459, 460, 462, 468, 475, 476, 477, 479, 480, 483, 484, 485, 487, 488, 490, 491, 494, 495, 496, 498, 499, 502, 503, 505, 508, 509, 510, 518, 525], "usabl": 145, "usag": [3, 4, 121, 135], "use_getitem": 104, "use_setitem": 104, "user": [104, 256, 375], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 473, 488, 490, 494, 502, 509, 510], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 331, 366, 367, 368, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 78, 92, 93, 95, 101, 108, 109, 117, 121, 135, 152, 153, 154, 155, 156, 157, 158, 160, 171, 174, 227, 228, 239, 241, 249, 326, 371, 372, 373, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 488, 490, 494, 502, 509, 510], "usual": [93, 101, 104, 208, 242, 354], "util": 511, "v": [77, 92, 95, 101, 104, 202, 203, 225, 247, 353, 385, 459, 505], "v0": 6, "v1": 6, "v10": 104, "v9": 6, "v_sort": 247, "val": [101, 137, 140, 311, 347, 378], "valid": [81, 114, 241, 478, 490, 491, 494, 495], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 97, 98, 99, 101, 104, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 124, 125, 130, 132, 133, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 179, 180, 182, 183, 186, 187, 190, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 210, 211, 213, 215, 217, 218, 219, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 271, 272, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 308, 310, 311, 313, 314, 315, 318, 319, 321, 323, 326, 331, 333, 345, 347, 354, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 400, 417, 418, 434, 441, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 458, 459, 460, 462, 463, 464, 467, 469, 471, 472, 475, 476, 477, 479, 480, 481, 482, 485, 487, 490, 494, 496, 497, 498, 501, 503, 505, 508, 509, 510, 518, 521], "value2": 104, "valueerror": [22, 36, 41, 42, 101, 151, 213, 257, 258, 338, 448, 470, 473], "van": 213, "vander": 6, "vandermond": 502, "var": [6, 101, 246, 262, 265, 267, 475, 518], "vararg": 162, "vari": [10, 16, 20, 21, 96, 107, 120, 122, 124, 125, 126, 127, 129, 130, 133, 136, 154, 174, 181, 198, 201, 202, 203, 207, 209, 213, 256, 262, 265, 267, 439, 442], "variabl": [85, 207, 218], "varianc": [101, 246, 262, 265, 267, 365, 475, 503, 521], "variou": [213, 525], "vdot": [6, 100, 225, 242, 505], "vecdot": 504, "vector": [86, 106, 154, 174, 175, 190, 198, 199, 208, 211, 212, 213, 214, 219, 220, 225, 226, 242, 247, 248, 374, 375, 504, 505, 521], "vector_norm": 213, "vendor": 4, "veri": [3, 10, 17, 177, 214, 248, 256, 374], "verif": 0, "verifi": 197, "version": [4, 84, 86, 96, 101, 104, 141, 242, 247, 333, 369, 374, 440, 485, 499, 504, 505], "vertic": [72, 73, 74, 96, 103, 137, 142, 143, 169, 201, 455, 457, 470, 474, 506, 507], "vetterlin": 10, "vh": 219, "via": 130, "view": [6, 39, 53, 54, 55, 65, 92, 96, 101, 102, 114, 120, 122, 126, 127, 131, 132, 134, 136, 142, 143, 144, 168, 248, 254, 269, 338, 351, 364, 377, 386, 439, 440, 448, 455, 470, 473, 478, 486, 499, 506], "violat": 80, "void": 104, "void640": 104, "von": 435, "vonmis": 6, "vsplit": [6, 73, 74, 470], "vstack": [6, 72, 73, 74, 103, 169, 207, 457, 470, 474], "w": [10, 56, 202, 203, 204, 205, 210, 447], "wa": [10, 87, 104, 212, 240, 261, 263, 265, 267, 390, 431, 444, 448, 475, 503], "wai": [3, 4, 10, 101, 107, 119, 125, 126, 127, 132, 153, 221, 345, 483], "wald": 6, "walk": 104, "want": [4, 181, 480], "warn": [104, 257, 258, 408, 449], "we": [78, 93, 96, 107, 137, 207, 241, 386, 480, 487], "weibul": [6, 438], "weight": [56, 57, 85, 166, 167, 246, 262, 477], "well": [104, 106, 153, 166, 167, 382, 392, 409, 428], "were": [73, 74, 154, 390, 419, 474, 501], "what": [10, 49, 67, 73, 74, 80, 101, 104, 106, 110, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 169, 178, 242, 321, 392, 409, 457, 474, 505, 507, 518], "when": [10, 22, 23, 33, 36, 37, 40, 41, 43, 45, 48, 49, 56, 78, 80, 98, 101, 104, 106, 119, 130, 132, 133, 148, 149, 160, 165, 202, 208, 213, 216, 220, 221, 227, 234, 239, 241, 242, 247, 252, 259, 260, 261, 263, 264, 266, 321, 439, 445, 449, 452, 454, 456, 460, 467, 479, 483, 487, 498, 505, 508, 525], "whenev": [114, 377, 478, 486], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 75, 76, 78, 79, 80, 82, 83, 86, 87, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 131, 132, 135, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 192, 193, 194, 195, 196, 197, 201, 207, 211, 216, 219, 220, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 255, 261, 262, 263, 264, 265, 266, 267, 316, 317, 321, 326, 339, 340, 341, 346, 353, 358, 360, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388, 389, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 431, 434, 439, 443, 444, 445, 449, 451, 452, 454, 458, 459, 460, 462, 463, 464, 465, 469, 470, 471, 472, 475, 476, 477, 481, 482, 485, 486, 488, 490, 494, 496, 497, 501, 502, 503, 505, 506, 509, 510], "wherev": 80, "whether": [16, 17, 21, 37, 87, 98, 104, 151, 177, 178, 181, 197, 216, 227, 256, 264, 266, 440, 463, 498, 499], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 65, 73, 74, 78, 80, 84, 87, 88, 89, 92, 93, 95, 96, 97, 98, 100, 101, 104, 106, 107, 108, 109, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 148, 149, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 167, 169, 171, 174, 180, 182, 183, 184, 185, 197, 199, 201, 202, 209, 211, 213, 220, 223, 224, 225, 226, 228, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 321, 326, 336, 369, 371, 372, 373, 377, 382, 385, 390, 412, 417, 418, 419, 420, 421, 422, 423, 425, 431, 434, 440, 444, 446, 449, 453, 460, 466, 467, 470, 473, 474, 475, 477, 479, 485, 486, 487, 488, 489, 490, 493, 494, 497, 500, 501, 502, 503, 505, 508, 509, 510, 518, 525], "whichev": 175, "while": [10, 134, 136, 166, 167, 246, 262, 265, 267, 369, 378, 382, 453, 475, 477, 488, 503], "whitespac": [153, 156], "who": 6, "whole": [120, 122, 126, 127, 131, 132, 134, 136, 490, 494], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 96, 104, 116, 117, 137, 198, 201, 203, 204, 205, 209, 220, 222, 224, 241, 243, 254, 453, 491, 495, 499], "why": 130, "wide": 137, "width": [104, 166, 167, 375], "wild": [392, 409], "window": [4, 121, 135], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 72, 73, 74, 75, 76, 79, 82, 83, 87, 99, 101, 103, 110, 112, 113, 115, 118, 139, 145, 146, 147, 148, 149, 150, 163, 164, 165, 168, 169, 170, 173, 176, 177, 180, 182, 183, 184, 185, 193, 194, 195, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 250, 251, 252, 253, 255, 261, 263, 264, 325, 367, 368, 370, 379, 380, 381, 383, 441, 443, 445, 451, 452, 456, 457, 458, 462, 463, 464, 465, 470, 471, 472, 474, 476, 481, 482, 496, 497, 506, 507, 511, 518, 521, 525], "within": [17, 23, 37, 49, 101, 106, 124, 125, 126, 127, 129, 130, 132, 166, 167, 177, 321, 385, 390, 434], "without": [96, 101, 108, 137, 364, 439, 448, 449, 518], "won": 104, "word": [125, 126, 127, 130, 132, 146, 204, 390, 434], "work": [4, 35, 48, 101, 336, 480, 518], "world": [104, 392, 409], "would": [33, 73, 74, 101, 104, 154, 174, 212, 241, 242, 345, 377, 390, 440, 467, 470, 474, 480, 486, 501, 505], "wrap": [90, 101, 137, 347, 362, 375, 385, 386, 388, 440, 459, 479, 480, 501], "wrapper": 101, "writabl": 447, "write": [92, 96, 101, 137, 153, 334, 448], "writeabl": 447, "written": [4, 84, 87, 137, 153, 181, 240, 444, 508], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 65, 66, 68, 69, 75, 76, 78, 79, 81, 82, 83, 85, 86, 87, 90, 91, 92, 95, 97, 98, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 126, 127, 128, 134, 135, 136, 139, 140, 141, 146, 152, 153, 154, 155, 157, 158, 159, 160, 162, 168, 171, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 193, 198, 199, 201, 204, 207, 209, 213, 216, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 248, 249, 253, 254, 256, 321, 326, 335, 336, 343, 349, 354, 355, 367, 369, 371, 372, 373, 379, 382, 383, 384, 388, 389, 408, 414, 439, 441, 443, 444, 446, 447, 452, 453, 454, 456, 458, 460, 462, 463, 464, 465, 469, 470, 471, 472, 473, 478, 479, 481, 482, 487, 488, 497, 500, 502, 506, 508, 509, 510], "x0": [43, 45, 78, 95, 373, 502, 510], "x00": 153, "x01": [152, 153], "x02": [152, 153], "x03": [152, 153], "x04": [152, 153], "x05": 152, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 62, 63, 64, 70, 79, 81, 99, 101, 110, 145, 147, 148, 149, 150, 159, 163, 164, 165, 170, 190, 192, 193, 194, 195, 196, 199, 208, 214, 225, 233, 234, 235, 236, 237, 238, 242, 245, 248, 251, 252, 253, 255, 321, 367, 368, 370, 376, 379, 380, 381, 387, 427, 445, 451, 453, 476, 496, 505], "x1_i": [15, 29, 51, 58, 60, 62, 63, 64, 79, 99, 110, 145, 147, 150, 163, 164, 170, 194, 195, 196, 233, 234, 235, 237, 238, 252, 255, 370, 380, 381, 445, 451, 476, 496], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 62, 63, 64, 79, 81, 99, 110, 145, 147, 148, 149, 150, 159, 163, 164, 165, 170, 190, 192, 193, 194, 195, 196, 199, 208, 214, 225, 233, 234, 235, 236, 237, 238, 242, 245, 248, 251, 252, 255, 367, 368, 370, 379, 380, 381, 445, 451, 453, 471, 476, 496, 505], "x2_i": [15, 29, 51, 58, 60, 62, 63, 64, 79, 99, 110, 145, 147, 150, 163, 164, 170, 194, 195, 196, 233, 234, 235, 237, 238, 252, 255, 370, 380, 381, 445, 451, 476, 496], "x3": [16, 21, 145], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 61, 68, 69, 75, 76, 82, 83, 112, 113, 115, 146, 173, 176, 229, 230, 231, 232, 236, 367, 379, 383, 441, 443, 452, 456, 458, 462, 463, 464, 465, 471, 472, 481, 482, 497], "xi": [232, 248], "xn": [190, 248], "xor": [58, 59, 61, 62, 64, 176, 235, 236, 237, 238], "xv": 248, "xx": 248, "xy": 248, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 65, 78, 85, 86, 95, 101, 104, 105, 108, 109, 114, 117, 121, 135, 152, 153, 154, 155, 157, 158, 160, 162, 171, 184, 185, 198, 199, 207, 227, 228, 239, 248, 249, 253, 256, 326, 343, 351, 354, 371, 372, 373, 447, 487, 488, 502, 508, 509, 510], "y1": 193, "y2": 193, "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 264, 266, 369, 375, 390, 508, 518], "you": [4, 96, 124, 129, 130, 181, 241, 247, 448, 479, 480, 518, 525], "your": [4, 96, 525], "yv": 248, "yy": 248, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 78, 86, 95, 108, 109, 117, 121, 135, 152, 153, 154, 155, 157, 158, 160, 171, 227, 228, 239, 248, 249, 371, 372, 373, 400, 488, 502, 509, 510], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 60, 69, 84, 86, 87, 93, 97, 101, 108, 109, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 146, 153, 157, 158, 171, 173, 178, 179, 184, 185, 186, 187, 194, 202, 203, 205, 207, 210, 211, 215, 219, 221, 240, 241, 244, 246, 250, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 343, 344, 354, 355, 359, 366, 369, 372, 373, 375, 382, 390, 392, 420, 422, 423, 425, 441, 442, 444, 449, 452, 456, 462, 467, 475, 477, 483, 488, 489, 492, 493, 497, 503, 508, 510], "zeros_lik": [6, 36, 91, 109, 158, 247, 373, 389, 509], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 270, "__add__": 271, "__and__": 272, "__bool__": 273, "__complex__": 274, "__copy__": 275, "__eq__": 276, "__float__": 277, "__floordiv__": 278, "__ge__": 279, "__getitem__": 280, "__gt__": 281, "__iadd__": 282, "__iand__": 283, "__ifloordiv__": 284, "__ilshift__": 285, "__imod__": 286, "__imul__": 287, "__int__": 288, "__invert__": 289, "__ior__": 290, "__ipow__": 291, "__irshift__": 292, "__isub__": 293, "__itruediv__": 294, "__ixor__": 295, "__le__": 296, "__len__": 297, "__lshift__": 298, "__lt__": 299, "__matmul__": 300, "__mod__": 301, "__mul__": 302, "__ne__": 303, "__neg__": 304, "__new__": 305, "__or__": 306, "__pos__": 307, "__pow__": 308, "__repr__": 309, "__rshift__": 310, "__setitem__": 311, "__str__": 312, "__sub__": 313, "__truediv__": 314, "__xor__": 315, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 515, "add": 15, "algebra": [6, 513], "all": [16, 316], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 317], "api": [1, 511], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 318], "argmin": [32, 319], "argsort": [33, 320], "argwher": 34, "arithmet": [516, 518, 519], "around": 35, "arrai": [6, 7, 9, 36, 512, 514, 515, 518], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 321], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 518, "avail": [9, 525], "averag": [56, 524], "backend": 1, "background": 10, "basic": [515, 519], "beta": 391, "bincount": 57, "binomi": 392, "bit": [5, 525], "bitwise_and": 58, "bitwise_invert": 59, "bitwise_left_shift": 60, "bitwise_not": 61, "bitwise_or": 62, "bitwise_right_shift": 63, "bitwise_xor": 64, "broadcast_arrai": 65, "broadcast_to": 66, "build": [4, 7], "byte": 393, "c": 1, "calcul": 518, "can_cast": 67, "cbrt": 68, "ceil": 69, "chang": 515, "channel": 4, "chisquar": 394, "choic": 395, "choleski": 197, "choos": [70, 322], "class": 7, "clip": [71, 323], "co": 82, "column_stack": 72, "comparison": [6, 514, 518, 525], "complex": 516, "concat": 73, "concaten": 74, "cond": 198, "conda": 4, "conj": [75, 324], "conjug": [76, 325], "construct": 518, "control": 0, "convers": 518, "convolv": 77, "copi": [78, 326], "copysign": 79, "copyto": 80, "correl": [81, 524], "cosh": 83, "count": 522, "count_nonzero": 84, "cov": 85, "creat": 8, "creation": 7, "cross": [86, 199], "cumlogsumexp": 87, "cumprod": [88, 327], "cumsum": [89, 328], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 512, 518, 520], "decomposit": 513, "deg2rad": 90, "degre": 91, "det": 200, "detail": 10, "develop": 2, "devic": 4, "diag": 92, "diag_indic": 93, "diag_indices_from": 94, "diagflat": 95, "diagon": [96, 201, 329], "diff": 97, "differ": 516, "digit": 98, "dimens": [10, 515], "dimension": [6, 518], "dirichlet": 396, "discret": 6, "distribut": 520, "divid": 99, "dot": 100, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 520], "dpnp_arrai": 101, "driver": 4, "dsplit": 102, "dstack": 103, "dtype": [104, 330], "ediff1d": 105, "eig": 202, "eigenvalu": 513, "eigh": 203, "eigval": 204, "eigvalsh": 205, "einsum": 106, "einsum_path": 107, "element": [5, 515], "empti": 108, "empty_lik": 109, "equal": 110, "equat": 513, "erf": 111, "error": 523, "exampl": [0, 4], "except": 513, "exist": 7, "exp": 112, "exp2": 113, "expand_dim": 114, "expm1": 115, "expon": 516, "exponenti": 397, "extens": 2, "extract": 116, "extrema": 516, "ey": 117, "f": 398, "fab": 118, "fft": [10, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "fft2": 120, "fftfreq": 121, "fftn": 122, "fftshift": 123, "fill": 331, "fill_diagon": 137, "find": 516, "finfo": 138, "fix": 139, "flag": 332, "flat": 333, "flatit": 140, "flatnonzero": 141, "flatten": 334, "flip": 142, "fliplr": 143, "flipud": 144, "float": [516, 525], "float_pow": 145, "floor": 146, "floor_divid": 147, "fmax": 148, "fmin": 149, "fmod": 150, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 151, "frombuff": 152, "fromfil": 153, "fromfunct": 154, "fromit": 155, "fromstr": 156, "full": 157, "full_lik": 158, "function": [10, 514, 516, 523, 524, 525], "gamma": 399, "gcd": 159, "gener": [512, 520], "geometr": 400, "geomspac": 160, "get_includ": 161, "gradient": 162, "greater": 163, "greater_equ": 164, "guid": 4, "gumbel": 401, "handl": 516, "heavisid": 165, "helper": 10, "hermitian": 10, "hfft": 124, "higher": 10, "histogram": [166, 524], "histogram_bin_edg": 167, "hsplit": 168, "hstack": 169, "hyperbol": 516, "hypergeometr": 402, "hypot": 170, "ident": 171, "ifft": 125, "ifft2": 126, "ifftn": 127, "ifftshift": 128, "ihfft": 129, "iinfo": 172, "imag": [173, 335], "implement": 10, "index": [512, 518], "indic": 174, "infin": 514, "inform": [2, 8, 10], "inner": 175, "insert": 512, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 206, "invert": 176, "irfft": 130, "irfft2": 131, "irfftn": 132, "isclos": 177, "iscomplex": 178, "iscomplexobj": 179, "isfinit": 180, "isfortran": 181, "isinf": 182, "isnan": 183, "isneginf": 184, "isposinf": 185, "isreal": 186, "isrealobj": 187, "isscalar": 188, "issubdtyp": 189, "item": [336, 518], "items": 337, "iter": 512, "ix_": 190, "join": 515, "kind": 515, "kron": 191, "laplac": 403, "layout": 518, "lcm": 192, "ldexp": 193, "left_shift": 194, "less": 195, "less_equ": 196, "level": 6, "librari": 0, "like": [512, 515], "linalg": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "linear": [6, 513], "linspac": 227, "loadtxt": 228, "log": 229, "log10": 230, "log1p": 231, "log2": 232, "logaddexp": 233, "logaddexp2": 234, "logarithm": 516, "logic": 514, "logical_and": 235, "logical_not": 236, "logical_or": 237, "logical_xor": 238, "logist": 404, "lognorm": 405, "logseri": 406, "logspac": 239, "logsumexp": 240, "lstsq": 207, "manipul": [515, 518], "mask_indic": 241, "math": 525, "mathemat": 516, "matmul": [208, 242], "matric": 7, "matrix": [7, 513, 518], "matrix_norm": 209, "matrix_pow": 210, "matrix_rank": 211, "matrix_transpos": 243, "max": [244, 339], "maximum": 245, "mean": [246, 340], "median": 247, "memori": 518, "meshgrid": 248, "method": 518, "mgrid": 249, "min": [250, 341], "minimum": 251, "miscellan": [8, 516, 517], "mod": 252, "modf": 253, "modul": [6, 519], "moveaxi": 254, "mt": 338, "multi": [6, 518], "multi_dot": 212, "multinomi": 407, "multipl": 518, "multipli": 255, "multivariate_norm": 408, "nan": 514, "nan_to_num": 256, "nanargmax": 257, "nanargmin": 258, "nancumprod": 259, "nancumsum": 260, "nanmax": 261, "nanmean": 262, "nanmin": 263, "nanprod": 264, "nanstd": 265, "nansum": 266, "nanvar": 267, "nbyte": 342, "ndarrai": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 518], "ndim": [343, 366], "neg": 367, "negative_binomi": 409, "nextaft": 368, "noncentral_chisquar": 410, "noncentral_f": 411, "nonzero": [344, 369], "norm": [213, 513], "normal": [10, 412], "not_equ": 370, "number": [513, 515, 516], "numer": 7, "numpi": [2, 6], "ogrid": 371, "ones": 372, "ones_lik": 373, "oper": [5, 512, 513, 514, 515, 516, 518, 525], "order": 524, "other": [513, 516, 518], "outer": [214, 374], "output": 5, "over": 512, "overview": 3, "pack": 5, "packag": [4, 519], "pad": 375, "parallel": [0, 2], "pareto": 413, "partit": [345, 376], "permut": [414, 520], "permute_dim": 377, "pinv": 215, "place": 378, "point": 516, "poisson": 415, "poly1d": 519, "polynomi": 519, "polyutil": 519, "posit": 379, "pow": 380, "power": [381, 416], "prod": [346, 382], "product": [513, 516], "proj": 383, "ptp": 384, "put": [347, 385], "put_along_axi": 386, "putmask": 387, "python": 4, "qr": 216, "quick": 4, "r": 4, "rad2deg": 388, "radian": 389, "rand": 417, "randint": 418, "randn": 419, "random": [6, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 520], "random_integ": 421, "random_sampl": 422, "randomst": 390, "ranf": 423, "rang": 7, "ration": 516, "ravel": [348, 439], "ravel_multi_index": 440, "rayleigh": 424, "real": [10, 349, 441], "real_if_clos": 442, "rearrang": 515, "reciproc": 443, "reduce_hypot": 444, "refer": [1, 511], "remaind": 445, "remov": 515, "repeat": [350, 446], "requir": 447, "reshap": [351, 448], "resiz": 449, "result_typ": 450, "rfft": 133, "rfft2": 134, "rfftfreq": 135, "rfftn": 136, "right_shift": 451, "rint": 452, "roll": 453, "rollaxi": 454, "rot90": 455, "round": [352, 456, 516], "routin": [7, 8, 10, 512, 515, 516, 517, 521], "row_stack": 457, "rsqrt": 458, "sampl": [6, 425, 520], "scikit": 4, "search": 522, "searchsort": [353, 459], "seed": 426, "select": [460, 518], "shape": [7, 354, 461, 515, 518], "shuffl": 427, "sign": 462, "signbit": 463, "simpl": 520, "sin": 464, "sinh": 465, "size": [355, 466], "slogdet": 217, "solv": [218, 513], "sort": [356, 467, 522], "sort_complex": 468, "space": 469, "special": [516, 518, 523], "split": [470, 515], "sqrt": 471, "squar": 472, "squeez": [357, 473], "stack": 474, "standard": 10, "standard_cauchi": 428, "standard_exponenti": 429, "standard_gamma": 430, "standard_norm": 431, "standard_t": 432, "start": 4, "statist": 524, "std": [358, 475], "stride": 359, "subtract": 476, "sum": [360, 477, 516], "summari": 6, "svd": 219, "svdval": 220, "swapax": [361, 478], "sycl": 4, "t": 269, "tabl": 6, "take": [362, 479], "take_along_axi": 480, "tan": 481, "tanh": 482, "target": 4, "tensordot": [221, 483], "tensorinv": 222, "tensorsolv": 223, "test": [4, 8, 514], "tile": [484, 515], "trace": [224, 363, 485], "transform": [6, 10], "transpos": [364, 486, 515], "trapezoid": 487, "tri": 488, "triangular": 433, "trigonometr": [516, 525], "tril": 489, "tril_indic": 490, "tril_indices_from": 491, "trim_zero": 492, "triu": 493, "triu_indic": 494, "triu_indices_from": 495, "true_divid": 496, "trunc": 497, "truth": 514, "twiddl": 525, "type": [8, 9, 514, 518], "ufunc": 525, "uniform": 434, "uniqu": 498, "univers": 525, "unravel_index": 499, "unstack": 500, "unwrap": 501, "util": 517, "valu": [7, 514], "vander": 502, "var": [365, 503], "varianc": 524, "vdot": 504, "vecdot": [225, 505], "vector": 513, "vector_norm": 226, "vonmis": 435, "vsplit": 506, "vstack": 507, "wald": 436, "weibul": 437, "where": 508, "wise": 5, "zero": 509, "zeros_lik": 510, "zipf": 438}})