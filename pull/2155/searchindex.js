Search.setIndex({"alltitles": {"API Reference": [[530, null]], "Adding and removing elements": [[534, "adding-and-removing-elements"]], "Arithmetic": [[538, "arithmetic"]], "Arithmetic operations": [[535, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[537, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[534, null]], "Array attributes": [[537, "array-attributes"]], "Array conversion": [[537, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[537, "array-methods"]], "Array type testing": [[533, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[544, "available-ufuncs"]], "Averages and variances": [[543, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[534, "basic-operations"]], "Basics": [[538, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[544, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[537, "calculation"]], "Changing array shape": [[534, "changing-array-shape"]], "Changing kind of array": [[534, "changing-kind-of-array"]], "Changing number of dimensions": [[534, "changing-number-of-dimensions"]], "Comparison": [[533, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[544, "comparison-functions"]], "Constructing arrays": [[537, "constructing-arrays"]], "Correlations": [[543, "correlations"]], "Counting": [[541, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[537, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[532, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[539, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[542, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[532, "exceptions"]], "Exponents and logarithms": [[535, "exponents-and-logarithms"]], "Extrema finding": [[535, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[544, "floating-functions"]], "Floating point routines": [[535, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[531, "generating-index-arrays"]], "Handling complex numbers": [[535, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[543, "histograms"]], "Hyperbolic functions": [[535, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[537, "indexing-arrays"]], "Indexing routines": [[531, null]], "Indexing-like operations": [[531, "indexing-like-operations"]], "Infinities and NaNs": [[533, "infinities-and-nans"]], "Inserting data into arrays": [[531, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[537, "item-selection-and-manipulation"]], "Iterating over arrays": [[531, "iterating-over-arrays"]], "Joining arrays": [[534, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [532, null]], "Logic Functions": [[533, null]], "Logic operations": [[533, "logic-operations"]], "Math operations": [[544, "math-operations"]], "Mathematical functions": [[535, null]], "Matrix and vector products": [[532, "matrix-and-vector-products"]], "Matrix eigenvalues": [[532, "matrix-eigenvalues"]], "Memory layout": [[537, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [535, "miscellaneous"]], "Miscellaneous routines": [[536, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[537, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[532, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[543, "order-statistics"]], "Other attributes": [[537, "other-attributes"]], "Other matrix operations": [[532, "other-matrix-operations"]], "Other special functions": [[535, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[539, "permutations"]], "Poly1d": [[538, "poly1d"]], "Polynomial Module": [[538, "polynomial-module"]], "Polynomial Package": [[538, "polynomial-package"]], "Polynomials": [[538, null]], "Polyutils": [[538, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[539, null]], "Random generator": [[539, "random-generator"]], "Rational routines": [[535, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[534, "rearranging-elements"]], "Rounding": [[535, "rounding"]], "Routines": [[540, null]], "Searching": [[541, "searching"]], "Shape manipulation": [[537, "shape-manipulation"]], "Simple random data": [[539, "simple-random-data"]], "Solving linear equations": [[532, "solving-linear-equations"]], "Sorting": [[541, "sorting"]], "Sorting, Searching, and Counting": [[541, null]], "Special Functions": [[542, null]], "Special methods": [[537, "special-methods"]], "Splitting arrays": [[534, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[543, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[535, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[534, "tiling-arrays"]], "Transpose-like operations": [[534, "transpose-like-operations"]], "Trigonometric functions": [[535, "trigonometric-functions"], [544, "trigonometric-functions"]], "Truth value testing": [[533, "truth-value-testing"]], "Universal Functions (ufunc)": [[544, null]], "Utility": [[536, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_invert": [[59, null]], "dpnp.bitwise_left_shift": [[60, null]], "dpnp.bitwise_not": [[61, null]], "dpnp.bitwise_or": [[62, null]], "dpnp.bitwise_right_shift": [[63, null]], "dpnp.bitwise_xor": [[64, null]], "dpnp.broadcast_arrays": [[65, null]], "dpnp.broadcast_shapes": [[66, null]], "dpnp.broadcast_to": [[67, null]], "dpnp.byte_bounds": [[68, null]], "dpnp.can_cast": [[69, null]], "dpnp.cbrt": [[70, null]], "dpnp.ceil": [[71, null]], "dpnp.choose": [[72, null]], "dpnp.clip": [[73, null]], "dpnp.column_stack": [[74, null]], "dpnp.concat": [[75, null]], "dpnp.concatenate": [[76, null]], "dpnp.conj": [[77, null]], "dpnp.conjugate": [[78, null]], "dpnp.convolve": [[79, null]], "dpnp.copy": [[80, null]], "dpnp.copysign": [[81, null]], "dpnp.copyto": [[82, null]], "dpnp.correlate": [[83, null]], "dpnp.cos": [[84, null]], "dpnp.cosh": [[85, null]], "dpnp.count_nonzero": [[86, null]], "dpnp.cov": [[87, null]], "dpnp.cross": [[88, null]], "dpnp.cumlogsumexp": [[89, null]], "dpnp.cumprod": [[90, null]], "dpnp.cumsum": [[91, null]], "dpnp.deg2rad": [[92, null]], "dpnp.degrees": [[93, null]], "dpnp.delete": [[94, null]], "dpnp.diag": [[95, null]], "dpnp.diag_indices": [[96, null]], "dpnp.diag_indices_from": [[97, null]], "dpnp.diagflat": [[98, null]], "dpnp.diagonal": [[99, null]], "dpnp.diff": [[100, null]], "dpnp.digitize": [[101, null]], "dpnp.divide": [[102, null]], "dpnp.dot": [[103, null]], "dpnp.dpnp_array.dpnp_array": [[104, null]], "dpnp.dsplit": [[105, null]], "dpnp.dstack": [[106, null]], "dpnp.dtype": [[107, null]], "dpnp.ediff1d": [[108, null]], "dpnp.einsum": [[109, null]], "dpnp.einsum_path": [[110, null]], "dpnp.empty": [[111, null]], "dpnp.empty_like": [[112, null]], "dpnp.equal": [[113, null]], "dpnp.erf": [[114, null]], "dpnp.exp": [[115, null]], "dpnp.exp2": [[116, null]], "dpnp.expand_dims": [[117, null]], "dpnp.expm1": [[118, null]], "dpnp.extract": [[119, null]], "dpnp.eye": [[120, null]], "dpnp.fabs": [[121, null]], "dpnp.fft.fft": [[122, null]], "dpnp.fft.fft2": [[123, null]], "dpnp.fft.fftfreq": [[124, null]], "dpnp.fft.fftn": [[125, null]], "dpnp.fft.fftshift": [[126, null]], "dpnp.fft.hfft": [[127, null]], "dpnp.fft.ifft": [[128, null]], "dpnp.fft.ifft2": [[129, null]], "dpnp.fft.ifftn": [[130, null]], "dpnp.fft.ifftshift": [[131, null]], "dpnp.fft.ihfft": [[132, null]], "dpnp.fft.irfft": [[133, null]], "dpnp.fft.irfft2": [[134, null]], "dpnp.fft.irfftn": [[135, null]], "dpnp.fft.rfft": [[136, null]], "dpnp.fft.rfft2": [[137, null]], "dpnp.fft.rfftfreq": [[138, null]], "dpnp.fft.rfftn": [[139, null]], "dpnp.fill_diagonal": [[140, null]], "dpnp.finfo": [[141, null]], "dpnp.fix": [[142, null]], "dpnp.flatiter": [[143, null]], "dpnp.flatnonzero": [[144, null]], "dpnp.flip": [[145, null]], "dpnp.fliplr": [[146, null]], "dpnp.flipud": [[147, null]], "dpnp.float_power": [[148, null]], "dpnp.floor": [[149, null]], "dpnp.floor_divide": [[150, null]], "dpnp.fmax": [[151, null]], "dpnp.fmin": [[152, null]], "dpnp.fmod": [[153, null]], "dpnp.from_dlpack": [[154, null]], "dpnp.frombuffer": [[155, null]], "dpnp.fromfile": [[156, null]], "dpnp.fromfunction": [[157, null]], "dpnp.fromiter": [[158, null]], "dpnp.fromstring": [[159, null]], "dpnp.full": [[160, null]], "dpnp.full_like": [[161, null]], "dpnp.gcd": [[162, null]], "dpnp.geomspace": [[163, null]], "dpnp.get_include": [[164, null]], "dpnp.gradient": [[165, null]], "dpnp.greater": [[166, null]], "dpnp.greater_equal": [[167, null]], "dpnp.heaviside": [[168, null]], "dpnp.histogram": [[169, null]], "dpnp.histogram_bin_edges": [[170, null]], "dpnp.hsplit": [[171, null]], "dpnp.hstack": [[172, null]], "dpnp.hypot": [[173, null]], "dpnp.identity": [[174, null]], "dpnp.iinfo": [[175, null]], "dpnp.imag": [[176, null]], "dpnp.indices": [[177, null]], "dpnp.inner": [[178, null]], "dpnp.insert": [[179, null]], "dpnp.invert": [[180, null]], "dpnp.isclose": [[181, null]], "dpnp.iscomplex": [[182, null]], "dpnp.iscomplexobj": [[183, null]], "dpnp.isfinite": [[184, null]], "dpnp.isfortran": [[185, null]], "dpnp.isinf": [[186, null]], "dpnp.isnan": [[187, null]], "dpnp.isneginf": [[188, null]], "dpnp.isposinf": [[189, null]], "dpnp.isreal": [[190, null]], "dpnp.isrealobj": [[191, null]], "dpnp.isscalar": [[192, null]], "dpnp.issubdtype": [[193, null]], "dpnp.ix_": [[194, null]], "dpnp.kron": [[195, null]], "dpnp.lcm": [[196, null]], "dpnp.ldexp": [[197, null]], "dpnp.left_shift": [[198, null]], "dpnp.less": [[199, null]], "dpnp.less_equal": [[200, null]], "dpnp.linalg.cholesky": [[201, null]], "dpnp.linalg.cond": [[202, null]], "dpnp.linalg.cross": [[203, null]], "dpnp.linalg.det": [[204, null]], "dpnp.linalg.diagonal": [[205, null]], "dpnp.linalg.eig": [[206, null]], "dpnp.linalg.eigh": [[207, null]], "dpnp.linalg.eigvals": [[208, null]], "dpnp.linalg.eigvalsh": [[209, null]], "dpnp.linalg.inv": [[210, null]], "dpnp.linalg.lstsq": [[211, null]], "dpnp.linalg.matmul": [[212, null]], "dpnp.linalg.matrix_norm": [[213, null]], "dpnp.linalg.matrix_power": [[214, null]], "dpnp.linalg.matrix_rank": [[215, null]], "dpnp.linalg.multi_dot": [[216, null]], "dpnp.linalg.norm": [[217, null]], "dpnp.linalg.outer": [[218, null]], "dpnp.linalg.pinv": [[219, null]], "dpnp.linalg.qr": [[220, null]], "dpnp.linalg.slogdet": [[221, null]], "dpnp.linalg.solve": [[222, null]], "dpnp.linalg.svd": [[223, null]], "dpnp.linalg.svdvals": [[224, null]], "dpnp.linalg.tensordot": [[225, null]], "dpnp.linalg.tensorinv": [[226, null]], "dpnp.linalg.tensorsolve": [[227, null]], "dpnp.linalg.trace": [[228, null]], "dpnp.linalg.vecdot": [[229, null]], "dpnp.linalg.vector_norm": [[230, null]], "dpnp.linspace": [[231, null]], "dpnp.loadtxt": [[232, null]], "dpnp.log": [[233, null]], "dpnp.log10": [[234, null]], "dpnp.log1p": [[235, null]], "dpnp.log2": [[236, null]], "dpnp.logaddexp": [[237, null]], "dpnp.logaddexp2": [[238, null]], "dpnp.logical_and": [[239, null]], "dpnp.logical_not": [[240, null]], "dpnp.logical_or": [[241, null]], "dpnp.logical_xor": [[242, null]], "dpnp.logspace": [[243, null]], "dpnp.logsumexp": [[244, null]], "dpnp.mask_indices": [[245, null]], "dpnp.matmul": [[246, null]], "dpnp.matrix_transpose": [[247, null]], "dpnp.max": [[248, null]], "dpnp.maximum": [[249, null]], "dpnp.mean": [[250, null]], "dpnp.median": [[251, null]], "dpnp.meshgrid": [[252, null]], "dpnp.mgrid": [[253, null]], "dpnp.min": [[254, null]], "dpnp.minimum": [[255, null]], "dpnp.mod": [[256, null]], "dpnp.modf": [[257, null]], "dpnp.moveaxis": [[258, null]], "dpnp.multiply": [[259, null]], "dpnp.nan_to_num": [[260, null]], "dpnp.nanargmax": [[261, null]], "dpnp.nanargmin": [[262, null]], "dpnp.nancumprod": [[263, null]], "dpnp.nancumsum": [[264, null]], "dpnp.nanmax": [[265, null]], "dpnp.nanmean": [[266, null]], "dpnp.nanmin": [[267, null]], "dpnp.nanprod": [[268, null]], "dpnp.nanstd": [[269, null]], "dpnp.nansum": [[270, null]], "dpnp.nanvar": [[271, null]], "dpnp.ndarray": [[272, null]], "dpnp.ndarray.T": [[273, null]], "dpnp.ndarray.__abs__": [[274, null]], "dpnp.ndarray.__add__": [[275, null]], "dpnp.ndarray.__and__": [[276, null]], "dpnp.ndarray.__bool__": [[277, null]], "dpnp.ndarray.__complex__": [[278, null]], "dpnp.ndarray.__copy__": [[279, null]], "dpnp.ndarray.__eq__": [[280, null]], "dpnp.ndarray.__float__": [[281, null]], "dpnp.ndarray.__floordiv__": [[282, null]], "dpnp.ndarray.__ge__": [[283, null]], "dpnp.ndarray.__getitem__": [[284, null]], "dpnp.ndarray.__gt__": [[285, null]], "dpnp.ndarray.__iadd__": [[286, null]], "dpnp.ndarray.__iand__": [[287, null]], "dpnp.ndarray.__ifloordiv__": [[288, null]], "dpnp.ndarray.__ilshift__": [[289, null]], "dpnp.ndarray.__imatmul__": [[290, null]], "dpnp.ndarray.__imod__": [[291, null]], "dpnp.ndarray.__imul__": [[292, null]], "dpnp.ndarray.__int__": [[293, null]], "dpnp.ndarray.__invert__": [[294, null]], "dpnp.ndarray.__ior__": [[295, null]], "dpnp.ndarray.__ipow__": [[296, null]], "dpnp.ndarray.__irshift__": [[297, null]], "dpnp.ndarray.__isub__": [[298, null]], "dpnp.ndarray.__itruediv__": [[299, null]], "dpnp.ndarray.__ixor__": [[300, null]], "dpnp.ndarray.__le__": [[301, null]], "dpnp.ndarray.__len__": [[302, null]], "dpnp.ndarray.__lshift__": [[303, null]], "dpnp.ndarray.__lt__": [[304, null]], "dpnp.ndarray.__matmul__": [[305, null]], "dpnp.ndarray.__mod__": [[306, null]], "dpnp.ndarray.__mul__": [[307, null]], "dpnp.ndarray.__ne__": [[308, null]], "dpnp.ndarray.__neg__": [[309, null]], "dpnp.ndarray.__new__": [[310, null]], "dpnp.ndarray.__or__": [[311, null]], "dpnp.ndarray.__pos__": [[312, null]], "dpnp.ndarray.__pow__": [[313, null]], "dpnp.ndarray.__radd__": [[314, null]], "dpnp.ndarray.__rand__": [[315, null]], "dpnp.ndarray.__repr__": [[316, null]], "dpnp.ndarray.__rfloordiv__": [[317, null]], "dpnp.ndarray.__rlshift__": [[318, null]], "dpnp.ndarray.__rmatmul__": [[319, null]], "dpnp.ndarray.__rmod__": [[320, null]], "dpnp.ndarray.__rmul__": [[321, null]], "dpnp.ndarray.__ror__": [[322, null]], "dpnp.ndarray.__rpow__": [[323, null]], "dpnp.ndarray.__rrshift__": [[324, null]], "dpnp.ndarray.__rshift__": [[325, null]], "dpnp.ndarray.__rsub__": [[326, null]], "dpnp.ndarray.__rtruediv__": [[327, null]], "dpnp.ndarray.__rxor__": [[328, null]], "dpnp.ndarray.__setitem__": [[329, null]], "dpnp.ndarray.__str__": [[330, null]], "dpnp.ndarray.__sub__": [[331, null]], "dpnp.ndarray.__truediv__": [[332, null]], "dpnp.ndarray.__xor__": [[333, null]], "dpnp.ndarray.all": [[334, null]], "dpnp.ndarray.any": [[335, null]], "dpnp.ndarray.argmax": [[336, null]], "dpnp.ndarray.argmin": [[337, null]], "dpnp.ndarray.argsort": [[338, null]], "dpnp.ndarray.astype": [[339, null]], "dpnp.ndarray.choose": [[340, null]], "dpnp.ndarray.clip": [[341, null]], "dpnp.ndarray.conj": [[342, null]], "dpnp.ndarray.conjugate": [[343, null]], "dpnp.ndarray.copy": [[344, null]], "dpnp.ndarray.cumprod": [[345, null]], "dpnp.ndarray.cumsum": [[346, null]], "dpnp.ndarray.diagonal": [[347, null]], "dpnp.ndarray.dtype": [[348, null]], "dpnp.ndarray.fill": [[349, null]], "dpnp.ndarray.flags": [[350, null]], "dpnp.ndarray.flat": [[351, null]], "dpnp.ndarray.flatten": [[352, null]], "dpnp.ndarray.imag": [[353, null]], "dpnp.ndarray.item": [[354, null]], "dpnp.ndarray.itemsize": [[355, null]], "dpnp.ndarray.mT": [[356, null]], "dpnp.ndarray.max": [[357, null]], "dpnp.ndarray.mean": [[358, null]], "dpnp.ndarray.min": [[359, null]], "dpnp.ndarray.nbytes": [[360, null]], "dpnp.ndarray.ndim": [[361, null]], "dpnp.ndarray.nonzero": [[362, null]], "dpnp.ndarray.partition": [[363, null]], "dpnp.ndarray.prod": [[364, null]], "dpnp.ndarray.put": [[365, null]], "dpnp.ndarray.ravel": [[366, null]], "dpnp.ndarray.real": [[367, null]], "dpnp.ndarray.repeat": [[368, null]], "dpnp.ndarray.reshape": [[369, null]], "dpnp.ndarray.round": [[370, null]], "dpnp.ndarray.searchsorted": [[371, null]], "dpnp.ndarray.shape": [[372, null]], "dpnp.ndarray.size": [[373, null]], "dpnp.ndarray.sort": [[374, null]], "dpnp.ndarray.squeeze": [[375, null]], "dpnp.ndarray.std": [[376, null]], "dpnp.ndarray.strides": [[377, null]], "dpnp.ndarray.sum": [[378, null]], "dpnp.ndarray.swapaxes": [[379, null]], "dpnp.ndarray.take": [[380, null]], "dpnp.ndarray.trace": [[381, null]], "dpnp.ndarray.transpose": [[382, null]], "dpnp.ndarray.var": [[383, null]], "dpnp.ndim": [[384, null]], "dpnp.negative": [[385, null]], "dpnp.nextafter": [[386, null]], "dpnp.nonzero": [[387, null]], "dpnp.not_equal": [[388, null]], "dpnp.ogrid": [[389, null]], "dpnp.ones": [[390, null]], "dpnp.ones_like": [[391, null]], "dpnp.outer": [[392, null]], "dpnp.pad": [[393, null]], "dpnp.partition": [[394, null]], "dpnp.permute_dims": [[395, null]], "dpnp.place": [[396, null]], "dpnp.positive": [[397, null]], "dpnp.pow": [[398, null]], "dpnp.power": [[399, null]], "dpnp.prod": [[400, null]], "dpnp.proj": [[401, null]], "dpnp.ptp": [[402, null]], "dpnp.put": [[403, null]], "dpnp.put_along_axis": [[404, null]], "dpnp.putmask": [[405, null]], "dpnp.rad2deg": [[406, null]], "dpnp.radians": [[407, null]], "dpnp.random.RandomState": [[408, null]], "dpnp.random.beta": [[409, null]], "dpnp.random.binomial": [[410, null]], "dpnp.random.bytes": [[411, null]], "dpnp.random.chisquare": [[412, null]], "dpnp.random.choice": [[413, null]], "dpnp.random.dirichlet": [[414, null]], "dpnp.random.exponential": [[415, null]], "dpnp.random.f": [[416, null]], "dpnp.random.gamma": [[417, null]], "dpnp.random.geometric": [[418, null]], "dpnp.random.gumbel": [[419, null]], "dpnp.random.hypergeometric": [[420, null]], "dpnp.random.laplace": [[421, null]], "dpnp.random.logistic": [[422, null]], "dpnp.random.lognormal": [[423, null]], "dpnp.random.logseries": [[424, null]], "dpnp.random.multinomial": [[425, null]], "dpnp.random.multivariate_normal": [[426, null]], "dpnp.random.negative_binomial": [[427, null]], "dpnp.random.noncentral_chisquare": [[428, null]], "dpnp.random.noncentral_f": [[429, null]], "dpnp.random.normal": [[430, null]], "dpnp.random.pareto": [[431, null]], "dpnp.random.permutation": [[432, null]], "dpnp.random.poisson": [[433, null]], "dpnp.random.power": [[434, null]], "dpnp.random.rand": [[435, null]], "dpnp.random.randint": [[436, null]], "dpnp.random.randn": [[437, null]], "dpnp.random.random": [[438, null]], "dpnp.random.random_integers": [[439, null]], "dpnp.random.random_sample": [[440, null]], "dpnp.random.ranf": [[441, null]], "dpnp.random.rayleigh": [[442, null]], "dpnp.random.sample": [[443, null]], "dpnp.random.seed": [[444, null]], "dpnp.random.shuffle": [[445, null]], "dpnp.random.standard_cauchy": [[446, null]], "dpnp.random.standard_exponential": [[447, null]], "dpnp.random.standard_gamma": [[448, null]], "dpnp.random.standard_normal": [[449, null]], "dpnp.random.standard_t": [[450, null]], "dpnp.random.triangular": [[451, null]], "dpnp.random.uniform": [[452, null]], "dpnp.random.vonmises": [[453, null]], "dpnp.random.wald": [[454, null]], "dpnp.random.weibull": [[455, null]], "dpnp.random.zipf": [[456, null]], "dpnp.ravel": [[457, null]], "dpnp.ravel_multi_index": [[458, null]], "dpnp.real": [[459, null]], "dpnp.real_if_close": [[460, null]], "dpnp.reciprocal": [[461, null]], "dpnp.reduce_hypot": [[462, null]], "dpnp.remainder": [[463, null]], "dpnp.repeat": [[464, null]], "dpnp.require": [[465, null]], "dpnp.reshape": [[466, null]], "dpnp.resize": [[467, null]], "dpnp.result_type": [[468, null]], "dpnp.right_shift": [[469, null]], "dpnp.rint": [[470, null]], "dpnp.roll": [[471, null]], "dpnp.rollaxis": [[472, null]], "dpnp.rot90": [[473, null]], "dpnp.round": [[474, null]], "dpnp.row_stack": [[475, null]], "dpnp.rsqrt": [[476, null]], "dpnp.searchsorted": [[477, null]], "dpnp.select": [[478, null]], "dpnp.shape": [[479, null]], "dpnp.sign": [[480, null]], "dpnp.signbit": [[481, null]], "dpnp.sin": [[482, null]], "dpnp.sinc": [[483, null]], "dpnp.sinh": [[484, null]], "dpnp.size": [[485, null]], "dpnp.sort": [[486, null]], "dpnp.sort_complex": [[487, null]], "dpnp.spacing": [[488, null]], "dpnp.split": [[489, null]], "dpnp.sqrt": [[490, null]], "dpnp.square": [[491, null]], "dpnp.squeeze": [[492, null]], "dpnp.stack": [[493, null]], "dpnp.std": [[494, null]], "dpnp.subtract": [[495, null]], "dpnp.sum": [[496, null]], "dpnp.swapaxes": [[497, null]], "dpnp.take": [[498, null]], "dpnp.take_along_axis": [[499, null]], "dpnp.tan": [[500, null]], "dpnp.tanh": [[501, null]], "dpnp.tensordot": [[502, null]], "dpnp.tile": [[503, null]], "dpnp.trace": [[504, null]], "dpnp.transpose": [[505, null]], "dpnp.trapezoid": [[506, null]], "dpnp.tri": [[507, null]], "dpnp.tril": [[508, null]], "dpnp.tril_indices": [[509, null]], "dpnp.tril_indices_from": [[510, null]], "dpnp.trim_zeros": [[511, null]], "dpnp.triu": [[512, null]], "dpnp.triu_indices": [[513, null]], "dpnp.triu_indices_from": [[514, null]], "dpnp.true_divide": [[515, null]], "dpnp.trunc": [[516, null]], "dpnp.unique": [[517, null]], "dpnp.unravel_index": [[518, null]], "dpnp.unstack": [[519, null]], "dpnp.unwrap": [[520, null]], "dpnp.vander": [[521, null]], "dpnp.var": [[522, null]], "dpnp.vdot": [[523, null]], "dpnp.vecdot": [[524, null]], "dpnp.vsplit": [[525, null]], "dpnp.vstack": [[526, null]], "dpnp.where": [[527, null]], "dpnp.zeros": [[528, null]], "dpnp.zeros_like": [[529, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[107, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[107, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[107, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[107, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[300, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[107, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[301, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[107, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[302, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[303, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[107, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[304, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[305, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[306, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[307, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[107, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[308, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[309, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[310, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[311, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[312, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[313, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[314, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[315, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[316, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[317, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[318, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[319, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[320, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[321, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[322, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[323, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[324, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[325, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[326, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[327, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[328, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[143, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[329, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[330, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[331, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[332, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[333, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[107, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[334, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[335, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[336, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[337, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[338, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[339, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[107, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[409, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[410, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[59, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[60, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[61, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[62, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[63, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[64, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[65, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[66, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[67, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[68, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[107, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[411, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[69, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[70, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[71, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[107, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[412, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[413, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[201, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[340, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[72, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[341, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[73, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[74, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[75, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[76, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[202, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[342, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[77, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[343, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[78, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[79, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[344, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[80, "dpnp.copy", false]], "copysign() (in module dpnp)": [[81, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[82, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[83, "dpnp.correlate", false]], "cos() (in module dpnp)": [[84, "dpnp.cos", false]], "cosh() (in module dpnp)": [[85, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[86, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[87, "dpnp.cov", false]], "cross() (in module dpnp)": [[88, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[203, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[89, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[345, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[90, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[346, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[91, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[92, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[93, "dpnp.degrees", false]], "delete() (in module dpnp)": [[94, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[107, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[204, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[95, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[96, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[97, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[98, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[347, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[99, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[205, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[100, "dpnp.diff", false]], "digitize() (in module dpnp)": [[101, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[414, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[102, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[103, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[104, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[105, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[106, "dpnp.dstack", false]], "dtype (class in dpnp)": [[107, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[348, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[108, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[206, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[207, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[208, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[209, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[109, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[110, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[111, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[112, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[113, "dpnp.equal", false]], "erf() (in module dpnp)": [[114, "dpnp.erf", false]], "exp() (in module dpnp)": [[115, "dpnp.exp", false]], "exp2() (in module dpnp)": [[116, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[117, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[118, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[415, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[119, "dpnp.extract", false]], "eye() (in module dpnp)": [[120, "dpnp.eye", false]], "f() (in module dpnp.random)": [[416, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[121, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[122, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[123, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[124, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[125, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[126, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[107, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[349, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[140, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[141, "dpnp.finfo", false]], "fix() (in module dpnp)": [[142, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[107, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[350, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[351, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[143, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[144, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[352, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[145, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[146, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[147, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[148, "dpnp.float_power", false]], "floor() (in module dpnp)": [[149, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[150, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[151, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[152, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[153, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[154, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[155, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[156, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[157, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[158, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[159, "dpnp.fromstring", false]], "full() (in module dpnp)": [[160, "dpnp.full", false]], "full_like() (in module dpnp)": [[161, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[417, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[162, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[418, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[163, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[164, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[165, "dpnp.gradient", false]], "greater() (in module dpnp)": [[166, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[167, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[419, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[107, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[168, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[127, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[169, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[170, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[171, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[172, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[420, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[173, "dpnp.hypot", false]], "identity() (in module dpnp)": [[174, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[128, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[129, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[130, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[131, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[132, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[175, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[353, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[176, "dpnp.imag", false]], "indices() (in module dpnp)": [[177, "dpnp.indices", false]], "inner() (in module dpnp)": [[178, "dpnp.inner", false]], "insert() (in module dpnp)": [[179, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[210, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[180, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[133, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[134, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[135, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[107, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[107, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[181, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[182, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[183, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[184, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[185, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[186, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[187, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[107, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[188, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[189, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[190, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[191, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[192, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[193, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[354, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[107, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[355, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[194, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[107, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[195, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[421, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[196, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[197, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[198, "dpnp.left_shift", false]], "less() (in module dpnp)": [[199, "dpnp.less", false]], "less_equal() (in module dpnp)": [[200, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[231, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[232, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[233, "dpnp.log", false]], "log10() (in module dpnp)": [[234, "dpnp.log10", false]], "log1p() (in module dpnp)": [[235, "dpnp.log1p", false]], "log2() (in module dpnp)": [[236, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[237, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[238, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[239, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[240, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[241, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[242, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[422, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[423, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[424, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[243, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[244, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[211, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[245, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[246, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[212, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[213, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[214, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[215, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[247, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[357, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[248, "dpnp.max", false]], "maximum() (in module dpnp)": [[249, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[358, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[250, "dpnp.mean", false]], "median() (in module dpnp)": [[251, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[252, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[107, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[253, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[359, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[254, "dpnp.min", false]], "minimum() (in module dpnp)": [[255, "dpnp.minimum", false]], "mod() (in module dpnp)": [[256, "dpnp.mod", false]], "modf() (in module dpnp)": [[257, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[258, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[356, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[216, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[425, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[259, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[426, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[107, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[107, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[260, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[261, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[262, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[263, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[264, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[265, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[266, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[267, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[268, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[269, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[270, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[271, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[360, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[272, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[107, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[361, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[384, "dpnp.ndim", false]], "negative() (in module dpnp)": [[385, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[427, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[107, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[386, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[428, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[429, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[362, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[387, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[217, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[430, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[388, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[107, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[389, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[390, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[391, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[392, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[218, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[393, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[431, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[363, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[394, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[432, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[395, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[219, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[396, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[433, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[397, "dpnp.positive", false]], "pow() (in module dpnp)": [[398, "dpnp.pow", false]], "power() (in module dpnp)": [[399, "dpnp.power", false]], "power() (in module dpnp.random)": [[434, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[364, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[400, "dpnp.prod", false]], "proj() (in module dpnp)": [[401, "dpnp.proj", false]], "ptp() (in module dpnp)": [[402, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[365, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[403, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[404, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[405, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[220, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[406, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[407, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[435, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[436, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[437, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[438, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[439, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[440, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[408, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[441, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[366, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[457, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[458, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[442, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[367, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[459, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[460, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[461, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[462, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[463, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[368, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[464, "dpnp.repeat", false]], "require() (in module dpnp)": [[465, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[369, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[466, "dpnp.reshape", false]], "resize() (in module dpnp)": [[467, "dpnp.resize", false]], "result_type() (in module dpnp)": [[468, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[136, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[137, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[138, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[139, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[469, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[470, "dpnp.rint", false]], "roll() (in module dpnp)": [[471, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[472, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[473, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[370, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[474, "dpnp.round", false]], "row_stack() (in module dpnp)": [[475, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[476, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[443, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[371, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[477, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[444, "dpnp.random.seed", false]], "select() (in module dpnp)": [[478, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[107, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[372, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[479, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[445, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[480, "dpnp.sign", false]], "signbit() (in module dpnp)": [[481, "dpnp.signbit", false]], "sin() (in module dpnp)": [[482, "dpnp.sin", false]], "sinc() (in module dpnp)": [[483, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[484, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[373, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[485, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[221, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[222, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[374, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[486, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[487, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[488, "dpnp.spacing", false]], "split() (in module dpnp)": [[489, "dpnp.split", false]], "sqrt() (in module dpnp)": [[490, "dpnp.sqrt", false]], "square() (in module dpnp)": [[491, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[375, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[492, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[493, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[446, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[447, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[448, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[449, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[450, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[376, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[494, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[107, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[377, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[107, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[495, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[378, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[496, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[223, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[224, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[379, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[497, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[273, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[380, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[498, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[499, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[500, "dpnp.tan", false]], "tanh() (in module dpnp)": [[501, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[502, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[225, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[226, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[227, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[503, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[381, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[504, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[228, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[382, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[505, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[506, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[507, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[451, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[508, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[509, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[510, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[511, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[512, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[513, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[514, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[515, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[516, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[107, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[408, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[452, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[517, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[518, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[519, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[520, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[104, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[521, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[104, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[383, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[522, "dpnp.var", false]], "vdot() (in module dpnp)": [[523, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[524, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[229, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[230, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[453, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[525, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[526, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[454, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[455, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[527, "dpnp.where", false]], "zeros() (in module dpnp)": [[528, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[529, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[456, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_invert"], [60, 1, 1, "", "bitwise_left_shift"], [61, 1, 1, "", "bitwise_not"], [62, 1, 1, "", "bitwise_or"], [63, 1, 1, "", "bitwise_right_shift"], [64, 1, 1, "", "bitwise_xor"], [65, 1, 1, "", "broadcast_arrays"], [66, 1, 1, "", "broadcast_shapes"], [67, 1, 1, "", "broadcast_to"], [68, 1, 1, "", "byte_bounds"], [69, 1, 1, "", "can_cast"], [70, 1, 1, "", "cbrt"], [71, 1, 1, "", "ceil"], [72, 1, 1, "", "choose"], [73, 1, 1, "", "clip"], [74, 1, 1, "", "column_stack"], [75, 1, 1, "", "concat"], [76, 1, 1, "", "concatenate"], [77, 1, 1, "", "conj"], [78, 1, 1, "", "conjugate"], [79, 1, 1, "", "convolve"], [80, 1, 1, "", "copy"], [81, 1, 1, "", "copysign"], [82, 1, 1, "", "copyto"], [83, 1, 1, "", "correlate"], [84, 1, 1, "", "cos"], [85, 1, 1, "", "cosh"], [86, 1, 1, "", "count_nonzero"], [87, 1, 1, "", "cov"], [88, 1, 1, "", "cross"], [89, 1, 1, "", "cumlogsumexp"], [90, 1, 1, "", "cumprod"], [91, 1, 1, "", "cumsum"], [92, 1, 1, "", "deg2rad"], [93, 1, 1, "", "degrees"], [94, 1, 1, "", "delete"], [95, 1, 1, "", "diag"], [96, 1, 1, "", "diag_indices"], [97, 1, 1, "", "diag_indices_from"], [98, 1, 1, "", "diagflat"], [99, 1, 1, "", "diagonal"], [100, 1, 1, "", "diff"], [101, 1, 1, "", "digitize"], [102, 1, 1, "", "divide"], [103, 1, 1, "", "dot"], [105, 1, 1, "", "dsplit"], [106, 1, 1, "", "dstack"], [107, 2, 1, "", "dtype"], [108, 1, 1, "", "ediff1d"], [109, 1, 1, "", "einsum"], [110, 1, 1, "", "einsum_path"], [111, 1, 1, "", "empty"], [112, 1, 1, "", "empty_like"], [113, 1, 1, "", "equal"], [114, 1, 1, "", "erf"], [115, 1, 1, "", "exp"], [116, 1, 1, "", "exp2"], [117, 1, 1, "", "expand_dims"], [118, 1, 1, "", "expm1"], [119, 1, 1, "", "extract"], [120, 1, 1, "", "eye"], [121, 1, 1, "", "fabs"], [140, 1, 1, "", "fill_diagonal"], [141, 1, 1, "", "finfo"], [142, 1, 1, "", "fix"], [143, 2, 1, "", "flatiter"], [144, 1, 1, "", "flatnonzero"], [145, 1, 1, "", "flip"], [146, 1, 1, "", "fliplr"], [147, 1, 1, "", "flipud"], [148, 1, 1, "", "float_power"], [149, 1, 1, "", "floor"], [150, 1, 1, "", "floor_divide"], [151, 1, 1, "", "fmax"], [152, 1, 1, "", "fmin"], [153, 1, 1, "", "fmod"], [154, 1, 1, "", "from_dlpack"], [155, 1, 1, "", "frombuffer"], [156, 1, 1, "", "fromfile"], [157, 1, 1, "", "fromfunction"], [158, 1, 1, "", "fromiter"], [159, 1, 1, "", "fromstring"], [160, 1, 1, "", "full"], [161, 1, 1, "", "full_like"], [162, 1, 1, "", "gcd"], [163, 1, 1, "", "geomspace"], [164, 1, 1, "", "get_include"], [165, 1, 1, "", "gradient"], [166, 1, 1, "", "greater"], [167, 1, 1, "", "greater_equal"], [168, 1, 1, "", "heaviside"], [169, 1, 1, "", "histogram"], [170, 1, 1, "", "histogram_bin_edges"], [171, 1, 1, "", "hsplit"], [172, 1, 1, "", "hstack"], [173, 1, 1, "", "hypot"], [174, 1, 1, "", "identity"], [175, 1, 1, "", "iinfo"], [176, 1, 1, "", "imag"], [177, 1, 1, "", "indices"], [178, 1, 1, "", "inner"], [179, 1, 1, "", "insert"], [180, 1, 1, "", "invert"], [181, 1, 1, "", "isclose"], [182, 1, 1, "", "iscomplex"], [183, 1, 1, "", "iscomplexobj"], [184, 1, 1, "", "isfinite"], [185, 1, 1, "", "isfortran"], [186, 1, 1, "", "isinf"], [187, 1, 1, "", "isnan"], [188, 1, 1, "", "isneginf"], [189, 1, 1, "", "isposinf"], [190, 1, 1, "", "isreal"], [191, 1, 1, "", "isrealobj"], [192, 1, 1, "", "isscalar"], [193, 1, 1, "", "issubdtype"], [194, 1, 1, "", "ix_"], [195, 1, 1, "", "kron"], [196, 1, 1, "", "lcm"], [197, 1, 1, "", "ldexp"], [198, 1, 1, "", "left_shift"], [199, 1, 1, "", "less"], [200, 1, 1, "", "less_equal"], [231, 1, 1, "", "linspace"], [232, 1, 1, "", "loadtxt"], [233, 1, 1, "", "log"], [234, 1, 1, "", "log10"], [235, 1, 1, "", "log1p"], [236, 1, 1, "", "log2"], [237, 1, 1, "", "logaddexp"], [238, 1, 1, "", "logaddexp2"], [239, 1, 1, "", "logical_and"], [240, 1, 1, "", "logical_not"], [241, 1, 1, "", "logical_or"], [242, 1, 1, "", "logical_xor"], [243, 1, 1, "", "logspace"], [244, 1, 1, "", "logsumexp"], [245, 1, 1, "", "mask_indices"], [246, 1, 1, "", "matmul"], [247, 1, 1, "", "matrix_transpose"], [248, 1, 1, "", "max"], [249, 1, 1, "", "maximum"], [250, 1, 1, "", "mean"], [251, 1, 1, "", "median"], [252, 1, 1, "", "meshgrid"], [253, 5, 1, "", "mgrid"], [254, 1, 1, "", "min"], [255, 1, 1, "", "minimum"], [256, 1, 1, "", "mod"], [257, 1, 1, "", "modf"], [258, 1, 1, "", "moveaxis"], [259, 1, 1, "", "multiply"], [260, 1, 1, "", "nan_to_num"], [261, 1, 1, "", "nanargmax"], [262, 1, 1, "", "nanargmin"], [263, 1, 1, "", "nancumprod"], [264, 1, 1, "", "nancumsum"], [265, 1, 1, "", "nanmax"], [266, 1, 1, "", "nanmean"], [267, 1, 1, "", "nanmin"], [268, 1, 1, "", "nanprod"], [269, 1, 1, "", "nanstd"], [270, 1, 1, "", "nansum"], [271, 1, 1, "", "nanvar"], [272, 3, 1, "", "ndarray"], [384, 1, 1, "", "ndim"], [385, 1, 1, "", "negative"], [386, 1, 1, "", "nextafter"], [387, 1, 1, "", "nonzero"], [388, 1, 1, "", "not_equal"], [389, 5, 1, "", "ogrid"], [390, 1, 1, "", "ones"], [391, 1, 1, "", "ones_like"], [392, 1, 1, "", "outer"], [393, 1, 1, "", "pad"], [394, 1, 1, "", "partition"], [395, 1, 1, "", "permute_dims"], [396, 1, 1, "", "place"], [397, 1, 1, "", "positive"], [398, 1, 1, "", "pow"], [399, 1, 1, "", "power"], [400, 1, 1, "", "prod"], [401, 1, 1, "", "proj"], [402, 1, 1, "", "ptp"], [403, 1, 1, "", "put"], [404, 1, 1, "", "put_along_axis"], [405, 1, 1, "", "putmask"], [406, 1, 1, "", "rad2deg"], [407, 1, 1, "", "radians"], [457, 1, 1, "", "ravel"], [458, 1, 1, "", "ravel_multi_index"], [459, 1, 1, "", "real"], [460, 1, 1, "", "real_if_close"], [461, 1, 1, "", "reciprocal"], [462, 1, 1, "", "reduce_hypot"], [463, 1, 1, "", "remainder"], [464, 1, 1, "", "repeat"], [465, 1, 1, "", "require"], [466, 1, 1, "", "reshape"], [467, 1, 1, "", "resize"], [468, 1, 1, "", "result_type"], [469, 1, 1, "", "right_shift"], [470, 1, 1, "", "rint"], [471, 1, 1, "", "roll"], [472, 1, 1, "", "rollaxis"], [473, 1, 1, "", "rot90"], [474, 1, 1, "", "round"], [475, 1, 1, "", "row_stack"], [476, 1, 1, "", "rsqrt"], [477, 1, 1, "", "searchsorted"], [478, 1, 1, "", "select"], [479, 1, 1, "", "shape"], [480, 1, 1, "", "sign"], [481, 1, 1, "", "signbit"], [482, 1, 1, "", "sin"], [483, 1, 1, "", "sinc"], [484, 1, 1, "", "sinh"], [485, 1, 1, "", "size"], [486, 1, 1, "", "sort"], [487, 1, 1, "", "sort_complex"], [488, 1, 1, "", "spacing"], [489, 1, 1, "", "split"], [490, 1, 1, "", "sqrt"], [491, 1, 1, "", "square"], [492, 1, 1, "", "squeeze"], [493, 1, 1, "", "stack"], [494, 1, 1, "", "std"], [495, 1, 1, "", "subtract"], [496, 1, 1, "", "sum"], [497, 1, 1, "", "swapaxes"], [498, 1, 1, "", "take"], [499, 1, 1, "", "take_along_axis"], [500, 1, 1, "", "tan"], [501, 1, 1, "", "tanh"], [502, 1, 1, "", "tensordot"], [503, 1, 1, "", "tile"], [504, 1, 1, "", "trace"], [505, 1, 1, "", "transpose"], [506, 1, 1, "", "trapezoid"], [507, 1, 1, "", "tri"], [508, 1, 1, "", "tril"], [509, 1, 1, "", "tril_indices"], [510, 1, 1, "", "tril_indices_from"], [511, 1, 1, "", "trim_zeros"], [512, 1, 1, "", "triu"], [513, 1, 1, "", "triu_indices"], [514, 1, 1, "", "triu_indices_from"], [515, 1, 1, "", "true_divide"], [516, 1, 1, "", "trunc"], [517, 1, 1, "", "unique"], [518, 1, 1, "", "unravel_index"], [519, 1, 1, "", "unstack"], [520, 1, 1, "", "unwrap"], [521, 1, 1, "", "vander"], [522, 1, 1, "", "var"], [523, 1, 1, "", "vdot"], [524, 1, 1, "", "vecdot"], [525, 1, 1, "", "vsplit"], [526, 1, 1, "", "vstack"], [527, 1, 1, "", "where"], [528, 1, 1, "", "zeros"], [529, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[104, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[104, 3, 1, "", "T"], [104, 4, 1, "", "__eq__"], [104, 4, 1, "", "__ge__"], [104, 4, 1, "", "__getitem__"], [104, 4, 1, "", "__gt__"], [104, 4, 1, "", "__le__"], [104, 4, 1, "", "__len__"], [104, 4, 1, "", "__lt__"], [104, 4, 1, "", "__ne__"], [104, 4, 1, "", "__setitem__"], [104, 4, 1, "", "all"], [104, 4, 1, "", "any"], [104, 4, 1, "", "argmax"], [104, 4, 1, "", "argmin"], [104, 4, 1, "", "argsort"], [104, 4, 1, "", "asnumpy"], [104, 4, 1, "", "astype"], [104, 4, 1, "", "choose"], [104, 4, 1, "", "clip"], [104, 4, 1, "", "conj"], [104, 4, 1, "", "conjugate"], [104, 4, 1, "", "copy"], [104, 4, 1, "", "cumprod"], [104, 4, 1, "", "cumsum"], [104, 3, 1, "", "device"], [104, 4, 1, "", "diagonal"], [104, 4, 1, "", "dot"], [104, 3, 1, "", "dtype"], [104, 4, 1, "", "fill"], [104, 3, 1, "", "flags"], [104, 3, 1, "", "flat"], [104, 4, 1, "", "flatten"], [104, 4, 1, "", "get_array"], [104, 3, 1, "", "imag"], [104, 4, 1, "", "item"], [104, 3, 1, "", "itemsize"], [104, 3, 1, "", "mT"], [104, 4, 1, "", "max"], [104, 4, 1, "", "mean"], [104, 4, 1, "", "min"], [104, 3, 1, "", "nbytes"], [104, 3, 1, "", "ndim"], [104, 4, 1, "", "nonzero"], [104, 4, 1, "", "partition"], [104, 4, 1, "", "prod"], [104, 4, 1, "", "put"], [104, 4, 1, "", "ravel"], [104, 3, 1, "", "real"], [104, 4, 1, "", "repeat"], [104, 4, 1, "", "reshape"], [104, 4, 1, "", "round"], [104, 4, 1, "", "searchsorted"], [104, 3, 1, "", "shape"], [104, 3, 1, "", "size"], [104, 4, 1, "", "sort"], [104, 4, 1, "", "squeeze"], [104, 4, 1, "", "std"], [104, 3, 1, "", "strides"], [104, 4, 1, "", "sum"], [104, 4, 1, "", "swapaxes"], [104, 3, 1, "", "sycl_context"], [104, 3, 1, "", "sycl_device"], [104, 3, 1, "", "sycl_queue"], [104, 4, 1, "", "take"], [104, 4, 1, "", "to_device"], [104, 4, 1, "", "trace"], [104, 4, 1, "", "transpose"], [104, 3, 1, "", "usm_type"], [104, 4, 1, "", "var"]], "dpnp.dtype": [[107, 4, 1, "", "__eq__"], [107, 4, 1, "", "__ge__"], [107, 4, 1, "", "__getitem__"], [107, 4, 1, "", "__gt__"], [107, 4, 1, "", "__le__"], [107, 4, 1, "", "__len__"], [107, 4, 1, "", "__lt__"], [107, 4, 1, "", "__ne__"], [107, 3, 1, "", "alignment"], [107, 3, 1, "", "base"], [107, 3, 1, "", "byteorder"], [107, 3, 1, "", "char"], [107, 3, 1, "", "descr"], [107, 3, 1, "", "fields"], [107, 3, 1, "", "flags"], [107, 3, 1, "", "hasobject"], [107, 3, 1, "", "isalignedstruct"], [107, 3, 1, "", "isbuiltin"], [107, 3, 1, "", "isnative"], [107, 3, 1, "", "itemsize"], [107, 3, 1, "", "kind"], [107, 3, 1, "", "metadata"], [107, 3, 1, "", "name"], [107, 3, 1, "", "names"], [107, 3, 1, "", "ndim"], [107, 4, 1, "", "newbyteorder"], [107, 3, 1, "", "num"], [107, 3, 1, "", "shape"], [107, 3, 1, "", "str"], [107, 3, 1, "", "subdtype"], [107, 3, 1, "", "type"]], "dpnp.fft": [[122, 1, 1, "", "fft"], [123, 1, 1, "", "fft2"], [124, 1, 1, "", "fftfreq"], [125, 1, 1, "", "fftn"], [126, 1, 1, "", "fftshift"], [127, 1, 1, "", "hfft"], [128, 1, 1, "", "ifft"], [129, 1, 1, "", "ifft2"], [130, 1, 1, "", "ifftn"], [131, 1, 1, "", "ifftshift"], [132, 1, 1, "", "ihfft"], [133, 1, 1, "", "irfft"], [134, 1, 1, "", "irfft2"], [135, 1, 1, "", "irfftn"], [136, 1, 1, "", "rfft"], [137, 1, 1, "", "rfft2"], [138, 1, 1, "", "rfftfreq"], [139, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[143, 4, 1, "", "__eq__"], [143, 4, 1, "", "__ge__"], [143, 4, 1, "", "__getitem__"], [143, 4, 1, "", "__gt__"], [143, 4, 1, "", "__iter__"], [143, 4, 1, "", "__le__"], [143, 4, 1, "", "__lt__"], [143, 4, 1, "", "__ne__"], [143, 4, 1, "", "__next__"], [143, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[201, 1, 1, "", "cholesky"], [202, 1, 1, "", "cond"], [203, 1, 1, "", "cross"], [204, 1, 1, "", "det"], [205, 1, 1, "", "diagonal"], [206, 1, 1, "", "eig"], [207, 1, 1, "", "eigh"], [208, 1, 1, "", "eigvals"], [209, 1, 1, "", "eigvalsh"], [210, 1, 1, "", "inv"], [211, 1, 1, "", "lstsq"], [212, 1, 1, "", "matmul"], [213, 1, 1, "", "matrix_norm"], [214, 1, 1, "", "matrix_power"], [215, 1, 1, "", "matrix_rank"], [216, 1, 1, "", "multi_dot"], [217, 1, 1, "", "norm"], [218, 1, 1, "", "outer"], [219, 1, 1, "", "pinv"], [220, 1, 1, "", "qr"], [221, 1, 1, "", "slogdet"], [222, 1, 1, "", "solve"], [223, 1, 1, "", "svd"], [224, 1, 1, "", "svdvals"], [225, 1, 1, "", "tensordot"], [226, 1, 1, "", "tensorinv"], [227, 1, 1, "", "tensorsolve"], [228, 1, 1, "", "trace"], [229, 1, 1, "", "vecdot"], [230, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[273, 6, 1, "", "T"], [274, 4, 1, "", "__abs__"], [275, 4, 1, "", "__add__"], [276, 4, 1, "", "__and__"], [277, 4, 1, "", "__bool__"], [278, 4, 1, "", "__complex__"], [279, 4, 1, "", "__copy__"], [280, 4, 1, "", "__eq__"], [281, 4, 1, "", "__float__"], [282, 4, 1, "", "__floordiv__"], [283, 4, 1, "", "__ge__"], [284, 4, 1, "", "__getitem__"], [285, 4, 1, "", "__gt__"], [286, 4, 1, "", "__iadd__"], [287, 4, 1, "", "__iand__"], [288, 4, 1, "", "__ifloordiv__"], [289, 4, 1, "", "__ilshift__"], [290, 4, 1, "", "__imatmul__"], [291, 4, 1, "", "__imod__"], [292, 4, 1, "", "__imul__"], [293, 4, 1, "", "__int__"], [294, 4, 1, "", "__invert__"], [295, 4, 1, "", "__ior__"], [296, 4, 1, "", "__ipow__"], [297, 4, 1, "", "__irshift__"], [298, 4, 1, "", "__isub__"], [299, 4, 1, "", "__itruediv__"], [300, 4, 1, "", "__ixor__"], [301, 4, 1, "", "__le__"], [302, 4, 1, "", "__len__"], [303, 4, 1, "", "__lshift__"], [304, 4, 1, "", "__lt__"], [305, 4, 1, "", "__matmul__"], [306, 4, 1, "", "__mod__"], [307, 4, 1, "", "__mul__"], [308, 4, 1, "", "__ne__"], [309, 4, 1, "", "__neg__"], [310, 4, 1, "", "__new__"], [311, 4, 1, "", "__or__"], [312, 4, 1, "", "__pos__"], [313, 4, 1, "", "__pow__"], [314, 4, 1, "", "__radd__"], [315, 4, 1, "", "__rand__"], [316, 4, 1, "", "__repr__"], [317, 4, 1, "", "__rfloordiv__"], [318, 4, 1, "", "__rlshift__"], [319, 4, 1, "", "__rmatmul__"], [320, 4, 1, "", "__rmod__"], [321, 4, 1, "", "__rmul__"], [322, 4, 1, "", "__ror__"], [323, 4, 1, "", "__rpow__"], [324, 4, 1, "", "__rrshift__"], [325, 4, 1, "", "__rshift__"], [326, 4, 1, "", "__rsub__"], [327, 4, 1, "", "__rtruediv__"], [328, 4, 1, "", "__rxor__"], [329, 4, 1, "", "__setitem__"], [330, 4, 1, "", "__str__"], [331, 4, 1, "", "__sub__"], [332, 4, 1, "", "__truediv__"], [333, 4, 1, "", "__xor__"], [334, 4, 1, "", "all"], [335, 4, 1, "", "any"], [336, 4, 1, "", "argmax"], [337, 4, 1, "", "argmin"], [338, 4, 1, "", "argsort"], [339, 4, 1, "", "astype"], [340, 4, 1, "", "choose"], [341, 4, 1, "", "clip"], [342, 4, 1, "", "conj"], [343, 4, 1, "", "conjugate"], [344, 4, 1, "", "copy"], [345, 4, 1, "", "cumprod"], [346, 4, 1, "", "cumsum"], [347, 4, 1, "", "diagonal"], [348, 6, 1, "", "dtype"], [349, 4, 1, "", "fill"], [350, 6, 1, "", "flags"], [351, 6, 1, "", "flat"], [352, 4, 1, "", "flatten"], [353, 6, 1, "", "imag"], [354, 4, 1, "", "item"], [355, 6, 1, "", "itemsize"], [356, 6, 1, "", "mT"], [357, 4, 1, "", "max"], [358, 4, 1, "", "mean"], [359, 4, 1, "", "min"], [360, 6, 1, "", "nbytes"], [361, 6, 1, "", "ndim"], [362, 4, 1, "", "nonzero"], [363, 4, 1, "", "partition"], [364, 4, 1, "", "prod"], [365, 4, 1, "", "put"], [366, 4, 1, "", "ravel"], [367, 6, 1, "", "real"], [368, 4, 1, "", "repeat"], [369, 4, 1, "", "reshape"], [370, 4, 1, "", "round"], [371, 4, 1, "", "searchsorted"], [372, 6, 1, "", "shape"], [373, 6, 1, "", "size"], [374, 4, 1, "", "sort"], [375, 4, 1, "", "squeeze"], [376, 4, 1, "", "std"], [377, 6, 1, "", "strides"], [378, 4, 1, "", "sum"], [379, 4, 1, "", "swapaxes"], [380, 4, 1, "", "take"], [381, 4, 1, "", "trace"], [382, 4, 1, "", "transpose"], [383, 4, 1, "", "var"]], "dpnp.random": [[408, 2, 1, "", "RandomState"], [409, 1, 1, "", "beta"], [410, 1, 1, "", "binomial"], [411, 1, 1, "", "bytes"], [412, 1, 1, "", "chisquare"], [413, 1, 1, "", "choice"], [414, 1, 1, "", "dirichlet"], [415, 1, 1, "", "exponential"], [416, 1, 1, "", "f"], [417, 1, 1, "", "gamma"], [418, 1, 1, "", "geometric"], [419, 1, 1, "", "gumbel"], [420, 1, 1, "", "hypergeometric"], [421, 1, 1, "", "laplace"], [422, 1, 1, "", "logistic"], [423, 1, 1, "", "lognormal"], [424, 1, 1, "", "logseries"], [425, 1, 1, "", "multinomial"], [426, 1, 1, "", "multivariate_normal"], [427, 1, 1, "", "negative_binomial"], [428, 1, 1, "", "noncentral_chisquare"], [429, 1, 1, "", "noncentral_f"], [430, 1, 1, "", "normal"], [431, 1, 1, "", "pareto"], [432, 1, 1, "", "permutation"], [433, 1, 1, "", "poisson"], [434, 1, 1, "", "power"], [435, 1, 1, "", "rand"], [436, 1, 1, "", "randint"], [437, 1, 1, "", "randn"], [438, 1, 1, "", "random"], [439, 1, 1, "", "random_integers"], [440, 1, 1, "", "random_sample"], [441, 1, 1, "", "ranf"], [442, 1, 1, "", "rayleigh"], [443, 1, 1, "", "sample"], [444, 1, 1, "", "seed"], [445, 1, 1, "", "shuffle"], [446, 1, 1, "", "standard_cauchy"], [447, 1, 1, "", "standard_exponential"], [448, 1, 1, "", "standard_gamma"], [449, 1, 1, "", "standard_normal"], [450, 1, 1, "", "standard_t"], [451, 1, 1, "", "triangular"], [452, 1, 1, "", "uniform"], [453, 1, 1, "", "vonmises"], [454, 1, 1, "", "wald"], [455, 1, 1, "", "weibull"], [456, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[408, 4, 1, "", "__eq__"], [408, 4, 1, "", "__ge__"], [408, 4, 1, "", "__gt__"], [408, 4, 1, "", "__le__"], [408, 4, 1, "", "__lt__"], [408, 4, 1, "", "__ne__"], [408, 4, 1, "", "get_state"], [408, 4, 1, "", "get_sycl_device"], [408, 4, 1, "", "get_sycl_queue"], [408, 4, 1, "", "normal"], [408, 4, 1, "", "rand"], [408, 4, 1, "", "randint"], [408, 4, 1, "", "randn"], [408, 4, 1, "", "random_sample"], [408, 4, 1, "", "standard_normal"], [408, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 88, 91, 104, 107, 108, 123, 125, 127, 129, 130, 132, 134, 135, 137, 139, 140, 155, 156, 211, 215, 217, 219, 223, 224, 225, 348, 382, 408, 409, 410, 415, 416, 417, 419, 420, 421, 422, 423, 425, 427, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 466, 502, 503, 537], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 69, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 163, 165, 168, 169, 170, 171, 174, 177, 178, 179, 181, 184, 186, 187, 188, 189, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 344, 347, 349, 353, 354, 356, 367, 370, 372, 374, 376, 381, 382, 383, 384, 387, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 415, 417, 418, 419, 421, 422, 423, 425, 426, 427, 430, 432, 433, 434, 435, 438, 440, 441, 442, 443, 446, 449, 451, 452, 453, 458, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 527, 528, 529, 537], "00": [84, 110, 122, 482], "000": [260, 410], "00000000005e": 118, "00000000e": [122, 260], "000000082740371e": 118, "000000e": [84, 482], "00001e10": [17, 181], "0001e10": 181, "000e": 110, "000j": 260, "002": 260, "00867716": 412, "01": 110, "02": [110, 260], "03": 260, "03088525e": 111, "0396842": 243, "04": 110, "04719755": 407, "04921661": 408, "04923628": 483, "05": [17, 110, 181], "05846808": 483, "0614962j": [123, 137], "06310682": 408, "06682066": 483, "07": 260, "07944154": [89, 221], "08": [17, 84, 110, 148, 181, 426, 482], "08156915": 408, "08409186": 483, "08504448": 483, "08903844": 483, "0943951": 407, "09640474": 238, "09861229": [89, 221, 235], "0d": 34, "0dev1": 6, "0j": [20, 103, 104, 182, 183, 190, 191, 212, 246, 353, 367, 480], "0th": [225, 502], "1": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 185, 190, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 338, 339, 344, 347, 349, 352, 353, 354, 356, 361, 363, 367, 372, 374, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 412, 413, 415, 417, 419, 421, 422, 423, 425, 426, 427, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 447, 449, 452, 457, 458, 459, 460, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 60, 63, 73, 80, 89, 90, 91, 94, 96, 97, 100, 101, 104, 105, 107, 109, 110, 118, 119, 126, 138, 160, 163, 169, 170, 171, 176, 181, 194, 195, 197, 198, 228, 229, 233, 234, 235, 236, 243, 244, 251, 259, 369, 393, 402, 404, 408, 410, 420, 432, 462, 468, 469, 471, 474, 477, 489, 493, 499, 508, 509, 510, 512, 513, 514, 519, 524, 525, 527], "100": [96, 138, 163, 181, 195, 216, 243, 393, 420, 446, 460, 520], "1000": [69, 163, 216, 243, 409, 410, 415, 417, 419, 420, 421, 422, 423, 430, 431, 434, 436, 438, 441, 443, 449, 453, 454, 455, 456, 460, 506], "10000": [91, 216, 418, 433, 442, 452], "100000": 427, "1000000": [446, 448, 450, 451], "1024": 0, "10394325": 483, "105": 110, "11": [31, 32, 56, 85, 94, 96, 97, 104, 105, 119, 165, 171, 217, 228, 369, 427, 436, 474, 477, 484, 508, 509, 510, 512, 513, 514, 519, 525, 527], "110": [109, 178], "111111": 260, "113": 237, "11570901": 408, "11643488": 483, "1179187": 408, "118033988749895": 494, "119": 109, "1196081": 408, "12": [10, 31, 32, 55, 88, 93, 94, 96, 97, 101, 105, 107, 109, 119, 123, 137, 162, 171, 176, 196, 224, 243, 400, 402, 407, 432, 458, 477, 508, 509, 510, 512, 513, 514, 519, 525, 527], "120": [90, 93], "123": [104, 110, 354], "125": [148, 398, 399, 521], "12613779": 483, "127": 163, "128": [0, 163, 260], "12th": 109, "13": [10, 31, 32, 59, 61, 96, 97, 103, 105, 107, 109, 171, 179, 180, 212, 246, 458, 477, 509, 510, 513, 514, 518, 519, 525], "130": 109, "134": 178, "13436424": 408, "135": [29, 51], "13710533": 412, "139884456208480": 16, "13j": 460, "14": [31, 32, 58, 59, 61, 96, 97, 103, 105, 142, 171, 178, 180, 225, 477, 502, 509, 510, 513, 514, 519, 525], "140": 520, "140053638309840": 21, "14157194": 506, "14159265": [13, 24, 29, 51, 92, 407], "14423775e": 122, "14j": 460, "15": [31, 32, 91, 96, 97, 101, 105, 109, 127, 132, 171, 217, 234, 432, 477, 509, 510, 513, 514, 519, 525], "150": 93, "15591488": 483, "15888336": 243, "15j": 460, "16": [6, 58, 96, 97, 105, 107, 122, 148, 158, 163, 165, 171, 230, 259, 398, 399, 460, 478, 500, 509, 510, 513, 514, 519, 525], "1621": [458, 518], "16227766": [202, 462], "16394577": 408, "164": 238, "166": 238, "16j": 122, "17": [6, 122, 123, 137, 519], "17157288": [207, 209], "17281316e": 122, "177": [163, 243], "17j": 122, "18": [6, 90, 107, 108, 109, 125, 203, 213, 217, 243, 519], "180": [29, 51, 92, 93, 109, 406, 520, 544], "1805": 10, "18236388": 408, "18557831": 408, "1887902": 407, "18920668": 483, "19": [10, 86, 107, 458, 519, 520], "1923875335537315": 437, "19245009": 476, "1924881e": 148, "1965": 10, "19722458": 89, "1985": 217, "1d": [108, 403, 404, 499, 506], "1e": [17, 118, 181, 206, 234, 235, 237, 238, 426], "1e10": [17, 181], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 77, 78, 104, 133, 176, 182, 190, 206, 218, 223, 353, 367, 392, 459, 487, 491], "1th": [225, 502], "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 182, 185, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 339, 344, 347, 349, 352, 354, 356, 361, 363, 372, 373, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 406, 407, 408, 412, 416, 420, 426, 432, 435, 437, 448, 450, 451, 454, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 484, 485, 487, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529], "20": [60, 90, 101, 109, 138, 162, 177, 181, 195, 196, 197, 198, 217, 404, 410, 425, 477, 499, 519, 520], "20000": 410, "2007": 10, "200e": 110, "20477401j": [123, 137], "2048": 0, "21": [91, 107, 519], "210": 93, "215": 243, "21623621": 483, "21941987": 408, "21968665": 408, "22": [403, 458, 518, 519], "220": 520, "220446049250313e": 460, "222222": 260, "22460635e": 500, "22464680e": 122, "22497216": 217, "22776602": 243, "23": [408, 458, 519], "230": 109, "23387232": 483, "23598776": 407, "23606798": 217, "24": [31, 32, 88, 90, 104, 108, 109, 178, 195, 203, 225, 226, 228, 372, 400, 502, 504, 519], "240": 93, "24264069": 217, "24544512": 408, "247219128924647": 269, "25": [107, 109, 114, 124, 165, 169, 170, 210, 231, 259, 271, 437, 446, 478, 521, 522], "255": [58, 62], "25506903": 408, "256": [0, 163], "26": [64, 109], "260": 520, "26618007j": 236, "27": [70, 148, 243, 398, 399, 476, 521], "270": 93, "28": 109, "28000000e": 260, "2800000e": 260, "283185307179586": 520, "28318531": 520, "28352814": 408, "28904982": 238, "294": 6, "297": 10, "2d": [223, 246, 473, 517], "2e": 91, "2f": 0, "2j": [77, 78, 103, 122, 176, 182, 190, 207, 209, 212, 246, 459, 480, 487, 523], "2k": 520, "3": [0, 3, 4, 6, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 131, 132, 134, 135, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 160, 163, 165, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 185, 190, 191, 192, 194, 195, 198, 202, 203, 204, 205, 206, 210, 211, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 344, 347, 352, 354, 356, 361, 363, 372, 373, 374, 382, 384, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 403, 407, 408, 412, 416, 423, 426, 432, 435, 436, 437, 447, 451, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 481, 485, 486, 487, 489, 490, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "30": [88, 93, 104, 109, 138, 373, 404, 407, 499, 523], "300": [93, 520], "3003003": 461, "301": 10, "30102999566": 234, "3012989": 484, "30258509": [89, 244], "308": 260, "308j": 260, "31": [6, 64, 163, 458, 518], "312": 111, "316": 243, "32": [107, 109, 163, 225, 268, 270, 502], "33": 461, "330": [6, 93], "333": 216, "33333333": 260, "3333333e": 260, "33340275": 506, "33486982e": 122, "33836967": 408, "340": 520, "34074171": 408, "34132519": 243, "34846923": [213, 217], "34960421": 243, "35": [109, 418], "35106603e": [213, 217], "35348576": 230, "35355338": 476, "36": 88, "360": 520, "37": [458, 474, 518], "371139e": 84, "38": [178, 410], "380": 520, "38268343": 207, "38268343j": 207, "38629436": 89, "38885": 410, "389": 6, "389056099": [115, 118], "39295758": 408, "3e": [0, 91, 460], "3j": [103, 212, 246, 487], "3rd": [75, 76, 105, 489], "3x3": 245, "3x8000": 447, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 62, 65, 73, 74, 75, 76, 79, 82, 84, 86, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 144, 145, 148, 150, 151, 152, 156, 157, 158, 160, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 185, 190, 194, 195, 197, 200, 203, 204, 205, 210, 212, 213, 214, 215, 217, 221, 224, 225, 226, 227, 228, 230, 231, 236, 239, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 264, 266, 269, 271, 344, 347, 352, 356, 361, 363, 372, 374, 382, 384, 387, 389, 391, 393, 395, 398, 399, 400, 402, 403, 407, 408, 409, 412, 432, 437, 453, 457, 458, 459, 460, 463, 464, 466, 467, 471, 472, 473, 474, 475, 478, 480, 483, 485, 486, 489, 490, 493, 494, 495, 497, 498, 502, 503, 505, 506, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529], "40": [6, 60, 109, 138, 197, 198, 404, 499], "40882036": 408, "4096": 0, "41": [458, 483, 518], "41421356": [202, 217], "42": 478, "420": 520, "431": 6, "44": [396, 403], "4400": [109, 225, 502], "443469": 243, "44509285e": 122, "45": [20, 29, 51, 230], "4532": [109, 225, 502], "46": 109, "460": [6, 520], "46394577": 408, "464": 243, "4664": [109, 225, 502], "47": 6, "4730": [109, 225, 502], "4796": [109, 225, 502], "48": [6, 88], "48093112": 408, "4874": [109, 225, 502], "48927254": 408, "49": 6, "4928": [109, 225, 502], "49543509": 408, "49778714": 520, "499128": 103, "4d": 223, "4e": 460, "4j": [176, 459, 523], "4x4": [509, 513], "5": [0, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 66, 71, 73, 75, 76, 79, 82, 83, 86, 88, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 119, 123, 124, 126, 134, 137, 138, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 162, 163, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 185, 190, 194, 195, 197, 198, 201, 203, 205, 207, 209, 210, 216, 217, 218, 222, 225, 228, 229, 230, 231, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 266, 269, 339, 344, 354, 356, 373, 384, 387, 389, 390, 391, 392, 393, 395, 398, 399, 402, 403, 407, 408, 409, 410, 412, 415, 427, 431, 432, 433, 434, 437, 440, 455, 457, 458, 459, 460, 461, 463, 466, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 485, 487, 489, 493, 494, 496, 497, 498, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529], "50": [123, 137, 138, 163, 195, 225, 237, 238, 243, 404, 499, 502, 506, 527], "500": [195, 520], "5018": [109, 225, 502], "50455115": 483, "5091786": 85, "512": 0, "5162": [109, 225, 502], "52069395e": 122, "52359878": 407, "52928804": 408, "53": 6, "5306": [109, 225, 502], "5399045e": 148, "54": [6, 408], "540": 520, "54288406": 408, "54465213": 408, "545": 6, "548739": 484, "54930614": [30, 52], "55": [396, 403, 478], "5555555555555554": 271, "562": 243, "5620499351813308": [11, 12], "56920387": 408, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 407, 520], "58997253": 408, "591953": 85, "5e": [237, 238], "5j": [253, 389, 487], "6": [0, 4, 15, 22, 23, 31, 32, 34, 39, 53, 56, 62, 64, 66, 73, 75, 76, 82, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 118, 119, 124, 127, 138, 145, 148, 161, 162, 165, 171, 172, 176, 177, 178, 179, 185, 194, 195, 196, 203, 205, 213, 217, 219, 220, 223, 224, 225, 226, 228, 229, 230, 231, 243, 245, 247, 251, 263, 264, 268, 344, 354, 356, 372, 384, 387, 391, 393, 396, 398, 399, 402, 408, 425, 427, 432, 437, 457, 458, 459, 465, 466, 471, 472, 473, 474, 475, 478, 485, 487, 489, 493, 495, 496, 497, 498, 502, 504, 506, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 523, 524, 525, 526, 527, 529], "60": [88, 93, 109, 196, 225, 404, 499, 502, 520, 527], "600": 195, "60943791": 89, "61799388": 407, "62": 178, "6227766": 163, "62318272": 412, "62341325": 163, "624": 110, "63": 163, "63317787e": 500, "63522211": 408, "63836967": 408, "64": [0, 4, 109, 148, 163, 268, 270, 398, 399, 474], "64000": 109, "65745445": [14, 25], "66519143": 407, "6666666666666665": 266, "67": 109, "67305985": 155, "673174": 408, "67718303": 408, "69295758": 408, "69314718": [89, 221, 235], "6990877": 408, "6j": [176, 459, 523], "7": [15, 17, 22, 23, 39, 53, 66, 71, 73, 82, 86, 88, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 108, 115, 119, 145, 149, 163, 165, 171, 178, 179, 181, 194, 195, 205, 213, 217, 223, 225, 228, 230, 245, 247, 251, 256, 259, 354, 356, 387, 393, 401, 402, 408, 432, 458, 459, 463, 468, 470, 471, 473, 489, 495, 496, 497, 498, 502, 508, 509, 510, 512, 513, 514, 515, 516, 518, 519, 520, 523, 525, 527], "70": [195, 523, 527], "700": 195, "700e": 110, "70710677": [104, 353, 367], "70710678": [202, 206], "70710678j": 206, "70882036": 408, "71238898": 407, "718281828": [115, 118], "72": 88, "720": [90, 520], "72075441": 243, "72538256": [27, 47], "74165739": 217, "742278e": 482, "74596669": [213, 217], "74921661": 408, "75": [56, 114, 124, 165, 170, 210, 231], "754": 141, "75682673": 483, "75958653": 407, "76096244": 408, "76377462": 408, "77447665": 238, "78539816": [20, 28, 29, 50, 51, 520], "78927254": 408, "79175947": 89, "79769313e": 260, "7j": 401, "8": [4, 15, 17, 22, 39, 53, 70, 73, 82, 88, 94, 95, 96, 97, 99, 100, 104, 105, 107, 109, 110, 119, 122, 124, 138, 139, 145, 148, 163, 165, 171, 176, 179, 181, 194, 204, 205, 217, 221, 223, 224, 225, 226, 228, 229, 230, 231, 243, 245, 247, 356, 372, 387, 393, 398, 399, 400, 402, 408, 432, 451, 458, 459, 471, 473, 476, 482, 489, 498, 502, 504, 506, 508, 509, 510, 512, 513, 514, 518, 519, 520, 521, 524, 525, 527], "80": [107, 109, 527], "8000": 447, "80226506": 408, "8058837395885292": 230, "81715362": 408, "827941": [163, 243], "82842712": [207, 209], "84288406": 408, "84401099": 408, "84743374": 408, "84803548": 217, "85": 109, "86": 178, "87649168": 237, "88": 108, "88178420e": 122, "881943016134134": 230, "88194302": 230, "88997253": 408, "89920014": 412, "8f": 107, "8j": 523, "9": [4, 15, 22, 39, 53, 73, 82, 88, 91, 94, 95, 96, 97, 99, 102, 104, 105, 109, 111, 119, 122, 125, 126, 131, 142, 148, 150, 158, 163, 165, 171, 181, 194, 205, 206, 211, 213, 217, 219, 220, 223, 224, 225, 228, 230, 243, 245, 259, 260, 354, 387, 402, 408, 410, 412, 432, 458, 459, 471, 489, 490, 495, 502, 508, 509, 510, 512, 513, 514, 515, 518, 519, 520, 521, 525, 527], "90": [20, 93, 406, 473, 527], "917152": 501, "92387953": 207, "92387953j": 207, "93548928": 483, "94": 109, "94591015": 89, "95": 211, "95799250e": 122, "98": [212, 246], "98024613": 243, "99": [108, 235, 404], "99322285": [14, 25], "99532227": 114, "996272": 501, "99822295": [27, 47], "99853728": 114, "999": [110, 179], "9990000e": 260, "99959305": 114, "99989938": 114, "9999": 260, "99997791": 114, "999999e": 181, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 77, 78, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 104, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 171, 173, 174, 176, 177, 179, 180, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 205, 207, 208, 209, 211, 215, 216, 217, 220, 221, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 251, 253, 255, 256, 259, 263, 264, 268, 270, 339, 344, 352, 354, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 401, 406, 407, 408, 410, 427, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 457, 458, 459, 461, 463, 466, 469, 470, 473, 476, 480, 481, 482, 483, 484, 488, 489, 490, 491, 495, 497, 498, 500, 501, 502, 503, 505, 507, 509, 511, 513, 515, 516, 521, 524, 525, 527, 528, 529, 544], "AND": [16, 58, 59, 61, 62, 64, 180, 239, 240, 241, 242], "And": [4, 48, 49, 96, 104, 339, 509, 513], "As": 517, "Be": 206, "Being": 3, "But": [4, 107], "By": [31, 32, 42, 49, 88, 104, 123, 127, 129, 133, 135, 139, 163, 211, 231, 243, 246, 248, 250, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 339, 464, 471, 485, 494, 498, 507, 509, 511, 513, 522, 524], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 349, 352, 353, 354, 361, 367, 369, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537, 544], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 68, 73, 75, 76, 86, 88, 89, 90, 91, 94, 95, 99, 100, 103, 104, 105, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 151, 152, 154, 159, 163, 165, 169, 170, 171, 172, 176, 177, 178, 179, 181, 185, 188, 189, 190, 201, 203, 211, 213, 214, 215, 216, 217, 219, 220, 223, 225, 227, 228, 230, 231, 232, 243, 244, 248, 249, 250, 251, 252, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 356, 374, 395, 396, 400, 403, 404, 408, 430, 452, 459, 460, 462, 464, 465, 466, 467, 471, 474, 475, 477, 486, 489, 492, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 517, 520, 521, 522, 523, 524, 525, 526, 527, 537, 544], "In": [4, 10, 31, 32, 88, 90, 91, 109, 110, 128, 129, 130, 133, 135, 165, 201, 208, 216, 220, 238, 243, 263, 264, 266, 268, 270, 400, 403, 408, 452, 457, 458, 466, 467, 496, 498, 516], "It": [4, 10, 16, 21, 22, 31, 32, 73, 90, 91, 101, 103, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 165, 179, 207, 209, 238, 246, 250, 251, 261, 262, 263, 264, 265, 266, 267, 269, 271, 393, 400, 466, 467, 478, 488, 494, 496, 498, 522, 544], "Its": [73, 226, 404, 504], "NOT": [59, 61, 180, 239, 240, 241, 242], "No": [41, 42, 109, 201], "Not": [16, 21, 42, 184, 260, 263, 264, 265, 267, 268, 270, 400], "OR": [21, 58, 59, 61, 62, 64, 180, 239, 240, 241, 242], "On": 4, "One": [53, 54, 55, 88, 106, 107, 133, 218, 393, 466], "Ones": 36, "Or": [165, 506], "That": 245, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 180, 181, 183, 184, 185, 186, 187, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 339, 344, 353, 356, 361, 363, 367, 372, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 411, 413, 414, 424, 429, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 524, 526, 527, 528, 529, 537, 540, 544], "Then": [10, 43, 45, 245], "There": [10, 231, 517], "These": [4, 22, 107, 109, 110, 117, 245, 258, 404, 499, 509, 513, 537, 540], "To": [4, 127, 133, 135, 148, 387, 520], "With": [31, 32, 56, 86, 171, 213, 217, 230, 248, 254, 261, 262, 268, 270, 400, 496, 525], "_": [0, 170, 493, 506], "__array_interface__": 107, "__bool__": 537, "__dlpack__": 154, "__dlpack_device__": 154, "__eq__": [104, 107, 143, 408], "__ge__": [104, 107, 143, 408], "__getitem__": [104, 107, 143], "__gt__": [104, 107, 143, 408], "__iter__": 143, "__le__": [104, 107, 143, 408], "__len__": [104, 107], "__lt__": [104, 107, 143, 408], "__main__": 0, "__name__": 0, "__ne__": [104, 107, 143, 408], "__next__": 143, "__setitem__": [104, 143], "__sycl_usm_array_interface__": 44, "_core": 107, "_dtypes_list": 0, "_f": 217, "a1": [37, 38], "a2": [37, 38], "a_": [10, 217], "a_ax": [225, 502], "a_i": [229, 524], "a_k": 10, "a_m": 10, "a_resamp": 133, "ab": [6, 10, 12, 17, 181, 217], "abc": 109, "abcd": 110, "abl": 217, "about": [43, 45, 104, 141, 206, 350, 393, 465, 537], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 89, 95, 98, 125, 130, 135, 139, 177, 205, 220, 228, 244, 260, 462, 507, 508, 512], "absolut": [6, 11, 17, 20, 121, 162, 181, 196, 221, 269, 271, 401, 460, 494, 520, 522, 544], "accept": [33, 109, 218, 408, 486, 509, 513], "access": [10, 96, 97, 140, 245, 509, 513, 537], "accord": [16, 21, 56, 63, 69, 107, 139, 141, 206, 207, 208, 209, 244, 250, 251, 266, 269, 271, 393, 462, 469, 494, 522], "accordingli": [88, 265, 267], "account": [457, 466], "accumul": [89, 90, 91, 109, 169, 228, 263, 264, 268, 270, 400, 496, 504], "accur": [107, 118, 165, 235, 237], "accuraci": [128, 129, 130, 133, 135], "achiev": 109, "aco": [6, 24], "acosh": [6, 25], "across": [99, 170, 263, 264, 268, 270], "activ": 4, "actual": [107, 169, 170, 201, 216], "ad": [17, 107, 110, 117, 133, 181, 204, 221, 238, 520, 540], "add": [6, 107, 544], "addit": [89, 201, 266, 517], "address": 107, "adjac": [205, 228, 488, 520], "advanc": 109, "advers": 109, "advis": 4, "affect": [23, 99, 109, 140, 169, 170], "after": [106, 140, 386, 393, 427, 471], "after_1": 393, "after_n": 393, "ag": 107, "against": [17, 31, 32, 65, 66, 67, 73, 86, 164, 181, 213, 217, 219, 230, 248, 254, 261, 262, 268, 270, 400, 404, 496, 499], "ai": [3, 404, 499], "ai_max": 499, "ai_min": 499, "ainv": [210, 226], "al": 10, "algebra": [530, 540], "algorithm": [10, 33, 109, 110, 122, 128, 136, 486], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 60, 61, 63, 75, 76, 102, 112, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 161, 180, 198, 256, 272, 391, 395, 398, 399, 408, 438, 441, 443, 457, 463, 466, 469, 475, 505, 515, 520, 526, 529], "alias": [9, 127, 128, 133, 135, 483], "align": 107, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 74, 86, 93, 100, 104, 106, 107, 109, 110, 115, 116, 118, 120, 125, 126, 130, 131, 134, 135, 139, 140, 145, 146, 147, 155, 156, 158, 163, 165, 172, 174, 176, 194, 201, 203, 215, 219, 230, 231, 243, 248, 251, 254, 261, 262, 265, 267, 339, 342, 349, 363, 393, 400, 410, 459, 460, 471, 475, 478, 492, 496, 517, 519, 524, 526, 537, 544], "allclos": [6, 37, 181, 210, 219, 220, 222, 223, 227], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 80, 89, 95, 96, 98, 104, 111, 112, 120, 124, 138, 142, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 188, 189, 231, 232, 243, 244, 245, 250, 251, 253, 266, 269, 271, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 462, 492, 494, 507, 509, 513, 521, 522, 524, 528, 529], "allow": [39, 49, 94, 104, 109, 169, 170, 185, 238, 245, 251, 339, 369, 498, 537], "almost": [34, 206, 509], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 74, 75, 76, 86, 89, 90, 91, 94, 95, 96, 98, 99, 100, 104, 105, 106, 108, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 145, 146, 147, 151, 152, 157, 163, 165, 171, 172, 177, 179, 217, 220, 225, 226, 227, 228, 229, 230, 231, 243, 244, 248, 249, 250, 251, 252, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 336, 337, 338, 345, 346, 357, 359, 364, 365, 373, 376, 378, 380, 381, 383, 393, 396, 400, 402, 403, 404, 457, 462, 464, 471, 472, 473, 475, 478, 485, 486, 489, 493, 494, 496, 498, 499, 502, 503, 504, 506, 509, 510, 513, 514, 517, 519, 520, 522, 524, 525, 526, 537], "alpha": [409, 414, 415, 431, 434], "alreadi": [4, 10, 41, 42, 53, 54, 55, 392, 393, 517], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 81, 102, 104, 107, 109, 113, 117, 125, 130, 134, 135, 136, 139, 148, 150, 151, 152, 153, 157, 159, 162, 165, 166, 167, 168, 169, 173, 181, 185, 196, 198, 199, 200, 201, 237, 238, 245, 249, 255, 256, 258, 259, 372, 387, 388, 398, 399, 446, 463, 469, 483, 495, 498, 515, 517, 537], "alter": 99, "altern": [3, 4, 16, 21, 90, 91, 103, 104, 246, 248, 250, 251, 254, 263, 264, 266, 268, 269, 270, 271, 382, 400, 494, 496, 522], "although": [20, 107, 129, 130, 131, 503], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 99, 104, 105, 108, 121, 148, 154, 171, 207, 209, 269, 271, 339, 387, 466, 487, 494, 522, 525], "amax": [6, 248], "ambigu": 537, "amin": [6, 254], "among": 108, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 191, 194, 196, 197, 198, 199, 200, 203, 204, 205, 208, 211, 215, 216, 217, 219, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 338, 339, 340, 341, 344, 354, 357, 361, 363, 365, 368, 369, 372, 373, 374, 375, 379, 380, 382, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410, 415, 416, 418, 427, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 537, 544], "anaconda": 3, "analog": [123, 125, 127, 129, 130, 132], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 92, 93, 176, 406, 407, 459, 460, 520, 544], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 65, 66, 67, 80, 95, 98, 100, 104, 107, 109, 110, 123, 125, 129, 130, 135, 139, 140, 160, 161, 163, 165, 170, 172, 183, 191, 192, 214, 227, 231, 243, 245, 265, 267, 339, 361, 393, 408, 452, 465, 483, 488, 521, 537], "anoth": [4, 82, 104, 119, 129, 130, 154, 344, 365, 396, 403, 472], "answer": 410, "anti": [99, 140, 205, 483], "anyth": 107, "ap": 211, "apart": 506, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 88, 95, 96, 98, 99, 104, 107, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 203, 205, 212, 213, 218, 219, 228, 229, 230, 231, 232, 243, 245, 246, 253, 339, 344, 389, 390, 391, 392, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 504, 507, 509, 513, 521, 523, 524, 528, 529], "appear": [117, 146, 147, 517], "append": [0, 6, 60, 94, 100, 108, 110, 117, 128, 129, 130, 179, 198, 205], "appli": [31, 32, 33, 56, 69, 94, 109, 225, 260, 458, 467, 468, 486, 502, 506], "applic": [10, 107, 483], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [104, 107, 128, 129, 130, 372], "appropri": [4, 31, 32, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 164, 227, 261, 262, 265, 267, 408, 436, 439, 467, 498, 537], "approxim": [141, 506], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 162, 163, 165, 166, 167, 168, 169, 170, 173, 178, 180, 181, 184, 185, 186, 187, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 362, 363, 372, 384, 385, 386, 387, 388, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 431, 433, 434, 436, 439, 440, 442, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 467, 469, 470, 471, 474, 475, 476, 477, 478, 480, 481, 482, 485, 486, 488, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 526, 527, 537, 544], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 73, 81, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 109, 113, 115, 116, 118, 119, 122, 144, 145, 148, 153, 161, 162, 163, 165, 169, 171, 177, 178, 179, 194, 195, 196, 197, 205, 212, 213, 217, 225, 228, 230, 231, 234, 235, 239, 240, 241, 242, 243, 245, 246, 248, 252, 254, 256, 259, 347, 356, 388, 391, 393, 396, 398, 399, 403, 407, 432, 463, 465, 466, 468, 471, 473, 478, 489, 495, 502, 504, 506, 509, 510, 513, 514, 515, 519, 525, 527, 529], "arbitrari": [48, 103, 107, 109, 178, 246, 468, 509, 513], "arbitrarili": 109, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 84], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 85], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 482], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 484], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 500], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 501], "area": 506, "arg": [65, 66, 104, 194, 354, 408], "arg1": 193, "arg2": 193, "argmax": [0, 6, 32, 104, 261, 404, 499, 537], "argmin": [6, 31, 104, 262, 499, 537], "argpartit": [6, 33, 404, 499, 537], "argsort": [6, 104, 395, 404, 477, 486, 499, 505, 537], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 73, 75, 76, 81, 84, 85, 92, 93, 102, 103, 104, 107, 110, 114, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 162, 168, 173, 176, 180, 192, 193, 196, 197, 198, 203, 205, 212, 216, 217, 218, 225, 228, 229, 234, 235, 236, 237, 238, 245, 246, 249, 255, 256, 257, 259, 354, 369, 382, 385, 386, 393, 397, 398, 399, 401, 403, 406, 407, 459, 460, 461, 463, 466, 468, 469, 470, 476, 480, 481, 482, 483, 484, 488, 493, 495, 500, 501, 502, 506, 515, 516, 524, 537, 544], "argwher": [6, 387], "ari": [39, 53, 54, 55, 105, 108, 171, 489, 525], "arithmet": [56, 163, 250, 251, 266, 269, 271, 397, 494, 496, 522, 530, 540], "around": [6, 104, 163, 393, 403, 458, 474], "arr": [22, 42, 94, 97, 107, 170, 179, 405, 432, 457, 458, 510, 514, 519], "arr2": [107, 519], "arr_t": [49, 104, 339], "arraiarray2str": 6, "array_equ": [6, 179], "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 80, 82, 95, 98, 108, 119, 160, 161, 163, 179, 183, 191, 225, 231, 243, 384, 393, 396, 403, 404, 408, 473, 479, 485, 498, 502, 521], "array_of_diagon": 99, "array_repr": 6, "array_split": [6, 75, 76, 489], "array_str": 6, "array_util": 68, "arrays_and_dtyp": 468, "art": 10, "asanyarrai": [6, 41, 42, 45, 465], "asarrai": [4, 6, 40, 42, 43, 45, 48, 384, 465, 485], "asarray_chkfinit": [6, 40, 41], "ascend": [207, 209, 477], "ascii": 107, "ascontiguousarrai": [6, 40, 41, 42, 45, 465], "asfarrai": [40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 465], "asin": [6, 26], "asinh": [6, 27], "asmatrix": 6, "asnumpi": 104, "aspect": 107, "assembl": [75, 76, 106, 172, 475, 493, 519, 526], "assert": 251, "assign": [104, 349, 372, 509, 513], "associ": [56, 169, 170, 537], "assum": [10, 56, 88, 110, 127, 133, 135, 205, 215, 219, 223, 245, 506], "astyp": [6, 104, 163, 387], "atan": [6, 28], "atan2": [6, 29], "atanh": [6, 30], "atleast_1d": [6, 54, 55, 117], "atleast_2d": [6, 53, 55, 117], "atleast_3d": [6, 53, 54, 117], "atol": [17, 181], "attain": 0, "attempt": [103, 216], "attribut": [104, 107, 112, 141, 161, 175, 220, 391, 529, 530], "automat": [169, 170], "avail": [2, 3, 4, 10, 83, 87, 107, 114, 257, 261, 262, 265, 267, 268, 530, 537], "averag": [6, 104, 250, 251, 266, 358, 496, 540], "avg": 56, "avoid": [36, 41, 54, 55, 127, 133, 135, 466], "aweight": 87, "ax": [16, 21, 31, 32, 56, 86, 88, 89, 100, 103, 104, 109, 117, 123, 125, 126, 129, 130, 131, 134, 135, 137, 139, 145, 165, 178, 203, 213, 217, 222, 225, 226, 227, 228, 230, 244, 246, 247, 248, 250, 251, 254, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 379, 382, 392, 393, 395, 400, 462, 467, 471, 472, 473, 492, 494, 496, 497, 502, 503, 504, 505, 517, 522, 524], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 74, 75, 76, 86, 88, 89, 90, 91, 94, 99, 100, 104, 105, 106, 108, 109, 117, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 145, 146, 147, 151, 152, 157, 163, 165, 171, 172, 177, 179, 203, 211, 217, 225, 229, 230, 231, 243, 244, 246, 248, 249, 250, 251, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 334, 335, 336, 337, 338, 345, 346, 352, 357, 358, 359, 363, 364, 365, 368, 373, 374, 375, 376, 378, 380, 382, 383, 393, 394, 395, 396, 400, 402, 403, 404, 457, 462, 464, 466, 467, 471, 472, 473, 475, 478, 485, 486, 489, 492, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 517, 519, 520, 522, 524, 525, 526, 537], "axis1": [99, 104, 347, 379, 381, 497, 504], "axis2": [99, 104, 347, 379, 381, 497, 504], "axisa": 88, "axisb": 88, "axisc": 88, "axiserror": [33, 486], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 64, 74, 75, 76, 82, 88, 91, 103, 104, 106, 107, 109, 110, 113, 155, 156, 166, 167, 172, 178, 179, 181, 185, 195, 199, 200, 203, 204, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 239, 241, 246, 247, 248, 251, 254, 386, 388, 392, 398, 399, 409, 468, 475, 488, 493, 502, 503, 511, 523, 524, 526, 544], "b_ax": [225, 502], "b_i": [229, 524], "back": [104, 157, 352, 457, 466, 467, 472, 511], "backend": [2, 164, 411, 413, 414, 424, 429, 445], "backward": [10, 49, 104, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 165, 339, 466, 471, 472], "bad": 420, "baltimor": 217, "bandlimit": 483, "bartlett": 6, "base": [0, 4, 107, 109, 116, 119, 148, 163, 169, 170, 223, 233, 234, 235, 236, 237, 238, 243, 244, 246, 396, 398, 399, 403, 405, 524], "base_repr": 6, "basic": [69, 109, 537, 540], "batch": 230, "bc": [204, 221], "bcde": 110, "becaus": [10, 16, 21, 127, 133, 135, 520, 537], "becom": [10, 104, 169, 382], "been": [106, 404, 472, 499], "befor": [4, 22, 33, 75, 76, 89, 104, 108, 128, 129, 130, 146, 147, 179, 227, 244, 248, 254, 269, 271, 363, 374, 393, 400, 462, 471, 472, 486, 494, 496, 503, 522, 523], "before_1": 393, "before_n": 393, "begin": [108, 110, 163, 231, 243, 393, 478], "behav": [179, 232, 403], "behavior": [33, 104, 137, 228, 260, 344, 467, 486, 503], "behind": [104, 363], "being": [3, 107, 151, 152, 249, 255, 393], "belong": [101, 169], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 95, 98, 107, 133, 205, 215, 217, 228, 507, 508, 512, 520, 537], "best": 110, "beta": [6, 419], "between": [17, 23, 39, 68, 69, 100, 108, 141, 156, 159, 165, 178, 179, 181, 231, 243, 393, 425, 439, 488, 495, 506, 520], "beyond": [4, 471], "bia": 87, "big": 107, "bin": [101, 122, 124, 138, 169, 170, 446], "bin_edg": [169, 170], "binari": [58, 62, 64, 155, 156, 158, 159], "binary_repr": 6, "bincount": [6, 101, 169], "binomi": [6, 427], "bins_0": 170, "bins_1": 170, "bit": [58, 59, 60, 61, 62, 63, 64, 107, 141, 175, 180, 198, 239, 241, 242, 268, 270, 469, 481, 530, 540], "bitwis": [58, 62, 64], "bitwise_and": [6, 59, 61, 62, 64, 180, 239], "bitwise_count": 6, "bitwise_invert": [6, 61, 180], "bitwise_left_shift": [6, 198], "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 64, 180, 241], "bitwise_right_shift": [6, 469], "bitwise_xor": [6, 58, 59, 61, 62, 180, 242], "biufcmmosuv": 107, "blackman": 6, "block": [6, 75, 76, 106, 140, 172, 195, 475, 493, 519, 526], "bmat": 6, "bool": [9, 16, 17, 20, 21, 31, 32, 33, 36, 37, 38, 41, 44, 49, 56, 69, 82, 86, 89, 94, 101, 104, 107, 110, 113, 140, 154, 163, 166, 167, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 199, 200, 201, 213, 215, 217, 219, 223, 230, 231, 243, 244, 248, 250, 251, 252, 254, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 339, 387, 388, 400, 462, 466, 478, 481, 486, 494, 496, 498, 517, 521, 522, 537], "bool_": 9, "boolean": [58, 59, 61, 62, 64, 82, 89, 94, 107, 119, 148, 154, 177, 180, 181, 184, 186, 187, 188, 189, 190, 194, 239, 241, 244, 245, 250, 251, 266, 268, 269, 271, 387, 396, 462, 494, 498, 522], "boolean_sequ": 194, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 73, 81, 88, 102, 103, 113, 129, 136, 148, 150, 151, 152, 153, 162, 166, 167, 168, 173, 178, 181, 195, 196, 197, 198, 199, 200, 212, 217, 225, 237, 238, 239, 241, 242, 246, 249, 255, 256, 259, 270, 386, 388, 398, 399, 463, 466, 469, 495, 502, 504, 509, 511, 513, 515, 523, 524, 527], "bound": [403, 404, 458, 477, 498, 499], "boundari": [165, 403, 458], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 537, "broadcast": [15, 16, 21, 31, 32, 38, 56, 65, 66, 67, 73, 82, 86, 102, 109, 119, 148, 151, 152, 173, 188, 189, 212, 213, 217, 219, 230, 242, 244, 246, 248, 249, 250, 251, 254, 255, 259, 261, 262, 266, 268, 269, 270, 271, 398, 399, 400, 403, 404, 462, 464, 494, 495, 496, 499, 503, 515, 522, 524, 527], "broadcast_arrai": [6, 66, 67], "broadcast_shap": 6, "broadcast_to": [6, 65, 66, 503], "brought": 10, "buffer": [44, 90, 91, 104, 154, 155, 156, 158, 159, 232, 248, 254, 263, 264], "buffer_lik": 155, "buffererror": 154, "build": 540, "build_loc": 4, "built": 107, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 68, 104, 107, 109, 155, 156, 232, 339, 355, 360], "byteord": 107, "byteswap": 6, "bz2": 232, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 88, 92, 93, 102, 103, 104, 107, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 160, 161, 162, 164, 166, 167, 168, 173, 176, 178, 180, 184, 185, 186, 187, 195, 196, 197, 198, 199, 200, 204, 211, 216, 217, 221, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 255, 256, 259, 339, 344, 352, 366, 369, 385, 386, 387, 388, 390, 391, 397, 398, 399, 401, 406, 407, 457, 458, 459, 461, 463, 465, 466, 467, 469, 470, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 502, 503, 515, 516, 517, 518, 524, 527, 528, 529, 544], "c_contigu": [43, 45, 104, 344, 465], "ca": 79, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 88, 89, 91, 100, 102, 108, 109, 113, 115, 116, 118, 122, 131, 148, 149, 150, 153, 165, 170, 173, 206, 207, 208, 209, 211, 217, 219, 235, 237, 238, 244, 246, 250, 251, 256, 259, 266, 269, 271, 388, 393, 398, 399, 400, 462, 463, 494, 495, 515, 522, 523, 530, 544], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 107, 128, 129, 130, 133, 136, 157, 179, 206, 208, 216, 224, 245, 251, 279, 387, 492, 498, 503, 506, 544], "callabl": [157, 245], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 69, 80, 81, 88, 95, 96, 98, 99, 102, 103, 104, 107, 109, 110, 111, 112, 113, 120, 122, 123, 124, 125, 128, 129, 130, 133, 134, 135, 138, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 172, 173, 174, 177, 178, 180, 181, 183, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 205, 210, 211, 214, 215, 217, 219, 225, 227, 228, 231, 232, 237, 238, 239, 241, 242, 243, 245, 246, 249, 253, 255, 256, 259, 268, 270, 339, 344, 372, 374, 385, 386, 387, 388, 389, 390, 391, 397, 398, 399, 404, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 457, 458, 463, 465, 466, 469, 486, 488, 495, 498, 499, 502, 504, 506, 507, 509, 513, 514, 515, 517, 521, 523, 527, 528, 529, 537, 544], "can_cast": [6, 540], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 75, 76, 261, 262, 466, 489, 492, 493], "capabl": [23, 36, 40, 41, 43, 45, 56, 121, 163, 231, 243, 246, 524], "cardin": 483, "cardinali": 483, "care": [23, 206], "cartesian": 252, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 80, 88, 90, 91, 95, 98, 100, 104, 109, 110, 111, 112, 120, 124, 127, 132, 136, 138, 155, 156, 157, 158, 160, 161, 163, 165, 174, 206, 220, 223, 225, 231, 232, 238, 243, 253, 263, 264, 268, 270, 354, 389, 390, 391, 400, 457, 466, 467, 496, 502, 507, 520, 521, 528, 529, 537], "cast": [16, 21, 49, 69, 75, 76, 82, 89, 90, 91, 104, 109, 148, 172, 179, 206, 244, 246, 250, 251, 260, 263, 264, 266, 268, 269, 270, 271, 339, 400, 462, 475, 493, 494, 496, 522, 524, 526], "cat": [410, 427], "cauchi": 446, "cbrt": [6, 490], "cdef": 110, "cdot": [225, 229, 502, 524], "cdoubl": 9, "ceil": [6, 35, 142, 149, 150, 470, 474, 516], "center": [123, 124, 125, 126, 130, 131, 138], "central": [165, 428, 429], "certain": [107, 245], "ch": 10, "chain": [103, 104, 109, 110], "chang": [49, 80, 88, 104, 107, 109, 119, 263, 264, 339, 352, 377, 382, 385, 396, 397, 403, 404, 405, 457, 466, 467, 472, 520, 540], "char": 107, "charact": [107, 156], "check": [16, 21, 40, 41, 42, 69, 127, 183, 185, 191, 201, 219, 222, 537], "check_valid": 426, "chi": [412, 428], "chisquar": 6, "choic": [6, 72, 104, 122, 123, 125, 128, 129, 130, 134, 135, 137, 139, 207, 209, 340], "choicelist": 478, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 104, 110, 478, 527, 537], "chosen": [34, 169, 517, 527], "circ": 544, "circl": [221, 506], "clamp": [403, 404, 498, 499], "clariti": 140, "class": [3, 4, 104, 107, 143, 155, 156, 157, 159, 177, 232, 408, 436, 507, 540], "classic": 109, "clear": [107, 197, 537], "clip": [6, 104, 403, 404, 458, 498, 499, 537], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 104, 109, 117, 176, 231, 339, 408, 436, 459, 460, 470, 474, 506], "closer": 516, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 85, 208, 482, 500, 506], "coars": [218, 392], "code": [44, 107, 193, 465], "codeplai": 4, "coeffici": [211, 222, 227], "coerc": [44, 155, 156, 157, 158, 159, 232], "coin": 410, "col": 177, "collaps": [104, 352, 517], "column": [6, 40, 41, 42, 43, 45, 48, 49, 74, 75, 76, 90, 91, 99, 104, 106, 120, 140, 146, 147, 165, 171, 172, 174, 206, 207, 211, 216, 220, 223, 339, 457, 458, 465, 475, 489, 493, 507, 509, 513, 518, 521, 526], "column_stack": [6, 75, 76, 106, 172, 475, 493, 526], "com": 4, "combin": [0, 107, 117, 125, 130, 135, 139, 165], "combinatori": 110, "come": 517, "comma": [107, 109], "command": 4, "common": [128, 129, 130, 162, 196, 225, 387, 502], "common_typ": 6, "compani": [410, 427], "compar": [17, 33, 37, 113, 151, 152, 170, 181, 218, 249, 255, 486], "comparison": [2, 113, 166, 167, 199, 200, 388, 530, 540], "compat": [3, 4, 10, 16, 21, 49, 56, 88, 99, 104, 203, 205, 212, 213, 218, 219, 228, 229, 230, 244, 246, 250, 251, 265, 266, 267, 269, 271, 339, 392, 462, 466, 494, 504, 522, 523, 524, 540], "compil": [4, 107, 164, 465], "complement": 520, "complementari": [150, 520], "complet": [3, 4, 110, 156, 157, 220, 472, 537], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 46, 47, 50, 51, 52, 69, 89, 103, 104, 107, 110, 114, 121, 122, 123, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 148, 151, 152, 176, 182, 183, 190, 191, 197, 206, 207, 208, 209, 212, 220, 221, 223, 229, 244, 246, 249, 255, 260, 269, 271, 342, 343, 401, 459, 460, 462, 487, 494, 517, 522, 523, 524, 537, 540], "complex128": [9, 56, 468], "complex64": [9, 56, 68, 104, 148, 373], "compliant": 104, "complic": [109, 544], "compon": [10, 37, 88, 126, 131, 138, 141, 176, 215, 225, 260, 459, 502], "compos": 81, "composit": [91, 195, 496, 506], "compress": [6, 119, 478, 498, 537], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 64, 70, 77, 78, 84, 85, 89, 90, 91, 100, 101, 109, 115, 116, 117, 118, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 149, 165, 166, 167, 168, 169, 170, 176, 177, 180, 195, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 240, 241, 242, 244, 246, 250, 251, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 385, 392, 397, 401, 459, 461, 462, 463, 470, 474, 476, 480, 481, 482, 484, 490, 494, 496, 500, 501, 502, 506, 509, 513, 522, 524], "compute_uv": [202, 223, 224], "concat": [6, 76], "concaten": [6, 74, 75, 106, 172, 179, 475, 489, 493, 499, 519, 526], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529, 537], "cond": [6, 210], "condit": [34, 49, 103, 104, 119, 202, 210, 216, 339, 387, 396, 403, 405, 478, 527], "condlist": 478, "confus": 153, "conj": [6, 78, 104, 127, 176, 201, 206, 401], "conjug": [6, 10, 77, 103, 104, 133, 136, 176, 201, 206, 207, 208, 209, 212, 229, 246, 342, 401, 523, 524], "consecut": [100, 108, 165], "conserv": 252, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 110, 138, 163, 181, 184, 207, 209, 215, 231, 243, 246, 408, 436, 467, 488, 517, 524], "consist": [37, 38, 108, 122, 123, 125, 128, 129, 130, 134, 135, 137, 139, 156, 170, 225, 227, 231, 499, 502], "constant": [9, 107, 165, 393], "constant_valu": 393, "constraint": 56, "construct": [40, 41, 42, 72, 95, 98, 99, 104, 107, 120, 155, 156, 157, 158, 159, 174, 194, 197, 232, 253, 340, 389, 478, 483, 503, 504, 527, 530], "constructor": 537, "consum": [104, 360], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 81, 82, 84, 85, 88, 89, 99, 102, 104, 107, 113, 115, 116, 118, 123, 124, 125, 128, 133, 136, 138, 144, 148, 149, 150, 151, 152, 153, 154, 159, 164, 165, 166, 167, 169, 170, 173, 176, 177, 180, 198, 199, 200, 203, 205, 207, 220, 223, 225, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 249, 250, 255, 256, 259, 261, 262, 265, 266, 267, 269, 271, 369, 385, 387, 388, 395, 397, 398, 399, 401, 408, 459, 461, 462, 463, 469, 470, 474, 476, 480, 481, 482, 483, 484, 490, 491, 494, 495, 500, 501, 502, 505, 509, 510, 513, 514, 515, 516, 522, 537], "content": [43, 104, 251, 445], "context": 10, "contigu": [40, 41, 42, 43, 45, 68, 103, 104, 109, 185, 216, 366, 457, 465, 466], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 408, 440, 483], "contourf": 252, "contract": [109, 110, 225, 502], "contrari": [203, 205, 212, 228, 229], "contrast": [109, 403], "contribut": [10, 56, 169, 170], "control": [4, 49, 69, 75, 76, 82, 104, 109, 172, 246, 339, 475, 493, 524, 526], "conveni": [104, 382, 408], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 103, 109, 110, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 178, 212, 225, 227, 246, 392, 502, 524], "convers": [49, 104, 109, 339, 530], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 80, 92, 93, 95, 98, 107, 109, 110, 117, 160, 161, 163, 179, 183, 191, 231, 243, 406, 407, 458, 465, 518, 520, 521], "convolut": [10, 79, 83], "convolv": [6, 83], "coolei": 10, "coordin": [86, 157, 165, 177, 194, 252, 458, 518], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 82, 94, 95, 96, 98, 99, 104, 107, 111, 112, 119, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 179, 231, 232, 243, 245, 251, 252, 253, 260, 279, 339, 352, 354, 363, 369, 372, 389, 390, 391, 394, 396, 397, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 457, 465, 466, 467, 477, 486, 492, 507, 508, 509, 512, 513, 521, 528, 529, 537], "copysign": [6, 385, 397], "copyto": [6, 104, 119, 344, 396], "core": [3, 109, 524, 537], "corner": [123, 125, 129, 130, 393], "corrcoef": [6, 87], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 75, 76, 77, 78, 81, 84, 85, 92, 93, 102, 113, 115, 116, 118, 121, 127, 133, 135, 142, 148, 149, 150, 151, 152, 153, 162, 166, 167, 168, 173, 176, 180, 184, 186, 187, 196, 197, 198, 199, 200, 222, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 255, 256, 259, 385, 386, 388, 397, 398, 399, 401, 406, 407, 459, 461, 463, 465, 469, 470, 474, 476, 480, 481, 482, 483, 484, 488, 490, 491, 493, 495, 500, 501, 515, 516], "correctli": [20, 26, 28, 31, 32, 46, 50, 86, 213, 217, 230, 248, 254, 261, 262, 268, 270, 387, 400, 496], "correl": [6, 540], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 73, 75, 76, 80, 92, 93, 95, 96, 98, 99, 104, 105, 111, 112, 120, 123, 124, 125, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 171, 174, 177, 194, 203, 206, 207, 225, 229, 231, 232, 243, 245, 246, 253, 339, 344, 348, 389, 390, 391, 395, 406, 407, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 471, 478, 479, 489, 494, 502, 505, 506, 507, 509, 513, 521, 522, 524, 525, 528, 529, 537], "correspondingli": [10, 489], "cosh": [6, 14, 25, 84, 484, 501], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 482, 484, 500, 501], "cost": [109, 110], "costli": 110, "could": [104, 127, 133, 135, 374], "count": [16, 21, 57, 86, 101, 107, 110, 145, 155, 156, 158, 159, 165, 169, 170, 387, 400, 410, 485, 496, 517, 530, 540], "count_nonzero": [6, 387], "counterclockwis": [146, 147, 473], "counterpart": [10, 127, 133, 135, 537], "cov": [6, 426], "covari": 87, "cover": [509, 513, 540], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 80, 83, 87, 95, 98, 111, 112, 114, 120, 124, 138, 155, 156, 157, 158, 160, 161, 163, 174, 231, 232, 243, 253, 257, 268, 389, 390, 391, 507, 521, 528, 529], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 97, 98, 99, 104, 107, 110, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 260, 339, 344, 389, 390, 391, 393, 404, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 504, 507, 509, 510, 513, 514, 521, 528, 529, 537, 540], "creation": [107, 110, 530, 537, 540, 544], "crop": [122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139], "cross": [6, 83, 194], "csingl": 9, "ct": 10, "ctype": 465, "cube": [70, 148, 490], "cubic": 110, "cuda": 4, "cumprod": [6, 104, 263, 537], "cumsum": [6, 100, 104, 264, 496, 506, 537], "cumul": [89, 90, 91, 100, 104, 263, 264, 345, 346, 496, 506], "cumulative_prod": 6, "cumulative_sum": 6, "cupi": [2, 530], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 81, 84, 85, 92, 93, 102, 104, 107, 110, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 156, 162, 168, 170, 173, 174, 180, 196, 197, 198, 234, 235, 236, 237, 238, 249, 255, 256, 257, 259, 372, 385, 386, 393, 397, 398, 399, 401, 406, 407, 461, 463, 465, 469, 470, 476, 480, 481, 482, 484, 488, 495, 500, 501, 515, 516], "curv": 506, "custom": 537, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 211, 524], "cutoff": 219, "cycl": [124, 138, 194, 467], "cyclic": 403, "cython": 4, "d": [0, 16, 21, 23, 56, 74, 75, 76, 90, 91, 95, 96, 97, 98, 99, 103, 104, 106, 107, 120, 124, 126, 131, 138, 140, 144, 146, 147, 159, 171, 172, 174, 178, 194, 204, 205, 207, 208, 212, 216, 217, 221, 225, 228, 246, 252, 263, 264, 270, 352, 387, 398, 399, 400, 403, 413, 457, 466, 475, 477, 479, 493, 496, 498, 502, 503, 504, 511, 517, 521, 524, 526, 537], "d0": [408, 435, 437], "d1": [408, 437], "d3": 96, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 95, 98, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 116, 118, 120, 121, 127, 133, 135, 141, 142, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 186, 187, 188, 189, 191, 196, 197, 198, 199, 200, 205, 211, 218, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 271, 339, 369, 382, 384, 385, 386, 388, 390, 391, 396, 397, 398, 399, 401, 403, 404, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 493, 494, 495, 499, 500, 501, 504, 507, 515, 516, 522, 524, 526, 527, 528, 529, 530, 540], "datatyp": [107, 215], "date": 4, "datetim": 107, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [87, 104, 269, 271, 376, 383, 494, 522], "decai": 421, "decim": [35, 104, 141, 142, 370, 470, 474], "decomposit": [201, 210, 215, 219, 223, 224, 540], "decompress": 232, "decreas": [101, 506], "decreasingli": [10, 123, 125, 129, 130], "deem": 154, "def": [0, 393], "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 211, 213, 215, 216, 217, 219, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 352, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 412, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 449, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 537], "default_rng": 6, "defg": 110, "defici": 215, "defin": [10, 29, 51, 88, 94, 107, 112, 122, 151, 152, 161, 168, 169, 170, 179, 203, 205, 217, 229, 249, 255, 260, 391, 397, 460, 473, 524, 529, 537], "definit": [88, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 149, 201, 506], "deg": [20, 407], "deg2rad": [6, 406, 407, 520], "degre": [6, 20, 92, 269, 271, 406, 407, 450, 473, 494, 520, 522, 544], "del": 544, "delet": [6, 22, 179], "delta": [10, 269, 271, 494, 520, 522], "demonstr": [0, 4, 107], "denot": [229, 524], "dens": [177, 194, 253], "densiti": 169, "depend": [4, 34, 99, 121, 127, 133, 135, 205, 207, 211, 217, 220, 222, 223, 231, 268, 270, 478, 527], "depth": [74, 75, 76, 105, 106, 172, 475, 489, 493, 526], "deriv": 165, "descend": 223, "descr": 107, "describ": [89, 107, 217, 228, 244, 462, 540], "descript": [89, 107, 128, 130, 169, 244, 462, 537], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 67, 111, 112, 120, 128, 129, 130, 160, 161, 163, 174, 231, 243, 390, 391, 457, 503, 507, 528, 529], "destin": [75, 76, 172, 258, 403, 404, 475, 493, 499, 526], "destruct": 544, "det": [6, 221], "detail": [35, 123, 125, 129, 130, 134, 135, 137, 139, 154, 213, 230, 474, 509, 510, 513, 514, 517, 537], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 70, 81, 84, 85, 92, 93, 102, 115, 116, 118, 150, 151, 152, 153, 156, 157, 159, 173, 198, 204, 205, 211, 220, 221, 228, 233, 234, 235, 236, 237, 238, 246, 249, 255, 256, 259, 386, 398, 399, 406, 407, 458, 461, 463, 469, 476, 478, 480, 482, 483, 484, 488, 490, 491, 495, 500, 501, 504, 515, 516, 518, 524], "devel": 4, "develop": [3, 4], "deviat": [104, 250, 266, 269, 271, 376, 408, 423, 430, 494, 522], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 80, 89, 95, 96, 98, 104, 109, 111, 112, 120, 121, 124, 138, 142, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 244, 245, 246, 250, 251, 253, 266, 269, 271, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 462, 492, 494, 507, 509, 513, 521, 522, 524, 528, 529], "df": [412, 428, 450, 451], "dfden": [416, 429], "dfnum": [416, 429], "dft": [10, 122, 127, 128, 132, 133, 136], "di": [96, 97], "diag": [6, 98, 99, 109, 120, 146, 147, 174, 206, 208, 223, 478, 504], "diag_indic": [6, 97, 140], "diag_indices_from": [6, 96, 140], "diagflat": [6, 95, 99, 504], "diagon": [6, 95, 96, 97, 98, 104, 109, 120, 140, 174, 201, 207, 208, 209, 228, 245, 381, 478, 504, 507, 508, 509, 510, 512, 513, 514, 537], "dice": 425, "dict": [107, 393], "dictionari": 107, "diff": [6, 91, 108, 165, 169], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 80, 89, 91, 95, 98, 100, 104, 107, 108, 111, 112, 120, 123, 124, 128, 129, 131, 134, 137, 138, 141, 146, 147, 148, 155, 156, 157, 158, 160, 161, 163, 165, 174, 179, 181, 209, 217, 228, 231, 232, 243, 244, 246, 253, 344, 389, 390, 391, 396, 398, 399, 404, 462, 467, 473, 495, 499, 507, 509, 513, 520, 521, 528, 529, 540], "differenti": 483, "digit": [6, 10, 141, 169], "dim": [17, 458], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 74, 75, 76, 82, 86, 87, 88, 96, 99, 100, 104, 105, 107, 117, 129, 130, 142, 146, 147, 165, 172, 177, 178, 194, 203, 205, 213, 215, 217, 220, 224, 225, 228, 229, 230, 244, 247, 248, 250, 251, 252, 253, 254, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 352, 356, 361, 372, 384, 387, 389, 400, 404, 408, 438, 440, 441, 443, 457, 458, 462, 466, 473, 479, 489, 492, 493, 494, 496, 497, 498, 499, 502, 503, 504, 509, 510, 513, 514, 517, 518, 519, 522, 524, 525, 537, 540], "dimension": [2, 4, 33, 79, 83, 86, 89, 94, 96, 97, 98, 99, 100, 101, 104, 108, 109, 122, 123, 125, 127, 128, 129, 130, 133, 134, 135, 136, 137, 139, 140, 155, 156, 158, 165, 171, 177, 179, 194, 203, 211, 218, 220, 226, 227, 244, 248, 252, 253, 254, 261, 262, 265, 267, 269, 271, 375, 384, 389, 392, 400, 462, 486, 494, 496, 498, 503, 506, 517, 522, 523, 525, 530], "direct": [10, 88, 100, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 146, 147, 165, 203, 386, 473], "directli": [107, 157, 177, 243, 387, 499], "directori": 164, "dirichlet": 6, "discard": 516, "discont": 520, "discontinu": 520, "discret": [3, 10, 79, 83, 91, 100, 108, 122, 123, 124, 125, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 165, 408, 483, 530], "dispers": 453, "displac": [104, 377], "disregard": 467, "distanc": [165, 488], "distinct": [151, 152, 249, 255, 467], "distinguish": 107, "distribut": [3, 4, 243, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 540], "divid": [6, 39, 105, 106, 150, 153, 171, 256, 463, 489, 515, 525], "divis": [102, 150, 153, 256, 398, 399, 463, 489, 515, 516], "divisor": [162, 196, 269, 271, 494, 522], "divmod": [6, 537], "dlpack": 154, "dmlc": 154, "dn": [408, 435, 437], "do": [3, 4, 107, 245, 251, 410, 472, 506], "docstr": 537, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537], "doe": [22, 23, 39, 69, 94, 104, 109, 119, 121, 136, 151, 152, 154, 179, 220, 260, 263, 264, 354, 396, 467, 489, 498], "domain": [10, 127, 132], "done": [3, 49, 104, 109, 227, 339, 517, 520], "dot": [6, 104, 109, 110, 178, 201, 208, 210, 216, 219, 220, 222, 223, 225, 226, 227, 229, 246, 502, 523, 524], "doubl": [9, 225, 421, 502], "down": 147, "dp": [102, 204, 207, 221, 222, 398, 399, 495, 515], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 261, 262, 265, 267, 268, 339, 344, 389, 390, 391, 402, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "dpnp": [0, 2, 3, 4, 10, 530, 537, 540, 541, 544], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 80, 95, 96, 98, 111, 112, 120, 124, 138, 141, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 175, 177, 231, 232, 243, 245, 253, 272, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529, 530], "dpnp_iface_arraycr": [253, 389], "draw": [408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "drawn": [408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 431, 433, 434, 436, 439, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478], "drill": [410, 427], "driver": 2, "drop": [3, 107], "dsplit": [6, 75, 76, 106, 489], "dst": 82, "dstack": [6, 74, 75, 76, 172, 475, 489, 493, 526], "dt": [107, 506], "dt2": 107, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 75, 76, 77, 78, 81, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 102, 104, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 216, 219, 223, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 345, 346, 358, 364, 373, 376, 378, 381, 383, 385, 386, 388, 390, 391, 397, 398, 399, 400, 401, 406, 407, 408, 430, 436, 452, 461, 462, 463, 465, 468, 469, 470, 474, 475, 476, 480, 481, 482, 483, 484, 487, 488, 490, 491, 493, 494, 495, 496, 498, 500, 501, 504, 507, 508, 512, 515, 516, 522, 524, 525, 526, 528, 529, 537], "due": [136, 544], "dump": 6, "dx": [165, 506], "dy": 165, "dz": 165, "e": [9, 10, 14, 25, 27, 47, 60, 89, 90, 99, 107, 111, 112, 117, 120, 123, 127, 128, 129, 130, 133, 135, 136, 148, 156, 160, 161, 165, 174, 198, 206, 221, 226, 230, 233, 251, 390, 391, 408, 460, 464, 467, 497, 507, 519, 528, 529], "ea": 110, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 77, 78, 81, 84, 85, 90, 91, 96, 99, 101, 102, 104, 105, 107, 110, 113, 115, 116, 118, 123, 125, 127, 129, 130, 133, 134, 135, 137, 139, 146, 147, 148, 149, 150, 153, 157, 165, 166, 167, 169, 170, 171, 176, 180, 184, 186, 187, 194, 198, 199, 200, 203, 206, 207, 208, 209, 211, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 256, 258, 259, 260, 370, 385, 387, 388, 393, 397, 398, 399, 401, 404, 410, 427, 458, 459, 461, 463, 464, 467, 469, 470, 471, 474, 476, 480, 481, 482, 484, 489, 490, 491, 493, 495, 499, 500, 501, 503, 506, 509, 510, 513, 514, 515, 516, 517, 518, 524, 525, 537], "easier": 498, "easiest": [4, 393], "easili": [0, 170], "edg": [73, 101, 169, 170, 393], "edge_ord": 165, "ediff1d": [6, 100, 165], "effect": [110, 148, 151, 152, 249, 255, 398, 399, 520], "effici": [10, 122, 136, 156, 215, 219, 223], "efgh": 110, "eig": [6, 207, 208, 209], "eigenvalu": [206, 207, 208, 209, 540], "eigenvector": [206, 207, 208, 209], "eigh": [6, 206, 208, 209], "eight": 217, "eigval": [6, 206, 207, 209], "eigvalsh": [6, 206, 207, 208], "einstein": [103, 109, 110, 178, 225, 227, 246, 392, 502, 524], "einsum": [6, 103, 110, 178, 225, 227, 246, 392, 502, 524], "einsum_path": [6, 109], "either": [37, 38, 45, 56, 88, 89, 99, 107, 123, 125, 127, 129, 130, 133, 135, 137, 139, 140, 165, 178, 205, 207, 209, 217, 220, 244, 261, 262, 265, 267, 268, 270, 458, 462, 467, 477, 478, 499, 506], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 81, 82, 84, 85, 89, 90, 91, 94, 97, 99, 100, 101, 102, 104, 107, 108, 110, 113, 115, 116, 118, 119, 120, 121, 123, 125, 129, 130, 134, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 203, 205, 208, 214, 225, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 252, 254, 255, 256, 257, 259, 260, 263, 264, 265, 267, 268, 269, 270, 271, 334, 335, 342, 343, 345, 346, 348, 349, 352, 354, 355, 358, 360, 362, 363, 368, 369, 370, 371, 373, 376, 377, 380, 383, 385, 386, 387, 388, 396, 397, 398, 399, 400, 401, 403, 405, 457, 459, 460, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 490, 491, 494, 495, 496, 498, 500, 501, 502, 503, 504, 506, 508, 510, 512, 514, 515, 516, 517, 518, 520, 522, 524, 527, 537, 540, 544], "element_count": [104, 373, 485], "ellipsi": 109, "els": [0, 107, 221, 277], "elsewher": [120, 174, 507, 527], "empti": [4, 6, 36, 104, 112, 123, 125, 129, 130, 134, 135, 137, 139, 156, 160, 161, 211, 349, 390, 391, 393, 396, 489, 528, 529, 537], "empty_lik": [6, 36, 111, 161, 391, 529], "enabl": [140, 215, 219, 223], "encount": [263, 264, 265, 267, 478], "end": [22, 23, 68, 94, 99, 107, 108, 110, 128, 163, 179, 231, 243, 393], "end_tim": 0, "end_valu": 393, "endian": 107, "endpoint": [23, 163, 231, 243, 506], "engin": 444, "enlarg": 467, "enough": 169, "ensur": 465, "entir": [56, 89, 127, 169, 170, 244, 250, 265, 266, 267, 269, 271, 393, 462, 494, 522], "entiti": 467, "entri": [39, 94, 104, 105, 107, 111, 119, 127, 133, 135, 140, 145, 146, 147, 171, 375, 489, 492, 524, 525], "enumer": 154, "env": 4, "environ": 4, "ep": [141, 215, 219, 386, 460, 488], "epsilon": [215, 460], "epsneg": 141, "equal": [6, 16, 17, 21, 33, 37, 38, 39, 56, 60, 63, 75, 76, 83, 87, 91, 104, 105, 120, 163, 165, 166, 167, 169, 170, 171, 172, 181, 183, 191, 193, 198, 199, 200, 205, 214, 219, 220, 227, 231, 243, 256, 363, 388, 393, 408, 418, 452, 463, 469, 470, 474, 475, 480, 483, 486, 489, 492, 493, 507, 509, 513, 519, 525, 526], "equal_nan": [17, 37, 181, 517], "equat": [211, 222, 226, 227, 540], "equiv": [49, 69, 75, 76, 82, 104, 109, 172, 214, 246, 339, 475, 493, 524, 526], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 80, 88, 89, 92, 93, 94, 102, 103, 104, 105, 106, 110, 117, 119, 144, 151, 152, 153, 171, 194, 224, 225, 226, 230, 244, 247, 256, 259, 279, 334, 335, 347, 361, 369, 372, 382, 384, 387, 392, 395, 397, 406, 407, 408, 436, 462, 463, 466, 473, 474, 479, 486, 495, 496, 498, 502, 505, 515, 517, 519, 524, 525, 537, 544], "error": [89, 105, 109, 114, 127, 132, 171, 206, 244, 458, 462, 489, 492, 525, 530, 537], "essenti": 4, "estim": [87, 170, 410, 427, 506], "et": 10, "etc": [10, 36, 41, 107, 123, 125, 129, 130, 134, 135, 137, 139, 427], "euclidean": 211, "euler_gamma": 9, "evalu": [16, 17, 21, 104, 109, 110, 113, 183, 185, 191, 225, 227, 252, 334, 335, 392, 478, 502], "even": [10, 104, 107, 124, 126, 127, 128, 131, 132, 133, 135, 136, 138, 183, 185, 191, 251, 356, 393, 470, 474], "evenli": [23, 163, 231, 243, 470, 506], "event": 238, "everi": [68, 135, 404, 499], "everywher": [133, 483], "exact": [119, 216, 396], "exactli": [10, 48, 159, 408, 436, 478], "examin": 211, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 347, 349, 352, 353, 354, 356, 361, 363, 367, 369, 372, 373, 374, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537, 544], "exce": [238, 489], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 77, 78, 80, 81, 84, 85, 92, 93, 100, 101, 102, 103, 104, 111, 112, 113, 115, 116, 118, 120, 121, 134, 135, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 171, 172, 173, 174, 180, 184, 186, 187, 196, 197, 198, 199, 200, 216, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 254, 255, 256, 259, 265, 266, 267, 268, 269, 270, 271, 339, 354, 385, 386, 388, 390, 391, 397, 398, 399, 400, 401, 406, 407, 457, 461, 463, 464, 465, 469, 470, 476, 480, 481, 482, 484, 486, 488, 489, 490, 491, 494, 495, 496, 500, 501, 515, 516, 522, 524, 528, 529, 540], "exclud": [11, 12, 22, 231, 408, 452], "exclus": [408, 436], "execut": [3, 4, 40, 41, 42, 83, 87, 114, 157, 257, 268, 411, 413, 414, 424, 429, 445, 544], "executor": 0, "exist": [10, 74, 75, 76, 106, 107, 117, 154, 172, 179, 475, 489, 493, 519, 526, 540], "exp": [6, 10, 116, 118, 122, 221, 235, 237, 244], "exp2": [6, 115, 118], "expand": [100, 117], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 77, 78, 81, 84, 85, 86, 89, 90, 91, 92, 93, 102, 103, 107, 113, 115, 116, 118, 121, 133, 142, 148, 149, 150, 151, 152, 153, 162, 166, 167, 168, 173, 176, 180, 181, 184, 186, 187, 196, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 250, 251, 254, 255, 256, 259, 263, 264, 266, 268, 269, 270, 271, 385, 386, 388, 397, 398, 399, 400, 401, 406, 407, 459, 461, 462, 463, 469, 470, 474, 476, 480, 481, 482, 483, 484, 488, 490, 491, 494, 495, 496, 500, 501, 515, 516, 522, 527], "explain": [125, 130, 135, 139, 537], "explan": 107, "explicit": 109, "explicitli": [99, 123, 125, 129, 130, 134, 135, 137, 139], "exploit": [10, 136], "explor": [110, 410, 427], "expm1": [6, 115, 116, 235], "expon": [10, 115, 116, 118, 148, 197, 214, 237, 238, 244, 398, 399, 434, 540], "exponenti": [6, 10, 110, 237, 238, 244, 421, 447], "expos": [155, 537], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 109, 110, 197, 232, 544], "extend": [10, 107, 195, 393, 537], "extens": [0, 1, 3, 4, 9, 164, 232, 530], "extra": [107, 133, 159], "extract": [6, 95, 98, 99, 109, 120, 144, 174, 177, 245, 396, 478, 498, 504], "extrapol": 467, "extrema": 540, "ey": [6, 68, 77, 78, 86, 104, 129, 130, 151, 152, 174, 178, 195, 210, 214, 215, 226, 227, 228, 242, 249, 255, 479, 504], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 102, 104, 107, 109, 111, 112, 113, 115, 116, 118, 120, 121, 124, 136, 138, 142, 148, 149, 150, 151, 152, 153, 160, 161, 162, 165, 166, 167, 168, 173, 176, 180, 184, 185, 186, 187, 196, 197, 198, 199, 200, 214, 217, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 255, 256, 259, 339, 344, 352, 385, 386, 388, 390, 391, 397, 398, 399, 401, 406, 407, 429, 457, 458, 459, 461, 463, 465, 466, 469, 470, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 511, 515, 516, 518, 524, 527, 528, 529], "f0": 107, "f1": 107, "f2": 107, "f4": 69, "f8": [69, 107], "f_contigu": [43, 45, 185, 465], "f_k": 10, "fab": [6, 11, 12], "fact": 208, "factor": [10, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 201, 220], "fail": [104, 372, 410], "fallback": [206, 208, 411, 413, 414, 424, 429, 445], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 33, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 64, 65, 67, 69, 80, 86, 87, 89, 91, 94, 101, 104, 107, 109, 110, 112, 113, 119, 140, 154, 157, 161, 163, 166, 167, 169, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 199, 200, 201, 202, 213, 215, 217, 219, 223, 224, 230, 231, 239, 240, 241, 242, 243, 244, 248, 250, 251, 252, 254, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 277, 334, 335, 336, 337, 339, 357, 358, 359, 364, 376, 378, 383, 387, 388, 391, 400, 402, 462, 465, 466, 478, 481, 486, 494, 496, 517, 521, 522, 527, 529], "famili": 10, "fanci": 498, "fashion": [238, 537], "fast": [10, 122, 123, 125, 129, 130, 135, 136, 139], "faster": [10, 151, 152], "fastest": [104, 185, 352, 457, 466], "fb": [110, 511], "featur": 107, "fetch": 466, "few": 140, "fft": [6, 530, 540], "fft2": [6, 122, 125, 129], "fftfreq": [6, 10, 122, 126, 131, 138], "fftn": [6, 122, 123, 130, 136, 139], "fftshift": [6, 10, 123, 125, 130, 131], "fh": 156, "field": [107, 252], "field1": 107, "file": [155, 156, 158, 159, 164, 232], "filenam": [156, 232], "fill": [6, 22, 36, 104, 111, 112, 140, 160, 161, 169, 170, 252, 260, 344, 390, 391, 467, 507, 528, 529], "fill_diagon": 6, "fill_valu": [160, 161], "filt": 511, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 483, 507, 509, 513, 521, 528, 529], "final": [4, 10, 135, 136, 137, 139, 163, 243], "find": [34, 57, 101, 104, 121, 169, 215, 219, 223, 371, 386, 387, 464, 477, 486, 488, 517, 540], "fine": 4, "finfo": [219, 386, 460, 488], "finfo_object": 141, "finit": [42, 184, 186, 187, 188, 189, 260, 488], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 62, 63, 64, 68, 74, 75, 76, 81, 88, 89, 99, 102, 103, 104, 107, 110, 113, 116, 123, 125, 127, 129, 130, 145, 148, 150, 151, 152, 153, 162, 165, 166, 167, 169, 170, 171, 173, 178, 179, 181, 185, 193, 195, 196, 198, 199, 200, 203, 205, 212, 216, 225, 226, 228, 229, 232, 237, 238, 239, 241, 242, 245, 246, 248, 249, 251, 252, 254, 255, 256, 259, 261, 262, 352, 388, 392, 393, 396, 398, 399, 400, 457, 463, 466, 469, 471, 473, 475, 477, 478, 486, 487, 491, 495, 496, 497, 499, 502, 504, 515, 517, 519, 523, 524, 525, 526], "fit": [211, 464], "fix": [6, 35, 71, 99, 107, 149, 403, 470, 474, 516], "flag": [43, 45, 104, 107, 185, 344, 465], "flanneri": 10, "flat": [31, 32, 104, 108, 143, 352, 354, 457, 458, 464, 518], "flatnonzero": [6, 387], "flatten": [6, 22, 31, 32, 33, 75, 76, 86, 90, 91, 94, 95, 98, 99, 104, 108, 140, 144, 169, 170, 179, 230, 248, 251, 254, 261, 262, 263, 264, 268, 270, 351, 366, 374, 387, 392, 404, 457, 458, 464, 471, 486, 498, 499, 504, 517, 518, 523], "flexibl": [103, 107, 156, 216], "flip": [6, 59, 61, 99, 140, 146, 147, 180, 205, 410, 473], "fliplr": [6, 99, 140, 145, 147, 205, 473], "flipud": [6, 99, 140, 145, 146, 205, 473], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 69, 81, 89, 91, 107, 111, 112, 116, 120, 121, 124, 138, 141, 142, 148, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 170, 174, 176, 197, 211, 214, 215, 217, 219, 230, 231, 232, 237, 238, 243, 244, 248, 250, 251, 254, 260, 266, 269, 271, 386, 390, 391, 398, 399, 408, 412, 437, 438, 440, 441, 443, 446, 447, 449, 452, 459, 460, 461, 462, 476, 483, 494, 507, 520, 522, 528, 529, 537, 540], "float16": [9, 148], "float32": [0, 9, 42, 44, 49, 69, 90, 104, 107, 109, 148, 339, 386, 408, 430, 435, 437, 438, 440, 441, 443, 449, 452, 465, 468], "float64": [0, 9, 44, 49, 56, 69, 91, 104, 107, 109, 339, 408, 409, 415, 416, 417, 419, 421, 422, 423, 430, 431, 434, 435, 437, 438, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 468, 483, 488, 525], "float_pow": [6, 398, 399], "floor": [6, 35, 71, 142, 150, 256, 463, 470, 474, 516], "floor_divid": [6, 256, 463], "flop": 110, "flush": 156, "fmax": [6, 152, 248, 249, 255, 265, 398, 399], "fmin": [6, 151, 249, 254, 255, 267, 398, 399], "fmod": [6, 256, 398, 399, 463], "fn": 157, "fname": 232, "follow": [4, 10, 56, 107, 117, 133, 141, 154, 175, 207, 209, 217, 219, 225, 393, 465, 502, 537, 540], "forc": [107, 109], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 74, 80, 95, 98, 104, 106, 109, 110, 129, 130, 133, 160, 161, 163, 183, 191, 194, 205, 213, 224, 228, 231, 243, 247, 382, 393, 467, 475, 521, 526], "format": [107, 154, 156, 159, 540], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 404, 499], "forth": [225, 502], "fortran": [45, 49, 104, 185, 339, 352, 457, 458, 465, 466, 518], "forward": [10, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 165], "found": [4, 477, 537], "four": [408, 437], "fourier": [10, 122, 123, 124, 125, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 530], "fourth": 123, "frac": [10, 506], "fraction": [257, 516], "free": [104, 369], "freedom": [269, 271, 450, 494, 522], "freq": [124, 126, 131, 138], "freq_spectrum": 127, "frequenc": [10, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138], "freshli": [188, 189, 524], "frexp": [6, 197], "fro": [202, 213, 217, 230], "frobeniu": [202, 217], "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 69, 72, 75, 76, 80, 82, 89, 92, 93, 95, 96, 98, 99, 104, 106, 107, 109, 111, 112, 116, 119, 120, 124, 128, 137, 138, 139, 145, 148, 154, 155, 156, 157, 158, 159, 160, 161, 165, 169, 172, 174, 177, 179, 194, 197, 206, 208, 209, 215, 216, 228, 232, 244, 245, 252, 253, 340, 344, 375, 380, 389, 390, 391, 393, 396, 400, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 462, 466, 467, 468, 473, 475, 477, 478, 491, 492, 493, 496, 498, 499, 504, 507, 509, 511, 513, 514, 517, 519, 520, 521, 526, 527, 528, 529, 540], "from_": 69, "from_dlpack": 6, "frombuff": [6, 156, 158, 159, 232], "fromfil": [6, 155, 158, 159], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 155, 156, 159], "frompyfunc": 6, "fromregex": [6, 232], "fromstr": [6, 155, 156, 158, 232], "front": 511, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "full_lik": [6, 36, 112, 160, 391, 529], "full_matric": 223, "fulli": [107, 251], "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 80, 83, 87, 89, 92, 93, 99, 102, 104, 109, 111, 112, 114, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 135, 136, 139, 140, 148, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 169, 170, 174, 185, 194, 203, 205, 206, 208, 212, 213, 216, 217, 218, 224, 225, 228, 229, 230, 232, 235, 237, 238, 244, 245, 247, 252, 256, 257, 268, 334, 335, 344, 347, 354, 369, 372, 382, 390, 391, 393, 398, 399, 404, 406, 407, 408, 411, 413, 414, 424, 429, 445, 457, 462, 463, 465, 467, 474, 475, 480, 483, 494, 498, 499, 502, 503, 509, 510, 513, 514, 515, 519, 522, 526, 527, 528, 529, 530, 537, 540], "fundament": [10, 107], "further": [94, 509, 513], "futur": [107, 170], "fweight": 87, "g": [4, 10, 107, 111, 112, 120, 160, 161, 174, 217, 390, 391, 408, 507, 528, 529, 544], "gad6f2d38bef": 6, "gamma": [6, 448], "gauss": 10, "gaussian": [408, 430, 454], "gc": 110, "gcd": [6, 196], "gen": 109, "gender": 107, "gener": [4, 10, 33, 56, 107, 128, 133, 136, 139, 163, 178, 206, 207, 208, 209, 213, 219, 220, 230, 232, 243, 408, 410, 413, 444, 457, 488, 506, 509, 513, 521, 537, 540], "genfromtxt": [6, 232], "geometr": [6, 163, 231], "geomspac": [6, 231, 243], "get": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 97, 98, 104, 111, 112, 120, 124, 127, 133, 135, 138, 148, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 224, 229, 231, 232, 243, 245, 253, 344, 372, 389, 390, 391, 393, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 499, 507, 509, 510, 513, 514, 521, 524, 528, 529, 537], "get_arrai": 104, "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 408], "get_sycl_devic": 408, "get_sycl_queu": 408, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 107], "getter": [104, 372], "gid": 170, "github": 154, "give": [10, 98, 104, 148, 170, 382, 466, 479, 485, 517], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 74, 80, 86, 87, 90, 91, 100, 103, 104, 106, 107, 108, 110, 111, 112, 119, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 151, 152, 160, 161, 163, 165, 169, 170, 179, 181, 210, 217, 225, 229, 231, 243, 245, 248, 249, 251, 252, 254, 255, 263, 264, 265, 267, 268, 269, 270, 271, 336, 337, 339, 345, 346, 359, 364, 365, 370, 373, 376, 378, 383, 387, 390, 391, 396, 400, 402, 403, 408, 413, 435, 452, 462, 464, 465, 466, 470, 471, 472, 473, 475, 477, 478, 485, 489, 494, 496, 498, 502, 503, 506, 507, 517, 519, 522, 524, 526, 528, 529, 537], "global": 0, "golub": 217, "good": 420, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 80, 95, 98, 111, 112, 120, 124, 138, 155, 156, 157, 158, 160, 161, 163, 174, 231, 232, 243, 253, 389, 390, 391, 507, 521, 528, 529], "grade": 107, "gradient": [6, 100, 108, 211], "graphic": 4, "great": 10, "greater": [6, 60, 63, 104, 105, 113, 150, 167, 198, 199, 200, 215, 220, 363, 388, 393, 469, 478, 480, 492, 520], "greater_equ": [6, 113, 166, 199, 200, 388], "greatest": [150, 162, 196], "greedi": [109, 110], "grid": [40, 41, 42, 157, 177, 218, 252, 253, 389, 392], "group": [34, 387], "guarante": [107, 465, 466], "guid": [2, 3], "gumbel": 6, "gz": 232, "h": [164, 201, 217, 220, 252], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 89, 90, 91, 101, 107, 113, 117, 127, 132, 133, 157, 165, 166, 167, 172, 176, 182, 183, 190, 191, 199, 200, 208, 221, 223, 228, 244, 250, 251, 256, 263, 264, 266, 268, 269, 270, 271, 388, 393, 400, 459, 460, 461, 462, 463, 464, 472, 476, 478, 492, 493, 494, 496, 497, 498, 503, 504, 518, 522, 537], "had": [404, 499], "hadamard": 110, "half": [14, 25, 123, 125, 126, 127, 129, 130, 231, 408, 438, 440, 441, 443, 452, 497], "ham": 6, "han": 6, "hand": [88, 203, 227], "handl": [23, 107, 121, 232, 387, 404, 458, 498, 499, 540], "happen": [49, 56, 104, 339, 410, 506], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 107, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 74, 75, 76, 77, 78, 81, 84, 85, 88, 89, 90, 91, 92, 93, 102, 103, 106, 107, 113, 115, 116, 118, 121, 129, 130, 139, 141, 142, 148, 149, 150, 151, 152, 153, 162, 166, 167, 168, 172, 173, 176, 180, 181, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 205, 211, 213, 216, 218, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 249, 250, 251, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 385, 386, 388, 396, 397, 398, 399, 400, 401, 406, 407, 427, 459, 461, 462, 463, 464, 465, 466, 469, 470, 474, 475, 476, 480, 481, 482, 483, 484, 488, 490, 491, 493, 494, 495, 496, 500, 501, 503, 515, 516, 520, 522, 524, 526, 537], "hd": 110, "header": 164, "heavisid": 6, "hello": 107, "help": 544, "helper": 540, "henc": [117, 165], "here": [6, 33, 107, 109, 127, 132, 133, 486, 509, 513], "hermit": [207, 209], "hermitian": [127, 132, 133, 135, 136, 201, 206, 207, 208, 209, 215, 219, 223, 224, 540], "hfft": [6, 10, 132], "hierarchi": 193, "high": [68, 133, 408, 436, 439, 452], "higher": [104, 109, 171, 179, 356, 523, 525], "highest": 122, "highli": 156, "hist": [169, 446], "hist_0": 170, "hist_1": 170, "histogram": [6, 101, 170, 477, 540], "histogram2d": 6, "histogram_bin_edg": [6, 169], "histogramdd": [6, 169], "hold": [73, 90, 91, 169, 217, 251, 263, 264, 268, 270, 457, 504], "homogen": 107, "hopkin": 217, "horizont": [74, 75, 76, 99, 106, 140, 145, 171, 172, 205, 473, 475, 489, 493, 526], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 507, 509, 513, 521, 528, 529], "household": 220, "how": [0, 4, 107, 133, 136, 165, 403, 404, 458, 498, 499, 509, 513], "howev": [104, 374, 498], "hsplit": [6, 75, 76, 489], "hstack": [6, 74, 75, 76, 106, 475, 489, 493, 526], "http": [4, 154], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 482, 484, 500, 501, 540], "hypergeometr": 6, "hypot": [6, 462], "hypotenus": [173, 462], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 339, 344, 354, 356, 363, 369, 372, 374, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537, 544], "i0": 6, "i1": [104, 107, 377], "i2": [104, 107, 377], "i3": [104, 377], "i4": [69, 107], "i7": 109, "i8": [69, 107], "iaxi": 393, "iaxis_pad_width": 393, "icpx": 4, "icx": 4, "id": [16, 21], "ideal": 483, "ident": [3, 6, 16, 21, 42, 89, 107, 120, 131, 140, 222, 229, 447, 524], "identifi": 107, "idx": 179, "ieee": 141, "ifft": [6, 122, 129, 130, 132, 133, 138], "ifft2": [6, 123, 128, 130], "ifftn": [6, 125, 128, 129], "ifftshift": [6, 10, 126, 130], "ignor": [31, 32, 88, 107, 151, 152, 159, 169, 170, 248, 249, 250, 254, 255, 261, 262, 265, 266, 267, 269, 271, 494, 522], "ihfft": [6, 127], "ii": [109, 431], "iinfo": 425, "iinfo_object": 175, "ij": [109, 110, 252], "ijk": 109, "il": 110, "il1": 509, "il2": 509, "illustr": 208, "ilm": 109, "im": [218, 392], "imag": [6, 10, 20, 37, 104, 459, 460, 467, 537], "imaginari": [20, 37, 104, 133, 151, 152, 176, 182, 183, 190, 191, 206, 207, 209, 214, 249, 255, 260, 353, 459, 460, 487, 517], "implement": [3, 4, 6, 44, 122, 154], "impli": [107, 457], "implicit": 109, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 347, 349, 352, 353, 354, 356, 361, 363, 367, 372, 373, 374, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 433, 442, 446, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "improv": 109, "in1d": 6, "in_array1": 114, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 80, 89, 95, 98, 101, 109, 110, 121, 160, 161, 163, 164, 169, 170, 183, 191, 219, 231, 243, 244, 250, 251, 265, 266, 267, 269, 271, 408, 452, 462, 483, 494, 521, 522], "include_initi": 89, "inclus": [408, 436, 439, 478], "increas": [101, 107, 117, 128, 133, 169, 393, 467, 521], "ind": [33, 101, 226, 403, 404, 509, 510, 513, 514], "independ": 203, "index": [4, 22, 31, 32, 33, 34, 72, 104, 107, 110, 120, 123, 129, 137, 144, 154, 177, 179, 185, 194, 252, 261, 262, 340, 352, 354, 377, 387, 403, 404, 457, 458, 466, 467, 477, 478, 489, 498, 499, 509, 513, 517, 518, 527, 530, 540], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 89, 94, 96, 97, 101, 104, 105, 107, 109, 110, 119, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 144, 154, 157, 169, 171, 179, 226, 227, 245, 246, 253, 261, 262, 336, 337, 338, 362, 365, 371, 380, 387, 395, 403, 404, 458, 477, 480, 481, 486, 489, 498, 499, 505, 509, 510, 513, 514, 517, 518, 524, 525, 527], "indices_or_sect": [39, 105, 171, 489, 525], "indirect": [33, 486], "individu": 418, "inequ": 388, "inexact": [148, 260, 268, 270], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 81, 102, 181, 184, 186, 187, 188, 189, 202, 213, 217, 230, 233, 234, 236, 249, 255, 260, 261, 262, 265, 267, 270, 401, 488, 490, 515], "infer": [42, 89, 244, 462, 466], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 150, 184, 186, 187, 188, 189, 256, 260, 265, 267, 270, 463, 516, 540], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 202, 217, 483], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 104, 107, 127, 133, 135, 141, 350, 465, 537, 540], "initi": [18, 19, 89, 104, 111, 159, 248, 254, 265, 267, 268, 270, 357, 359, 364, 378, 400, 408, 496], "inner": [6, 88, 109, 110, 212, 216, 246, 392], "innermost": [205, 213, 228, 247], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 73, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 212, 213, 215, 217, 218, 220, 221, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 352, 361, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 430, 436, 452, 457, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 515, 516, 517, 520, 521, 522, 523, 524, 525, 528, 529], "insert": [6, 22, 31, 32, 94, 99, 101, 104, 109, 117, 163, 169, 231, 243, 261, 262, 265, 267, 371, 404, 466, 477, 478, 540], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 127, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 174, 177, 231, 232, 243, 245, 246, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 524, 528, 529], "instead": [34, 49, 99, 103, 104, 109, 117, 149, 163, 169, 170, 177, 185, 216, 231, 238, 243, 248, 254, 339, 387, 400, 458, 467, 496, 537], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 36, 39, 44, 56, 66, 67, 75, 76, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 104, 105, 107, 111, 112, 113, 117, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 155, 156, 157, 158, 159, 160, 161, 163, 165, 169, 170, 171, 174, 175, 177, 179, 203, 205, 211, 214, 217, 225, 226, 227, 228, 229, 230, 231, 243, 244, 245, 248, 250, 251, 254, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 354, 361, 373, 382, 384, 390, 391, 393, 394, 395, 400, 403, 404, 408, 436, 439, 458, 462, 464, 466, 467, 471, 472, 473, 474, 485, 486, 489, 492, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 528, 529, 537], "int16": 107, "int32": [0, 9, 44, 69, 107, 111, 112, 120, 155, 158, 160, 161, 174, 232, 268, 270, 390, 391, 408, 410, 418, 420, 425, 427, 433, 436, 452, 468, 496, 507, 528, 529], "int64": [0, 9, 69, 107, 268, 270, 468], "int8": [107, 400], "int_": 9, "int_0": 506, "int_t": 506, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 89, 90, 91, 101, 104, 105, 107, 142, 145, 148, 149, 150, 154, 162, 169, 171, 175, 180, 194, 196, 197, 198, 214, 217, 225, 226, 228, 230, 244, 248, 250, 254, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 374, 382, 398, 399, 400, 403, 408, 436, 439, 444, 458, 462, 463, 464, 466, 469, 470, 471, 473, 474, 477, 478, 479, 489, 491, 494, 496, 498, 502, 504, 516, 517, 518, 520, 522, 525, 537], "integer_lik": [225, 502], "integr": [3, 4, 56, 89, 91, 148, 169, 244, 250, 251, 257, 266, 269, 271, 398, 399, 462, 494, 496, 506, 522], "intel": [3, 109], "intend": [104, 382], "intent": 148, "interchang": [104, 258, 379, 497], "interfac": [0, 155], "interior": 165, "intermedi": [90, 109, 110], "intern": [33, 408, 486], "interp": 6, "interpol": [133, 467, 483], "interpret": [2, 40, 41, 42, 48, 67, 80, 104, 107, 127, 133, 135, 155, 194, 245, 354, 387, 403, 537], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 101, 117, 163, 231, 243, 408, 436, 438, 440, 441, 443, 451, 452, 497], "intp": [268, 270], "intrins": 537, "introduc": 471, "introduct": 10, "introselect": [104, 363, 394], "inv": [6, 202, 219], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 197, 210, 219, 226, 227, 235, 454, 482, 484, 500, 501, 517], "invert": [6, 59, 61, 210, 219, 226], "invok": 537, "involv": 226, "io": [154, 232], "irfft": [6, 124, 127, 132, 134, 135, 136, 138], "irfft2": [6, 133, 135, 137], "irfftn": [6, 133, 134, 139], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 107, "isbuiltin": 107, "isclos": [6, 17], "iscomplex": [6, 183, 190], "iscomplexobj": [6, 182, 191], "isdtyp": 6, "isfinit": [6, 186, 187, 188, 189, 260, 265, 267, 270], "isfortran": 6, "isin": 6, "isinf": [6, 184, 187, 188, 189, 260], "isn": 107, "isnan": [6, 184, 186, 188, 189, 260, 263, 264, 265, 267, 268, 270], "isnat": [6, 187], "isneginf": [6, 184, 186, 187, 189, 260], "isposinf": [6, 184, 186, 187, 188, 260], "isreal": [6, 182, 191], "isrealobj": [6, 183, 190], "isscalar": 6, "issu": 129, "issubdtyp": 6, "item": [6, 34, 104, 155, 156, 158, 517, 530], "item_dtyp": 107, "item_hasobject": 107, "item_is_point": 107, "items": [68, 104, 107], "iter": [6, 40, 41, 42, 104, 110, 143, 155, 156, 158, 159, 351, 352, 404, 457, 467, 499, 519, 540], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 95, 104, 127, 133, 135, 141, 169, 170, 174, 206, 207, 208, 209, 216, 219, 227, 250, 266, 269, 271, 382, 395, 445, 457, 462, 466, 486, 494, 505, 506, 507, 522, 537], "itself": [49, 104, 107, 197, 260, 339, 537], "iu": 245, "iu1": [245, 513], "iu2": 513, "ix_": 6, "ixgrid": 194, "j": [36, 77, 78, 104, 109, 123, 125, 127, 128, 129, 130, 132, 133, 136, 137, 139, 148, 157, 176, 177, 195, 201, 206, 207, 217, 218, 225, 228, 236, 246, 260, 382, 392, 401, 404, 459, 487, 491, 499, 502], "j1": 195, "jame": 10, "ji": 109, "jil": 109, "jk": [109, 110], "jl": 110, "john": [10, 217], "join": [74, 75, 76, 106, 172, 179, 475, 489, 493, 519, 526, 540], "jump": [92, 406], "just": [68, 74, 99, 107, 123, 129, 134, 136, 137, 179], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 95, 98, 102, 104, 109, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 161, 162, 166, 167, 168, 173, 176, 180, 184, 186, 187, 195, 196, 197, 198, 199, 200, 211, 220, 222, 223, 224, 225, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 249, 255, 256, 259, 279, 339, 344, 385, 386, 388, 391, 397, 398, 399, 401, 406, 407, 457, 459, 461, 463, 469, 470, 473, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 502, 507, 508, 509, 510, 512, 513, 514, 515, 516, 520, 524, 527, 529, 544], "kaiser": 6, "kappa": 453, "keep": [48, 49, 104, 339, 517], "keepdim": [16, 18, 19, 21, 31, 32, 56, 86, 104, 213, 217, 230, 244, 248, 250, 251, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 334, 335, 336, 337, 357, 358, 359, 364, 376, 378, 383, 400, 402, 404, 462, 494, 496, 499, 522], "kei": [3, 33, 104, 107, 143, 284, 329, 486], "kernel": 483, "key2": 107, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 80, 81, 84, 85, 88, 92, 93, 95, 96, 98, 102, 104, 111, 112, 115, 116, 118, 120, 121, 124, 138, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 168, 173, 174, 177, 180, 196, 197, 198, 203, 205, 212, 218, 228, 229, 232, 234, 235, 236, 237, 238, 245, 246, 249, 253, 255, 256, 257, 259, 260, 344, 385, 386, 389, 390, 391, 393, 397, 398, 399, 401, 406, 407, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 461, 463, 466, 469, 470, 476, 480, 481, 482, 484, 488, 495, 500, 501, 507, 509, 513, 515, 516, 521, 524, 527, 528, 529, 537], "ki": 109, "kind": [33, 49, 69, 75, 76, 82, 89, 104, 107, 109, 141, 172, 216, 244, 246, 338, 339, 363, 374, 394, 462, 466, 475, 486, 493, 524, 526, 540], "kl": [10, 109, 110], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 156, 446], "kron": 6, "kroneck": 195, "kth": [104, 363, 394], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 81, 84, 85, 92, 93, 102, 104, 113, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 157, 162, 166, 167, 168, 173, 180, 184, 186, 187, 196, 197, 198, 199, 200, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 255, 256, 257, 259, 310, 341, 385, 386, 388, 393, 397, 398, 399, 401, 406, 407, 461, 463, 469, 470, 476, 480, 481, 482, 484, 488, 490, 491, 495, 500, 501, 515, 516], "l": [10, 39, 107, 201, 207, 209, 228], "la": [206, 208, 209], "label": 109, "laid": 45, "lam": 433, "lambda": 157, "lanczo": 483, "lapack": [206, 208], "laplac": 6, "laptop": 4, "larg": [10, 92, 107, 169, 219, 260, 406, 520, 544], "larger": [109, 122, 123, 125, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 467, 504, 520], "largest": [10, 110, 136, 141, 149, 175, 211, 217, 256, 260, 463], "largest_singular_valu": 219, "last": [16, 21, 22, 33, 68, 88, 99, 100, 104, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 145, 163, 165, 178, 185, 205, 216, 224, 225, 228, 231, 243, 246, 352, 356, 393, 400, 457, 466, 471, 477, 486, 492, 496, 502, 519, 520, 524], "later": [393, 544], "latest": [4, 154], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 151, 152, 249, 255, 404, 499], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 102, 104, 109, 111, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 160, 161, 162, 166, 167, 168, 173, 176, 180, 184, 186, 187, 196, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 255, 256, 259, 344, 350, 385, 386, 388, 390, 391, 397, 398, 399, 401, 406, 407, 457, 459, 461, 463, 465, 466, 469, 470, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 515, 516, 524, 527, 528, 529, 530], "lcm": [6, 162], "ldexp": 6, "ldot": 10, "lead": [128, 129, 130, 263, 264, 511], "learn": [3, 4, 238], "least": [53, 54, 55, 56, 97, 106, 107, 110, 117, 140, 146, 151, 152, 156, 183, 211, 220, 249, 255, 475, 526], "left": [10, 28, 31, 32, 35, 50, 60, 63, 86, 99, 101, 104, 146, 147, 198, 208, 213, 217, 230, 248, 254, 261, 262, 268, 270, 371, 400, 451, 469, 474, 477, 496, 506, 521], "left_shift": [6, 60, 63, 469], "leg": [173, 462], "legaci": 444, "legal": 179, "len": [94, 104, 107, 125, 126, 127, 130, 132, 133, 134, 135, 139, 177, 211, 248, 252, 253, 254, 302, 479, 521], "length": [23, 39, 56, 90, 91, 100, 113, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 159, 163, 165, 169, 172, 206, 223, 224, 225, 243, 248, 251, 252, 254, 263, 264, 393, 404, 411, 466, 468, 475, 477, 478, 479, 492, 499, 502, 503, 526], "less": [6, 90, 91, 104, 113, 166, 167, 169, 170, 200, 211, 219, 228, 263, 264, 268, 270, 356, 388, 400, 478, 480, 496, 504], "less_equ": [6, 113, 166, 167, 199, 388], "let": [229, 410, 466, 524], "level": [530, 537], "level_zero": [23, 36, 40, 41, 42, 43, 45, 80, 95, 98, 111, 112, 120, 124, 138, 155, 156, 157, 158, 160, 161, 163, 174, 231, 232, 243, 253, 389, 390, 391, 507, 521, 528, 529], "lexicograph": 517, "lexsort": [6, 33, 486], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 471, 472], "lib": 68, "librari": [3, 4, 537], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 74, 94, 104, 106, 109, 111, 120, 135, 155, 156, 157, 158, 159, 160, 163, 174, 179, 231, 232, 243, 245, 339, 352, 361, 384, 390, 404, 408, 452, 457, 465, 466, 499, 528, 540], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 77, 78, 80, 81, 83, 84, 85, 87, 92, 93, 102, 104, 107, 111, 112, 113, 114, 115, 116, 118, 120, 121, 141, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 173, 174, 175, 180, 184, 186, 187, 196, 197, 198, 199, 200, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 339, 341, 385, 386, 388, 390, 391, 394, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 431, 433, 434, 436, 439, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 461, 463, 465, 469, 470, 476, 480, 481, 482, 483, 484, 486, 488, 490, 491, 494, 495, 496, 500, 501, 515, 516, 522, 524, 528, 529], "linalg": [6, 88, 99, 103, 109, 110, 246, 247, 392, 491, 502, 504, 523, 524], "line": [211, 232], "linear": [10, 79, 83, 211, 222, 243, 393, 530, 540], "linear_ramp": 393, "linspac": [0, 6, 23, 114, 163, 218, 243, 252, 392, 483, 506, 520], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 65, 75, 76, 80, 95, 98, 104, 105, 106, 107, 109, 110, 126, 131, 140, 160, 161, 163, 165, 171, 172, 183, 191, 225, 231, 232, 243, 246, 251, 382, 395, 458, 464, 465, 467, 468, 475, 478, 489, 493, 502, 505, 518, 519, 521, 524, 525, 526, 527], "list_pickl": 107, "littl": 107, "ln": 243, "load": [6, 156, 232], "loadtxt": [6, 156], "loan": 217, "loc": [408, 419, 421, 422, 430, 454], "local": 4, "locat": [0, 4, 164, 188, 189, 245, 392, 419, 421, 477, 524], "log": [6, 118, 163, 221, 231, 234, 235, 236, 237, 243, 244, 423], "log10": [6, 233, 235, 236], "log1p": [6, 116, 118, 233, 234, 236], "log2": [6, 233, 234, 235, 238], "log_bas": 243, "logabsdet": 221, "logaddexp": [6, 89, 238, 244], "logaddexp2": [6, 237, 244], "logarithm": [89, 204, 221, 231, 233, 234, 235, 236, 237, 238, 244, 424, 540], "logic": [16, 21, 239, 240, 241, 242, 530, 540], "logical_and": [6, 58, 240, 241, 242], "logical_not": [6, 59, 61, 180, 239, 241, 242], "logical_or": [6, 62, 239, 240, 242], "logical_xor": [6, 64, 239, 240, 241], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 163, 231], "logsumexp": [89, 237, 238], "lomax": 431, "long": [107, 214], "longer": [127, 133, 544], "look": [386, 499], "loop": 109, "loos": 108, "lorentz": 446, "lose": [127, 133, 135], "low": [68, 123, 125, 129, 130, 408, 436, 439, 452, 537], "lower": [95, 120, 169, 170, 193, 201, 207, 209, 245, 507, 508, 509, 510, 513, 514], "lowest": [56, 109, 110, 162, 196, 408, 436], "lstsq": 6, "m": [4, 10, 87, 106, 107, 109, 120, 123, 125, 127, 129, 130, 133, 134, 135, 139, 145, 146, 147, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 228, 245, 246, 247, 251, 404, 473, 478, 498, 499, 507, 508, 509, 510, 512, 513, 514], "machin": [4, 10, 141, 175, 211, 238, 460], "machineri": 107, "made": [36, 41, 53, 107, 154, 195, 260, 466, 489], "magnitud": [11, 12, 81, 121, 401], "mai": [16, 20, 21, 49, 69, 73, 75, 76, 82, 91, 104, 107, 109, 110, 117, 123, 125, 127, 128, 129, 130, 132, 133, 136, 139, 165, 170, 172, 202, 206, 207, 211, 213, 217, 220, 238, 243, 246, 260, 266, 269, 271, 339, 372, 404, 457, 460, 467, 475, 483, 493, 503, 524, 526, 537], "main": [95, 96, 97, 98, 99, 120, 140, 174, 205, 209, 228, 245, 504, 507, 508, 509, 512, 513], "mainstai": 10, "maintain": [33, 101, 104, 107, 169, 371, 477, 486, 499], "major": [4, 40, 41, 42, 43, 45, 48, 49, 104, 339, 387, 457, 458, 465, 518], "make": [43, 45, 74, 107, 218, 252, 392, 465, 483, 517, 520], "manag": 0, "mandelbrot": [218, 392], "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 457, 537], "manipul": [3, 96, 530, 540], "mantissa": 197, "manual": [4, 107, 503], "mappingproxi": 107, "mask": [94, 107, 194, 245, 387, 396, 405, 498, 509, 513], "mask_func": 245, "mask_indic": [6, 509, 513], "mass": 169, "match": [11, 12, 41, 75, 76, 82, 86, 89, 100, 107, 154, 156, 165, 178, 225, 244, 246, 403, 404, 462, 493, 498, 499, 502, 527], "math": [10, 114], "mathbf": [229, 524], "mathemat": [217, 530, 540], "matlab": 153, "matmul": [6, 103, 220, 223, 523], "matplotlib": [252, 446], "matric": [140, 157, 177, 194, 204, 205, 206, 208, 210, 213, 215, 217, 219, 220, 221, 223, 224, 228, 246, 247, 252, 540], "matrix": [87, 103, 104, 109, 178, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 228, 246, 247, 252, 356, 491, 512, 521, 523, 524, 530, 540], "matrix_norm": [6, 217], "matrix_pow": [6, 491], "matrix_rank": 6, "matrix_transpos": 6, "matter": 517, "max": [0, 6, 18, 31, 73, 104, 141, 151, 152, 169, 170, 175, 211, 215, 217, 219, 249, 254, 255, 265, 341, 425, 499, 503, 520, 537], "max_arg": 0, "max_val": 0, "maxima": [151, 248, 249], "maximum": [0, 6, 18, 31, 32, 73, 104, 110, 151, 152, 248, 254, 255, 261, 262, 265, 267, 336, 357, 393, 398, 399, 402, 404, 520], "may_share_memori": 6, "md": 217, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 80, 86, 95, 96, 98, 104, 109, 111, 112, 120, 123, 124, 125, 129, 130, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 165, 174, 177, 202, 217, 232, 245, 251, 253, 266, 269, 271, 339, 344, 352, 382, 389, 390, 391, 393, 408, 421, 423, 426, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 453, 454, 457, 466, 473, 494, 496, 507, 509, 513, 521, 522, 528, 529, 537], "meaningfulli": 537, "meant": 537, "median": [0, 6, 393], "meet": [36, 478], "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 102, 104, 107, 109, 111, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 166, 167, 168, 173, 176, 180, 184, 185, 186, 187, 196, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 251, 252, 255, 256, 259, 344, 350, 377, 385, 386, 388, 390, 391, 397, 398, 399, 401, 406, 407, 457, 459, 461, 463, 465, 466, 469, 470, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 515, 516, 524, 527, 528, 529, 530, 544], "mersenn": 408, "mesh": 194, "meshgrid": [6, 157, 177, 194, 253, 389], "met": [103, 216], "meta": 107, "metadata": 107, "method": [10, 16, 18, 19, 21, 33, 49, 80, 103, 104, 107, 143, 154, 156, 215, 219, 223, 247, 339, 344, 354, 361, 369, 372, 384, 387, 395, 408, 466, 479, 496, 498, 505, 530], "mgrid": [123, 125, 134, 137, 177, 194], "mgridclass": 253, "middl": [10, 99, 123, 125, 129, 130, 208, 251], "might": [109, 128, 129, 130], "min": [6, 19, 32, 73, 104, 141, 151, 152, 169, 170, 175, 202, 205, 211, 217, 220, 223, 224, 248, 249, 255, 267, 341, 499, 537], "min_scalar_typ": 6, "minima": [152, 254, 255], "minimum": [6, 19, 31, 32, 36, 73, 104, 148, 151, 152, 248, 249, 254, 261, 262, 265, 267, 337, 359, 393, 398, 399, 402], "minlength": 57, "mintypecod": 6, "minu": [118, 150, 256, 463, 516], "mirror": 393, "miscellan": [2, 530, 540], "mise": 453, "miss": 232, "mix": [212, 246], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 119, 463, 520], "mode": [72, 79, 83, 104, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 220, 340, 365, 380, 393, 403, 404, 446, 451, 458, 477, 498, 499], "model": [4, 410], "modf": 6, "modifi": [80, 99, 140, 251, 393, 445], "modul": [122, 164, 530], "modulu": [153, 256, 463], "monoton": [101, 169], "moor": 219, "more": [0, 3, 4, 33, 36, 53, 54, 55, 106, 107, 109, 110, 118, 134, 137, 146, 147, 154, 156, 170, 172, 177, 197, 203, 205, 211, 212, 214, 215, 216, 218, 219, 223, 225, 228, 229, 235, 237, 467, 473, 493, 502, 506, 517, 520, 537, 544], "most": [3, 4, 22, 99, 100, 107, 110, 122, 128, 260, 408, 444, 467, 492], "move": [104, 258, 363, 395, 471, 472, 505, 517], "moveaxi": [6, 395, 471, 472, 505, 519], "msg": 0, "mt": [104, 247], "mt19937": 444, "mu": [419, 423, 430, 453], "multi": [2, 104, 177, 194, 203, 253, 377, 389, 458, 517, 530], "multi_dot": [6, 103, 109, 110], "multi_index": 458, "multiarrai": 107, "multidimension": [169, 178, 527], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 75, 76, 88, 89, 105, 107, 109, 123, 125, 129, 130, 134, 135, 137, 139, 162, 170, 171, 172, 179, 194, 196, 203, 206, 207, 208, 209, 210, 216, 244, 248, 250, 254, 265, 266, 267, 269, 271, 457, 462, 475, 478, 486, 489, 493, 494, 506, 517, 519, 522, 525, 526, 530], "multipli": [6, 90, 109, 197, 208, 268, 400], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 426, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 73, 74, 75, 76, 77, 78, 81, 84, 85, 86, 89, 90, 91, 92, 93, 100, 102, 103, 106, 115, 116, 117, 118, 121, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 146, 148, 149, 150, 151, 152, 153, 156, 159, 162, 165, 166, 167, 168, 169, 170, 172, 173, 176, 180, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 203, 205, 216, 217, 218, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 250, 251, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 385, 386, 388, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 459, 461, 462, 463, 464, 469, 470, 471, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 488, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 515, 516, 522, 524, 526, 527], "mx": 211, "mxn": [205, 213, 228, 247], "n": [0, 4, 10, 34, 39, 91, 96, 97, 100, 101, 104, 105, 106, 107, 108, 117, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 157, 165, 171, 174, 194, 205, 211, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 245, 246, 247, 251, 252, 269, 271, 382, 393, 395, 396, 403, 404, 410, 425, 427, 437, 447, 477, 479, 489, 491, 494, 497, 498, 499, 502, 505, 506, 507, 508, 509, 510, 512, 513, 514, 521, 522, 524, 525, 537], "n1": 252, "n2": [232, 252], "n3": 252, "naiv": 110, "name": [0, 6, 107, 219, 483], "namedtupl": 220, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 102, 148, 151, 152, 181, 184, 186, 187, 188, 189, 234, 248, 249, 250, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 398, 399, 400, 488, 490, 494, 515, 517, 522, 540], "nan_to_num": 6, "nanargmax": [6, 31, 262], "nanargmin": [6, 32, 261], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 151, 152, 248, 249, 255, 267], "nanmean": [6, 250, 269, 271, 494, 522], "nanmedian": 6, "nanmin": [6, 151, 152, 249, 254, 255, 265], "nanpercentil": 6, "nanprod": [6, 400], "nanquantil": 6, "nanstd": [6, 250, 266, 271, 494, 522], "nansum": 6, "nanvar": [6, 250, 266, 269, 494, 522], "nat": 187, "nativ": 107, "native_cod": 107, "native_dt": 107, "natur": [221, 233, 234, 235, 236, 237, 238, 244], "nbad": 420, "nbyte": 104, "nd": [104, 354], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 541], "ndim": [6, 34, 36, 43, 45, 53, 54, 55, 87, 96, 99, 104, 107, 140, 195, 217, 223, 224, 247, 248, 254, 390, 395, 503, 505, 528], "ndmin": 36, "ne": 483, "nearest": [35, 71, 142, 149, 150, 256, 463, 470, 474, 488, 516], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 82, 90, 91, 108, 119, 127, 133, 135, 140, 154, 163, 231, 243, 246, 250, 251, 263, 264, 266, 268, 269, 270, 271, 400, 467, 494, 496, 522, 544], "necessarili": [206, 208], "need": [4, 36, 41, 99, 109, 164, 251, 465, 498, 499, 527], "needs_init": 107, "needs_pyapi": 107, "neg": [6, 10, 16, 21, 35, 57, 81, 98, 99, 101, 104, 117, 120, 123, 125, 128, 129, 130, 133, 136, 145, 148, 159, 165, 169, 184, 186, 187, 188, 189, 214, 225, 260, 265, 267, 269, 270, 271, 372, 397, 398, 399, 400, 403, 404, 427, 458, 474, 494, 496, 498, 499, 502, 504, 522], "negat": 478, "negative_binomi": 6, "neginf": 260, "neither": [103, 151, 152, 212, 223, 246, 265, 267], "nest": [44, 106, 172, 475, 493, 519, 526], "nested_it": 6, "net": [151, 152, 249, 255], "never": 520, "new": [22, 36, 49, 65, 66, 67, 74, 75, 76, 86, 89, 90, 91, 94, 99, 104, 106, 107, 108, 111, 112, 117, 151, 152, 154, 158, 159, 160, 161, 163, 172, 174, 179, 231, 243, 244, 245, 249, 251, 255, 258, 263, 264, 268, 270, 339, 369, 372, 382, 390, 391, 395, 462, 466, 467, 471, 472, 475, 489, 493, 503, 505, 519, 526, 527, 528, 529, 537], "new_dtyp": 107, "new_ord": 107, "new_shap": 467, "newaxi": 117, "newbyteord": 107, "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 102, 104, 111, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 160, 161, 162, 166, 167, 168, 173, 176, 180, 184, 186, 187, 196, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 255, 256, 259, 339, 344, 385, 386, 388, 390, 391, 397, 398, 399, 401, 406, 407, 459, 461, 463, 469, 470, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 515, 516, 524, 528, 529], "newshap": 466, "next": [4, 141, 386], "nextaft": 6, "ngood": 420, "ni": [252, 404, 498, 499], "nine": 410, "ninja": 4, "nj": [404, 498, 499], "njm": 109, "nk": [404, 498, 499], "nl": 10, "nlk": 109, "nn": 252, "noisi": 211, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 80, 86, 95, 96, 98, 101, 104, 111, 112, 119, 120, 124, 133, 136, 138, 144, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 169, 170, 174, 177, 182, 184, 194, 203, 225, 231, 232, 243, 245, 253, 260, 261, 262, 265, 267, 269, 271, 339, 344, 362, 372, 387, 389, 390, 391, 396, 398, 399, 408, 428, 429, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 494, 502, 507, 509, 513, 521, 522, 527, 528, 529], "nonc": [428, 429], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 86, 104, 144, 194, 527, 537], "nor": [151, 152, 208, 265, 267], "norm": [6, 10, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 202, 208, 211, 213, 230, 540], "normal": [6, 87, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 169, 206, 207, 220, 229, 238, 408, 423, 426, 437, 449, 458, 483, 524], "not_equ": [6, 113, 166, 167, 199, 200], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 60, 61, 63, 75, 76, 80, 88, 92, 94, 99, 101, 102, 104, 107, 109, 110, 117, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 149, 151, 152, 155, 156, 157, 158, 159, 169, 177, 179, 180, 184, 197, 198, 203, 205, 206, 213, 217, 225, 230, 232, 243, 251, 256, 259, 269, 270, 271, 344, 369, 387, 393, 395, 396, 398, 399, 403, 406, 411, 413, 414, 424, 429, 457, 463, 465, 466, 467, 469, 473, 483, 486, 488, 494, 495, 497, 502, 503, 505, 506, 515, 517, 519, 520, 522, 523], "notic": [107, 133, 136], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 102, 104, 111, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 173, 174, 180, 184, 186, 187, 196, 197, 198, 199, 200, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 254, 255, 256, 259, 265, 266, 267, 269, 270, 271, 339, 385, 386, 388, 390, 391, 397, 398, 399, 400, 401, 406, 407, 457, 461, 463, 465, 469, 470, 476, 480, 481, 482, 484, 486, 488, 490, 491, 494, 495, 496, 500, 501, 515, 516, 522, 524, 528, 529], "now": [16, 21, 43, 45, 96, 208, 211, 245], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 347, 349, 352, 353, 354, 356, 361, 363, 367, 372, 373, 374, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 400, 401, 402, 403, 404, 406, 407, 433, 442, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "nr": 10, "nsamp": 420, "nsampl": 420, "nth": [225, 502], "nuc": [213, 217, 230], "nuclear": 217, "num": [0, 107, 114, 163, 231, 243, 506, 520], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 42, 46, 47, 50, 52, 56, 57, 65, 66, 67, 86, 96, 98, 100, 101, 104, 107, 108, 109, 110, 117, 120, 121, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 142, 150, 155, 156, 158, 159, 163, 165, 169, 170, 174, 175, 181, 182, 183, 184, 191, 194, 197, 202, 210, 215, 217, 220, 221, 223, 226, 227, 231, 238, 243, 256, 260, 263, 264, 265, 267, 268, 269, 270, 271, 361, 370, 373, 384, 387, 393, 395, 396, 400, 401, 408, 410, 420, 444, 463, 464, 467, 470, 471, 472, 473, 474, 481, 485, 488, 494, 497, 503, 505, 507, 516, 517, 521, 522, 537, 540], "number_of_dimens": [104, 361, 384], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 77, 78, 81, 84, 85, 102, 107, 113, 115, 118, 128, 129, 130, 133, 135, 150, 151, 152, 166, 167, 176, 181, 184, 186, 187, 199, 200, 217, 218, 233, 234, 235, 236, 249, 255, 259, 385, 388, 397, 398, 399, 401, 459, 470, 474, 480, 481, 482, 484, 495, 500, 501, 515, 540], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 348, 349, 352, 353, 354, 361, 367, 372, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 537, 540], "nvidia": 4, "nx": 252, "ny": 252, "nyquist": [10, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136, 138], "o": [4, 16, 21, 107], "obj": [31, 32, 33, 94, 107, 154, 169, 179], "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 80, 95, 96, 98, 104, 107, 111, 112, 117, 120, 124, 138, 141, 143, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 175, 177, 179, 202, 207, 217, 225, 231, 232, 243, 245, 253, 339, 344, 354, 369, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 466, 502, 507, 509, 513, 521, 528, 529, 537], "obsolet": 185, "obtain": [10, 99, 201, 205, 228, 387], "obviou": 10, "occupi": [141, 175], "occur": [22, 49, 69, 75, 76, 82, 94, 104, 109, 172, 179, 206, 246, 260, 339, 475, 493, 524, 526], "occurr": [31, 32, 57, 101, 169, 261, 262, 517], "odd": [10, 124, 127, 131, 132, 133, 135, 136, 138, 251, 393], "off": [23, 127, 132, 205, 206, 211, 228], "offset": [99, 104, 107, 155, 156, 205, 228, 245, 347, 381, 504, 509, 510, 513, 514], "often": [94, 168], "ogrid": [177, 194, 527], "ogridclass": 389, "oil": [410, 427], "old": 467, "omit": [408, 436], "onc": 210, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 79, 82, 83, 86, 94, 104, 107, 111, 113, 117, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 146, 147, 148, 151, 152, 156, 160, 165, 170, 172, 174, 177, 179, 183, 194, 208, 213, 214, 217, 225, 230, 233, 234, 236, 245, 248, 249, 252, 253, 254, 255, 261, 262, 268, 270, 344, 352, 354, 355, 387, 389, 391, 396, 400, 427, 458, 472, 478, 486, 492, 493, 496, 498, 502, 506, 509, 510, 513, 514, 517, 528, 537], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "onedpl": 4, "onemkl": [4, 206, 208], "ones": [6, 36, 43, 45, 56, 89, 94, 102, 104, 109, 111, 112, 113, 117, 120, 139, 160, 161, 173, 174, 195, 211, 215, 218, 244, 245, 263, 268, 391, 392, 395, 400, 462, 468, 472, 505, 507, 515, 528, 529], "ones_lik": [6, 36, 112, 161, 390, 529], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 80, 83, 87, 104, 107, 109, 110, 111, 112, 120, 126, 136, 140, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 169, 170, 177, 185, 201, 207, 209, 212, 215, 217, 218, 219, 220, 223, 231, 232, 243, 245, 246, 248, 250, 254, 260, 261, 262, 265, 266, 267, 268, 269, 271, 339, 354, 372, 374, 390, 391, 394, 396, 397, 400, 408, 430, 436, 452, 457, 465, 466, 483, 486, 494, 496, 499, 513, 517, 520, 522, 524, 527, 528, 529, 537], "open": [156, 177, 194, 231, 389, 408, 438, 440, 441, 443, 452, 497], "opencl": [23, 36, 40, 41, 42, 43, 45, 80, 95, 98, 111, 112, 120, 124, 138, 155, 156, 157, 158, 160, 161, 163, 174, 231, 232, 243, 253, 389, 390, 391, 507, 521, 528, 529], "oper": [10, 15, 58, 59, 60, 61, 62, 63, 64, 102, 107, 109, 110, 113, 117, 140, 150, 153, 166, 167, 180, 198, 199, 200, 201, 239, 241, 246, 248, 254, 256, 259, 260, 261, 262, 385, 388, 397, 398, 399, 403, 463, 469, 495, 503, 515, 517, 519, 520, 524, 530, 540], "operand": [109, 110, 225, 227, 392, 502], "opposit": [10, 107, 119, 127, 132, 396, 457], "optim": [4, 109, 110, 169, 170], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 211, 213, 215, 216, 217, 219, 220, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 352, 382, 385, 386, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 528, 529, 544], "ord": [213, 217, 230], "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 92, 93, 99, 101, 102, 104, 107, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 123, 125, 128, 129, 130, 133, 135, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 160, 161, 162, 165, 166, 167, 168, 169, 173, 176, 180, 184, 185, 186, 187, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 213, 217, 223, 225, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 252, 255, 256, 258, 259, 279, 338, 339, 344, 352, 363, 366, 369, 371, 374, 382, 385, 386, 387, 388, 390, 391, 394, 395, 397, 398, 399, 401, 406, 407, 457, 458, 459, 461, 463, 465, 466, 467, 469, 470, 473, 476, 477, 480, 481, 482, 483, 484, 486, 488, 490, 491, 495, 500, 501, 502, 505, 515, 516, 517, 518, 521, 524, 527, 528, 529, 540], "ordin": [211, 222], "ordinari": [133, 178, 201], "orient": [88, 404, 499], "origin": [65, 99, 104, 127, 133, 135, 213, 217, 230, 252, 258, 268, 270, 466, 467, 471, 517], "ortho": [10, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139], "orthogon": [208, 220], "orthonorm": 220, "other": [33, 38, 49, 65, 66, 67, 100, 104, 107, 128, 129, 130, 133, 135, 149, 157, 174, 206, 208, 216, 217, 258, 275, 276, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 339, 408, 452, 467, 472, 486, 517, 524, 530, 540], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 73, 77, 78, 80, 81, 83, 84, 85, 86, 87, 92, 93, 95, 100, 102, 104, 107, 109, 111, 112, 113, 114, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 173, 174, 178, 180, 184, 186, 187, 196, 197, 198, 199, 200, 211, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 254, 255, 256, 257, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 339, 369, 385, 386, 388, 390, 391, 397, 398, 399, 400, 401, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 469, 470, 476, 477, 480, 481, 482, 484, 486, 488, 490, 491, 492, 494, 495, 496, 500, 501, 504, 515, 516, 522, 524, 527, 528, 529], "otim": [225, 502], "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 210, 212, 213, 216, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 334, 335, 336, 337, 340, 341, 344, 345, 346, 352, 354, 357, 358, 359, 364, 370, 376, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 515, 516, 520, 521, 522, 523, 524, 526, 527, 528, 529], "outer": [6, 88, 99, 109, 110, 195], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 84, 85, 89, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 104, 107, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 142, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 173, 174, 176, 177, 180, 181, 182, 184, 186, 187, 194, 196, 197, 198, 199, 200, 216, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 266, 268, 269, 270, 271, 339, 344, 385, 386, 388, 389, 390, 391, 397, 398, 399, 400, 401, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463, 464, 466, 469, 470, 474, 476, 478, 480, 481, 482, 483, 484, 486, 488, 490, 491, 492, 494, 495, 496, 498, 500, 501, 503, 504, 507, 509, 513, 515, 516, 517, 520, 521, 522, 524, 527, 528, 529, 540, 544], "outsid": [169, 170], "over": [10, 16, 21, 56, 89, 90, 91, 103, 104, 109, 110, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 145, 157, 163, 169, 170, 178, 203, 213, 217, 225, 229, 230, 231, 243, 244, 246, 248, 250, 252, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 352, 400, 404, 408, 435, 440, 451, 452, 457, 462, 467, 494, 496, 498, 499, 502, 506, 520, 522, 524, 540], "overal": [123, 125, 129, 130, 134, 135, 137, 139], "overflow": 148, "overlin": [229, 524], "overrid": [88, 112, 161, 391, 529], "overview": 2, "overwrite_input": 251, "p": [10, 202, 211, 214, 410, 413, 418, 424, 427, 520], "pack": [99, 457, 540], "packag": [0, 3], "packbit": 6, "pad": [6, 107, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 467], "pad_valu": 393, "pad_width": 393, "padder": 393, "padding_func": 393, "page": [3, 540], "pair": [10, 110, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 203, 206], "parallel": [1, 3, 4, 9, 530], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 349, 352, 354, 369, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "parameter": [408, 430, 452], "parametr": 506, "pareto": 6, "pars": [156, 232], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 104, 133, 151, 152, 176, 182, 183, 190, 191, 206, 207, 209, 245, 249, 255, 257, 353, 367, 393, 459, 460, 487, 509, 513, 516, 517, 537], "partial": [33, 251, 486], "particular": [107, 216], "particularli": 109, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 486, 507, 509, 513, 521, 528, 529, 537], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 107, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 170, 174, 177, 194, 211, 232, 245, 253, 260, 344, 369, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 465, 507, 509, 510, 513, 514, 521, 524, 528, 529], "past": 68, "path": [4, 109, 110, 156, 232], "path_info": 110, "pathlib": 232, "pattern": 56, "penros": 219, "per": [109, 124, 138, 458], "percentil": [6, 251], "perf_count": 0, "perform": [16, 21, 41, 42, 73, 100, 109, 123, 125, 128, 129, 130, 134, 135, 137, 139, 145, 201, 224, 400, 496], "perhap": 465, "period": [10, 520], "permit": 156, "permut": [6, 104, 109, 258, 382, 395, 505, 540], "permute_dim": [6, 505], "perpendicular": 88, "pg": 217, "phase": [10, 20, 520], "phase_deg": 520, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 92, 93, 122, 406, 482, 483, 484, 500, 501, 506, 520, 544], "pickl": [156, 232], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 73, 75, 76, 90, 91, 94, 103, 104, 117, 119, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 154, 177, 179, 181, 246, 248, 250, 251, 254, 260, 263, 264, 266, 268, 269, 270, 271, 352, 372, 374, 382, 389, 393, 400, 403, 404, 445, 466, 467, 471, 474, 486, 493, 494, 496, 498, 504, 522, 537], "plane": 473, "platform": [90, 91, 107, 263, 264, 268, 270, 400, 496], "pleas": [0, 3, 39, 105, 109, 169, 171, 525, 537], "plot": 446, "plt": [252, 446], "plu": [233, 234, 236], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 68, 81, 89, 107, 111, 112, 116, 120, 121, 122, 127, 128, 132, 133, 134, 135, 136, 141, 142, 148, 155, 156, 157, 159, 160, 161, 165, 174, 176, 197, 211, 214, 231, 232, 237, 238, 244, 250, 251, 260, 266, 269, 271, 386, 390, 391, 408, 437, 449, 459, 461, 462, 474, 476, 477, 483, 494, 506, 507, 522, 528, 529, 540], "pointer": [68, 107], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 77, 78, 81, 84, 85, 92, 93, 102, 104, 113, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 162, 166, 167, 168, 173, 176, 180, 184, 186, 187, 196, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 255, 256, 259, 385, 386, 388, 397, 398, 399, 401, 406, 407, 408, 435, 459, 461, 463, 469, 470, 474, 476, 480, 481, 482, 483, 484, 488, 490, 491, 495, 500, 501, 515, 516], "portion": [169, 170], "posinf": 260, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 70, 81, 98, 99, 104, 117, 120, 121, 123, 125, 128, 129, 130, 133, 136, 138, 141, 148, 156, 181, 184, 186, 187, 188, 189, 201, 214, 226, 258, 260, 265, 267, 270, 363, 377, 385, 395, 410, 434, 471, 472, 474, 476, 478, 490, 491, 504, 505], "possess": 206, "possibl": [10, 48, 49, 54, 55, 104, 105, 109, 110, 117, 151, 152, 165, 169, 171, 245, 339, 369, 395, 404, 457, 466, 489, 492, 497, 498, 499, 505, 525], "possibli": 44, "pow": [6, 399, 537], "power": [6, 10, 116, 122, 148, 214, 398, 491, 521], "pre": 170, "precis": [11, 12, 56, 90, 91, 107, 109, 141, 148, 176, 211, 228, 245, 263, 264, 268, 270, 400, 459, 496, 504], "predecessor": 520, "prefer": [72, 80, 94, 104, 344, 372, 387, 457], "prepend": [36, 100, 108, 503], "present": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 107, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 174, 177, 232, 245, 253, 265, 267, 270, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 507, 509, 513, 521, 528, 529], "preserv": [49, 53, 54, 55, 73, 104, 107, 109, 145, 146, 147, 148, 207, 208, 209, 251, 339, 457, 465, 504, 517], "press": [10, 217], "prevent": 109, "previou": [56, 393], "print": [0, 4, 42, 56, 57, 79, 101, 107, 110, 408, 427, 432], "print_device_info": 0, "printabl": 110, "printopt": 6, "prior": 100, "prob1": [237, 238], "prob12": [237, 238], "prob2": [237, 238], "probabl": [169, 238, 251, 410, 418, 427], "proce": 537, "process": [10, 483], "processor": 109, "prod": [6, 90, 104, 226, 227, 268, 537], "produc": [10, 34, 107, 232, 404, 477, 499], "product": [88, 90, 103, 104, 109, 110, 178, 194, 195, 203, 212, 216, 218, 222, 225, 226, 227, 229, 246, 259, 263, 268, 345, 392, 400, 502, 523, 524, 540], "program": [4, 149], "progress": [163, 231], "project": [4, 107, 229, 401, 524], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 62, 63, 64, 69, 70, 81, 84, 85, 92, 93, 102, 115, 116, 118, 148, 150, 151, 152, 153, 163, 173, 198, 231, 233, 234, 235, 236, 237, 238, 243, 246, 249, 255, 256, 259, 386, 398, 399, 406, 407, 461, 463, 468, 469, 476, 480, 482, 483, 484, 488, 490, 491, 495, 500, 501, 503, 515, 516, 524], "promote_typ": 6, "propag": [107, 151, 152, 248, 249, 254, 255, 263, 264, 265, 267, 268, 270], "proper": [151, 152, 206, 208], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 207, 209, 220, 231, 232, 243, 245, 253, 273, 339, 344, 348, 350, 351, 353, 355, 356, 360, 361, 367, 372, 373, 377, 382, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529, 537], "proport": 483, "protocol": [44, 107, 154], "prototyp": 112, "provid": [0, 6, 10, 31, 32, 36, 75, 76, 82, 89, 104, 105, 109, 110, 117, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 158, 169, 170, 172, 188, 189, 215, 219, 244, 261, 262, 265, 267, 268, 270, 408, 436, 439, 462, 465, 475, 493, 498, 506, 517, 524, 526, 527, 544], "pseudo": [219, 408], "ptp": 6, "pure": [10, 127, 133, 135, 136], "purpos": [34, 211, 217], "put": [6, 10, 104, 119, 127, 133, 135, 396, 404, 499, 537], "put_along_axi": [6, 403, 499], "putmask": [6, 403], "pval": 425, "py": 4, "pypi": 4, "pyplot": [252, 446], "pytest": 4, "python": [0, 2, 3, 44, 104, 107, 153, 154, 256, 354, 463, 464, 537], "q": [208, 214, 220, 227, 251], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 123], "quantil": 6, "quaternion": 214, "question": 95, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "quick": [2, 3], "quickest": 457, "quickli": [194, 544], "quotient": [29, 51], "r": [88, 93, 220], "r2": 220, "rad": 93, "rad2deg": [6, 92, 93, 520], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 92, 93, 406, 520, 544], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 77, 78, 80, 81, 82, 84, 85, 89, 92, 93, 101, 102, 103, 104, 105, 111, 112, 113, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 171, 173, 174, 180, 184, 186, 187, 196, 197, 198, 199, 200, 214, 216, 217, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 250, 254, 255, 256, 259, 261, 262, 265, 266, 267, 269, 270, 271, 339, 340, 356, 385, 386, 388, 390, 391, 397, 398, 399, 400, 401, 406, 407, 457, 458, 461, 462, 463, 465, 466, 469, 470, 476, 480, 481, 482, 484, 486, 488, 489, 490, 491, 492, 494, 495, 496, 500, 501, 515, 516, 522, 524, 525, 528, 529, 537], "ramp": 393, "rand": [6, 110, 408, 438, 440, 441, 443], "randint": [6, 104, 354, 408, 439], "randn": [6, 145, 146, 147, 219, 220, 223, 227, 408, 493], "random": [104, 110, 145, 146, 147, 208, 216, 219, 220, 223, 227, 354, 493, 530, 540], "random_integ": [6, 408, 436], "random_sampl": [6, 408, 435, 438, 441, 443], "randomli": 432, "randomst": 436, "ranf": 6, "rang": [0, 101, 158, 169, 170, 225, 238, 395, 402, 403, 427, 432, 458, 464, 493, 502, 505, 520, 540], "rank": [117, 119, 157, 211, 215, 228, 393, 497], "rate": [124, 138], "rather": 387, "ratio": [0, 102, 150, 211, 515, 544], "ration": 540, "ravel": [6, 104, 119, 144, 217, 352, 392, 466, 537], "ravel_multi_index": [6, 518], "raveled_indic": 458, "raw": 220, "rayleigh": 6, "rcond": [211, 219], "re": [31, 32, 57, 95, 133, 471], "read": [95, 99, 104, 107, 155, 156, 158, 159, 232, 352, 457, 466], "readonli": 107, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 70, 71, 81, 89, 104, 122, 125, 127, 132, 133, 134, 135, 136, 137, 139, 141, 149, 151, 152, 153, 173, 176, 182, 190, 191, 201, 206, 207, 208, 209, 215, 219, 220, 221, 223, 237, 238, 244, 249, 255, 256, 260, 269, 271, 410, 427, 460, 461, 462, 463, 476, 487, 488, 494, 516, 517, 522, 537, 540], "real_if_clos": [6, 20, 176, 459], "rearrang": [104, 363, 540], "reason": 135, "rebuild": 106, "recal": 107, "recent": [22, 492], "recip": [4, 10], "reciproc": [6, 476, 490], "recommend": [109, 387, 503], "reconstruct": [107, 223, 517], "recov": 10, "reduc": [16, 21, 31, 32, 56, 220, 223, 244, 248, 250, 251, 252, 254, 261, 262, 265, 266, 267, 268, 269, 270, 271, 400, 462, 467, 494, 496, 522], "reduce_hypot": 173, "reduct": [16, 21], "redund": 136, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537], "reflect": [393, 537], "reflect_typ": 393, "reflector": 220, "regardless": [107, 207, 209, 525], "regular": 232, "rel": [17, 33, 104, 181, 205, 215, 228, 377, 471, 472, 486], "relat": 107, "relev": [107, 163, 231, 243], "rem": 153, "remain": [16, 21, 56, 110, 137, 139, 169, 244, 250, 251, 258, 266, 269, 271, 462, 466, 494, 522], "remaind": [6, 150, 153, 256, 398, 399], "remov": [31, 32, 92, 94, 99, 104, 117, 133, 205, 228, 375, 400, 406, 492, 496, 524, 540], "reorder": [109, 145, 227, 258], "rep": 503, "repeat": [6, 104, 123, 125, 129, 130, 134, 135, 137, 139, 140, 206, 207, 208, 209, 252, 396, 467, 503, 506, 517, 537], "repeatedli": 109, "repetit": [0, 464, 503], "replac": [3, 10, 44, 73, 119, 260, 263, 264, 396, 404, 413, 466, 478, 537], "replic": 503, "repo": 4, "repr": 316, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 107, 110, 128, 136, 154, 157, 163, 165, 177, 221, 231, 243, 252, 271, 393, 408, 467, 511, 517, 537], "represent": [58, 62, 64, 110, 141, 175, 177, 260, 386, 488, 537], "request": 472, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 104, 107, 109, 121, 177, 260, 339, 372, 393, 466, 467], "res_cpu": 95, "res_host": 95, "resampl": 483, "rese": 444, "reset": 537, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 95, 96, 97, 99, 102, 103, 104, 105, 106, 109, 117, 119, 126, 131, 145, 153, 171, 177, 178, 179, 194, 195, 205, 212, 213, 217, 225, 228, 230, 245, 246, 248, 254, 259, 347, 352, 356, 372, 382, 393, 396, 432, 457, 465, 467, 471, 473, 495, 502, 504, 506, 509, 510, 513, 514, 515, 517, 519, 525, 537], "resid": [117, 121, 154], "residu": 211, "resiz": [6, 117, 537], "resolut": 141, "resolv": [89, 117, 244, 462], "resourc": 0, "respect": [15, 29, 51, 58, 60, 62, 63, 64, 102, 104, 113, 148, 150, 153, 165, 166, 167, 198, 199, 200, 203, 237, 238, 239, 241, 242, 256, 259, 377, 388, 398, 399, 463, 469, 495, 515, 520], "rest": 39, "restor": 471, "restrict": 229, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 36, 51, 56, 58, 59, 60, 61, 62, 63, 64, 69, 73, 75, 76, 81, 86, 89, 90, 91, 94, 102, 103, 107, 110, 112, 113, 118, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 142, 148, 150, 155, 156, 157, 158, 159, 161, 163, 166, 167, 169, 170, 177, 180, 184, 186, 187, 188, 189, 197, 198, 199, 200, 201, 205, 206, 212, 213, 217, 220, 225, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 250, 251, 254, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 387, 388, 391, 392, 398, 399, 400, 403, 408, 410, 440, 462, 466, 468, 469, 470, 472, 474, 477, 480, 481, 483, 489, 493, 494, 496, 498, 499, 502, 503, 506, 511, 515, 516, 517, 519, 522, 524, 527, 529, 537], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 69, 107, 540], "ret": 407, "retain": 466, "retriev": [99, 107, 205], "retstep": 231, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 366, 369, 370, 373, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 411, 430, 432, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 537], "return_count": 517, "return_index": 517, "return_invers": 517, "reus": [154, 170], "revers": [99, 104, 140, 145, 146, 147, 205, 382, 395, 473, 505, 506, 519, 521], "rewrit": 211, "rfft": [6, 10, 124, 127, 132, 133, 134, 135, 137, 138, 139], "rfft2": [6, 134], "rfftfreq": [6, 124], "rfftn": [6, 122, 125, 135, 136, 137], "right": [10, 28, 50, 60, 63, 73, 88, 99, 101, 146, 147, 173, 198, 203, 206, 207, 208, 209, 216, 227, 245, 451, 462, 469, 477, 504, 506, 509, 513, 521], "right_shift": [6, 60, 63, 198], "rightmost": [169, 170, 227], "rint": [6, 35, 71, 142, 149, 474, 516], "rl": [218, 392], "roll": [6, 472], "rollaxi": [6, 471], "root": [6, 70, 173, 202, 461, 462, 476, 490, 491], "rot90": [6, 146, 147], "rotat": [146, 147, 473], "roughli": [107, 211], "round": [6, 23, 35, 71, 104, 127, 132, 142, 149, 150, 162, 206, 256, 463, 470, 516, 537, 540], "routin": [2, 530, 537], "row": [45, 49, 74, 75, 76, 90, 91, 99, 104, 106, 120, 146, 147, 165, 172, 174, 177, 216, 223, 339, 387, 457, 458, 475, 489, 493, 507, 509, 517, 518, 525, 526], "row_stack": [6, 526], "rowvar": 87, "rsqrt": [461, 490], "rtol": [17, 181, 215, 219], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 62, 63, 64, 69, 70, 81, 82, 84, 85, 88, 91, 92, 93, 102, 115, 116, 118, 150, 151, 152, 153, 163, 173, 198, 203, 231, 233, 234, 235, 236, 237, 238, 243, 244, 246, 249, 250, 251, 255, 256, 259, 266, 269, 271, 386, 398, 399, 406, 407, 461, 462, 463, 468, 469, 476, 480, 482, 483, 484, 488, 490, 491, 494, 495, 496, 500, 501, 506, 515, 516, 522, 524], "run": [0, 4], "runtim": 4, "runtimewarn": [265, 267], "s1": [104, 107, 195, 377], "s10": 107, "s16": 107, "s2": [104, 107, 377], "s25": 107, "s3": [104, 377], "safe": [49, 69, 75, 76, 82, 104, 109, 172, 246, 339, 475, 493, 524, 526], "sai": 466, "said": 227, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 62, 63, 64, 67, 73, 74, 75, 76, 81, 89, 90, 91, 99, 100, 101, 102, 103, 104, 106, 112, 113, 117, 119, 128, 129, 130, 135, 140, 142, 148, 150, 151, 152, 153, 154, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 176, 178, 180, 181, 188, 189, 190, 195, 196, 197, 198, 199, 200, 203, 205, 208, 214, 219, 220, 224, 225, 228, 237, 238, 239, 241, 242, 244, 248, 249, 250, 251, 254, 255, 256, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 369, 382, 386, 388, 391, 393, 396, 398, 399, 400, 404, 408, 430, 436, 452, 457, 459, 462, 463, 464, 466, 469, 471, 472, 475, 477, 478, 486, 492, 493, 494, 495, 496, 498, 499, 502, 504, 508, 510, 512, 514, 515, 518, 522, 523, 526, 529, 544], "same_kind": [49, 69, 75, 76, 82, 104, 109, 172, 246, 339, 475, 493, 524, 526], "sampl": [10, 124, 131, 133, 136, 138, 163, 165, 169, 231, 243, 404, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 499, 506, 509, 513, 530, 540], "sample_r": 138, "satisfi": [36, 41, 43, 45, 49, 104, 119, 210, 339, 396, 465, 478], "save": [6, 156, 251, 544], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 62, 63, 64, 69, 80, 81, 82, 88, 95, 98, 100, 102, 103, 104, 107, 109, 110, 113, 119, 124, 138, 140, 148, 150, 151, 152, 153, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 178, 179, 181, 183, 191, 192, 195, 196, 197, 198, 199, 200, 212, 222, 225, 231, 237, 238, 239, 241, 242, 243, 245, 246, 249, 252, 255, 256, 259, 349, 354, 384, 386, 388, 393, 396, 398, 399, 403, 404, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 431, 433, 434, 436, 439, 442, 444, 448, 450, 451, 452, 453, 454, 455, 456, 460, 463, 469, 477, 478, 495, 498, 502, 506, 515, 516, 521, 523, 527, 537], "scale": [10, 110, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 163, 195, 220, 231, 243, 408, 415, 417, 419, 420, 421, 422, 430, 442, 447, 454], "scientif": 10, "scipi": 114, "scope": 4, "script": 4, "search": [110, 530, 540], "searchsort": [6, 101, 104, 169, 486, 537], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 62, 63, 64, 68, 81, 88, 99, 102, 103, 107, 110, 113, 116, 123, 124, 125, 126, 129, 130, 133, 136, 138, 148, 150, 151, 152, 153, 162, 165, 166, 167, 169, 170, 171, 172, 173, 178, 181, 195, 196, 198, 199, 200, 203, 205, 212, 225, 228, 229, 237, 238, 239, 241, 242, 245, 246, 248, 249, 252, 254, 255, 256, 259, 388, 392, 398, 399, 463, 469, 473, 491, 495, 497, 502, 504, 515, 523, 524], "section": [4, 39, 107, 125, 130, 135, 139, 213, 230, 537], "see": [3, 35, 107, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 154, 169, 211, 213, 230, 393, 425, 474, 509, 510, 513, 514, 517, 537], "seed": [6, 104, 110, 354, 408], "seek": 156, "seldom": 148, "select": [6, 33, 82, 119, 248, 254, 486, 492, 498, 506, 530], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "self": [104, 107, 143, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 351, 408], "semant": 169, "sens": 227, "sep": [156, 159], "separ": [10, 104, 107, 109, 156, 159, 170, 260, 369, 467], "sequenc": [39, 44, 53, 54, 55, 74, 75, 76, 79, 83, 105, 106, 109, 110, 111, 112, 123, 125, 129, 130, 133, 134, 135, 137, 139, 160, 161, 163, 169, 170, 171, 172, 177, 179, 194, 216, 225, 231, 243, 251, 258, 390, 391, 393, 396, 432, 445, 464, 465, 468, 475, 489, 493, 502, 506, 519, 525, 526, 528, 529], "sequenti": [83, 87, 114, 257, 268], "seri": [10, 133, 424], "serv": 519, "set": [10, 31, 32, 33, 36, 49, 72, 86, 95, 96, 98, 101, 104, 107, 109, 111, 160, 169, 170, 174, 177, 213, 215, 217, 218, 219, 230, 231, 248, 254, 261, 262, 270, 329, 339, 340, 351, 372, 390, 391, 392, 393, 400, 478, 480, 481, 486, 496, 509, 513, 528, 529, 537], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 107], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 210, "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 106, 107, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 148, 149, 150, 151, 152, 153, 157, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 180, 184, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 210, 211, 212, 213, 214, 216, 220, 221, 222, 223, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 361, 369, 373, 375, 382, 384, 385, 386, 388, 389, 390, 391, 393, 395, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 417, 420, 425, 426, 431, 435, 436, 437, 438, 439, 440, 441, 443, 448, 449, 455, 457, 458, 459, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 507, 508, 510, 512, 513, 514, 515, 516, 518, 519, 522, 524, 525, 526, 527, 528, 529, 530, 540], "share": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 507, 509, 513, 521, 528, 529], "shared_bin": 170, "shares_memori": 6, "shift": [10, 60, 63, 123, 125, 126, 130, 131, 198, 469, 471], "short": [483, 516, 524, 537], "shortcut": 393, "shorter": [127, 133], "shorthand": [11, 12, 15, 58, 59, 60, 61, 62, 63, 64, 102, 113, 150, 166, 167, 180, 198, 199, 200, 239, 241, 246, 256, 259, 385, 388, 397, 398, 399, 463, 469, 495, 515, 527], "should": [31, 32, 36, 39, 49, 99, 101, 103, 104, 109, 110, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 153, 156, 164, 169, 179, 194, 211, 214, 225, 246, 258, 261, 262, 265, 267, 339, 371, 393, 425, 458, 466, 467, 477, 488, 498, 502, 504, 518, 520, 524, 537], "show": [9, 38, 107, 140, 173, 242, 252, 260, 263, 264, 265, 267, 270, 446], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [104, 165, 208, 371, 477], "sigma": [423, 430], "sign": [6, 10, 17, 81, 107, 181, 204, 221, 256, 385, 397, 400, 463, 481, 496, 516], "signal": [10, 124, 127, 132, 133, 135, 138, 483, 520], "signatur": [245, 246, 393, 524], "signbit": [6, 480], "signific": 109, "signum": 480, "similar": [3, 40, 41, 104, 107, 163, 179, 203, 205, 212, 218, 228, 229, 231, 243, 245, 344, 372, 396, 408, 436, 509, 510, 513, 514], "simpl": [4, 242, 540], "simpli": [97, 104, 156, 169, 170, 197, 382], "sin": [0, 6, 26, 27, 46, 47, 84, 208, 252, 483, 484, 500, 506], "sinc": [6, 104, 133, 206, 208, 374, 387, 519], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 482, 483, 484, 500, 501], "sing": 217, "singl": [9, 10, 33, 66, 67, 74, 104, 109, 110, 165, 179, 216, 225, 248, 254, 354, 375, 400, 408, 427, 436, 437, 438, 439, 440, 441, 443, 449, 496, 502, 506, 524, 537], "singleton": [16, 21, 56, 117, 244, 250, 251, 265, 266, 267, 269, 271, 462, 492, 494, 522], "singular": [210, 211, 215, 217, 219, 223, 224], "sinh": [6, 14, 25, 27, 47, 85, 482, 501], "sinu": 483, "size": [0, 6, 23, 31, 32, 36, 39, 56, 68, 75, 76, 83, 86, 87, 90, 91, 96, 101, 104, 105, 107, 110, 119, 122, 124, 128, 138, 156, 163, 165, 171, 172, 203, 205, 213, 217, 218, 220, 223, 225, 229, 230, 231, 243, 245, 248, 250, 254, 261, 262, 263, 264, 266, 268, 270, 354, 355, 372, 390, 396, 400, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 467, 471, 475, 489, 492, 493, 496, 502, 513, 519, 520, 524, 525, 526, 528, 537], "skip": 99, "slice": [94, 119, 179, 261, 262, 265, 266, 267, 269, 271, 403, 404, 478, 499, 506, 513, 514, 537], "slogdet": [6, 204], "slower": [225, 502], "slowest": [104, 352, 457, 466], "small": [17, 118, 181, 211, 219, 235, 237, 238, 260, 513], "smaller": [100, 104, 122, 123, 125, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 211, 256, 363, 396, 463, 520], "smallest": [141, 175, 217, 517], "smallest_norm": 141, "smat": 223, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 107, 113, 127, 132, 148, 169, 179, 191, 225, 231, 238, 244, 250, 251, 252, 266, 269, 271, 446, 462, 494, 502, 503, 522], "softwar": 4, "solut": [211, 222, 467], "solv": [6, 211, 226, 227, 540], "some": [23, 107, 117, 119, 149, 178, 211, 393, 396, 520, 527, 537], "sometim": [168, 537], "somewhat": 214, "sophist": 214, "sort": [6, 33, 39, 104, 105, 171, 223, 251, 338, 363, 395, 477, 487, 489, 499, 505, 506, 517, 525, 530, 537, 540], "sort_complex": 6, "sorter": [104, 371, 477], "sought": 202, "sourc": [4, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 72, 73, 74, 76, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 169, 170, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 384, 387, 390, 391, 392, 393, 394, 396, 400, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462, 464, 465, 466, 467, 468, 471, 472, 473, 477, 478, 479, 485, 486, 487, 489, 492, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "space": [6, 23, 124, 126, 138, 156, 163, 165, 231, 243, 506, 544], "spars": [177, 252], "speak": 217, "special": [2, 107, 114, 530, 540], "specif": [0, 4, 107, 157], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 67, 69, 75, 76, 80, 89, 90, 91, 94, 95, 98, 99, 104, 109, 110, 111, 112, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 145, 148, 155, 156, 157, 158, 160, 161, 163, 165, 174, 185, 205, 207, 209, 217, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 250, 251, 253, 263, 264, 266, 268, 269, 270, 271, 338, 347, 354, 389, 390, 391, 395, 396, 400, 403, 404, 408, 421, 431, 449, 457, 458, 462, 465, 467, 471, 472, 473, 474, 478, 485, 493, 494, 496, 498, 499, 502, 504, 505, 506, 507, 517, 519, 521, 522, 524, 528, 529], "spectrum": [10, 126, 127, 131, 132], "speed": 109, "speedup": 110, "spell": 387, "split": [6, 39, 75, 76, 105, 106, 171, 172, 475, 493, 519, 525, 526, 540], "spreadsheet": 149, "sqrt": [6, 10, 70, 104, 353, 367, 462, 476, 491], "squar": [6, 70, 173, 174, 201, 202, 206, 207, 208, 210, 211, 214, 221, 226, 227, 245, 269, 271, 412, 428, 461, 462, 476, 478, 490, 494, 510, 514, 521, 522], "squeez": [6, 104, 117, 537], "src": 82, "stabil": [33, 486], "stabl": [33, 486], "stack": [6, 74, 75, 76, 106, 172, 204, 205, 212, 213, 215, 219, 220, 221, 224, 228, 246, 247, 387, 475, 489, 499, 519, 526], "stai": 73, "stand": 165, "standard": [104, 141, 150, 153, 250, 256, 266, 269, 271, 354, 376, 408, 423, 430, 437, 446, 447, 448, 449, 450, 463, 494, 522, 537, 540], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 408, 437], "standard_t": 6, "start": [2, 3, 23, 43, 45, 110, 124, 128, 138, 155, 163, 231, 243, 245, 467, 472, 509, 513], "start_tim": 0, "stat_length": 393, "state": 408, "statist": [393, 530, 540], "std": [6, 104, 250, 266, 269, 271, 522, 537], "stdev": [408, 449], "step": [4, 23, 110, 163, 168, 231, 243], "sticki": 107, "still": [56, 171, 217, 525], "stop": [23, 163, 231, 243], "store": [142, 163, 188, 189, 228, 231, 238, 243, 246, 392, 524], "str": [42, 44, 75, 76, 107, 109, 110, 156, 159, 172, 232, 330, 393, 465, 475, 493, 511, 526], "str_": 107, "straightforward": 177, "strictli": 217, "stride": [48, 49, 104, 339], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 107, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 393, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 511, 513, 521, 528, 529, 537], "string_repr": 110, "stringio": 232, "strongli": [4, 503], "struct": 107, "structur": [107, 232], "student": 450, "style": [49, 104, 339, 387, 393, 457, 458, 518], "sub": [39, 75, 76, 94, 99, 105, 107, 109, 171, 172, 227, 228, 475, 489, 493, 504, 507, 519, 525, 526], "subarrai": [94, 107, 177, 517], "subclass": [41, 465], "subdiagon": [205, 228], "subdivid": 107, "subdtyp": 107, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 77, 78, 80, 81, 84, 85, 92, 93, 102, 104, 112, 113, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 161, 162, 166, 167, 168, 173, 180, 184, 186, 187, 196, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 255, 256, 259, 339, 385, 386, 388, 391, 397, 398, 399, 401, 406, 407, 461, 463, 469, 470, 476, 480, 481, 482, 484, 488, 490, 491, 495, 500, 501, 515, 516, 524, 529], "subscript": [109, 110], "subset": [3, 165, 492, 540], "subtract": [6, 393], "subtyp": 457, "succeed": 108, "success": [42, 410, 418, 427], "sugar": [97, 510, 514], "suggest": 99, "suit": 4, "suitabl": [34, 104, 354, 382, 404, 467, 477, 499], "sum": [0, 3, 4, 6, 10, 15, 56, 89, 91, 95, 98, 99, 100, 103, 104, 109, 128, 169, 173, 178, 202, 211, 212, 217, 225, 226, 228, 237, 238, 244, 246, 263, 264, 270, 346, 381, 410, 425, 427, 462, 502, 504, 506, 524, 537, 540], "sum_": [10, 217, 229, 524], "sum_along_diagon": 504, "sum_of_weight": 56, "summari": 530, "summat": [103, 109, 110, 178, 225, 227, 246, 392, 502, 524], "superdiagon": [205, 228], "suppli": [127, 132, 216, 393, 408, 437], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 77, 78, 80, 81, 83, 84, 85, 87, 92, 93, 102, 104, 107, 109, 111, 112, 113, 114, 115, 116, 118, 120, 121, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 173, 174, 179, 180, 184, 186, 187, 196, 197, 198, 199, 200, 203, 205, 212, 218, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 339, 372, 385, 386, 388, 390, 391, 394, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 463, 465, 469, 470, 476, 480, 481, 482, 486, 488, 490, 491, 494, 495, 496, 500, 501, 515, 516, 522, 524, 528, 529, 544], "sure": 465, "surnam": 107, "surpris": [128, 129, 130], "svd": [6, 202, 210, 215, 219, 224], "svdval": 6, "swap": [107, 123, 126, 497], "swapax": [6, 104, 258, 537], "swapped_cod": 107, "swapped_dt": 107, "sy": 107, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "sycl_context": 104, "sycl_devic": 104, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 154, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 339, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 507, 509, 513, 521, 528, 529], "symmetr": [127, 133, 135, 136, 201, 206, 207, 208, 209, 215, 219, 223, 393], "symmetri": [10, 122, 127, 132, 133, 136], "syntact": [97, 510, 514], "syntax": 537, "sys_is_l": 107, "system": [3, 4, 222], "t": [10, 75, 76, 87, 104, 107, 127, 185, 201, 206, 208, 211, 382, 387, 450, 457, 506], "t1": 544, "tabl": [2, 9, 213, 230, 530], "tack": 107, "take": [6, 74, 104, 119, 194, 245, 396, 404, 457, 466, 477, 478, 483, 499, 517, 520, 537, 544], "take_along_axi": [6, 31, 32, 33, 72, 404, 498], "taken": [56, 99, 100, 108, 110, 127, 133, 134, 135, 136, 137, 139, 168, 169, 246, 269, 271, 478, 494, 504, 507, 509, 513, 522, 523, 524], "tall": 140, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 84, 482, 501], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 482, 484, 500, 501], "tanh": [6, 14, 25, 30, 52, 85, 484, 500], "target": [49, 69, 104, 339, 403], "target_devic": 104, "tau": 220, "tbb": 4, "tempfil": 156, "temporari": [156, 544], "temporaryfil": 156, "ten": 418, "tensor": [44, 104, 109, 110, 154, 225, 226, 227, 261, 262, 265, 267, 268, 402, 502], "tensordot": [6, 103, 109, 178, 226, 227, 246, 392], "tensorinv": [6, 227], "tensorsolv": [6, 226], "term": [10, 15, 102, 110, 122, 123, 125, 128, 129, 130, 133, 136, 259, 495, 515], "test": [0, 2, 16, 17, 21, 113, 166, 167, 182, 184, 186, 187, 188, 189, 199, 200, 268, 387, 388, 410, 537, 540], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [155, 156, 158, 159, 232], "th": [91, 95, 98, 100, 104, 108, 120, 165, 177, 251, 382, 389, 395, 478, 505, 508, 510, 512, 514], "than": [36, 60, 63, 90, 91, 104, 105, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 146, 147, 150, 157, 166, 167, 169, 170, 172, 198, 199, 200, 211, 215, 219, 220, 225, 228, 263, 264, 268, 270, 356, 363, 387, 393, 396, 400, 467, 469, 478, 480, 492, 493, 496, 502, 504, 516, 520, 544], "thei": [17, 38, 107, 181, 185, 197, 208, 211, 225, 475, 477, 502, 506, 509, 513, 520, 521, 526, 537], "them": [74, 215, 219, 537], "theor": 206, "theoret": 110, "therefor": [122, 136, 157, 207, 209, 467], "theta": 506, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 73, 75, 76, 80, 86, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 146, 147, 148, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 170, 172, 183, 185, 191, 194, 203, 205, 207, 209, 211, 212, 213, 216, 217, 218, 221, 224, 228, 229, 230, 231, 232, 235, 237, 238, 243, 244, 245, 246, 248, 251, 254, 256, 258, 260, 261, 262, 265, 267, 268, 270, 339, 344, 349, 352, 354, 363, 369, 382, 387, 393, 396, 400, 403, 404, 441, 443, 457, 462, 463, 465, 466, 467, 472, 473, 475, 486, 493, 496, 498, 499, 503, 506, 510, 514, 517, 519, 520, 521, 524, 526, 527], "thing": 498, "think": [393, 466], "third": [74, 75, 76, 88, 105, 106, 123, 172, 225, 475, 489, 493, 502, 526], "those": [10, 73, 94, 214, 404], "though": 128, "thousand": 418, "three": [53, 54, 55, 117, 214, 225, 245, 408, 444, 502, 517], "threshold": 215, "through": [41, 107, 170, 194, 206, 208, 211, 245, 465, 537], "throw": 425, "thu": [10, 127, 133, 135, 503], "tile": [6, 464, 540], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 62, 63, 64, 81, 100, 102, 103, 113, 123, 125, 127, 129, 130, 132, 134, 135, 137, 139, 148, 150, 151, 152, 153, 162, 166, 167, 168, 173, 178, 179, 181, 187, 195, 196, 197, 198, 199, 200, 211, 215, 219, 225, 237, 238, 239, 241, 242, 249, 255, 256, 259, 386, 388, 393, 398, 399, 410, 425, 463, 469, 473, 483, 495, 499, 502, 503, 515, 517, 523], "time_dpnp": 0, "time_numpi": 0, "timedelta": 107, "timeit": 109, "timestep": 124, "tini": 141, "titl": 107, "tm": 153, "to_begin": 108, "to_devic": [6, 104], "to_end": 108, "tobyt": 6, "todo": 428, "tofil": [6, 156], "togeth": [17, 75, 76, 107, 128, 181, 194, 493, 527], "tol": [215, 426, 460], "toler": [17, 37, 181, 215, 460], "tolist": 6, "too": [4, 123, 125, 129, 130, 134, 135, 137, 139, 527], "toolkit": 3, "tostr": 6, "total": [6, 86, 90, 104, 360, 467, 485, 494, 522], "toward": [35, 71, 142, 149, 150, 169, 170, 256, 386, 463, 470, 473, 474, 516], "trace": [6, 95, 98, 99, 104, 109, 537], "traceback": [22, 492], "trail": 511, "transfer": 104, "transform": [110, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 530], "transpos": [6, 34, 104, 109, 185, 201, 208, 247, 258, 273, 356, 395, 537, 540], "trapezoid": [6, 91, 496], "trapz": 6, "treat": [17, 94, 127, 133, 135, 156, 165, 181, 207, 209, 211, 216, 232, 251, 263, 264, 268, 270, 400, 404, 477, 499, 503, 517, 520, 537], "tri": 6, "trial": 410, "triangl": [95, 173, 245, 462, 507, 508, 509, 510, 512, 513, 514], "triangular": [6, 201, 207, 209, 220, 245, 509, 510, 513, 514], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 84, 85, 482, 484, 500, 501, 540], "tril": [6, 95, 245, 507, 509, 510, 513], "tril_indic": [6, 245, 510, 513], "tril_indices_from": [6, 514], "trili": 510, "trili1": 510, "trim": [123, 125, 129, 130, 134, 135, 137, 139, 511], "trim_zero": 6, "triu": [6, 95, 245, 507, 509, 513, 514], "triu_indic": [6, 245, 509, 514], "triu_indices_from": [6, 510], "triui": 514, "triuim1": 514, "trivial": [206, 499], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 77, 78, 80, 81, 82, 84, 85, 86, 87, 91, 92, 93, 101, 102, 104, 107, 109, 110, 113, 115, 116, 117, 118, 119, 121, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 163, 166, 167, 168, 169, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 277, 334, 335, 339, 344, 357, 358, 359, 364, 376, 378, 383, 385, 386, 387, 388, 396, 397, 398, 399, 400, 401, 404, 406, 407, 413, 461, 462, 463, 465, 466, 469, 470, 476, 478, 480, 481, 482, 484, 486, 488, 490, 491, 494, 495, 496, 499, 500, 501, 502, 506, 515, 516, 517, 519, 521, 522, 524, 527], "true_divid": [6, 102], "trunc": [6, 35, 71, 142, 149, 470, 474], "truncat": [35, 71, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 142, 149, 446, 470, 474, 516], "trust": [261, 262], "truth": [58, 59, 61, 62, 64, 113, 166, 167, 180, 199, 200, 239, 240, 241, 242, 388, 537, 540], "try": [4, 42], "tukei": 10, "tup": [74, 106, 172, 475, 526], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 66, 67, 68, 80, 86, 89, 95, 96, 97, 98, 104, 107, 110, 117, 126, 131, 145, 154, 157, 160, 161, 163, 165, 169, 170, 172, 177, 183, 191, 194, 195, 217, 220, 227, 230, 231, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 354, 372, 382, 387, 389, 393, 395, 400, 458, 462, 464, 466, 467, 471, 475, 479, 492, 493, 494, 496, 503, 505, 509, 510, 513, 514, 518, 519, 521, 522, 524, 526, 537], "turn": 74, "twister": 408, "two": [10, 17, 37, 53, 54, 58, 59, 61, 62, 64, 79, 83, 88, 98, 99, 100, 103, 104, 107, 109, 110, 117, 122, 123, 125, 128, 129, 130, 133, 134, 135, 137, 139, 151, 152, 165, 178, 180, 181, 195, 197, 205, 207, 211, 213, 216, 218, 222, 224, 225, 228, 239, 241, 242, 246, 247, 248, 249, 251, 254, 255, 258, 265, 267, 356, 363, 379, 392, 393, 408, 437, 457, 470, 473, 474, 478, 497, 502, 504, 509, 510, 513, 514, 523], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 348, 352, 354, 361, 369, 373, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 540], "type_nam": 0, "typeerror": [56, 82, 104, 154, 197, 372], "typenam": 6, "typestr": 107, "typic": [17, 127, 181, 477, 537], "u": [107, 201, 207, 209, 223, 245, 268, 270, 517], "u1": [107, 155, 156], "u16": 107, "u4": 69, "u8": 107, "ufunc": [2, 530, 537], "uint64": 107, "uint8": [107, 155, 156], "uk": 10, "un": 107, "unalt": 393, "unari": 537, "unchang": 139, "undefin": [20, 104, 251, 363, 393], "under": [213, 230], "underli": [58, 62, 64, 457, 466], "undo": [10, 130], "undocu": 107, "unexpect": [268, 270], "unicod": 107, "uniform": [6, 107, 165, 169, 170, 243, 408, 435, 438, 440, 441, 443], "uniformli": [243, 408, 452], "uniniti": [36, 111, 112, 160, 390, 528], "union1d": 6, "uniqu": [6, 56, 57, 89, 101, 107, 244, 250, 258, 266, 269, 271, 393, 462, 464, 494, 522], "unique_al": 6, "unique_count": [6, 517], "unique_indic": 517, "unique_invers": [6, 517], "unique_valu": 6, "unit": [104, 124, 138, 194, 206, 214, 221, 377], "unitari": [10, 165, 220, 223], "uniti": 169, "univ": 10, "univers": [2, 217, 530, 537], "unless": [16, 21, 49, 90, 91, 104, 109, 169, 206, 215, 217, 243, 263, 264, 268, 270, 339, 400, 496, 517, 524], "unlik": [33, 104, 138, 369, 372, 486], "unmodifi": 170, "unpackbit": 6, "unravel": 518, "unravel_index": [6, 31, 32, 458], "unraveled_coord": 518, "unsaf": [49, 69, 75, 76, 82, 104, 109, 172, 246, 339, 475, 493, 524, 526], "unscal": 10, "unsign": [107, 400, 496], "unspecifi": 466, "unstack": [6, 172, 475, 493, 526], "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 81, 84, 85, 92, 93, 102, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 154, 162, 168, 173, 180, 196, 197, 198, 234, 235, 236, 237, 238, 249, 255, 256, 257, 259, 385, 386, 397, 398, 399, 401, 406, 407, 461, 463, 469, 470, 476, 480, 481, 482, 484, 488, 495, 500, 501, 515, 516], "until": [110, 471, 472], "unwrap": [6, 92, 406], "up": [4, 10, 107, 109, 147, 499, 510, 517], "upcast": 36, "updat": 4, "uplo": [207, 209], "upon": [104, 377], "upper": [95, 120, 169, 170, 201, 207, 209, 220, 245, 507, 509, 510, 512, 513, 514], "url": 4, "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 68, 69, 73, 75, 76, 80, 88, 90, 91, 94, 95, 96, 98, 99, 102, 104, 107, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 149, 150, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 177, 178, 180, 185, 194, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 211, 215, 216, 217, 219, 225, 228, 231, 232, 238, 239, 241, 243, 245, 246, 248, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 279, 339, 344, 352, 372, 385, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 404, 408, 411, 413, 414, 424, 429, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 449, 452, 457, 460, 463, 464, 465, 466, 467, 469, 471, 477, 478, 480, 483, 487, 494, 495, 496, 498, 499, 502, 503, 504, 506, 507, 509, 510, 513, 514, 515, 517, 518, 521, 522, 524, 527, 528, 529, 537, 544], "usabl": 148, "usag": [3, 4, 124, 138], "use_getitem": 107, "use_setitem": 107, "user": [107, 260, 393], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 492, 507, 509, 513, 521, 528, 529], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 349, 384, 385, 386, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 529], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 80, 95, 96, 98, 104, 111, 112, 120, 124, 138, 155, 156, 157, 158, 159, 160, 161, 163, 174, 177, 231, 232, 243, 245, 253, 344, 389, 390, 391, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 507, 509, 513, 521, 528, 529], "usual": [96, 104, 107, 212, 246, 372], "util": 530, "v": [79, 95, 98, 104, 107, 206, 207, 229, 251, 371, 403, 477, 524], "v0": 6, "v10": 107, "v13": 6, "v2": 6, "v_sort": 251, "val": [104, 140, 143, 329, 365, 396], "valid": [83, 117, 245, 497, 509, 510, 513, 514], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 100, 101, 102, 104, 107, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 127, 128, 133, 135, 136, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 179, 180, 181, 183, 184, 186, 187, 190, 191, 194, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 214, 215, 217, 219, 221, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 255, 256, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 275, 276, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 336, 337, 339, 341, 344, 349, 351, 363, 365, 372, 385, 386, 387, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 418, 435, 436, 452, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 474, 476, 477, 478, 480, 481, 482, 483, 486, 488, 490, 491, 494, 495, 496, 498, 499, 500, 501, 504, 506, 509, 513, 515, 516, 517, 520, 522, 524, 527, 528, 529, 537, 540], "value2": 107, "valueerror": [22, 36, 41, 42, 104, 154, 217, 261, 262, 356, 466, 489, 492], "van": 217, "vander": 6, "vandermond": 521, "var": [6, 104, 250, 266, 269, 271, 494, 537], "vararg": 165, "vari": [10, 16, 20, 21, 99, 110, 123, 125, 127, 128, 129, 130, 132, 133, 136, 139, 157, 177, 185, 202, 205, 206, 207, 211, 213, 217, 260, 266, 269, 271, 457, 460, 483], "variabl": [87, 211, 222], "varianc": [104, 250, 266, 269, 271, 383, 494, 522, 540], "variou": [217, 483, 544], "vdot": [6, 103, 229, 246, 524], "vecdot": [6, 523], "vector": [88, 109, 157, 177, 178, 194, 202, 203, 212, 215, 216, 217, 218, 223, 224, 229, 230, 246, 251, 252, 392, 393, 523, 524, 540], "vector_norm": [6, 217], "vendor": 4, "veri": [3, 10, 17, 179, 181, 218, 252, 260, 392], "verif": 0, "verifi": 201, "version": [4, 86, 88, 99, 104, 107, 144, 246, 251, 351, 387, 392, 458, 504, 518, 523, 524], "vertic": [74, 75, 76, 99, 106, 140, 145, 146, 172, 205, 473, 475, 489, 493, 525, 526], "vetterlin": 10, "vh": 223, "via": 133, "view": [6, 39, 53, 54, 55, 65, 95, 99, 104, 105, 117, 123, 125, 129, 130, 134, 135, 137, 139, 145, 146, 147, 171, 252, 258, 273, 356, 369, 382, 395, 404, 457, 458, 466, 473, 489, 492, 497, 505, 518, 525], "violat": 82, "void": 107, "void640": 107, "von": 453, "vonmis": 6, "vsplit": [6, 75, 76, 489], "vstack": [6, 74, 75, 76, 106, 172, 211, 475, 489, 493], "w": [10, 56, 206, 207, 208, 209, 214, 465], "wa": [10, 89, 107, 216, 244, 265, 267, 269, 271, 408, 449, 462, 466, 494, 522], "wai": [3, 4, 10, 104, 110, 122, 128, 129, 130, 135, 156, 225, 363, 502], "wald": 6, "walk": 107, "want": [4, 185, 499], "warn": [107, 261, 262, 426, 467], "we": [80, 96, 99, 110, 140, 211, 245, 404, 499, 506], "weibul": [6, 456], "weight": [56, 57, 87, 169, 170, 250, 266, 496], "well": [107, 109, 156, 169, 170, 400, 410, 427, 446], "were": [75, 76, 157, 408, 437, 493, 520], "what": [10, 49, 69, 75, 76, 82, 104, 107, 109, 113, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 172, 182, 246, 339, 410, 427, 475, 493, 524, 526, 537], "when": [10, 22, 23, 33, 36, 37, 40, 41, 43, 45, 48, 49, 56, 80, 82, 101, 104, 107, 109, 122, 133, 135, 136, 151, 152, 163, 168, 179, 206, 212, 217, 220, 224, 225, 231, 238, 243, 245, 246, 251, 256, 263, 264, 265, 267, 268, 270, 339, 457, 463, 467, 470, 472, 474, 478, 486, 498, 502, 506, 517, 524, 527, 544], "whenev": [117, 395, 497, 505], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 77, 78, 80, 81, 82, 84, 85, 88, 89, 92, 93, 95, 96, 98, 100, 101, 102, 104, 105, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 127, 133, 134, 135, 138, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 173, 174, 177, 178, 180, 181, 182, 183, 184, 186, 187, 190, 191, 196, 197, 198, 199, 200, 201, 205, 211, 215, 220, 223, 224, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 255, 256, 259, 265, 266, 267, 268, 269, 270, 271, 334, 335, 339, 344, 357, 358, 359, 364, 371, 376, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 406, 407, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 457, 461, 462, 463, 467, 469, 470, 472, 476, 477, 478, 480, 481, 482, 484, 488, 489, 490, 491, 494, 495, 496, 500, 501, 504, 505, 507, 509, 513, 515, 516, 520, 521, 522, 524, 525, 528, 529], "wherev": 82, "whether": [16, 17, 21, 37, 89, 101, 107, 154, 181, 182, 185, 201, 220, 231, 260, 268, 270, 458, 481, 517, 518, 537], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 65, 75, 76, 80, 82, 86, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 107, 109, 110, 111, 112, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 145, 151, 152, 155, 156, 157, 158, 159, 160, 161, 163, 165, 169, 170, 172, 174, 177, 179, 184, 186, 187, 188, 189, 201, 203, 205, 206, 213, 215, 217, 224, 227, 228, 229, 230, 232, 243, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 339, 344, 354, 387, 389, 390, 391, 395, 400, 403, 408, 430, 435, 436, 437, 438, 439, 440, 441, 443, 449, 452, 458, 462, 464, 467, 471, 478, 485, 486, 489, 492, 493, 494, 496, 498, 504, 505, 506, 507, 508, 509, 512, 513, 516, 519, 520, 521, 522, 524, 527, 528, 529, 537, 544], "whichev": 178, "while": [10, 137, 139, 169, 170, 250, 266, 269, 271, 387, 396, 400, 471, 494, 496, 507, 522], "whitespac": [156, 159], "whole": [123, 125, 129, 130, 134, 135, 137, 139, 509, 513], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 99, 107, 119, 120, 140, 202, 205, 207, 208, 209, 213, 224, 226, 228, 245, 247, 258, 471, 510, 514, 518], "why": 133, "wide": 140, "width": [107, 169, 170, 393], "wild": [410, 427], "window": [4, 124, 138], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 76, 77, 78, 81, 84, 85, 89, 102, 104, 106, 113, 115, 116, 118, 121, 142, 148, 149, 150, 151, 152, 153, 166, 167, 168, 171, 172, 173, 176, 180, 181, 184, 186, 187, 188, 189, 197, 198, 199, 200, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 254, 255, 256, 257, 259, 265, 267, 268, 343, 385, 386, 388, 397, 398, 399, 401, 459, 461, 463, 469, 470, 474, 475, 476, 480, 481, 482, 483, 484, 489, 490, 491, 493, 495, 500, 501, 515, 516, 525, 526, 530, 537, 540, 544], "wish": 537, "within": [17, 23, 37, 49, 104, 109, 127, 128, 129, 130, 132, 133, 135, 169, 170, 181, 339, 403, 408, 452], "without": [99, 104, 111, 140, 382, 457, 466, 467, 537], "won": 107, "word": [128, 129, 130, 133, 135, 149, 208, 408, 452], "work": [4, 35, 48, 104, 354, 499, 537], "world": [107, 410, 427], "would": [33, 75, 76, 104, 107, 157, 177, 216, 245, 246, 363, 395, 408, 458, 486, 489, 493, 499, 505, 520, 524], "wrap": [92, 104, 140, 365, 380, 393, 403, 404, 406, 458, 477, 498, 499, 520], "wrapper": 104, "writabl": 465, "write": [95, 99, 104, 140, 156, 352, 466], "writeabl": 465, "written": [4, 86, 89, 140, 156, 185, 244, 462, 527], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 65, 67, 70, 71, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 92, 93, 95, 98, 100, 101, 104, 105, 107, 108, 111, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 138, 139, 142, 143, 144, 149, 155, 156, 157, 158, 160, 161, 162, 163, 165, 171, 174, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 197, 202, 203, 205, 208, 211, 213, 217, 220, 222, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 252, 253, 257, 258, 260, 339, 344, 353, 354, 361, 367, 372, 373, 385, 387, 389, 390, 391, 397, 400, 401, 402, 406, 407, 426, 432, 457, 459, 461, 462, 464, 465, 470, 471, 472, 474, 476, 478, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 497, 498, 500, 501, 506, 507, 516, 519, 521, 525, 527, 528, 529], "x0": [43, 45, 80, 98, 391, 521, 529], "x00": 156, "x01": [155, 156], "x02": [155, 156], "x03": [155, 156], "x04": [155, 156], "x05": 155, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 62, 63, 64, 72, 81, 83, 102, 104, 113, 148, 150, 151, 152, 153, 162, 166, 167, 168, 173, 194, 196, 197, 198, 199, 200, 203, 212, 218, 229, 237, 238, 239, 240, 241, 242, 246, 249, 252, 255, 256, 257, 259, 339, 385, 386, 388, 394, 397, 398, 399, 405, 445, 463, 469, 471, 495, 515, 524], "x1_i": [15, 29, 51, 58, 60, 62, 63, 64, 81, 102, 113, 148, 150, 153, 166, 167, 173, 198, 199, 200, 237, 238, 239, 241, 242, 256, 259, 388, 398, 399, 463, 469, 495, 515], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 62, 63, 64, 81, 83, 102, 113, 148, 150, 151, 152, 153, 162, 166, 167, 168, 173, 194, 196, 197, 198, 199, 200, 203, 212, 218, 229, 237, 238, 239, 240, 241, 242, 246, 249, 252, 255, 256, 259, 385, 386, 388, 397, 398, 399, 463, 469, 471, 490, 495, 515, 524], "x2_i": [15, 29, 51, 58, 60, 62, 63, 64, 81, 102, 113, 148, 150, 153, 166, 167, 173, 198, 199, 200, 237, 238, 239, 241, 242, 256, 259, 388, 398, 399, 463, 469, 495, 515], "x3": [16, 21, 148], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 61, 70, 71, 77, 78, 84, 85, 115, 116, 118, 149, 176, 180, 233, 234, 235, 236, 240, 385, 397, 401, 459, 461, 470, 474, 476, 480, 481, 482, 484, 490, 491, 500, 501, 516], "xi": [236, 252], "xn": [194, 252], "xor": [58, 59, 61, 62, 64, 180, 239, 240, 241, 242], "xv": 252, "xx": 252, "xy": 252, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 65, 80, 87, 88, 98, 104, 107, 108, 111, 112, 117, 120, 124, 138, 155, 156, 157, 158, 160, 161, 163, 165, 174, 188, 189, 202, 203, 211, 231, 232, 243, 252, 253, 257, 260, 344, 361, 369, 372, 389, 390, 391, 465, 506, 507, 521, 527, 528, 529], "y1": 197, "y2": 197, "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 268, 270, 387, 393, 408, 527, 537], "you": [4, 99, 127, 132, 133, 185, 245, 251, 466, 498, 499, 537, 544], "your": [4, 99, 544], "yv": 252, "yy": 252, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 80, 88, 98, 111, 112, 120, 124, 138, 155, 156, 157, 158, 160, 161, 163, 174, 231, 232, 243, 252, 253, 389, 390, 391, 418, 507, 521, 528, 529], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 60, 71, 86, 88, 89, 96, 100, 104, 111, 112, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 149, 156, 160, 161, 174, 176, 182, 183, 188, 189, 190, 191, 198, 206, 207, 209, 211, 214, 215, 219, 223, 225, 244, 245, 248, 250, 254, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 361, 362, 372, 373, 377, 384, 387, 390, 391, 393, 400, 408, 410, 438, 440, 441, 443, 459, 460, 462, 467, 470, 474, 480, 486, 494, 496, 502, 507, 508, 511, 512, 516, 522, 527, 529], "zeros_lik": [6, 36, 93, 112, 161, 251, 391, 407, 528], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 274, "__add__": 275, "__and__": 276, "__bool__": 277, "__complex__": 278, "__copy__": 279, "__eq__": 280, "__float__": 281, "__floordiv__": 282, "__ge__": 283, "__getitem__": 284, "__gt__": 285, "__iadd__": 286, "__iand__": 287, "__ifloordiv__": 288, "__ilshift__": 289, "__imatmul__": 290, "__imod__": 291, "__imul__": 292, "__int__": 293, "__invert__": 294, "__ior__": 295, "__ipow__": 296, "__irshift__": 297, "__isub__": 298, "__itruediv__": 299, "__ixor__": 300, "__le__": 301, "__len__": 302, "__lshift__": 303, "__lt__": 304, "__matmul__": 305, "__mod__": 306, "__mul__": 307, "__ne__": 308, "__neg__": 309, "__new__": 310, "__or__": 311, "__pos__": 312, "__pow__": 313, "__radd__": 314, "__rand__": 315, "__repr__": 316, "__rfloordiv__": 317, "__rlshift__": 318, "__rmatmul__": 319, "__rmod__": 320, "__rmul__": 321, "__ror__": 322, "__rpow__": 323, "__rrshift__": 324, "__rshift__": 325, "__rsub__": 326, "__rtruediv__": 327, "__rxor__": 328, "__setitem__": 329, "__str__": 330, "__sub__": 331, "__truediv__": 332, "__xor__": 333, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 534, "add": 15, "algebra": [6, 532], "all": [16, 334], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 335], "api": [1, 530], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 336], "argmin": [32, 337], "argsort": [33, 338], "argwher": 34, "arithmet": [535, 537, 538], "around": 35, "arrai": [6, 7, 9, 36, 531, 533, 534, 537], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 339], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 537, "avail": [9, 544], "averag": [56, 543], "backend": 1, "background": 10, "basic": [534, 538], "beta": 409, "bincount": 57, "binomi": 410, "bit": [5, 544], "bitwise_and": 58, "bitwise_invert": 59, "bitwise_left_shift": 60, "bitwise_not": 61, "bitwise_or": 62, "bitwise_right_shift": 63, "bitwise_xor": 64, "broadcast_arrai": 65, "broadcast_shap": 66, "broadcast_to": 67, "build": [4, 7], "byte": 411, "byte_bound": 68, "c": 1, "calcul": 537, "can_cast": 69, "cbrt": 70, "ceil": 71, "chang": 534, "channel": 4, "chisquar": 412, "choic": 413, "choleski": 201, "choos": [72, 340], "class": 7, "clip": [73, 341], "co": 84, "column_stack": 74, "comparison": [6, 533, 537, 544], "complex": 535, "concat": 75, "concaten": 76, "cond": 202, "conda": 4, "conj": [77, 342], "conjug": [78, 343], "construct": 537, "control": 0, "convers": 537, "convolv": 79, "copi": [80, 344], "copysign": 81, "copyto": 82, "correl": [83, 543], "cosh": 85, "count": 541, "count_nonzero": 86, "cov": 87, "creat": 8, "creation": 7, "cross": [88, 203], "cumlogsumexp": 89, "cumprod": [90, 345], "cumsum": [91, 346], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 531, 537, 539], "decomposit": 532, "deg2rad": 92, "degre": 93, "delet": 94, "det": 204, "detail": 10, "develop": 2, "devic": 4, "diag": 95, "diag_indic": 96, "diag_indices_from": 97, "diagflat": 98, "diagon": [99, 205, 347], "diff": 100, "differ": 535, "digit": 101, "dimens": [10, 534], "dimension": [6, 537], "dirichlet": 414, "discret": 6, "distribut": 539, "divid": 102, "dot": 103, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 539], "dpnp_arrai": 104, "driver": 4, "dsplit": 105, "dstack": 106, "dtype": [107, 348], "ediff1d": 108, "eig": 206, "eigenvalu": 532, "eigh": 207, "eigval": 208, "eigvalsh": 209, "einsum": 109, "einsum_path": 110, "element": [5, 534], "empti": 111, "empty_lik": 112, "equal": 113, "equat": 532, "erf": 114, "error": 542, "exampl": [0, 4], "except": 532, "exist": 7, "exp": 115, "exp2": 116, "expand_dim": 117, "expm1": 118, "expon": 535, "exponenti": 415, "extens": 2, "extract": 119, "extrema": 535, "ey": 120, "f": 416, "fab": 121, "fft": [10, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "fft2": 123, "fftfreq": 124, "fftn": 125, "fftshift": 126, "fill": 349, "fill_diagon": 140, "find": 535, "finfo": 141, "fix": 142, "flag": 350, "flat": 351, "flatit": 143, "flatnonzero": 144, "flatten": 352, "flip": 145, "fliplr": 146, "flipud": 147, "float": [535, 544], "float_pow": 148, "floor": 149, "floor_divid": 150, "fmax": 151, "fmin": 152, "fmod": 153, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 154, "frombuff": 155, "fromfil": 156, "fromfunct": 157, "fromit": 158, "fromstr": 159, "full": 160, "full_lik": 161, "function": [10, 533, 535, 542, 543, 544], "gamma": 417, "gcd": 162, "gener": [531, 539], "geometr": 418, "geomspac": 163, "get_includ": 164, "gradient": 165, "greater": 166, "greater_equ": 167, "guid": 4, "gumbel": 419, "handl": 535, "heavisid": 168, "helper": 10, "hermitian": 10, "hfft": 127, "higher": 10, "histogram": [169, 543], "histogram_bin_edg": 170, "hsplit": 171, "hstack": 172, "hyperbol": 535, "hypergeometr": 420, "hypot": 173, "ident": 174, "ifft": 128, "ifft2": 129, "ifftn": 130, "ifftshift": 131, "ihfft": 132, "iinfo": 175, "imag": [176, 353], "implement": 10, "index": [531, 537], "indic": 177, "infin": 533, "inform": [2, 8, 10], "inner": 178, "insert": [179, 531], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 210, "invert": 180, "irfft": 133, "irfft2": 134, "irfftn": 135, "isclos": 181, "iscomplex": 182, "iscomplexobj": 183, "isfinit": 184, "isfortran": 185, "isinf": 186, "isnan": 187, "isneginf": 188, "isposinf": 189, "isreal": 190, "isrealobj": 191, "isscalar": 192, "issubdtyp": 193, "item": [354, 537], "items": 355, "iter": 531, "ix_": 194, "join": 534, "kind": 534, "kron": 195, "laplac": 421, "layout": 537, "lcm": 196, "ldexp": 197, "left_shift": 198, "less": 199, "less_equ": 200, "level": 6, "librari": 0, "like": [531, 534], "linalg": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "linear": [6, 532], "linspac": 231, "loadtxt": 232, "log": 233, "log10": 234, "log1p": 235, "log2": 236, "logaddexp": 237, "logaddexp2": 238, "logarithm": 535, "logic": 533, "logical_and": 239, "logical_not": 240, "logical_or": 241, "logical_xor": 242, "logist": 422, "lognorm": 423, "logseri": 424, "logspac": 243, "logsumexp": 244, "lstsq": 211, "manipul": [534, 537], "mask_indic": 245, "math": 544, "mathemat": 535, "matmul": [212, 246], "matric": 7, "matrix": [7, 532, 537], "matrix_norm": 213, "matrix_pow": 214, "matrix_rank": 215, "matrix_transpos": 247, "max": [248, 357], "maximum": 249, "mean": [250, 358], "median": 251, "memori": 537, "meshgrid": 252, "method": 537, "mgrid": 253, "min": [254, 359], "minimum": 255, "miscellan": [8, 535, 536], "mod": 256, "modf": 257, "modul": [6, 538], "moveaxi": 258, "mt": 356, "multi": [6, 537], "multi_dot": 216, "multinomi": 425, "multipl": 537, "multipli": 259, "multivariate_norm": 426, "nan": 533, "nan_to_num": 260, "nanargmax": 261, "nanargmin": 262, "nancumprod": 263, "nancumsum": 264, "nanmax": 265, "nanmean": 266, "nanmin": 267, "nanprod": 268, "nanstd": 269, "nansum": 270, "nanvar": 271, "nbyte": 360, "ndarrai": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 537], "ndim": [361, 384], "neg": 385, "negative_binomi": 427, "nextaft": 386, "noncentral_chisquar": 428, "noncentral_f": 429, "nonzero": [362, 387], "norm": [217, 532], "normal": [10, 430], "not_equ": 388, "number": [532, 534, 535], "numer": 7, "numpi": [2, 6], "ogrid": 389, "ones": 390, "ones_lik": 391, "oper": [5, 531, 532, 533, 534, 535, 537, 544], "order": 543, "other": [532, 535, 537], "outer": [218, 392], "output": 5, "over": 531, "overview": 3, "pack": 5, "packag": [4, 538], "pad": 393, "parallel": [0, 2], "pareto": 431, "partit": [363, 394], "permut": [432, 539], "permute_dim": 395, "pinv": 219, "place": 396, "point": 535, "poisson": 433, "poly1d": 538, "polynomi": 538, "polyutil": 538, "posit": 397, "pow": 398, "power": [399, 434], "prod": [364, 400], "product": [532, 535], "proj": 401, "ptp": 402, "put": [365, 403], "put_along_axi": 404, "putmask": 405, "python": 4, "qr": 220, "quick": 4, "r": 4, "rad2deg": 406, "radian": 407, "rand": 435, "randint": 436, "randn": 437, "random": [6, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 539], "random_integ": 439, "random_sampl": 440, "randomst": 408, "ranf": 441, "rang": 7, "ration": 535, "ravel": [366, 457], "ravel_multi_index": 458, "rayleigh": 442, "real": [10, 367, 459], "real_if_clos": 460, "rearrang": 534, "reciproc": 461, "reduce_hypot": 462, "refer": [1, 530], "remaind": 463, "remov": 534, "repeat": [368, 464], "requir": 465, "reshap": [369, 466], "resiz": 467, "result_typ": 468, "rfft": 136, "rfft2": 137, "rfftfreq": 138, "rfftn": 139, "right_shift": 469, "rint": 470, "roll": 471, "rollaxi": 472, "rot90": 473, "round": [370, 474, 535], "routin": [7, 8, 10, 531, 534, 535, 536, 540], "row_stack": 475, "rsqrt": 476, "sampl": [6, 443, 539], "scikit": 4, "search": 541, "searchsort": [371, 477], "seed": 444, "select": [478, 537], "shape": [7, 372, 479, 534, 537], "shuffl": 445, "sign": 480, "signbit": 481, "simpl": 539, "sin": 482, "sinc": 483, "sinh": 484, "size": [373, 485], "slogdet": 221, "solv": [222, 532], "sort": [374, 486, 541], "sort_complex": 487, "space": 488, "special": [535, 537, 542], "split": [489, 534], "sqrt": 490, "squar": 491, "squeez": [375, 492], "stack": 493, "standard": 10, "standard_cauchi": 446, "standard_exponenti": 447, "standard_gamma": 448, "standard_norm": 449, "standard_t": 450, "start": 4, "statist": 543, "std": [376, 494], "stride": 377, "subtract": 495, "sum": [378, 496, 535], "summari": 6, "svd": 223, "svdval": 224, "swapax": [379, 497], "sycl": 4, "t": 273, "tabl": 6, "take": [380, 498], "take_along_axi": 499, "tan": 500, "tanh": 501, "target": 4, "tensordot": [225, 502], "tensorinv": 226, "tensorsolv": 227, "test": [4, 8, 533], "tile": [503, 534], "trace": [228, 381, 504], "transform": [6, 10], "transpos": [382, 505, 534], "trapezoid": 506, "tri": 507, "triangular": 451, "trigonometr": [535, 544], "tril": 508, "tril_indic": 509, "tril_indices_from": 510, "trim_zero": 511, "triu": 512, "triu_indic": 513, "triu_indices_from": 514, "true_divid": 515, "trunc": 516, "truth": 533, "twiddl": 544, "type": [8, 9, 533, 537], "ufunc": 544, "uniform": 452, "uniqu": 517, "univers": 544, "unravel_index": 518, "unstack": 519, "unwrap": 520, "util": 536, "valu": [7, 533], "vander": 521, "var": [383, 522], "varianc": 543, "vdot": 523, "vecdot": [229, 524], "vector": 532, "vector_norm": 230, "vonmis": 453, "vsplit": 525, "vstack": 526, "wald": 454, "weibul": 455, "where": 527, "wise": 5, "zero": 528, "zeros_lik": 529, "zipf": 456}})