Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array Creation Routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.flatiter", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 6, 27, 28, 54, 60, 79, 90, 138, 311, 339, 342, 383, 388, 411, 412, 430], "api": [0, 2, 3, 6, 80, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 386], "manag": 0, "specif": [0, 4, 80], "sycl": [0, 3, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "resourc": 0, "base": [0, 4, 80, 132, 171, 174, 175, 176, 177, 183, 300, 302, 306, 308], "python": [0, 2, 3, 79, 80, 124, 266, 386, 422], "packag": [0, 3], "an": [0, 3, 4, 11, 12, 14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 92, 113, 114, 116, 117, 124, 126, 127, 128, 131, 133, 134, 138, 140, 141, 143, 145, 154, 159, 165, 167, 169, 185, 186, 187, 191, 192, 194, 195, 208, 252, 254, 257, 266, 268, 274, 276, 279, 280, 282, 284, 286, 288, 289, 290, 295, 296, 297, 299, 300, 302, 305, 306, 307, 308, 311, 313, 318, 319, 321, 330, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 359, 360, 364, 365, 366, 367, 369, 370, 373, 374, 375, 376, 379, 380, 381, 382, 383, 386, 387, 388, 389, 393, 395, 397, 398, 399, 401, 402, 404, 406, 411, 412, 413, 414, 422], "below": [0, 4, 9, 80, 165, 167, 397, 401, 422], "demonstr": [0, 4, 80], "how": [0, 4, 80, 388], "extens": [0, 1, 3, 4, 9, 133, 415], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 252, 253, 255, 256, 260, 265, 266, 276, 278, 280, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 422, 426], "can": [0, 3, 4, 13, 15, 25, 44, 45, 46, 47, 50, 59, 72, 77, 78, 79, 80, 86, 120, 121, 122, 123, 126, 135, 136, 138, 139, 145, 154, 155, 156, 178, 179, 181, 182, 186, 192, 193, 196, 253, 292, 293, 294, 298, 301, 302, 307, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 363, 365, 367, 385, 388, 389, 402, 404, 422], "easili": 0, "combin": [0, 80, 90], "devic": [0, 2, 3, 19, 31, 33, 34, 35, 36, 37, 71, 74, 79, 84, 85, 93, 124, 130, 131, 132, 140, 172, 183, 296, 297, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 382, 397, 408, 413, 414], "interfac": 0, "dpctl": [0, 4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 59, 60, 62, 63, 64, 77, 78, 79, 85, 86, 88, 89, 90, 91, 92, 116, 117, 118, 119, 120, 121, 122, 123, 131, 135, 136, 139, 142, 145, 147, 148, 149, 154, 155, 156, 159, 161, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 292, 293, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 361, 363, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 385, 386, 387, 388, 390, 391, 395, 398, 401, 404, 405, 412, 414], "liter": 0, "queue": [0, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "from": [0, 3, 27, 28, 29, 33, 34, 50, 53, 54, 60, 69, 70, 79, 80, 89, 92, 124, 126, 128, 129, 138, 140, 173, 189, 244, 254, 257, 284, 289, 295, 302, 307, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 365, 366, 373, 381, 382, 383, 388, 389, 407, 411, 412, 426], "allow": [0, 79, 253, 280, 422], "set": [0, 27, 28, 31, 53, 72, 79, 80, 84, 130, 140, 165, 167, 243, 253, 254, 263, 296, 297, 375, 376, 413, 414, 422], "input": [0, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 264, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 333, 339, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 404, 405, 407, 409, 412, 413, 414], "current": [0, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 52, 59, 62, 63, 66, 67, 68, 77, 78, 80, 81, 88, 89, 91, 94, 119, 120, 121, 122, 123, 134, 139, 140, 144, 145, 154, 175, 176, 177, 178, 186, 192, 193, 194, 196, 197, 198, 200, 292, 301, 302, 304, 362, 363, 367, 368, 375, 376, 377, 378, 379, 385, 390, 391, 392, 396, 397, 404, 405], "usabl": 0, "insid": 0, "context": 0, "": [0, 3, 4, 79, 80, 96, 98, 102, 103, 107, 108, 110, 112, 139, 165, 167, 171, 260, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 330, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 393, 422], "scope": [0, 4], "thi": [0, 11, 12, 16, 17, 27, 28, 30, 38, 54, 58, 69, 72, 76, 79, 80, 114, 117, 118, 126, 133, 138, 167, 193, 252, 253, 257, 261, 274, 280, 282, 307, 309, 344, 346, 360, 365, 383, 388, 389, 393, 410, 411, 412], "wai": [0, 3, 4, 79, 126, 274], "arrai": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 102, 103, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 208, 244, 250, 251, 252, 253, 254, 257, 260, 261, 262, 264, 265, 266, 267, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 426], "creation": [0, 80, 83, 415, 422, 426], "function": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 42, 44, 45, 46, 47, 51, 52, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 248, 249, 257, 280, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 306, 309, 310, 311, 314, 316, 317, 327, 332, 348, 362, 363, 367, 368, 371, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 396, 397, 398, 401, 404, 405, 409, 410, 412, 413, 414, 415, 422, 426], "dpnp": [0, 2, 3, 4, 415, 422, 426, 427, 430], "which": [0, 3, 4, 27, 28, 33, 34, 54, 60, 76, 79, 80, 90, 114, 138, 157, 165, 167, 199, 252, 253, 291, 293, 303, 306, 364, 382, 383, 399, 402, 422], "i": [0, 3, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 252, 253, 257, 264, 274, 280, 292, 293, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 412, 413, 414, 422], "defin": [0, 79, 80, 252, 301, 422], "alloc": [0, 3, 4, 79, 195, 253, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355, 382], "us": [0, 4, 13, 29, 44, 45, 46, 47, 54, 72, 77, 79, 80, 86, 90, 119, 120, 126, 132, 133, 135, 136, 145, 154, 155, 156, 157, 172, 179, 181, 183, 189, 196, 208, 252, 253, 257, 292, 293, 294, 301, 302, 307, 311, 314, 316, 317, 327, 332, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 352, 355, 360, 363, 364, 365, 367, 385, 388, 389, 393, 396, 402, 404, 422], "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 159, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 253, 257, 265, 274, 278, 290, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 310, 336, 345, 349, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414], "np": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 253, 257, 261, 265, 266, 274, 278, 292, 293, 294, 295, 296, 297, 298, 301, 303, 304, 305, 306, 307, 310, 336, 345, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 411, 413, 414], "device_context": 0, "opencl": 0, "gpu": [0, 3, 4], "x": [0, 3, 4, 11, 12, 14, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 35, 37, 39, 40, 41, 45, 48, 49, 51, 52, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 71, 74, 76, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 119, 120, 127, 130, 131, 134, 140, 142, 144, 145, 147, 148, 149, 167, 170, 174, 175, 176, 177, 179, 180, 181, 182, 189, 194, 195, 197, 198, 253, 257, 265, 266, 278, 292, 293, 296, 297, 298, 300, 301, 303, 304, 305, 306, 329, 335, 360, 361, 362, 364, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 386, 387, 388, 390, 391, 392, 396, 405, 406, 408, 412, 413, 414], "1": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 128, 129, 131, 132, 134, 136, 137, 138, 140, 142, 144, 146, 154, 155, 156, 158, 159, 161, 163, 166, 167, 169, 170, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 252, 253, 257, 259, 261, 265, 266, 274, 278, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 315, 316, 318, 320, 322, 324, 325, 326, 328, 329, 330, 333, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 350, 352, 355, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 422], "2": [0, 3, 4, 11, 12, 13, 19, 21, 23, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 102, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 154, 155, 156, 158, 159, 161, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 253, 257, 261, 266, 274, 290, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 310, 311, 315, 319, 323, 329, 335, 338, 340, 351, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414], "3": [0, 3, 4, 13, 19, 20, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 48, 49, 51, 54, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 71, 72, 74, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 91, 93, 116, 117, 118, 119, 120, 121, 122, 123, 132, 134, 137, 138, 139, 140, 142, 144, 154, 159, 169, 170, 171, 172, 173, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 257, 266, 274, 290, 293, 294, 295, 297, 298, 302, 303, 304, 306, 311, 315, 319, 326, 329, 335, 338, 339, 340, 350, 354, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393, 395, 396, 397, 398, 401, 404, 406, 407, 408, 409, 411, 412, 414], "sum": [0, 3, 4, 6, 13, 68, 71, 74, 76, 78, 79, 137, 184, 198, 200, 258, 313, 328, 330, 394, 422, 426], "For": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 255, 256, 265, 266, 275, 276, 277, 278, 279, 280, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 422], "more": [0, 3, 4, 31, 39, 40, 41, 80, 117, 118, 124, 138, 165, 166, 383, 398, 401, 422], "inform": [0, 35, 37, 79, 80, 114, 262, 422, 426], "pleas": [0, 3, 422], "refer": [0, 2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 248, 249, 250, 251, 253, 255, 256, 265, 266, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 422], "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 248, 249, 250, 251, 252, 253, 255, 256, 265, 266, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 422], "time": [0, 13, 15, 25, 44, 46, 47, 59, 76, 77, 78, 86, 120, 121, 122, 123, 135, 136, 139, 149, 154, 155, 156, 178, 179, 181, 182, 186, 192, 193, 196, 294, 298, 302, 313, 328, 363, 364, 367, 385, 389, 393, 404], "def": 0, "run": [0, 4], "executor": 0, "size": [0, 6, 27, 28, 31, 54, 61, 65, 66, 79, 80, 132, 138, 167, 172, 183, 187, 266, 267, 282, 296, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 382, 383, 384, 402, 409, 411, 413], "test_typ": 0, "repetit": [0, 364, 393], "reshap": [0, 6, 13, 27, 28, 39, 41, 71, 72, 77, 79, 90, 116, 123, 185, 191, 196, 282, 290, 335, 360, 369, 385, 404, 422], "arang": [0, 6, 13, 27, 28, 39, 40, 41, 42, 43, 59, 70, 71, 72, 77, 86, 88, 89, 91, 116, 123, 131, 132, 137, 172, 175, 176, 179, 180, 181, 182, 183, 185, 189, 191, 196, 294, 297, 302, 306, 310, 335, 363, 366, 369, 385, 404, 412, 414], "dtype": [0, 9, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 59, 62, 63, 65, 72, 77, 79, 84, 85, 86, 88, 89, 91, 93, 114, 119, 120, 121, 122, 123, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 143, 145, 147, 148, 149, 154, 155, 156, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 191, 192, 193, 196, 199, 201, 253, 258, 269, 275, 285, 287, 291, 292, 294, 296, 297, 301, 302, 303, 304, 311, 333, 339, 355, 363, 366, 367, 368, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 390, 391, 394, 397, 404, 405, 409, 411, 413, 414, 422], "_": [0, 383], "rang": [0, 137, 305, 306, 330, 335, 383, 407, 426], "start_tim": 0, "perf_count": 0, "result": [0, 4, 14, 18, 27, 28, 44, 45, 46, 47, 50, 54, 66, 67, 68, 79, 80, 81, 94, 127, 134, 144, 145, 147, 148, 149, 154, 167, 179, 180, 181, 182, 194, 197, 198, 199, 291, 298, 302, 303, 311, 313, 343, 365, 366, 367, 383, 386, 389, 392, 393, 422], "end_tim": 0, "append": [0, 6, 76, 90], "return": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 266, 268, 269, 270, 273, 274, 275, 277, 280, 281, 285, 286, 287, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 311, 314, 333, 335, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410, 411, 412, 413, 414, 422], "median": [0, 6], "get_dtyp": 0, "_dtypes_list": 0, "int32": [0, 9, 36, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 173, 311, 313, 321, 323, 328, 330, 336, 339, 355, 366], "int64": [0, 9, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 173, 366], "float32": [0, 36, 79, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 173, 253, 311, 333, 338, 340, 341, 343, 344, 346, 352, 355, 366], "select_default_devic": 0, "has_aspect_fp64": 0, "float64": [0, 36, 79, 80, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 125, 126, 127, 128, 129, 173, 253, 311, 312, 318, 319, 320, 322, 324, 325, 326, 333, 334, 337, 338, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 397], "test_repetit": 0, "5": [0, 6, 13, 14, 19, 26, 27, 39, 42, 43, 44, 46, 47, 48, 52, 54, 57, 60, 61, 64, 66, 67, 68, 71, 72, 76, 77, 79, 81, 87, 116, 117, 118, 119, 120, 121, 122, 123, 132, 134, 137, 138, 139, 142, 154, 161, 170, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 253, 257, 293, 295, 296, 297, 302, 305, 306, 311, 312, 313, 315, 318, 330, 334, 335, 336, 337, 340, 343, 358, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 375, 383, 386, 387, 388, 392, 393, 395, 397, 398, 401, 404, 405, 407, 408, 411, 412, 413, 414], "type_nam": 0, "name": [0, 6, 80], "print": [0, 4, 31, 43, 57, 80, 84, 137, 244, 311, 330, 335, 406], "f": [0, 6, 35, 37, 51, 59, 79, 80, 84, 85, 89, 93, 130, 131, 253, 257, 264, 296, 297, 332, 360, 365, 413, 414], "test": [0, 2, 14, 15, 18, 147, 148, 149, 199, 313, 426], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 252, 253, 257, 260, 264, 280, 290, 292, 293, 294, 296, 297, 298, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 426], "each": [0, 11, 12, 20, 21, 22, 23, 24, 26, 39, 40, 41, 43, 48, 49, 51, 52, 55, 56, 59, 62, 63, 79, 80, 117, 118, 119, 120, 127, 161, 162, 169, 173, 189, 281, 282, 292, 301, 304, 307, 313, 330, 364, 375, 376, 377, 378, 380, 383, 389, 390, 391, 393, 399, 402, 405, 422], "64": [0, 4, 132, 302, 371], "128": [0, 132], "256": [0, 132], "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 37, 39, 44, 45, 46, 47, 50, 51, 52, 55, 56, 58, 59, 60, 62, 63, 64, 65, 77, 79, 80, 86, 88, 89, 90, 91, 92, 116, 117, 118, 119, 120, 121, 122, 123, 132, 135, 136, 137, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 165, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 193, 196, 199, 248, 249, 253, 257, 268, 269, 270, 275, 287, 292, 294, 301, 302, 303, 304, 307, 316, 363, 365, 367, 368, 375, 376, 377, 378, 380, 381, 385, 386, 389, 390, 391, 404, 405, 408, 412], "els": 0, "msg": 0, "n": [0, 4, 68, 72, 73, 76, 80, 81, 90, 93, 95, 97, 98, 100, 101, 103, 105, 106, 108, 109, 111, 112, 113, 134, 140, 165, 167, 189, 306, 313, 328, 330, 340, 350, 374, 381, 387, 388, 397, 399, 402, 408, 422], "4": [0, 13, 14, 19, 27, 28, 31, 39, 41, 42, 44, 46, 48, 54, 57, 60, 62, 64, 66, 67, 68, 71, 72, 74, 76, 77, 79, 80, 81, 84, 86, 89, 116, 120, 121, 122, 130, 132, 134, 135, 136, 137, 138, 139, 142, 156, 159, 169, 172, 177, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 200, 257, 274, 290, 293, 295, 297, 302, 303, 305, 306, 311, 312, 315, 335, 340, 356, 360, 361, 363, 364, 365, 369, 370, 371, 375, 379, 380, 383, 384, 385, 386, 387, 388, 392, 393, 395, 396, 398, 401, 404, 408, 409, 411, 412, 414], "3e": 0, "ratio": 0, "6": [0, 4, 6, 13, 19, 27, 28, 39, 46, 47, 54, 60, 66, 67, 68, 70, 71, 72, 76, 77, 79, 80, 81, 86, 91, 94, 116, 131, 138, 142, 171, 172, 183, 197, 198, 199, 257, 266, 293, 297, 302, 305, 310, 311, 328, 330, 335, 340, 360, 361, 365, 369, 370, 371, 383, 385, 386, 387, 388, 392, 396, 398, 401, 404, 407, 411, 412, 414], "2f": 0, "__name__": 0, "__main__": 0, "try": [0, 4], "gpu_queu": 0, "get_sycl_devic": [0, 311], "print_device_info": 0, "except": [0, 4, 15, 31, 33, 34, 35, 37, 48, 49, 54, 58, 60, 64, 71, 74, 76, 79, 90, 95, 101, 109, 116, 117, 118, 138, 185, 187, 191, 195, 253, 282, 364, 365, 369, 370, 382, 387, 408], "importerror": 0, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 38, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 134, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 154, 155, 156, 159, 161, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 253, 280, 290, 292, 293, 294, 298, 301, 302, 303, 304, 306, 307, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 401, 404, 405, 407, 408, 409, 411, 412, 415, 426], "parallel": [1, 3, 4, 9, 415], "overview": 2, "quick": [2, 3], "start": [2, 3, 19, 35, 37, 132, 172, 183, 370], "guid": [2, 3], "driver": 2, "interpret": [2, 33, 34, 58, 80, 125, 422], "instal": 2, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 159, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 244, 253, 257, 261, 265, 266, 274, 278, 280, 290, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414], "multi": [2, 79, 96, 98, 102, 103, 107, 108, 110, 112, 190, 286, 295, 415], "dimension": [2, 4, 57, 61, 64, 72, 73, 74, 76, 79, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 125, 128, 189, 190, 284, 295, 386, 393, 415], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 132, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 404, 405, 407, 408, 409, 411, 412, 415], "univers": [2, 415, 422], "ufunc": [2, 415, 422], "routin": [2, 415, 422], "special": [2, 80, 87, 415, 426], "avail": [2, 3, 4, 80, 415, 422], "comparison": [2, 86, 135, 136, 155, 156, 294, 415, 426], "tabl": [2, 9, 167, 415], "cupi": [2, 415], "miscellan": [2, 415, 426], "c": [2, 4, 35, 37, 38, 51, 59, 79, 80, 84, 85, 89, 93, 130, 131, 133, 159, 169, 173, 184, 253, 257, 264, 277, 296, 297, 302, 360, 365, 393, 413, 414], "backend": [2, 133, 314, 316, 317, 327, 332, 348], "The": [3, 4, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 44, 45, 46, 47, 51, 52, 54, 55, 56, 59, 60, 62, 63, 65, 71, 74, 76, 77, 79, 80, 81, 86, 88, 90, 91, 95, 101, 109, 116, 119, 120, 121, 122, 123, 127, 135, 136, 138, 139, 140, 142, 145, 154, 155, 156, 159, 161, 162, 166, 167, 169, 174, 175, 176, 177, 179, 181, 185, 186, 191, 192, 193, 195, 196, 252, 257, 264, 265, 274, 278, 292, 294, 301, 302, 304, 305, 307, 311, 314, 316, 317, 327, 332, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 360, 361, 363, 364, 365, 366, 367, 368, 371, 374, 375, 377, 378, 383, 385, 386, 389, 390, 391, 393, 399, 400, 402, 403, 404, 405, 411, 412, 422, 426], "librari": [3, 4, 422], "implement": [3, 6, 124], "subset": [3, 382, 426], "execut": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 42, 44, 45, 46, 47, 51, 52, 55, 56, 59, 61, 62, 63, 65, 66, 67, 68, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123, 127, 130, 131, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 314, 316, 317, 327, 332, 348, 362, 363, 367, 368, 371, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 390, 391, 392, 396, 397, 398, 401, 404, 405, 409, 412, 413, 414], "ani": [3, 6, 14, 15, 48, 49, 76, 79, 80, 113, 138, 253, 311, 355, 380, 422], "drop": [3, 80], "replac": [3, 36, 307, 316, 422], "core": [3, 80, 422], "numer": [3, 4, 59, 80, 292, 301, 426], "being": [3, 80], "develop": [3, 4], "part": [3, 55, 56, 79, 142, 194, 265, 278, 304, 361, 422], "intel": [3, 4], "ai": [3, 307, 389], "analyt": 3, "toolkit": 3, "distribut": [3, 4, 183, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 426], "also": [3, 50, 59, 80, 90, 349, 422], "anaconda": 3, "cloud": 3, "page": [3, 426], "learn": [3, 4], "Being": 3, "mean": [3, 6, 42, 79, 167, 188, 253, 264, 311, 324, 326, 329, 333, 352, 356, 357, 360, 365, 384, 409, 422], "usag": [3, 4], "veri": [3, 189], "similar": [3, 33, 34, 79, 80, 132, 172, 183, 257, 311, 339], "class": [3, 79, 80, 81, 115, 143, 311, 339, 380, 381, 397, 426], "compat": [3, 79, 253, 365, 426], "altern": [3, 4, 184], "abov": [3, 398], "instanc": [3, 79, 189, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "creat": [3, 4, 31, 33, 34, 58, 71, 72, 74, 79, 80, 124, 128, 257, 307, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 422, 426], "ident": [3, 6, 80, 170, 350], "one": [3, 4, 27, 28, 31, 36, 39, 40, 41, 57, 60, 61, 79, 80, 84, 86, 91, 95, 97, 100, 101, 105, 106, 109, 111, 117, 118, 130, 138, 140, 167, 174, 175, 176, 177, 189, 197, 257, 264, 267, 297, 304, 330, 382, 383, 399, 402, 413, 422], "kei": [3, 29, 79, 80, 115, 213, 243, 252, 379], "differ": [3, 68, 76, 79, 80, 81, 114, 117, 118, 134, 162, 167, 184, 252, 257, 302, 385, 426], "memori": [3, 33, 34, 35, 37, 51, 59, 79, 80, 89, 262, 264, 286, 365, 415], "default": [3, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 65, 75, 76, 77, 79, 80, 81, 84, 85, 86, 88, 89, 91, 93, 95, 101, 113, 119, 120, 121, 122, 123, 130, 131, 135, 136, 138, 139, 143, 145, 147, 148, 149, 154, 155, 156, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 199, 201, 252, 253, 257, 264, 292, 294, 296, 297, 299, 301, 302, 303, 304, 306, 311, 315, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 352, 355, 360, 363, 364, 365, 367, 368, 371, 372, 373, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 390, 391, 394, 399, 402, 404, 405, 409, 411, 413, 414, 422], "system": [3, 4, 170], "integr": [3, 4, 194, 302, 396], "discret": [3, 57, 61, 68, 76, 81, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 134, 311, 415], "otherwis": [3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 264, 280, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 365, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 396, 397, 398, 401, 404, 405, 408, 409, 412, 413, 414], "host": [3, 4, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355], "do": [3, 4, 80, 313], "have": [3, 4, 27, 28, 32, 39, 40, 41, 49, 51, 54, 59, 80, 89, 114, 138, 173, 195, 330, 383, 393, 411, 422], "most": [3, 4, 76, 80, 382], "manipul": [3, 72, 415, 426], "ar": [3, 4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 159, 161, 162, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 253, 273, 274, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 336, 337, 339, 342, 343, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 396, 397, 400, 403, 404, 405, 406, 407, 409, 412, 422], "done": [3, 79, 253], "see": [3, 30, 79, 80, 124, 167, 252, 328, 371, 399, 400, 402, 403, 422], "complet": [3, 4, 422], "list": [3, 6, 9, 39, 40, 41, 48, 54, 79, 80, 138, 252, 366, 373, 383, 411], "support": [3, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 159, 161, 163, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 401, 404, 405, 407, 408, 409, 412, 413, 414, 430], "along": [3, 4, 14, 16, 17, 18, 27, 28, 42, 54, 64, 67, 68, 71, 74, 76, 79, 81, 116, 117, 118, 134, 138, 144, 167, 185, 186, 187, 188, 191, 192, 197, 198, 201, 250, 251, 252, 258, 268, 270, 275, 276, 285, 287, 289, 291, 305, 306, 307, 364, 369, 370, 383, 384, 388, 389, 392, 393, 394, 396, 399, 402, 409, 411, 422], "limit": [3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 159, 161, 163, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 336, 337, 339, 342, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 401, 404, 405, 407, 408, 409, 412, 413, 414], "To": 4, "program": [4, 119], "beyond": [4, 369], "cpu": [4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 42, 44, 45, 46, 47, 51, 52, 55, 56, 59, 61, 62, 63, 65, 66, 67, 68, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123, 130, 131, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 362, 363, 367, 368, 371, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 390, 391, 392, 396, 397, 398, 401, 404, 405, 409, 412, 413, 414], "you": [4, 389, 422], "need": [4, 79, 133, 252, 389], "appropri": [4, 27, 28, 133, 311, 339, 342, 422], "hardwar": 4, "work": [4, 30, 38, 69, 193, 309, 389, 410, 422], "fine": 4, "laptop": 4, "graphic": 4, "In": [4, 27, 28, 79, 157, 252, 306, 311, 355, 365, 388], "major": [4, 33, 34, 35, 37, 79, 253, 264, 360], "case": [4, 27, 28, 76, 171, 199, 303, 304, 365], "your": 4, "window": 4, "alreadi": [4, 34, 39, 40, 41], "ha": [4, 27, 28, 44, 45, 46, 47, 80, 90, 100, 105, 127, 138, 145, 306, 364, 370, 382, 383, 386, 387, 393, 422], "all": [4, 6, 9, 15, 18, 32, 64, 76, 79, 80, 88, 89, 91, 116, 117, 118, 138, 140, 157, 252, 253, 255, 261, 274, 304, 313, 380, 382, 411, 422], "necessari": [4, 39, 60, 365], "But": [4, 80], "want": [4, 389], "up": [4, 80, 118], "date": [4, 79, 252], "alwai": [4, 33, 79, 253, 365], "updat": 4, "latest": [4, 124], "follow": [4, 80, 90, 114, 141, 422, 426], "instruct": 4, "step": [4, 19, 132, 172, 183], "8": [4, 13, 15, 39, 51, 60, 71, 72, 76, 80, 116, 132, 142, 146, 159, 169, 171, 172, 183, 197, 302, 303, 305, 311, 335, 354, 361, 369, 377, 388, 392, 396, 398, 401, 408, 412], "9": [4, 13, 39, 60, 71, 72, 77, 79, 94, 120, 132, 171, 183, 184, 196, 266, 305, 311, 313, 315, 335, 361, 369, 380, 385, 392, 398, 401, 404, 408, 412], "10": [4, 13, 21, 23, 27, 28, 58, 68, 72, 76, 79, 80, 91, 130, 132, 137, 142, 154, 174, 175, 176, 177, 183, 188, 196, 200, 280, 305, 307, 311, 313, 323, 335, 366, 367, 369, 371, 383, 389, 398, 401, 412], "If": [4, 15, 27, 28, 36, 50, 54, 76, 78, 79, 80, 90, 114, 138, 165, 166, 167, 169, 187, 252, 253, 282, 307, 311, 333, 355, 365, 380, 383, 386, 387, 389, 393, 411, 422], "yet": [4, 6], "easiest": 4, "It": [4, 27, 28, 169], "essenti": 4, "machin": [4, 114, 141], "optim": [4, 83], "includ": [4, 133, 183, 304, 311, 355], "anoth": [4, 60, 79, 124, 257, 276, 306], "vendor": 4, "too": 4, "manual": [4, 80, 393], "shown": 4, "next": [4, 114], "section": [4, 80, 422], "recommend": [4, 293, 393], "org": 4, "channel": 4, "command": 4, "forg": 4, "pip": 4, "http": [4, 124], "pypi": 4, "simpl": [4, 182, 426], "These": [4, 48, 80, 90, 422, 426], "its": [4, 6, 15, 30, 55, 56, 79, 95, 101, 114, 139, 140, 161, 162, 290, 348, 360, 365, 371, 395, 397, 422], "depend": [4, 161, 167, 172, 373, 412], "control": [4, 50, 54, 79, 138, 253, 383, 411], "requir": [4, 6, 31, 35, 37, 79, 80, 253], "compil": [4, 80, 133], "runtim": 4, "onemkl": 4, "befor": [4, 54, 79, 117, 118, 274, 393], "strongli": [4, 393], "advis": 4, "version": [4, 79, 80, 263, 293], "activ": 4, "local": 4, "environ": 4, "env": 4, "And": [4, 72, 79, 253], "sourc": [4, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "recip": 4, "finanli": 4, "setuptool": 4, "o": [4, 80], "On": 4, "linux": 4, "cython": 4, "dpcpp_linux": 4, "mkl": 4, "devel": 4, "dpcpp": 4, "tbb": 4, "onedpl": 4, "cmake": 4, "ninja": 4, "pytest": 4, "dpcpp_win": 4, "setup": 4, "py": 4, "g": [4, 79, 80, 286, 311], "dcmake_c_compil": 4, "path": 4, "icx": 4, "dcmake_cxx_compil": 4, "icpx": 4, "script": 4, "build_loc": 4, "suit": 4, "element": [4, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 43, 44, 45, 46, 47, 51, 52, 55, 56, 59, 60, 62, 63, 67, 68, 76, 77, 79, 80, 81, 86, 88, 89, 91, 92, 94, 116, 117, 118, 119, 120, 121, 122, 123, 135, 136, 140, 142, 145, 146, 147, 148, 149, 154, 155, 156, 157, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 248, 249, 255, 256, 258, 260, 261, 264, 266, 267, 269, 271, 273, 274, 279, 280, 281, 283, 285, 286, 289, 291, 292, 293, 294, 300, 301, 302, 303, 304, 306, 308, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 388, 390, 391, 393, 398, 401, 404, 405, 406, 412, 422, 426], "asarrai": [4, 6, 33, 38], "y": [4, 35, 36, 37, 39, 48, 49, 58, 65, 66, 78, 79, 80, 90, 127, 134, 189, 194, 257, 280, 290, 365, 380, 395, 396, 412], "locat": [4, 133, 322, 324], "same": [4, 13, 15, 25, 27, 28, 30, 32, 35, 37, 38, 44, 46, 47, 49, 54, 59, 69, 76, 77, 78, 79, 85, 86, 90, 92, 120, 121, 122, 123, 124, 131, 135, 136, 138, 139, 154, 155, 156, 173, 178, 179, 180, 181, 182, 186, 192, 193, 195, 196, 253, 280, 294, 297, 298, 302, 306, 307, 309, 311, 333, 339, 355, 360, 363, 364, 367, 369, 370, 380, 381, 382, 383, 385, 389, 400, 403, 404, 410, 411, 414], "shape": [4, 6, 27, 28, 31, 32, 35, 41, 48, 49, 51, 54, 59, 61, 65, 66, 72, 76, 79, 80, 84, 85, 89, 90, 92, 116, 127, 130, 131, 138, 159, 163, 165, 169, 170, 171, 179, 180, 181, 182, 184, 195, 253, 280, 284, 290, 296, 297, 306, 307, 311, 320, 323, 328, 329, 334, 338, 339, 340, 341, 342, 343, 344, 346, 351, 352, 358, 360, 364, 365, 370, 380, 381, 382, 383, 388, 393, 395, 397, 402, 411, 413, 414, 415, 426], "0": [4, 6, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 43, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 93, 94, 97, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 134, 137, 140, 144, 147, 148, 149, 161, 163, 169, 172, 173, 174, 175, 176, 177, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 252, 257, 259, 261, 265, 266, 278, 281, 285, 286, 287, 290, 291, 293, 295, 296, 297, 302, 303, 304, 305, 306, 307, 310, 311, 313, 318, 320, 321, 322, 324, 325, 326, 328, 329, 330, 333, 335, 336, 337, 338, 341, 343, 344, 345, 346, 349, 352, 354, 355, 356, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 412, 413, 414], "expect": [4, 51, 59, 80, 89], "comput": [4, 25, 30, 42, 44, 45, 46, 47, 52, 76, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 137, 144, 145, 158, 159, 160, 162, 166, 167, 168, 169, 179, 180, 181, 182, 187, 188, 193, 201, 363, 368, 371, 384, 386, 391, 392, 405, 409], "empti": [4, 6, 31, 79, 85, 130, 131, 261, 296, 297, 413, 414], "found": [4, 422], "here": [6, 80], "correspond": [6, 27, 28, 54, 79, 161, 260, 291, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 374, 422], "column": [6, 33, 34, 35, 37, 54, 79, 117, 118, 138, 161, 166, 253, 264, 360, 399, 402, 411], "v1": 6, "23": [6, 311], "v0": 6, "13": [6, 27, 28, 45, 72, 79, 80, 145, 198, 252], "1dev1": 6, "51": 6, "g19d96a8e24": 6, "v9": 6, "397": 6, "222": 6, "299": 6, "56": 6, "34": 6, "47": 6, "20": [6, 154, 307, 313, 328, 389], "15": [6, 27, 28, 68, 72, 175, 335, 386], "16": [6, 44, 72, 80, 132, 134, 196, 302, 390], "18": [6, 80, 81, 183], "48": [6, 197], "49": 6, "total": [6, 64, 79, 271], "542": 6, "337": 6, "429": 6, "ab": [6, 12], "absolut": [6, 11, 94, 169, 304], "add": [6, 80], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "allclos": [6, 32, 146, 170, 171], "alltru": 6, "amax": [6, 185], "amin": [6, 191], "angl": [6, 24, 25, 69, 70, 309, 310, 407], "apply_along_axi": 6, "apply_over_ax": 6, "arcco": [6, 21, 22, 24, 25, 62], "arccosh": [6, 20, 23, 26, 63], "arcsin": [6, 20, 23, 24, 25, 377], "arcsinh": [6, 21, 22, 26, 378], "arctan": [6, 20, 22, 25, 26, 390], "arctan2": [6, 24], "arctanh": [6, 21, 23, 24, 25, 391], "argmax": [6, 28, 79, 307, 389, 422], "argmin": [6, 27, 79, 389, 422], "argpartit": [6, 29, 422], "argsort": [6, 79, 379, 389, 395, 422], "argwher": 6, "around": [6, 79, 132, 281, 306, 371], "array2str": 6, "array_equ": 6, "array_equiv": [6, 32], "array_repr": 6, "array_split": [6, 54], "array_str": 6, "asanyarrai": [6, 34, 37], "asarray_chkfinit": [6, 33, 34], "ascontiguousarrai": [6, 33, 34, 37], "asfarrai": [6, 33, 34], "asfortranarrai": [6, 33, 34, 35], "asmatrix": 6, "atleast_1d": [6, 40, 41, 90], "atleast_2d": [6, 39, 41, 90], "atleast_3d": [6, 39, 40, 90], "averag": [6, 79, 187, 269, 426], "bartlett": 6, "base_repr": 6, "binary_repr": 6, "bincount": 6, "bitwise_and": [6, 45, 46, 47, 145, 179], "bitwise_not": 6, "bitwise_or": [6, 44, 45, 47, 145, 181], "bitwise_xor": [6, 44, 45, 46, 145, 182], "blackman": 6, "block": [6, 54, 138, 383, 411], "bmat": 6, "broadcast_arrai": [6, 49], "broadcast_shap": 6, "broadcast_to": [6, 48, 393], "busday_count": 6, "busday_offset": 6, "byte_bound": 6, "can_cast": [6, 426], "cbrt": [6, 380], "ceil": [6, 30, 119, 120, 368, 371, 405], "choos": [6, 24, 25, 79, 422], "clip": [6, 306, 388, 422], "column_stack": [6, 54, 411], "common_typ": 6, "compare_chararrai": 6, "compress": [6, 388, 422], "concaten": [6, 138, 383, 389, 411], "conj": [6, 79, 142, 304, 361], "conjug": [6, 55, 78, 79, 142, 157, 161, 184, 255, 304, 361], "convolv": [6, 61], "copi": [6, 31, 34, 35, 37, 39, 40, 41, 60, 79, 80, 189, 208, 253, 264, 266, 274, 280, 282, 299, 301, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355, 365, 379, 382, 398, 401, 422], "copysign": [6, 292, 301], "copyto": [6, 79, 257], "corrcoef": [6, 65], "correl": [6, 426], "co": [6, 20, 63, 377, 390], "cosh": [6, 21, 62, 378, 391], "count_nonzero": [6, 293], "cov": [6, 329], "cross": [6, 61], "cumprod": [6, 197, 422], "cumproduct": 6, "cumsum": [6, 76, 79, 198, 422], "datetime_as_str": 6, "datetime_data": 6, "deg2rad": [6, 309, 310, 407], "degre": [6, 69, 309, 310, 353, 407], "delet": 6, "deprec": 6, "deprecate_with_doc": 6, "diag": [6, 74, 117, 118, 140, 171], "diag_indic": [6, 73, 113], "diag_indices_from": [6, 72, 113], "diagflat": [6, 71], "diagon": [6, 71, 72, 73, 74, 79, 93, 113, 140, 157, 394, 397, 398, 399, 400, 401, 402, 403, 422], "diff": [6, 68, 81, 134, 137], "digit": [6, 114], "disp": 6, "divid": [6, 120, 123, 163, 193, 363, 404], "divmod": [6, 422], "dot": [6, 79, 82, 83, 144, 164, 166, 170, 171, 184, 392, 410], "dsplit": [6, 54], "dstack": [6, 54, 411], "ediff1d": [6, 76], "einsum": [6, 83, 144, 184, 298, 392], "einsum_path": [6, 82], "empty_lik": [6, 31, 84, 131, 297, 414], "equal": [6, 14, 15, 18, 32, 54, 61, 65, 79, 120, 132, 135, 136, 138, 146, 151, 155, 156, 163, 169, 172, 183, 274, 294, 311, 321, 355, 363, 379, 382, 383, 399, 402, 411], "exp": [6, 89, 91, 169, 174, 176, 178], "exp2": [6, 88, 91], "expand_dim": [6, 27, 28], "expm1": [6, 88, 89, 176], "extract": [6, 71, 74], "ey": [6, 55, 56, 64, 121, 122, 140, 182, 186, 192, 374], "fab": [6, 11, 12], "fastcopyandtranspos": 6, "fill_diagon": 6, "find_common_typ": 6, "fix": [6, 80, 306], "flatnonzero": [6, 293], "flip": [6, 117, 118, 313], "fliplr": [6, 116, 118], "flipud": [6, 116, 117], "float_pow": 6, "floor": [6, 30, 52, 120, 363, 368, 371, 405], "floor_divid": [6, 123, 193, 363], "fmax": [6, 122, 185, 186, 192, 302], "fmin": [6, 121, 186, 191, 192, 302], "fmod": [6, 121, 122, 193, 302, 363], "format_float_posit": 6, "format_float_scientif": 6, "frexp": 6, "from_dlpack": 6, "frombuff": 6, "fromfil": 6, "fromfunct": [6, 33, 34], "fromit": [6, 33, 34], "frompyfunc": 6, "fromregex": 6, "fromstr": 6, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 248, 249, 250, 251, 253, 255, 256, 265, 266, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "full_lik": [6, 31, 85, 130, 297, 414], "gcd": 6, "genfromtxt": 6, "geomspac": [6, 172, 183], "get_array_wrap": 6, "get_includ": 6, "get_printopt": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "gradient": [6, 76], "greater": [6, 79, 86, 136, 155, 156, 165, 274, 294], "greater_equ": [6, 86, 135, 155, 156, 294], "ham": 6, "han": 6, "heavisid": 6, "histogram": [6, 426], "histogram2d": 6, "histogram_bin_edg": 6, "histogramdd": 6, "hsplit": [6, 54], "hstack": [6, 54, 411], "hypot": 6, "i0": 6, "imag": [6, 79, 361, 422], "in1d": 6, "indic": [6, 27, 28, 29, 72, 73, 79, 80, 113, 250, 251, 252, 273, 276, 289, 293, 306, 307, 365, 372, 375, 376, 388, 389, 395, 399, 400, 402, 403], "info": 6, "inner": [6, 82, 83, 298], "insert": [6, 27, 28, 90, 307, 372, 426], "interp": 6, "intersect1d": 6, "invert": [6, 45], "is_busdai": 6, "isclos": [6, 15], "iscomplex": 6, "iscomplexobj": 6, "isfinit": [6, 148, 149], "isfortran": 6, "isin": 6, "isinf": [6, 147, 149], "isnan": [6, 147, 148, 199], "isnat": [6, 149], "isneginf": [6, 147, 148, 149], "isposinf": [6, 147, 148, 149], "isreal": 6, "isrealobj": 6, "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "iter": [6, 33, 34, 79, 115, 128, 263, 426], "ix_": 6, "kaiser": 6, "kron": 6, "lcm": 6, "ldexp": 6, "left_shift": [6, 367], "less": [6, 86, 135, 136, 156, 294, 375, 376], "less_equ": [6, 86, 135, 136, 155, 294], "lexsort": [6, 29, 79, 252, 379], "linspac": [6, 19, 87, 132, 183, 189, 407], "load": [6, 173], "loadtxt": 6, "log": [6, 91, 132, 169, 172, 175, 176, 177, 178, 183, 326], "log10": [6, 174, 176, 177], "log1p": [6, 89, 91, 174, 175, 177], "log2": [6, 174, 175, 176], "logaddexp": 6, "logaddexp2": 6, "logical_and": [6, 44, 180, 181, 182], "logical_not": [6, 45, 145, 179, 181, 182], "logical_or": [6, 46, 179, 180, 182], "logical_xor": [6, 47, 179, 180, 181], "logspac": [6, 132, 172], "lookfor": 6, "mask_indic": 6, "mat": 6, "matmul": [6, 171], "max": [6, 16, 27, 79, 114, 141, 165, 186, 191, 192, 328, 389, 393, 422], "maximum": [6, 16, 27, 28, 79, 121, 122, 185, 191, 192, 250, 268, 302, 305, 307], "maximum_sctyp": 6, "may_share_memori": 6, "meshgrid": [6, 190, 295], "min": [6, 17, 28, 79, 114, 141, 185, 186, 192, 389, 422], "min_scalar_typ": 6, "minimum": [6, 17, 27, 28, 79, 121, 122, 185, 186, 191, 251, 270, 302, 305], "mintypecod": 6, "mod": [6, 363], "modf": 6, "moveaxi": [6, 369, 370, 395], "msort": 6, "multipli": 6, "nan_to_num": 6, "nanargmax": 6, "nanargmin": 6, "nancumprod": [6, 198], "nancumsum": 6, "nanmax": [6, 185, 186, 192], "nanmean": [6, 187, 384, 409], "nanmedian": 6, "nanmin": [6, 186, 191, 192], "nanpercentil": 6, "nanprod": [6, 303], "nanquantil": 6, "nanstd": [6, 187, 384, 409], "nansum": 6, "nanvar": [6, 187, 384, 409], "ndim": [6, 31, 35, 37, 39, 40, 41, 65, 72, 79, 80, 252, 296, 393, 413], "neg": [6, 14, 18, 43, 59, 90, 147, 148, 149, 301, 302, 330, 380, 388], "nested_it": 6, "nextaft": 6, "nonzero": [6, 64, 79, 412, 422], "not_equ": [6, 86, 135, 136, 155, 156], "obj2sctyp": 6, "ones": [6, 31, 35, 37, 77, 84, 85, 86, 90, 93, 130, 131, 139, 140, 184, 199, 297, 303, 366, 370, 395, 397, 404, 413, 414], "ones_lik": [6, 31, 85, 131, 296, 414], "outer": [6, 82, 83, 153], "packbit": 6, "pad": [6, 80], "partit": [6, 79, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 379, 422], "percentil": [6, 188], "piecewis": 6, "place": [6, 54, 306, 348, 365, 383, 422], "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "posit": [6, 14, 18, 33, 34, 51, 59, 79, 90, 114, 147, 148, 149, 157, 195, 274, 292, 302, 304, 313, 337, 369, 370, 380, 381, 395, 397], "power": [6, 89, 164, 381], "printopt": 6, "prod": [6, 79, 199, 422], "product": [6, 66, 67, 78, 82, 83, 144, 153, 164, 166, 170, 184, 196, 197, 199, 298, 303, 392, 410, 426], "promote_typ": 6, "ptp": [6, 422], "put": [6, 79, 307, 389, 422], "put_along_axi": [6, 306, 389], "putmask": [6, 306], "quantil": 6, "rad2deg": [6, 69, 70, 407], "radian": [6, 69, 70, 309, 407], "ravel": [6, 79, 167, 264, 422], "ravel_multi_index": 6, "real": [6, 24, 51, 52, 59, 79, 106, 107, 108, 109, 110, 112, 114, 119, 121, 122, 139, 142, 157, 161, 162, 165, 169, 304, 313, 330, 376, 380, 405, 422, 426], "real_if_clos": 6, "recfromcsv": 6, "recfromtxt": 6, "reciproc": [6, 380], "remaind": [6, 120, 121, 122, 123, 193, 302], "repeat": [6, 79, 161, 162, 393, 422], "resiz": [6, 90, 422], "result_typ": [6, 50, 80, 426], "right_shift": [6, 154], "rint": [6, 30, 371], "roll": [6, 370], "rollaxi": [6, 369], "root": [6, 51, 380, 381], "rot90": 6, "round": [6, 30, 79, 119, 120, 363, 368, 405, 422, 426], "round_": 6, "row_stack": 6, "safe_ev": 6, "save": 6, "savetxt": 6, "savez": 6, "savez_compress": 6, "sctype2char": 6, "searchsort": [6, 379, 422], "select": [6, 60, 382, 415], "set_numeric_op": 6, "set_printopt": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setxor1d": 6, "shares_memori": 6, "show_config": 6, "sign": [6, 55, 56, 59, 80, 159, 169, 292, 301, 376], "signbit": [6, 375], "sin": [6, 22, 62, 189, 378, 390], "sinc": 6, "sinh": [6, 23, 63, 377, 391], "sometru": 6, "sort": [6, 29, 79, 252, 274, 372, 389, 395, 415, 422, 426], "sort_complex": 6, "space": [6, 19, 132, 172, 183], "split": [6, 54, 138, 383, 411, 426], "sqrt": [6, 51, 79, 265, 278, 381], "squar": [6, 51, 140, 157, 160, 161, 164, 315, 331, 380, 400, 403], "squeez": [6, 79, 90, 422], "stack": [6, 54, 138, 159, 165, 169, 389, 411], "std": [6, 79, 187, 409, 422], "subtract": 6, "swapax": [6, 79, 195, 422], "take": [6, 79, 307, 365, 389, 422], "take_along_axi": [6, 27, 28, 29, 53, 307, 388], "tan": [6, 24, 25, 62, 377, 391], "tanh": [6, 26, 63, 378, 390], "tensordot": [6, 78, 144, 184], "tile": [6, 364, 426], "trace": [6, 71, 74, 422], "transpos": [6, 79, 157, 195, 203, 422, 426], "trapz": 6, "tri": 6, "tril": [6, 71, 397, 399, 400, 403], "tril_indic": [6, 400, 403], "tril_indices_from": 6, "trim_zero": 6, "triu": [6, 71, 397, 402], "triu_indic": 6, "triu_indices_from": 6, "true_divid": [6, 77], "trunc": [6, 30, 52, 119, 368, 371], "typenam": 6, "union1d": 6, "uniqu": [6, 43, 80], "unpackbit": 6, "unravel_index": [6, 27, 28], "unwrap": [6, 69, 309], "vander": 6, "var": [6, 79, 187, 285, 384, 422], "vdot": [6, 78, 184], "vsplit": [6, 54], "vstack": [6, 54, 138], "where": [6, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 40, 41, 44, 45, 46, 47, 51, 52, 55, 56, 59, 60, 62, 63, 76, 77, 79, 86, 88, 89, 91, 92, 119, 120, 121, 122, 123, 135, 136, 139, 145, 146, 147, 148, 149, 154, 155, 156, 157, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 191, 192, 193, 196, 199, 248, 249, 268, 269, 270, 275, 287, 292, 294, 301, 302, 303, 304, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 363, 367, 368, 370, 372, 375, 376, 377, 378, 380, 381, 385, 386, 390, 391, 404, 405], "who": 6, "zero": [6, 14, 18, 31, 64, 72, 76, 79, 84, 85, 93, 99, 104, 119, 130, 131, 140, 165, 169, 171, 187, 195, 200, 273, 293, 296, 297, 302, 304, 311, 313, 341, 343, 344, 346, 375, 376, 386, 397, 398, 401, 414], "zeros_lik": [6, 31, 85, 131, 297, 413], "astyp": [6, 79, 132, 293], "byteswap": 6, "dump": 6, "fill": [6, 31, 79, 84, 85, 113, 130, 131, 257, 296, 297, 388, 397, 413, 414], "flatten": [6, 27, 28, 54, 71, 74, 79, 252, 263, 277, 293, 307, 360, 364, 389], "getfield": [6, 80], "item": [6, 79, 415], "itemset": 6, "newbyteord": [6, 80], "setfield": [6, 80], "setflag": 6, "tobyt": 6, "tofil": [6, 126], "tolist": 6, "tostr": 6, "view": [6, 39, 40, 41, 48, 79, 90, 116, 117, 118, 203, 280, 290, 307, 365, 382, 387, 395], "linalg": [6, 381], "choleski": 6, "cond": 6, "det": [6, 169], "eig": [6, 161, 162], "eigh": 6, "eigval": [6, 161], "eigvalsh": 6, "inv": 6, "lstsq": 6, "matrix_pow": [6, 381], "matrix_rank": 6, "multi_dot": 6, "norm": [6, 95, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 158, 426], "pinv": 6, "qr": 6, "slogdet": [6, 159], "solv": [6, 426], "svd": [6, 165], "tensorinv": 6, "tensorsolv": 6, "fft": [6, 415, 426], "fft2": 6, "fftfreq": 6, "fftn": 6, "fftshift": 6, "hfft": 6, "ifft": 6, "ifft2": 6, "ifftn": 6, "ifftshift": 6, "ihfft": 6, "irfft": 6, "irfft2": 6, "irfftn": 6, "rfft": 6, "rfft2": 6, "rfftfreq": 6, "rfftn": 6, "beta": [6, 322], "binomi": [6, 330], "byte": [6, 79, 80, 253, 267, 271], "chisquar": 6, "choic": [6, 53, 79, 254], "default_rng": 6, "dirichlet": 6, "exponenti": [6, 88, 89, 91, 174, 178, 324, 350], "gamma": [6, 351], "geometr": [6, 132, 172], "get_stat": [6, 311], "gumbel": 6, "hypergeometr": 6, "laplac": 6, "logist": 6, "lognorm": 6, "logseri": 6, "multinomi": 6, "multivariate_norm": 6, "negative_binomi": 6, "noncentral_chisquar": 6, "noncentral_f": 6, "normal": [6, 65, 161, 311, 326, 329, 340, 352], "pareto": 6, "permut": [6, 79, 195, 290, 395, 426], "poisson": 6, "rand": [6, 311, 341, 343, 344, 346], "randint": [6, 79, 266, 311, 342], "randn": [6, 116, 117, 118, 171, 311, 383], "random_integ": [6, 311, 339], "random_sampl": [6, 311, 338, 341, 344, 346], "ranf": 6, "rayleigh": 6, "seed": [6, 79, 266, 311], "set_stat": 6, "shuffl": 6, "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 311, 340], "standard_t": 6, "triangular": [6, 157, 168], "uniform": [6, 80, 311, 338, 341, 343, 344, 346], "vonmis": 6, "wald": 6, "weibul": [6, 359], "zipf": 6, "show": [9, 80, 139, 182, 189, 349], "constant": [9, 80], "alias": 9, "bool": [9, 14, 18, 27, 28, 36, 50, 79, 80, 86, 95, 101, 109, 135, 136, 147, 148, 149, 155, 156, 165, 167, 253, 293, 294, 365], "complex64": [9, 95, 101], "complex128": [9, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 366], "bool_": 9, "cdoubl": 9, "complex": [9, 11, 12, 24, 25, 55, 56, 78, 79, 80, 87, 114, 142, 161, 162, 171, 184, 255, 256, 304, 361, 375, 380, 422, 426], "cfloat": 9, "csingl": 9, "doubl": [9, 324], "float": [9, 15, 24, 33, 34, 36, 59, 80, 89, 114, 134, 165, 167, 172, 183, 185, 191, 311, 315, 340, 341, 343, 344, 346, 349, 350, 352, 355, 422, 426], "float_": 9, "float16": 9, "int": [9, 27, 28, 36, 43, 54, 72, 76, 79, 80, 86, 93, 114, 132, 134, 141, 143, 252, 253, 299, 303, 307, 311, 339, 342, 364, 365, 371, 374, 383, 389, 397, 399, 400, 402, 403, 422], "int_": 9, "intc": 9, "singl": [9, 79, 166, 284, 311, 330, 339, 340, 341, 342, 343, 344, 346, 352, 422], "singlecomplex": 9, "e": [9, 21, 23, 79, 80, 90, 174, 286, 311, 387], "euler_gamma": 9, "inf": [9, 15, 25, 33, 34, 59, 77, 147, 148, 149, 158, 167, 169, 174, 175, 177, 186, 192, 304, 380, 404], "infin": [9, 14, 18, 119, 120, 147, 148, 149, 363, 405, 426], "infti": 9, "nan": [9, 14, 15, 18, 33, 34, 77, 121, 122, 147, 148, 149, 175, 185, 186, 187, 191, 192, 197, 198, 199, 200, 201, 302, 303, 304, 380, 384, 404, 409, 426], "ninf": 9, "nzero": 9, "pi": [9, 25, 62, 63, 70, 377, 378, 390, 391, 407], "pinf": 9, "pzero": 9, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 63, 64, 65, 70, 71, 74, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 154, 155, 156, 166, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 199, 201, 248, 249, 250, 251, 254, 257, 258, 264, 268, 269, 270, 275, 281, 285, 287, 289, 291, 292, 293, 294, 298, 301, 302, 303, 304, 305, 310, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355, 360, 361, 362, 363, 364, 366, 367, 368, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397, 404, 405, 407, 408, 409, 411], "none": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 59, 62, 63, 64, 65, 66, 71, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 130, 131, 132, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 154, 155, 156, 158, 165, 166, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 199, 201, 248, 249, 250, 251, 252, 254, 258, 266, 268, 269, 270, 274, 275, 276, 279, 281, 284, 285, 287, 289, 291, 292, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 367, 368, 369, 371, 372, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 399, 402, 404, 405, 408, 409, 411, 412, 413, 414, 422], "order": [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 34, 35, 37, 38, 44, 45, 46, 47, 51, 52, 55, 56, 58, 59, 62, 63, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 91, 93, 116, 117, 118, 119, 120, 130, 131, 135, 136, 139, 145, 147, 148, 149, 154, 155, 156, 161, 162, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 192, 193, 195, 196, 208, 252, 253, 257, 264, 274, 277, 292, 294, 296, 297, 299, 301, 302, 304, 360, 363, 365, 367, 368, 372, 375, 376, 377, 378, 380, 381, 385, 390, 391, 404, 405, 413, 414, 426], "k": [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 44, 45, 46, 47, 51, 52, 55, 56, 58, 59, 62, 63, 71, 74, 77, 79, 86, 88, 89, 91, 93, 119, 120, 135, 136, 139, 145, 147, 148, 149, 154, 155, 156, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 192, 193, 196, 208, 253, 257, 264, 292, 294, 301, 302, 304, 363, 367, 368, 375, 376, 377, 378, 380, 381, 385, 390, 391, 397, 398, 399, 400, 401, 402, 403, 404, 405, 430], "subok": [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 58, 59, 62, 63, 77, 79, 85, 86, 88, 89, 91, 119, 120, 121, 122, 123, 131, 135, 136, 139, 145, 147, 148, 149, 154, 155, 156, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 192, 193, 196, 253, 292, 294, 297, 301, 302, 304, 363, 367, 368, 375, 376, 377, 378, 380, 381, 385, 390, 391, 404, 405, 414], "kwarg": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 52, 55, 56, 59, 62, 63, 66, 67, 68, 77, 78, 79, 82, 86, 88, 89, 91, 94, 119, 120, 121, 122, 123, 125, 126, 127, 129, 134, 135, 136, 139, 144, 145, 147, 148, 149, 154, 155, 156, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 192, 193, 194, 196, 197, 198, 200, 237, 280, 292, 294, 301, 302, 304, 362, 363, 367, 368, 375, 376, 377, 378, 379, 380, 381, 385, 390, 391, 392, 396, 397, 404, 405, 406, 410], "calcul": [11, 12, 68, 76, 81, 88, 89, 91, 94, 119, 121, 122, 134, 169, 178, 193, 200, 302, 363, 380, 415], "valu": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 79, 80, 81, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 101, 113, 114, 115, 119, 120, 121, 122, 123, 127, 130, 131, 135, 136, 139, 140, 143, 145, 147, 148, 149, 154, 155, 156, 157, 162, 165, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 199, 201, 205, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 242, 243, 244, 245, 246, 247, 250, 251, 253, 257, 261, 263, 274, 276, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 321, 338, 339, 355, 363, 364, 365, 367, 368, 371, 372, 373, 375, 376, 377, 378, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 394, 404, 405, 407, 409, 413, 414, 422, 426], "wise": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 30, 32, 44, 45, 46, 47, 51, 52, 54, 55, 56, 59, 62, 63, 77, 79, 86, 88, 89, 91, 94, 119, 121, 122, 123, 135, 136, 138, 142, 145, 146, 147, 148, 149, 154, 155, 156, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 191, 192, 193, 194, 196, 199, 256, 292, 294, 301, 302, 304, 361, 362, 363, 367, 368, 371, 375, 376, 377, 378, 380, 381, 385, 390, 391, 404, 405, 411, 422], "contain": [11, 12, 14, 18, 19, 44, 45, 46, 47, 79, 80, 124, 133, 145, 154, 161, 187, 280, 311, 367, 380, 386, 399, 402, 422], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 252, 253, 261, 264, 280, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 413, 414], "onli": [11, 12, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 42, 51, 52, 55, 56, 58, 61, 62, 63, 65, 71, 74, 75, 79, 80, 81, 84, 85, 88, 89, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 119, 125, 126, 127, 128, 129, 130, 131, 142, 143, 147, 148, 149, 154, 157, 172, 173, 174, 175, 176, 177, 180, 185, 187, 188, 189, 191, 199, 201, 253, 292, 296, 297, 299, 301, 303, 304, 306, 311, 333, 339, 355, 361, 365, 367, 368, 371, 372, 373, 375, 376, 377, 378, 384, 388, 389, 390, 391, 392, 394, 397, 398, 401, 405, 408, 409, 412, 413, 414, 422], "either": [11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 37, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 59, 60, 62, 63, 64, 77, 78, 80, 86, 88, 89, 90, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 135, 136, 139, 142, 145, 146, 147, 148, 149, 154, 155, 156, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 292, 293, 294, 298, 300, 301, 302, 303, 304, 306, 347, 361, 363, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 395, 404, 405, 412], "tensor": [11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 30, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 59, 60, 62, 63, 64, 77, 78, 79, 85, 86, 88, 89, 90, 91, 92, 116, 117, 118, 119, 120, 121, 122, 123, 131, 135, 136, 139, 142, 144, 145, 147, 148, 149, 154, 155, 156, 159, 161, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 292, 293, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 361, 363, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 395, 398, 401, 404, 405, 412, 414], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 62, 63, 64, 76, 77, 78, 79, 85, 86, 88, 89, 90, 91, 92, 116, 117, 118, 119, 120, 121, 122, 123, 131, 135, 136, 138, 139, 142, 145, 147, 148, 149, 154, 155, 156, 159, 161, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 253, 292, 293, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 395, 398, 401, 404, 405, 411, 412, 414], "keyword": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 52, 59, 62, 63, 66, 67, 68, 77, 78, 81, 88, 89, 91, 94, 119, 120, 121, 122, 123, 134, 139, 144, 145, 154, 175, 176, 177, 178, 186, 192, 193, 194, 196, 197, 198, 200, 292, 301, 302, 304, 362, 363, 367, 368, 375, 376, 377, 378, 379, 385, 390, 391, 392, 396, 397, 404, 405, 422], "argument": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 50, 51, 52, 54, 59, 62, 63, 66, 67, 68, 77, 78, 79, 80, 81, 87, 88, 89, 91, 94, 119, 120, 121, 122, 123, 134, 139, 142, 144, 145, 151, 152, 154, 163, 166, 175, 176, 177, 178, 186, 192, 193, 194, 196, 197, 198, 200, 252, 280, 292, 301, 302, 304, 361, 362, 363, 366, 367, 368, 375, 376, 377, 378, 379, 383, 385, 390, 391, 392, 396, 397, 404, 405, 422], "unsupport": [11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 51, 52, 59, 62, 63, 66, 67, 68, 77, 78, 88, 89, 91, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 134, 139, 144, 145, 154, 166, 175, 176, 177, 178, 186, 192, 193, 194, 196, 197, 198, 200, 292, 301, 302, 304, 362, 363, 367, 368, 375, 376, 377, 378, 379, 385, 390, 391, 392, 396, 397, 404, 405], "sequenti": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 42, 44, 45, 46, 47, 51, 52, 55, 56, 59, 61, 62, 63, 65, 66, 67, 68, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123, 130, 131, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 149, 154, 155, 156, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 362, 363, 367, 368, 371, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 390, 391, 392, 396, 397, 398, 401, 404, 405, 409, 412, 413, 414], "exclud": [11, 12, 311, 355], "note": [11, 12, 13, 14, 18, 27, 28, 30, 36, 38, 58, 69, 77, 79, 80, 90, 119, 147, 167, 183, 193, 196, 252, 257, 280, 293, 306, 309, 314, 316, 317, 327, 332, 365, 385, 387, 388, 393, 404, 410], "shorthand": [11, 12, 13, 44, 45, 46, 47, 77, 86, 120, 135, 136, 145, 154, 155, 156, 179, 181, 196, 292, 294, 301, 302, 363, 367, 385, 404, 412], "1j": [11, 12, 55, 56, 79, 142, 171, 265, 278, 361, 381], "5620499351813308": [11, 12], "x1": [13, 15, 24, 25, 42, 43, 44, 46, 47, 53, 59, 61, 66, 67, 68, 69, 70, 73, 75, 77, 78, 79, 81, 85, 86, 94, 113, 120, 121, 122, 123, 131, 134, 135, 136, 139, 144, 146, 153, 154, 155, 156, 160, 167, 168, 171, 178, 179, 180, 181, 182, 184, 186, 188, 189, 192, 193, 194, 196, 197, 198, 200, 201, 253, 292, 294, 297, 298, 299, 301, 302, 308, 309, 310, 348, 362, 363, 367, 369, 372, 379, 384, 385, 392, 394, 396, 398, 400, 401, 403, 404, 407, 408, 409, 414], "x2": [13, 14, 15, 18, 24, 25, 31, 44, 46, 47, 59, 61, 66, 77, 78, 86, 120, 121, 122, 123, 135, 136, 139, 144, 146, 153, 154, 155, 156, 178, 179, 180, 181, 182, 184, 186, 189, 192, 193, 196, 292, 293, 294, 298, 301, 302, 363, 367, 369, 372, 380, 385, 392, 404], "scalar": [13, 15, 25, 44, 46, 47, 50, 59, 60, 76, 77, 78, 79, 80, 86, 120, 121, 122, 123, 135, 136, 139, 150, 154, 155, 156, 170, 178, 179, 181, 182, 186, 189, 192, 193, 196, 261, 266, 294, 298, 302, 307, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 336, 337, 339, 342, 345, 347, 351, 353, 354, 355, 356, 357, 358, 359, 363, 367, 385, 404, 412, 422], "both": [13, 15, 25, 44, 46, 47, 59, 77, 78, 86, 120, 121, 122, 123, 135, 136, 139, 154, 155, 156, 167, 169, 178, 179, 181, 182, 186, 192, 193, 196, 294, 298, 302, 363, 367, 385, 404], "equival": [13, 14, 16, 17, 18, 27, 28, 30, 58, 77, 79, 90, 196, 208, 248, 249, 280, 290, 291, 301, 310, 311, 339, 365, 371, 374, 385, 395, 404, 422], "term": [13, 77, 196, 385, 404], "broadcast": [13, 27, 28, 48, 49, 60, 77, 121, 122, 139, 167, 179, 181, 182, 184, 186, 192, 196, 302, 306, 307, 364, 385, 389, 393, 404], "b": [13, 15, 27, 28, 44, 47, 54, 60, 67, 68, 78, 80, 81, 86, 123, 135, 136, 138, 144, 155, 156, 159, 169, 170, 171, 179, 181, 184, 185, 191, 197, 198, 294, 298, 302, 312, 383, 392, 393, 396, 411], "7": [13, 15, 19, 39, 52, 60, 64, 68, 71, 72, 76, 77, 79, 81, 88, 116, 119, 132, 134, 146, 171, 184, 188, 196, 198, 266, 293, 304, 305, 311, 335, 361, 363, 366, 368, 369, 385, 387, 388, 392, 398, 401, 404, 405, 412], "oper": [13, 44, 45, 46, 47, 77, 80, 86, 90, 120, 135, 136, 145, 154, 155, 156, 157, 179, 180, 181, 182, 196, 292, 294, 301, 302, 306, 363, 367, 385, 393, 404, 415, 426], "axi": [14, 16, 17, 18, 27, 28, 29, 42, 54, 64, 66, 67, 68, 76, 79, 81, 90, 95, 100, 101, 105, 106, 109, 116, 117, 118, 132, 134, 138, 167, 172, 183, 185, 186, 187, 188, 191, 192, 197, 198, 199, 201, 248, 249, 250, 251, 252, 258, 268, 269, 270, 274, 275, 276, 279, 284, 285, 287, 289, 291, 299, 303, 305, 306, 307, 360, 364, 365, 369, 370, 382, 383, 384, 386, 387, 388, 389, 393, 396, 409, 411, 422], "keepdim": [14, 16, 17, 18, 27, 28, 64, 79, 167, 185, 187, 188, 191, 199, 201, 248, 249, 250, 251, 268, 269, 270, 275, 285, 287, 291, 303, 305, 307, 384, 386, 389, 409], "fals": [14, 15, 16, 17, 18, 27, 28, 31, 32, 35, 37, 42, 44, 45, 47, 48, 49, 58, 64, 65, 79, 80, 85, 86, 113, 131, 132, 135, 136, 143, 145, 146, 147, 148, 149, 155, 156, 165, 167, 171, 172, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 199, 201, 248, 249, 250, 251, 253, 268, 269, 270, 275, 285, 287, 291, 294, 297, 303, 305, 365, 376, 384, 386, 408, 409, 414], "whether": [14, 15, 18, 80, 157, 172, 365], "given": [14, 18, 19, 27, 28, 30, 31, 58, 64, 65, 67, 68, 76, 78, 79, 80, 81, 84, 85, 113, 116, 130, 131, 134, 139, 169, 185, 186, 189, 191, 192, 197, 198, 199, 250, 251, 252, 253, 258, 270, 275, 276, 281, 285, 287, 291, 296, 297, 303, 305, 306, 311, 316, 338, 355, 364, 368, 369, 370, 371, 386, 393, 396, 397, 411, 413, 414, 422], "evalu": [14, 15, 18, 79, 82, 83, 86, 144, 189, 248, 249, 298, 392], "logic": [14, 18, 179, 181, 182, 415, 426], "AND": [14, 44, 45, 46, 47, 145, 179, 180, 181, 182], "reduct": [14, 18], "method": [14, 16, 17, 18, 58, 79, 80, 115, 124, 126, 165, 253, 257, 280, 311, 365, 374, 395, 415], "Not": [14, 18, 79, 147, 197, 199, 200, 252, 303], "number": [14, 18, 19, 30, 43, 48, 49, 55, 56, 64, 76, 79, 80, 90, 114, 119, 120, 132, 141, 147, 158, 165, 167, 169, 172, 173, 183, 197, 199, 200, 272, 281, 282, 283, 293, 303, 304, 311, 313, 323, 347, 363, 364, 368, 369, 370, 371, 375, 376, 387, 393, 405, 426], "becaus": [14, 18], "x3": [14, 18], "rtol": [15, 146], "1e": [15, 91, 146, 175, 176, 178, 329], "05": [15, 146], "atol": [15, 146], "08": [15, 62, 146, 329, 377], "two": [15, 32, 39, 40, 44, 45, 46, 47, 57, 61, 66, 74, 76, 79, 80, 82, 83, 144, 145, 146, 153, 161, 166, 170, 179, 181, 182, 184, 185, 186, 191, 192, 195, 274, 288, 298, 311, 340, 387, 398, 399, 401, 402, 410], "within": [15, 19, 32, 79, 146, 253, 306, 311, 355], "toler": [15, 32, 146], "A": [15, 51, 59, 60, 79, 80, 89, 90, 116, 117, 118, 124, 126, 129, 162, 199, 253, 257, 264, 282, 303, 311, 313, 330, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 364, 376, 387, 393, 395], "boolean": [15, 44, 46, 47, 80, 146, 147, 148, 149, 179, 180, 181, 182, 199, 365, 376, 388], "dim": 15, "typeerror": [15, 48, 49, 60, 64, 71, 74, 90, 95, 101, 109, 116, 117, 118, 195, 369, 370, 382, 387, 408], "rais": [15, 31, 33, 34, 35, 37, 48, 49, 53, 58, 60, 64, 71, 74, 79, 89, 90, 95, 101, 109, 116, 117, 118, 164, 185, 187, 191, 195, 253, 254, 282, 302, 365, 369, 370, 381, 382, 387, 408], "integ": [15, 30, 44, 45, 46, 47, 50, 71, 74, 80, 119, 120, 141, 145, 146, 154, 164, 167, 302, 306, 311, 339, 342, 347, 363, 365, 367, 368, 371, 381, 388, 397, 398, 401, 405, 408, 422], "1e10": [15, 146], "00001e10": [15, 146], "initi": [16, 17, 79, 84, 129, 185, 191, 199, 268, 270, 275, 287, 303, 311, 386], "alia": [16, 17, 77, 114, 202, 311, 341, 344, 346, 404], "OR": [18, 44, 45, 46, 47, 145, 179, 180, 181, 182], "stop": [19, 132, 172, 183], "like": [19, 31, 33, 34, 35, 37, 39, 40, 41, 79, 84, 93, 130, 140, 173, 253, 296, 311, 355, 365, 413, 426], "usm_typ": [19, 31, 33, 34, 35, 36, 37, 71, 74, 79, 84, 85, 93, 130, 131, 132, 140, 172, 183, 296, 297, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355, 397, 408, 413, 414], "sycl_queu": [19, 31, 33, 34, 35, 36, 37, 71, 74, 79, 84, 85, 93, 130, 131, 132, 140, 172, 183, 296, 297, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 397, 408, 413, 414], "evenli": [19, 132, 172, 183, 368, 371], "interv": [19, 90, 172, 311, 339, 341, 343, 344, 346, 354, 355, 387], "d": [19, 54, 71, 72, 74, 80, 93, 96, 97, 98, 102, 103, 107, 108, 110, 111, 112, 117, 118, 129, 138, 140, 159, 161, 166, 167, 169, 189, 293, 302, 306, 316, 360, 365, 374, 388, 393, 411, 412, 422], "care": 19, "handl": [19, 80, 293, 388, 426], "endpoint": [19, 132, 172, 183], "trigonometr": [20, 21, 22, 23, 24, 25, 26, 62, 63, 377, 378, 390, 391, 426], "invers": [20, 21, 22, 23, 24, 25, 26, 45, 62, 63, 89, 90, 91, 101, 102, 103, 104, 105, 106, 107, 108, 145, 174, 176, 357, 377, 378, 390, 391], "cosin": [20, 21, 22, 23, 24, 25, 26, 62, 63, 377, 378, 390, 391], "tangent": [20, 21, 22, 23, 24, 25, 26, 62, 63, 377, 378, 390, 391], "sine": [20, 21, 22, 23, 24, 25, 26, 62, 63, 377, 378, 390, 391], "hyperbol": [20, 21, 22, 23, 24, 25, 26, 62, 63, 377, 378, 390, 391, 426], "14159265": [20, 25], "65745445": 21, "99322285": 21, "5707963267948966": 22, "72538256": 23, "99822295": 23, "point": [24, 33, 34, 59, 80, 89, 114, 172, 311, 340, 352, 426], "arc": [24, 25], "quadrant": [24, 25], "correctli": [24, 25, 27, 28, 167, 293], "78539816": [24, 25, 407], "57079633": [25, 310, 407], "180": 25, "135": 25, "45": 25, "54930614": 26, "dpnp_arrai": [27, 28, 85, 114, 124, 131, 141, 189, 202, 297, 305, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 360, 364, 398, 401, 414, 415], "option": [27, 28, 50, 51, 54, 59, 76, 79, 80, 89, 138, 165, 166, 167, 172, 252, 253, 264, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 360, 364, 365, 383, 388, 399, 400, 402, 403, 411], "By": [27, 28, 79, 253, 360, 364, 399, 402], "index": [27, 28, 53, 79, 80, 189, 254, 286, 306, 307, 360, 365, 388, 389, 415, 426], "specifi": [27, 28, 31, 35, 42, 49, 54, 71, 74, 75, 79, 132, 144, 167, 172, 183, 187, 188, 199, 201, 252, 259, 303, 311, 324, 334, 352, 360, 369, 370, 383, 384, 392, 409], "should": [27, 28, 79, 133, 146, 252, 253, 328, 365, 372, 422], "ax": [27, 28, 76, 78, 79, 96, 98, 99, 102, 103, 104, 107, 108, 110, 112, 144, 167, 170, 184, 187, 195, 282, 288, 290, 369, 370, 382, 387, 392, 393, 395], "reduc": [27, 28, 168, 171], "left": [27, 28, 117, 118, 154, 167, 354, 367, 372], "dimens": [27, 28, 31, 39, 40, 41, 54, 65, 72, 76, 79, 80, 90, 117, 118, 138, 143, 163, 167, 195, 264, 272, 282, 307, 311, 341, 343, 344, 346, 365, 374, 379, 382, 383, 387, 389, 393, 398, 399, 400, 401, 402, 403, 422, 426], "With": [27, 28, 167], "against": [27, 28, 48, 49, 133, 167, 307, 389], "remov": [27, 28, 69, 79, 90, 284, 309, 382, 426], "convert": [27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 69, 70, 80, 309, 310, 407], "flat": [27, 28, 79, 115, 264, 364], "tupl": [27, 28, 72, 79, 80, 90, 167, 169, 282, 293, 365, 374, 399, 402, 422], "appli": [27, 28, 29, 50, 179, 181, 182, 366], "index_arrai": [27, 28, 29, 79, 252], "call": [27, 28, 29, 35, 37, 80, 166, 208, 382, 393, 412], "multipl": [27, 28, 29, 54, 79, 80, 138, 161, 162, 252, 379, 383, 411, 415], "occurr": [27, 28, 43], "first": [27, 28, 54, 59, 79, 80, 89, 151, 152, 166, 185, 191, 252, 302, 360, 365, 369, 381, 389, 411], "11": [27, 28, 63, 72, 79, 134, 280, 330, 339, 371, 378, 398, 401], "12": [27, 28, 41, 72, 80, 142, 183, 303, 305, 335, 398, 401], "14": [27, 28, 44, 45, 72, 78, 145, 392], "24": [27, 28, 67, 81, 303], "re": [27, 28, 43, 137, 369, 406], "in_array1": [29, 87], "kind": [29, 50, 54, 79, 80, 114, 138, 252, 253, 274, 299, 383, 411, 426], "would": [29, 54, 79, 80, 274, 311, 383, 395], "describ": [29, 79, 80, 167, 252, 386, 426], "algorithm": [29, 79, 252], "indirect": [29, 79, 252, 379], "stabl": [29, 79, 252, 379], "partial": [29, 379], "decim": [30, 79, 114, 281, 368, 371], "detail": [30, 124, 371, 399, 400, 402, 403, 422], "nearest": [30, 119, 120, 363, 368, 371, 405], "truncat": [30, 50, 52, 119, 349, 368, 371, 405], "ndmin": 31, "object": [31, 34, 35, 37, 58, 79, 80, 90, 114, 115, 124, 128, 141, 157, 161, 167, 173, 190, 280, 295, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 365, 422], "satisfi": [31, 35, 37, 79, 92, 253], "valueerror": [31, 33, 34, 35, 37, 58, 365, 382], "new": [31, 48, 49, 54, 79, 80, 84, 85, 90, 124, 128, 129, 130, 131, 138, 140, 195, 199, 253, 280, 290, 296, 297, 303, 365, 369, 370, 383, 393, 395, 411, 413, 414, 422], "uniniti": [31, 85, 130, 296, 413], "than": [31, 79, 114, 117, 118, 138, 165, 274, 375, 376, 383], "a1": 32, "a2": 32, "equal_nan": [32, 146], "consist": [32, 389], "contigu": [33, 34, 35, 37, 79, 264, 277, 360, 365], "check": [33, 34, 157, 170], "construct": [33, 34, 53, 71, 74, 79, 80, 126, 127, 190, 254, 295, 364, 393, 415], "grid": [33, 34, 143, 189], "No": [34, 157], "perform": [34, 76, 157], "match": [34, 54, 76, 80, 306, 307, 383, 388, 389], "pass": [34, 79, 80, 280], "through": [34, 80, 422], "subclass": [34, 152], "content": [35, 79, 348], "flag": [35, 37, 79, 80, 257], "about": [35, 37, 79, 114, 262, 422], "layout": [35, 37, 51, 59, 79, 89, 262, 365, 415], "f_contigu": [35, 37], "make": [35, 37, 80, 189], "now": [35, 37, 72], "c_contigu": [35, 37, 79, 257], "Then": [35, 37], "laid": 37, "fortran": [37, 79, 253, 264, 360, 365], "row": [37, 54, 79, 117, 118, 138, 166, 173, 253, 264, 360, 399, 411], "exactli": [38, 69, 309, 311, 339], "ari": [39, 40, 41], "least": [39, 40, 41, 80, 146, 411], "One": [39, 40, 41, 80, 365], "sequenc": [39, 40, 41, 54, 57, 61, 138, 164, 166, 335, 348, 366, 383, 411], "preserv": [39, 40, 41, 79, 80, 116, 117, 118, 253], "made": [39, 80], "three": [39, 40, 41, 311, 347], "avoid": [40, 41, 79, 252], "possibl": [40, 41, 79, 90, 253, 280, 365, 382, 387, 395], "weight": [42, 43, 65, 137, 187], "arithmet": [42, 132, 187, 188, 301, 384, 409, 415, 426], "minlength": 43, "count": [43, 64, 80, 128, 164, 293, 313, 415, 426], "non": [43, 64, 79, 147, 161, 273, 293, 302, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 380], "find": [43, 165, 372, 379, 406, 426], "bit": [44, 45, 46, 47, 80, 114, 141, 145, 154, 179, 181, 182, 367, 426], "truth": [44, 45, 46, 47, 86, 135, 136, 145, 155, 156, 179, 180, 181, 182, 294, 426], "xor": [44, 45, 46, 47, 145, 179, 180, 181, 182], "255": [44, 46], "NOT": [45, 145, 179, 180, 181, 182], "31": [47, 132], "26": 47, "arg": [48, 82, 311, 410], "other": [48, 49, 76, 79, 80, 119, 140, 166, 195, 205, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 242, 245, 246, 247, 252, 253, 304, 311, 355, 415, 426], "origin": [48, 79, 167, 195, 252, 365], "notimplementederror": [48, 49, 79, 185, 187, 191, 253], "must": [49, 51, 54, 59, 76, 89, 90, 92, 138, 157, 166, 167, 173, 306, 307, 383, 387, 389, 411], "dp": [49, 77, 78, 79, 159, 161, 169, 170, 290, 302, 365, 366, 374, 385, 395, 404, 412], "from_": 50, "cast": [50, 54, 60, 79, 138, 253, 383, 411], "safe": [50, 54, 79, 138, 253, 383, 411], "between": [50, 76, 81, 114, 162, 172, 328, 342, 407], "occur": [50, 54, 79, 138, 253, 264, 383, 411], "accord": [50, 80, 114, 161, 162], "rule": [50, 60, 184, 366, 396], "without": [50, 79, 84, 282, 290, 360, 365, 422], "overflow": 50, "target": [50, 79, 253], "equiv": [50, 54, 79, 138, 253, 383, 411], "same_kind": [50, 54, 60, 79, 138, 253, 383, 411], "unsaf": [50, 54, 79, 138, 253, 383, 411], "what": [50, 54, 79, 80, 86, 138, 253, 313, 330, 383, 411], "mai": [50, 54, 79, 80, 90, 138, 161, 183, 253, 307, 383, 393, 411, 422], "promot": [50, 366, 393], "cube": [51, 380], "output": [51, 59, 74, 76, 80, 86, 89, 135, 136, 155, 156, 164, 166, 185, 189, 191, 244, 294, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 364, 382, 393, 426], "popul": [51, 59, 79, 89, 311, 338], "correct": [51, 54, 59, 89, 170, 383], "newli": [51, 59, 79, 89, 253], "27": [51, 183, 302, 408], "mode": [53, 57, 61, 79, 168, 254, 276, 289, 306, 349, 354, 388], "prefer": [53, 58, 79, 257], "join": [54, 138, 383, 411, 426], "exist": [54, 80, 90, 138, 365, 383, 411], "destin": [54, 138, 195, 306, 307, 383, 389, 411], "were": [54, 311, 340, 383], "str": [54, 80, 138, 383, 411], "cannot": [54, 79, 282, 382, 383], "togeth": [54, 80, 383], "sub": [54, 80, 138, 383, 411], "horizont": [54, 116, 138, 411], "vertic": [54, 116, 117, 138, 411], "3rd": 54, "depth": [54, 411], "assembl": [54, 138, 383, 411], "third": [54, 411], "t": [54, 65, 79, 80, 162, 290, 353], "obtain": [55, 56, 293], "chang": [55, 56, 58, 59, 79, 80, 252, 253, 286, 290, 292, 300, 301, 306, 307, 308, 360, 365, 407, 426], "imaginari": [55, 56, 79, 142, 265, 304, 361], "2j": [55, 56, 142, 161, 361, 375], "j": [55, 56, 142, 161, 177, 304, 307, 361, 381, 389], "v": [57, 71, 74, 80, 161], "linear": [57, 61, 170, 183, 415, 426], "convolut": [57, 61], "ca": 57, "z": [58, 127, 189, 321], "when": [58, 79, 80, 167, 183, 252, 253, 388, 397, 412], "we": [58, 72, 307, 389], "modifi": [58, 348], "second": [59, 79, 80, 89, 138, 152, 185, 191, 252, 302, 381], "dst": 60, "src": 60, "violat": 60, "valid": [61, 90, 387, 399, 400, 402, 403], "000000e": [62, 377], "00": [62, 377], "371139e": 62, "5091786": 63, "591953": 63, "coordin": [64, 127, 189], "19": [64, 80], "m": [65, 80, 93, 116, 117, 118, 157, 159, 161, 162, 165, 170, 307, 389, 397, 399, 402], "rowvar": 65, "bia": 65, "ddof": [65, 79, 201, 285, 291, 384, 409], "fweight": 65, "aweight": 65, "estim": [65, 313, 330], "covari": 65, "matrix": [65, 157, 158, 161, 162, 164, 165, 167, 168, 170, 184, 381, 401, 408, 415, 426], "variabl": 65, "axisa": 66, "axisb": 66, "axisc": 66, "vector": [66, 158, 165, 166, 167, 189, 410, 426], "cumul": [67, 68, 76, 79, 197, 198, 258], "120": [67, 70], "720": 67, "th": [68, 76, 81, 134, 188, 398, 401], "21": [68, 80], "larg": [69, 80, 309], "jump": [69, 309], "wrap": [69, 79, 113, 276, 289, 306, 309, 388], "rad": 70, "30": [70, 307, 310, 389], "60": [70, 307, 389, 412], "90": [70, 412], "150": 70, "upper": [71, 157, 168, 397, 401, 402], "triangl": [71, 139, 397, 398, 399, 400, 401, 402, 403], "lower": [71, 151, 157, 397, 398, 399, 400, 403], "access": [72, 73, 113, 422], "main": [72, 73, 113, 140, 162], "usual": [72, 80], "di": 72, "100": [72, 132, 183, 323, 349], "d3": 72, "offset": [75, 79, 80, 259, 394, 399, 400, 402, 403], "axis1": [75, 79, 259, 288, 387, 394], "axis2": [75, 79, 259, 288, 387, 394], "prepend": [76, 90, 393], "differenc": 76, "taken": [76, 399, 402], "last": [76, 166, 360, 365, 369, 382], "prior": 76, "expand": [76, 90], "length": [76, 79, 86, 138, 282, 314, 365, 366, 374, 382, 393, 411], "direct": [76, 117, 118], "smaller": [76, 79, 114, 120, 274, 363], "consecut": [76, 81], "quotient": [77, 193, 363, 404], "over": [78, 115, 127, 167, 172, 184, 189, 197, 199, 303, 311, 338, 343, 354, 355, 386, 426], "arbitrari": [78, 80, 184, 366], "buffer": [79, 125, 365], "stride": [79, 253], "wrapper": 79, "compliant": 79, "__getitem__": [79, 80, 115], "self": [79, 80, 115, 204, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 263, 311], "__setitem__": [79, 115], "val": [79, 113, 115, 243, 276, 300, 306], "__len__": [79, 80], "len": [79, 80, 143, 230, 374], "versionchang": [79, 252], "previous": [79, 252], "wa": [79, 80, 252, 311, 352, 386], "error": [79, 87, 252, 415], "At": [79, 252], "some": [79, 80, 90, 92, 119, 252, 422], "futur": [79, 80, 252], "intend": [79, 252], "until": [79, 252, 369, 370], "explicitli": [79, 252], "arr": [79, 80, 252, 293, 308, 335, 400, 403], "futurewarn": [79, 252], "quicksort": [79, 252], "mergesort": [79, 252], "heapsort": [79, 252], "field": [79, 80, 189, 252], "compar": [79, 86, 252], "etc": [79, 80, 252, 330], "word": [79, 119, 252, 311, 355], "yield": [79, 252, 311, 422], "maskedarrai": [79, 252], "inplac": [79, 252], "asnumpi": 79, "style": [79, 253, 264, 360], "keep": [79, 253], "close": [79, 90, 172, 253, 311, 339], "happen": [79, 253, 313], "itself": [79, 80, 253, 422], "backward": [79, 253, 369, 370], "convers": [79, 253, 415], "instead": [79, 90, 119, 132, 172, 183, 253, 293], "arr_t": [79, 253], "unless": [79, 167, 199, 253, 303], "condit": [79, 92, 158, 253, 300, 306, 308, 373, 412], "behavior": [79, 257, 393], "assign": [79, 261], "collaps": [79, 264], "get_arrai": 79, "get": [79, 286, 389, 422], "id": [79, 266], "standard": [79, 114, 120, 123, 187, 193, 244, 266, 311, 326, 333, 340, 349, 350, 351, 352, 353, 363, 384, 386, 409, 422, 426], "random": [79, 116, 117, 118, 171, 266, 383, 415, 426], "123": [79, 266], "kth": [79, 274, 299], "introselect": [79, 274, 299], "rearrang": [79, 274, 426], "move": [79, 195, 274, 369, 370, 395], "behind": [79, 274], "undefin": [79, 274], "sh": [79, 280], "unlik": [79, 280], "free": [79, 280], "separ": [79, 80, 280], "entri": [79, 80, 84, 116, 117, 118, 284, 291], "varianc": [79, 187, 201, 285, 291, 384, 409, 426], "dparrai": [79, 287, 427], "interchang": [79, 195, 288, 387], "to_devic": 79, "target_devic": 79, "transfer": 79, "suitabl": [79, 290], "properti": [79, 203, 260, 262, 263, 265, 267, 271, 272, 278, 282, 283, 286, 290, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 422], "give": [79, 290, 365, 374], "mask": [79, 80, 291, 300, 308, 388], "ignor": [79, 80, 121, 122, 185, 186, 187, 191, 192, 201, 291, 384, 409], "finit": [79, 147, 148, 149, 291, 304], "__eq__": [79, 80, 115, 311], "__ne__": [79, 80, 115, 311], "__lt__": [79, 80, 115, 311], "__le__": [79, 80, 115, 311], "__gt__": [79, 80, 115, 311], "__ge__": [79, 80, 115, 311], "attribut": [79, 80, 114, 141, 415], "0j": [79, 265, 278, 375], "70710677": [79, 265, 278], "items": [79, 80], "nbyte": 79, "consum": [79, 271], "repres": [79, 80, 124, 143, 169, 282, 311, 422], "setter": [79, 282], "involv": [79, 282], "displac": [79, 286], "upon": [79, 286], "unit": [79, 286], "respect": [79, 286], "s1": [79, 80, 286], "s2": [79, 80, 286], "s3": [79, 286], "i1": [79, 80, 286], "i2": [79, 80, 286], "i3": [79, 286], "sycl_context": 79, "sycl_devic": 79, "align": 80, "homogen": 80, "fundament": 80, "struct": 80, "obj": [80, 124, 150], "dictionari": 80, "comma": 80, "string": [80, 129, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 422], "sticki": 80, "isalignedstruct": 80, "just": 80, "built": 80, "int16": 80, "structur": 80, "f1": 80, "unsign": 80, "uint64": 80, "f2": 80, "u8": 80, "i4": 80, "protocol": [80, 124], "f8": 80, "s10": 80, "format": [80, 126, 426], "f0": 80, "void": 80, "flexibl": 80, "hello": 80, "world": [80, 313, 330], "i8": 80, "v10": 80, "subdivid": 80, "int8": [80, 303], "gender": 80, "ag": 80, "uint8": 80, "u1": 80, "25": [80, 87, 134, 137, 172, 196, 340, 349, 408, 409], "surnam": 80, "s25": 80, "new_ord": 80, "forc": 80, "swap": [80, 387], "code": 80, "opposit": 80, "endian": 80, "littl": 80, "big": 80, "nativ": 80, "new_dtyp": 80, "sy": 80, "sys_is_l": 80, "byteord": 80, "native_cod": 80, "swapped_cod": 80, "native_dt": 80, "swapped_dt": 80, "l": [80, 157, 161], "subarrai": 80, "regardless": 80, "subdtyp": 80, "8f": 80, "charact": 80, "applic": 80, "dt": 80, "relev": 80, "ascii": 80, "even": [80, 371], "char": 80, "descr": 80, "__array_interface__": 80, "descript": [80, 422], "warn": [80, 329], "directli": [80, 183, 389], "accur": 80, "reconstruct": [80, 171], "str_": 80, "grade": 80, "u16": 80, "fulli": 80, "titl": 80, "32": [80, 132, 392], "present": 80, "unicod": 80, "meta": 80, "notic": 80, "s16": 80, "multiarrai": 80, "item_hasobject": 80, "list_pickl": 80, "item_is_point": 80, "needs_init": 80, "needs_pyapi": 80, "use_getitem": 80, "use_setitem": 80, "explan": 80, "thei": [80, 162, 397, 422], "user": 80, "particular": 80, "hasobject": 80, "recal": 80, "actual": [80, 157], "address": 80, "pointer": 80, "distinguish": 80, "won": 80, "maintain": [80, 372, 389], "so": [80, 86, 174, 349, 380, 393], "produc": 80, "isbuiltin": 80, "relat": 80, "read": [80, 126, 360, 365], "machineri": 80, "extend": [80, 422], "field1": 80, "isn": 80, "platform": 80, "anyth": 80, "80": [80, 412], "biufcmmosuv": 80, "identifi": 80, "gener": [80, 162, 311, 313, 316, 347, 408, 422, 426], "u": [80, 171], "timedelta": 80, "datetim": 80, "metadata": 80, "readonli": 80, "mappingproxi": 80, "approach": 80, "propag": [80, 121, 122, 185, 186, 191, 192, 199], "although": [80, 393], "guarante": [80, 365], "certain": 80, "project": [80, 304], "featur": 80, "long": 80, "undocu": 80, "well": [80, 126, 313, 330, 349], "aspect": 80, "ad": [80, 159, 169, 426], "datatyp": [80, 165], "dt2": 80, "key2": 80, "value2": 80, "arr2": 80, "clear": 80, "width": 80, "un": 80, "void640": 80, "increas": [80, 90, 408], "walk": 80, "num": [80, 87, 132, 172, 183, 407], "roughli": 80, "precis": [80, 114], "typestr": 80, "item_dtyp": 80, "whose": [80, 162, 369, 400, 403], "retriev": 80, "extra": 80, "impli": 80, "tack": 80, "end": [80, 172], "to_end": 81, "to_begin": 81, "einstein": [82, 83, 144, 184, 298, 392], "summat": [82, 83, 144, 184, 298, 392], "convent": [82, 83, 144, 184, 298, 392], "operand": [82, 83, 144, 298, 392], "lowest": [82, 83, 311, 339], "cost": [82, 83], "contract": [82, 83], "express": [82, 83], "subscript": 83, "greedi": 83, "consid": [83, 147, 165, 311, 339], "intermedi": 83, "scipi": 87, "math": 87, "75": [87, 134, 172], "99532227": 87, "99853728": 87, "99959305": 87, "99989938": 87, "99997791": 87, "718281828": [88, 91], "389056099": [88, 91], "p": [89, 158, 313, 316, 321, 327, 330], "appear": [90, 117, 118], "whenev": [90, 387, 395], "rank": [90, 92, 165, 387], "resid": 90, "singleton": [90, 382], "henc": 90, "resolv": 90, "newaxi": 90, "minu": [91, 119, 120, 363, 405], "callcul": 91, "00000000005e": 91, "000000082740371e": 91, "elsewher": [93, 140, 397, 412], "fourier": [95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 415], "transform": [95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 415], "batch": [96, 98, 102, 103, 107, 108, 110, 112], "sampl": [97, 111, 132, 172, 183, 307, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 389, 415, 426], "frequenc": [97, 99, 104, 111], "shift": [99, 104, 154, 367, 369], "compon": [99, 104, 114, 142, 304, 361], "center": [99, 104], "spectrum": [99, 104], "signal": [100, 105], "hermitian": [100, 105, 157, 161, 165, 171, 426], "symmetri": [100, 105], "occupi": [114, 141], "ep": [114, 165], "smallest": [114, 141], "represent": [114, 141, 422], "larger": 114, "ieee": 114, "754": 114, "epsneg": 114, "largest": [114, 120, 141, 363], "approxim": 114, "resolut": 114, "tini": 114, "smallest_norm": 114, "finfo_object": 114, "__next__": 115, "__iter__": 115, "revers": [116, 117, 118], "reorder": 116, "right": [117, 118, 139, 154, 160, 161, 354, 367, 372], "down": 118, "toward": [119, 120, 363, 405], "spreadsheet": 119, "definit": [119, 157], "divis": [120, 121, 122, 123, 193, 302, 363], "floordivid": 120, "complementari": [120, 123, 193], "__dlpack__": 124, "dmlc": 124, "github": 124, "io": [124, 173], "dlpack": 124, "__dlpack_device__": 124, "file": [126, 133, 173], "text": [126, 129, 173], "binari": [126, 415, 426], "highli": 126, "effici": [126, 165], "known": [126, 349], "pars": 126, "simpli": 126, "written": 126, "therefor": 127, "fn": 127, "fill_valu": [130, 131], "scale": [132, 172, 183, 311, 318, 320, 322, 323, 324, 325, 333, 345, 350, 357], "progress": [132, 172], "1000": [132, 183, 312, 313, 318, 320, 322, 323, 324, 325, 326, 333, 334, 337, 339, 341, 344, 346, 352, 356, 357, 358, 359], "62341325": 132, "6227766": 132, "177": [132, 183], "827941": [132, 183], "63": 132, "127": 132, "directori": 133, "h": [133, 157, 189], "header": 133, "modul": [133, 415], "vararg": 134, "y1": [134, 396], "bin": [137, 349], "densiti": 137, "dataset": 137, "hist": [137, 349], "bin_edg": 137, "4999999999999996": 137, "tup": [138, 411], "nd": [138, 383, 411], "nest": [138, 383, 411], "leg": 139, "hypotenus": 139, "iinfo_object": 141, "4j": [142, 361], "6j": [142, 361], "spars": [143, 189], "nat": 149, "arg1": [151, 152], "arg2": [151, 152], "typecod": 151, "hierarchi": 151, "determin": [152, 159, 169, 179, 181, 182], "kroneck": 153, "40": [154, 307, 389], "decomposit": [157, 171, 426], "ordinari": 157, "symmetr": [157, 161, 165], "verifi": 157, "addit": 157, "array_lik": [157, 162, 164, 165, 166, 167, 307, 311, 374, 393, 400, 403], "factor": [157, 168], "fro": 158, "logarithm": [159, 169, 172, 174, 175, 176, 177, 178, 327, 426], "bc": [159, 169], "matric": [159, 162, 165, 167, 169, 189], "eigenvalu": [160, 161, 162, 426], "eigenvector": [160, 161, 162], "uplo": 161, "w": [161, 162], "ascend": 161, "17157288": 161, "82842712": 161, "92387953": 161, "38268343": 161, "vari": 161, "38268343j": 161, "92387953j": 161, "aren": 162, "necessarili": 162, "nor": 162, "suppli": [164, 166, 311, 340], "tol": [165, 329], "singular": [165, 171], "threshold": 165, "epsilon": 165, "assum": 165, "enabl": 165, "treat": [166, 197, 199, 200, 303, 304, 307, 389, 393, 422], "ord": 167, "abl": 167, "eight": 167, "infinit": [167, 304], "under": 167, "hold": [167, 199, 303], "q": [168, 188], "orthonorm": 168, "r": 168, "natur": [169, 174, 175, 176, 177, 178], "logdet": 169, "logabsdet": 169, "69314718": [169, 176], "09861229": [169, 176], "07944154": 169, "equat": [170, 426], "solut": 170, "full_matric": 171, "compute_uv": 171, "2d": 171, "vh": 171, "smat": 171, "4d": 171, "retstep": 172, "There": 172, "half": [172, 311, 341, 343, 344, 346, 355, 387], "open": [172, 295, 311, 341, 343, 344, 346, 355, 387], "fname": 173, "stringio": 173, "behav": 173, "n2": 173, "plu": [174, 175, 176, 177], "30102999566": 175, "99": [176, 307], "xi": [177, 189], "26618007j": 177, "prob1": 178, "50": [178, 183, 307, 389, 392, 412], "prob2": 178, "5e": 178, "prob12": 178, "113": 178, "87649168": 178, "uniformli": [183, 311, 355], "215": 183, "443469": 183, "464": 183, "15888336": 183, "316": 183, "22776602": 183, "562": 183, "34132519": 183, "0396842": 183, "34960421": 183, "98024613": 183, "72075441": 183, "maxima": 185, "deviat": [187, 311, 326, 333, 384, 409], "while": [187, 201, 293, 384, 409], "overwrite_input": 188, "xy": 189, "xn": 189, "nx": 189, "ny": 189, "xv": 189, "yv": 189, "matplotlib": [189, 349], "pyplot": [189, 349], "plt": [189, 349], "xx": 189, "yy": 189, "contourf": 189, "dpnp_iface_arraycr": [190, 295], "mgridclass": 190, "dens": 190, "5j": [190, 295], "minima": 191, "fraction": 194, "remain": [195, 365], "usm": [195, 311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355, 382], "across": 199, "repr": 241, "136": 244, "272": 244, "408": 244, "out2": 293, "ogridclass": 295, "expon": [302, 337, 426], "125": [302, 408], "effect": 302, "onto": 304, "riemann": 304, "sphere": 304, "magnitud": 304, "7j": 304, "1d": [306, 307, 389], "slice": [306, 307, 389, 402, 422], "contrast": 306, "cyclic": 306, "clamp": [306, 388], "boundari": 306, "44": 306, "55": 306, "22": 306, "ni": [307, 389], "nk": [307, 389], "nj": [307, 389], "those": 307, "Its": 307, "had": [307, 389], "been": [307, 370, 389], "everi": [307, 389], "deg": 310, "52359878": 310, "04719755": 310, "0943951": 310, "61799388": 310, "mersenn": 311, "twister": 311, "pseudo": 311, "maximumum": [311, 347], "sycldevic": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "syclqueu": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "concept": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355, 422], "oneapi": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "filter": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "selector": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 352, 355], "intern": 311, "state": 311, "get_sycl_queu": 311, "loc": [311, 322, 324, 325, 333, 357], "draw": [311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "gaussian": [311, 333, 357], "share": [311, 333, 338, 339, 340, 341, 342, 343, 344, 346, 352, 355], "drawn": [311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 336, 337, 339, 342, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 373], "parameter": [311, 333, 355], "58997253": 311, "84288406": 311, "33836967": 311, "16394577": 311, "40882036": 311, "39295758": 311, "48927254": 311, "74921661": 311, "13436424": 311, "56920387": 311, "84743374": 311, "80226506": 311, "76377462": 311, "06310682": 311, "25506903": 311, "1179187": 311, "49543509": 311, "76096244": 311, "low": [311, 339, 342, 355, 422], "high": [311, 339, 342, 355], "inclus": [311, 339, 342], "exclus": [311, 339], "omit": [311, 339, 412], "d0": [311, 338, 340], "d1": [311, 340], "dn": [311, 338, 340], "84401099": 311, "four": [311, 340], "88997253": 311, "54288406": 311, "63836967": 311, "46394577": 311, "70882036": 311, "69295758": 311, "78927254": 311, "04921661": 311, "continu": [311, 343], "stdev": [311, 352], "81715362": 311, "54465213": 311, "18557831": 311, "28352814": 311, "67718303": 311, "11570901": 311, "21968665": 311, "18236388": 311, "08156915": 311, "21941987": 311, "24544512": 311, "63522211": 311, "673174": 311, "54": 311, "48093112": 311, "52928804": 311, "1196081": 311, "6990877": 311, "34074171": 311, "conveni": 311, "accept": 311, "alpha": [312, 317, 318, 334, 337], "trial": 313, "probabl": [313, 321, 330], "coin": 313, "compani": [313, 330], "drill": [313, 330], "wild": [313, 330], "cat": [313, 330], "oil": [313, 330], "explor": [313, 330], "success": [313, 321, 330], "nine": 313, "fail": 313, "let": 313, "000": 313, "model": 313, "20000": 313, "answer": 313, "38885": 313, "38": 313, "fallback": [314, 316, 317, 327, 332, 348], "df": [315, 331, 353, 354], "chi": [315, 331], "89920014": 315, "00867716": 315, "13710533": 315, "62318272": 315, "dfnum": [319, 332], "dfden": [319, 332], "ten": 321, "thousand": 321, "individu": 321, "35": 321, "10000": [321, 336, 345, 355], "mu": [322, 326, 333, 356], "ngood": 323, "nbad": 323, "nsampl": 323, "nsamp": 323, "good": 323, "bad": 323, "decai": 324, "sigma": [326, 333], "seri": 327, "pval": 328, "iinfo": 328, "throw": 328, "dice": 328, "check_valid": 329, "multivari": 329, "after": 330, "100000": 330, "nonc": [331, 332], "noncentr": [331, 332], "todo": 331, "ii": 334, "lomax": 334, "randomli": 335, "lam": 336, "randomst": 339, "1923875335537315": 340, "rese": 347, "legaci": 347, "mt19937": 347, "engin": 347, "cauchi": 349, "lorentz": 349, "plot": 349, "1000000": [349, 351, 353, 354], "3x8000": 350, "8000": 350, "student": 353, "freedom": 353, "kappa": 356, "von": 356, "mise": 356, "dispers": 356, "pack": [360, 426], "fastest": [360, 365], "back": [360, 365], "slowest": [360, 365], "subtyp": 360, "33": 362, "3003003": 362, "fit": 364, "rep": [364, 393], "newshap": 365, "infer": 365, "write": 365, "account": 365, "underli": 365, "never": 365, "reus": 365, "unspecifi": 365, "arrays_and_dtyp": 366, "introduc": 369, "rel": 369, "li": [369, 370], "reposit": 370, "desir": [370, 393], "37": 371, "side": 372, "sorter": 372, "condlist": 373, "choicelist": 373, "howev": 375, "742278e": 377, "3012989": 378, "548739": 378, "rsqrt": 380, "traceback": 382, "recent": 382, "118033988749895": 384, "entir": 386, "bound": 388, "fanci": 388, "trivial": 389, "ai_min": 389, "ai_max": 389, "22460635e": 390, "63317787e": 390, "996272": 391, "917152": 391, "replic": 393, "thu": 393, "dx": 396, "composit": 396, "trapezoid": 396, "ind": [399, 402], "delta": 407, "complement": 407, "phase": 407, "49778714": 407, "28318531": 407, "vandermond": 408, "form": 411, "chosen": 412, "70": 412, "algebra": [415, 426], "mathemat": [415, 426], "search": [415, 426], "statist": [415, 426], "summari": 415, "level": [415, 422], "util": 415, "counterpart": 422, "basic": [422, 426], "constructor": 422, "syntax": 422, "reflect": 422, "intrins": 422, "sometim": 422, "expos": 422, "them": 422, "reset": 422, "meaningfulli": 422, "associ": 422, "mani": 422, "fashion": 422, "typic": 422, "briefli": 422, "explain": 422, "docstr": 422, "proce": 422, "pow": 422, "short": 422, "unari": 422, "custom": 422, "cover": 426, "elementwis": [426, 430], "helper": 426, "ration": 426, "extrema": 426, "variou": 430}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "any"], [19, 1, 1, "", "arange"], [20, 1, 1, "", "arccos"], [21, 1, 1, "", "arccosh"], [22, 1, 1, "", "arcsin"], [23, 1, 1, "", "arcsinh"], [24, 1, 1, "", "arctan"], [25, 1, 1, "", "arctan2"], [26, 1, 1, "", "arctanh"], [27, 1, 1, "", "argmax"], [28, 1, 1, "", "argmin"], [29, 1, 1, "", "argsort"], [30, 1, 1, "", "around"], [31, 1, 1, "", "array"], [32, 1, 1, "", "array_equal"], [33, 1, 1, "", "asanyarray"], [34, 1, 1, "", "asarray"], [35, 1, 1, "", "ascontiguousarray"], [36, 1, 1, "", "asfarray"], [37, 1, 1, "", "asfortranarray"], [38, 1, 1, "", "asnumpy"], [39, 1, 1, "", "atleast_1d"], [40, 1, 1, "", "atleast_2d"], [41, 1, 1, "", "atleast_3d"], [42, 1, 1, "", "average"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_not"], [46, 1, 1, "", "bitwise_or"], [47, 1, 1, "", "bitwise_xor"], [48, 1, 1, "", "broadcast_arrays"], [49, 1, 1, "", "broadcast_to"], [50, 1, 1, "", "can_cast"], [51, 1, 1, "", "cbrt"], [52, 1, 1, "", "ceil"], [53, 1, 1, "", "choose"], [54, 1, 1, "", "concatenate"], [55, 1, 1, "", "conj"], [56, 1, 1, "", "conjugate"], [57, 1, 1, "", "convolve"], [58, 1, 1, "", "copy"], [59, 1, 1, "", "copysign"], [60, 1, 1, "", "copyto"], [61, 1, 1, "", "correlate"], [62, 1, 1, "", "cos"], [63, 1, 1, "", "cosh"], [64, 1, 1, "", "count_nonzero"], [65, 1, 1, "", "cov"], [66, 1, 1, "", "cross"], [67, 1, 1, "", "cumprod"], [68, 1, 1, "", "cumsum"], [69, 1, 1, "", "deg2rad"], [70, 1, 1, "", "degrees"], [71, 1, 1, "", "diag"], [72, 1, 1, "", "diag_indices"], [73, 1, 1, "", "diag_indices_from"], [74, 1, 1, "", "diagflat"], [75, 1, 1, "", "diagonal"], [76, 1, 1, "", "diff"], [77, 1, 1, "", "divide"], [78, 1, 1, "", "dot"], [80, 2, 1, "", "dtype"], [81, 1, 1, "", "ediff1d"], [82, 1, 1, "", "einsum"], [83, 1, 1, "", "einsum_path"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "equal"], [87, 1, 1, "", "erf"], [88, 1, 1, "", "exp"], [89, 1, 1, "", "exp2"], [90, 1, 1, "", "expand_dims"], [91, 1, 1, "", "expm1"], [92, 1, 1, "", "extract"], [93, 1, 1, "", "eye"], [94, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [113, 1, 1, "", "fill_diagonal"], [114, 1, 1, "", "finfo"], [115, 2, 1, "", "flatiter"], [116, 1, 1, "", "flip"], [117, 1, 1, "", "fliplr"], [118, 1, 1, "", "flipud"], [119, 1, 1, "", "floor"], [120, 1, 1, "", "floor_divide"], [121, 1, 1, "", "fmax"], [122, 1, 1, "", "fmin"], [123, 1, 1, "", "fmod"], [124, 1, 1, "", "from_dlpack"], [125, 1, 1, "", "frombuffer"], [126, 1, 1, "", "fromfile"], [127, 1, 1, "", "fromfunction"], [128, 1, 1, "", "fromiter"], [129, 1, 1, "", "fromstring"], [130, 1, 1, "", "full"], [131, 1, 1, "", "full_like"], [132, 1, 1, "", "geomspace"], [133, 1, 1, "", "get_include"], [134, 1, 1, "", "gradient"], [135, 1, 1, "", "greater"], [136, 1, 1, "", "greater_equal"], [137, 1, 1, "", "histogram"], [138, 1, 1, "", "hstack"], [139, 1, 1, "", "hypot"], [140, 1, 1, "", "identity"], [141, 1, 1, "", "iinfo"], [142, 1, 1, "", "imag"], [143, 1, 1, "", "indices"], [144, 1, 1, "", "inner"], [145, 1, 1, "", "invert"], [146, 1, 1, "", "isclose"], [147, 1, 1, "", "isfinite"], [148, 1, 1, "", "isinf"], [149, 1, 1, "", "isnan"], [150, 1, 1, "", "isscalar"], [151, 1, 1, "", "issubdtype"], [152, 1, 1, "", "issubsctype"], [153, 1, 1, "", "kron"], [154, 1, 1, "", "left_shift"], [155, 1, 1, "", "less"], [156, 1, 1, "", "less_equal"], [172, 1, 1, "", "linspace"], [173, 1, 1, "", "loadtxt"], [174, 1, 1, "", "log"], [175, 1, 1, "", "log10"], [176, 1, 1, "", "log1p"], [177, 1, 1, "", "log2"], [178, 1, 1, "", "logaddexp"], [179, 1, 1, "", "logical_and"], [180, 1, 1, "", "logical_not"], [181, 1, 1, "", "logical_or"], [182, 1, 1, "", "logical_xor"], [183, 1, 1, "", "logspace"], [184, 1, 1, "", "matmul"], [185, 1, 1, "", "max"], [186, 1, 1, "", "maximum"], [187, 1, 1, "", "mean"], [188, 1, 1, "", "median"], [189, 1, 1, "", "meshgrid"], [190, 5, 1, "", "mgrid"], [191, 1, 1, "", "min"], [192, 1, 1, "", "minimum"], [193, 1, 1, "", "mod"], [194, 1, 1, "", "modf"], [195, 1, 1, "", "moveaxis"], [196, 1, 1, "", "multiply"], [197, 1, 1, "", "nancumprod"], [198, 1, 1, "", "nancumsum"], [199, 1, 1, "", "nanprod"], [200, 1, 1, "", "nansum"], [201, 1, 1, "", "nanvar"], [202, 3, 1, "", "ndarray"], [292, 1, 1, "", "negative"], [293, 1, 1, "", "nonzero"], [294, 1, 1, "", "not_equal"], [295, 5, 1, "", "ogrid"], [296, 1, 1, "", "ones"], [297, 1, 1, "", "ones_like"], [298, 1, 1, "", "outer"], [299, 1, 1, "", "partition"], [300, 1, 1, "", "place"], [301, 1, 1, "", "positive"], [302, 1, 1, "", "power"], [303, 1, 1, "", "prod"], [304, 1, 1, "", "proj"], [305, 1, 1, "", "ptp"], [306, 1, 1, "", "put"], [307, 1, 1, "", "put_along_axis"], [308, 1, 1, "", "putmask"], [309, 1, 1, "", "rad2deg"], [310, 1, 1, "", "radians"], [425, 0, 0, "-", "random"], [360, 1, 1, "", "ravel"], [361, 1, 1, "", "real"], [362, 1, 1, "", "reciprocal"], [363, 1, 1, "", "remainder"], [364, 1, 1, "", "repeat"], [365, 1, 1, "", "reshape"], [366, 1, 1, "", "result_type"], [367, 1, 1, "", "right_shift"], [368, 1, 1, "", "rint"], [369, 1, 1, "", "roll"], [370, 1, 1, "", "rollaxis"], [371, 1, 1, "", "round"], [372, 1, 1, "", "searchsorted"], [373, 1, 1, "", "select"], [374, 1, 1, "", "shape"], [375, 1, 1, "", "sign"], [376, 1, 1, "", "signbit"], [377, 1, 1, "", "sin"], [378, 1, 1, "", "sinh"], [379, 1, 1, "", "sort"], [380, 1, 1, "", "sqrt"], [381, 1, 1, "", "square"], [382, 1, 1, "", "squeeze"], [383, 1, 1, "", "stack"], [384, 1, 1, "", "std"], [385, 1, 1, "", "subtract"], [386, 1, 1, "", "sum"], [387, 1, 1, "", "swapaxes"], [388, 1, 1, "", "take"], [389, 1, 1, "", "take_along_axis"], [390, 1, 1, "", "tan"], [391, 1, 1, "", "tanh"], [392, 1, 1, "", "tensordot"], [393, 1, 1, "", "tile"], [394, 1, 1, "", "trace"], [395, 1, 1, "", "transpose"], [396, 1, 1, "", "trapz"], [397, 1, 1, "", "tri"], [398, 1, 1, "", "tril"], [399, 1, 1, "", "tril_indices"], [400, 1, 1, "", "tril_indices_from"], [401, 1, 1, "", "triu"], [402, 1, 1, "", "triu_indices"], [403, 1, 1, "", "triu_indices_from"], [404, 1, 1, "", "true_divide"], [405, 1, 1, "", "trunc"], [406, 1, 1, "", "unique"], [407, 1, 1, "", "unwrap"], [408, 1, 1, "", "vander"], [409, 1, 1, "", "var"], [410, 1, 1, "", "vdot"], [411, 1, 1, "", "vstack"], [412, 1, 1, "", "where"], [413, 1, 1, "", "zeros"], [414, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[79, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[79, 3, 1, "", "T"], [79, 4, 1, "", "__eq__"], [79, 4, 1, "", "__ge__"], [79, 4, 1, "", "__getitem__"], [79, 4, 1, "", "__gt__"], [79, 4, 1, "", "__le__"], [79, 4, 1, "", "__len__"], [79, 4, 1, "", "__lt__"], [79, 4, 1, "", "__ne__"], [79, 4, 1, "", "__setitem__"], [79, 4, 1, "", "all"], [79, 4, 1, "", "any"], [79, 4, 1, "", "argmax"], [79, 4, 1, "", "argmin"], [79, 4, 1, "", "argsort"], [79, 4, 1, "", "asnumpy"], [79, 4, 1, "", "astype"], [79, 4, 1, "", "choose"], [79, 4, 1, "", "conj"], [79, 4, 1, "", "conjugate"], [79, 4, 1, "", "copy"], [79, 4, 1, "", "cumsum"], [79, 3, 1, "", "device"], [79, 4, 1, "", "diagonal"], [79, 4, 1, "", "dot"], [79, 3, 1, "", "dtype"], [79, 4, 1, "", "fill"], [79, 3, 1, "", "flags"], [79, 3, 1, "", "flat"], [79, 4, 1, "", "flatten"], [79, 4, 1, "", "get_array"], [79, 3, 1, "", "imag"], [79, 4, 1, "", "item"], [79, 3, 1, "", "itemsize"], [79, 4, 1, "", "max"], [79, 4, 1, "", "mean"], [79, 4, 1, "", "min"], [79, 3, 1, "", "nbytes"], [79, 3, 1, "", "ndim"], [79, 4, 1, "", "nonzero"], [79, 4, 1, "", "partition"], [79, 4, 1, "", "prod"], [79, 4, 1, "", "put"], [79, 4, 1, "", "ravel"], [79, 3, 1, "", "real"], [79, 4, 1, "", "repeat"], [79, 4, 1, "", "reshape"], [79, 4, 1, "", "round"], [79, 3, 1, "", "shape"], [79, 3, 1, "", "size"], [79, 4, 1, "", "squeeze"], [79, 4, 1, "", "std"], [79, 3, 1, "", "strides"], [79, 4, 1, "", "sum"], [79, 4, 1, "", "swapaxes"], [79, 3, 1, "", "sycl_context"], [79, 3, 1, "", "sycl_device"], [79, 3, 1, "", "sycl_queue"], [79, 4, 1, "", "take"], [79, 4, 1, "", "to_device"], [79, 4, 1, "", "transpose"], [79, 3, 1, "", "usm_type"], [79, 4, 1, "", "var"]], "dpnp.dtype": [[80, 4, 1, "", "__eq__"], [80, 4, 1, "", "__ge__"], [80, 4, 1, "", "__getitem__"], [80, 4, 1, "", "__gt__"], [80, 4, 1, "", "__le__"], [80, 4, 1, "", "__len__"], [80, 4, 1, "", "__lt__"], [80, 4, 1, "", "__ne__"], [80, 3, 1, "", "alignment"], [80, 3, 1, "", "base"], [80, 3, 1, "", "byteorder"], [80, 3, 1, "", "char"], [80, 3, 1, "", "descr"], [80, 3, 1, "", "fields"], [80, 3, 1, "", "flags"], [80, 3, 1, "", "hasobject"], [80, 3, 1, "", "isalignedstruct"], [80, 3, 1, "", "isbuiltin"], [80, 3, 1, "", "isnative"], [80, 3, 1, "", "itemsize"], [80, 3, 1, "", "kind"], [80, 3, 1, "", "metadata"], [80, 3, 1, "", "name"], [80, 3, 1, "", "names"], [80, 3, 1, "", "ndim"], [80, 4, 1, "", "newbyteorder"], [80, 3, 1, "", "num"], [80, 3, 1, "", "shape"], [80, 3, 1, "", "str"], [80, 3, 1, "", "subdtype"], [80, 3, 1, "", "type"]], "dpnp.fft": [[95, 1, 1, "", "fft"], [96, 1, 1, "", "fft2"], [97, 1, 1, "", "fftfreq"], [98, 1, 1, "", "fftn"], [99, 1, 1, "", "fftshift"], [100, 1, 1, "", "hfft"], [101, 1, 1, "", "ifft"], [102, 1, 1, "", "ifft2"], [103, 1, 1, "", "ifftn"], [104, 1, 1, "", "ifftshift"], [105, 1, 1, "", "ihfft"], [106, 1, 1, "", "irfft"], [107, 1, 1, "", "irfft2"], [108, 1, 1, "", "irfftn"], [109, 1, 1, "", "rfft"], [110, 1, 1, "", "rfft2"], [111, 1, 1, "", "rfftfreq"], [112, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[115, 4, 1, "", "__eq__"], [115, 4, 1, "", "__ge__"], [115, 4, 1, "", "__getitem__"], [115, 4, 1, "", "__gt__"], [115, 4, 1, "", "__iter__"], [115, 4, 1, "", "__le__"], [115, 4, 1, "", "__lt__"], [115, 4, 1, "", "__ne__"], [115, 4, 1, "", "__next__"], [115, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[157, 1, 1, "", "cholesky"], [158, 1, 1, "", "cond"], [159, 1, 1, "", "det"], [160, 1, 1, "", "eig"], [161, 1, 1, "", "eigh"], [162, 1, 1, "", "eigvals"], [163, 1, 1, "", "inv"], [164, 1, 1, "", "matrix_power"], [165, 1, 1, "", "matrix_rank"], [166, 1, 1, "", "multi_dot"], [167, 1, 1, "", "norm"], [168, 1, 1, "", "qr"], [169, 1, 1, "", "slogdet"], [170, 1, 1, "", "solve"], [171, 1, 1, "", "svd"]], "dpnp.ndarray": [[203, 6, 1, "", "T"], [204, 4, 1, "", "__abs__"], [205, 4, 1, "", "__add__"], [206, 4, 1, "", "__and__"], [207, 4, 1, "", "__complex__"], [208, 4, 1, "", "__copy__"], [209, 4, 1, "", "__eq__"], [210, 4, 1, "", "__float__"], [211, 4, 1, "", "__floordiv__"], [212, 4, 1, "", "__ge__"], [213, 4, 1, "", "__getitem__"], [214, 4, 1, "", "__gt__"], [215, 4, 1, "", "__iadd__"], [216, 4, 1, "", "__iand__"], [217, 4, 1, "", "__ifloordiv__"], [218, 4, 1, "", "__ilshift__"], [219, 4, 1, "", "__imod__"], [220, 4, 1, "", "__imul__"], [221, 4, 1, "", "__int__"], [222, 4, 1, "", "__invert__"], [223, 4, 1, "", "__ior__"], [224, 4, 1, "", "__ipow__"], [225, 4, 1, "", "__irshift__"], [226, 4, 1, "", "__isub__"], [227, 4, 1, "", "__itruediv__"], [228, 4, 1, "", "__ixor__"], [229, 4, 1, "", "__le__"], [230, 4, 1, "", "__len__"], [231, 4, 1, "", "__lshift__"], [232, 4, 1, "", "__lt__"], [233, 4, 1, "", "__mod__"], [234, 4, 1, "", "__mul__"], [235, 4, 1, "", "__ne__"], [236, 4, 1, "", "__neg__"], [237, 4, 1, "", "__new__"], [238, 4, 1, "", "__or__"], [239, 4, 1, "", "__pos__"], [240, 4, 1, "", "__pow__"], [241, 4, 1, "", "__repr__"], [242, 4, 1, "", "__rshift__"], [243, 4, 1, "", "__setitem__"], [244, 4, 1, "", "__str__"], [245, 4, 1, "", "__sub__"], [246, 4, 1, "", "__truediv__"], [247, 4, 1, "", "__xor__"], [248, 4, 1, "", "all"], [249, 4, 1, "", "any"], [250, 4, 1, "", "argmax"], [251, 4, 1, "", "argmin"], [252, 4, 1, "", "argsort"], [253, 4, 1, "", "astype"], [254, 4, 1, "", "choose"], [255, 4, 1, "", "conj"], [256, 4, 1, "", "conjugate"], [257, 4, 1, "", "copy"], [258, 4, 1, "", "cumsum"], [259, 4, 1, "", "diagonal"], [260, 6, 1, "", "dtype"], [261, 4, 1, "", "fill"], [262, 6, 1, "", "flags"], [263, 6, 1, "", "flat"], [264, 4, 1, "", "flatten"], [265, 6, 1, "", "imag"], [266, 4, 1, "", "item"], [267, 6, 1, "", "itemsize"], [268, 4, 1, "", "max"], [269, 4, 1, "", "mean"], [270, 4, 1, "", "min"], [271, 6, 1, "", "nbytes"], [272, 6, 1, "", "ndim"], [273, 4, 1, "", "nonzero"], [274, 4, 1, "", "partition"], [275, 4, 1, "", "prod"], [276, 4, 1, "", "put"], [277, 4, 1, "", "ravel"], [278, 6, 1, "", "real"], [279, 4, 1, "", "repeat"], [280, 4, 1, "", "reshape"], [281, 4, 1, "", "round"], [282, 6, 1, "", "shape"], [283, 6, 1, "", "size"], [284, 4, 1, "", "squeeze"], [285, 4, 1, "", "std"], [286, 6, 1, "", "strides"], [287, 4, 1, "", "sum"], [288, 4, 1, "", "swapaxes"], [289, 4, 1, "", "take"], [290, 4, 1, "", "transpose"], [291, 4, 1, "", "var"]], "dpnp.random": [[311, 2, 1, "", "RandomState"], [312, 1, 1, "", "beta"], [313, 1, 1, "", "binomial"], [314, 1, 1, "", "bytes"], [315, 1, 1, "", "chisquare"], [316, 1, 1, "", "choice"], [317, 1, 1, "", "dirichlet"], [318, 1, 1, "", "exponential"], [319, 1, 1, "", "f"], [320, 1, 1, "", "gamma"], [321, 1, 1, "", "geometric"], [322, 1, 1, "", "gumbel"], [323, 1, 1, "", "hypergeometric"], [324, 1, 1, "", "laplace"], [325, 1, 1, "", "logistic"], [326, 1, 1, "", "lognormal"], [327, 1, 1, "", "logseries"], [328, 1, 1, "", "multinomial"], [329, 1, 1, "", "multivariate_normal"], [330, 1, 1, "", "negative_binomial"], [331, 1, 1, "", "noncentral_chisquare"], [332, 1, 1, "", "noncentral_f"], [333, 1, 1, "", "normal"], [334, 1, 1, "", "pareto"], [335, 1, 1, "", "permutation"], [336, 1, 1, "", "poisson"], [337, 1, 1, "", "power"], [338, 1, 1, "", "rand"], [339, 1, 1, "", "randint"], [340, 1, 1, "", "randn"], [341, 1, 1, "", "random"], [342, 1, 1, "", "random_integers"], [343, 1, 1, "", "random_sample"], [344, 1, 1, "", "ranf"], [345, 1, 1, "", "rayleigh"], [346, 1, 1, "", "sample"], [347, 1, 1, "", "seed"], [348, 1, 1, "", "shuffle"], [349, 1, 1, "", "standard_cauchy"], [350, 1, 1, "", "standard_exponential"], [351, 1, 1, "", "standard_gamma"], [352, 1, 1, "", "standard_normal"], [353, 1, 1, "", "standard_t"], [354, 1, 1, "", "triangular"], [355, 1, 1, "", "uniform"], [356, 1, 1, "", "vonmises"], [357, 1, 1, "", "wald"], [358, 1, 1, "", "weibull"], [359, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[311, 4, 1, "", "__eq__"], [311, 4, 1, "", "__ge__"], [311, 4, 1, "", "__gt__"], [311, 4, 1, "", "__le__"], [311, 4, 1, "", "__lt__"], [311, 4, 1, "", "__ne__"], [311, 4, 1, "", "get_state"], [311, 4, 1, "", "get_sycl_device"], [311, 4, 1, "", "get_sycl_queue"], [311, 4, 1, "", "normal"], [311, 4, 1, "", "rand"], [311, 4, 1, "", "randint"], [311, 4, 1, "", "randn"], [311, 4, 1, "", "random_sample"], [311, 4, 1, "", "standard_normal"], [311, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"interplai": 0, "data": [0, 2, 7, 8, 9, 416, 422, 425], "parallel": [0, 2], "control": 0, "librari": 0, "exampl": [0, 4], "c": 1, "backend": 1, "api": [1, 415], "refer": [1, 415], "extens": 2, "numpi": [2, 6], "develop": 2, "inform": [2, 8], "overview": 3, "quick": 4, "start": 4, "guid": 4, "devic": 4, "driver": 4, "python": 4, "interpret": 4, "instal": 4, "packag": [4, 424], "from": [4, 7], "anaconda": 4, "build": 4, "conda": 4, "scikit": 4, "test": [4, 8, 418], "binari": 5, "oper": [5, 416, 418, 419, 420, 422, 430], "elementwis": 5, "bit": [5, 430], "pack": 5, "output": 5, "format": 5, "comparison": [6, 418, 422, 430], "tabl": 6, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 425], "cupi": 6, "summari": 6, "modul": [6, 424], "level": 6, "multi": [6, 422], "dimension": [6, 422], "arrai": [6, 7, 9, 31, 416, 418, 419, 422], "linear": [6, 417], "algebra": [6, 417], "discret": 6, "fourier": 6, "transform": 6, "random": [6, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 425], "sampl": [6, 346, 425], "creation": 7, "routin": [7, 8, 10, 416, 419, 420, 421, 426], "basic": [7, 419, 424], "other": [7, 417, 420, 422], "numer": 7, "rang": 7, "matrix": [7, 417, 422], "The": 7, "class": 7, "type": [8, 9, 418, 422], "creat": 8, "miscellan": [8, 420, 421], "avail": [9, 430], "fft": [10, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "function": [10, 418, 420, 428, 429, 430], "standard": 10, "real": [10, 278, 361], "hermitian": 10, "helper": 10, "ab": 11, "absolut": 12, "add": 13, "all": [14, 248], "allclos": 15, "amax": 16, "amin": 17, "ani": [18, 249], "arang": 19, "arcco": 20, "arccosh": 21, "arcsin": 22, "arcsinh": 23, "arctan": 24, "arctan2": 25, "arctanh": 26, "argmax": [27, 250], "argmin": [28, 251], "argsort": [29, 252], "around": 30, "array_equ": 32, "asanyarrai": 33, "asarrai": 34, "ascontiguousarrai": 35, "asfarrai": 36, "asfortranarrai": 37, "asnumpi": 38, "atleast_1d": 39, "atleast_2d": 40, "atleast_3d": 41, "averag": [42, 429], "bincount": 43, "bitwise_and": 44, "bitwise_not": 45, "bitwise_or": 46, "bitwise_xor": 47, "broadcast_arrai": 48, "broadcast_to": 49, "can_cast": 50, "cbrt": 51, "ceil": 52, "choos": [53, 254], "concaten": 54, "conj": [55, 255], "conjug": [56, 256], "convolv": 57, "copi": [58, 257], "copysign": 59, "copyto": 60, "correl": [61, 429], "co": 62, "cosh": 63, "count_nonzero": 64, "cov": 65, "cross": 66, "cumprod": 67, "cumsum": [68, 258], "deg2rad": 69, "degre": 70, "diag": 71, "diag_indic": 72, "diag_indices_from": 73, "diagflat": 74, "diagon": [75, 259], "diff": 76, "divid": 77, "dot": 78, "dpnp_arrai": 79, "dtype": [80, 260], "ediff1d": 81, "einsum": 82, "einsum_path": 83, "empti": 84, "empty_lik": 85, "equal": 86, "erf": 87, "exp": 88, "exp2": 89, "expand_dim": 90, "expm1": 91, "extract": 92, "ey": 93, "fab": 94, "fft2": 96, "fftfreq": 97, "fftn": 98, "fftshift": 99, "hfft": 100, "ifft": 101, "ifft2": 102, "ifftn": 103, "ifftshift": 104, "ihfft": 105, "irfft": 106, "irfft2": 107, "irfftn": 108, "rfft": 109, "rfft2": 110, "rfftfreq": 111, "rfftn": 112, "fill_diagon": 113, "finfo": 114, "flatit": 115, "flip": 116, "fliplr": 117, "flipud": 118, "floor": 119, "floor_divid": 120, "fmax": 121, "fmin": 122, "fmod": 123, "from_dlpack": 124, "frombuff": 125, "fromfil": 126, "fromfunct": 127, "fromit": 128, "fromstr": 129, "full": 130, "full_lik": 131, "geomspac": 132, "get_includ": 133, "gradient": 134, "greater": 135, "greater_equ": 136, "histogram": [137, 429], "hstack": 138, "hypot": 139, "ident": 140, "iinfo": 141, "imag": [142, 265], "indic": 143, "inner": 144, "invert": 145, "isclos": 146, "isfinit": 147, "isinf": 148, "isnan": 149, "isscalar": 150, "issubdtyp": 151, "issubsctyp": 152, "kron": 153, "left_shift": 154, "less": 155, "less_equ": 156, "linalg": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "choleski": 157, "cond": 158, "det": 159, "eig": 160, "eigh": 161, "eigval": 162, "inv": 163, "matrix_pow": 164, "matrix_rank": 165, "multi_dot": 166, "norm": [167, 417], "qr": 168, "slogdet": 169, "solv": [170, 417], "svd": 171, "linspac": 172, "loadtxt": 173, "log": 174, "log10": 175, "log1p": 176, "log2": 177, "logaddexp": 178, "logical_and": 179, "logical_not": 180, "logical_or": 181, "logical_xor": 182, "logspac": 183, "matmul": 184, "max": [185, 268], "maximum": 186, "mean": [187, 269], "median": 188, "meshgrid": 189, "mgrid": 190, "min": [191, 270], "minimum": 192, "mod": 193, "modf": 194, "moveaxi": 195, "multipli": 196, "nancumprod": 197, "nancumsum": 198, "nanprod": 199, "nansum": 200, "nanvar": 201, "ndarrai": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 422], "t": 203, "__abs__": 204, "__add__": 205, "__and__": 206, "__complex__": 207, "__copy__": 208, "__eq__": 209, "__float__": 210, "__floordiv__": 211, "__ge__": 212, "__getitem__": 213, "__gt__": 214, "__iadd__": 215, "__iand__": 216, "__ifloordiv__": 217, "__ilshift__": 218, "__imod__": 219, "__imul__": 220, "__int__": 221, "__invert__": 222, "__ior__": 223, "__ipow__": 224, "__irshift__": 225, "__isub__": 226, "__itruediv__": 227, "__ixor__": 228, "__le__": 229, "__len__": 230, "__lshift__": 231, "__lt__": 232, "__mod__": 233, "__mul__": 234, "__ne__": 235, "__neg__": 236, "__new__": 237, "__or__": 238, "__pos__": 239, "__pow__": 240, "__repr__": 241, "__rshift__": 242, "__setitem__": 243, "__str__": 244, "__sub__": 245, "__truediv__": 246, "__xor__": 247, "astyp": 253, "fill": 261, "flag": 262, "flat": 263, "flatten": 264, "item": [266, 422], "items": 267, "nbyte": 271, "ndim": 272, "nonzero": [273, 293], "partit": [274, 299], "prod": [275, 303], "put": [276, 306], "ravel": [277, 360], "repeat": [279, 364], "reshap": [280, 365], "round": [281, 371, 420], "shape": [282, 374, 419, 422], "size": 283, "squeez": [284, 382], "std": [285, 384], "stride": 286, "sum": [287, 386, 420], "swapax": [288, 387], "take": [289, 388], "transpos": [290, 395, 419], "var": [291, 409], "neg": 292, "not_equ": 294, "ogrid": 295, "ones": 296, "ones_lik": 297, "outer": 298, "place": 300, "posit": 301, "power": [302, 337], "proj": 304, "ptp": 305, "put_along_axi": 307, "putmask": 308, "rad2deg": 309, "radian": 310, "randomst": 311, "beta": 312, "binomi": 313, "byte": 314, "chisquar": 315, "choic": 316, "dirichlet": 317, "exponenti": 318, "f": 319, "gamma": 320, "geometr": 321, "gumbel": 322, "hypergeometr": 323, "laplac": 324, "logist": 325, "lognorm": 326, "logseri": 327, "multinomi": 328, "multivariate_norm": 329, "negative_binomi": 330, "noncentral_chisquar": 331, "noncentral_f": 332, "normal": 333, "pareto": 334, "permut": [335, 425], "poisson": 336, "rand": 338, "randint": 339, "randn": 340, "random_integ": 342, "random_sampl": 343, "ranf": 344, "rayleigh": 345, "seed": 347, "shuffl": 348, "standard_cauchi": 349, "standard_exponenti": 350, "standard_gamma": 351, "standard_norm": 352, "standard_t": 353, "triangular": 354, "uniform": 355, "vonmis": 356, "wald": 357, "weibul": 358, "zipf": 359, "reciproc": 362, "remaind": 363, "result_typ": 366, "right_shift": 367, "rint": 368, "roll": 369, "rollaxi": 370, "searchsort": 372, "select": [373, 422], "sign": 375, "signbit": 376, "sin": 377, "sinh": 378, "sort": [379, 427], "sqrt": 380, "squar": 381, "stack": 383, "subtract": 385, "take_along_axi": 389, "tan": 390, "tanh": 391, "tensordot": 392, "tile": [393, 419], "trace": 394, "trapz": 396, "tri": 397, "tril": 398, "tril_indic": 399, "tril_indices_from": 400, "triu": 401, "triu_indic": 402, "triu_indices_from": 403, "true_divid": 404, "trunc": 405, "uniqu": 406, "unwrap": 407, "vander": 408, "vdot": 410, "vstack": 411, "where": 412, "zero": 413, "zeros_lik": 414, "index": [416, 422], "gener": [416, 425], "like": [416, 419], "insert": 416, "iter": 416, "over": 416, "vector": 417, "product": [417, 420], "decomposit": 417, "eigenvalu": 417, "number": [417, 419, 420], "equat": 417, "logic": 418, "truth": 418, "valu": 418, "infin": 418, "nan": 418, "manipul": [419, 422], "chang": 419, "dimens": 419, "kind": 419, "join": 419, "split": 419, "ad": 419, "remov": 419, "element": 419, "rearrang": 419, "mathemat": 420, "trigonometr": [420, 430], "hyperbol": 420, "differ": 420, "expon": 420, "logarithm": 420, "special": [420, 422, 428], "float": [420, 430], "point": 420, "ration": 420, "arithmet": [420, 422, 424], "handl": 420, "complex": 420, "extrema": 420, "find": 420, "util": 421, "construct": 422, "attribut": 422, "memori": 422, "layout": 422, "method": 422, "convers": 422, "calcul": 422, "multipl": 422, "pad": 423, "polynomi": 424, "polyutil": 424, "poly1d": 424, "simpl": 425, "distribut": 425, "search": 427, "count": 427, "error": 428, "statist": 429, "order": 429, "varianc": 429, "univers": 430, "ufunc": 430, "math": 430, "twiddl": 430}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Interplay with the Data Parallel Control Library": [[0, "interplay-with-the-data-parallel-control-library"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "Data Parallel Extension for NumPy*": [[2, "module-dpnp"]], "Development information": [[2, null]], "Overview": [[3, "id1"]], "Quick Start Guide": [[4, "id1"]], "Device Drivers": [[4, "device-drivers"]], "Python Interpreter": [[4, "python-interpreter"]], "Installation": [[4, "installation"]], "Install Package from Anaconda": [[4, "install-package-from-anaconda"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Testing": [[4, "testing"]], "Examples": [[4, "examples"]], "Binary Operations": [[5, "binary-operations"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Bit packing": [[5, "bit-packing"]], "Output formatting": [[5, "output-formatting"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, "comparison-table-numpy-dpnp-cupy"]], "Summary": [[6, "summary"]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Linear Algebra": [[6, "linear-algebra"], [417, "linear-algebra"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Random Sampling": [[6, "random-sampling"]], "Array Creation Routines": [[7, "array-creation-routines"]], "Basic creation routines": [[7, "basic-creation-routines"]], "Creation from other data": [[7, "creation-from-other-data"]], "Numerical ranges": [[7, "numerical-ranges"]], "Matrix creation": [[7, "matrix-creation"]], "The Matrix class": [[7, "the-matrix-class"]], "Data type routines": [[8, "data-type-routines"]], "Creating data types": [[8, "creating-data-types"]], "Data type information": [[8, "data-type-information"]], "Data type testing": [[8, "data-type-testing"]], "Miscellaneous": [[8, "miscellaneous"], [420, "miscellaneous"]], "Available array data types": [[9, "available-array-data-types"]], "FFT Functions": [[10, "fft-functions"]], "Standard FFTs": [[10, "standard-ffts"]], "Real FFTs": [[10, "real-ffts"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Helper routines": [[10, "helper-routines"]], "dpnp.abs": [[11, "dpnp-abs"]], "dpnp.absolute": [[12, "dpnp-absolute"]], "dpnp.add": [[13, "dpnp-add"]], "dpnp.all": [[14, "dpnp-all"]], "dpnp.allclose": [[15, "dpnp-allclose"]], "dpnp.amax": [[16, "dpnp-amax"]], "dpnp.amin": [[17, "dpnp-amin"]], "dpnp.any": [[18, "dpnp-any"]], "dpnp.arange": [[19, "dpnp-arange"]], "dpnp.arccos": [[20, "dpnp-arccos"]], "dpnp.arccosh": [[21, "dpnp-arccosh"]], "dpnp.arcsin": [[22, "dpnp-arcsin"]], "dpnp.arcsinh": [[23, "dpnp-arcsinh"]], "dpnp.arctan": [[24, "dpnp-arctan"]], "dpnp.arctan2": [[25, "dpnp-arctan2"]], "dpnp.arctanh": [[26, "dpnp-arctanh"]], "dpnp.argmax": [[27, "dpnp-argmax"]], "dpnp.argmin": [[28, "dpnp-argmin"]], "dpnp.argsort": [[29, "dpnp-argsort"]], "dpnp.around": [[30, "dpnp-around"]], "dpnp.array": [[31, "dpnp-array"]], "dpnp.array_equal": [[32, "dpnp-array-equal"]], "dpnp.asanyarray": [[33, "dpnp-asanyarray"]], "dpnp.asarray": [[34, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[35, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[36, "dpnp-asfarray"]], "dpnp.asfortranarray": [[37, "dpnp-asfortranarray"]], "dpnp.asnumpy": [[38, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[39, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[40, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[41, "dpnp-atleast-3d"]], "dpnp.average": [[42, "dpnp-average"]], "dpnp.bincount": [[43, "dpnp-bincount"]], "dpnp.bitwise_and": [[44, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[45, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[46, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[47, "dpnp-bitwise-xor"]], "dpnp.broadcast_arrays": [[48, "dpnp-broadcast-arrays"]], "dpnp.broadcast_to": [[49, "dpnp-broadcast-to"]], "dpnp.can_cast": [[50, "dpnp-can-cast"]], "dpnp.cbrt": [[51, "dpnp-cbrt"]], "dpnp.ceil": [[52, "dpnp-ceil"]], "dpnp.choose": [[53, "dpnp-choose"]], "dpnp.concatenate": [[54, "dpnp-concatenate"]], "dpnp.conj": [[55, "dpnp-conj"]], "dpnp.conjugate": [[56, "dpnp-conjugate"]], "dpnp.convolve": [[57, "dpnp-convolve"]], "dpnp.copy": [[58, "dpnp-copy"]], "dpnp.copysign": [[59, "dpnp-copysign"]], "dpnp.copyto": [[60, "dpnp-copyto"]], "dpnp.correlate": [[61, "dpnp-correlate"]], "dpnp.cos": [[62, "dpnp-cos"]], "dpnp.cosh": [[63, "dpnp-cosh"]], "dpnp.count_nonzero": [[64, "dpnp-count-nonzero"]], "dpnp.cov": [[65, "dpnp-cov"]], "dpnp.cross": [[66, "dpnp-cross"]], "dpnp.cumprod": [[67, "dpnp-cumprod"]], "dpnp.cumsum": [[68, "dpnp-cumsum"]], "dpnp.deg2rad": [[69, "dpnp-deg2rad"]], "dpnp.degrees": [[70, "dpnp-degrees"]], "dpnp.diag": [[71, "dpnp-diag"]], "dpnp.diag_indices": [[72, "dpnp-diag-indices"]], "dpnp.diag_indices_from": [[73, "dpnp-diag-indices-from"]], "dpnp.diagflat": [[74, "dpnp-diagflat"]], "dpnp.diagonal": [[75, "dpnp-diagonal"]], "dpnp.diff": [[76, "dpnp-diff"]], "dpnp.divide": [[77, "dpnp-divide"]], "dpnp.dot": [[78, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[79, "dpnp-dpnp-array-dpnp-array"]], "dpnp.dtype": [[80, "dpnp-dtype"]], "dpnp.ediff1d": [[81, "dpnp-ediff1d"]], "dpnp.einsum": [[82, "dpnp-einsum"]], "dpnp.einsum_path": [[83, "dpnp-einsum-path"]], "dpnp.empty": [[84, "dpnp-empty"]], "dpnp.empty_like": [[85, "dpnp-empty-like"]], "dpnp.equal": [[86, "dpnp-equal"]], "dpnp.erf": [[87, "dpnp-erf"]], "dpnp.exp": [[88, "dpnp-exp"]], "dpnp.exp2": [[89, "dpnp-exp2"]], "dpnp.expand_dims": [[90, "dpnp-expand-dims"]], "dpnp.expm1": [[91, "dpnp-expm1"]], "dpnp.extract": [[92, "dpnp-extract"]], "dpnp.eye": [[93, "dpnp-eye"]], "dpnp.fabs": [[94, "dpnp-fabs"]], "dpnp.fft.fft": [[95, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[96, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[97, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[98, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[99, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[100, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[101, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[102, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[103, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[104, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[105, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[106, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[107, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[108, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[109, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[110, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[111, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[112, "dpnp-fft-rfftn"]], "dpnp.fill_diagonal": [[113, "dpnp-fill-diagonal"]], "dpnp.finfo": [[114, "dpnp-finfo"]], "dpnp.flatiter": [[115, "dpnp-flatiter"]], "dpnp.flip": [[116, "dpnp-flip"]], "dpnp.fliplr": [[117, "dpnp-fliplr"]], "dpnp.flipud": [[118, "dpnp-flipud"]], "dpnp.floor": [[119, "dpnp-floor"]], "dpnp.floor_divide": [[120, "dpnp-floor-divide"]], "dpnp.fmax": [[121, "dpnp-fmax"]], "dpnp.fmin": [[122, "dpnp-fmin"]], "dpnp.fmod": [[123, "dpnp-fmod"]], "dpnp.from_dlpack": [[124, "dpnp-from-dlpack"]], "dpnp.frombuffer": [[125, "dpnp-frombuffer"]], "dpnp.fromfile": [[126, "dpnp-fromfile"]], "dpnp.fromfunction": [[127, "dpnp-fromfunction"]], "dpnp.fromiter": [[128, "dpnp-fromiter"]], "dpnp.fromstring": [[129, "dpnp-fromstring"]], "dpnp.full": [[130, "dpnp-full"]], "dpnp.full_like": [[131, "dpnp-full-like"]], "dpnp.geomspace": [[132, "dpnp-geomspace"]], "dpnp.get_include": [[133, "dpnp-get-include"]], "dpnp.gradient": [[134, "dpnp-gradient"]], "dpnp.greater": [[135, "dpnp-greater"]], "dpnp.greater_equal": [[136, "dpnp-greater-equal"]], "dpnp.histogram": [[137, "dpnp-histogram"]], "dpnp.hstack": [[138, "dpnp-hstack"]], "dpnp.hypot": [[139, "dpnp-hypot"]], "dpnp.identity": [[140, "dpnp-identity"]], "dpnp.iinfo": [[141, "dpnp-iinfo"]], "dpnp.imag": [[142, "dpnp-imag"]], "dpnp.indices": [[143, "dpnp-indices"]], "dpnp.inner": [[144, "dpnp-inner"]], "dpnp.invert": [[145, "dpnp-invert"]], "dpnp.isclose": [[146, "dpnp-isclose"]], "dpnp.isfinite": [[147, "dpnp-isfinite"]], "dpnp.isinf": [[148, "dpnp-isinf"]], "dpnp.isnan": [[149, "dpnp-isnan"]], "dpnp.isscalar": [[150, "dpnp-isscalar"]], "dpnp.issubdtype": [[151, "dpnp-issubdtype"]], "dpnp.issubsctype": [[152, "dpnp-issubsctype"]], "dpnp.kron": [[153, "dpnp-kron"]], "dpnp.left_shift": [[154, "dpnp-left-shift"]], "dpnp.less": [[155, "dpnp-less"]], "dpnp.less_equal": [[156, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[157, "dpnp-linalg-cholesky"]], "dpnp.linalg.cond": [[158, "dpnp-linalg-cond"]], "dpnp.linalg.det": [[159, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[160, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[161, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[162, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[163, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[164, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[165, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[166, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[167, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[168, "dpnp-linalg-qr"]], "dpnp.linalg.slogdet": [[169, "dpnp-linalg-slogdet"]], "dpnp.linalg.solve": [[170, "dpnp-linalg-solve"]], "dpnp.linalg.svd": [[171, "dpnp-linalg-svd"]], "dpnp.linspace": [[172, "dpnp-linspace"]], "dpnp.loadtxt": [[173, "dpnp-loadtxt"]], "dpnp.log": [[174, "dpnp-log"]], "dpnp.log10": [[175, "dpnp-log10"]], "dpnp.log1p": [[176, "dpnp-log1p"]], "dpnp.log2": [[177, "dpnp-log2"]], "dpnp.logaddexp": [[178, "dpnp-logaddexp"]], "dpnp.logical_and": [[179, "dpnp-logical-and"]], "dpnp.logical_not": [[180, "dpnp-logical-not"]], "dpnp.logical_or": [[181, "dpnp-logical-or"]], "dpnp.logical_xor": [[182, "dpnp-logical-xor"]], "dpnp.logspace": [[183, "dpnp-logspace"]], "dpnp.matmul": [[184, "dpnp-matmul"]], "dpnp.max": [[185, "dpnp-max"]], "dpnp.maximum": [[186, "dpnp-maximum"]], "dpnp.mean": [[187, "dpnp-mean"]], "dpnp.median": [[188, "dpnp-median"]], "dpnp.meshgrid": [[189, "dpnp-meshgrid"]], "dpnp.mgrid": [[190, "dpnp-mgrid"]], "dpnp.min": [[191, "dpnp-min"]], "dpnp.minimum": [[192, "dpnp-minimum"]], "dpnp.mod": [[193, "dpnp-mod"]], "dpnp.modf": [[194, "dpnp-modf"]], "dpnp.moveaxis": [[195, "dpnp-moveaxis"]], "dpnp.multiply": [[196, "dpnp-multiply"]], "dpnp.nancumprod": [[197, "dpnp-nancumprod"]], "dpnp.nancumsum": [[198, "dpnp-nancumsum"]], "dpnp.nanprod": [[199, "dpnp-nanprod"]], "dpnp.nansum": [[200, "dpnp-nansum"]], "dpnp.nanvar": [[201, "dpnp-nanvar"]], "dpnp.ndarray": [[202, "dpnp-ndarray"]], "dpnp.ndarray.T": [[203, "dpnp-ndarray-t"]], "dpnp.ndarray.__abs__": [[204, "dpnp-ndarray-abs"]], "dpnp.ndarray.__add__": [[205, "dpnp-ndarray-add"]], "dpnp.ndarray.__and__": [[206, "dpnp-ndarray-and"]], "dpnp.ndarray.__complex__": [[207, "dpnp-ndarray-complex"]], "dpnp.ndarray.__copy__": [[208, "dpnp-ndarray-copy"]], "dpnp.ndarray.__eq__": [[209, "dpnp-ndarray-eq"]], "dpnp.ndarray.__float__": [[210, "dpnp-ndarray-float"]], "dpnp.ndarray.__floordiv__": [[211, "dpnp-ndarray-floordiv"]], "dpnp.ndarray.__ge__": [[212, "dpnp-ndarray-ge"]], "dpnp.ndarray.__getitem__": [[213, "dpnp-ndarray-getitem"]], "dpnp.ndarray.__gt__": [[214, "dpnp-ndarray-gt"]], "dpnp.ndarray.__iadd__": [[215, "dpnp-ndarray-iadd"]], "dpnp.ndarray.__iand__": [[216, "dpnp-ndarray-iand"]], "dpnp.ndarray.__ifloordiv__": [[217, "dpnp-ndarray-ifloordiv"]], "dpnp.ndarray.__ilshift__": [[218, "dpnp-ndarray-ilshift"]], "dpnp.ndarray.__imod__": [[219, "dpnp-ndarray-imod"]], "dpnp.ndarray.__imul__": [[220, "dpnp-ndarray-imul"]], "dpnp.ndarray.__int__": [[221, "dpnp-ndarray-int"]], "dpnp.ndarray.__invert__": [[222, "dpnp-ndarray-invert"]], "dpnp.ndarray.__ior__": [[223, "dpnp-ndarray-ior"]], "dpnp.ndarray.__ipow__": [[224, "dpnp-ndarray-ipow"]], "dpnp.ndarray.__irshift__": [[225, "dpnp-ndarray-irshift"]], "dpnp.ndarray.__isub__": [[226, "dpnp-ndarray-isub"]], "dpnp.ndarray.__itruediv__": [[227, "dpnp-ndarray-itruediv"]], "dpnp.ndarray.__ixor__": [[228, "dpnp-ndarray-ixor"]], "dpnp.ndarray.__le__": [[229, "dpnp-ndarray-le"]], "dpnp.ndarray.__len__": [[230, "dpnp-ndarray-len"]], "dpnp.ndarray.__lshift__": [[231, "dpnp-ndarray-lshift"]], "dpnp.ndarray.__lt__": [[232, "dpnp-ndarray-lt"]], "dpnp.ndarray.__mod__": [[233, "dpnp-ndarray-mod"]], "dpnp.ndarray.__mul__": [[234, "dpnp-ndarray-mul"]], "dpnp.ndarray.__ne__": [[235, "dpnp-ndarray-ne"]], "dpnp.ndarray.__neg__": [[236, "dpnp-ndarray-neg"]], "dpnp.ndarray.__new__": [[237, "dpnp-ndarray-new"]], "dpnp.ndarray.__or__": [[238, "dpnp-ndarray-or"]], "dpnp.ndarray.__pos__": [[239, "dpnp-ndarray-pos"]], "dpnp.ndarray.__pow__": [[240, "dpnp-ndarray-pow"]], "dpnp.ndarray.__repr__": [[241, "dpnp-ndarray-repr"]], "dpnp.ndarray.__rshift__": [[242, "dpnp-ndarray-rshift"]], "dpnp.ndarray.__setitem__": [[243, "dpnp-ndarray-setitem"]], "dpnp.ndarray.__str__": [[244, "dpnp-ndarray-str"]], "dpnp.ndarray.__sub__": [[245, "dpnp-ndarray-sub"]], "dpnp.ndarray.__truediv__": [[246, "dpnp-ndarray-truediv"]], "dpnp.ndarray.__xor__": [[247, "dpnp-ndarray-xor"]], "dpnp.ndarray.all": [[248, "dpnp-ndarray-all"]], "dpnp.ndarray.any": [[249, "dpnp-ndarray-any"]], "dpnp.ndarray.argmax": [[250, "dpnp-ndarray-argmax"]], "dpnp.ndarray.argmin": [[251, "dpnp-ndarray-argmin"]], "dpnp.ndarray.argsort": [[252, "dpnp-ndarray-argsort"]], "dpnp.ndarray.astype": [[253, "dpnp-ndarray-astype"]], "dpnp.ndarray.choose": [[254, "dpnp-ndarray-choose"]], "dpnp.ndarray.conj": [[255, "dpnp-ndarray-conj"]], "dpnp.ndarray.conjugate": [[256, "dpnp-ndarray-conjugate"]], "dpnp.ndarray.copy": [[257, "dpnp-ndarray-copy"]], "dpnp.ndarray.cumsum": [[258, "dpnp-ndarray-cumsum"]], "dpnp.ndarray.diagonal": [[259, "dpnp-ndarray-diagonal"]], "dpnp.ndarray.dtype": [[260, "dpnp-ndarray-dtype"]], "dpnp.ndarray.fill": [[261, "dpnp-ndarray-fill"]], "dpnp.ndarray.flags": [[262, "dpnp-ndarray-flags"]], "dpnp.ndarray.flat": [[263, "dpnp-ndarray-flat"]], "dpnp.ndarray.flatten": [[264, "dpnp-ndarray-flatten"]], "dpnp.ndarray.imag": [[265, "dpnp-ndarray-imag"]], "dpnp.ndarray.item": [[266, "dpnp-ndarray-item"]], "dpnp.ndarray.itemsize": [[267, "dpnp-ndarray-itemsize"]], "dpnp.ndarray.max": [[268, "dpnp-ndarray-max"]], "dpnp.ndarray.mean": [[269, "dpnp-ndarray-mean"]], "dpnp.ndarray.min": [[270, "dpnp-ndarray-min"]], "dpnp.ndarray.nbytes": [[271, "dpnp-ndarray-nbytes"]], "dpnp.ndarray.ndim": [[272, "dpnp-ndarray-ndim"]], "dpnp.ndarray.nonzero": [[273, "dpnp-ndarray-nonzero"]], "dpnp.ndarray.partition": [[274, "dpnp-ndarray-partition"]], "dpnp.ndarray.prod": [[275, "dpnp-ndarray-prod"]], "dpnp.ndarray.put": [[276, "dpnp-ndarray-put"]], "dpnp.ndarray.ravel": [[277, "dpnp-ndarray-ravel"]], "dpnp.ndarray.real": [[278, "dpnp-ndarray-real"]], "dpnp.ndarray.repeat": [[279, "dpnp-ndarray-repeat"]], "dpnp.ndarray.reshape": [[280, "dpnp-ndarray-reshape"]], "dpnp.ndarray.round": [[281, "dpnp-ndarray-round"]], "dpnp.ndarray.shape": [[282, "dpnp-ndarray-shape"]], "dpnp.ndarray.size": [[283, "dpnp-ndarray-size"]], "dpnp.ndarray.squeeze": [[284, "dpnp-ndarray-squeeze"]], "dpnp.ndarray.std": [[285, "dpnp-ndarray-std"]], "dpnp.ndarray.strides": [[286, "dpnp-ndarray-strides"]], "dpnp.ndarray.sum": [[287, "dpnp-ndarray-sum"]], "dpnp.ndarray.swapaxes": [[288, "dpnp-ndarray-swapaxes"]], "dpnp.ndarray.take": [[289, "dpnp-ndarray-take"]], "dpnp.ndarray.transpose": [[290, "dpnp-ndarray-transpose"]], "dpnp.ndarray.var": [[291, "dpnp-ndarray-var"]], "dpnp.negative": [[292, "dpnp-negative"]], "dpnp.nonzero": [[293, "dpnp-nonzero"]], "dpnp.not_equal": [[294, "dpnp-not-equal"]], "dpnp.ogrid": [[295, "dpnp-ogrid"]], "dpnp.ones": [[296, "dpnp-ones"]], "dpnp.ones_like": [[297, "dpnp-ones-like"]], "dpnp.outer": [[298, "dpnp-outer"]], "dpnp.partition": [[299, "dpnp-partition"]], "dpnp.place": [[300, "dpnp-place"]], "dpnp.positive": [[301, "dpnp-positive"]], "dpnp.power": [[302, "dpnp-power"]], "dpnp.prod": [[303, "dpnp-prod"]], "dpnp.proj": [[304, "dpnp-proj"]], "dpnp.ptp": [[305, "dpnp-ptp"]], "dpnp.put": [[306, "dpnp-put"]], "dpnp.put_along_axis": [[307, "dpnp-put-along-axis"]], "dpnp.putmask": [[308, "dpnp-putmask"]], "dpnp.rad2deg": [[309, "dpnp-rad2deg"]], "dpnp.radians": [[310, "dpnp-radians"]], "dpnp.random.RandomState": [[311, "dpnp-random-randomstate"]], "dpnp.random.beta": [[312, "dpnp-random-beta"]], "dpnp.random.binomial": [[313, "dpnp-random-binomial"]], "dpnp.random.bytes": [[314, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[315, "dpnp-random-chisquare"]], "dpnp.random.choice": [[316, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[317, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[318, "dpnp-random-exponential"]], "dpnp.random.f": [[319, "dpnp-random-f"]], "dpnp.random.gamma": [[320, "dpnp-random-gamma"]], "dpnp.random.geometric": [[321, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[322, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[323, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[324, "dpnp-random-laplace"]], "dpnp.random.logistic": [[325, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[326, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[327, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[328, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[329, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[330, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[331, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[332, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[333, "dpnp-random-normal"]], "dpnp.random.pareto": [[334, "dpnp-random-pareto"]], "dpnp.random.permutation": [[335, "dpnp-random-permutation"]], "dpnp.random.poisson": [[336, "dpnp-random-poisson"]], "dpnp.random.power": [[337, "dpnp-random-power"]], "dpnp.random.rand": [[338, "dpnp-random-rand"]], "dpnp.random.randint": [[339, "dpnp-random-randint"]], "dpnp.random.randn": [[340, "dpnp-random-randn"]], "dpnp.random.random": [[341, "dpnp-random-random"]], "dpnp.random.random_integers": [[342, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[343, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[344, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[345, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[346, "dpnp-random-sample"]], "dpnp.random.seed": [[347, "dpnp-random-seed"]], "dpnp.random.shuffle": [[348, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[349, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[350, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[351, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[352, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[353, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[354, "dpnp-random-triangular"]], "dpnp.random.uniform": [[355, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[356, "dpnp-random-vonmises"]], "dpnp.random.wald": [[357, "dpnp-random-wald"]], "dpnp.random.weibull": [[358, "dpnp-random-weibull"]], "dpnp.random.zipf": [[359, "dpnp-random-zipf"]], "dpnp.ravel": [[360, "dpnp-ravel"]], "dpnp.real": [[361, "dpnp-real"]], "dpnp.reciprocal": [[362, "dpnp-reciprocal"]], "dpnp.remainder": [[363, "dpnp-remainder"]], "dpnp.repeat": [[364, "dpnp-repeat"]], "dpnp.reshape": [[365, "dpnp-reshape"]], "dpnp.result_type": [[366, "dpnp-result-type"]], "dpnp.right_shift": [[367, "dpnp-right-shift"]], "dpnp.rint": [[368, "dpnp-rint"]], "dpnp.roll": [[369, "dpnp-roll"]], "dpnp.rollaxis": [[370, "dpnp-rollaxis"]], "dpnp.round": [[371, "dpnp-round"]], "dpnp.searchsorted": [[372, "dpnp-searchsorted"]], "dpnp.select": [[373, "dpnp-select"]], "dpnp.shape": [[374, "dpnp-shape"]], "dpnp.sign": [[375, "dpnp-sign"]], "dpnp.signbit": [[376, "dpnp-signbit"]], "dpnp.sin": [[377, "dpnp-sin"]], "dpnp.sinh": [[378, "dpnp-sinh"]], "dpnp.sort": [[379, "dpnp-sort"]], "dpnp.sqrt": [[380, "dpnp-sqrt"]], "dpnp.square": [[381, "dpnp-square"]], "dpnp.squeeze": [[382, "dpnp-squeeze"]], "dpnp.stack": [[383, "dpnp-stack"]], "dpnp.std": [[384, "dpnp-std"]], "dpnp.subtract": [[385, "dpnp-subtract"]], "dpnp.sum": [[386, "dpnp-sum"]], "dpnp.swapaxes": [[387, "dpnp-swapaxes"]], "dpnp.take": [[388, "dpnp-take"]], "dpnp.take_along_axis": [[389, "dpnp-take-along-axis"]], "dpnp.tan": [[390, "dpnp-tan"]], "dpnp.tanh": [[391, "dpnp-tanh"]], "dpnp.tensordot": [[392, "dpnp-tensordot"]], "dpnp.tile": [[393, "dpnp-tile"]], "dpnp.trace": [[394, "dpnp-trace"]], "dpnp.transpose": [[395, "dpnp-transpose"]], "dpnp.trapz": [[396, "dpnp-trapz"]], "dpnp.tri": [[397, "dpnp-tri"]], "dpnp.tril": [[398, "dpnp-tril"]], "dpnp.tril_indices": [[399, "dpnp-tril-indices"]], "dpnp.tril_indices_from": [[400, "dpnp-tril-indices-from"]], "dpnp.triu": [[401, "dpnp-triu"]], "dpnp.triu_indices": [[402, "dpnp-triu-indices"]], "dpnp.triu_indices_from": [[403, "dpnp-triu-indices-from"]], "dpnp.true_divide": [[404, "dpnp-true-divide"]], "dpnp.trunc": [[405, "dpnp-trunc"]], "dpnp.unique": [[406, "dpnp-unique"]], "dpnp.unwrap": [[407, "dpnp-unwrap"]], "dpnp.vander": [[408, "dpnp-vander"]], "dpnp.var": [[409, "dpnp-var"]], "dpnp.vdot": [[410, "dpnp-vdot"]], "dpnp.vstack": [[411, "dpnp-vstack"]], "dpnp.where": [[412, "dpnp-where"]], "dpnp.zeros": [[413, "dpnp-zeros"]], "dpnp.zeros_like": [[414, "dpnp-zeros-like"]], "API Reference": [[415, "api-reference"]], "Array Indexing Routines": [[416, "array-indexing-routines"]], "Generating index arrays": [[416, "generating-index-arrays"]], "Indexing-like operations": [[416, "indexing-like-operations"]], "Inserting data into arrays": [[416, "inserting-data-into-arrays"]], "Iterating over arrays": [[416, "iterating-over-arrays"]], "Matrix and vector products": [[417, "matrix-and-vector-products"]], "Decompositions": [[417, "decompositions"]], "Matrix eigenvalues": [[417, "matrix-eigenvalues"]], "Norms and other numbers": [[417, "norms-and-other-numbers"]], "Solving linear equations": [[417, "solving-linear-equations"]], "Logic Functions": [[418, "logic-functions"]], "Truth value testing": [[418, "truth-value-testing"]], "Infinities and NaNs": [[418, "infinities-and-nans"]], "Array type testing": [[418, "array-type-testing"]], "Logic operations": [[418, "logic-operations"]], "Comparison": [[418, "comparison"]], "Array Manipulation Routines": [[419, "array-manipulation-routines"]], "Basic operations": [[419, "basic-operations"]], "Changing array shape": [[419, "changing-array-shape"]], "Transpose-like operations": [[419, "transpose-like-operations"]], "Changing number of dimensions": [[419, "changing-number-of-dimensions"]], "Changing kind of array": [[419, "changing-kind-of-array"]], "Joining arrays": [[419, "joining-arrays"]], "Splitting arrays": [[419, "splitting-arrays"]], "Tiling arrays": [[419, "tiling-arrays"]], "Adding and removing elements": [[419, "adding-and-removing-elements"]], "Rearranging elements": [[419, "rearranging-elements"]], "Mathematical Functions": [[420, "mathematical-functions"]], "Trigonometric functions": [[420, "trigonometric-functions"], [430, "trigonometric-functions"]], "Hyperbolic functions": [[420, "hyperbolic-functions"]], "Rounding": [[420, "rounding"]], "Sums, products, differences": [[420, "sums-products-differences"]], "Exponents and logarithms": [[420, "exponents-and-logarithms"]], "Other special functions": [[420, "other-special-functions"]], "Floating point routines": [[420, "floating-point-routines"]], "Rational routines": [[420, "rational-routines"]], "Arithmetic operations": [[420, "arithmetic-operations"]], "Handling complex numbers": [[420, "handling-complex-numbers"]], "Extrema Finding": [[420, "extrema-finding"]], "Miscellaneous routines": [[421, "miscellaneous-routines"]], "Utility": [[421, "utility"]], "Multi-Dimensional Array (ndarray)": [[422, "multi-dimensional-array-ndarray"]], "Constructing arrays": [[422, "constructing-arrays"]], "Indexing arrays": [[422, "indexing-arrays"]], "Array attributes": [[422, "array-attributes"]], "Memory layout": [[422, "memory-layout"]], "Data type": [[422, "data-type"]], "Other attributes": [[422, "other-attributes"]], "Array methods": [[422, "array-methods"]], "Array conversion": [[422, "array-conversion"]], "Shape manipulation": [[422, "shape-manipulation"]], "Item selection and manipulation": [[422, "item-selection-and-manipulation"]], "Calculation": [[422, "calculation"]], "Arithmetic, matrix multiplication, and comparison operations": [[422, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Special methods": [[422, "special-methods"]], "Padding": [[423, "padding"]], "Polynomials": [[424, "polynomials"]], "Polynomial Package": [[424, "polynomial-package"]], "Polynomial Module": [[424, "polynomial-module"]], "Polyutils": [[424, "polyutils"]], "Poly1d": [[424, "poly1d"]], "Basics": [[424, "basics"]], "Arithmetic": [[424, "arithmetic"]], "Random Sampling (dpnp.random)": [[425, "random-sampling-dpnp-random"]], "Simple random data": [[425, "simple-random-data"]], "Permutations": [[425, "permutations"]], "Distributions": [[425, "distributions"]], "Random generator": [[425, "random-generator"]], "Routines": [[426, "routines"]], "Sorting, Searching, and Counting": [[427, "sorting-searching-and-counting"]], "Sorting": [[427, "sorting"]], "Searching": [[427, "searching"]], "Counting": [[427, "counting"]], "Special Functions": [[428, "special-functions"]], "Error Function": [[428, "error-function"]], "Statistical Functions": [[429, "statistical-functions"]], "Order statistics": [[429, "order-statistics"]], "Averages and variances": [[429, "averages-and-variances"]], "Histograms": [[429, "histograms"]], "Correlations": [[429, "correlations"]], "Universal Functions (ufunc)": [[430, "universal-functions-ufunc"]], "Available ufuncs": [[430, "available-ufuncs"]], "Math operations": [[430, "math-operations"]], "Bit-twiddling functions": [[430, "bit-twiddling-functions"]], "Comparison functions": [[430, "comparison-functions"]], "Floating functions": [[430, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"], [3, "module-dpnp"]], "module": [[2, "module-dpnp"], [3, "module-dpnp"], [10, "module-dpnp.fft"], [425, "module-dpnp.random"]], "dpnp.fft": [[10, "module-dpnp.fft"]], "abs() (in module dpnp)": [[11, "dpnp.abs"]], "absolute() (in module dpnp)": [[12, "dpnp.absolute"]], "add() (in module dpnp)": [[13, "dpnp.add"]], "all() (in module dpnp)": [[14, "dpnp.all"]], "allclose() (in module dpnp)": [[15, "dpnp.allclose"]], "amax() (in module dpnp)": [[16, "dpnp.amax"]], "amin() (in module dpnp)": [[17, "dpnp.amin"]], "any() (in module dpnp)": [[18, "dpnp.any"]], "arange() (in module dpnp)": [[19, "dpnp.arange"]], "arccos() (in module dpnp)": [[20, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[21, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[22, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[23, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[24, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[25, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[26, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[27, "dpnp.argmax"]], "argmin() (in module dpnp)": [[28, "dpnp.argmin"]], "argsort() (in module dpnp)": [[29, "dpnp.argsort"]], "around() (in module dpnp)": [[30, "dpnp.around"]], "array() (in module dpnp)": [[31, "dpnp.array"]], "array_equal() (in module dpnp)": [[32, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[33, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[34, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[35, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[36, "dpnp.asfarray"]], "asfortranarray() (in module dpnp)": [[37, "dpnp.asfortranarray"]], "asnumpy() (in module dpnp)": [[38, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[39, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[40, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[41, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[42, "dpnp.average"]], "bincount() (in module dpnp)": [[43, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[44, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[45, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[46, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[47, "dpnp.bitwise_xor"]], "broadcast_arrays() (in module dpnp)": [[48, "dpnp.broadcast_arrays"]], "broadcast_to() (in module dpnp)": [[49, "dpnp.broadcast_to"]], "can_cast() (in module dpnp)": [[50, "dpnp.can_cast"]], "cbrt() (in module dpnp)": [[51, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[52, "dpnp.ceil"]], "choose() (in module dpnp)": [[53, "dpnp.choose"]], "concatenate() (in module dpnp)": [[54, "dpnp.concatenate"]], "conj() (in module dpnp)": [[55, "dpnp.conj"]], "conjugate() (in module dpnp)": [[56, "dpnp.conjugate"]], "convolve() (in module dpnp)": [[57, "dpnp.convolve"]], "copy() (in module dpnp)": [[58, "dpnp.copy"]], "copysign() (in module dpnp)": [[59, "dpnp.copysign"]], "copyto() (in module dpnp)": [[60, "dpnp.copyto"]], "correlate() (in module dpnp)": [[61, "dpnp.correlate"]], "cos() (in module dpnp)": [[62, "dpnp.cos"]], "cosh() (in module dpnp)": [[63, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[64, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[65, "dpnp.cov"]], "cross() (in module dpnp)": [[66, "dpnp.cross"]], "cumprod() (in module dpnp)": [[67, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[68, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[69, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[70, "dpnp.degrees"]], "diag() (in module dpnp)": [[71, "dpnp.diag"]], "diag_indices() (in module dpnp)": [[72, "dpnp.diag_indices"]], "diag_indices_from() (in module dpnp)": [[73, "dpnp.diag_indices_from"]], "diagflat() (in module dpnp)": [[74, "dpnp.diagflat"]], "diagonal() (in module dpnp)": [[75, "dpnp.diagonal"]], "diff() (in module dpnp)": [[76, "dpnp.diff"]], "divide() (in module dpnp)": [[77, "dpnp.divide"]], "dot() (in module dpnp)": [[78, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.conjugate"]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.copy"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[79, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.get_array"]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.imag"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.prod"]], "put() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.put"]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.ravel"]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.real"]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.repeat"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.sum"]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.swapaxes"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[79, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[79, "dpnp.dpnp_array.dpnp_array.var"]], "__eq__() (dpnp.dtype method)": [[80, "dpnp.dtype.__eq__"]], "__ge__() (dpnp.dtype method)": [[80, "dpnp.dtype.__ge__"]], "__getitem__() (dpnp.dtype method)": [[80, "dpnp.dtype.__getitem__"]], "__gt__() (dpnp.dtype method)": [[80, "dpnp.dtype.__gt__"]], "__le__() (dpnp.dtype method)": [[80, "dpnp.dtype.__le__"]], "__len__() (dpnp.dtype method)": [[80, "dpnp.dtype.__len__"]], "__lt__() (dpnp.dtype method)": [[80, "dpnp.dtype.__lt__"]], "__ne__() (dpnp.dtype method)": [[80, "dpnp.dtype.__ne__"]], "alignment (dpnp.dtype attribute)": [[80, "dpnp.dtype.alignment"]], "base (dpnp.dtype attribute)": [[80, "dpnp.dtype.base"]], "byteorder (dpnp.dtype attribute)": [[80, "dpnp.dtype.byteorder"]], "char (dpnp.dtype attribute)": [[80, "dpnp.dtype.char"]], "descr (dpnp.dtype attribute)": [[80, "dpnp.dtype.descr"]], "dtype (class in dpnp)": [[80, "dpnp.dtype"]], "fields (dpnp.dtype attribute)": [[80, "dpnp.dtype.fields"]], "flags (dpnp.dtype attribute)": [[80, "dpnp.dtype.flags"]], "hasobject (dpnp.dtype attribute)": [[80, "dpnp.dtype.hasobject"]], "isalignedstruct (dpnp.dtype attribute)": [[80, "dpnp.dtype.isalignedstruct"]], "isbuiltin (dpnp.dtype attribute)": [[80, "dpnp.dtype.isbuiltin"]], "isnative (dpnp.dtype attribute)": [[80, "dpnp.dtype.isnative"]], "itemsize (dpnp.dtype attribute)": [[80, "dpnp.dtype.itemsize"]], "kind (dpnp.dtype attribute)": [[80, "dpnp.dtype.kind"]], "metadata (dpnp.dtype attribute)": [[80, "dpnp.dtype.metadata"]], "name (dpnp.dtype attribute)": [[80, "dpnp.dtype.name"]], "names (dpnp.dtype attribute)": [[80, "dpnp.dtype.names"]], "ndim (dpnp.dtype attribute)": [[80, "dpnp.dtype.ndim"]], "newbyteorder() (dpnp.dtype method)": [[80, "dpnp.dtype.newbyteorder"]], "num (dpnp.dtype attribute)": [[80, "dpnp.dtype.num"]], "shape (dpnp.dtype attribute)": [[80, "dpnp.dtype.shape"]], "str (dpnp.dtype attribute)": [[80, "dpnp.dtype.str"]], "subdtype (dpnp.dtype attribute)": [[80, "dpnp.dtype.subdtype"]], "type (dpnp.dtype attribute)": [[80, "dpnp.dtype.type"]], "ediff1d() (in module dpnp)": [[81, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[82, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[83, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[84, "dpnp.empty"]], "empty_like() (in module dpnp)": [[85, "dpnp.empty_like"]], "equal() (in module dpnp)": [[86, "dpnp.equal"]], "erf() (in module dpnp)": [[87, "dpnp.erf"]], "exp() (in module dpnp)": [[88, "dpnp.exp"]], "exp2() (in module dpnp)": [[89, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[90, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[91, "dpnp.expm1"]], "extract() (in module dpnp)": [[92, "dpnp.extract"]], "eye() (in module dpnp)": [[93, "dpnp.eye"]], "fabs() (in module dpnp)": [[94, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[95, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[96, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[97, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[98, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[99, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[100, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[101, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[102, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[103, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[104, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[105, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[106, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[107, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[108, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[109, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[110, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[111, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[112, "dpnp.fft.rfftn"]], "fill_diagonal() (in module dpnp)": [[113, "dpnp.fill_diagonal"]], "finfo() (in module dpnp)": [[114, "dpnp.finfo"]], "__eq__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__eq__"]], "__ge__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__ge__"]], "__getitem__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__getitem__"]], "__gt__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__gt__"]], "__iter__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__iter__"]], "__le__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__le__"]], "__lt__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__lt__"]], "__ne__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__ne__"]], "__next__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__next__"]], "__setitem__() (dpnp.flatiter method)": [[115, "dpnp.flatiter.__setitem__"]], "flatiter (class in dpnp)": [[115, "dpnp.flatiter"]], "flip() (in module dpnp)": [[116, "dpnp.flip"]], "fliplr() (in module dpnp)": [[117, "dpnp.fliplr"]], "flipud() (in module dpnp)": [[118, "dpnp.flipud"]], "floor() (in module dpnp)": [[119, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[120, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[121, "dpnp.fmax"]], "fmin() (in module dpnp)": [[122, "dpnp.fmin"]], "fmod() (in module dpnp)": [[123, "dpnp.fmod"]], "from_dlpack() (in module dpnp)": [[124, "dpnp.from_dlpack"]], "frombuffer() (in module dpnp)": [[125, "dpnp.frombuffer"]], "fromfile() (in module dpnp)": [[126, "dpnp.fromfile"]], "fromfunction() (in module dpnp)": [[127, "dpnp.fromfunction"]], "fromiter() (in module dpnp)": [[128, "dpnp.fromiter"]], "fromstring() (in module dpnp)": [[129, "dpnp.fromstring"]], "full() (in module dpnp)": [[130, "dpnp.full"]], "full_like() (in module dpnp)": [[131, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[132, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[133, "dpnp.get_include"]], "gradient() (in module dpnp)": [[134, "dpnp.gradient"]], "greater() (in module dpnp)": [[135, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[136, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[137, "dpnp.histogram"]], "hstack() (in module dpnp)": [[138, "dpnp.hstack"]], "hypot() (in module dpnp)": [[139, "dpnp.hypot"]], "identity() (in module dpnp)": [[140, "dpnp.identity"]], "iinfo() (in module dpnp)": [[141, "dpnp.iinfo"]], "imag() (in module dpnp)": [[142, "dpnp.imag"]], "indices() (in module dpnp)": [[143, "dpnp.indices"]], "inner() (in module dpnp)": [[144, "dpnp.inner"]], "invert() (in module dpnp)": [[145, "dpnp.invert"]], "isclose() (in module dpnp)": [[146, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[147, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[148, "dpnp.isinf"]], "isnan() (in module dpnp)": [[149, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[150, "dpnp.isscalar"]], "issubdtype() (in module dpnp)": [[151, "dpnp.issubdtype"]], "issubsctype() (in module dpnp)": [[152, "dpnp.issubsctype"]], "kron() (in module dpnp)": [[153, "dpnp.kron"]], "left_shift() (in module dpnp)": [[154, "dpnp.left_shift"]], "less() (in module dpnp)": [[155, "dpnp.less"]], "less_equal() (in module dpnp)": [[156, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[157, "dpnp.linalg.cholesky"]], "cond() (in module dpnp.linalg)": [[158, "dpnp.linalg.cond"]], "det() (in module dpnp.linalg)": [[159, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[160, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[161, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[162, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[163, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[164, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[165, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[166, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[167, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[168, "dpnp.linalg.qr"]], "slogdet() (in module dpnp.linalg)": [[169, "dpnp.linalg.slogdet"]], "solve() (in module dpnp.linalg)": [[170, "dpnp.linalg.solve"]], "svd() (in module dpnp.linalg)": [[171, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[172, "dpnp.linspace"]], "loadtxt() (in module dpnp)": [[173, "dpnp.loadtxt"]], "log() (in module dpnp)": [[174, "dpnp.log"]], "log10() (in module dpnp)": [[175, "dpnp.log10"]], "log1p() (in module dpnp)": [[176, "dpnp.log1p"]], "log2() (in module dpnp)": [[177, "dpnp.log2"]], "logaddexp() (in module dpnp)": [[178, "dpnp.logaddexp"]], "logical_and() (in module dpnp)": [[179, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[180, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[181, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[182, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[183, "dpnp.logspace"]], "matmul() (in module dpnp)": [[184, "dpnp.matmul"]], "max() (in module dpnp)": [[185, "dpnp.max"]], "maximum() (in module dpnp)": [[186, "dpnp.maximum"]], "mean() (in module dpnp)": [[187, "dpnp.mean"]], "median() (in module dpnp)": [[188, "dpnp.median"]], "meshgrid() (in module dpnp)": [[189, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[190, "dpnp.mgrid"]], "min() (in module dpnp)": [[191, "dpnp.min"]], "minimum() (in module dpnp)": [[192, "dpnp.minimum"]], "mod() (in module dpnp)": [[193, "dpnp.mod"]], "modf() (in module dpnp)": [[194, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[195, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[196, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[197, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[198, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[199, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[200, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[201, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[202, "dpnp.ndarray"]], "t (dpnp.ndarray property)": [[203, "dpnp.ndarray.T"]], "__abs__() (dpnp.ndarray method)": [[204, "dpnp.ndarray.__abs__"]], "__add__() (dpnp.ndarray method)": [[205, "dpnp.ndarray.__add__"]], "__and__() (dpnp.ndarray method)": [[206, "dpnp.ndarray.__and__"]], "__complex__() (dpnp.ndarray method)": [[207, "dpnp.ndarray.__complex__"]], "__copy__() (dpnp.ndarray method)": [[208, "dpnp.ndarray.__copy__"]], "__eq__() (dpnp.ndarray method)": [[209, "dpnp.ndarray.__eq__"]], "__float__() (dpnp.ndarray method)": [[210, "dpnp.ndarray.__float__"]], "__floordiv__() (dpnp.ndarray method)": [[211, "dpnp.ndarray.__floordiv__"]], "__ge__() (dpnp.ndarray method)": [[212, "dpnp.ndarray.__ge__"]], "__getitem__() (dpnp.ndarray method)": [[213, "dpnp.ndarray.__getitem__"]], "__gt__() (dpnp.ndarray method)": [[214, "dpnp.ndarray.__gt__"]], "__iadd__() (dpnp.ndarray method)": [[215, "dpnp.ndarray.__iadd__"]], "__iand__() (dpnp.ndarray method)": [[216, "dpnp.ndarray.__iand__"]], "__ifloordiv__() (dpnp.ndarray method)": [[217, "dpnp.ndarray.__ifloordiv__"]], "__ilshift__() (dpnp.ndarray method)": [[218, "dpnp.ndarray.__ilshift__"]], "__imod__() (dpnp.ndarray method)": [[219, "dpnp.ndarray.__imod__"]], "__imul__() (dpnp.ndarray method)": [[220, "dpnp.ndarray.__imul__"]], "__int__() (dpnp.ndarray method)": [[221, "dpnp.ndarray.__int__"]], "__invert__() (dpnp.ndarray method)": [[222, "dpnp.ndarray.__invert__"]], "__ior__() (dpnp.ndarray method)": [[223, "dpnp.ndarray.__ior__"]], "__ipow__() (dpnp.ndarray method)": [[224, "dpnp.ndarray.__ipow__"]], "__irshift__() (dpnp.ndarray method)": [[225, "dpnp.ndarray.__irshift__"]], "__isub__() (dpnp.ndarray method)": [[226, "dpnp.ndarray.__isub__"]], "__itruediv__() (dpnp.ndarray method)": [[227, "dpnp.ndarray.__itruediv__"]], "__ixor__() (dpnp.ndarray method)": [[228, "dpnp.ndarray.__ixor__"]], "__le__() (dpnp.ndarray method)": [[229, "dpnp.ndarray.__le__"]], "__len__() (dpnp.ndarray method)": [[230, "dpnp.ndarray.__len__"]], "__lshift__() (dpnp.ndarray method)": [[231, "dpnp.ndarray.__lshift__"]], "__lt__() (dpnp.ndarray method)": [[232, "dpnp.ndarray.__lt__"]], "__mod__() (dpnp.ndarray method)": [[233, "dpnp.ndarray.__mod__"]], "__mul__() (dpnp.ndarray method)": [[234, "dpnp.ndarray.__mul__"]], "__ne__() (dpnp.ndarray method)": [[235, "dpnp.ndarray.__ne__"]], "__neg__() (dpnp.ndarray method)": [[236, "dpnp.ndarray.__neg__"]], "__new__() (dpnp.ndarray method)": [[237, "dpnp.ndarray.__new__"]], "__or__() (dpnp.ndarray method)": [[238, "dpnp.ndarray.__or__"]], "__pos__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__pos__"]], "__pow__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__pow__"]], "__repr__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__repr__"]], "__rshift__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__rshift__"]], "__setitem__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__setitem__"]], "__str__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__str__"]], "__sub__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__sub__"]], "__truediv__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__truediv__"]], "__xor__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__xor__"]], "all() (dpnp.ndarray method)": [[248, "dpnp.ndarray.all"]], "any() (dpnp.ndarray method)": [[249, "dpnp.ndarray.any"]], "argmax() (dpnp.ndarray method)": [[250, "dpnp.ndarray.argmax"]], "argmin() (dpnp.ndarray method)": [[251, "dpnp.ndarray.argmin"]], "argsort() (dpnp.ndarray method)": [[252, "dpnp.ndarray.argsort"]], "astype() (dpnp.ndarray method)": [[253, "dpnp.ndarray.astype"]], "choose() (dpnp.ndarray method)": [[254, "dpnp.ndarray.choose"]], "conj() (dpnp.ndarray method)": [[255, "dpnp.ndarray.conj"]], "conjugate() (dpnp.ndarray method)": [[256, "dpnp.ndarray.conjugate"]], "copy() (dpnp.ndarray method)": [[257, "dpnp.ndarray.copy"]], "cumsum() (dpnp.ndarray method)": [[258, "dpnp.ndarray.cumsum"]], "diagonal() (dpnp.ndarray method)": [[259, "dpnp.ndarray.diagonal"]], "dtype (dpnp.ndarray property)": [[260, "dpnp.ndarray.dtype"]], "fill() (dpnp.ndarray method)": [[261, "dpnp.ndarray.fill"]], "flags (dpnp.ndarray property)": [[262, "dpnp.ndarray.flags"]], "flat (dpnp.ndarray property)": [[263, "dpnp.ndarray.flat"]], "flatten() (dpnp.ndarray method)": [[264, "dpnp.ndarray.flatten"]], "imag (dpnp.ndarray property)": [[265, "dpnp.ndarray.imag"]], "item() (dpnp.ndarray method)": [[266, "dpnp.ndarray.item"]], "itemsize (dpnp.ndarray property)": [[267, "dpnp.ndarray.itemsize"]], "max() (dpnp.ndarray method)": [[268, "dpnp.ndarray.max"]], "mean() (dpnp.ndarray method)": [[269, "dpnp.ndarray.mean"]], "min() (dpnp.ndarray method)": [[270, "dpnp.ndarray.min"]], "nbytes (dpnp.ndarray property)": [[271, "dpnp.ndarray.nbytes"]], "ndim (dpnp.ndarray property)": [[272, "dpnp.ndarray.ndim"]], "nonzero() (dpnp.ndarray method)": [[273, "dpnp.ndarray.nonzero"]], "partition() (dpnp.ndarray method)": [[274, "dpnp.ndarray.partition"]], "prod() (dpnp.ndarray method)": [[275, "dpnp.ndarray.prod"]], "put() (dpnp.ndarray method)": [[276, "dpnp.ndarray.put"]], "ravel() (dpnp.ndarray method)": [[277, "dpnp.ndarray.ravel"]], "real (dpnp.ndarray property)": [[278, "dpnp.ndarray.real"]], "repeat() (dpnp.ndarray method)": [[279, "dpnp.ndarray.repeat"]], "reshape() (dpnp.ndarray method)": [[280, "dpnp.ndarray.reshape"]], "round() (dpnp.ndarray method)": [[281, "dpnp.ndarray.round"]], "shape (dpnp.ndarray property)": [[282, "dpnp.ndarray.shape"]], "size (dpnp.ndarray property)": [[283, "dpnp.ndarray.size"]], "squeeze() (dpnp.ndarray method)": [[284, "dpnp.ndarray.squeeze"]], "std() (dpnp.ndarray method)": [[285, "dpnp.ndarray.std"]], "strides (dpnp.ndarray property)": [[286, "dpnp.ndarray.strides"]], "sum() (dpnp.ndarray method)": [[287, "dpnp.ndarray.sum"]], "swapaxes() (dpnp.ndarray method)": [[288, "dpnp.ndarray.swapaxes"]], "take() (dpnp.ndarray method)": [[289, "dpnp.ndarray.take"]], "transpose() (dpnp.ndarray method)": [[290, "dpnp.ndarray.transpose"]], "var() (dpnp.ndarray method)": [[291, "dpnp.ndarray.var"]], "negative() (in module dpnp)": [[292, "dpnp.negative"]], "nonzero() (in module dpnp)": [[293, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[294, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[295, "dpnp.ogrid"]], "ones() (in module dpnp)": [[296, "dpnp.ones"]], "ones_like() (in module dpnp)": [[297, "dpnp.ones_like"]], "outer() (in module dpnp)": [[298, "dpnp.outer"]], "partition() (in module dpnp)": [[299, "dpnp.partition"]], "place() (in module dpnp)": [[300, "dpnp.place"]], "positive() (in module dpnp)": [[301, "dpnp.positive"]], "power() (in module dpnp)": [[302, "dpnp.power"]], "prod() (in module dpnp)": [[303, "dpnp.prod"]], "proj() (in module dpnp)": [[304, "dpnp.proj"]], "ptp() (in module dpnp)": [[305, "dpnp.ptp"]], "put() (in module dpnp)": [[306, "dpnp.put"]], "put_along_axis() (in module dpnp)": [[307, "dpnp.put_along_axis"]], "putmask() (in module dpnp)": [[308, "dpnp.putmask"]], "rad2deg() (in module dpnp)": [[309, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[310, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[311, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[311, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[312, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[313, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[314, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[315, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[316, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[317, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[318, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[319, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[320, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[321, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[322, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[323, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[324, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[325, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[326, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[327, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[328, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[329, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[330, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[331, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[332, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[333, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[334, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[335, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[336, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[337, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[338, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[339, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[340, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[341, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[342, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[343, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[344, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[345, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[346, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[347, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[348, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[349, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[350, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[351, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[352, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[353, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[354, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[355, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[356, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[357, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[358, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[359, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[360, "dpnp.ravel"]], "real() (in module dpnp)": [[361, "dpnp.real"]], "reciprocal() (in module dpnp)": [[362, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[363, "dpnp.remainder"]], "repeat() (in module dpnp)": [[364, "dpnp.repeat"]], "reshape() (in module dpnp)": [[365, "dpnp.reshape"]], "result_type() (in module dpnp)": [[366, "dpnp.result_type"]], "right_shift() (in module dpnp)": [[367, "dpnp.right_shift"]], "rint() (in module dpnp)": [[368, "dpnp.rint"]], "roll() (in module dpnp)": [[369, "dpnp.roll"]], "rollaxis() (in module dpnp)": [[370, "dpnp.rollaxis"]], "round() (in module dpnp)": [[371, "dpnp.round"]], "searchsorted() (in module dpnp)": [[372, "dpnp.searchsorted"]], "select() (in module dpnp)": [[373, "dpnp.select"]], "shape() (in module dpnp)": [[374, "dpnp.shape"]], "sign() (in module dpnp)": [[375, "dpnp.sign"]], "signbit() (in module dpnp)": [[376, "dpnp.signbit"]], "sin() (in module dpnp)": [[377, "dpnp.sin"]], "sinh() (in module dpnp)": [[378, "dpnp.sinh"]], "sort() (in module dpnp)": [[379, "dpnp.sort"]], "sqrt() (in module dpnp)": [[380, "dpnp.sqrt"]], "square() (in module dpnp)": [[381, "dpnp.square"]], "squeeze() (in module dpnp)": [[382, "dpnp.squeeze"]], "stack() (in module dpnp)": [[383, "dpnp.stack"]], "std() (in module dpnp)": [[384, "dpnp.std"]], "subtract() (in module dpnp)": [[385, "dpnp.subtract"]], "sum() (in module dpnp)": [[386, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[387, "dpnp.swapaxes"]], "take() (in module dpnp)": [[388, "dpnp.take"]], "take_along_axis() (in module dpnp)": [[389, "dpnp.take_along_axis"]], "tan() (in module dpnp)": [[390, "dpnp.tan"]], "tanh() (in module dpnp)": [[391, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[392, "dpnp.tensordot"]], "tile() (in module dpnp)": [[393, "dpnp.tile"]], "trace() (in module dpnp)": [[394, "dpnp.trace"]], "transpose() (in module dpnp)": [[395, "dpnp.transpose"]], "trapz() (in module dpnp)": [[396, "dpnp.trapz"]], "tri() (in module dpnp)": [[397, "dpnp.tri"]], "tril() (in module dpnp)": [[398, "dpnp.tril"]], "tril_indices() (in module dpnp)": [[399, "dpnp.tril_indices"]], "tril_indices_from() (in module dpnp)": [[400, "dpnp.tril_indices_from"]], "triu() (in module dpnp)": [[401, "dpnp.triu"]], "triu_indices() (in module dpnp)": [[402, "dpnp.triu_indices"]], "triu_indices_from() (in module dpnp)": [[403, "dpnp.triu_indices_from"]], "true_divide() (in module dpnp)": [[404, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[405, "dpnp.trunc"]], "unique() (in module dpnp)": [[406, "dpnp.unique"]], "unwrap() (in module dpnp)": [[407, "dpnp.unwrap"]], "vander() (in module dpnp)": [[408, "dpnp.vander"]], "var() (in module dpnp)": [[409, "dpnp.var"]], "vdot() (in module dpnp)": [[410, "dpnp.vdot"]], "vstack() (in module dpnp)": [[411, "dpnp.vstack"]], "where() (in module dpnp)": [[412, "dpnp.where"]], "zeros() (in module dpnp)": [[413, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[414, "dpnp.zeros_like"]], "dpnp.random": [[425, "module-dpnp.random"]]}})