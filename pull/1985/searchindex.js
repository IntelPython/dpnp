Search.setIndex({"alltitles": {"API Reference": [[460, null]], "Adding and removing elements": [[464, "adding-and-removing-elements"]], "Arithmetic": [[469, "arithmetic"]], "Arithmetic operations": [[465, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[467, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[461, null]], "Array Manipulation Routines": [[464, null]], "Array attributes": [[467, "array-attributes"]], "Array conversion": [[467, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[467, "array-methods"]], "Array type testing": [[463, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[475, "available-ufuncs"]], "Averages and variances": [[474, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[464, "basic-operations"]], "Basics": [[469, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[475, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[467, "calculation"]], "Changing array shape": [[464, "changing-array-shape"]], "Changing kind of array": [[464, "changing-kind-of-array"]], "Changing number of dimensions": [[464, "changing-number-of-dimensions"]], "Comparison": [[463, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[475, "comparison-functions"]], "Constructing arrays": [[467, "constructing-arrays"]], "Correlations": [[474, "correlations"]], "Counting": [[472, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[467, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[462, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[470, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[473, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[465, "exponents-and-logarithms"]], "Extrema finding": [[465, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[475, "floating-functions"]], "Floating point routines": [[465, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[461, "generating-index-arrays"]], "Handling complex numbers": [[465, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[474, "histograms"]], "Hyperbolic functions": [[465, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[467, "indexing-arrays"]], "Indexing-like operations": [[461, "indexing-like-operations"]], "Infinities and NaNs": [[463, "infinities-and-nans"]], "Inserting data into arrays": [[461, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[467, "item-selection-and-manipulation"]], "Iterating over arrays": [[461, "iterating-over-arrays"]], "Joining arrays": [[464, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [462, null]], "Logic Functions": [[463, null]], "Logic operations": [[463, "logic-operations"]], "Math operations": [[475, "math-operations"]], "Mathematical functions": [[465, null]], "Matrix and vector products": [[462, "matrix-and-vector-products"]], "Matrix eigenvalues": [[462, "matrix-eigenvalues"]], "Memory layout": [[467, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [465, "miscellaneous"]], "Miscellaneous routines": [[466, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[467, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[462, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[474, "order-statistics"]], "Other attributes": [[467, "other-attributes"]], "Other special functions": [[465, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[468, null]], "Permutations": [[470, "permutations"]], "Poly1d": [[469, "poly1d"]], "Polynomial Module": [[469, "polynomial-module"]], "Polynomial Package": [[469, "polynomial-package"]], "Polynomials": [[469, null]], "Polyutils": [[469, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[470, null]], "Random generator": [[470, "random-generator"]], "Rational routines": [[465, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[464, "rearranging-elements"]], "Rounding": [[465, "rounding"]], "Routines": [[471, null]], "Searching": [[472, "searching"]], "Shape manipulation": [[467, "shape-manipulation"]], "Simple random data": [[470, "simple-random-data"]], "Solving linear equations": [[462, "solving-linear-equations"]], "Sorting": [[472, "sorting"]], "Sorting, Searching, and Counting": [[472, null]], "Special Functions": [[473, null]], "Special methods": [[467, "special-methods"]], "Splitting arrays": [[464, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[474, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[465, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[464, "tiling-arrays"]], "Transpose-like operations": [[464, "transpose-like-operations"]], "Trigonometric functions": [[465, "trigonometric-functions"], [475, "trigonometric-functions"]], "Truth value testing": [[463, "truth-value-testing"]], "Type Promotion": [[10, "type-promotion"]], "Universal Functions (ufunc)": [[475, null]], "Utility": [[466, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.add": [[13, null]], "dpnp.all": [[14, null]], "dpnp.allclose": [[15, null]], "dpnp.amax": [[16, null]], "dpnp.amin": [[17, null]], "dpnp.angle": [[18, null]], "dpnp.any": [[19, null]], "dpnp.arange": [[20, null]], "dpnp.arccos": [[21, null]], "dpnp.arccosh": [[22, null]], "dpnp.arcsin": [[23, null]], "dpnp.arcsinh": [[24, null]], "dpnp.arctan": [[25, null]], "dpnp.arctan2": [[26, null]], "dpnp.arctanh": [[27, null]], "dpnp.argmax": [[28, null]], "dpnp.argmin": [[29, null]], "dpnp.argsort": [[30, null]], "dpnp.around": [[31, null]], "dpnp.array": [[32, null]], "dpnp.array_equal": [[33, null]], "dpnp.array_equiv": [[34, null]], "dpnp.asanyarray": [[35, null]], "dpnp.asarray": [[36, null]], "dpnp.ascontiguousarray": [[37, null]], "dpnp.asfarray": [[38, null]], "dpnp.asfortranarray": [[39, null]], "dpnp.asnumpy": [[40, null]], "dpnp.astype": [[41, null]], "dpnp.atleast_1d": [[42, null]], "dpnp.atleast_2d": [[43, null]], "dpnp.atleast_3d": [[44, null]], "dpnp.average": [[45, null]], "dpnp.bincount": [[46, null]], "dpnp.bitwise_and": [[47, null]], "dpnp.bitwise_not": [[48, null]], "dpnp.bitwise_or": [[49, null]], "dpnp.bitwise_xor": [[50, null]], "dpnp.broadcast_arrays": [[51, null]], "dpnp.broadcast_to": [[52, null]], "dpnp.can_cast": [[53, null]], "dpnp.cbrt": [[54, null]], "dpnp.ceil": [[55, null]], "dpnp.choose": [[56, null]], "dpnp.clip": [[57, null]], "dpnp.column_stack": [[58, null]], "dpnp.concatenate": [[59, null]], "dpnp.conj": [[60, null]], "dpnp.conjugate": [[61, null]], "dpnp.convolve": [[62, null]], "dpnp.copy": [[63, null]], "dpnp.copysign": [[64, null]], "dpnp.copyto": [[65, null]], "dpnp.correlate": [[66, null]], "dpnp.cos": [[67, null]], "dpnp.cosh": [[68, null]], "dpnp.count_nonzero": [[69, null]], "dpnp.cov": [[70, null]], "dpnp.cross": [[71, null]], "dpnp.cumlogsumexp": [[72, null]], "dpnp.cumprod": [[73, null]], "dpnp.cumsum": [[74, null]], "dpnp.deg2rad": [[75, null]], "dpnp.degrees": [[76, null]], "dpnp.diag": [[77, null]], "dpnp.diag_indices": [[78, null]], "dpnp.diag_indices_from": [[79, null]], "dpnp.diagflat": [[80, null]], "dpnp.diagonal": [[81, null]], "dpnp.diff": [[82, null]], "dpnp.digitize": [[83, null]], "dpnp.divide": [[84, null]], "dpnp.dot": [[85, null]], "dpnp.dpnp_array.dpnp_array": [[86, null]], "dpnp.dstack": [[87, null]], "dpnp.dtype": [[88, null]], "dpnp.ediff1d": [[89, null]], "dpnp.einsum": [[90, null]], "dpnp.einsum_path": [[91, null]], "dpnp.empty": [[92, null]], "dpnp.empty_like": [[93, null]], "dpnp.equal": [[94, null]], "dpnp.erf": [[95, null]], "dpnp.exp": [[96, null]], "dpnp.exp2": [[97, null]], "dpnp.expand_dims": [[98, null]], "dpnp.expm1": [[99, null]], "dpnp.extract": [[100, null]], "dpnp.eye": [[101, null]], "dpnp.fabs": [[102, null]], "dpnp.fft.fft": [[103, null]], "dpnp.fft.fft2": [[104, null]], "dpnp.fft.fftfreq": [[105, null]], "dpnp.fft.fftn": [[106, null]], "dpnp.fft.fftshift": [[107, null]], "dpnp.fft.hfft": [[108, null]], "dpnp.fft.ifft": [[109, null]], "dpnp.fft.ifft2": [[110, null]], "dpnp.fft.ifftn": [[111, null]], "dpnp.fft.ifftshift": [[112, null]], "dpnp.fft.ihfft": [[113, null]], "dpnp.fft.irfft": [[114, null]], "dpnp.fft.irfft2": [[115, null]], "dpnp.fft.irfftn": [[116, null]], "dpnp.fft.rfft": [[117, null]], "dpnp.fft.rfft2": [[118, null]], "dpnp.fft.rfftfreq": [[119, null]], "dpnp.fft.rfftn": [[120, null]], "dpnp.fill_diagonal": [[121, null]], "dpnp.finfo": [[122, null]], "dpnp.fix": [[123, null]], "dpnp.flatiter": [[124, null]], "dpnp.flatnonzero": [[125, null]], "dpnp.flip": [[126, null]], "dpnp.fliplr": [[127, null]], "dpnp.flipud": [[128, null]], "dpnp.float_power": [[129, null]], "dpnp.floor": [[130, null]], "dpnp.floor_divide": [[131, null]], "dpnp.fmax": [[132, null]], "dpnp.fmin": [[133, null]], "dpnp.fmod": [[134, null]], "dpnp.from_dlpack": [[135, null]], "dpnp.frombuffer": [[136, null]], "dpnp.fromfile": [[137, null]], "dpnp.fromfunction": [[138, null]], "dpnp.fromiter": [[139, null]], "dpnp.fromstring": [[140, null]], "dpnp.full": [[141, null]], "dpnp.full_like": [[142, null]], "dpnp.geomspace": [[143, null]], "dpnp.get_include": [[144, null]], "dpnp.gradient": [[145, null]], "dpnp.greater": [[146, null]], "dpnp.greater_equal": [[147, null]], "dpnp.histogram": [[148, null]], "dpnp.histogram_bin_edges": [[149, null]], "dpnp.hstack": [[150, null]], "dpnp.hypot": [[151, null]], "dpnp.identity": [[152, null]], "dpnp.iinfo": [[153, null]], "dpnp.imag": [[154, null]], "dpnp.indices": [[155, null]], "dpnp.inner": [[156, null]], "dpnp.invert": [[157, null]], "dpnp.isclose": [[158, null]], "dpnp.iscomplex": [[159, null]], "dpnp.iscomplexobj": [[160, null]], "dpnp.isfinite": [[161, null]], "dpnp.isinf": [[162, null]], "dpnp.isnan": [[163, null]], "dpnp.isneginf": [[164, null]], "dpnp.isposinf": [[165, null]], "dpnp.isreal": [[166, null]], "dpnp.isrealobj": [[167, null]], "dpnp.isscalar": [[168, null]], "dpnp.issubdtype": [[169, null]], "dpnp.issubsctype": [[170, null]], "dpnp.kron": [[171, null]], "dpnp.left_shift": [[172, null]], "dpnp.less": [[173, null]], "dpnp.less_equal": [[174, null]], "dpnp.linalg.cholesky": [[175, null]], "dpnp.linalg.cond": [[176, null]], "dpnp.linalg.det": [[177, null]], "dpnp.linalg.eig": [[178, null]], "dpnp.linalg.eigh": [[179, null]], "dpnp.linalg.eigvals": [[180, null]], "dpnp.linalg.eigvalsh": [[181, null]], "dpnp.linalg.inv": [[182, null]], "dpnp.linalg.lstsq": [[183, null]], "dpnp.linalg.matrix_power": [[184, null]], "dpnp.linalg.matrix_rank": [[185, null]], "dpnp.linalg.multi_dot": [[186, null]], "dpnp.linalg.norm": [[187, null]], "dpnp.linalg.pinv": [[188, null]], "dpnp.linalg.qr": [[189, null]], "dpnp.linalg.slogdet": [[190, null]], "dpnp.linalg.solve": [[191, null]], "dpnp.linalg.svd": [[192, null]], "dpnp.linalg.tensorinv": [[193, null]], "dpnp.linalg.tensorsolve": [[194, null]], "dpnp.linspace": [[195, null]], "dpnp.loadtxt": [[196, null]], "dpnp.log": [[197, null]], "dpnp.log10": [[198, null]], "dpnp.log1p": [[199, null]], "dpnp.log2": [[200, null]], "dpnp.logaddexp": [[201, null]], "dpnp.logaddexp2": [[202, null]], "dpnp.logical_and": [[203, null]], "dpnp.logical_not": [[204, null]], "dpnp.logical_or": [[205, null]], "dpnp.logical_xor": [[206, null]], "dpnp.logspace": [[207, null]], "dpnp.logsumexp": [[208, null]], "dpnp.mask_indices": [[209, null]], "dpnp.matmul": [[210, null]], "dpnp.max": [[211, null]], "dpnp.maximum": [[212, null]], "dpnp.mean": [[213, null]], "dpnp.median": [[214, null]], "dpnp.meshgrid": [[215, null]], "dpnp.mgrid": [[216, null]], "dpnp.min": [[217, null]], "dpnp.minimum": [[218, null]], "dpnp.mod": [[219, null]], "dpnp.modf": [[220, null]], "dpnp.moveaxis": [[221, null]], "dpnp.multiply": [[222, null]], "dpnp.nan_to_num": [[223, null]], "dpnp.nanargmax": [[224, null]], "dpnp.nanargmin": [[225, null]], "dpnp.nancumprod": [[226, null]], "dpnp.nancumsum": [[227, null]], "dpnp.nanmax": [[228, null]], "dpnp.nanmean": [[229, null]], "dpnp.nanmin": [[230, null]], "dpnp.nanprod": [[231, null]], "dpnp.nanstd": [[232, null]], "dpnp.nansum": [[233, null]], "dpnp.nanvar": [[234, null]], "dpnp.ndarray": [[235, null]], "dpnp.ndarray.T": [[236, null]], "dpnp.ndarray.__abs__": [[237, null]], "dpnp.ndarray.__add__": [[238, null]], "dpnp.ndarray.__and__": [[239, null]], "dpnp.ndarray.__bool__": [[240, null]], "dpnp.ndarray.__complex__": [[241, null]], "dpnp.ndarray.__copy__": [[242, null]], "dpnp.ndarray.__eq__": [[243, null]], "dpnp.ndarray.__float__": [[244, null]], "dpnp.ndarray.__floordiv__": [[245, null]], "dpnp.ndarray.__ge__": [[246, null]], "dpnp.ndarray.__getitem__": [[247, null]], "dpnp.ndarray.__gt__": [[248, null]], "dpnp.ndarray.__iadd__": [[249, null]], "dpnp.ndarray.__iand__": [[250, null]], "dpnp.ndarray.__ifloordiv__": [[251, null]], "dpnp.ndarray.__ilshift__": [[252, null]], "dpnp.ndarray.__imod__": [[253, null]], "dpnp.ndarray.__imul__": [[254, null]], "dpnp.ndarray.__int__": [[255, null]], "dpnp.ndarray.__invert__": [[256, null]], "dpnp.ndarray.__ior__": [[257, null]], "dpnp.ndarray.__ipow__": [[258, null]], "dpnp.ndarray.__irshift__": [[259, null]], "dpnp.ndarray.__isub__": [[260, null]], "dpnp.ndarray.__itruediv__": [[261, null]], "dpnp.ndarray.__ixor__": [[262, null]], "dpnp.ndarray.__le__": [[263, null]], "dpnp.ndarray.__len__": [[264, null]], "dpnp.ndarray.__lshift__": [[265, null]], "dpnp.ndarray.__lt__": [[266, null]], "dpnp.ndarray.__matmul__": [[267, null]], "dpnp.ndarray.__mod__": [[268, null]], "dpnp.ndarray.__mul__": [[269, null]], "dpnp.ndarray.__ne__": [[270, null]], "dpnp.ndarray.__neg__": [[271, null]], "dpnp.ndarray.__new__": [[272, null]], "dpnp.ndarray.__or__": [[273, null]], "dpnp.ndarray.__pos__": [[274, null]], "dpnp.ndarray.__pow__": [[275, null]], "dpnp.ndarray.__repr__": [[276, null]], "dpnp.ndarray.__rshift__": [[277, null]], "dpnp.ndarray.__setitem__": [[278, null]], "dpnp.ndarray.__str__": [[279, null]], "dpnp.ndarray.__sub__": [[280, null]], "dpnp.ndarray.__truediv__": [[281, null]], "dpnp.ndarray.__xor__": [[282, null]], "dpnp.ndarray.all": [[283, null]], "dpnp.ndarray.any": [[284, null]], "dpnp.ndarray.argmax": [[285, null]], "dpnp.ndarray.argmin": [[286, null]], "dpnp.ndarray.argsort": [[287, null]], "dpnp.ndarray.astype": [[288, null]], "dpnp.ndarray.choose": [[289, null]], "dpnp.ndarray.clip": [[290, null]], "dpnp.ndarray.conj": [[291, null]], "dpnp.ndarray.conjugate": [[292, null]], "dpnp.ndarray.copy": [[293, null]], "dpnp.ndarray.cumprod": [[294, null]], "dpnp.ndarray.cumsum": [[295, null]], "dpnp.ndarray.diagonal": [[296, null]], "dpnp.ndarray.dtype": [[297, null]], "dpnp.ndarray.fill": [[298, null]], "dpnp.ndarray.flags": [[299, null]], "dpnp.ndarray.flat": [[300, null]], "dpnp.ndarray.flatten": [[301, null]], "dpnp.ndarray.imag": [[302, null]], "dpnp.ndarray.item": [[303, null]], "dpnp.ndarray.itemsize": [[304, null]], "dpnp.ndarray.max": [[305, null]], "dpnp.ndarray.mean": [[306, null]], "dpnp.ndarray.min": [[307, null]], "dpnp.ndarray.nbytes": [[308, null]], "dpnp.ndarray.ndim": [[309, null]], "dpnp.ndarray.nonzero": [[310, null]], "dpnp.ndarray.partition": [[311, null]], "dpnp.ndarray.prod": [[312, null]], "dpnp.ndarray.put": [[313, null]], "dpnp.ndarray.ravel": [[314, null]], "dpnp.ndarray.real": [[315, null]], "dpnp.ndarray.repeat": [[316, null]], "dpnp.ndarray.reshape": [[317, null]], "dpnp.ndarray.round": [[318, null]], "dpnp.ndarray.searchsorted": [[319, null]], "dpnp.ndarray.shape": [[320, null]], "dpnp.ndarray.size": [[321, null]], "dpnp.ndarray.sort": [[322, null]], "dpnp.ndarray.squeeze": [[323, null]], "dpnp.ndarray.std": [[324, null]], "dpnp.ndarray.strides": [[325, null]], "dpnp.ndarray.sum": [[326, null]], "dpnp.ndarray.swapaxes": [[327, null]], "dpnp.ndarray.take": [[328, null]], "dpnp.ndarray.trace": [[329, null]], "dpnp.ndarray.transpose": [[330, null]], "dpnp.ndarray.var": [[331, null]], "dpnp.negative": [[332, null]], "dpnp.nextafter": [[333, null]], "dpnp.nonzero": [[334, null]], "dpnp.not_equal": [[335, null]], "dpnp.ogrid": [[336, null]], "dpnp.ones": [[337, null]], "dpnp.ones_like": [[338, null]], "dpnp.outer": [[339, null]], "dpnp.partition": [[340, null]], "dpnp.place": [[341, null]], "dpnp.positive": [[342, null]], "dpnp.power": [[343, null]], "dpnp.prod": [[344, null]], "dpnp.proj": [[345, null]], "dpnp.ptp": [[346, null]], "dpnp.put": [[347, null]], "dpnp.put_along_axis": [[348, null]], "dpnp.putmask": [[349, null]], "dpnp.rad2deg": [[350, null]], "dpnp.radians": [[351, null]], "dpnp.random.RandomState": [[352, null]], "dpnp.random.beta": [[353, null]], "dpnp.random.binomial": [[354, null]], "dpnp.random.bytes": [[355, null]], "dpnp.random.chisquare": [[356, null]], "dpnp.random.choice": [[357, null]], "dpnp.random.dirichlet": [[358, null]], "dpnp.random.exponential": [[359, null]], "dpnp.random.f": [[360, null]], "dpnp.random.gamma": [[361, null]], "dpnp.random.geometric": [[362, null]], "dpnp.random.gumbel": [[363, null]], "dpnp.random.hypergeometric": [[364, null]], "dpnp.random.laplace": [[365, null]], "dpnp.random.logistic": [[366, null]], "dpnp.random.lognormal": [[367, null]], "dpnp.random.logseries": [[368, null]], "dpnp.random.multinomial": [[369, null]], "dpnp.random.multivariate_normal": [[370, null]], "dpnp.random.negative_binomial": [[371, null]], "dpnp.random.noncentral_chisquare": [[372, null]], "dpnp.random.noncentral_f": [[373, null]], "dpnp.random.normal": [[374, null]], "dpnp.random.pareto": [[375, null]], "dpnp.random.permutation": [[376, null]], "dpnp.random.poisson": [[377, null]], "dpnp.random.power": [[378, null]], "dpnp.random.rand": [[379, null]], "dpnp.random.randint": [[380, null]], "dpnp.random.randn": [[381, null]], "dpnp.random.random": [[382, null]], "dpnp.random.random_integers": [[383, null]], "dpnp.random.random_sample": [[384, null]], "dpnp.random.ranf": [[385, null]], "dpnp.random.rayleigh": [[386, null]], "dpnp.random.sample": [[387, null]], "dpnp.random.seed": [[388, null]], "dpnp.random.shuffle": [[389, null]], "dpnp.random.standard_cauchy": [[390, null]], "dpnp.random.standard_exponential": [[391, null]], "dpnp.random.standard_gamma": [[392, null]], "dpnp.random.standard_normal": [[393, null]], "dpnp.random.standard_t": [[394, null]], "dpnp.random.triangular": [[395, null]], "dpnp.random.uniform": [[396, null]], "dpnp.random.vonmises": [[397, null]], "dpnp.random.wald": [[398, null]], "dpnp.random.weibull": [[399, null]], "dpnp.random.zipf": [[400, null]], "dpnp.ravel": [[401, null]], "dpnp.real": [[402, null]], "dpnp.reciprocal": [[403, null]], "dpnp.reduce_hypot": [[404, null]], "dpnp.remainder": [[405, null]], "dpnp.repeat": [[406, null]], "dpnp.reshape": [[407, null]], "dpnp.result_type": [[408, null]], "dpnp.right_shift": [[409, null]], "dpnp.rint": [[410, null]], "dpnp.roll": [[411, null]], "dpnp.rollaxis": [[412, null]], "dpnp.round": [[413, null]], "dpnp.row_stack": [[414, null]], "dpnp.rsqrt": [[415, null]], "dpnp.searchsorted": [[416, null]], "dpnp.select": [[417, null]], "dpnp.shape": [[418, null]], "dpnp.sign": [[419, null]], "dpnp.signbit": [[420, null]], "dpnp.sin": [[421, null]], "dpnp.sinh": [[422, null]], "dpnp.sort": [[423, null]], "dpnp.sort_complex": [[424, null]], "dpnp.sqrt": [[425, null]], "dpnp.square": [[426, null]], "dpnp.squeeze": [[427, null]], "dpnp.stack": [[428, null]], "dpnp.std": [[429, null]], "dpnp.subtract": [[430, null]], "dpnp.sum": [[431, null]], "dpnp.swapaxes": [[432, null]], "dpnp.take": [[433, null]], "dpnp.take_along_axis": [[434, null]], "dpnp.tan": [[435, null]], "dpnp.tanh": [[436, null]], "dpnp.tensordot": [[437, null]], "dpnp.tile": [[438, null]], "dpnp.trace": [[439, null]], "dpnp.transpose": [[440, null]], "dpnp.tri": [[441, null]], "dpnp.tril": [[442, null]], "dpnp.tril_indices": [[443, null]], "dpnp.tril_indices_from": [[444, null]], "dpnp.trim_zeros": [[445, null]], "dpnp.triu": [[446, null]], "dpnp.triu_indices": [[447, null]], "dpnp.triu_indices_from": [[448, null]], "dpnp.true_divide": [[449, null]], "dpnp.trunc": [[450, null]], "dpnp.unique": [[451, null]], "dpnp.unwrap": [[452, null]], "dpnp.vander": [[453, null]], "dpnp.var": [[454, null]], "dpnp.vdot": [[455, null]], "dpnp.vstack": [[456, null]], "dpnp.where": [[457, null]], "dpnp.zeros": [[458, null]], "dpnp.zeros_like": [[459, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[237, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[238, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[88, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[88, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[88, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[88, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[88, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[88, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[88, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[88, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[124, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[88, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[283, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[284, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "arange() (in module dpnp)": [[20, "dpnp.arange", false]], "arccos() (in module dpnp)": [[21, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[22, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[23, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[24, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[25, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[26, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[27, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[285, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[28, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[286, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[29, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[287, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[30, "dpnp.argsort", false]], "around() (in module dpnp)": [[31, "dpnp.around", false]], "array() (in module dpnp)": [[32, "dpnp.array", false]], "array_equal() (in module dpnp)": [[33, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[34, "dpnp.array_equiv", false]], "asanyarray() (in module dpnp)": [[35, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[36, "dpnp.asarray", false]], "ascontiguousarray() (in module dpnp)": [[37, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[38, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[39, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[40, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[288, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[41, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[42, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[43, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[44, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[45, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[88, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[353, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[46, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[354, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[47, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[48, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[49, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[50, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[51, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[52, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[88, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[355, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[53, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[54, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[55, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[88, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[356, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[357, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[175, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[289, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[56, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[290, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[57, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[58, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[59, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[176, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[291, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[60, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[292, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[61, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[62, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[293, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[63, "dpnp.copy", false]], "copysign() (in module dpnp)": [[64, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[65, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[66, "dpnp.correlate", false]], "cos() (in module dpnp)": [[67, "dpnp.cos", false]], "cosh() (in module dpnp)": [[68, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[69, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[70, "dpnp.cov", false]], "cross() (in module dpnp)": [[71, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[72, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[294, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[73, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[295, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[74, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[75, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[76, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[88, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[177, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[77, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[78, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[79, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[80, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[296, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[81, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[82, "dpnp.diff", false]], "digitize() (in module dpnp)": [[83, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[358, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[84, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[85, "dpnp.dot", false]], "dpnp": [[2, "module-dpnp", false], [3, "module-dpnp", false]], "dpnp.fft": [[10, "module-0", false], [10, "module-dpnp.fft", false]], "dpnp.random": [[470, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[86, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[87, "dpnp.dstack", false]], "dtype (class in dpnp)": [[88, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[297, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[89, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[178, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[179, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[180, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[181, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[90, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[91, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[92, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[93, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[94, "dpnp.equal", false]], "erf() (in module dpnp)": [[95, "dpnp.erf", false]], "exp() (in module dpnp)": [[96, "dpnp.exp", false]], "exp2() (in module dpnp)": [[97, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[98, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[99, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[359, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[100, "dpnp.extract", false]], "eye() (in module dpnp)": [[101, "dpnp.eye", false]], "f() (in module dpnp.random)": [[360, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[102, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[103, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[104, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[105, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[106, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[107, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[88, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[298, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[121, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[122, "dpnp.finfo", false]], "fix() (in module dpnp)": [[123, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[88, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[299, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[300, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[124, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[125, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[301, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[126, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[127, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[128, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[129, "dpnp.float_power", false]], "floor() (in module dpnp)": [[130, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[131, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[132, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[133, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[134, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[135, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[136, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[137, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[138, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[139, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[140, "dpnp.fromstring", false]], "full() (in module dpnp)": [[141, "dpnp.full", false]], "full_like() (in module dpnp)": [[142, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[361, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[362, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[143, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[144, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[145, "dpnp.gradient", false]], "greater() (in module dpnp)": [[146, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[147, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[363, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[88, "dpnp.dtype.hasobject", false]], "hfft() (in module dpnp.fft)": [[108, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[148, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[149, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[150, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[364, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[151, "dpnp.hypot", false]], "identity() (in module dpnp)": [[152, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[109, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[110, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[111, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[112, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[113, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[153, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[302, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[154, "dpnp.imag", false]], "indices() (in module dpnp)": [[155, "dpnp.indices", false]], "inner() (in module dpnp)": [[156, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[182, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[157, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[114, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[115, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[116, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[88, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[88, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[158, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[159, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[160, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[161, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[162, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[163, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[88, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[164, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[165, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[166, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[167, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[168, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[169, "dpnp.issubdtype", false]], "issubsctype() (in module dpnp)": [[170, "dpnp.issubsctype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[303, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[88, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[304, "dpnp.ndarray.itemsize", false]], "kind (dpnp.dtype attribute)": [[88, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[171, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[365, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[172, "dpnp.left_shift", false]], "less() (in module dpnp)": [[173, "dpnp.less", false]], "less_equal() (in module dpnp)": [[174, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[195, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[196, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[197, "dpnp.log", false]], "log10() (in module dpnp)": [[198, "dpnp.log10", false]], "log1p() (in module dpnp)": [[199, "dpnp.log1p", false]], "log2() (in module dpnp)": [[200, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[201, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[202, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[203, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[204, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[205, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[206, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[366, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[367, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[368, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[207, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[208, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[183, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[209, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[210, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[184, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[185, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[305, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[211, "dpnp.max", false]], "maximum() (in module dpnp)": [[212, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[306, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[213, "dpnp.mean", false]], "median() (in module dpnp)": [[214, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[215, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[88, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[216, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[307, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[217, "dpnp.min", false]], "minimum() (in module dpnp)": [[218, "dpnp.minimum", false]], "mod() (in module dpnp)": [[219, "dpnp.mod", false]], "modf() (in module dpnp)": [[220, "dpnp.modf", false]], "module": [[2, "module-dpnp", false], [3, "module-dpnp", false], [10, "module-0", false], [10, "module-dpnp.fft", false], [470, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[221, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[186, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[369, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[222, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[370, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[88, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[88, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[223, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[224, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[225, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[226, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[227, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[228, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[229, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[230, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[231, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[232, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[233, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[234, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[308, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[235, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[88, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[309, "dpnp.ndarray.ndim", false]], "negative() (in module dpnp)": [[332, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[371, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[88, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[333, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[372, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[373, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[310, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[334, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[187, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[374, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[335, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[88, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[336, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[337, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[338, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[339, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[375, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[311, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[340, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[376, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[188, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[341, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[377, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[342, "dpnp.positive", false]], "power() (in module dpnp)": [[343, "dpnp.power", false]], "power() (in module dpnp.random)": [[378, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[312, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[344, "dpnp.prod", false]], "proj() (in module dpnp)": [[345, "dpnp.proj", false]], "ptp() (in module dpnp)": [[346, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[313, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[347, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[348, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[349, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[189, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[350, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[351, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[379, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[380, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[381, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[382, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[383, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[384, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[352, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[385, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[314, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[401, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[386, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[315, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[402, "dpnp.real", false]], "reciprocal() (in module dpnp)": [[403, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[404, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[405, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[316, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[406, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[317, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[407, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[408, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[117, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[118, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[119, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[120, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[409, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[410, "dpnp.rint", false]], "roll() (in module dpnp)": [[411, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[412, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[318, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[413, "dpnp.round", false]], "row_stack() (in module dpnp)": [[414, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[415, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[387, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[319, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[416, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[388, "dpnp.random.seed", false]], "select() (in module dpnp)": [[417, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[88, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[320, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[418, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[389, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[419, "dpnp.sign", false]], "signbit() (in module dpnp)": [[420, "dpnp.signbit", false]], "sin() (in module dpnp)": [[421, "dpnp.sin", false]], "sinh() (in module dpnp)": [[422, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[321, "dpnp.ndarray.size", false]], "slogdet() (in module dpnp.linalg)": [[190, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[191, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[322, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[423, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[424, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[425, "dpnp.sqrt", false]], "square() (in module dpnp)": [[426, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[323, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[427, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[428, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[390, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[391, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[392, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[393, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[394, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[324, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[429, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[88, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[325, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[88, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[430, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[326, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[431, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[192, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[327, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[432, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[236, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[328, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[433, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[434, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[435, "dpnp.tan", false]], "tanh() (in module dpnp)": [[436, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[437, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[193, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[194, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[438, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[329, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[439, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[330, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[440, "dpnp.transpose", false]], "tri() (in module dpnp)": [[441, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[395, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[442, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[443, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[444, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[445, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[446, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[447, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[448, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[449, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[450, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[88, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[352, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[396, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[451, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[452, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[86, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[453, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[86, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[331, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[454, "dpnp.var", false]], "vdot() (in module dpnp)": [[455, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[397, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[456, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[398, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[399, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[457, "dpnp.where", false]], "zeros() (in module dpnp)": [[458, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[459, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[400, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "arange"], [21, 1, 1, "", "arccos"], [22, 1, 1, "", "arccosh"], [23, 1, 1, "", "arcsin"], [24, 1, 1, "", "arcsinh"], [25, 1, 1, "", "arctan"], [26, 1, 1, "", "arctan2"], [27, 1, 1, "", "arctanh"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "argmin"], [30, 1, 1, "", "argsort"], [31, 1, 1, "", "around"], [32, 1, 1, "", "array"], [33, 1, 1, "", "array_equal"], [34, 1, 1, "", "array_equiv"], [35, 1, 1, "", "asanyarray"], [36, 1, 1, "", "asarray"], [37, 1, 1, "", "ascontiguousarray"], [38, 1, 1, "", "asfarray"], [39, 1, 1, "", "asfortranarray"], [40, 1, 1, "", "asnumpy"], [41, 1, 1, "", "astype"], [42, 1, 1, "", "atleast_1d"], [43, 1, 1, "", "atleast_2d"], [44, 1, 1, "", "atleast_3d"], [45, 1, 1, "", "average"], [46, 1, 1, "", "bincount"], [47, 1, 1, "", "bitwise_and"], [48, 1, 1, "", "bitwise_not"], [49, 1, 1, "", "bitwise_or"], [50, 1, 1, "", "bitwise_xor"], [51, 1, 1, "", "broadcast_arrays"], [52, 1, 1, "", "broadcast_to"], [53, 1, 1, "", "can_cast"], [54, 1, 1, "", "cbrt"], [55, 1, 1, "", "ceil"], [56, 1, 1, "", "choose"], [57, 1, 1, "", "clip"], [58, 1, 1, "", "column_stack"], [59, 1, 1, "", "concatenate"], [60, 1, 1, "", "conj"], [61, 1, 1, "", "conjugate"], [62, 1, 1, "", "convolve"], [63, 1, 1, "", "copy"], [64, 1, 1, "", "copysign"], [65, 1, 1, "", "copyto"], [66, 1, 1, "", "correlate"], [67, 1, 1, "", "cos"], [68, 1, 1, "", "cosh"], [69, 1, 1, "", "count_nonzero"], [70, 1, 1, "", "cov"], [71, 1, 1, "", "cross"], [72, 1, 1, "", "cumlogsumexp"], [73, 1, 1, "", "cumprod"], [74, 1, 1, "", "cumsum"], [75, 1, 1, "", "deg2rad"], [76, 1, 1, "", "degrees"], [77, 1, 1, "", "diag"], [78, 1, 1, "", "diag_indices"], [79, 1, 1, "", "diag_indices_from"], [80, 1, 1, "", "diagflat"], [81, 1, 1, "", "diagonal"], [82, 1, 1, "", "diff"], [83, 1, 1, "", "digitize"], [84, 1, 1, "", "divide"], [85, 1, 1, "", "dot"], [87, 1, 1, "", "dstack"], [88, 2, 1, "", "dtype"], [89, 1, 1, "", "ediff1d"], [90, 1, 1, "", "einsum"], [91, 1, 1, "", "einsum_path"], [92, 1, 1, "", "empty"], [93, 1, 1, "", "empty_like"], [94, 1, 1, "", "equal"], [95, 1, 1, "", "erf"], [96, 1, 1, "", "exp"], [97, 1, 1, "", "exp2"], [98, 1, 1, "", "expand_dims"], [99, 1, 1, "", "expm1"], [100, 1, 1, "", "extract"], [101, 1, 1, "", "eye"], [102, 1, 1, "", "fabs"], [10, 0, 0, "module-0", "fft"], [121, 1, 1, "", "fill_diagonal"], [122, 1, 1, "", "finfo"], [123, 1, 1, "", "fix"], [124, 2, 1, "", "flatiter"], [125, 1, 1, "", "flatnonzero"], [126, 1, 1, "", "flip"], [127, 1, 1, "", "fliplr"], [128, 1, 1, "", "flipud"], [129, 1, 1, "", "float_power"], [130, 1, 1, "", "floor"], [131, 1, 1, "", "floor_divide"], [132, 1, 1, "", "fmax"], [133, 1, 1, "", "fmin"], [134, 1, 1, "", "fmod"], [135, 1, 1, "", "from_dlpack"], [136, 1, 1, "", "frombuffer"], [137, 1, 1, "", "fromfile"], [138, 1, 1, "", "fromfunction"], [139, 1, 1, "", "fromiter"], [140, 1, 1, "", "fromstring"], [141, 1, 1, "", "full"], [142, 1, 1, "", "full_like"], [143, 1, 1, "", "geomspace"], [144, 1, 1, "", "get_include"], [145, 1, 1, "", "gradient"], [146, 1, 1, "", "greater"], [147, 1, 1, "", "greater_equal"], [148, 1, 1, "", "histogram"], [149, 1, 1, "", "histogram_bin_edges"], [150, 1, 1, "", "hstack"], [151, 1, 1, "", "hypot"], [152, 1, 1, "", "identity"], [153, 1, 1, "", "iinfo"], [154, 1, 1, "", "imag"], [155, 1, 1, "", "indices"], [156, 1, 1, "", "inner"], [157, 1, 1, "", "invert"], [158, 1, 1, "", "isclose"], [159, 1, 1, "", "iscomplex"], [160, 1, 1, "", "iscomplexobj"], [161, 1, 1, "", "isfinite"], [162, 1, 1, "", "isinf"], [163, 1, 1, "", "isnan"], [164, 1, 1, "", "isneginf"], [165, 1, 1, "", "isposinf"], [166, 1, 1, "", "isreal"], [167, 1, 1, "", "isrealobj"], [168, 1, 1, "", "isscalar"], [169, 1, 1, "", "issubdtype"], [170, 1, 1, "", "issubsctype"], [171, 1, 1, "", "kron"], [172, 1, 1, "", "left_shift"], [173, 1, 1, "", "less"], [174, 1, 1, "", "less_equal"], [195, 1, 1, "", "linspace"], [196, 1, 1, "", "loadtxt"], [197, 1, 1, "", "log"], [198, 1, 1, "", "log10"], [199, 1, 1, "", "log1p"], [200, 1, 1, "", "log2"], [201, 1, 1, "", "logaddexp"], [202, 1, 1, "", "logaddexp2"], [203, 1, 1, "", "logical_and"], [204, 1, 1, "", "logical_not"], [205, 1, 1, "", "logical_or"], [206, 1, 1, "", "logical_xor"], [207, 1, 1, "", "logspace"], [208, 1, 1, "", "logsumexp"], [209, 1, 1, "", "mask_indices"], [210, 1, 1, "", "matmul"], [211, 1, 1, "", "max"], [212, 1, 1, "", "maximum"], [213, 1, 1, "", "mean"], [214, 1, 1, "", "median"], [215, 1, 1, "", "meshgrid"], [216, 5, 1, "", "mgrid"], [217, 1, 1, "", "min"], [218, 1, 1, "", "minimum"], [219, 1, 1, "", "mod"], [220, 1, 1, "", "modf"], [221, 1, 1, "", "moveaxis"], [222, 1, 1, "", "multiply"], [223, 1, 1, "", "nan_to_num"], [224, 1, 1, "", "nanargmax"], [225, 1, 1, "", "nanargmin"], [226, 1, 1, "", "nancumprod"], [227, 1, 1, "", "nancumsum"], [228, 1, 1, "", "nanmax"], [229, 1, 1, "", "nanmean"], [230, 1, 1, "", "nanmin"], [231, 1, 1, "", "nanprod"], [232, 1, 1, "", "nanstd"], [233, 1, 1, "", "nansum"], [234, 1, 1, "", "nanvar"], [235, 3, 1, "", "ndarray"], [332, 1, 1, "", "negative"], [333, 1, 1, "", "nextafter"], [334, 1, 1, "", "nonzero"], [335, 1, 1, "", "not_equal"], [336, 5, 1, "", "ogrid"], [337, 1, 1, "", "ones"], [338, 1, 1, "", "ones_like"], [339, 1, 1, "", "outer"], [340, 1, 1, "", "partition"], [341, 1, 1, "", "place"], [342, 1, 1, "", "positive"], [343, 1, 1, "", "power"], [344, 1, 1, "", "prod"], [345, 1, 1, "", "proj"], [346, 1, 1, "", "ptp"], [347, 1, 1, "", "put"], [348, 1, 1, "", "put_along_axis"], [349, 1, 1, "", "putmask"], [350, 1, 1, "", "rad2deg"], [351, 1, 1, "", "radians"], [470, 0, 0, "-", "random"], [401, 1, 1, "", "ravel"], [402, 1, 1, "", "real"], [403, 1, 1, "", "reciprocal"], [404, 1, 1, "", "reduce_hypot"], [405, 1, 1, "", "remainder"], [406, 1, 1, "", "repeat"], [407, 1, 1, "", "reshape"], [408, 1, 1, "", "result_type"], [409, 1, 1, "", "right_shift"], [410, 1, 1, "", "rint"], [411, 1, 1, "", "roll"], [412, 1, 1, "", "rollaxis"], [413, 1, 1, "", "round"], [414, 1, 1, "", "row_stack"], [415, 1, 1, "", "rsqrt"], [416, 1, 1, "", "searchsorted"], [417, 1, 1, "", "select"], [418, 1, 1, "", "shape"], [419, 1, 1, "", "sign"], [420, 1, 1, "", "signbit"], [421, 1, 1, "", "sin"], [422, 1, 1, "", "sinh"], [423, 1, 1, "", "sort"], [424, 1, 1, "", "sort_complex"], [425, 1, 1, "", "sqrt"], [426, 1, 1, "", "square"], [427, 1, 1, "", "squeeze"], [428, 1, 1, "", "stack"], [429, 1, 1, "", "std"], [430, 1, 1, "", "subtract"], [431, 1, 1, "", "sum"], [432, 1, 1, "", "swapaxes"], [433, 1, 1, "", "take"], [434, 1, 1, "", "take_along_axis"], [435, 1, 1, "", "tan"], [436, 1, 1, "", "tanh"], [437, 1, 1, "", "tensordot"], [438, 1, 1, "", "tile"], [439, 1, 1, "", "trace"], [440, 1, 1, "", "transpose"], [441, 1, 1, "", "tri"], [442, 1, 1, "", "tril"], [443, 1, 1, "", "tril_indices"], [444, 1, 1, "", "tril_indices_from"], [445, 1, 1, "", "trim_zeros"], [446, 1, 1, "", "triu"], [447, 1, 1, "", "triu_indices"], [448, 1, 1, "", "triu_indices_from"], [449, 1, 1, "", "true_divide"], [450, 1, 1, "", "trunc"], [451, 1, 1, "", "unique"], [452, 1, 1, "", "unwrap"], [453, 1, 1, "", "vander"], [454, 1, 1, "", "var"], [455, 1, 1, "", "vdot"], [456, 1, 1, "", "vstack"], [457, 1, 1, "", "where"], [458, 1, 1, "", "zeros"], [459, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[86, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[86, 3, 1, "", "T"], [86, 4, 1, "", "__eq__"], [86, 4, 1, "", "__ge__"], [86, 4, 1, "", "__getitem__"], [86, 4, 1, "", "__gt__"], [86, 4, 1, "", "__le__"], [86, 4, 1, "", "__len__"], [86, 4, 1, "", "__lt__"], [86, 4, 1, "", "__ne__"], [86, 4, 1, "", "__setitem__"], [86, 4, 1, "", "all"], [86, 4, 1, "", "any"], [86, 4, 1, "", "argmax"], [86, 4, 1, "", "argmin"], [86, 4, 1, "", "argsort"], [86, 4, 1, "", "asnumpy"], [86, 4, 1, "", "astype"], [86, 4, 1, "", "choose"], [86, 4, 1, "", "clip"], [86, 4, 1, "", "conj"], [86, 4, 1, "", "conjugate"], [86, 4, 1, "", "copy"], [86, 4, 1, "", "cumprod"], [86, 4, 1, "", "cumsum"], [86, 3, 1, "", "device"], [86, 4, 1, "", "diagonal"], [86, 4, 1, "", "dot"], [86, 3, 1, "", "dtype"], [86, 4, 1, "", "fill"], [86, 3, 1, "", "flags"], [86, 3, 1, "", "flat"], [86, 4, 1, "", "flatten"], [86, 4, 1, "", "get_array"], [86, 3, 1, "", "imag"], [86, 4, 1, "", "item"], [86, 3, 1, "", "itemsize"], [86, 4, 1, "", "max"], [86, 4, 1, "", "mean"], [86, 4, 1, "", "min"], [86, 3, 1, "", "nbytes"], [86, 3, 1, "", "ndim"], [86, 4, 1, "", "nonzero"], [86, 4, 1, "", "partition"], [86, 4, 1, "", "prod"], [86, 4, 1, "", "put"], [86, 4, 1, "", "ravel"], [86, 3, 1, "", "real"], [86, 4, 1, "", "repeat"], [86, 4, 1, "", "reshape"], [86, 4, 1, "", "round"], [86, 4, 1, "", "searchsorted"], [86, 3, 1, "", "shape"], [86, 3, 1, "", "size"], [86, 4, 1, "", "sort"], [86, 4, 1, "", "squeeze"], [86, 4, 1, "", "std"], [86, 3, 1, "", "strides"], [86, 4, 1, "", "sum"], [86, 4, 1, "", "swapaxes"], [86, 3, 1, "", "sycl_context"], [86, 3, 1, "", "sycl_device"], [86, 3, 1, "", "sycl_queue"], [86, 4, 1, "", "take"], [86, 4, 1, "", "to_device"], [86, 4, 1, "", "trace"], [86, 4, 1, "", "transpose"], [86, 3, 1, "", "usm_type"], [86, 4, 1, "", "var"]], "dpnp.dtype": [[88, 4, 1, "", "__eq__"], [88, 4, 1, "", "__ge__"], [88, 4, 1, "", "__getitem__"], [88, 4, 1, "", "__gt__"], [88, 4, 1, "", "__le__"], [88, 4, 1, "", "__len__"], [88, 4, 1, "", "__lt__"], [88, 4, 1, "", "__ne__"], [88, 3, 1, "", "alignment"], [88, 3, 1, "", "base"], [88, 3, 1, "", "byteorder"], [88, 3, 1, "", "char"], [88, 3, 1, "", "descr"], [88, 3, 1, "", "fields"], [88, 3, 1, "", "flags"], [88, 3, 1, "", "hasobject"], [88, 3, 1, "", "isalignedstruct"], [88, 3, 1, "", "isbuiltin"], [88, 3, 1, "", "isnative"], [88, 3, 1, "", "itemsize"], [88, 3, 1, "", "kind"], [88, 3, 1, "", "metadata"], [88, 3, 1, "", "name"], [88, 3, 1, "", "names"], [88, 3, 1, "", "ndim"], [88, 4, 1, "", "newbyteorder"], [88, 3, 1, "", "num"], [88, 3, 1, "", "shape"], [88, 3, 1, "", "str"], [88, 3, 1, "", "subdtype"], [88, 3, 1, "", "type"]], "dpnp.fft": [[103, 1, 1, "", "fft"], [104, 1, 1, "", "fft2"], [105, 1, 1, "", "fftfreq"], [106, 1, 1, "", "fftn"], [107, 1, 1, "", "fftshift"], [108, 1, 1, "", "hfft"], [109, 1, 1, "", "ifft"], [110, 1, 1, "", "ifft2"], [111, 1, 1, "", "ifftn"], [112, 1, 1, "", "ifftshift"], [113, 1, 1, "", "ihfft"], [114, 1, 1, "", "irfft"], [115, 1, 1, "", "irfft2"], [116, 1, 1, "", "irfftn"], [117, 1, 1, "", "rfft"], [118, 1, 1, "", "rfft2"], [119, 1, 1, "", "rfftfreq"], [120, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[124, 4, 1, "", "__eq__"], [124, 4, 1, "", "__ge__"], [124, 4, 1, "", "__getitem__"], [124, 4, 1, "", "__gt__"], [124, 4, 1, "", "__iter__"], [124, 4, 1, "", "__le__"], [124, 4, 1, "", "__lt__"], [124, 4, 1, "", "__ne__"], [124, 4, 1, "", "__next__"], [124, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[175, 1, 1, "", "cholesky"], [176, 1, 1, "", "cond"], [177, 1, 1, "", "det"], [178, 1, 1, "", "eig"], [179, 1, 1, "", "eigh"], [180, 1, 1, "", "eigvals"], [181, 1, 1, "", "eigvalsh"], [182, 1, 1, "", "inv"], [183, 1, 1, "", "lstsq"], [184, 1, 1, "", "matrix_power"], [185, 1, 1, "", "matrix_rank"], [186, 1, 1, "", "multi_dot"], [187, 1, 1, "", "norm"], [188, 1, 1, "", "pinv"], [189, 1, 1, "", "qr"], [190, 1, 1, "", "slogdet"], [191, 1, 1, "", "solve"], [192, 1, 1, "", "svd"], [193, 1, 1, "", "tensorinv"], [194, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[236, 6, 1, "", "T"], [237, 4, 1, "", "__abs__"], [238, 4, 1, "", "__add__"], [239, 4, 1, "", "__and__"], [240, 4, 1, "", "__bool__"], [241, 4, 1, "", "__complex__"], [242, 4, 1, "", "__copy__"], [243, 4, 1, "", "__eq__"], [244, 4, 1, "", "__float__"], [245, 4, 1, "", "__floordiv__"], [246, 4, 1, "", "__ge__"], [247, 4, 1, "", "__getitem__"], [248, 4, 1, "", "__gt__"], [249, 4, 1, "", "__iadd__"], [250, 4, 1, "", "__iand__"], [251, 4, 1, "", "__ifloordiv__"], [252, 4, 1, "", "__ilshift__"], [253, 4, 1, "", "__imod__"], [254, 4, 1, "", "__imul__"], [255, 4, 1, "", "__int__"], [256, 4, 1, "", "__invert__"], [257, 4, 1, "", "__ior__"], [258, 4, 1, "", "__ipow__"], [259, 4, 1, "", "__irshift__"], [260, 4, 1, "", "__isub__"], [261, 4, 1, "", "__itruediv__"], [262, 4, 1, "", "__ixor__"], [263, 4, 1, "", "__le__"], [264, 4, 1, "", "__len__"], [265, 4, 1, "", "__lshift__"], [266, 4, 1, "", "__lt__"], [267, 4, 1, "", "__matmul__"], [268, 4, 1, "", "__mod__"], [269, 4, 1, "", "__mul__"], [270, 4, 1, "", "__ne__"], [271, 4, 1, "", "__neg__"], [272, 4, 1, "", "__new__"], [273, 4, 1, "", "__or__"], [274, 4, 1, "", "__pos__"], [275, 4, 1, "", "__pow__"], [276, 4, 1, "", "__repr__"], [277, 4, 1, "", "__rshift__"], [278, 4, 1, "", "__setitem__"], [279, 4, 1, "", "__str__"], [280, 4, 1, "", "__sub__"], [281, 4, 1, "", "__truediv__"], [282, 4, 1, "", "__xor__"], [283, 4, 1, "", "all"], [284, 4, 1, "", "any"], [285, 4, 1, "", "argmax"], [286, 4, 1, "", "argmin"], [287, 4, 1, "", "argsort"], [288, 4, 1, "", "astype"], [289, 4, 1, "", "choose"], [290, 4, 1, "", "clip"], [291, 4, 1, "", "conj"], [292, 4, 1, "", "conjugate"], [293, 4, 1, "", "copy"], [294, 4, 1, "", "cumprod"], [295, 4, 1, "", "cumsum"], [296, 4, 1, "", "diagonal"], [297, 6, 1, "", "dtype"], [298, 4, 1, "", "fill"], [299, 6, 1, "", "flags"], [300, 6, 1, "", "flat"], [301, 4, 1, "", "flatten"], [302, 6, 1, "", "imag"], [303, 4, 1, "", "item"], [304, 6, 1, "", "itemsize"], [305, 4, 1, "", "max"], [306, 4, 1, "", "mean"], [307, 4, 1, "", "min"], [308, 6, 1, "", "nbytes"], [309, 6, 1, "", "ndim"], [310, 4, 1, "", "nonzero"], [311, 4, 1, "", "partition"], [312, 4, 1, "", "prod"], [313, 4, 1, "", "put"], [314, 4, 1, "", "ravel"], [315, 6, 1, "", "real"], [316, 4, 1, "", "repeat"], [317, 4, 1, "", "reshape"], [318, 4, 1, "", "round"], [319, 4, 1, "", "searchsorted"], [320, 6, 1, "", "shape"], [321, 6, 1, "", "size"], [322, 4, 1, "", "sort"], [323, 4, 1, "", "squeeze"], [324, 4, 1, "", "std"], [325, 6, 1, "", "strides"], [326, 4, 1, "", "sum"], [327, 4, 1, "", "swapaxes"], [328, 4, 1, "", "take"], [329, 4, 1, "", "trace"], [330, 4, 1, "", "transpose"], [331, 4, 1, "", "var"]], "dpnp.random": [[352, 2, 1, "", "RandomState"], [353, 1, 1, "", "beta"], [354, 1, 1, "", "binomial"], [355, 1, 1, "", "bytes"], [356, 1, 1, "", "chisquare"], [357, 1, 1, "", "choice"], [358, 1, 1, "", "dirichlet"], [359, 1, 1, "", "exponential"], [360, 1, 1, "", "f"], [361, 1, 1, "", "gamma"], [362, 1, 1, "", "geometric"], [363, 1, 1, "", "gumbel"], [364, 1, 1, "", "hypergeometric"], [365, 1, 1, "", "laplace"], [366, 1, 1, "", "logistic"], [367, 1, 1, "", "lognormal"], [368, 1, 1, "", "logseries"], [369, 1, 1, "", "multinomial"], [370, 1, 1, "", "multivariate_normal"], [371, 1, 1, "", "negative_binomial"], [372, 1, 1, "", "noncentral_chisquare"], [373, 1, 1, "", "noncentral_f"], [374, 1, 1, "", "normal"], [375, 1, 1, "", "pareto"], [376, 1, 1, "", "permutation"], [377, 1, 1, "", "poisson"], [378, 1, 1, "", "power"], [379, 1, 1, "", "rand"], [380, 1, 1, "", "randint"], [381, 1, 1, "", "randn"], [382, 1, 1, "", "random"], [383, 1, 1, "", "random_integers"], [384, 1, 1, "", "random_sample"], [385, 1, 1, "", "ranf"], [386, 1, 1, "", "rayleigh"], [387, 1, 1, "", "sample"], [388, 1, 1, "", "seed"], [389, 1, 1, "", "shuffle"], [390, 1, 1, "", "standard_cauchy"], [391, 1, 1, "", "standard_exponential"], [392, 1, 1, "", "standard_gamma"], [393, 1, 1, "", "standard_normal"], [394, 1, 1, "", "standard_t"], [395, 1, 1, "", "triangular"], [396, 1, 1, "", "uniform"], [397, 1, 1, "", "vonmises"], [398, 1, 1, "", "wald"], [399, 1, 1, "", "weibull"], [400, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[352, 4, 1, "", "__eq__"], [352, 4, 1, "", "__ge__"], [352, 4, 1, "", "__gt__"], [352, 4, 1, "", "__le__"], [352, 4, 1, "", "__lt__"], [352, 4, 1, "", "__ne__"], [352, 4, 1, "", "get_state"], [352, 4, 1, "", "get_sycl_device"], [352, 4, 1, "", "get_sycl_queue"], [352, 4, 1, "", "normal"], [352, 4, 1, "", "rand"], [352, 4, 1, "", "randint"], [352, 4, 1, "", "randn"], [352, 4, 1, "", "random_sample"], [352, 4, 1, "", "standard_normal"], [352, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 71, 74, 86, 88, 89, 104, 106, 108, 110, 111, 113, 115, 116, 118, 120, 121, 136, 137, 183, 185, 187, 192, 297, 330, 352, 353, 354, 359, 360, 361, 363, 364, 365, 366, 367, 369, 371, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 438, 467], "0": [0, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 42, 43, 44, 45, 46, 53, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 148, 149, 152, 155, 156, 158, 161, 162, 163, 164, 165, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 195, 196, 197, 198, 199, 200, 204, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 293, 296, 298, 302, 303, 315, 318, 320, 322, 324, 329, 330, 331, 334, 336, 337, 338, 341, 343, 344, 345, 346, 347, 348, 351, 352, 354, 359, 361, 362, 363, 365, 366, 367, 369, 370, 371, 374, 376, 377, 378, 379, 382, 384, 385, 386, 387, 390, 393, 395, 396, 397, 403, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 457, 458, 459, 467], "00": [67, 91, 103, 421], "000": [223, 354], "00000000005e": 99, "00000000e": [103, 223], "000000082740371e": 99, "000000e": [67, 421], "00001e10": [15, 158], "0001e10": 158, "000e": 91, "000j": 223, "002": 223, "00867716": 356, "01": 91, "02": [91, 223], "03": 223, "03088525e": 92, "0396842": 207, "04": 91, "04719755": 351, "04921661": 352, "05": [15, 91, 158], "0614962j": 104, "06310682": 352, "07": 223, "07944154": [72, 190], "08": [15, 67, 91, 129, 158, 370, 421], "08156915": 352, "0943951": 351, "09640474": 202, "09861229": [72, 190, 199], "0dev0": 6, "0j": [18, 85, 86, 159, 160, 166, 167, 210, 302, 315, 419], "0th": 437, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 46, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 154, 155, 156, 158, 159, 160, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 287, 288, 293, 296, 298, 301, 302, 303, 311, 315, 320, 322, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 356, 357, 359, 361, 363, 365, 366, 367, 369, 370, 371, 374, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 391, 393, 396, 401, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467], "10": [0, 4, 13, 22, 24, 28, 29, 45, 57, 63, 72, 73, 74, 78, 79, 82, 83, 86, 88, 90, 91, 99, 100, 107, 119, 141, 143, 148, 149, 154, 158, 171, 172, 197, 198, 199, 200, 207, 208, 214, 222, 317, 346, 348, 352, 354, 364, 376, 404, 408, 409, 411, 413, 416, 428, 434, 442, 443, 444, 446, 447, 448, 457], "100": [78, 119, 143, 158, 171, 186, 207, 364, 390, 452], "1000": [53, 143, 186, 207, 353, 354, 359, 361, 363, 364, 365, 366, 367, 374, 375, 378, 380, 382, 385, 387, 393, 397, 398, 399, 400], "10000": [74, 186, 362, 377, 386, 396], "100000": 371, "1000000": [390, 392, 394, 395], "1024": 0, "105": 91, "11": [28, 29, 45, 68, 78, 79, 86, 100, 145, 187, 317, 371, 380, 413, 416, 422, 442, 443, 444, 446, 447, 448, 457], "110": [90, 156], "111111": 223, "113": 201, "11570901": 352, "1179187": 352, "118033988749895": 429, "119": 90, "1196081": 352, "12": [10, 28, 29, 44, 71, 76, 78, 79, 83, 88, 90, 100, 104, 154, 207, 344, 346, 351, 376, 416, 442, 443, 444, 446, 447, 448, 457], "120": [73, 76], "123": [86, 91, 303], "125": [6, 129, 343, 453], "127": 143, "128": [0, 143, 223], "12th": 90, "13": [10, 28, 29, 48, 78, 79, 85, 88, 90, 157, 210, 416, 443, 444, 447, 448], "130": 90, "134": 156, "13436424": 352, "135": 26, "13710533": 356, "139884456208480": 14, "14": [28, 29, 47, 48, 78, 79, 85, 123, 156, 157, 416, 437, 443, 444, 447, 448], "140": 452, "140053638309840": 19, "14159265": [21, 26, 75, 351], "14423775e": 103, "15": [28, 29, 74, 78, 79, 83, 90, 108, 113, 188, 198, 376, 416, 443, 444, 447, 448], "150": 76, "15888336": 207, "16": [6, 47, 78, 79, 88, 103, 129, 139, 143, 145, 222, 343, 435, 443, 444, 447, 448], "16227766": [176, 404], "16394577": 352, "164": 202, "166": 202, "16j": 103, "17": [103, 104], "17157288": [179, 181], "17281316e": 103, "177": [143, 207], "17j": 103, "18": [6, 73, 88, 89, 90, 106, 187, 207], "180": [26, 75, 76, 90, 350, 452, 475], "1805": 10, "18236388": 352, "18557831": 352, "1887902": 351, "19": [10, 69, 88, 452], "1923875335537315": 381, "19245009": 415, "1924881e": 129, "1965": 10, "19722458": 72, "1d": [89, 347, 348, 434], "1e": [15, 99, 158, 178, 188, 198, 199, 201, 202, 370], "1e10": [15, 158], "1j": [11, 12, 18, 33, 60, 61, 86, 114, 154, 159, 166, 178, 192, 302, 315, 424, 426], "1th": 437, "2": [0, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 47, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 159, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 288, 293, 296, 298, 301, 303, 311, 320, 330, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 350, 351, 352, 356, 360, 364, 370, 376, 379, 381, 392, 394, 395, 398, 400, 401, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 418, 420, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "20": [6, 73, 83, 90, 119, 155, 158, 171, 172, 187, 348, 354, 369, 416, 434, 452], "20000": 354, "2007": 10, "200e": 91, "20477401j": 104, "2048": 0, "21": [74, 88], "210": 76, "215": 207, "21941987": 352, "21968665": 352, "22": 347, "220": 452, "222222": 223, "22460635e": 435, "22464680e": 103, "22497216": 187, "22776602": 207, "23": [6, 352], "230": 90, "23598776": 351, "23606798": 187, "24": [28, 29, 71, 73, 86, 89, 90, 156, 171, 193, 320, 344, 437, 439], "240": 76, "24264069": 187, "24544512": 352, "247219128924647": 232, "25": [88, 90, 95, 105, 145, 148, 149, 182, 195, 222, 234, 381, 390, 453, 454], "251": 6, "255": [47, 49], "25506903": 352, "256": [0, 143], "26": [50, 90], "260": 452, "26618007j": 200, "27": [54, 129, 207, 343, 415, 453], "270": 76, "28": 90, "28000000e": 223, "2800000e": 223, "283185307179586": 452, "28318531": 452, "28352814": 352, "28904982": 202, "297": 10, "299": 6, "2d": [192, 210], "2e": 74, "2f": 0, "2j": [60, 61, 85, 103, 154, 159, 166, 179, 181, 210, 419, 424, 455], "2k": 452, "3": [0, 3, 4, 13, 20, 21, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 47, 50, 51, 52, 54, 57, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 112, 113, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 145, 148, 149, 150, 151, 152, 154, 155, 156, 159, 160, 166, 167, 168, 171, 172, 176, 177, 178, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 293, 296, 301, 303, 311, 320, 322, 330, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 347, 351, 352, 356, 360, 367, 370, 376, 379, 380, 381, 391, 395, 398, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 418, 420, 423, 424, 425, 427, 428, 429, 430, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459], "30": [71, 76, 90, 119, 348, 351, 434, 455], "300": [76, 452], "3003003": 403, "301": 10, "30102999566": 198, "3012989": 422, "30258509": [72, 208], "308": 223, "308j": 223, "31": [50, 143], "312": 92, "316": 207, "32": [88, 90, 143, 231, 233, 437], "33": 403, "330": 76, "333": 186, "33333333": 223, "3333333e": 223, "33486982e": 103, "33836967": 352, "340": 452, "34074171": 352, "34132519": 207, "34846923": 187, "34960421": 207, "35": [90, 362], "35106603e": 187, "35355338": 415, "36": 71, "360": 452, "37": 413, "371139e": 67, "376": 6, "38": [156, 354], "380": 452, "38268343": 179, "38268343j": 179, "38629436": 72, "38885": 354, "389056099": [96, 99], "39": 6, "39295758": 352, "397": 6, "3e": [0, 74], "3j": [85, 210, 424], "3rd": 59, "3x3": 209, "3x8000": 391, "4": [0, 13, 14, 20, 28, 29, 32, 33, 42, 44, 45, 47, 49, 51, 57, 58, 59, 62, 65, 67, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 100, 104, 105, 107, 108, 109, 110, 111, 112, 113, 119, 121, 125, 126, 129, 131, 132, 133, 137, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 159, 166, 171, 174, 177, 182, 184, 185, 187, 190, 193, 194, 195, 200, 203, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 224, 225, 227, 229, 232, 234, 293, 296, 301, 311, 320, 322, 330, 334, 336, 338, 343, 344, 346, 347, 351, 352, 353, 356, 376, 381, 397, 401, 405, 406, 407, 411, 412, 413, 414, 419, 423, 425, 428, 429, 430, 432, 433, 437, 438, 440, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 459], "40": [90, 119, 172, 348, 434], "40882036": 352, "4096": 0, "41421356": [176, 187], "420": 452, "429": 6, "44": [341, 347], "4400": [90, 437], "443469": 207, "44509285e": 103, "45": [18, 26], "4532": [90, 437], "46": 90, "460": 452, "46394577": 352, "464": 207, "4664": [90, 437], "47": 6, "4730": [90, 437], "4796": [90, 437], "48": [6, 71], "48093112": 352, "4874": [90, 437], "48927254": 352, "49": 6, "4928": [90, 437], "49543509": 352, "49778714": 452, "499128": 85, "4d": 192, "4j": [154, 455], "4x4": [443, 447], "5": [0, 6, 13, 14, 19, 20, 27, 28, 42, 45, 46, 47, 49, 50, 51, 55, 57, 59, 62, 65, 66, 69, 71, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 95, 100, 104, 105, 107, 119, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 143, 145, 148, 149, 150, 151, 154, 155, 156, 159, 166, 171, 172, 175, 179, 181, 182, 186, 187, 191, 195, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 229, 232, 288, 293, 334, 336, 337, 338, 343, 346, 347, 351, 352, 353, 354, 356, 359, 371, 375, 376, 377, 378, 381, 384, 399, 401, 403, 405, 407, 409, 410, 411, 412, 413, 414, 416, 419, 424, 428, 429, 431, 432, 433, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458, 459], "50": [104, 119, 143, 171, 201, 202, 207, 348, 434, 437, 457], "500": [171, 452], "5018": [90, 437], "5091786": 68, "51": 6, "512": 0, "5162": [90, 437], "52069395e": 103, "52359878": 351, "52928804": 352, "5306": [90, 437], "5399045e": 129, "54": 352, "540": 452, "542": 6, "54288406": 352, "54465213": 352, "548739": 422, "54930614": 27, "55": [341, 347], "5555555555555554": 234, "56": 6, "562": 207, "5620499351813308": [11, 12], "56920387": 352, "5707963267948966": 23, "57079633": [18, 26, 351, 452], "58997253": 352, "591953": 68, "5e": [201, 202], "5j": [216, 336, 424], "6": [0, 4, 6, 13, 20, 28, 29, 42, 45, 49, 50, 57, 59, 65, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 99, 100, 105, 108, 119, 126, 129, 142, 145, 150, 154, 155, 156, 171, 187, 188, 189, 192, 193, 195, 207, 209, 226, 227, 231, 293, 303, 320, 334, 338, 341, 343, 346, 352, 369, 371, 376, 381, 401, 407, 411, 412, 413, 414, 424, 428, 430, 431, 432, 433, 437, 439, 442, 443, 444, 446, 447, 448, 449, 452, 455, 456, 457, 459], "60": [71, 76, 90, 348, 434, 437, 452, 457], "600": 171, "60943791": 72, "61799388": 351, "62": 156, "6227766": 143, "62318272": 356, "62341325": 143, "624": 91, "63": 143, "63317787e": 435, "63522211": 352, "63836967": 352, "64": [0, 4, 90, 129, 143, 231, 233, 343, 413], "64000": 90, "65745445": 22, "66519143": 351, "6666666666666665": 229, "67": 90, "67305985": 136, "673174": 352, "67718303": 352, "69295758": 352, "69314718": [72, 190, 199], "6990877": 352, "6j": [154, 455], "7": [13, 15, 20, 42, 55, 57, 65, 69, 71, 74, 77, 78, 79, 81, 82, 84, 86, 89, 96, 100, 126, 130, 143, 145, 156, 158, 171, 187, 192, 209, 214, 219, 222, 303, 334, 345, 346, 352, 376, 405, 408, 410, 411, 430, 431, 432, 433, 437, 442, 443, 444, 446, 447, 448, 449, 450, 452, 455, 457], "70": [171, 455, 457], "700": 171, "700e": 91, "70710677": [86, 302, 315], "70710678": [176, 178], "70710678j": 178, "70882036": 352, "71238898": 351, "718281828": [96, 99], "72": 71, "720": [73, 452], "72075441": 207, "72538256": 24, "74165739": 187, "742278e": 421, "74596669": 187, "74921661": 352, "75": [45, 95, 105, 145, 149, 182, 195], "754": 122, "75958653": 351, "76096244": 352, "76377462": 352, "77447665": 202, "78539816": [18, 25, 26, 452], "78927254": 352, "79175947": 72, "79769313e": 223, "7j": 345, "8": [4, 13, 15, 42, 54, 57, 65, 71, 77, 78, 79, 81, 82, 86, 88, 90, 91, 100, 103, 105, 119, 126, 129, 143, 145, 154, 158, 177, 187, 190, 192, 193, 195, 207, 209, 320, 334, 343, 344, 346, 352, 376, 395, 411, 415, 421, 433, 437, 439, 442, 443, 444, 446, 447, 448, 452, 453, 457], "80": [88, 90, 457], "8000": 391, "80226506": 352, "81715362": 352, "827941": [143, 207], "82842712": [179, 181], "84288406": 352, "84401099": 352, "84743374": 352, "84803548": 187, "85": 90, "86": 156, "87649168": 201, "88": 89, "88178420e": 103, "88997253": 352, "89920014": 356, "8f": 88, "8j": 455, "9": [4, 13, 42, 57, 65, 71, 74, 77, 78, 79, 81, 84, 86, 90, 92, 100, 103, 106, 107, 112, 123, 129, 131, 139, 143, 145, 158, 178, 183, 187, 188, 189, 192, 207, 209, 222, 223, 303, 334, 346, 352, 354, 356, 376, 411, 425, 430, 437, 442, 443, 444, 446, 447, 448, 449, 452, 453, 457], "90": [18, 76, 350, 457], "917152": 436, "92387953": 179, "92387953j": 179, "94": 90, "94591015": 72, "95": 183, "95799250e": 103, "98": 210, "98024613": 207, "99": [89, 199, 348], "99322285": 22, "99532227": 95, "996272": 436, "99822295": 24, "99853728": 95, "999": 91, "9990000e": 223, "99959305": 95, "99989938": 95, "9999": 223, "99997791": 95, "999999e": 158, "A": [10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 109, 110, 111, 117, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 151, 152, 154, 155, 157, 161, 162, 163, 164, 165, 172, 173, 174, 175, 179, 180, 181, 183, 185, 186, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 216, 218, 219, 222, 226, 227, 231, 233, 288, 293, 301, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 345, 350, 351, 352, 354, 371, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 401, 403, 405, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 432, 433, 435, 436, 437, 438, 440, 441, 443, 445, 447, 449, 450, 453, 457, 458, 459, 475], "AND": [14, 47, 48, 49, 50, 157, 203, 204, 205, 206], "And": [4, 40, 41, 78, 86, 288, 443, 447], "Be": 178, "Being": 3, "But": [4, 88], "By": [28, 29, 41, 71, 86, 104, 108, 110, 114, 143, 183, 195, 207, 210, 211, 213, 217, 224, 225, 228, 229, 230, 231, 232, 233, 234, 288, 401, 406, 411, 429, 433, 441, 443, 445, 447, 454], "For": [0, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 301, 302, 303, 315, 317, 320, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467, 475], "If": [4, 10, 11, 12, 14, 15, 19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 45, 57, 59, 69, 71, 72, 73, 74, 77, 81, 82, 85, 86, 88, 89, 90, 91, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 121, 122, 123, 126, 132, 133, 140, 143, 145, 148, 149, 150, 154, 155, 156, 158, 164, 165, 166, 175, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 207, 208, 211, 212, 213, 215, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 322, 341, 344, 347, 348, 352, 374, 396, 402, 404, 406, 407, 411, 413, 414, 416, 423, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 452, 453, 454, 455, 456, 457, 467, 475], "In": [4, 10, 28, 29, 73, 74, 91, 109, 110, 111, 114, 145, 175, 180, 186, 189, 202, 207, 226, 227, 229, 231, 233, 344, 347, 352, 396, 407, 431, 433, 450], "It": [4, 10, 14, 19, 28, 29, 57, 73, 74, 83, 85, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 121, 145, 179, 181, 202, 210, 213, 224, 225, 226, 227, 228, 229, 230, 232, 234, 344, 429, 431, 433, 454, 475], "Its": [57, 193, 348, 439], "NOT": [48, 157, 203, 204, 205, 206], "No": [36, 90, 175], "Not": [14, 19, 161, 223, 226, 227, 228, 230, 231, 233, 344], "OR": [19, 47, 48, 49, 50, 157, 203, 204, 205, 206], "On": 4, "One": [42, 43, 44, 71, 87, 88, 114, 407], "Or": 145, "That": 209, "The": [3, 4, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 52, 54, 57, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 160, 161, 162, 163, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 288, 293, 301, 302, 311, 315, 320, 332, 333, 334, 335, 336, 337, 338, 342, 343, 344, 346, 347, 348, 350, 351, 352, 355, 357, 358, 368, 373, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 447, 448, 449, 450, 453, 454, 456, 457, 458, 459, 467, 471, 475], "Then": [10, 37, 39, 209], "There": [10, 195], "These": [4, 88, 90, 91, 98, 209, 221, 348, 434, 443, 447, 467, 471], "To": [4, 108, 114, 129, 334, 452], "With": [28, 29, 45, 69, 187, 211, 217, 224, 225, 231, 233, 344, 431], "_": [0, 149, 428], "__array_interface__": 88, "__bool__": 467, "__dlpack__": 135, "__dlpack_device__": 135, "__eq__": [86, 88, 124, 352], "__ge__": [86, 88, 124, 352], "__getitem__": [86, 88, 124], "__gt__": [86, 88, 124, 352], "__iter__": 124, "__le__": [86, 88, 124, 352], "__len__": [86, 88], "__lt__": [86, 88, 124, 352], "__main__": 0, "__name__": 0, "__ne__": [86, 88, 124, 352], "__next__": 124, "__setitem__": [86, 124], "__sycl_usm_array_interface__": 38, "_dtypes_list": 0, "a1": [33, 34], "a2": [33, 34], "a_": 10, "a_k": 10, "a_m": 10, "a_max": 57, "a_min": 57, "a_resamp": 114, "ab": [6, 10, 12, 15, 158], "abc": 90, "abcd": 91, "about": [37, 39, 86, 122, 178, 299, 467], "abov": [3, 72, 77, 80, 106, 111, 155, 189, 208, 223, 404, 441, 442, 446], "absolut": [6, 11, 15, 18, 102, 158, 190, 232, 234, 345, 429, 452, 454, 475], "accept": [30, 90, 352, 423, 443, 447], "access": [10, 78, 79, 121, 209, 443, 447, 467], "accord": [14, 19, 45, 53, 88, 122, 178, 179, 180, 181, 208, 213, 229, 232, 234, 404, 409, 429, 454], "accordingli": [228, 230], "account": 407, "accumul": [72, 73, 74, 90, 148, 226, 227, 231, 233, 344, 431, 439], "accur": [88, 99, 145, 199, 201], "accuraci": [109, 110, 111, 114], "achiev": 90, "across": [81, 149, 226, 227, 231, 233], "activ": 4, "actual": [88, 148, 149, 175, 186], "ad": [15, 88, 91, 98, 114, 158, 177, 190, 202, 452, 471], "add": [6, 88, 475], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [72, 175, 229], "address": 88, "adjac": 452, "advanc": 90, "advers": 90, "advis": 4, "affect": [20, 81, 90, 121, 148, 149], "after": [87, 121, 333, 371, 411], "ag": 88, "against": [15, 28, 29, 51, 52, 57, 69, 144, 158, 187, 188, 211, 217, 224, 225, 231, 233, 344, 348, 431, 434], "ai": [3, 348, 434], "ai_max": 434, "ai_min": 434, "ainv": [182, 193], "al": 10, "algebra": [460, 471], "algorithm": [10, 90, 91, 103, 109, 117], "alia": [10, 16, 17, 84, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 122, 219, 235, 352, 382, 385, 387, 405, 414, 449, 456], "alias": [9, 108, 109, 114], "align": 88, "all": [4, 6, 9, 15, 19, 33, 34, 41, 45, 58, 69, 76, 82, 86, 87, 88, 90, 91, 96, 97, 99, 101, 104, 106, 107, 110, 111, 112, 121, 126, 127, 128, 136, 137, 139, 143, 145, 150, 152, 175, 185, 188, 195, 207, 211, 217, 224, 225, 228, 230, 288, 291, 298, 311, 344, 354, 411, 414, 427, 431, 456, 467, 475], "allclos": [6, 33, 158, 182, 188, 189, 191, 192, 194], "alloc": [3, 4, 20, 32, 35, 36, 37, 38, 39, 41, 45, 63, 72, 77, 78, 80, 86, 92, 93, 101, 105, 119, 123, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 164, 165, 195, 196, 207, 208, 209, 213, 216, 229, 232, 234, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 404, 427, 429, 441, 443, 447, 453, 454, 458, 459], "allow": [41, 86, 90, 148, 149, 202, 209, 288, 317, 433, 467], "alltru": 6, "almost": [178, 443], "along": [3, 4, 14, 16, 17, 19, 28, 29, 30, 45, 58, 59, 69, 72, 73, 74, 77, 78, 80, 81, 82, 86, 87, 89, 100, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 117, 121, 126, 127, 128, 132, 133, 138, 143, 145, 150, 155, 187, 189, 193, 194, 195, 207, 208, 211, 212, 213, 214, 215, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 285, 286, 287, 294, 295, 305, 307, 312, 313, 324, 326, 328, 329, 331, 341, 344, 346, 347, 348, 404, 406, 411, 412, 414, 423, 428, 429, 431, 433, 434, 437, 438, 439, 443, 444, 447, 448, 452, 454, 456, 467], "alpha": [353, 358, 359, 375, 378], "alreadi": [4, 10, 36, 42, 43, 44, 339], "also": [3, 10, 13, 15, 18, 20, 26, 47, 49, 50, 64, 84, 86, 88, 90, 94, 98, 106, 111, 117, 129, 131, 132, 133, 134, 138, 140, 145, 146, 147, 148, 151, 158, 172, 173, 174, 175, 201, 202, 209, 212, 218, 219, 221, 222, 320, 334, 335, 343, 390, 405, 409, 430, 433, 449, 467], "alter": 81, "altern": [3, 4, 14, 19, 73, 74, 85, 86, 210, 211, 213, 217, 226, 227, 229, 231, 232, 233, 234, 330, 344, 429, 431, 454], "although": [18, 88, 110, 111, 112, 438], "alwai": [4, 10, 30, 35, 41, 81, 86, 89, 102, 129, 179, 181, 232, 234, 288, 334, 407, 424, 429, 454], "amax": [6, 211], "ambigu": 467, "amin": [6, 217], "among": 89, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 167, 172, 173, 174, 177, 180, 183, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 287, 288, 289, 290, 293, 303, 305, 311, 313, 316, 317, 320, 322, 323, 327, 328, 330, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 359, 360, 362, 371, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 467, 475], "anaconda": [3, 4], "analog": [104, 106, 108, 110, 111, 113], "analysi": 10, "analyt": 3, "angl": [6, 10, 25, 26, 75, 76, 350, 351, 452, 475], "ani": [3, 6, 14, 15, 30, 32, 35, 36, 37, 38, 39, 41, 51, 52, 63, 77, 80, 82, 86, 88, 90, 91, 104, 106, 110, 111, 121, 141, 142, 143, 145, 149, 150, 160, 167, 168, 184, 194, 195, 207, 209, 228, 230, 288, 352, 396, 423, 453, 467], "anoth": [4, 65, 86, 100, 110, 111, 135, 293, 313, 341, 347, 412], "answer": 354, "anti": [81, 121], "anyth": 88, "ap": 183, "api": [0, 2, 3, 6, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 88, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "appear": [98, 127, 128], "append": [0, 6, 82, 89, 91, 98, 109, 110, 111, 172], "appli": [28, 29, 30, 45, 53, 90, 223, 408, 437], "applic": [10, 88], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [86, 88, 109, 110, 111, 320], "appropri": [4, 28, 29, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 144, 194, 224, 225, 228, 230, 352, 380, 383, 433, 467], "approxim": 122, "ar": [3, 4, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 143, 145, 146, 147, 148, 149, 151, 156, 157, 158, 161, 162, 163, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 310, 311, 320, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 377, 378, 380, 383, 384, 386, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 467, 475], "arang": [0, 6, 13, 28, 29, 42, 43, 44, 45, 46, 57, 64, 76, 77, 78, 79, 81, 84, 85, 86, 90, 94, 96, 97, 99, 100, 103, 125, 126, 129, 134, 142, 143, 145, 148, 155, 156, 171, 187, 195, 198, 199, 203, 204, 205, 206, 207, 209, 210, 211, 215, 217, 219, 222, 296, 335, 338, 341, 343, 347, 351, 376, 405, 408, 411, 430, 437, 439, 443, 444, 447, 448, 449, 457, 459], "arbitrari": [40, 85, 88, 90, 156, 210, 408, 443, 447], "arbitrarili": 90, "arc": [18, 25], "arcco": [6, 22, 23, 25, 26, 67], "arccosh": [6, 21, 24, 27, 68], "arcsin": [6, 21, 24, 25, 26, 421], "arcsinh": [6, 22, 23, 27, 422], "arctan": [6, 18, 21, 23, 26, 27, 435], "arctan2": [6, 18, 25], "arctanh": [6, 22, 24, 25, 26, 436], "arg": [51, 352], "arg1": [169, 170], "arg2": [169, 170], "argmax": [0, 6, 29, 86, 224, 348, 434, 467], "argmin": [6, 28, 86, 225, 434, 467], "argpartit": [6, 30, 348, 434, 467], "argsort": [6, 86, 348, 416, 423, 434, 440, 467], "argument": [0, 10, 11, 12, 13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 47, 48, 49, 50, 53, 54, 55, 57, 59, 64, 67, 68, 75, 76, 84, 85, 86, 88, 91, 95, 96, 97, 99, 129, 130, 131, 132, 133, 134, 151, 154, 157, 168, 169, 170, 172, 186, 187, 198, 199, 200, 201, 202, 209, 210, 212, 218, 219, 220, 222, 317, 330, 332, 333, 342, 343, 345, 347, 350, 351, 403, 405, 408, 409, 410, 415, 419, 420, 421, 422, 428, 430, 435, 436, 437, 449, 450, 467, 475], "argwher": [6, 334], "ari": [42, 43, 44, 89], "arithmet": [45, 143, 213, 214, 229, 232, 234, 342, 429, 431, 454, 460, 471], "around": [6, 86, 143, 347, 413], "arr": [79, 88, 149, 349, 376, 444, 448], "arr2": 88, "arr_t": [41, 86, 288], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 242, 285, 286, 287, 288, 289, 290, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 471, 475], "array2str": 6, "array_equ": 6, "array_equiv": [6, 33], "array_lik": [32, 35, 36, 37, 38, 39, 40, 45, 63, 65, 77, 80, 89, 100, 141, 142, 143, 160, 167, 195, 207, 341, 347, 348, 352, 418, 433, 437, 453], "array_of_diagon": 81, "array_repr": 6, "array_split": [6, 59], "array_str": 6, "arrays_and_dtyp": 408, "art": 10, "asanyarrai": [6, 36, 39], "asarrai": [4, 6, 35, 37, 39, 40], "asarray_chkfinit": [6, 35, 36], "ascend": [179, 181, 416], "ascii": 88, "ascontiguousarrai": [6, 35, 36, 39], "asfarrai": [6, 35, 36], "asfortranarrai": [6, 35, 36, 37], "asmatrix": 6, "asnumpi": 86, "aspect": 88, "assembl": [59, 87, 150, 414, 428, 456], "assign": [86, 298, 320, 443, 447], "associ": [45, 148, 149, 467], "assum": [10, 45, 91, 108, 114, 185, 188, 192, 209], "astyp": [6, 86, 143, 334], "atleast_1d": [6, 43, 44, 98], "atleast_2d": [6, 42, 44, 98], "atleast_3d": [6, 42, 43, 98], "atol": [15, 158], "attain": 0, "attempt": [85, 186], "attribut": [86, 88, 93, 122, 142, 153, 189, 338, 459, 460], "automat": [148, 149], "avail": [2, 3, 4, 10, 66, 70, 88, 95, 214, 220, 224, 225, 228, 230, 231, 460, 467], "averag": [6, 86, 213, 229, 306, 431, 471], "avg": 45, "avoid": [43, 44, 108, 114], "aweight": 70, "ax": [14, 19, 28, 29, 45, 69, 72, 82, 85, 86, 90, 98, 104, 106, 107, 110, 111, 112, 115, 116, 118, 120, 126, 145, 156, 187, 191, 193, 194, 208, 210, 211, 213, 217, 221, 224, 225, 228, 229, 230, 231, 232, 233, 234, 327, 330, 339, 344, 404, 411, 412, 427, 429, 431, 432, 437, 438, 439, 440, 454], "axi": [14, 16, 17, 19, 28, 29, 30, 45, 58, 59, 69, 71, 72, 73, 74, 81, 82, 86, 87, 89, 90, 98, 100, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 117, 126, 127, 128, 132, 133, 138, 143, 145, 150, 155, 183, 187, 195, 207, 208, 210, 211, 212, 213, 214, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 287, 294, 295, 301, 305, 306, 307, 311, 312, 313, 316, 322, 323, 324, 326, 328, 330, 331, 340, 341, 344, 346, 347, 348, 401, 404, 406, 407, 411, 412, 414, 423, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 452, 454, 456, 467], "axis1": [81, 86, 296, 327, 329, 432, 439], "axis2": [81, 86, 296, 327, 329, 432, 439], "axisa": 71, "axisb": 71, "axisc": 71, "axiserror": [30, 423], "b": [10, 13, 15, 28, 29, 33, 34, 47, 50, 58, 59, 65, 71, 74, 85, 86, 87, 88, 90, 91, 94, 136, 137, 146, 147, 150, 156, 158, 171, 173, 174, 177, 183, 186, 187, 188, 190, 191, 192, 193, 194, 203, 205, 210, 211, 217, 333, 335, 339, 343, 353, 408, 414, 428, 437, 438, 445, 455, 456, 475], "back": [86, 138, 301, 401, 407, 412, 445], "backend": [2, 144, 355, 357, 358, 368, 373, 389], "backward": [10, 41, 86, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 145, 288, 411, 412], "bad": 364, "bartlett": 6, "base": [0, 4, 88, 90, 97, 100, 129, 143, 148, 149, 192, 197, 198, 199, 200, 201, 202, 207, 208, 210, 341, 343, 347, 349], "base_repr": 6, "basic": [53, 90, 467, 471], "batch": [115, 116, 118, 120], "bc": [177, 190], "bcde": 91, "becaus": [10, 14, 19, 108, 114, 452, 467], "becom": [10, 86, 148, 330], "been": [87, 348, 412, 434], "befor": [4, 30, 59, 72, 86, 89, 109, 110, 111, 127, 128, 194, 208, 211, 217, 232, 234, 311, 322, 344, 404, 411, 412, 423, 429, 431, 438, 454, 455], "begin": [89, 91, 143, 195, 207], "behav": [196, 347], "behavior": [86, 293, 438], "behaviour": 223, "behind": [86, 311], "being": [3, 88, 132, 133, 212, 218], "belong": [83, 148], "below": [0, 4, 9, 77, 80, 88, 114, 185, 441, 442, 446, 452, 467], "best": 91, "beta": [6, 363], "between": [15, 20, 53, 82, 89, 122, 137, 140, 145, 156, 158, 195, 207, 369, 383, 430, 452], "beyond": [4, 411], "bia": 70, "big": 88, "bin": [83, 103, 105, 119, 148, 149, 390], "bin_edg": [148, 149], "binari": [47, 49, 50, 136, 137, 139, 140, 460, 471], "binary_repr": 6, "bincount": [6, 83, 148], "binomi": [6, 371], "bins_0": 149, "bins_1": 149, "bit": [47, 48, 49, 50, 88, 122, 153, 157, 172, 203, 205, 206, 231, 233, 409, 420, 471], "bitwis": [47, 49, 50], "bitwise_and": [6, 48, 49, 50, 157, 203], "bitwise_not": 6, "bitwise_or": [6, 47, 48, 50, 157, 205], "bitwise_xor": [6, 47, 48, 49, 157, 206], "biufcmmosuv": 88, "blackman": 6, "block": [6, 59, 87, 121, 150, 171, 414, 428, 456], "bmat": 6, "bool": [9, 14, 15, 19, 28, 29, 32, 33, 34, 38, 41, 45, 53, 65, 69, 72, 83, 86, 88, 91, 94, 121, 143, 146, 147, 148, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 185, 187, 188, 192, 195, 207, 208, 211, 213, 215, 217, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 288, 334, 335, 344, 404, 407, 420, 429, 431, 433, 453, 454, 467], "bool_": 9, "boolean": [47, 48, 49, 50, 65, 72, 88, 100, 129, 155, 157, 158, 161, 162, 163, 164, 165, 166, 203, 205, 208, 209, 213, 229, 231, 232, 234, 334, 341, 404, 407, 429, 433, 454], "both": [10, 13, 15, 26, 33, 34, 45, 47, 49, 50, 57, 64, 71, 84, 85, 94, 110, 117, 129, 131, 132, 133, 134, 146, 147, 151, 156, 158, 171, 172, 173, 174, 187, 201, 202, 203, 205, 206, 210, 212, 218, 219, 222, 233, 333, 335, 343, 405, 409, 430, 437, 439, 443, 445, 447, 449, 455, 457], "bound": [347, 416, 433, 434], "boundari": [145, 347], "briefli": 467, "broadcast": [13, 14, 19, 28, 29, 34, 45, 51, 52, 57, 65, 69, 84, 90, 100, 129, 132, 133, 151, 164, 165, 187, 188, 206, 208, 210, 211, 212, 213, 217, 218, 222, 224, 225, 229, 231, 232, 233, 234, 343, 344, 347, 348, 404, 406, 429, 430, 431, 434, 438, 449, 454, 457], "broadcast_arrai": [6, 52], "broadcast_shap": 6, "broadcast_to": [6, 51, 438], "brought": 10, "buffer": [38, 73, 74, 86, 136, 137, 139, 140, 196, 211, 217, 226, 227, 407], "buffer_lik": 136, "build": 471, "build_loc": 4, "built": 88, "busday_count": 6, "busday_offset": 6, "byte": [6, 41, 86, 88, 90, 136, 137, 196, 288, 304, 308], "byte_bound": 6, "byteord": 88, "byteswap": 6, "bz2": 196, "c": [2, 4, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 39, 40, 41, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 71, 75, 76, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 123, 129, 130, 131, 132, 133, 134, 141, 142, 144, 146, 147, 151, 154, 156, 157, 161, 162, 163, 171, 172, 173, 174, 177, 183, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 218, 219, 222, 288, 293, 301, 314, 332, 333, 334, 335, 337, 338, 342, 343, 345, 350, 351, 401, 403, 405, 407, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 437, 438, 449, 450, 457, 458, 459, 475], "c_contigu": [37, 39, 86, 293], "ca": 62, "calcul": [10, 11, 12, 13, 18, 26, 45, 72, 74, 82, 84, 89, 90, 94, 96, 97, 99, 103, 112, 129, 130, 131, 134, 145, 149, 151, 178, 179, 180, 181, 183, 188, 199, 201, 202, 208, 210, 213, 219, 222, 229, 232, 234, 335, 343, 344, 404, 405, 429, 430, 449, 454, 455, 460, 475], "call": [10, 18, 28, 29, 30, 37, 39, 88, 109, 110, 111, 114, 117, 138, 178, 180, 186, 209, 242, 334, 427, 433, 438, 475], "callabl": [138, 209], "cambridg": 10, "can": [0, 3, 4, 10, 13, 15, 20, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 53, 63, 64, 71, 77, 78, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 101, 103, 104, 105, 106, 109, 110, 111, 114, 119, 121, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 160, 167, 168, 171, 172, 173, 174, 175, 182, 183, 184, 194, 195, 196, 201, 202, 203, 205, 206, 207, 209, 210, 212, 216, 218, 219, 222, 231, 233, 288, 293, 320, 322, 332, 333, 334, 335, 336, 337, 338, 342, 343, 348, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 405, 407, 409, 423, 430, 433, 434, 437, 439, 441, 443, 447, 448, 449, 453, 455, 457, 458, 459, 467, 475], "can_cast": [6, 471], "cannot": [59, 224, 225, 427, 428], "capabl": [20, 32, 35, 36, 37, 39, 45, 102, 143, 195, 207, 210], "care": [20, 178], "cartesian": 215, "case": [4, 14, 19, 20, 28, 29, 32, 35, 36, 37, 39, 45, 63, 73, 74, 77, 80, 82, 91, 92, 93, 101, 105, 108, 113, 117, 119, 136, 137, 138, 139, 141, 142, 143, 145, 152, 178, 189, 192, 195, 196, 202, 207, 216, 226, 227, 231, 233, 336, 337, 338, 344, 407, 431, 437, 441, 452, 453, 458, 459, 467], "cast": [14, 19, 41, 53, 59, 65, 72, 73, 74, 86, 90, 129, 150, 178, 208, 210, 213, 223, 226, 227, 229, 231, 232, 233, 234, 288, 344, 404, 414, 428, 429, 431, 454, 456], "cat": [354, 371], "cauchi": 390, "cbrt": [6, 425], "cdef": 91, "cdot": 437, "cdoubl": 9, "ceil": [6, 31, 123, 130, 131, 410, 413, 450], "center": [104, 105, 106, 107, 111, 112, 119], "central": [145, 372, 373], "certain": [88, 209], "ch": 10, "chain": [85, 86, 90, 91], "chang": [41, 63, 71, 86, 88, 90, 100, 226, 227, 288, 301, 325, 330, 332, 341, 342, 347, 348, 349, 401, 407, 412, 452, 471], "char": 88, "charact": [88, 137], "check": [14, 19, 35, 36, 53, 108, 160, 167, 175, 188, 191], "check_valid": 370, "chi": [356, 372], "chisquar": 6, "choic": [6, 56, 86, 179, 181, 289], "choicelist": 417, "choleski": 6, "choos": [6, 18, 25, 86, 91, 457, 467], "chosen": [148, 457], "circ": 475, "circl": 190, "clamp": [347, 433, 434], "clariti": 121, "class": [3, 86, 88, 124, 136, 137, 138, 140, 155, 196, 352, 380, 441, 471], "classic": 90, "clear": [88, 467], "clip": [6, 86, 347, 433, 434, 467], "close": [21, 22, 23, 25, 40, 41, 86, 90, 98, 195, 288, 352, 380, 410, 413], "closer": 450, "cloud": 3, "cmake": 4, "co": [6, 21, 68, 180, 421, 435], "code": [38, 88, 169], "coeffici": [183, 191, 194], "coerc": [38, 136, 137, 138, 139, 140, 196], "coin": 354, "col": 155, "collaps": [86, 301], "column": [6, 35, 36, 37, 39, 40, 41, 58, 59, 73, 74, 81, 86, 87, 101, 121, 127, 128, 145, 150, 152, 178, 179, 183, 186, 189, 192, 288, 401, 414, 428, 441, 443, 447, 453, 456], "column_stack": [6, 59, 87, 150, 414, 428, 456], "com": 4, "combin": [0, 88, 98, 106, 111, 145], "combinatori": 91, "comma": [88, 90], "command": 4, "common": [109, 110, 111, 334, 437], "common_typ": 6, "compani": [354, 371], "compar": [15, 33, 94, 132, 133, 149, 158, 212, 218], "compare_chararrai": 6, "comparison": [2, 94, 146, 147, 173, 174, 335, 460, 471], "compat": [3, 10, 14, 19, 41, 45, 86, 208, 213, 228, 229, 230, 232, 234, 288, 404, 407, 429, 454, 471], "compil": [4, 88, 144], "complement": 452, "complementari": [131, 452], "complet": [3, 4, 91, 137, 138, 189, 412, 467], "complex": [10, 11, 12, 18, 25, 26, 33, 53, 72, 85, 86, 88, 91, 95, 102, 103, 104, 106, 109, 110, 111, 113, 114, 117, 122, 129, 132, 133, 154, 159, 160, 166, 167, 178, 179, 180, 181, 189, 190, 192, 208, 210, 212, 218, 223, 232, 234, 291, 292, 345, 402, 404, 424, 429, 454, 455, 467, 471], "complex128": [9, 10, 45, 115, 116, 118, 120, 408], "complex64": [9, 10, 45, 129], "compliant": 86, "complic": [90, 475], "compon": [10, 33, 107, 112, 119, 122, 154, 223, 402], "compos": 64, "composit": [171, 431], "compress": [6, 100, 433, 467], "comput": [4, 10, 18, 21, 22, 23, 24, 25, 26, 27, 31, 45, 47, 48, 49, 50, 54, 60, 61, 67, 68, 72, 73, 74, 82, 83, 90, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 130, 145, 146, 147, 148, 149, 154, 155, 157, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206, 208, 210, 213, 214, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 332, 342, 345, 402, 403, 404, 405, 410, 413, 415, 419, 420, 421, 422, 425, 429, 431, 435, 436, 437, 443, 447, 454], "compute_uv": [176, 192], "concaten": [6, 58, 87, 150, 414, 428, 434, 456], "concept": [20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459, 467], "cond": [6, 182], "condit": [41, 85, 86, 100, 176, 182, 186, 288, 334, 341, 347, 349, 417, 457], "condlist": 417, "confus": 134, "conj": [6, 61, 86, 108, 154, 175, 178, 345], "conjug": [6, 10, 60, 85, 86, 114, 117, 154, 175, 178, 179, 180, 181, 210, 291, 345, 455], "consecut": [82, 89, 145], "conserv": 215, "consid": [15, 20, 32, 33, 35, 36, 37, 39, 91, 119, 143, 158, 161, 179, 181, 185, 195, 207, 210, 352, 380], "consist": [33, 34, 89, 137, 149, 194, 195, 434, 437], "constant": [9, 88, 145], "constraint": 45, "construct": [35, 36, 56, 77, 80, 81, 86, 88, 101, 136, 137, 138, 139, 140, 152, 196, 216, 289, 336, 438, 439, 457, 460], "constructor": 467, "consum": [86, 308], "contain": [10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 47, 48, 49, 50, 54, 55, 57, 60, 61, 64, 65, 67, 68, 71, 72, 81, 84, 86, 88, 94, 96, 97, 99, 104, 105, 106, 109, 114, 117, 119, 125, 129, 130, 131, 132, 133, 134, 135, 140, 144, 145, 146, 147, 148, 149, 151, 154, 155, 157, 172, 173, 174, 179, 189, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 218, 219, 222, 224, 225, 228, 229, 230, 232, 234, 317, 332, 334, 335, 342, 343, 345, 352, 402, 403, 404, 405, 409, 410, 413, 415, 419, 420, 421, 422, 425, 426, 429, 430, 435, 436, 440, 443, 444, 447, 448, 449, 450, 454, 467], "content": [37, 86, 389], "context": 10, "contigu": [35, 36, 37, 39, 85, 86, 90, 186, 314, 401, 407], "continu": [352, 384], "contourf": 215, "contract": [90, 91, 437], "contrast": 347, "contribut": [10, 45, 148, 149], "control": [4, 41, 53, 59, 65, 86, 90, 150, 210, 288, 414, 428, 456], "conveni": [86, 330, 352], "convent": [85, 90, 91, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 156, 194, 210, 339, 437], "convers": [41, 86, 90, 288, 460], "convert": [28, 29, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 63, 75, 76, 77, 80, 88, 91, 98, 141, 142, 143, 160, 167, 195, 207, 350, 351, 452, 453], "convolut": [10, 62, 66], "convolv": [6, 66], "coolei": 10, "coordin": [69, 138, 145, 155, 215], "copi": [6, 20, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 65, 77, 78, 80, 81, 86, 88, 92, 93, 100, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 215, 216, 223, 242, 288, 301, 303, 311, 317, 320, 336, 337, 338, 340, 341, 342, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 407, 416, 423, 427, 441, 442, 443, 446, 447, 453, 458, 459, 467], "copysign": [6, 332, 342], "copyto": [6, 86, 100, 293, 341], "core": [3, 88, 90, 467], "corner": [104, 106, 110, 111], "corrcoef": [6, 70], "correct": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 47, 48, 49, 50, 54, 55, 59, 60, 61, 64, 67, 68, 75, 76, 84, 94, 96, 97, 99, 102, 108, 114, 123, 129, 130, 131, 132, 133, 134, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 218, 219, 222, 332, 333, 335, 342, 343, 345, 350, 351, 403, 405, 409, 410, 413, 415, 419, 420, 421, 422, 425, 426, 428, 430, 435, 436, 449, 450], "correctli": [18, 25, 28, 29, 69, 187, 211, 217, 224, 225, 231, 233, 334, 344, 431], "correl": [6, 471], "correspond": [6, 10, 20, 28, 29, 32, 35, 36, 37, 38, 39, 41, 57, 59, 63, 75, 76, 77, 78, 80, 81, 86, 92, 93, 101, 104, 105, 106, 108, 110, 111, 114, 117, 119, 136, 137, 138, 139, 140, 141, 142, 143, 145, 152, 155, 178, 179, 195, 196, 207, 209, 210, 216, 288, 293, 297, 336, 337, 338, 350, 351, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 411, 418, 429, 437, 440, 441, 443, 447, 453, 454, 458, 459, 467], "correspondingli": 10, "cosh": [6, 22, 67, 422, 436], "cosin": [21, 22, 23, 24, 25, 26, 27, 67, 68, 421, 422, 435, 436], "cost": [90, 91], "costli": 91, "could": [86, 108, 114, 322], "count": [14, 19, 46, 69, 83, 88, 91, 126, 136, 137, 139, 140, 145, 148, 149, 334, 344, 354, 431, 460, 471], "count_nonzero": [6, 334], "counterpart": [10, 108, 114, 467], "cov": [6, 370], "covari": 70, "cover": [443, 447, 471], "cpu": [4, 20, 32, 35, 36, 37, 39, 63, 66, 70, 77, 80, 92, 93, 95, 101, 105, 115, 116, 118, 119, 120, 136, 137, 138, 139, 141, 142, 143, 152, 195, 196, 207, 214, 216, 220, 231, 336, 337, 338, 441, 453, 458, 459], "creat": [3, 4, 20, 32, 34, 35, 36, 37, 38, 39, 41, 63, 77, 78, 79, 80, 81, 86, 88, 91, 92, 93, 101, 105, 119, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 223, 288, 293, 336, 337, 338, 348, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 439, 441, 443, 444, 447, 448, 453, 458, 459, 467, 471], "creation": [88, 91, 460, 467, 471, 475], "crop": [103, 104, 106, 108, 109, 110, 111, 113, 114, 117], "cross": [6, 66], "csingl": 9, "ct": 10, "cube": [54, 129, 425], "cubic": 91, "cumprod": [6, 86, 226, 467], "cumproduct": 6, "cumsum": [6, 82, 86, 227, 431, 467], "cumul": [72, 73, 74, 82, 86, 226, 227, 294, 295, 431], "cupi": [2, 460], "current": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 47, 48, 49, 50, 54, 55, 57, 64, 67, 68, 75, 76, 84, 86, 88, 91, 96, 97, 99, 129, 130, 131, 132, 133, 134, 137, 149, 151, 152, 157, 172, 198, 199, 200, 201, 202, 212, 218, 219, 220, 222, 320, 332, 333, 342, 343, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 430, 435, 436, 449, 450], "custom": 467, "customarili": 10, "cut": 183, "cutoff": 188, "cycl": [105, 119], "cyclic": 347, "cython": 4, "d": [0, 14, 19, 20, 45, 58, 59, 73, 74, 77, 78, 79, 80, 81, 85, 86, 87, 88, 101, 105, 107, 112, 115, 116, 118, 119, 120, 121, 125, 127, 128, 140, 150, 152, 156, 177, 179, 180, 186, 187, 190, 210, 215, 226, 227, 233, 301, 334, 343, 344, 347, 357, 401, 407, 414, 416, 418, 428, 431, 433, 437, 438, 439, 445, 453, 456, 467], "d0": [352, 379, 381], "d1": [352, 381], "d3": 78, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102, 108, 114, 115, 116, 118, 120, 122, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 167, 172, 173, 174, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 288, 317, 330, 332, 333, 335, 337, 338, 341, 342, 343, 345, 347, 348, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 434, 435, 436, 439, 441, 449, 450, 454, 456, 457, 458, 459, 460, 471], "datatyp": [88, 185], "date": 4, "datetim": 88, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [70, 86, 232, 234, 324, 331, 429, 454], "decai": 365, "decim": [31, 86, 122, 123, 318, 410, 413], "decomposit": [175, 182, 185, 188, 192, 471], "decompress": 196, "decreas": 83, "decreasingli": [10, 104, 106, 110, 111], "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 172, 173, 174, 175, 176, 179, 181, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 301, 332, 333, 335, 336, 337, 338, 340, 342, 343, 344, 345, 347, 350, 351, 352, 356, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 396, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 467], "default_rng": 6, "defg": 91, "defici": 185, "defin": [10, 71, 88, 93, 103, 132, 133, 142, 148, 149, 212, 218, 223, 338, 342, 459, 467], "definit": [71, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 130, 175], "deg": [18, 351], "deg2rad": [6, 350, 351, 452], "degre": [6, 18, 75, 232, 234, 350, 351, 394, 429, 452, 454, 475], "del": 475, "delet": 6, "delta": [10, 232, 234, 429, 452, 454], "demonstr": [0, 4, 88], "dens": [155, 216], "densiti": 148, "depend": [4, 81, 102, 108, 114, 179, 183, 189, 191, 192, 195, 231, 233, 417, 457], "deprec": 6, "deprecate_with_doc": 6, "depth": [58, 59, 87, 150, 414, 428, 456], "deriv": 145, "descend": 192, "descr": 88, "describ": [72, 88, 208, 404, 471], "descript": [72, 88, 109, 111, 148, 208, 404, 467], "design": 10, "desir": [20, 32, 35, 36, 37, 39, 40, 52, 92, 93, 101, 109, 110, 111, 141, 142, 143, 152, 195, 207, 337, 338, 438, 441, 458, 459], "destin": [59, 150, 221, 347, 348, 414, 428, 434, 456], "destruct": 475, "det": [6, 190], "detail": [31, 104, 106, 110, 111, 135, 413, 443, 444, 447, 448, 467], "determin": [13, 18, 21, 22, 23, 24, 25, 26, 27, 47, 49, 50, 54, 64, 67, 68, 75, 76, 84, 96, 97, 99, 131, 132, 133, 134, 137, 138, 140, 151, 170, 172, 177, 183, 189, 190, 197, 198, 199, 200, 201, 202, 210, 212, 218, 219, 222, 333, 343, 350, 351, 403, 405, 409, 415, 419, 421, 422, 425, 426, 430, 435, 436, 439, 449, 450], "devel": 4, "develop": [3, 4], "deviat": [86, 213, 229, 232, 234, 324, 352, 367, 374, 429, 454], "devic": [0, 2, 3, 20, 32, 35, 36, 37, 38, 39, 41, 45, 63, 72, 77, 78, 80, 86, 92, 93, 101, 102, 105, 119, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 208, 209, 210, 213, 216, 229, 232, 234, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 404, 427, 429, 441, 443, 447, 453, 454, 458, 459], "df": [356, 372, 394, 395], "dfden": [360, 373], "dfnum": [360, 373], "dft": [10, 103, 108, 109, 113, 114, 117], "di": [78, 79], "diag": [6, 80, 81, 90, 101, 127, 128, 152, 178, 180, 192, 439], "diag_indic": [6, 79, 121], "diag_indices_from": [6, 78, 121], "diagflat": [6, 77, 81, 439], "diagon": [6, 77, 78, 79, 80, 86, 90, 101, 121, 152, 175, 179, 180, 181, 209, 329, 439, 441, 442, 443, 444, 446, 447, 448, 467], "dice": 369, "dictionari": 88, "diff": [6, 74, 89, 145, 148], "differ": [3, 10, 15, 20, 32, 35, 36, 37, 39, 45, 63, 72, 74, 77, 80, 82, 86, 88, 89, 92, 93, 101, 104, 105, 109, 110, 112, 119, 122, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 145, 152, 158, 181, 195, 196, 207, 208, 210, 216, 293, 336, 337, 338, 341, 343, 348, 404, 430, 434, 441, 443, 447, 452, 453, 458, 459, 471], "digit": [6, 10, 122, 148], "dim": 15, "dimens": [14, 19, 28, 29, 32, 42, 43, 44, 45, 58, 59, 65, 69, 70, 71, 78, 81, 82, 86, 88, 98, 110, 111, 123, 127, 128, 145, 150, 155, 156, 185, 187, 189, 208, 211, 213, 215, 216, 217, 221, 224, 225, 228, 229, 230, 231, 232, 233, 234, 301, 309, 320, 334, 336, 344, 348, 352, 382, 384, 385, 387, 404, 407, 418, 427, 428, 429, 431, 432, 433, 434, 438, 439, 443, 444, 447, 448, 454, 467, 471], "dimension": [2, 4, 30, 62, 66, 69, 72, 78, 79, 80, 81, 82, 83, 86, 89, 90, 103, 104, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 136, 137, 139, 145, 155, 183, 189, 193, 194, 208, 211, 215, 216, 217, 224, 225, 228, 230, 232, 234, 323, 336, 339, 344, 404, 423, 429, 431, 433, 438, 454, 455, 460], "direct": [10, 71, 82, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 127, 128, 145, 333], "directli": [88, 138, 155, 207, 334, 434], "directori": 144, "dirichlet": 6, "discard": 450, "discont": 452, "discontinu": 452, "discret": [3, 10, 62, 66, 74, 82, 89, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 145, 352, 460], "disp": 6, "dispers": 397, "displac": [86, 325], "distanc": 145, "distinct": [132, 133, 212, 218], "distinguish": 88, "distribut": [3, 4, 207, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 471], "divid": [6, 87, 131, 134, 219, 405, 449], "divis": [84, 131, 134, 219, 343, 405, 449, 450], "divisor": [232, 234, 429, 454], "divmod": [6, 467], "dlpack": 135, "dmlc": 135, "dn": [352, 379, 381], "do": [3, 4, 88, 209, 354, 412], "docstr": 467, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467], "doe": [20, 53, 100, 102, 117, 132, 133, 189, 223, 226, 227, 341, 433], "domain": [10, 108, 113], "done": [3, 41, 86, 90, 194, 288, 452], "dot": [6, 86, 90, 91, 156, 175, 180, 182, 186, 188, 189, 191, 192, 193, 194, 210, 437, 455], "doubl": [9, 365, 437], "down": 128, "dp": [84, 177, 179, 190, 191, 343, 407, 408, 418, 430, 449], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 224, 225, 228, 230, 231, 288, 293, 336, 337, 338, 346, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "dpnp": [0, 2, 3, 4, 10, 460, 467, 471, 472, 475], "dpnp_arrai": [20, 32, 35, 36, 37, 39, 41, 63, 77, 78, 80, 92, 93, 101, 105, 119, 122, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 155, 195, 196, 207, 209, 216, 235, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459, 460], "dpnp_iface_arraycr": [216, 336], "draw": [352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "drawn": [352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 377, 378, 380, 383, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 417], "drill": [354, 371], "driver": 2, "drop": [3, 88], "dsplit": [6, 59, 87], "dst": 65, "dstack": [6, 58, 59, 150, 414, 428, 456], "dt": 88, "dt2": 88, "dtype": [0, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 41, 45, 47, 48, 49, 50, 53, 54, 55, 59, 60, 61, 64, 67, 68, 70, 72, 73, 74, 75, 76, 78, 84, 86, 90, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 121, 122, 123, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 172, 173, 174, 186, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 294, 295, 306, 312, 324, 326, 329, 331, 332, 333, 335, 337, 338, 342, 343, 344, 345, 350, 351, 352, 374, 380, 396, 403, 404, 405, 408, 409, 410, 413, 414, 415, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 433, 435, 436, 439, 441, 442, 446, 449, 450, 454, 456, 458, 459, 467], "due": [117, 475], "dump": 6, "dx": 145, "dy": 145, "dz": 145, "e": [9, 10, 22, 24, 72, 73, 81, 88, 92, 93, 98, 101, 104, 108, 109, 110, 111, 114, 117, 129, 137, 141, 142, 145, 152, 172, 178, 190, 193, 197, 337, 338, 352, 406, 432, 441, 458, 459], "ea": 91, "each": [0, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 60, 61, 64, 67, 68, 73, 74, 78, 81, 83, 84, 86, 88, 91, 94, 96, 97, 99, 104, 106, 108, 110, 111, 114, 127, 128, 129, 130, 131, 134, 138, 145, 146, 147, 148, 149, 154, 157, 161, 162, 163, 172, 173, 174, 178, 179, 180, 181, 183, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 219, 221, 222, 223, 318, 332, 334, 335, 342, 343, 345, 348, 354, 371, 402, 403, 405, 406, 409, 410, 411, 413, 415, 419, 420, 421, 422, 425, 426, 428, 430, 434, 435, 436, 438, 443, 444, 447, 448, 449, 450, 467], "easier": 433, "easiest": 4, "easili": [0, 149], "edg": [57, 83, 148, 149], "edge_ord": 145, "ediff1d": [6, 82, 145], "effect": [91, 129, 132, 133, 212, 218, 343, 452], "effici": [10, 103, 117, 137, 185, 188, 192], "efgh": 91, "eig": [6, 179, 180, 181], "eigenvalu": [178, 179, 180, 181, 471], "eigenvector": [178, 179, 180, 181], "eigh": [6, 178, 180, 181], "eigval": [6, 178, 179, 181], "eigvalsh": [6, 178, 179, 180], "einstein": [85, 90, 91, 156, 194, 210, 339, 437], "einsum": [6, 85, 91, 156, 194, 210, 339, 437], "einsum_path": [6, 90], "either": [33, 34, 39, 45, 72, 81, 88, 104, 106, 108, 110, 111, 114, 115, 116, 118, 120, 121, 145, 156, 179, 181, 187, 189, 208, 224, 225, 228, 230, 231, 233, 404, 416, 434], "element": [4, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 45, 46, 47, 48, 49, 50, 54, 55, 57, 60, 61, 64, 65, 67, 68, 72, 73, 74, 79, 81, 82, 83, 84, 86, 88, 89, 91, 94, 96, 97, 99, 100, 101, 102, 104, 106, 110, 111, 117, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 180, 184, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 220, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 283, 284, 291, 292, 294, 295, 297, 298, 301, 303, 304, 306, 308, 310, 311, 316, 317, 318, 319, 321, 324, 325, 328, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 347, 349, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 433, 435, 436, 437, 438, 439, 442, 444, 446, 448, 449, 450, 451, 452, 454, 457, 467, 471, 475], "ellipsi": 90, "els": [0, 190, 240], "elsewher": [101, 152, 441, 457], "empti": [4, 6, 32, 86, 93, 104, 106, 110, 111, 137, 141, 142, 183, 298, 337, 338, 341, 458, 459], "empty_lik": [6, 32, 92, 142, 338, 459], "enabl": [121, 185, 188, 192], "encount": [226, 227, 228, 230], "end": [20, 81, 88, 89, 91, 109, 143, 195, 207], "end_tim": 0, "endian": 88, "endpoint": [20, 143, 195, 207], "engin": 388, "enough": 148, "entir": [45, 72, 108, 148, 149, 208, 213, 228, 229, 230, 232, 234, 404, 429, 454], "entri": [86, 88, 92, 100, 108, 114, 121, 126, 127, 128, 323, 427], "env": 4, "environ": 4, "ep": [122, 185, 333], "epsilon": 185, "epsneg": 122, "equal": [6, 14, 15, 19, 33, 34, 45, 59, 66, 70, 74, 86, 101, 143, 145, 146, 147, 148, 149, 150, 158, 160, 167, 169, 172, 173, 174, 184, 188, 189, 194, 195, 207, 219, 311, 335, 352, 362, 396, 405, 409, 410, 413, 414, 419, 427, 428, 441, 443, 447, 456], "equal_nan": [15, 33, 158], "equat": [183, 191, 193, 194, 471], "equiv": [41, 53, 59, 65, 86, 90, 150, 184, 210, 288, 414, 428, 456], "equival": [10, 13, 14, 16, 17, 19, 28, 29, 30, 31, 34, 45, 63, 71, 72, 75, 76, 84, 85, 86, 87, 91, 98, 100, 125, 132, 133, 134, 193, 208, 219, 222, 242, 283, 284, 296, 317, 320, 330, 334, 339, 342, 350, 351, 352, 380, 404, 405, 407, 413, 418, 423, 430, 431, 433, 437, 440, 449, 467, 475], "error": [72, 95, 108, 113, 178, 208, 404, 427, 460, 467], "essenti": 4, "estim": [70, 149, 354, 371], "et": 10, "etc": [10, 88, 104, 106, 110, 111, 371], "eturn": 100, "euclidean": 183, "euler_gamma": 9, "evalu": [14, 15, 19, 86, 90, 91, 94, 160, 167, 194, 215, 283, 284, 339, 437, 467], "even": [10, 88, 105, 107, 108, 109, 112, 113, 114, 117, 119, 160, 167, 410, 413], "evenli": [20, 143, 195, 207, 410], "event": 202, "everi": [348, 434], "everywher": 114, "exact": [100, 186, 341], "exactli": [10, 40, 140, 352, 380], "examin": 183, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 296, 298, 301, 302, 303, 311, 315, 317, 320, 322, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 475], "exce": 202, "except": [4, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 36, 37, 39, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 63, 64, 67, 68, 75, 76, 82, 83, 84, 85, 86, 92, 93, 94, 96, 97, 99, 101, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 157, 161, 162, 163, 172, 173, 174, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 217, 218, 219, 222, 228, 229, 230, 231, 232, 233, 234, 288, 332, 333, 335, 337, 338, 342, 343, 344, 345, 350, 351, 403, 405, 406, 407, 409, 410, 415, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 435, 436, 449, 450, 454, 458, 459], "exclud": [11, 12, 195, 352, 396], "exclus": [352, 380], "execut": [3, 4, 35, 36, 66, 70, 95, 115, 116, 118, 120, 138, 214, 220, 231, 355, 357, 358, 368, 373, 389, 475], "executor": 0, "exist": [10, 58, 59, 87, 88, 98, 150, 407, 414, 428, 456, 471], "exp": [6, 10, 97, 99, 103, 190, 199, 201, 208], "exp2": [6, 96, 99], "expand": [82, 98], "expand_dim": [6, 28, 29], "expect": [4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 47, 48, 49, 50, 54, 55, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 76, 84, 85, 88, 94, 96, 97, 99, 102, 114, 123, 129, 130, 131, 132, 133, 134, 146, 147, 151, 154, 157, 158, 161, 162, 163, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 217, 218, 219, 222, 226, 227, 229, 231, 232, 233, 234, 332, 333, 335, 342, 343, 344, 345, 350, 351, 402, 403, 404, 405, 409, 410, 413, 415, 419, 420, 421, 422, 425, 426, 429, 430, 431, 435, 436, 449, 450, 454, 457], "explain": [106, 111, 467], "explan": 88, "explicit": 90, "explicitli": [81, 104, 106, 110, 111], "exploit": [10, 117], "explor": [91, 354, 371], "expm1": [6, 96, 97, 199], "expon": [10, 96, 97, 99, 129, 184, 201, 202, 208, 343, 378, 471], "exponenti": [6, 10, 91, 201, 202, 208, 365, 391], "expos": [136, 467], "express": [10, 26, 90, 91, 196, 475], "extend": [10, 88, 171, 467], "extens": [0, 1, 3, 4, 9, 144, 196, 460], "extobj": 210, "extra": [88, 114, 140], "extract": [6, 77, 80, 81, 90, 101, 125, 152, 155, 209, 341, 433, 439], "extrema": 471, "ey": [6, 60, 61, 69, 86, 110, 111, 132, 133, 152, 156, 171, 182, 184, 185, 193, 194, 206, 212, 218, 418, 439], "f": [0, 6, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 39, 40, 41, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 84, 86, 88, 90, 92, 93, 94, 96, 97, 99, 101, 102, 105, 117, 119, 123, 129, 130, 131, 132, 133, 134, 141, 142, 145, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 184, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 218, 219, 222, 288, 293, 301, 332, 333, 335, 337, 338, 342, 343, 345, 350, 351, 373, 401, 403, 405, 407, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 445, 449, 450, 457, 458, 459], "f0": 88, "f1": 88, "f2": 88, "f4": 53, "f8": [53, 88], "f_contigu": [37, 39], "f_k": 10, "fab": [6, 11, 12], "fact": 180, "factor": [10, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 175, 189], "fail": [86, 320, 354], "fallback": [178, 180, 355, 357, 358, 368, 373, 389], "fals": [14, 15, 16, 17, 18, 19, 28, 29, 32, 33, 34, 37, 39, 41, 45, 47, 48, 50, 51, 52, 53, 63, 69, 70, 72, 74, 83, 86, 88, 90, 91, 93, 94, 100, 121, 138, 142, 143, 146, 147, 148, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 185, 187, 188, 192, 195, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 217, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 240, 283, 284, 285, 286, 288, 305, 306, 307, 312, 324, 326, 331, 334, 335, 338, 344, 346, 404, 407, 420, 429, 431, 453, 454, 457, 459, 467], "famili": 10, "fanci": 433, "fashion": [202, 467], "fast": [10, 103, 104, 106, 110, 111, 117], "fastcopyandtranspos": 6, "faster": [10, 132, 133], "fastest": [86, 301, 401, 407], "fb": [91, 445], "featur": 88, "few": 121, "fft": [6, 460, 471], "fft2": [6, 103, 106, 110], "fftfreq": [6, 10, 103, 107, 112, 119], "fftn": [6, 103, 104, 111, 117], "fftshift": [6, 10, 104, 106, 111, 112], "fh": 137, "field": [88, 215], "field1": 88, "file": [136, 137, 139, 140, 144, 196], "filenam": [137, 196], "fill": [6, 32, 86, 92, 93, 121, 141, 142, 148, 149, 215, 223, 293, 337, 338, 441, 458, 459], "fill_diagon": 6, "fill_valu": [141, 142], "filt": 445, "filter": [10, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "final": [4, 10, 117, 143, 207], "find": [46, 83, 86, 102, 148, 185, 188, 192, 319, 333, 334, 406, 416, 423, 451, 471], "find_common_typ": 6, "fine": 4, "finfo": 333, "finfo_object": 122, "finit": [161, 162, 163, 164, 165, 223], "first": [13, 14, 15, 19, 26, 28, 29, 30, 33, 34, 45, 47, 49, 50, 58, 59, 64, 71, 72, 81, 84, 85, 86, 88, 91, 94, 97, 104, 106, 108, 110, 111, 126, 129, 131, 132, 133, 134, 145, 146, 147, 148, 149, 151, 156, 158, 169, 170, 171, 172, 173, 174, 186, 193, 196, 201, 202, 203, 205, 206, 209, 210, 211, 212, 215, 217, 218, 219, 222, 224, 225, 301, 335, 339, 341, 343, 344, 401, 405, 407, 409, 411, 414, 416, 423, 424, 426, 430, 431, 432, 434, 437, 439, 449, 455, 456], "fit": [183, 406], "fix": [6, 31, 55, 81, 88, 130, 347, 410, 413, 450], "flag": [37, 39, 86, 88, 293], "flanneri": 10, "flat": [28, 29, 86, 89, 124, 301, 406], "flatnonzero": [6, 334], "flatten": [6, 28, 29, 30, 59, 69, 73, 74, 77, 80, 81, 86, 89, 121, 125, 148, 149, 211, 217, 224, 225, 226, 227, 231, 233, 300, 314, 322, 334, 339, 348, 401, 406, 411, 423, 433, 434, 439, 455], "flexibl": [85, 88, 137, 186], "flip": [6, 48, 81, 121, 127, 128, 157, 354], "fliplr": [6, 81, 121, 126, 128], "flipud": [6, 81, 121, 126, 127], "float": [11, 12, 18, 20, 26, 35, 36, 38, 45, 53, 64, 72, 74, 88, 92, 93, 97, 101, 102, 105, 119, 122, 123, 129, 136, 137, 138, 139, 140, 141, 142, 145, 148, 149, 152, 154, 183, 184, 185, 187, 188, 195, 196, 201, 202, 207, 208, 211, 213, 217, 223, 229, 232, 234, 333, 337, 338, 343, 352, 356, 381, 382, 384, 385, 387, 390, 391, 393, 396, 402, 403, 404, 415, 429, 441, 452, 454, 458, 459, 467, 471], "float16": [9, 129], "float32": [0, 9, 10, 38, 41, 53, 73, 86, 88, 90, 115, 116, 118, 120, 129, 288, 333, 352, 374, 379, 381, 382, 384, 385, 387, 393, 396, 408], "float64": [0, 9, 10, 38, 41, 45, 53, 74, 86, 88, 90, 115, 116, 118, 120, 288, 352, 353, 359, 360, 361, 363, 365, 366, 367, 374, 375, 378, 379, 381, 382, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408], "float_pow": [6, 343], "floor": [6, 31, 55, 123, 131, 219, 405, 410, 413, 450], "floor_divid": [6, 219, 405], "flop": 91, "flush": 137, "fmax": [6, 133, 211, 212, 218, 228, 343], "fmin": [6, 132, 212, 217, 218, 230, 343], "fmod": [6, 219, 343, 405], "fn": 138, "fname": 196, "follow": [4, 10, 45, 88, 98, 114, 122, 153, 179, 181, 188, 437, 467, 471], "forc": [88, 90], "forg": 4, "form": [10, 32, 35, 36, 37, 38, 39, 58, 63, 77, 80, 86, 87, 90, 91, 110, 111, 114, 141, 142, 143, 160, 167, 195, 207, 330, 414, 453, 456], "format": [88, 137, 140, 471], "format_float_posit": 6, "format_float_scientif": 6, "former": [348, 434], "forth": 437, "fortran": [39, 41, 86, 288, 301, 401, 407], "forward": [10, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 145], "found": [4, 416, 467], "four": [352, 381], "fourier": [10, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 460], "fourth": 104, "frac": 10, "fraction": [220, 450], "free": [86, 317], "freedom": [232, 234, 394, 429, 454], "freq": [105, 107, 112, 119], "freq_spectrum": 108, "frequenc": [10, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119], "freshli": [164, 165], "frexp": 6, "fro": [176, 187], "frobeniu": 176, "from": [3, 10, 14, 19, 20, 28, 29, 30, 32, 35, 36, 37, 38, 39, 51, 53, 56, 59, 63, 65, 72, 75, 76, 77, 78, 80, 81, 86, 87, 88, 90, 92, 93, 97, 100, 101, 105, 109, 119, 126, 129, 135, 136, 137, 138, 139, 140, 141, 142, 145, 148, 150, 152, 155, 178, 180, 181, 185, 186, 196, 208, 209, 215, 216, 289, 293, 323, 328, 336, 337, 338, 341, 344, 348, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 407, 408, 414, 416, 417, 426, 427, 428, 431, 433, 434, 439, 441, 443, 445, 447, 448, 452, 453, 456, 457, 458, 459, 471], "from_": 53, "from_dlpack": 6, "frombuff": [6, 137, 139, 140, 196], "fromfil": [6, 136, 139, 140], "fromfunct": [6, 35, 36], "fromit": [6, 35, 36, 136, 137, 140], "frompyfunc": 6, "fromregex": [6, 196], "fromstr": [6, 136, 137, 139, 196], "front": 445, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459], "full_lik": [6, 32, 93, 141, 338, 459], "full_matric": 192, "fulli": 88, "function": [0, 2, 3, 11, 12, 16, 17, 20, 28, 29, 31, 32, 35, 36, 37, 39, 40, 63, 66, 70, 72, 75, 76, 81, 84, 86, 90, 92, 93, 95, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 129, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 149, 152, 178, 180, 186, 196, 199, 201, 202, 208, 209, 214, 215, 219, 220, 231, 283, 284, 293, 296, 317, 320, 330, 337, 338, 343, 348, 350, 351, 352, 355, 357, 358, 368, 373, 389, 404, 405, 413, 414, 419, 429, 433, 434, 438, 443, 444, 447, 448, 449, 454, 456, 457, 458, 459, 460, 467, 471], "fundament": [10, 88], "further": [443, 447], "futur": [88, 149], "fweight": 70, "g": [4, 10, 88, 92, 93, 101, 141, 142, 152, 337, 338, 352, 441, 458, 459, 475], "gamma": [6, 392], "gauss": 10, "gaussian": [352, 374, 398], "gc": 91, "gcd": 6, "ge72499cd9f": 6, "gen": 90, "gender": 88, "gener": [10, 30, 45, 88, 109, 114, 117, 143, 156, 178, 179, 180, 181, 188, 189, 196, 207, 352, 354, 357, 388, 443, 447, 453, 467, 471], "genfromtxt": [6, 196], "geometr": [6, 143, 195], "geomspac": [6, 195, 207], "get": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 79, 80, 86, 92, 93, 101, 105, 108, 114, 119, 129, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 320, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 434, 441, 443, 444, 447, 448, 453, 458, 459, 467], "get_arrai": 86, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 352], "get_sycl_devic": 352, "get_sycl_queu": 352, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 88], "getter": [86, 320], "gid": 149, "github": 135, "give": [10, 80, 86, 129, 149, 330, 407, 418], "given": [14, 15, 19, 20, 28, 29, 31, 32, 33, 35, 36, 37, 39, 41, 45, 58, 63, 69, 70, 73, 74, 82, 85, 86, 87, 88, 89, 91, 92, 93, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 119, 121, 123, 126, 132, 133, 141, 142, 143, 145, 148, 149, 158, 182, 195, 207, 209, 211, 212, 215, 217, 218, 226, 227, 228, 230, 231, 232, 233, 234, 285, 286, 288, 294, 295, 307, 312, 313, 318, 324, 326, 331, 334, 337, 338, 341, 344, 346, 347, 352, 357, 379, 396, 404, 406, 410, 411, 412, 414, 416, 429, 431, 433, 437, 438, 441, 454, 456, 458, 459, 467], "global": 0, "good": 364, "gpu": [0, 3, 4, 20, 32, 35, 36, 37, 39, 63, 77, 80, 92, 93, 101, 105, 119, 136, 137, 138, 139, 141, 142, 143, 152, 195, 196, 207, 216, 336, 337, 338, 441, 453, 458, 459], "grade": 88, "gradient": [6, 82, 89, 183], "graphic": 4, "great": 10, "greater": [6, 86, 94, 131, 147, 172, 173, 174, 185, 189, 311, 335, 409, 419, 427, 452], "greater_equ": [6, 94, 146, 173, 174, 335], "greatest": 131, "greedi": [90, 91], "grid": [35, 36, 138, 155, 215, 216, 336], "group": 334, "guarante": [88, 407], "guid": [2, 3], "gumbel": 6, "gz": 196, "h": [144, 175, 189, 215], "ha": [4, 10, 11, 12, 14, 18, 19, 28, 29, 30, 45, 72, 73, 74, 83, 88, 94, 98, 108, 113, 114, 138, 145, 146, 147, 150, 154, 159, 160, 166, 167, 173, 174, 180, 190, 192, 208, 213, 219, 226, 227, 229, 231, 232, 233, 234, 335, 344, 402, 403, 404, 405, 406, 412, 415, 427, 428, 429, 431, 432, 433, 438, 439, 454, 467], "had": [348, 434], "hadamard": 91, "half": [22, 104, 106, 107, 108, 110, 111, 195, 352, 382, 384, 385, 387, 396, 432], "ham": 6, "han": 6, "hand": [71, 194], "handl": [20, 88, 102, 196, 334, 433, 434, 471], "happen": [41, 45, 86, 288, 354], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 88, "have": [3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 58, 59, 60, 61, 64, 67, 68, 71, 72, 73, 74, 75, 76, 84, 85, 87, 88, 94, 96, 97, 99, 102, 110, 111, 122, 123, 129, 130, 131, 132, 133, 134, 146, 147, 150, 151, 154, 157, 158, 161, 162, 163, 164, 165, 172, 173, 174, 183, 186, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 332, 333, 335, 341, 342, 343, 344, 345, 350, 351, 371, 402, 403, 404, 405, 406, 409, 410, 413, 414, 415, 419, 420, 421, 422, 425, 426, 428, 429, 430, 431, 435, 436, 438, 449, 450, 452, 454, 456, 467], "hd": 91, "header": 144, "heavisid": 6, "hello": 88, "help": 475, "helper": 471, "henc": [98, 104, 106, 110, 111, 145], "here": [6, 30, 88, 108, 113, 114, 423, 443, 447], "hermit": [179, 181], "hermitian": [108, 113, 114, 117, 175, 178, 179, 180, 181, 185, 188, 192, 471], "hfft": [6, 10, 113], "hierarchi": 169, "high": [114, 352, 380, 383, 396], "higher": [90, 455], "highest": 103, "highli": 137, "hist": [148, 390], "hist_0": 149, "hist_1": 149, "histogram": [6, 83, 149, 416, 471], "histogram2d": 6, "histogram_bin_edg": [6, 148], "histogramdd": [6, 148], "hold": [57, 73, 74, 148, 187, 226, 227, 231, 233, 439], "homogen": 88, "horizont": [58, 59, 81, 87, 121, 126, 150, 414, 428, 456], "host": [3, 4, 20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 441, 443, 447, 453, 458, 459], "household": 189, "how": [0, 4, 88, 114, 117, 145, 347, 433, 434, 443, 447], "howev": [86, 322, 433], "hsplit": [6, 59], "hstack": [6, 58, 59, 87, 414, 428, 456], "http": [4, 135], "hyperbol": [21, 22, 23, 24, 25, 26, 27, 67, 68, 421, 422, 435, 436, 471], "hypergeometr": 6, "hypot": [6, 404], "hypotenus": [151, 404], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 288, 293, 301, 311, 317, 320, 322, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 467, 475], "i0": 6, "i1": [86, 88, 325], "i2": [86, 88, 325], "i3": [86, 325], "i4": [53, 88], "i7": 90, "i8": [53, 88], "icpx": 4, "icx": 4, "id": [14, 19, 86, 303], "ident": [3, 6, 14, 19, 72, 88, 101, 112, 121, 191, 391], "identifi": 88, "ieee": 122, "ifft": [6, 103, 110, 111, 113, 114, 119], "ifft2": [6, 104, 109, 111], "ifftn": [6, 106, 109, 110], "ifftshift": [6, 10, 107, 111], "ignor": [28, 29, 71, 88, 132, 133, 140, 148, 149, 211, 212, 213, 217, 218, 224, 225, 228, 229, 230, 232, 234, 429, 454], "ihfft": [6, 108], "ii": [90, 375], "iinfo": 369, "iinfo_object": 153, "ij": [90, 91, 215], "ijk": 90, "il": 91, "il1": 443, "il2": 443, "illustr": 180, "ilm": 90, "imag": [6, 10, 33, 86, 467], "imaginari": [33, 86, 114, 132, 133, 154, 159, 160, 166, 167, 178, 179, 181, 184, 212, 218, 223, 302, 424], "implement": [3, 6, 38, 103, 135], "impli": 88, "implicit": 90, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 296, 301, 302, 311, 315, 320, 322, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 377, 386, 390, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "improv": 90, "in1d": 6, "in_array1": 95, "includ": [4, 10, 14, 19, 20, 32, 35, 36, 37, 38, 39, 45, 63, 72, 77, 80, 83, 90, 91, 102, 141, 142, 143, 144, 148, 149, 160, 167, 188, 195, 207, 208, 213, 228, 229, 230, 232, 234, 352, 396, 404, 429, 453, 454], "include_initi": 72, "inclus": [352, 380, 383], "incompat": [104, 106, 110, 111], "increas": [83, 88, 98, 109, 114, 148, 453], "ind": [30, 83, 193, 347, 348, 443, 444, 447, 448], "index": [4, 28, 29, 30, 56, 86, 88, 91, 101, 104, 110, 125, 155, 215, 224, 225, 289, 301, 325, 334, 347, 348, 401, 407, 416, 433, 434, 443, 447, 457, 460, 471], "index_arrai": [28, 29, 30], "indic": [6, 10, 28, 29, 30, 72, 78, 79, 83, 86, 88, 90, 91, 100, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 121, 125, 138, 148, 193, 194, 209, 210, 216, 224, 225, 285, 286, 287, 310, 313, 319, 328, 334, 347, 348, 407, 416, 419, 420, 423, 433, 434, 440, 443, 444, 447, 448, 457], "indirect": [30, 423], "individu": 362, "inequ": 335, "inexact": [129, 223, 231, 233], "inf": [9, 15, 22, 26, 35, 36, 64, 84, 158, 161, 162, 163, 164, 165, 176, 187, 197, 198, 200, 212, 218, 223, 224, 225, 228, 230, 233, 345, 425, 449], "infer": [72, 208, 404, 407], "infin": [14, 19, 131, 161, 162, 163, 164, 165, 219, 223, 228, 230, 233, 405, 450, 471], "infinit": 176, "info": 6, "inform": [0, 37, 39, 86, 88, 108, 114, 122, 299, 467, 471], "initi": [16, 17, 72, 86, 92, 140, 211, 217, 228, 230, 231, 233, 305, 307, 312, 326, 344, 352, 431], "inner": [6, 71, 90, 91, 186, 210, 339], "input": [10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 177, 179, 185, 187, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 301, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 374, 380, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 449, 450, 452, 453, 454, 455, 458, 459], "insert": [6, 28, 29, 81, 83, 86, 90, 98, 143, 148, 195, 207, 224, 225, 228, 230, 319, 348, 416, 471], "instal": 2, "instanc": [3, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 108, 119, 136, 137, 138, 139, 140, 141, 142, 143, 145, 152, 155, 195, 196, 207, 209, 210, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "instead": [41, 81, 85, 86, 98, 130, 143, 148, 149, 155, 186, 195, 202, 207, 211, 217, 288, 334, 344, 431, 467], "instruct": 4, "int": [9, 14, 19, 20, 28, 29, 30, 31, 38, 45, 52, 59, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 86, 88, 92, 93, 94, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 122, 126, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 152, 153, 155, 183, 184, 187, 193, 194, 195, 207, 208, 209, 211, 213, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 330, 337, 338, 340, 344, 347, 348, 352, 380, 383, 404, 406, 407, 411, 412, 413, 423, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 452, 453, 454, 458, 459, 467], "int16": 88, "int32": [0, 9, 38, 53, 88, 92, 93, 101, 115, 116, 118, 120, 136, 139, 141, 142, 152, 196, 231, 233, 337, 338, 352, 354, 362, 364, 369, 371, 377, 380, 396, 408, 431, 441, 458, 459], "int64": [0, 9, 53, 88, 115, 116, 118, 120, 231, 233, 408], "int8": [88, 344], "int_": 9, "intc": 9, "integ": [20, 31, 45, 46, 47, 48, 49, 50, 52, 55, 72, 73, 74, 83, 86, 88, 123, 126, 129, 130, 131, 148, 153, 157, 172, 184, 187, 193, 208, 211, 213, 217, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 322, 330, 343, 344, 347, 352, 380, 383, 388, 404, 405, 406, 407, 409, 410, 411, 413, 416, 418, 426, 429, 431, 433, 437, 439, 450, 452, 454, 467], "integer_lik": 437, "integr": [3, 4, 45, 72, 129, 148, 208, 213, 220, 229, 232, 234, 343, 404, 429, 431, 454], "intel": [3, 90], "intend": [86, 330], "intent": 129, "interchang": [86, 221, 327, 432], "interfac": [0, 136], "interior": 145, "intermedi": [73, 90, 91], "intern": 352, "interp": 6, "interpol": 114, "interpret": [2, 35, 36, 40, 52, 63, 88, 108, 114, 136, 209, 334, 347, 467], "intersect1d": 6, "interv": [10, 20, 21, 22, 23, 25, 83, 98, 143, 195, 207, 352, 380, 382, 384, 385, 387, 395, 396, 432], "intp": [231, 233], "intrins": 467, "introduc": 411, "introduct": 10, "introselect": [86, 311, 340], "inv": [6, 176, 188], "invers": [10, 18, 21, 22, 23, 24, 25, 26, 27, 67, 68, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 182, 188, 193, 194, 199, 398, 421, 422, 435, 436], "invert": [6, 48, 182, 188, 193], "invok": 467, "involv": 193, "io": [135, 196], "irfft": [6, 105, 108, 113, 117, 119], "irfft2": [6, 114], "irfftn": [6, 114], "irrespect": 30, "is_busdai": 6, "isalignedstruct": 88, "isbuiltin": 88, "isclos": [6, 15], "iscomplex": [6, 160, 166], "iscomplexobj": [6, 159, 167], "isfinit": [6, 162, 163, 164, 165, 223, 228, 230, 233], "isfortran": 6, "isin": 6, "isinf": [6, 161, 163, 164, 165, 223], "isn": 88, "isnan": [6, 161, 162, 164, 165, 223, 226, 227, 228, 230, 231, 233], "isnat": [6, 163], "isneginf": [6, 161, 162, 163, 165, 223], "isposinf": [6, 161, 162, 163, 164, 223], "isreal": [6, 159, 167], "isrealobj": [6, 160, 166], "isscalar": 6, "issctyp": 6, "issu": 110, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 86, 136, 137, 139, 460], "item_dtyp": 88, "item_hasobject": 88, "item_is_point": 88, "items": [86, 88], "itemset": 6, "iter": [6, 35, 36, 86, 91, 124, 136, 137, 139, 140, 300, 301, 348, 434, 471], "its": [4, 6, 10, 11, 12, 14, 19, 30, 45, 77, 86, 108, 114, 122, 148, 149, 152, 178, 179, 180, 181, 186, 188, 194, 213, 229, 232, 234, 330, 389, 401, 404, 407, 423, 429, 440, 441, 454, 467], "itself": [41, 86, 88, 223, 288, 467], "iu": 209, "iu1": [209, 447], "iu2": 447, "ix_": 6, "j": [60, 61, 86, 90, 104, 106, 108, 109, 110, 111, 113, 114, 117, 129, 138, 154, 155, 171, 175, 178, 179, 200, 210, 223, 330, 339, 345, 348, 424, 426, 434, 437], "j1": 171, "jame": 10, "ji": 90, "jil": 90, "jk": [90, 91], "jl": 91, "john": 10, "join": [58, 59, 87, 150, 414, 428, 456, 471], "jump": [75, 350], "just": [58, 81, 88, 104, 110, 117], "k": [10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 40, 41, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 77, 80, 84, 86, 90, 94, 96, 97, 99, 101, 102, 123, 129, 130, 131, 132, 133, 134, 146, 147, 151, 154, 157, 161, 162, 163, 171, 172, 173, 174, 183, 189, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 218, 219, 222, 242, 288, 293, 332, 333, 335, 342, 343, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 457, 475], "kaiser": 6, "kappa": 397, "keep": [40, 41, 86, 288], "keepdim": [14, 16, 17, 19, 28, 29, 45, 69, 86, 187, 208, 211, 213, 214, 217, 224, 225, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 305, 306, 307, 312, 324, 326, 331, 344, 346, 348, 404, 429, 431, 434, 454], "kei": [3, 30, 86, 88, 124, 247, 278, 423], "key2": 88, "keyword": [10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 38, 39, 47, 48, 49, 50, 54, 55, 57, 63, 64, 67, 68, 71, 75, 76, 77, 78, 80, 84, 86, 92, 93, 96, 97, 99, 101, 105, 119, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 151, 152, 155, 157, 172, 196, 198, 199, 200, 201, 202, 209, 210, 212, 216, 218, 219, 220, 222, 223, 293, 332, 333, 336, 337, 338, 342, 343, 345, 350, 351, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 403, 405, 409, 410, 415, 419, 420, 421, 422, 430, 435, 436, 441, 443, 447, 449, 450, 453, 457, 458, 459, 467], "ki": 90, "kind": [30, 41, 53, 59, 65, 72, 86, 88, 90, 122, 150, 186, 208, 210, 287, 288, 311, 322, 340, 404, 414, 423, 428, 456, 471], "kl": [10, 90, 91], "known": [10, 137, 390], "kron": 6, "kroneck": 171, "kth": [86, 311, 340], "kwarg": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 47, 48, 49, 50, 54, 55, 57, 60, 61, 64, 67, 68, 75, 76, 84, 86, 94, 96, 97, 99, 102, 123, 129, 130, 131, 132, 133, 134, 138, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 218, 219, 220, 222, 272, 290, 317, 332, 333, 335, 342, 343, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 449, 450, 451], "l": [10, 88, 175, 179, 181], "la": [178, 180, 181], "label": 90, "laid": 39, "lam": 377, "lambda": 138, "lapack": [178, 180], "laplac": 6, "laptop": 4, "larg": [10, 75, 88, 148, 188, 223, 350, 452, 475], "larger": [90, 103, 104, 106, 109, 110, 111, 113, 117, 122, 439, 452, 467], "largest": [10, 91, 117, 122, 130, 153, 183, 219, 223, 405], "largest_singular_valu": 188, "last": [14, 19, 30, 71, 81, 82, 86, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 126, 143, 145, 156, 186, 195, 207, 210, 301, 344, 401, 407, 411, 416, 423, 427, 431, 437, 452], "later": 475, "latest": [4, 135], "latter": [132, 133, 212, 218, 348, 434], "layout": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 39, 40, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 84, 86, 90, 92, 93, 94, 96, 97, 99, 101, 102, 123, 129, 130, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 218, 219, 222, 293, 299, 332, 333, 335, 337, 338, 342, 343, 345, 350, 351, 403, 405, 407, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 449, 450, 457, 458, 459, 460], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [109, 110, 111, 226, 227, 445], "learn": [3, 4, 202], "least": [42, 43, 44, 45, 79, 87, 88, 91, 98, 121, 127, 132, 133, 137, 160, 183, 189, 212, 218, 414, 456], "left": [10, 28, 29, 31, 69, 81, 83, 86, 127, 128, 172, 180, 187, 211, 217, 224, 225, 231, 233, 319, 344, 395, 409, 413, 416, 431, 453], "left_shift": [6, 409], "leg": [151, 404], "legaci": 388, "len": [86, 88, 106, 107, 108, 111, 113, 114, 155, 183, 211, 215, 216, 217, 264, 418, 453], "length": [20, 45, 73, 74, 82, 94, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 117, 119, 140, 143, 145, 148, 150, 178, 192, 207, 211, 215, 217, 226, 227, 348, 355, 407, 408, 414, 416, 418, 427, 434, 437, 438, 456], "less": [6, 73, 74, 94, 146, 147, 148, 149, 174, 183, 188, 226, 227, 231, 233, 335, 344, 419, 431, 439], "less_equ": [6, 94, 146, 147, 173, 335], "let": 354, "level": [460, 467], "level_zero": [20, 32, 35, 36, 37, 39, 63, 77, 80, 92, 93, 101, 105, 119, 136, 137, 138, 139, 141, 142, 143, 152, 195, 196, 207, 216, 336, 337, 338, 441, 453, 458, 459], "lexsort": [6, 30, 423], "li": [411, 412], "librari": [3, 4, 467], "light": 10, "like": [20, 32, 35, 36, 37, 39, 41, 42, 43, 44, 58, 86, 87, 90, 92, 101, 136, 137, 138, 139, 140, 141, 143, 152, 195, 196, 207, 209, 288, 301, 337, 348, 352, 396, 407, 434, 458, 471], "limit": [3, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 36, 37, 39, 47, 48, 49, 50, 51, 52, 54, 55, 57, 60, 61, 63, 64, 66, 67, 68, 70, 75, 76, 84, 86, 88, 92, 93, 94, 95, 96, 97, 99, 101, 115, 116, 118, 120, 122, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 151, 152, 153, 157, 161, 162, 163, 172, 173, 174, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 288, 290, 332, 333, 335, 337, 338, 340, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 377, 378, 380, 383, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 403, 405, 407, 409, 410, 415, 417, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 435, 436, 449, 450, 454, 458, 459], "linalg": [6, 85, 90, 91, 426], "line": [183, 196], "linear": [10, 62, 66, 183, 191, 207, 460, 471], "linspac": [0, 6, 20, 95, 143, 207, 215, 452], "linux": 4, "list": [3, 6, 9, 32, 35, 36, 37, 39, 42, 43, 44, 51, 59, 63, 77, 80, 86, 87, 88, 90, 91, 107, 112, 121, 141, 142, 143, 145, 150, 160, 167, 195, 196, 207, 210, 330, 406, 408, 414, 417, 428, 437, 440, 453, 456, 457], "list_pickl": 88, "littl": 88, "ln": 207, "load": [6, 137, 196], "loadtxt": [6, 137], "loc": [352, 363, 365, 366, 374, 398], "local": 4, "locat": [0, 4, 144, 164, 165, 209, 339, 363, 365, 416], "log": [6, 99, 143, 190, 195, 198, 199, 200, 201, 207, 208, 367], "log10": [6, 197, 199, 200], "log1p": [6, 97, 99, 197, 198, 200], "log2": [6, 197, 198, 199, 202], "log_bas": 207, "logabsdet": 190, "logaddexp": [6, 72, 202, 208], "logaddexp2": [6, 201, 208], "logarithm": [72, 177, 190, 195, 197, 198, 199, 200, 201, 202, 208, 368, 471], "logic": [14, 19, 203, 204, 205, 206, 460, 471], "logical_and": [6, 47, 204, 205, 206], "logical_not": [6, 48, 157, 203, 205, 206], "logical_or": [6, 49, 203, 204, 206], "logical_xor": [6, 50, 203, 204, 205], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 143, 195], "logsumexp": [72, 201, 202], "lomax": 375, "long": [88, 184], "longer": [108, 114, 475], "look": [333, 434], "lookfor": 6, "loop": 90, "loos": 89, "lorentz": 390, "lose": [108, 114], "low": [104, 106, 110, 111, 352, 380, 383, 396, 467], "lower": [77, 101, 148, 149, 169, 175, 179, 181, 209, 441, 442, 443, 444, 447, 448], "lowest": [45, 90, 91, 352, 380], "lstsq": 6, "m": [4, 10, 70, 87, 88, 90, 101, 104, 106, 108, 110, 111, 114, 126, 127, 128, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 209, 210, 348, 433, 434, 441, 442, 443, 444, 446, 447, 448], "machin": [4, 10, 122, 153, 183, 202], "machineri": 88, "made": [42, 88, 171, 223], "magnitud": [11, 12, 64, 102, 345], "mai": [14, 18, 19, 41, 53, 57, 59, 65, 74, 86, 88, 90, 91, 98, 104, 106, 108, 109, 110, 111, 113, 114, 117, 145, 149, 150, 176, 178, 179, 183, 187, 189, 202, 207, 210, 223, 229, 232, 234, 288, 320, 348, 414, 428, 438, 456, 467], "main": [77, 78, 79, 80, 81, 101, 121, 152, 181, 209, 439, 441, 442, 443, 446, 447], "mainstai": 10, "maintain": [83, 86, 88, 148, 319, 416, 434], "major": [4, 35, 36, 37, 39, 40, 41, 86, 288, 334, 401], "make": [37, 39, 58, 88, 215, 452], "manag": 0, "mani": [10, 467], "manipul": [3, 78, 460, 471], "manual": [4, 88, 438], "mappingproxi": 88, "mask": [88, 209, 334, 341, 349, 433, 443, 447], "mask_func": 209, "mask_indic": [6, 443, 447], "mass": 148, "mat": 6, "match": [11, 12, 36, 59, 65, 69, 72, 82, 88, 137, 145, 156, 208, 210, 347, 348, 404, 428, 433, 434, 437, 457], "math": [10, 95], "mathemat": [460, 471], "matlab": 134, "matmul": [6, 85, 189, 192, 455], "matplotlib": [215, 390], "matric": [121, 138, 155, 177, 178, 180, 182, 185, 187, 188, 189, 190, 192, 210, 215, 471], "matrix": [70, 85, 90, 156, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 210, 215, 426, 446, 453, 455, 460, 471], "matrix_pow": [6, 426], "matrix_rank": 6, "max": [0, 6, 16, 28, 86, 122, 132, 133, 148, 149, 153, 183, 185, 212, 217, 218, 228, 290, 369, 434, 438, 452, 467], "max_arg": 0, "max_val": 0, "maxima": [132, 211, 212], "maximum": [0, 6, 16, 28, 29, 57, 86, 91, 132, 133, 211, 217, 218, 224, 225, 228, 230, 285, 305, 343, 346, 348, 452], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 20, 32, 34, 35, 36, 37, 38, 39, 41, 45, 63, 69, 77, 78, 80, 86, 90, 92, 93, 101, 104, 105, 106, 110, 111, 117, 119, 136, 137, 138, 139, 140, 141, 142, 145, 152, 155, 176, 187, 196, 209, 214, 216, 229, 232, 234, 288, 293, 301, 330, 336, 337, 338, 352, 365, 367, 370, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 397, 398, 401, 407, 429, 431, 441, 443, 447, 453, 454, 458, 459, 467], "meaningfulli": 467, "meant": 467, "median": [0, 6], "memori": [3, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 39, 40, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 84, 86, 88, 90, 92, 93, 94, 96, 97, 99, 101, 102, 123, 129, 130, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 215, 218, 219, 222, 293, 299, 325, 332, 333, 335, 337, 338, 342, 343, 345, 350, 351, 403, 405, 407, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 449, 450, 457, 458, 459, 460, 475], "mersenn": 352, "meshgrid": [6, 138, 155, 216, 336], "met": [85, 186], "meta": 88, "metadata": 88, "method": [10, 14, 16, 17, 19, 30, 41, 63, 85, 86, 88, 124, 135, 137, 185, 188, 192, 288, 293, 317, 320, 334, 352, 407, 418, 431, 433, 440, 460], "mgrid": [104, 106, 155], "mgridclass": 216, "middl": [10, 81, 104, 106, 110, 111, 180], "might": [90, 109, 110, 111], "min": [6, 17, 29, 57, 86, 122, 132, 133, 148, 149, 153, 176, 183, 189, 192, 211, 212, 218, 230, 290, 434, 467], "min_scalar_typ": 6, "minima": [133, 217, 218], "minimum": [6, 17, 28, 29, 57, 86, 129, 132, 133, 211, 212, 217, 224, 225, 228, 230, 286, 307, 343, 346], "minlength": 46, "mintypecod": 6, "minu": [99, 131, 219, 405, 450], "miscellan": [2, 460, 471], "mise": 397, "miss": 196, "mix": 210, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 100, 405, 452], "mode": [56, 62, 66, 86, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 189, 289, 313, 328, 347, 390, 395, 416, 433, 434], "model": 354, "modf": 6, "modifi": [63, 81, 121, 389], "modul": [103, 144, 460], "modulu": [134, 219, 405], "monoton": [83, 148], "moor": 188, "more": [0, 3, 4, 30, 32, 42, 43, 44, 87, 88, 90, 91, 99, 127, 128, 135, 137, 149, 150, 155, 183, 184, 185, 186, 188, 192, 199, 201, 428, 437, 452, 467, 475], "most": [3, 4, 81, 82, 88, 91, 103, 109, 223, 352, 388, 427], "move": [86, 221, 311, 411, 412, 440], "moveaxi": [6, 411, 412, 440], "msg": 0, "msort": 6, "mt19937": 388, "mu": [363, 367, 374, 397], "multi": [2, 86, 115, 116, 118, 120, 155, 216, 325, 336, 460], "multi_dot": [6, 85, 90, 91], "multiarrai": 88, "multidimension": [148, 156, 457], "multinomi": 6, "multipl": [10, 28, 29, 30, 45, 59, 71, 72, 88, 90, 104, 106, 110, 111, 149, 150, 178, 179, 180, 181, 182, 186, 208, 211, 213, 217, 228, 229, 230, 232, 234, 404, 414, 423, 428, 429, 454, 456, 460], "multipli": [6, 73, 90, 180, 231, 344], "multivari": 370, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 76, 82, 84, 85, 87, 96, 97, 98, 99, 102, 104, 106, 108, 109, 110, 111, 113, 114, 117, 121, 123, 127, 129, 130, 131, 132, 133, 134, 137, 140, 145, 146, 147, 148, 149, 150, 151, 154, 157, 161, 162, 163, 164, 165, 172, 173, 174, 175, 186, 187, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 332, 333, 335, 341, 342, 343, 344, 345, 347, 348, 350, 351, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 449, 450, 454, 456, 457], "mx": 183, "n": [0, 4, 10, 74, 78, 79, 82, 83, 86, 87, 88, 89, 98, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 130, 138, 145, 152, 183, 184, 185, 188, 189, 192, 193, 194, 209, 210, 215, 232, 234, 330, 341, 347, 354, 369, 371, 381, 391, 416, 418, 426, 429, 432, 433, 434, 437, 440, 441, 442, 443, 444, 446, 447, 448, 453, 454, 467], "n1": 215, "n2": [196, 215], "n3": 215, "naiv": 91, "name": [0, 6, 88], "namedtupl": 189, "nan": [9, 14, 15, 19, 28, 29, 33, 35, 36, 84, 129, 132, 133, 158, 161, 162, 163, 164, 165, 198, 211, 212, 213, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 343, 344, 425, 429, 449, 454, 471], "nan_to_num": 6, "nanargmax": [6, 28, 225], "nanargmin": [6, 29, 224], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 132, 133, 211, 212, 218, 230], "nanmean": [6, 213, 232, 234, 429, 454], "nanmedian": 6, "nanmin": [6, 132, 133, 212, 217, 218, 228], "nanpercentil": 6, "nanprod": [6, 344], "nanquantil": 6, "nanstd": [6, 213, 229, 234, 429, 454], "nansum": 6, "nanvar": [6, 213, 229, 232, 429, 454], "nat": 163, "nativ": 88, "native_cod": 88, "native_dt": 88, "natur": [190, 197, 198, 199, 200, 201, 202, 208], "nbad": 364, "nbyte": 86, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 472], "ndim": [6, 32, 39, 42, 43, 44, 70, 78, 81, 86, 88, 121, 171, 192, 211, 217, 337, 438, 440, 458], "ndmin": 32, "nearest": [31, 55, 123, 130, 131, 219, 405, 410, 413, 450], "necessari": [4, 14, 19, 20, 32, 35, 36, 37, 39, 42, 65, 73, 74, 89, 100, 108, 114, 121, 143, 195, 207, 210, 213, 226, 227, 229, 231, 232, 233, 234, 344, 407, 429, 431, 454, 475], "necessarili": [178, 180], "need": [4, 81, 144, 433, 434, 457], "needs_init": 88, "needs_pyapi": 88, "neg": [6, 10, 14, 19, 31, 46, 64, 80, 81, 83, 86, 98, 101, 104, 106, 109, 110, 111, 114, 117, 126, 129, 140, 145, 148, 161, 162, 163, 164, 165, 184, 223, 228, 230, 232, 233, 234, 320, 342, 343, 344, 347, 371, 413, 429, 431, 433, 434, 439, 454], "negative_binomi": 6, "neginf": 223, "neither": [85, 132, 133, 192, 210, 228, 230], "nest": [38, 87, 150, 414, 428, 456], "nested_it": 6, "net": [132, 133, 212, 218], "never": [407, 452], "new": [32, 41, 51, 52, 58, 59, 69, 72, 73, 74, 81, 86, 87, 88, 89, 92, 93, 98, 132, 133, 135, 139, 140, 141, 142, 143, 150, 152, 195, 207, 208, 209, 212, 218, 221, 226, 227, 231, 233, 288, 317, 320, 330, 337, 338, 404, 407, 411, 412, 414, 428, 438, 440, 456, 457, 458, 459, 467], "new_dtyp": 88, "new_ord": 88, "newaxi": 98, "newbyteord": [6, 88], "newli": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 41, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 84, 86, 92, 93, 94, 96, 97, 99, 101, 102, 123, 129, 130, 131, 132, 133, 134, 141, 142, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 218, 219, 222, 288, 293, 332, 333, 335, 337, 338, 342, 343, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 449, 450, 458, 459], "newshap": 407, "next": [4, 122, 333], "nextaft": 6, "ngood": 364, "ni": [215, 348, 433, 434], "nine": 354, "ninf": [9, 228, 230, 233], "ninja": 4, "nj": [348, 433, 434], "njm": 90, "nk": [348, 433, 434], "nl": 10, "nlk": 90, "nn": 215, "noisi": 183, "non": [20, 32, 35, 36, 37, 38, 39, 41, 45, 46, 63, 69, 77, 78, 80, 83, 86, 92, 93, 100, 101, 105, 114, 117, 119, 125, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 152, 155, 159, 161, 195, 196, 207, 209, 216, 223, 224, 225, 228, 230, 232, 234, 288, 293, 310, 320, 334, 336, 337, 338, 341, 343, 352, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 429, 437, 441, 443, 447, 453, 454, 457, 458, 459], "nonc": [372, 373], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 161, 162, 163, 164, 165, 172, 173, 174, 176, 183, 185, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 303, 305, 306, 307, 311, 312, 313, 316, 318, 319, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 440, 441, 443, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 467], "nonzero": [6, 69, 86, 125, 457, 467], "nor": [132, 133, 180, 228, 230], "norm": [6, 10, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 176, 180, 183, 471], "normal": [6, 70, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 148, 178, 179, 189, 202, 352, 367, 370, 381, 393], "not_equ": [6, 94, 146, 147, 173, 174], "note": [11, 12, 13, 14, 18, 19, 28, 29, 30, 31, 40, 63, 71, 75, 81, 83, 84, 86, 88, 91, 98, 100, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 117, 130, 132, 133, 136, 137, 138, 139, 140, 148, 155, 161, 178, 196, 207, 219, 222, 232, 233, 234, 293, 317, 334, 341, 347, 350, 355, 357, 358, 368, 373, 405, 407, 423, 429, 430, 432, 437, 438, 449, 452, 454, 455], "notic": [88, 114, 117], "notimplementederror": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 36, 37, 39, 47, 48, 49, 50, 51, 52, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 84, 86, 92, 93, 94, 96, 97, 99, 101, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 151, 152, 157, 161, 162, 163, 172, 173, 174, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 217, 218, 219, 222, 228, 229, 230, 232, 233, 234, 288, 332, 333, 335, 337, 338, 342, 343, 344, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 435, 436, 449, 450, 454, 458, 459], "now": [14, 19, 37, 39, 78, 180, 183, 209], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 296, 298, 301, 302, 303, 311, 315, 320, 322, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 350, 351, 377, 386, 399, 400, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "nr": 10, "nsamp": 364, "nsampl": 364, "nth": 437, "nuc": 187, "num": [0, 88, 95, 143, 195, 207, 452], "number": [10, 14, 15, 18, 19, 20, 31, 45, 46, 51, 52, 69, 78, 80, 82, 83, 86, 88, 89, 90, 91, 98, 101, 102, 106, 108, 109, 110, 111, 113, 114, 117, 122, 123, 131, 136, 137, 139, 140, 143, 145, 148, 149, 152, 153, 158, 159, 160, 161, 167, 176, 182, 185, 189, 190, 192, 193, 194, 195, 202, 207, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 309, 318, 321, 334, 341, 344, 345, 352, 354, 364, 388, 405, 406, 410, 411, 412, 413, 420, 429, 432, 438, 440, 441, 450, 453, 454, 467, 471], "numer": [3, 4, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 27, 31, 60, 61, 64, 67, 68, 84, 88, 94, 96, 99, 109, 110, 111, 114, 131, 132, 133, 146, 147, 154, 158, 161, 162, 163, 173, 174, 197, 198, 199, 200, 212, 218, 222, 332, 335, 342, 343, 345, 402, 410, 413, 419, 420, 421, 422, 430, 435, 436, 449, 471], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 297, 301, 302, 303, 315, 320, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 467, 471], "nx": 215, "ny": 215, "nyquist": [10, 104, 106, 107, 108, 109, 110, 111, 114, 117, 119], "nzero": 9, "o": [4, 14, 19, 88], "obj": [28, 29, 30, 88, 135, 148], "obj2sctyp": 6, "object": [20, 32, 35, 36, 37, 38, 39, 40, 41, 63, 77, 78, 80, 86, 88, 92, 93, 98, 101, 105, 119, 122, 124, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 155, 176, 179, 187, 195, 196, 207, 209, 216, 288, 293, 317, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 407, 441, 443, 447, 453, 458, 459, 467], "obtain": [10, 81, 175, 334], "obviou": 10, "occupi": [122, 153], "occur": [41, 53, 59, 65, 86, 90, 150, 178, 210, 223, 288, 414, 428, 456], "occurr": [28, 29, 46, 83, 148, 224, 225], "odd": [10, 105, 108, 112, 113, 114, 117, 119], "off": [20, 178, 183], "offset": [81, 86, 88, 136, 137, 209, 296, 329, 439, 443, 444, 447, 448], "ogrid": [155, 457], "ogridclass": 336, "oil": [354, 371], "omit": [352, 380], "onc": 182, "one": [3, 4, 28, 29, 30, 32, 34, 38, 42, 43, 44, 45, 57, 62, 65, 66, 69, 86, 88, 92, 94, 98, 100, 101, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 127, 128, 129, 132, 133, 137, 141, 145, 149, 150, 152, 155, 160, 180, 184, 187, 197, 198, 200, 209, 211, 212, 215, 216, 217, 218, 224, 225, 231, 233, 293, 301, 304, 334, 336, 338, 341, 344, 371, 412, 423, 427, 428, 431, 433, 437, 443, 444, 447, 448, 458, 467], "oneapi": [20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "onedpl": 4, "onemkl": [4, 178, 180], "ones": [6, 32, 37, 39, 45, 72, 84, 86, 90, 92, 93, 94, 98, 101, 141, 142, 151, 152, 171, 183, 185, 208, 209, 226, 231, 338, 344, 404, 408, 412, 440, 441, 449, 458, 459], "ones_lik": [6, 32, 93, 142, 337, 459], "onli": [10, 14, 19, 20, 28, 29, 30, 32, 35, 36, 37, 39, 41, 42, 45, 57, 63, 66, 70, 86, 88, 90, 91, 92, 93, 101, 107, 115, 116, 117, 118, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 155, 175, 179, 181, 189, 192, 195, 196, 207, 209, 210, 211, 213, 214, 217, 223, 224, 225, 228, 229, 230, 231, 232, 234, 288, 320, 322, 337, 338, 340, 341, 342, 344, 352, 374, 380, 396, 407, 417, 423, 429, 431, 434, 447, 452, 454, 457, 458, 459, 467], "open": [137, 155, 195, 336, 352, 382, 384, 385, 387, 396, 432], "opencl": [20, 32, 35, 36, 37, 39, 63, 77, 80, 92, 93, 101, 105, 119, 136, 137, 138, 139, 141, 142, 143, 152, 195, 196, 207, 216, 336, 337, 338, 441, 453, 458, 459], "oper": [10, 13, 47, 48, 49, 50, 84, 88, 90, 91, 94, 98, 121, 131, 134, 146, 147, 157, 172, 173, 174, 175, 203, 205, 210, 211, 217, 219, 222, 223, 224, 225, 332, 335, 342, 343, 347, 405, 409, 430, 438, 449, 452, 460, 471], "operand": [90, 91, 194, 339, 437], "opposit": [10, 88, 100, 108, 113, 341], "optim": [4, 90, 91, 148, 149], "option": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 45, 47, 48, 49, 50, 53, 54, 55, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 172, 173, 174, 175, 176, 179, 181, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 301, 330, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 345, 347, 350, 351, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 475], "ord": 187, "order": [10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 36, 37, 39, 40, 41, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 75, 76, 81, 83, 84, 86, 88, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 104, 106, 109, 110, 111, 114, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 141, 142, 145, 146, 147, 148, 151, 154, 157, 161, 162, 163, 172, 173, 174, 176, 178, 179, 180, 181, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 215, 218, 219, 221, 222, 242, 287, 288, 293, 301, 311, 314, 319, 322, 330, 332, 333, 334, 335, 337, 338, 340, 342, 343, 345, 350, 351, 401, 403, 405, 407, 409, 410, 415, 416, 419, 420, 421, 422, 423, 425, 426, 430, 435, 436, 437, 440, 449, 450, 453, 457, 458, 459, 471], "ordin": [183, 191], "ordinari": [114, 156, 175], "org": 4, "orient": [71, 348, 434], "origin": [51, 81, 86, 108, 114, 187, 215, 221, 231, 233, 407, 411], "ortho": [10, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117], "orthogon": [180, 189], "orthonorm": 189, "other": [30, 34, 41, 51, 52, 82, 86, 88, 109, 110, 111, 114, 130, 138, 152, 178, 180, 186, 221, 238, 239, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 277, 280, 281, 282, 288, 352, 396, 412, 423, 460, 471], "otherwis": [3, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 63, 64, 66, 67, 68, 69, 70, 75, 76, 77, 82, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 115, 116, 118, 120, 123, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 151, 152, 156, 157, 161, 162, 163, 172, 173, 174, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 288, 317, 332, 333, 335, 337, 338, 342, 343, 344, 345, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 435, 436, 439, 449, 450, 454, 457, 458, 459], "otim": 437, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 182, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 289, 290, 293, 294, 295, 301, 305, 306, 307, 312, 318, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 350, 351, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459], "outer": [6, 71, 81, 90, 91, 171], "output": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 35, 36, 37, 38, 39, 41, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 67, 68, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 117, 119, 123, 125, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 151, 152, 154, 155, 157, 158, 159, 161, 162, 163, 172, 173, 174, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 225, 226, 227, 229, 231, 232, 233, 234, 288, 293, 332, 333, 335, 336, 337, 338, 342, 343, 344, 345, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 405, 406, 409, 410, 413, 415, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 435, 436, 438, 439, 441, 443, 447, 449, 450, 452, 453, 454, 457, 458, 459, 471, 475], "outsid": [148, 149], "over": [10, 14, 19, 45, 72, 73, 74, 85, 86, 90, 91, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 126, 138, 143, 148, 149, 156, 187, 195, 207, 208, 210, 211, 213, 215, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 301, 344, 348, 352, 379, 384, 395, 396, 404, 429, 431, 433, 434, 437, 452, 454, 471], "overal": [104, 106, 110, 111], "overflow": 129, "overrid": [71, 93, 142, 338, 459], "overview": 2, "overwrite_input": 214, "p": [10, 176, 183, 184, 354, 357, 362, 368, 371, 452], "pack": [81, 401, 471], "packag": [0, 3], "packbit": 6, "pad": [6, 88, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117], "page": [3, 471], "pair": [10, 91, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 178], "parallel": [1, 3, 4, 9, 460], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 298, 301, 317, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459], "parameter": [352, 374, 396], "pareto": 6, "pars": [137, 196], "part": [3, 10, 86, 114, 132, 133, 154, 159, 160, 166, 167, 178, 179, 181, 209, 212, 218, 220, 302, 315, 402, 424, 443, 447, 450, 467], "partial": [30, 423], "particular": [88, 186], "particularli": 90, "partit": [6, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 423, 441, 443, 447, 453, 458, 459, 467], "pass": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 88, 92, 93, 101, 104, 105, 106, 110, 111, 119, 136, 137, 138, 139, 140, 141, 142, 149, 152, 155, 183, 196, 209, 216, 223, 293, 317, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 441, 443, 444, 447, 448, 453, 458, 459], "path": [4, 90, 91, 137, 196], "path_info": 91, "pathlib": 196, "pattern": 45, "penros": 188, "per": [90, 105, 119], "percentil": [6, 214], "perf_count": 0, "perform": [14, 19, 36, 57, 82, 90, 104, 106, 109, 110, 111, 126, 175, 344, 431], "period": [10, 452], "permit": 137, "permut": [6, 86, 90, 221, 330, 440, 471], "phase": [10, 18, 452], "phase_deg": 452, "pi": [0, 9, 10, 21, 23, 25, 26, 67, 68, 75, 76, 103, 350, 421, 422, 435, 436, 452, 475], "pickl": [137, 196], "piecewis": 6, "pinf": 9, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 31, 57, 59, 73, 74, 85, 86, 98, 100, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 121, 155, 158, 210, 211, 213, 217, 223, 226, 227, 229, 231, 232, 233, 234, 301, 320, 322, 330, 336, 344, 347, 348, 389, 407, 411, 413, 423, 428, 429, 431, 433, 439, 454, 467], "platform": [73, 74, 88, 226, 227, 231, 233, 344, 431], "pleas": [0, 3, 148, 467], "plot": 390, "plt": [215, 390], "plu": [197, 198, 200], "point": [10, 11, 12, 18, 20, 26, 31, 35, 36, 45, 64, 72, 88, 92, 93, 97, 101, 102, 103, 108, 109, 113, 114, 117, 122, 123, 129, 136, 137, 138, 140, 141, 142, 145, 152, 154, 183, 184, 195, 196, 201, 202, 208, 213, 223, 229, 232, 234, 333, 337, 338, 352, 381, 393, 402, 403, 404, 413, 415, 416, 429, 441, 454, 458, 459, 471], "pointer": 88, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 47, 48, 49, 50, 54, 55, 60, 61, 64, 67, 68, 75, 76, 84, 86, 94, 96, 97, 99, 102, 123, 129, 130, 131, 132, 133, 134, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 218, 219, 222, 332, 333, 335, 342, 343, 345, 350, 351, 352, 379, 403, 405, 409, 410, 413, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 449, 450], "portion": [148, 149], "posinf": 223, "posit": [6, 10, 14, 15, 19, 20, 31, 35, 36, 54, 64, 80, 81, 86, 98, 101, 102, 104, 106, 109, 110, 111, 114, 117, 119, 122, 129, 137, 158, 161, 162, 163, 164, 165, 175, 184, 193, 221, 223, 228, 230, 233, 311, 325, 332, 354, 378, 411, 412, 413, 415, 425, 426, 439, 440], "possess": 178, "possibl": [10, 40, 41, 43, 44, 86, 90, 91, 98, 132, 133, 145, 148, 209, 288, 317, 407, 427, 432, 433, 434, 440], "possibli": 38, "pow": 467, "power": [6, 10, 97, 103, 129, 184, 426, 453], "pre": 149, "precis": [11, 12, 45, 73, 74, 88, 90, 122, 129, 154, 183, 209, 226, 227, 231, 233, 344, 402, 431, 439], "predecessor": 452, "prefer": [56, 63, 86, 293, 320, 334], "prepend": [82, 89, 438], "present": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 88, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 152, 155, 196, 209, 216, 228, 230, 233, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 441, 443, 447, 453, 458, 459], "preserv": [41, 42, 43, 44, 57, 86, 88, 90, 126, 127, 128, 129, 179, 180, 181, 288, 439], "press": 10, "previou": 45, "print": [0, 4, 45, 46, 62, 83, 88, 91, 352, 371, 376, 451], "print_device_info": 0, "printabl": 91, "printopt": 6, "prior": 82, "prob1": [201, 202], "prob12": [201, 202], "prob2": [201, 202], "probabl": [148, 202, 354, 362, 371], "proce": 467, "process": 10, "processor": 90, "prod": [6, 73, 86, 193, 194, 231, 467], "produc": [10, 88, 196, 348, 416, 434], "product": [6, 71, 73, 85, 86, 90, 91, 156, 171, 186, 191, 193, 194, 210, 222, 226, 231, 294, 339, 344, 437, 455, 471], "program": [4, 130], "progress": [143, 195], "project": [88, 345], "promot": [13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 39, 47, 49, 50, 53, 54, 64, 67, 68, 75, 76, 84, 96, 97, 99, 129, 131, 132, 133, 134, 143, 151, 172, 195, 197, 198, 199, 200, 201, 202, 207, 210, 212, 218, 219, 222, 333, 343, 350, 351, 403, 405, 408, 409, 415, 419, 421, 422, 425, 426, 430, 435, 436, 438, 449, 450], "promote_typ": 6, "propag": [88, 132, 133, 211, 212, 217, 218, 226, 227, 228, 230, 231, 233], "proper": [132, 133, 178, 180], "properti": [10, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 179, 181, 189, 195, 196, 207, 209, 216, 236, 288, 293, 297, 299, 300, 302, 304, 308, 309, 315, 320, 321, 325, 330, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459, 467], "protocol": [38, 88, 135], "prototyp": 93, "provid": [0, 6, 10, 28, 29, 59, 65, 72, 86, 90, 91, 98, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 139, 148, 149, 150, 164, 165, 208, 224, 225, 228, 230, 231, 233, 352, 380, 383, 404, 414, 428, 433, 456, 457, 475], "pseudo": [188, 352], "ptp": 6, "pure": [10, 108, 114, 117], "purpos": 183, "put": [6, 10, 86, 100, 108, 114, 341, 348, 434, 467], "put_along_axi": [6, 347, 434], "putmask": [6, 347], "pval": 369, "py": 4, "pypi": 4, "pyplot": [215, 390], "pytest": 4, "python": [0, 2, 3, 38, 86, 88, 134, 135, 219, 303, 405, 406, 467], "pzero": 9, "q": [180, 184, 189, 194, 214], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [18, 25, 104], "quantil": 6, "quaternion": 184, "question": 77, "queue": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "quick": [2, 3], "quickli": 475, "quotient": 26, "r": [76, 189], "r2": 189, "rad": 76, "rad2deg": [6, 75, 76, 452], "radian": [6, 18, 21, 22, 23, 25, 26, 75, 76, 350, 452, 475], "rais": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 36, 37, 39, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 67, 68, 72, 75, 76, 83, 84, 85, 86, 92, 93, 94, 96, 97, 99, 101, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 151, 152, 157, 161, 162, 163, 172, 173, 174, 184, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 217, 218, 219, 222, 224, 225, 228, 229, 230, 232, 233, 234, 288, 289, 332, 333, 335, 337, 338, 342, 343, 344, 345, 350, 351, 403, 404, 405, 407, 409, 410, 415, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 435, 436, 449, 450, 454, 458, 459, 467], "rand": [6, 91, 352, 382, 384, 385, 387], "randint": [6, 86, 303, 352, 383], "randn": [6, 126, 127, 128, 188, 189, 192, 194, 352, 428], "random": [86, 91, 126, 127, 128, 180, 186, 188, 189, 192, 194, 303, 428, 460, 471], "random_integ": [6, 352, 380], "random_sampl": [6, 352, 379, 382, 385, 387], "randomli": 376, "randomst": 380, "ranf": 6, "rang": [0, 83, 139, 148, 149, 202, 346, 347, 371, 376, 406, 428, 437, 440, 452, 471], "rank": [98, 100, 138, 183, 185, 432], "rate": [105, 119], "rather": 334, "ratio": [0, 84, 131, 183, 449, 475], "ration": 471, "ravel": [6, 86, 100, 125, 187, 301, 339, 467], "ravel_multi_index": 6, "raw": 189, "rayleigh": 6, "rcond": [183, 188], "re": [28, 29, 46, 77, 411, 451], "read": [77, 81, 86, 88, 136, 137, 139, 140, 196, 301, 401, 407], "readonli": 88, "real": [6, 11, 12, 20, 26, 33, 54, 55, 64, 72, 86, 103, 106, 108, 113, 114, 115, 116, 117, 118, 120, 122, 130, 132, 133, 134, 151, 154, 159, 166, 167, 175, 178, 179, 180, 181, 185, 188, 189, 190, 192, 201, 202, 208, 212, 218, 219, 223, 232, 234, 354, 371, 403, 404, 405, 415, 424, 429, 450, 454, 467, 471], "real_if_clos": 6, "rearrang": [86, 311, 471], "rebuild": 87, "recal": 88, "recent": 427, "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 415, 425], "recommend": [90, 334, 438], "reconstruct": [88, 192], "recov": 10, "reduc": [14, 19, 28, 29, 45, 189, 192, 208, 211, 213, 215, 217, 224, 225, 228, 229, 230, 231, 232, 233, 234, 344, 404, 429, 431, 454], "reduce_hypot": 151, "reduct": [14, 19], "redund": 117, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467], "reflect": 467, "reflector": 189, "regardless": [88, 179, 181], "regular": 196, "rel": [15, 86, 158, 325, 411, 412], "relat": 88, "relev": [88, 143, 195, 207], "rem": 134, "remain": [14, 19, 45, 91, 148, 208, 213, 221, 229, 232, 234, 404, 407, 429, 454], "remaind": [6, 131, 134, 219, 343], "remov": [28, 29, 75, 81, 86, 98, 114, 323, 344, 350, 427, 431, 471], "reorder": [90, 126, 194, 221], "rep": 438, "repeat": [6, 86, 104, 106, 110, 111, 121, 178, 179, 180, 181, 215, 341, 438, 467], "repeatedli": 90, "repetit": [0, 406, 438], "replac": [3, 10, 38, 57, 100, 223, 226, 227, 341, 348, 357, 467], "replic": 438, "repo": 4, "repr": 276, "repres": [10, 20, 32, 35, 36, 37, 38, 39, 45, 88, 91, 109, 117, 135, 138, 143, 145, 155, 190, 195, 207, 215, 234, 352, 445, 467], "represent": [47, 49, 50, 91, 122, 153, 155, 223, 333, 467], "request": 412, "requir": [4, 6, 32, 37, 39, 41, 86, 88, 90, 102, 155, 223, 288, 320], "res_cpu": 77, "res_host": 77, "resampl": 114, "rese": 388, "reset": 467, "reshap": [0, 6, 13, 28, 29, 42, 44, 45, 77, 78, 79, 81, 84, 85, 86, 87, 90, 98, 100, 107, 112, 126, 134, 155, 156, 171, 187, 209, 210, 211, 217, 222, 296, 301, 320, 330, 341, 376, 401, 411, 430, 437, 439, 443, 444, 447, 448, 449, 467], "resid": [98, 102], "residu": 183, "resiz": [6, 98, 467], "resolut": 122, "resolv": [72, 98, 208, 404], "resourc": 0, "respect": [10, 13, 26, 47, 49, 50, 84, 86, 94, 129, 131, 134, 145, 146, 147, 172, 173, 174, 201, 202, 203, 205, 206, 219, 222, 325, 335, 343, 405, 409, 430, 449, 452], "restor": 411, "result": [0, 4, 10, 14, 19, 26, 28, 29, 45, 47, 48, 49, 50, 53, 57, 59, 64, 69, 72, 73, 74, 84, 85, 88, 91, 93, 94, 99, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 123, 129, 131, 136, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 155, 157, 161, 162, 163, 164, 165, 172, 173, 174, 175, 178, 187, 189, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 217, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 334, 335, 338, 339, 343, 344, 347, 352, 354, 384, 404, 407, 408, 409, 410, 412, 413, 416, 419, 420, 428, 429, 431, 433, 434, 437, 438, 445, 449, 450, 454, 457, 459, 467], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 53, 88, 471], "ret": 351, "retriev": [81, 88], "retstep": 195, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 310, 311, 312, 314, 317, 318, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 355, 374, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 467], "reus": [149, 407], "revers": [81, 86, 121, 126, 127, 128, 330, 440, 453], "rewrit": 183, "rfft": [6, 10, 105, 108, 113, 114, 119], "rfft2": 6, "rfftfreq": [6, 105], "rfftn": [6, 103, 106, 117], "right": [10, 57, 71, 81, 83, 127, 128, 151, 172, 178, 179, 180, 181, 186, 194, 209, 395, 404, 409, 416, 439, 443, 447, 453], "right_shift": [6, 172], "rightmost": [148, 149, 194], "rint": [6, 31, 55, 123, 130, 413, 450], "roll": [6, 412], "rollaxi": [6, 411], "root": [6, 54, 151, 176, 403, 404, 415, 425, 426], "rot90": 6, "roughli": [88, 183], "round": [6, 20, 31, 55, 86, 123, 130, 131, 178, 219, 405, 410, 450, 467, 471], "round_": 6, "roundoff": [108, 113], "routin": [2, 460, 467], "row": [39, 41, 58, 59, 73, 74, 81, 86, 87, 101, 127, 128, 145, 150, 152, 155, 186, 192, 288, 334, 401, 414, 428, 441, 443, 456], "row_stack": [6, 456], "rowvar": 70, "rsqrt": [403, 425], "rtol": [15, 158], "rule": [13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 39, 45, 47, 49, 50, 53, 54, 64, 65, 67, 68, 71, 75, 76, 84, 96, 97, 99, 131, 132, 133, 134, 143, 151, 172, 195, 197, 198, 199, 200, 201, 202, 207, 208, 210, 212, 213, 218, 219, 222, 229, 232, 234, 333, 343, 350, 351, 403, 404, 405, 408, 409, 415, 419, 421, 422, 425, 426, 429, 430, 431, 435, 436, 449, 450, 454], "run": [0, 4], "runtim": 4, "runtimewarn": [228, 230], "s1": [86, 88, 171, 325], "s10": 88, "s16": 88, "s2": [86, 88, 325], "s25": 88, "s3": [86, 325], "safe": [41, 53, 59, 65, 86, 90, 150, 210, 288, 414, 428, 456], "safe_ev": 6, "said": 194, "same": [4, 10, 11, 12, 13, 14, 15, 19, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 41, 45, 47, 48, 49, 50, 52, 58, 59, 64, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 93, 94, 98, 100, 109, 110, 111, 121, 123, 129, 131, 132, 133, 134, 135, 142, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 164, 165, 166, 171, 172, 173, 174, 180, 184, 189, 201, 202, 203, 205, 206, 208, 211, 212, 213, 217, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 317, 330, 333, 335, 338, 341, 343, 344, 348, 352, 374, 380, 396, 401, 402, 404, 405, 406, 409, 411, 412, 414, 416, 423, 427, 428, 429, 430, 431, 433, 434, 437, 439, 442, 444, 446, 448, 449, 454, 455, 456, 459, 475], "same_kind": [41, 53, 59, 65, 86, 90, 150, 210, 288, 414, 428, 456], "sampl": [10, 105, 112, 117, 119, 143, 145, 148, 195, 207, 348, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 434, 443, 447, 460, 471], "sample_r": 119, "satisfi": [32, 37, 39, 41, 86, 100, 182, 288, 341], "save": [6, 137, 475], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 26, 32, 33, 34, 35, 36, 37, 38, 39, 47, 49, 50, 53, 63, 64, 65, 71, 77, 80, 82, 84, 85, 86, 88, 90, 91, 94, 100, 105, 119, 121, 129, 131, 132, 133, 134, 141, 142, 143, 145, 146, 147, 148, 149, 151, 156, 158, 160, 167, 168, 171, 172, 173, 174, 191, 195, 201, 202, 203, 205, 206, 207, 209, 210, 212, 215, 218, 219, 222, 298, 303, 333, 335, 341, 343, 347, 348, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 377, 378, 380, 383, 386, 388, 392, 394, 395, 396, 397, 398, 399, 400, 405, 409, 416, 430, 433, 437, 449, 450, 453, 455, 457, 467], "scale": [10, 91, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 143, 171, 189, 195, 207, 352, 359, 361, 363, 364, 365, 366, 374, 386, 391, 398], "scientif": 10, "scipi": 95, "scope": 4, "script": 4, "sctype2char": 6, "search": [91, 460, 471], "searchsort": [6, 83, 86, 148, 423, 467], "second": [13, 15, 26, 33, 34, 45, 47, 49, 50, 64, 71, 81, 84, 85, 88, 91, 94, 97, 104, 105, 106, 107, 110, 111, 114, 117, 119, 129, 131, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 156, 158, 170, 171, 172, 173, 174, 201, 202, 203, 205, 206, 209, 210, 211, 212, 215, 217, 218, 219, 222, 335, 339, 343, 405, 409, 426, 430, 432, 437, 439, 449, 455], "section": [4, 88, 106, 111, 467], "see": [3, 31, 88, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 135, 148, 183, 369, 413, 443, 444, 447, 448, 467], "seed": [6, 86, 91, 303, 352], "seek": 137, "seldom": 129, "select": [6, 65, 100, 211, 217, 427, 433, 460], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "self": [86, 88, 124, 237, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 300, 352], "semant": 148, "sens": 194, "sep": [137, 140], "separ": [10, 86, 88, 90, 137, 140, 149, 223, 317], "sequenc": [38, 42, 43, 44, 58, 59, 62, 66, 87, 90, 91, 92, 93, 104, 106, 110, 111, 114, 141, 142, 143, 148, 149, 150, 155, 186, 195, 207, 221, 337, 338, 341, 376, 389, 406, 408, 414, 428, 437, 456, 458, 459], "sequenti": [66, 70, 95, 115, 116, 118, 120, 214, 220, 231], "seri": [10, 114, 368], "set": [10, 28, 29, 32, 41, 56, 69, 77, 78, 80, 83, 86, 88, 90, 92, 141, 148, 149, 152, 155, 185, 187, 188, 195, 211, 217, 224, 225, 233, 278, 288, 289, 300, 320, 337, 338, 344, 419, 420, 431, 443, 447, 458, 459, 467], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 88], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 182, "sh": [86, 317], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 41, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 119, 123, 126, 129, 130, 131, 132, 133, 134, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 317, 323, 330, 332, 333, 335, 336, 337, 338, 342, 343, 344, 345, 347, 348, 350, 351, 352, 361, 364, 369, 370, 375, 379, 380, 381, 382, 383, 384, 385, 387, 392, 393, 399, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 454, 456, 457, 458, 459, 460, 471], "share": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 441, 443, 447, 453, 458, 459], "shared_bin": 149, "shares_memori": 6, "shift": [10, 104, 106, 107, 111, 112, 172, 409, 411], "short": [450, 467], "shorter": [108, 114], "shorthand": [11, 12, 13, 47, 48, 49, 50, 84, 94, 131, 146, 147, 157, 172, 173, 174, 203, 205, 210, 219, 222, 332, 335, 342, 343, 405, 409, 430, 449, 457], "should": [28, 29, 41, 81, 83, 85, 86, 90, 91, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 134, 137, 144, 148, 183, 184, 210, 221, 224, 225, 228, 230, 288, 319, 369, 407, 416, 433, 437, 439, 452, 467], "show": [9, 34, 88, 121, 151, 206, 215, 223, 226, 227, 228, 230, 233, 390], "show_config": 6, "shown": 4, "shuffl": 6, "side": [86, 145, 180, 319, 416], "sigma": [367, 374], "sign": [6, 10, 15, 64, 88, 158, 177, 190, 219, 332, 342, 344, 405, 420, 431, 450], "signal": [10, 105, 108, 113, 114, 119, 452], "signatur": [209, 210], "signbit": [6, 419], "signific": 90, "signum": 419, "similar": [3, 35, 36, 86, 88, 143, 195, 207, 209, 293, 320, 341, 352, 380, 443, 444, 447, 448], "simpl": [4, 206, 471], "simpli": [79, 86, 137, 148, 149, 330], "sin": [0, 6, 23, 67, 180, 215, 422, 435], "sinc": [6, 86, 114, 178, 180, 322, 334], "sine": [21, 22, 23, 24, 25, 26, 27, 67, 68, 421, 422, 435, 436], "singl": [9, 10, 30, 52, 58, 86, 90, 91, 145, 186, 211, 217, 323, 344, 352, 371, 380, 381, 382, 383, 384, 385, 387, 393, 431, 467], "singleton": [14, 19, 45, 98, 208, 213, 228, 229, 230, 232, 234, 404, 427, 429, 454], "singular": [182, 183, 185, 188, 192], "sinh": [6, 24, 68, 421, 436], "size": [0, 6, 20, 28, 29, 32, 45, 59, 66, 69, 70, 73, 74, 78, 83, 86, 88, 91, 100, 103, 105, 109, 119, 137, 143, 145, 150, 187, 189, 192, 195, 207, 209, 211, 213, 217, 224, 225, 226, 227, 229, 231, 233, 303, 304, 320, 337, 341, 344, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 411, 414, 427, 428, 431, 437, 447, 452, 456, 458], "skip": 81, "slice": [100, 224, 225, 228, 229, 230, 232, 234, 347, 348, 434, 447, 448, 467], "slogdet": [6, 177], "slower": 437, "slowest": [86, 301, 401, 407], "small": [15, 99, 158, 183, 188, 199, 201, 202, 223, 447], "smaller": [82, 86, 103, 104, 106, 109, 110, 111, 113, 117, 122, 183, 219, 311, 341, 405, 452], "smallest": [122, 153], "smallest_norm": 122, "smat": 192, "so": [10, 14, 19, 45, 88, 94, 108, 113, 129, 148, 167, 195, 202, 208, 213, 215, 229, 232, 234, 390, 404, 429, 437, 438, 454], "softwar": 4, "solut": [183, 191], "solv": [6, 183, 193, 194, 471], "some": [20, 88, 98, 100, 130, 156, 183, 341, 452, 457, 467], "sometim": 467, "sometru": 6, "somewhat": 184, "sophist": 184, "sort": [6, 30, 86, 192, 287, 311, 416, 424, 434, 440, 460, 467, 471], "sort_complex": 6, "sorter": [86, 319, 416], "sought": 176, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 56, 57, 58, 59, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 208, 209, 210, 211, 213, 214, 215, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 334, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 411, 412, 416, 417, 418, 423, 424, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459], "space": [6, 20, 105, 107, 119, 137, 143, 145, 195, 207, 475], "spars": [155, 215], "special": [2, 88, 95, 460, 471], "specif": [0, 4, 88, 138], "specifi": [14, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 45, 52, 53, 59, 63, 72, 73, 74, 77, 80, 81, 86, 90, 91, 92, 93, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 119, 126, 129, 136, 137, 138, 139, 141, 142, 143, 145, 152, 179, 181, 187, 193, 194, 195, 196, 207, 208, 213, 214, 216, 226, 227, 229, 231, 232, 233, 234, 287, 296, 336, 337, 338, 341, 344, 347, 348, 352, 365, 375, 393, 401, 404, 411, 412, 413, 428, 429, 431, 433, 434, 437, 439, 440, 441, 453, 454, 458, 459], "spectrum": [10, 107, 108, 112, 113], "speed": 90, "speedup": 91, "spell": 334, "split": [6, 59, 87, 150, 414, 428, 456, 471], "spreadsheet": 130, "sqrt": [6, 10, 54, 86, 302, 315, 404, 415, 426], "squar": [6, 54, 151, 152, 175, 176, 178, 179, 180, 182, 183, 184, 190, 193, 194, 209, 232, 234, 356, 372, 403, 404, 415, 425, 429, 444, 448, 453, 454], "squeez": [6, 86, 98, 467], "src": 65, "stabl": [30, 423], "stack": [6, 58, 59, 87, 150, 177, 185, 188, 189, 190, 210, 334, 414, 434, 456], "stand": 145, "standard": [86, 122, 131, 134, 213, 219, 229, 232, 234, 303, 324, 352, 367, 374, 381, 390, 391, 392, 393, 394, 405, 429, 454, 467, 471], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 352, 381], "standard_t": 6, "start": [2, 3, 20, 37, 39, 91, 105, 109, 119, 136, 143, 195, 207, 209, 412, 443, 447], "start_tim": 0, "state": 352, "statist": [460, 471], "std": [6, 86, 213, 229, 232, 234, 454, 467], "stdev": [352, 393], "step": [4, 20, 91, 143, 195, 207], "sticki": 88, "still": 45, "stop": [20, 143, 195, 207], "store": [123, 143, 164, 165, 195, 202, 207, 210, 339], "str": [38, 59, 88, 90, 91, 137, 140, 150, 196, 279, 414, 428, 445, 456], "str_": 88, "straightforward": 155, "stride": [40, 41, 86, 288], "string": [20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 88, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 445, 447, 453, 458, 459, 467], "string_repr": 91, "stringio": 196, "strongli": [4, 438], "struct": 88, "structur": [88, 196], "student": 394, "style": [41, 86, 288, 334, 401], "sub": [59, 81, 88, 90, 150, 194, 414, 428, 439, 441, 456], "subarrai": [88, 155], "subclass": [36, 170], "subdivid": 88, "subdtyp": 88, "subok": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 32, 41, 47, 48, 49, 50, 51, 52, 54, 55, 60, 61, 63, 64, 67, 68, 75, 76, 84, 86, 93, 94, 96, 97, 99, 102, 123, 129, 130, 131, 132, 133, 134, 142, 146, 147, 151, 154, 157, 161, 162, 163, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 218, 219, 222, 288, 332, 333, 335, 338, 342, 343, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 425, 426, 430, 435, 436, 449, 450, 459], "subscript": [90, 91], "subset": [3, 145, 427, 471], "subtract": 6, "subtyp": 401, "succeed": 89, "success": [354, 362, 371], "sugar": [79, 444, 448], "suggest": 81, "suit": 4, "suitabl": [86, 330, 348, 416, 434], "sum": [0, 3, 4, 6, 10, 13, 45, 72, 74, 77, 80, 81, 82, 85, 86, 90, 109, 148, 151, 156, 176, 183, 193, 201, 202, 208, 210, 226, 227, 233, 295, 329, 354, 369, 371, 404, 437, 439, 467, 471], "sum_": 10, "sum_along_diagon": 439, "sum_of_weight": 45, "summari": 460, "summat": [85, 90, 91, 156, 194, 210, 339, 437], "suppli": [108, 113, 186, 352, 381], "support": [3, 9, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 54, 55, 60, 61, 63, 64, 66, 67, 68, 70, 75, 76, 84, 86, 88, 92, 93, 94, 95, 96, 97, 99, 101, 115, 116, 118, 120, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 151, 152, 157, 161, 162, 163, 172, 173, 174, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 288, 320, 332, 333, 335, 337, 338, 340, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 405, 407, 409, 415, 417, 419, 420, 421, 423, 425, 426, 429, 430, 431, 435, 436, 449, 450, 454, 458, 459, 475], "surnam": 88, "surpris": [109, 110, 111], "svd": [6, 176, 182, 185, 188], "swap": [88, 104, 107, 432], "swapax": [6, 86, 221, 467], "swapped_cod": 88, "swapped_dt": 88, "sy": 88, "sycl": [0, 3, 20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "sycl_context": 86, "sycl_devic": 86, "sycl_queu": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "sycldevic": [20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "syclqueu": [20, 32, 35, 36, 37, 38, 39, 41, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 288, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 441, 443, 447, 453, 458, 459], "symmetr": [108, 114, 117, 175, 178, 179, 180, 181, 185, 188, 192], "symmetri": [10, 103, 108, 113, 114, 117], "syntact": [79, 444, 448], "syntax": 467, "sys_is_l": 88, "system": [3, 4, 191], "t": [10, 59, 70, 86, 88, 108, 175, 178, 180, 183, 330, 334, 394], "t1": 475, "tabl": [2, 9, 460], "tack": 88, "take": [6, 58, 86, 100, 209, 341, 348, 407, 416, 434, 452, 467, 475], "take_along_axi": [6, 28, 29, 30, 56, 348, 433], "taken": [45, 81, 82, 89, 91, 108, 114, 148, 210, 232, 234, 429, 439, 441, 443, 447, 454, 455], "tall": 121, "tan": [6, 25, 26, 67, 421, 436], "tangent": [18, 21, 22, 23, 24, 25, 26, 27, 67, 68, 421, 422, 435, 436], "tanh": [6, 27, 68, 422, 435], "target": [41, 53, 86, 288, 347], "target_devic": 86, "tau": 189, "tbb": 4, "tempfil": 137, "temporari": [137, 475], "temporaryfil": 137, "ten": 362, "tensor": [38, 86, 90, 91, 193, 194, 224, 225, 228, 230, 231, 346, 437], "tensordot": [6, 85, 90, 156, 193, 194, 210, 339], "tensorinv": [6, 194], "tensorsolv": [6, 193], "term": [10, 13, 84, 91, 103, 104, 106, 109, 110, 111, 114, 117, 222, 430, 449], "test": [0, 2, 14, 15, 19, 94, 146, 147, 159, 161, 162, 163, 164, 165, 173, 174, 231, 334, 335, 354, 467, 471], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [136, 137, 139, 140, 196], "th": [74, 77, 80, 82, 86, 89, 101, 145, 155, 214, 330, 336, 440, 442, 444, 446, 448], "than": [32, 73, 74, 86, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 122, 127, 128, 131, 138, 146, 147, 148, 149, 150, 172, 173, 174, 183, 185, 188, 189, 226, 227, 231, 233, 311, 334, 341, 344, 409, 419, 427, 428, 431, 437, 439, 450, 452, 467, 475], "thei": [15, 34, 88, 158, 180, 183, 414, 416, 437, 443, 447, 452, 453, 456, 467], "them": [58, 467], "theor": 178, "theoret": 91, "therefor": [103, 117, 138, 179, 181], "thi": [10, 11, 12, 16, 17, 20, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 57, 59, 63, 69, 72, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 117, 121, 122, 125, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 160, 167, 179, 181, 183, 186, 187, 190, 195, 196, 199, 201, 202, 207, 208, 209, 210, 211, 217, 219, 221, 223, 224, 225, 228, 230, 231, 233, 288, 293, 298, 301, 311, 317, 330, 334, 341, 344, 347, 348, 385, 387, 401, 404, 405, 407, 412, 414, 428, 431, 433, 434, 438, 444, 448, 452, 453, 456, 457], "thing": 433, "third": [58, 59, 87, 104, 150, 414, 428, 456], "those": [10, 57, 184, 348], "though": 109, "thousand": 362, "three": [42, 43, 44, 98, 184, 209, 352, 388, 437], "threshold": 185, "through": [36, 88, 149, 178, 180, 183, 209, 467], "throw": 369, "thu": [10, 108, 114, 438], "tile": [6, 406, 471], "time": [0, 10, 13, 15, 26, 33, 34, 47, 49, 50, 64, 82, 84, 85, 94, 104, 106, 108, 110, 111, 113, 129, 131, 132, 133, 134, 146, 147, 151, 156, 158, 163, 171, 172, 173, 174, 183, 201, 202, 203, 205, 206, 212, 218, 219, 222, 333, 335, 343, 354, 369, 405, 409, 430, 434, 437, 438, 449, 455], "time_dpnp": 0, "time_numpi": 0, "timedelta": 88, "timeit": 90, "timestep": 105, "tini": 122, "titl": 88, "tm": 134, "to_begin": 89, "to_devic": 86, "to_end": 89, "tobyt": 6, "todo": 372, "tofil": [6, 137], "togeth": [15, 59, 88, 109, 158, 428, 457], "tol": [185, 370], "toler": [15, 33, 158], "tolist": 6, "too": [4, 104, 106, 110, 111, 457], "toolkit": 3, "tostr": 6, "total": [6, 69, 73, 86, 308, 429, 454], "toward": [31, 55, 123, 130, 131, 148, 149, 219, 333, 405, 410, 413, 450], "trace": [6, 77, 80, 81, 86, 90, 467], "traceback": 427, "trail": 445, "transfer": 86, "transform": [91, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 460], "transpos": [6, 86, 90, 175, 180, 221, 236, 467, 471], "trapezoid": 431, "trapz": [6, 431], "treat": [15, 108, 114, 137, 145, 158, 179, 181, 183, 186, 196, 226, 227, 231, 233, 344, 348, 416, 434, 438, 452, 467], "tri": 6, "trial": 354, "triangl": [77, 151, 209, 404, 441, 442, 443, 444, 446, 447, 448], "triangular": [6, 175, 179, 181, 189, 209, 443, 444, 447, 448], "trigonometr": [18, 21, 22, 23, 24, 25, 26, 27, 67, 68, 421, 422, 435, 436, 471], "tril": [6, 77, 209, 441, 443, 444, 447], "tril_indic": [6, 209, 444, 447], "tril_indices_from": [6, 448], "trili": 444, "trili1": 444, "trim": [104, 106, 110, 111, 445], "trim_zero": 6, "triu": [6, 77, 209, 441, 443, 447, 448], "triu_indic": [6, 209, 443, 448], "triu_indices_from": [6, 444], "triui": 448, "triuim1": 448, "trivial": [104, 106, 110, 111, 178, 434], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 37, 39, 41, 42, 45, 47, 48, 49, 50, 53, 54, 55, 60, 61, 63, 64, 65, 67, 68, 69, 70, 74, 75, 76, 83, 84, 86, 88, 90, 91, 94, 96, 97, 98, 99, 100, 102, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 143, 146, 147, 148, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 182, 185, 187, 188, 189, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 240, 283, 284, 288, 293, 305, 306, 307, 312, 324, 326, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 348, 350, 351, 357, 403, 404, 405, 407, 409, 410, 415, 419, 420, 421, 422, 425, 426, 429, 430, 431, 434, 435, 436, 437, 449, 450, 453, 454, 457], "true_divid": [6, 84], "trunc": [6, 31, 55, 123, 130, 410, 413], "truncat": [31, 55, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 123, 130, 390, 410, 413, 450], "trust": [224, 225], "truth": [47, 48, 49, 50, 94, 146, 147, 157, 173, 174, 203, 204, 205, 206, 335, 467, 471], "try": 4, "tukei": 10, "tup": [58, 87, 150, 414, 456], "tupl": [14, 19, 28, 29, 32, 35, 36, 37, 39, 45, 52, 63, 69, 72, 77, 78, 79, 80, 86, 88, 91, 98, 107, 112, 126, 138, 141, 142, 143, 145, 148, 149, 155, 160, 167, 171, 187, 189, 194, 195, 207, 208, 209, 210, 211, 213, 215, 216, 217, 228, 229, 230, 231, 232, 233, 234, 320, 330, 334, 336, 344, 404, 406, 407, 411, 418, 427, 429, 431, 438, 440, 443, 444, 447, 448, 453, 454, 467], "turn": 58, "twister": 352, "two": [10, 15, 33, 42, 43, 47, 48, 49, 50, 62, 66, 71, 80, 81, 82, 85, 86, 88, 90, 91, 98, 103, 104, 106, 109, 110, 111, 114, 132, 133, 145, 156, 157, 158, 171, 179, 183, 186, 191, 203, 205, 206, 210, 211, 212, 217, 218, 221, 228, 230, 311, 327, 339, 352, 381, 410, 413, 432, 437, 439, 443, 444, 447, 448, 455], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 297, 301, 317, 330, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 471], "type_nam": 0, "typeerror": [45, 65, 86, 320], "typenam": 6, "typestr": 88, "typic": [15, 108, 158, 416, 467], "u": [88, 175, 179, 181, 192, 209, 231, 233], "u1": [88, 136, 137], "u16": 88, "u4": 53, "u8": 88, "ufunc": [2, 460, 467], "uint64": 88, "uint8": [88, 136, 137], "uk": 10, "un": 88, "unari": 467, "undefin": [18, 86, 311], "underli": [47, 49, 50, 407], "undo": [10, 111], "undocu": 88, "unexpect": [231, 233], "unicod": 88, "uniform": [6, 88, 145, 148, 149, 207, 352, 379, 382, 384, 385, 387], "uniformli": [207, 352, 396], "uniniti": [32, 92, 93, 141, 337, 458], "union1d": 6, "uniqu": [6, 45, 46, 72, 83, 88, 208, 213, 221, 229, 232, 234, 404, 406, 429, 454], "unit": [86, 105, 119, 178, 184, 190, 325], "unitari": [10, 145, 189, 192], "uniti": 148, "univ": 10, "univers": [2, 460, 467], "unless": [14, 19, 41, 73, 74, 86, 90, 148, 178, 185, 187, 207, 226, 227, 231, 233, 288, 344, 431], "unlik": [30, 86, 119, 317, 320, 423], "unmodifi": 149, "unpackbit": 6, "unravel_index": [6, 28, 29], "unsaf": [41, 53, 59, 65, 86, 90, 150, 210, 288, 414, 428, 456], "unscal": 10, "unsign": [88, 344, 431], "unspecifi": 407, "unsupport": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 47, 48, 49, 50, 54, 55, 57, 64, 67, 68, 75, 76, 84, 96, 97, 99, 115, 116, 118, 120, 129, 130, 131, 132, 133, 134, 151, 157, 172, 198, 199, 200, 201, 202, 212, 218, 219, 220, 222, 332, 333, 342, 343, 345, 350, 351, 403, 405, 409, 410, 415, 419, 420, 421, 422, 430, 435, 436, 449, 450], "until": [91, 411, 412], "unwrap": [6, 75, 350], "up": [4, 10, 88, 90, 128, 434, 444], "updat": 4, "uplo": [179, 181], "upon": [86, 325], "upper": [77, 101, 148, 149, 175, 179, 181, 189, 209, 441, 443, 444, 446, 447, 448], "url": 4, "us": [4, 10, 13, 20, 32, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 53, 57, 59, 63, 71, 73, 74, 77, 78, 80, 81, 84, 86, 88, 90, 91, 92, 93, 94, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 119, 121, 125, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 157, 172, 173, 174, 175, 176, 179, 180, 181, 183, 185, 186, 187, 188, 195, 196, 202, 203, 205, 207, 209, 210, 211, 213, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 242, 288, 293, 301, 320, 332, 334, 335, 336, 337, 338, 341, 342, 343, 344, 348, 352, 355, 357, 358, 368, 373, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 393, 396, 401, 405, 406, 407, 409, 411, 416, 419, 424, 429, 430, 431, 433, 434, 437, 438, 439, 441, 443, 444, 447, 448, 449, 453, 454, 457, 458, 459, 467, 475], "usabl": 129, "usag": [3, 4, 105, 119], "use_getitem": 88, "use_setitem": 88, "user": [88, 223], "usm": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 427, 441, 443, 447, 453, 458, 459], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459], "usm_typ": [20, 32, 35, 36, 37, 38, 39, 63, 77, 78, 80, 86, 92, 93, 101, 105, 119, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 195, 196, 207, 209, 216, 293, 336, 337, 338, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 441, 443, 447, 453, 458, 459], "usual": [78, 86, 88, 210, 320], "util": 460, "v": [62, 77, 80, 86, 88, 178, 179, 319, 347, 416], "v0": 6, "v1": 6, "v10": 88, "v9": 6, "val": [86, 121, 124, 278, 313, 341], "valid": [66, 98, 209, 432, 443, 444, 447, 448], "valu": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 82, 83, 84, 86, 88, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102, 108, 109, 114, 117, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 166, 167, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 238, 239, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 277, 278, 280, 281, 282, 285, 286, 288, 290, 293, 298, 300, 311, 313, 320, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 362, 379, 380, 396, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 415, 416, 417, 419, 420, 421, 423, 425, 426, 429, 430, 431, 433, 434, 435, 436, 439, 443, 447, 449, 450, 452, 454, 457, 458, 459, 467, 471], "value2": 88, "valueerror": [224, 225, 407, 427], "vander": 6, "vandermond": 453, "var": [6, 86, 213, 229, 232, 234, 429, 467], "vararg": 145, "vari": [10, 14, 18, 19, 81, 91, 104, 106, 108, 109, 110, 111, 113, 114, 117, 138, 155, 176, 178, 179, 183, 187, 223, 229, 232, 234], "variabl": [70, 183, 191], "varianc": [86, 213, 229, 232, 234, 331, 429, 454, 471], "variou": 475, "vdot": [6, 85, 210], "vector": [71, 90, 138, 155, 156, 176, 185, 186, 187, 192, 210, 215, 339, 455, 471], "vendor": 4, "veri": [3, 10, 15, 158, 215, 223], "verif": 0, "verifi": 175, "version": [4, 69, 86, 88, 125, 300, 334], "vertic": [58, 59, 81, 87, 121, 126, 127, 150, 414, 428, 456], "vetterlin": 10, "vh": 192, "via": 114, "view": [6, 42, 43, 44, 51, 77, 81, 86, 98, 104, 106, 110, 111, 126, 127, 128, 215, 221, 236, 317, 330, 348, 407, 427, 432, 440], "violat": 65, "void": 88, "void640": 88, "von": 397, "vonmis": 6, "vsplit": [6, 59], "vstack": [6, 58, 59, 87, 150, 183, 414, 428], "w": [10, 45, 178, 179, 180, 181, 184], "wa": [10, 72, 88, 186, 208, 228, 230, 232, 234, 352, 393, 404, 429, 454], "wai": [3, 4, 10, 86, 91, 103, 109, 110, 111, 137, 311, 437], "wald": 6, "walk": 88, "want": [4, 434], "warn": [88, 224, 225, 370], "we": [63, 78, 81, 91, 121, 183, 209, 348, 434], "weibul": [6, 400], "weight": [45, 46, 70, 148, 149, 213, 229, 431], "well": [88, 90, 137, 148, 149, 344, 354, 371, 390], "were": [59, 138, 352, 381, 428, 452], "what": [10, 41, 53, 59, 65, 86, 88, 90, 94, 103, 104, 106, 108, 109, 110, 111, 113, 114, 117, 150, 159, 210, 288, 354, 371, 414, 428, 456, 467], "when": [10, 20, 32, 33, 35, 36, 37, 39, 40, 41, 45, 63, 65, 83, 86, 88, 103, 114, 117, 132, 133, 143, 178, 187, 189, 195, 202, 207, 209, 210, 219, 226, 227, 228, 230, 231, 233, 288, 405, 410, 412, 413, 433, 437, 457, 475], "whenev": [98, 432, 440], "where": [0, 6, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 54, 55, 57, 60, 61, 63, 64, 65, 67, 68, 72, 75, 76, 77, 78, 80, 82, 83, 84, 86, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 108, 114, 119, 123, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 172, 173, 174, 175, 183, 189, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 219, 222, 228, 229, 230, 231, 232, 233, 234, 283, 284, 288, 293, 305, 306, 307, 312, 319, 324, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 350, 351, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 396, 403, 404, 405, 409, 410, 412, 415, 416, 419, 420, 421, 422, 425, 426, 429, 430, 431, 435, 436, 439, 440, 441, 443, 447, 449, 450, 452, 453, 454, 458, 459], "wherev": 65, "whether": [14, 15, 19, 33, 72, 83, 88, 158, 159, 175, 189, 195, 223, 231, 233, 407, 420], "which": [3, 4, 10, 14, 19, 20, 28, 29, 30, 32, 35, 36, 37, 38, 39, 41, 45, 51, 59, 63, 65, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 85, 86, 88, 90, 91, 92, 93, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 122, 126, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 152, 155, 161, 162, 163, 164, 165, 175, 178, 185, 187, 194, 196, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 288, 293, 334, 336, 337, 338, 344, 347, 352, 374, 379, 380, 381, 382, 383, 384, 385, 387, 393, 396, 404, 406, 411, 423, 427, 428, 429, 431, 433, 439, 440, 441, 442, 443, 446, 447, 450, 452, 453, 454, 457, 458, 459, 467, 475], "whichev": 156, "while": [10, 148, 149, 213, 229, 232, 234, 334, 341, 344, 411, 429, 431, 441, 454], "whitespac": [137, 140], "who": 6, "whole": [104, 106, 110, 111, 443, 447], "whose": [11, 12, 81, 88, 100, 101, 121, 176, 179, 180, 181, 193, 209, 221, 411, 444, 448], "why": 114, "wide": 121, "width": [88, 148, 149], "wild": [354, 371], "window": [4, 105, 119], "wise": [11, 12, 13, 15, 18, 21, 22, 23, 24, 25, 26, 27, 31, 33, 47, 48, 49, 50, 54, 55, 58, 59, 60, 61, 64, 67, 68, 72, 84, 86, 87, 94, 96, 97, 99, 102, 123, 129, 130, 131, 132, 133, 134, 146, 147, 150, 151, 154, 157, 158, 161, 162, 163, 164, 165, 172, 173, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 217, 218, 219, 220, 222, 228, 230, 231, 292, 332, 333, 335, 342, 343, 345, 402, 403, 405, 409, 410, 413, 414, 415, 419, 420, 421, 422, 425, 426, 428, 430, 435, 436, 449, 450, 456, 467, 471, 475], "within": [15, 20, 33, 41, 86, 90, 108, 109, 110, 111, 113, 114, 148, 149, 158, 288, 347, 352, 396], "without": [81, 86, 92, 121, 330, 401, 407, 467], "won": 88, "word": [109, 110, 111, 114, 130, 180, 352, 396], "work": [4, 31, 40, 434, 467], "world": [88, 354, 371], "would": [30, 59, 86, 88, 138, 155, 186, 209, 210, 311, 352, 423, 428, 434, 440, 452], "wrap": [75, 86, 121, 313, 328, 347, 350, 416, 433, 434, 452], "wrapper": 86, "write": [77, 81, 86, 121, 137, 301, 407], "written": [69, 72, 121, 137, 208, 404, 457], "x": [0, 3, 4, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 42, 43, 44, 48, 51, 52, 54, 55, 60, 61, 63, 64, 66, 67, 68, 70, 71, 72, 75, 76, 77, 80, 82, 83, 86, 88, 89, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 115, 116, 118, 119, 120, 123, 124, 125, 130, 136, 137, 138, 139, 141, 142, 143, 145, 152, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 176, 180, 183, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 215, 216, 220, 221, 223, 288, 293, 302, 303, 315, 320, 332, 334, 336, 337, 338, 342, 344, 345, 346, 350, 351, 370, 376, 401, 402, 403, 404, 406, 410, 411, 412, 413, 415, 419, 420, 421, 422, 425, 426, 427, 432, 433, 435, 436, 441, 450, 451, 453, 457, 458, 459], "x0": [37, 39, 63, 80, 338, 453, 459], "x00": 137, "x01": [136, 137], "x02": [136, 137], "x03": [136, 137], "x04": [136, 137], "x05": 136, "x1": [13, 15, 18, 25, 26, 33, 34, 41, 46, 47, 49, 50, 56, 64, 66, 84, 86, 94, 129, 131, 132, 133, 134, 146, 147, 151, 172, 173, 174, 201, 202, 203, 204, 205, 206, 210, 212, 214, 215, 218, 219, 220, 222, 288, 332, 333, 335, 340, 342, 343, 349, 389, 405, 409, 411, 430, 449], "x1_i": [13, 26, 47, 49, 50, 64, 84, 94, 129, 131, 134, 146, 147, 151, 172, 173, 174, 201, 202, 203, 205, 206, 219, 222, 335, 343, 405, 409, 430, 449], "x2": [13, 14, 15, 18, 19, 25, 26, 32, 33, 34, 47, 49, 50, 64, 66, 84, 94, 129, 131, 132, 133, 134, 146, 147, 151, 172, 173, 174, 201, 202, 203, 204, 205, 206, 210, 212, 215, 218, 219, 222, 332, 333, 335, 342, 343, 405, 409, 411, 425, 430, 449], "x2_i": [13, 26, 47, 49, 50, 64, 84, 94, 129, 131, 134, 146, 147, 151, 172, 173, 174, 201, 202, 203, 205, 206, 219, 222, 335, 343, 405, 409, 430, 449], "x3": [14, 19, 129], "x_i": [11, 12, 18, 21, 22, 23, 24, 25, 27, 48, 54, 55, 60, 61, 67, 68, 96, 97, 99, 130, 154, 157, 197, 198, 199, 200, 204, 332, 342, 345, 402, 403, 410, 413, 415, 419, 420, 421, 422, 425, 426, 435, 436, 450], "xi": [200, 215], "xn": 215, "xor": [47, 48, 49, 50, 157, 203, 204, 205, 206], "xv": 215, "xx": 215, "xy": 215, "y": [0, 4, 20, 32, 35, 36, 37, 39, 42, 51, 63, 70, 71, 80, 86, 88, 89, 92, 93, 98, 101, 105, 119, 136, 137, 138, 139, 141, 142, 143, 145, 152, 164, 165, 176, 183, 195, 196, 207, 215, 216, 220, 223, 293, 317, 320, 336, 337, 338, 441, 453, 457, 458, 459], "yet": [4, 6], "yield": [30, 231, 233, 334, 352, 457, 467], "you": [4, 81, 108, 113, 114, 209, 433, 434, 467, 475], "your": [4, 81, 475], "yv": 215, "yy": 215, "z": [14, 19, 20, 32, 35, 36, 37, 39, 63, 80, 92, 93, 101, 105, 119, 136, 137, 138, 139, 141, 142, 143, 152, 195, 196, 207, 215, 216, 336, 337, 338, 362, 441, 453, 458, 459], "zero": [6, 10, 14, 19, 30, 31, 32, 55, 69, 72, 78, 82, 86, 92, 93, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 125, 130, 137, 141, 142, 152, 159, 160, 164, 165, 166, 167, 172, 178, 179, 181, 183, 184, 185, 188, 192, 208, 209, 211, 213, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 310, 320, 325, 334, 337, 338, 344, 352, 354, 382, 384, 385, 387, 404, 410, 413, 419, 423, 429, 431, 437, 441, 442, 445, 446, 450, 454, 457, 459], "zeros_lik": [6, 32, 76, 93, 142, 338, 351, 458], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 237, "__add__": 238, "__and__": 239, "__bool__": 240, "__complex__": 241, "__copy__": 242, "__eq__": 243, "__float__": 244, "__floordiv__": 245, "__ge__": 246, "__getitem__": 247, "__gt__": 248, "__iadd__": 249, "__iand__": 250, "__ifloordiv__": 251, "__ilshift__": 252, "__imod__": 253, "__imul__": 254, "__int__": 255, "__invert__": 256, "__ior__": 257, "__ipow__": 258, "__irshift__": 259, "__isub__": 260, "__itruediv__": 261, "__ixor__": 262, "__le__": 263, "__len__": 264, "__lshift__": 265, "__lt__": 266, "__matmul__": 267, "__mod__": 268, "__mul__": 269, "__ne__": 270, "__neg__": 271, "__new__": 272, "__or__": 273, "__pos__": 274, "__pow__": 275, "__repr__": 276, "__rshift__": 277, "__setitem__": 278, "__str__": 279, "__sub__": 280, "__truediv__": 281, "__xor__": 282, "ab": 11, "absolut": 12, "ad": 464, "add": 13, "algebra": [6, 462], "all": [14, 283], "allclos": 15, "amax": 16, "amin": 17, "angl": 18, "ani": [19, 284], "api": [1, 460], "arang": 20, "arcco": 21, "arccosh": 22, "arcsin": 23, "arcsinh": 24, "arctan": 25, "arctan2": 26, "arctanh": 27, "argmax": [28, 285], "argmin": [29, 286], "argsort": [30, 287], "arithmet": [465, 467, 469], "around": 31, "arrai": [6, 7, 9, 32, 461, 463, 464, 467], "array_equ": 33, "array_equiv": 34, "asanyarrai": 35, "asarrai": 36, "ascontiguousarrai": 37, "asfarrai": 38, "asfortranarrai": 39, "asnumpi": 40, "astyp": [41, 288], "atleast_1d": 42, "atleast_2d": 43, "atleast_3d": 44, "attribut": 467, "avail": [9, 475], "averag": [45, 474], "backend": 1, "background": 10, "basic": [464, 469], "beta": 353, "binari": 5, "bincount": 46, "binomi": 354, "bit": [5, 475], "bitwise_and": 47, "bitwise_not": 48, "bitwise_or": 49, "bitwise_xor": 50, "broadcast_arrai": 51, "broadcast_to": 52, "build": [4, 7], "byte": 355, "c": 1, "calcul": 467, "can_cast": 53, "cbrt": 54, "ceil": 55, "chang": 464, "channel": 4, "chisquar": 356, "choic": 357, "choleski": 175, "choos": [56, 289], "class": 7, "clip": [57, 290], "co": 67, "column_stack": 58, "comparison": [6, 463, 467, 475], "complex": 465, "concaten": 59, "cond": 176, "conda": 4, "conj": [60, 291], "conjug": [61, 292], "construct": 467, "control": 0, "convers": 467, "convolv": 62, "copi": [63, 293], "copysign": 64, "copyto": 65, "correl": [66, 474], "cosh": 68, "count": 472, "count_nonzero": 69, "cov": 70, "creat": 8, "creation": 7, "cross": 71, "cumlogsumexp": 72, "cumprod": [73, 294], "cumsum": [74, 295], "cupi": 6, "data": [0, 2, 7, 8, 9, 461, 467, 470], "decomposit": 462, "deg2rad": 75, "degre": 76, "det": 177, "detail": 10, "develop": 2, "devic": 4, "diag": 77, "diag_indic": 78, "diag_indices_from": 79, "diagflat": 80, "diagon": [81, 296], "diff": 82, "differ": 465, "digit": 83, "dimens": [10, 464], "dimension": [6, 467], "dirichlet": 358, "discret": 6, "distribut": 470, "divid": 84, "dot": 85, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 470], "dpnp_arrai": 86, "driver": 4, "dstack": 87, "dtype": [88, 297], "ediff1d": 89, "eig": 178, "eigenvalu": 462, "eigh": 179, "eigval": 180, "eigvalsh": 181, "einsum": 90, "einsum_path": 91, "element": [5, 464], "empti": 92, "empty_lik": 93, "equal": 94, "equat": 462, "erf": 95, "error": 473, "exampl": [0, 4], "exist": 7, "exp": 96, "exp2": 97, "expand_dim": 98, "expm1": 99, "expon": 465, "exponenti": 359, "extens": 2, "extract": 100, "extrema": 465, "ey": 101, "f": 360, "fab": 102, "fft": [10, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "fft2": 104, "fftfreq": 105, "fftn": 106, "fftshift": 107, "fill": 298, "fill_diagon": 121, "find": 465, "finfo": 122, "fix": 123, "flag": 299, "flat": 300, "flatit": 124, "flatnonzero": 125, "flatten": 301, "flip": 126, "fliplr": 127, "flipud": 128, "float": [465, 475], "float_pow": 129, "floor": 130, "floor_divid": 131, "fmax": 132, "fmin": 133, "fmod": 134, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 135, "frombuff": 136, "fromfil": 137, "fromfunct": 138, "fromit": 139, "fromstr": 140, "full": 141, "full_lik": 142, "function": [10, 463, 465, 473, 474, 475], "gamma": 361, "gener": [461, 470], "geometr": 362, "geomspac": 143, "get_includ": 144, "gradient": 145, "greater": 146, "greater_equ": 147, "guid": 4, "gumbel": 363, "handl": 465, "helper": 10, "hermitian": 10, "hfft": 108, "higher": 10, "histogram": [148, 474], "histogram_bin_edg": 149, "hstack": 150, "hyperbol": 465, "hypergeometr": 364, "hypot": 151, "ident": 152, "ifft": 109, "ifft2": 110, "ifftn": 111, "ifftshift": 112, "ihfft": 113, "iinfo": 153, "imag": [154, 302], "implement": 10, "index": [461, 467], "indic": 155, "infin": 463, "inform": [2, 8, 10], "inner": 156, "insert": 461, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 182, "invert": 157, "irfft": 114, "irfft2": 115, "irfftn": 116, "isclos": 158, "iscomplex": 159, "iscomplexobj": 160, "isfinit": 161, "isinf": 162, "isnan": 163, "isneginf": 164, "isposinf": 165, "isreal": 166, "isrealobj": 167, "isscalar": 168, "issubdtyp": 169, "issubsctyp": 170, "item": [303, 467], "items": 304, "iter": 461, "join": 464, "kind": 464, "kron": 171, "laplac": 365, "layout": 467, "left_shift": 172, "less": 173, "less_equ": 174, "level": 6, "librari": 0, "like": [461, 464], "linalg": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "linear": [6, 462], "linspac": 195, "loadtxt": 196, "log": 197, "log10": 198, "log1p": 199, "log2": 200, "logaddexp": 201, "logaddexp2": 202, "logarithm": 465, "logic": 463, "logical_and": 203, "logical_not": 204, "logical_or": 205, "logical_xor": 206, "logist": 366, "lognorm": 367, "logseri": 368, "logspac": 207, "logsumexp": 208, "lstsq": 183, "manipul": [464, 467], "mask_indic": 209, "math": 475, "mathemat": 465, "matmul": 210, "matric": 7, "matrix": [7, 462, 467], "matrix_pow": 184, "matrix_rank": 185, "max": [211, 305], "maximum": 212, "mean": [213, 306], "median": 214, "memori": 467, "meshgrid": 215, "method": 467, "mgrid": 216, "min": [217, 307], "minimum": 218, "miscellan": [8, 465, 466], "mod": 219, "modf": 220, "modul": [6, 469], "moveaxi": 221, "multi": [6, 467], "multi_dot": 186, "multinomi": 369, "multipl": 467, "multipli": 222, "multivariate_norm": 370, "nan": 463, "nan_to_num": 223, "nanargmax": 224, "nanargmin": 225, "nancumprod": 226, "nancumsum": 227, "nanmax": 228, "nanmean": 229, "nanmin": 230, "nanprod": 231, "nanstd": 232, "nansum": 233, "nanvar": 234, "nbyte": 308, "ndarrai": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 467], "ndim": 309, "neg": 332, "negative_binomi": 371, "nextaft": 333, "noncentral_chisquar": 372, "noncentral_f": 373, "nonzero": [310, 334], "norm": [187, 462], "normal": [10, 374], "not_equ": 335, "number": [462, 464, 465], "numer": 7, "numpi": [2, 6], "ogrid": 336, "ones": 337, "ones_lik": 338, "oper": [5, 461, 463, 464, 465, 467, 475], "order": 474, "other": [462, 465, 467], "outer": 339, "output": 5, "over": 461, "overview": 3, "pack": 5, "packag": [4, 469], "pad": 468, "parallel": [0, 2], "pareto": 375, "partit": [311, 340], "permut": [376, 470], "pinv": 188, "place": 341, "point": 465, "poisson": 377, "poly1d": 469, "polynomi": 469, "polyutil": 469, "posit": 342, "power": [343, 378], "prod": [312, 344], "product": [462, 465], "proj": 345, "promot": 10, "ptp": 346, "put": [313, 347], "put_along_axi": 348, "putmask": 349, "python": 4, "qr": 189, "quick": 4, "r": 4, "rad2deg": 350, "radian": 351, "rand": 379, "randint": 380, "randn": 381, "random": [6, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 470], "random_integ": 383, "random_sampl": 384, "randomst": 352, "ranf": 385, "rang": 7, "ration": 465, "ravel": [314, 401], "rayleigh": 386, "real": [10, 315, 402], "rearrang": 464, "reciproc": 403, "reduce_hypot": 404, "refer": [1, 460], "remaind": 405, "remov": 464, "repeat": [316, 406], "reshap": [317, 407], "result_typ": 408, "rfft": 117, "rfft2": 118, "rfftfreq": 119, "rfftn": 120, "right_shift": 409, "rint": 410, "roll": 411, "rollaxi": 412, "round": [318, 413, 465], "routin": [7, 8, 10, 461, 464, 465, 466, 471], "row_stack": 414, "rsqrt": 415, "sampl": [6, 387, 470], "scikit": 4, "search": 472, "searchsort": [319, 416], "seed": 388, "select": [417, 467], "shape": [7, 320, 418, 464, 467], "shuffl": 389, "sign": 419, "signbit": 420, "simpl": 470, "sin": 421, "sinh": 422, "size": 321, "slogdet": 190, "solv": [191, 462], "sort": [322, 423, 472], "sort_complex": 424, "special": [465, 467, 473], "split": 464, "sqrt": 425, "squar": 426, "squeez": [323, 427], "stack": 428, "standard": 10, "standard_cauchi": 390, "standard_exponenti": 391, "standard_gamma": 392, "standard_norm": 393, "standard_t": 394, "start": 4, "statist": 474, "std": [324, 429], "stride": 325, "subtract": 430, "sum": [326, 431, 465], "summari": 6, "svd": 192, "swapax": [327, 432], "t": 236, "tabl": 6, "take": [328, 433], "take_along_axi": 434, "tan": 435, "tanh": 436, "tensordot": 437, "tensorinv": 193, "tensorsolv": 194, "test": [4, 8, 463], "tile": [438, 464], "trace": [329, 439], "transform": [6, 10], "transpos": [330, 440, 464], "tri": 441, "triangular": 395, "trigonometr": [465, 475], "tril": 442, "tril_indic": 443, "tril_indices_from": 444, "trim_zero": 445, "triu": 446, "triu_indic": 447, "triu_indices_from": 448, "true_divid": 449, "trunc": 450, "truth": 463, "twiddl": 475, "type": [8, 9, 10, 463, 467], "ufunc": 475, "uniform": 396, "uniqu": 451, "univers": 475, "unwrap": 452, "util": 466, "valu": [7, 463], "vander": 453, "var": [331, 454], "varianc": 474, "vdot": 455, "vector": 462, "vonmis": 397, "vstack": 456, "wald": 398, "weibul": 399, "where": 457, "wise": 5, "zero": 458, "zeros_lik": 459, "zipf": 400}})