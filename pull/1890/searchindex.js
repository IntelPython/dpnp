Search.setIndex({"alltitles": {"API Reference": [[449, "api-reference"]], "Adding and removing elements": [[453, "adding-and-removing-elements"]], "Arithmetic": [[458, "arithmetic"]], "Arithmetic operations": [[454, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[456, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[450, "array-indexing-routines"]], "Array Manipulation Routines": [[453, "array-manipulation-routines"]], "Array attributes": [[456, "array-attributes"]], "Array conversion": [[456, "array-conversion"]], "Array creation routines": [[7, "array-creation-routines"]], "Array methods": [[456, "array-methods"]], "Array type testing": [[452, "array-type-testing"]], "Available array data types": [[9, "available-array-data-types"]], "Available ufuncs": [[464, "available-ufuncs"]], "Averages and variances": [[463, "averages-and-variances"]], "Basic operations": [[453, "basic-operations"]], "Basics": [[458, "basics"]], "Binary Operations": [[5, "binary-operations"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[464, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "Calculation": [[456, "calculation"]], "Changing array shape": [[453, "changing-array-shape"]], "Changing kind of array": [[453, "changing-kind-of-array"]], "Changing number of dimensions": [[453, "changing-number-of-dimensions"]], "Comparison": [[452, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, "comparison-table-numpy-dpnp-cupy"]], "Comparison functions": [[464, "comparison-functions"]], "Constructing arrays": [[456, "constructing-arrays"]], "Correlations": [[463, "correlations"]], "Counting": [[461, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, "data-parallel-extension-for-numpy"]], "Data type": [[456, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, "data-type-routines"]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[451, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[459, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[462, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[454, "exponents-and-logarithms"]], "Extrema Finding": [[454, "extrema-finding"]], "FFT Functions": [[10, "fft-functions"]], "Floating functions": [[464, "floating-functions"]], "Floating point routines": [[454, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[450, "generating-index-arrays"]], "Handling complex numbers": [[454, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Histograms": [[463, "histograms"]], "Hyperbolic functions": [[454, "hyperbolic-functions"]], "Indexing arrays": [[456, "indexing-arrays"]], "Indexing-like operations": [[450, "indexing-like-operations"]], "Infinities and NaNs": [[452, "infinities-and-nans"]], "Inserting data into arrays": [[450, "inserting-data-into-arrays"]], "Install Package from Anaconda": [[4, "install-package-from-anaconda"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, "interplay-with-the-data-parallel-control-library"]], "Item selection and manipulation": [[456, "item-selection-and-manipulation"]], "Iterating over arrays": [[450, "iterating-over-arrays"]], "Joining arrays": [[453, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [451, "linear-algebra"]], "Logic Functions": [[452, "logic-functions"]], "Logic operations": [[452, "logic-operations"]], "Math operations": [[464, "math-operations"]], "Mathematical Functions": [[454, "mathematical-functions"]], "Matrix and vector products": [[451, "matrix-and-vector-products"]], "Matrix eigenvalues": [[451, "matrix-eigenvalues"]], "Memory layout": [[456, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [454, "miscellaneous"]], "Miscellaneous routines": [[455, "miscellaneous-routines"]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[456, "multi-dimensional-array-ndarray"]], "Norms and other numbers": [[451, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[463, "order-statistics"]], "Other attributes": [[456, "other-attributes"]], "Other special functions": [[454, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, "id1"]], "Padding": [[457, "padding"]], "Permutations": [[459, "permutations"]], "Poly1d": [[458, "poly1d"]], "Polynomial Module": [[458, "polynomial-module"]], "Polynomial Package": [[458, "polynomial-package"]], "Polynomials": [[458, "polynomials"]], "Polyutils": [[458, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, "id1"]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[459, "random-sampling-dpnp-random"]], "Random generator": [[459, "random-generator"]], "Rational routines": [[454, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Rearranging elements": [[453, "rearranging-elements"]], "Rounding": [[454, "rounding"]], "Routines": [[460, "routines"]], "Searching": [[461, "searching"]], "Shape manipulation": [[456, "shape-manipulation"]], "Simple random data": [[459, "simple-random-data"]], "Solving linear equations": [[451, "solving-linear-equations"]], "Sorting": [[461, "sorting"]], "Sorting, Searching, and Counting": [[461, "sorting-searching-and-counting"]], "Special Functions": [[462, "special-functions"]], "Special methods": [[456, "special-methods"]], "Splitting arrays": [[453, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[463, "statistical-functions"]], "Summary": [[6, "summary"]], "Sums, products, differences": [[454, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[453, "tiling-arrays"]], "Transpose-like operations": [[453, "transpose-like-operations"]], "Trigonometric functions": [[454, "trigonometric-functions"], [464, "trigonometric-functions"]], "Truth value testing": [[452, "truth-value-testing"]], "Universal Functions (ufunc)": [[464, "universal-functions-ufunc"]], "Utility": [[455, "utility"]], "dpnp.abs": [[11, "dpnp-abs"]], "dpnp.absolute": [[12, "dpnp-absolute"]], "dpnp.add": [[13, "dpnp-add"]], "dpnp.all": [[14, "dpnp-all"]], "dpnp.allclose": [[15, "dpnp-allclose"]], "dpnp.amax": [[16, "dpnp-amax"]], "dpnp.amin": [[17, "dpnp-amin"]], "dpnp.angle": [[18, "dpnp-angle"]], "dpnp.any": [[19, "dpnp-any"]], "dpnp.arange": [[20, "dpnp-arange"]], "dpnp.arccos": [[21, "dpnp-arccos"]], "dpnp.arccosh": [[22, "dpnp-arccosh"]], "dpnp.arcsin": [[23, "dpnp-arcsin"]], "dpnp.arcsinh": [[24, "dpnp-arcsinh"]], "dpnp.arctan": [[25, "dpnp-arctan"]], "dpnp.arctan2": [[26, "dpnp-arctan2"]], "dpnp.arctanh": [[27, "dpnp-arctanh"]], "dpnp.argmax": [[28, "dpnp-argmax"]], "dpnp.argmin": [[29, "dpnp-argmin"]], "dpnp.argsort": [[30, "dpnp-argsort"]], "dpnp.around": [[31, "dpnp-around"]], "dpnp.array": [[32, "dpnp-array"]], "dpnp.array_equal": [[33, "dpnp-array-equal"]], "dpnp.asanyarray": [[34, "dpnp-asanyarray"]], "dpnp.asarray": [[35, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[36, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[37, "dpnp-asfarray"]], "dpnp.asfortranarray": [[38, "dpnp-asfortranarray"]], "dpnp.asnumpy": [[39, "dpnp-asnumpy"]], "dpnp.astype": [[40, "dpnp-astype"]], "dpnp.atleast_1d": [[41, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[42, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[43, "dpnp-atleast-3d"]], "dpnp.average": [[44, "dpnp-average"]], "dpnp.bincount": [[45, "dpnp-bincount"]], "dpnp.bitwise_and": [[46, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[47, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[48, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[49, "dpnp-bitwise-xor"]], "dpnp.broadcast_arrays": [[50, "dpnp-broadcast-arrays"]], "dpnp.broadcast_to": [[51, "dpnp-broadcast-to"]], "dpnp.can_cast": [[52, "dpnp-can-cast"]], "dpnp.cbrt": [[53, "dpnp-cbrt"]], "dpnp.ceil": [[54, "dpnp-ceil"]], "dpnp.choose": [[55, "dpnp-choose"]], "dpnp.clip": [[56, "dpnp-clip"]], "dpnp.column_stack": [[57, "dpnp-column-stack"]], "dpnp.concatenate": [[58, "dpnp-concatenate"]], "dpnp.conj": [[59, "dpnp-conj"]], "dpnp.conjugate": [[60, "dpnp-conjugate"]], "dpnp.convolve": [[61, "dpnp-convolve"]], "dpnp.copy": [[62, "dpnp-copy"]], "dpnp.copysign": [[63, "dpnp-copysign"]], "dpnp.copyto": [[64, "dpnp-copyto"]], "dpnp.correlate": [[65, "dpnp-correlate"]], "dpnp.cos": [[66, "dpnp-cos"]], "dpnp.cosh": [[67, "dpnp-cosh"]], "dpnp.count_nonzero": [[68, "dpnp-count-nonzero"]], "dpnp.cov": [[69, "dpnp-cov"]], "dpnp.cross": [[70, "dpnp-cross"]], "dpnp.cumlogsumexp": [[71, "dpnp-cumlogsumexp"]], "dpnp.cumprod": [[72, "dpnp-cumprod"]], "dpnp.cumsum": [[73, "dpnp-cumsum"]], "dpnp.deg2rad": [[74, "dpnp-deg2rad"]], "dpnp.degrees": [[75, "dpnp-degrees"]], "dpnp.diag": [[76, "dpnp-diag"]], "dpnp.diag_indices": [[77, "dpnp-diag-indices"]], "dpnp.diag_indices_from": [[78, "dpnp-diag-indices-from"]], "dpnp.diagflat": [[79, "dpnp-diagflat"]], "dpnp.diagonal": [[80, "dpnp-diagonal"]], "dpnp.diff": [[81, "dpnp-diff"]], "dpnp.digitize": [[82, "dpnp-digitize"]], "dpnp.divide": [[83, "dpnp-divide"]], "dpnp.dot": [[84, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[85, "dpnp-dpnp-array-dpnp-array"]], "dpnp.dstack": [[86, "dpnp-dstack"]], "dpnp.dtype": [[87, "dpnp-dtype"]], "dpnp.ediff1d": [[88, "dpnp-ediff1d"]], "dpnp.einsum": [[89, "dpnp-einsum"]], "dpnp.einsum_path": [[90, "dpnp-einsum-path"]], "dpnp.empty": [[91, "dpnp-empty"]], "dpnp.empty_like": [[92, "dpnp-empty-like"]], "dpnp.equal": [[93, "dpnp-equal"]], "dpnp.erf": [[94, "dpnp-erf"]], "dpnp.exp": [[95, "dpnp-exp"]], "dpnp.exp2": [[96, "dpnp-exp2"]], "dpnp.expand_dims": [[97, "dpnp-expand-dims"]], "dpnp.expm1": [[98, "dpnp-expm1"]], "dpnp.extract": [[99, "dpnp-extract"]], "dpnp.eye": [[100, "dpnp-eye"]], "dpnp.fabs": [[101, "dpnp-fabs"]], "dpnp.fft.fft": [[102, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[103, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[104, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[105, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[106, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[107, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[108, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[109, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[110, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[111, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[112, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[113, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[114, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[115, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[116, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[117, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[118, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[119, "dpnp-fft-rfftn"]], "dpnp.fill_diagonal": [[120, "dpnp-fill-diagonal"]], "dpnp.finfo": [[121, "dpnp-finfo"]], "dpnp.flatiter": [[122, "dpnp-flatiter"]], "dpnp.flip": [[123, "dpnp-flip"]], "dpnp.fliplr": [[124, "dpnp-fliplr"]], "dpnp.flipud": [[125, "dpnp-flipud"]], "dpnp.floor": [[126, "dpnp-floor"]], "dpnp.floor_divide": [[127, "dpnp-floor-divide"]], "dpnp.fmax": [[128, "dpnp-fmax"]], "dpnp.fmin": [[129, "dpnp-fmin"]], "dpnp.fmod": [[130, "dpnp-fmod"]], "dpnp.from_dlpack": [[131, "dpnp-from-dlpack"]], "dpnp.frombuffer": [[132, "dpnp-frombuffer"]], "dpnp.fromfile": [[133, "dpnp-fromfile"]], "dpnp.fromfunction": [[134, "dpnp-fromfunction"]], "dpnp.fromiter": [[135, "dpnp-fromiter"]], "dpnp.fromstring": [[136, "dpnp-fromstring"]], "dpnp.full": [[137, "dpnp-full"]], "dpnp.full_like": [[138, "dpnp-full-like"]], "dpnp.geomspace": [[139, "dpnp-geomspace"]], "dpnp.get_include": [[140, "dpnp-get-include"]], "dpnp.gradient": [[141, "dpnp-gradient"]], "dpnp.greater": [[142, "dpnp-greater"]], "dpnp.greater_equal": [[143, "dpnp-greater-equal"]], "dpnp.histogram": [[144, "dpnp-histogram"]], "dpnp.histogram_bin_edges": [[145, "dpnp-histogram-bin-edges"]], "dpnp.hstack": [[146, "dpnp-hstack"]], "dpnp.hypot": [[147, "dpnp-hypot"]], "dpnp.identity": [[148, "dpnp-identity"]], "dpnp.iinfo": [[149, "dpnp-iinfo"]], "dpnp.imag": [[150, "dpnp-imag"]], "dpnp.indices": [[151, "dpnp-indices"]], "dpnp.inner": [[152, "dpnp-inner"]], "dpnp.invert": [[153, "dpnp-invert"]], "dpnp.isclose": [[154, "dpnp-isclose"]], "dpnp.isfinite": [[155, "dpnp-isfinite"]], "dpnp.isinf": [[156, "dpnp-isinf"]], "dpnp.isnan": [[157, "dpnp-isnan"]], "dpnp.isneginf": [[158, "dpnp-isneginf"]], "dpnp.isposinf": [[159, "dpnp-isposinf"]], "dpnp.isscalar": [[160, "dpnp-isscalar"]], "dpnp.issubdtype": [[161, "dpnp-issubdtype"]], "dpnp.issubsctype": [[162, "dpnp-issubsctype"]], "dpnp.kron": [[163, "dpnp-kron"]], "dpnp.left_shift": [[164, "dpnp-left-shift"]], "dpnp.less": [[165, "dpnp-less"]], "dpnp.less_equal": [[166, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[167, "dpnp-linalg-cholesky"]], "dpnp.linalg.cond": [[168, "dpnp-linalg-cond"]], "dpnp.linalg.det": [[169, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[170, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[171, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[172, "dpnp-linalg-eigvals"]], "dpnp.linalg.eigvalsh": [[173, "dpnp-linalg-eigvalsh"]], "dpnp.linalg.inv": [[174, "dpnp-linalg-inv"]], "dpnp.linalg.lstsq": [[175, "dpnp-linalg-lstsq"]], "dpnp.linalg.matrix_power": [[176, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[177, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[178, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[179, "dpnp-linalg-norm"]], "dpnp.linalg.pinv": [[180, "dpnp-linalg-pinv"]], "dpnp.linalg.qr": [[181, "dpnp-linalg-qr"]], "dpnp.linalg.slogdet": [[182, "dpnp-linalg-slogdet"]], "dpnp.linalg.solve": [[183, "dpnp-linalg-solve"]], "dpnp.linalg.svd": [[184, "dpnp-linalg-svd"]], "dpnp.linalg.tensorinv": [[185, "dpnp-linalg-tensorinv"]], "dpnp.linalg.tensorsolve": [[186, "dpnp-linalg-tensorsolve"]], "dpnp.linspace": [[187, "dpnp-linspace"]], "dpnp.loadtxt": [[188, "dpnp-loadtxt"]], "dpnp.log": [[189, "dpnp-log"]], "dpnp.log10": [[190, "dpnp-log10"]], "dpnp.log1p": [[191, "dpnp-log1p"]], "dpnp.log2": [[192, "dpnp-log2"]], "dpnp.logaddexp": [[193, "dpnp-logaddexp"]], "dpnp.logical_and": [[194, "dpnp-logical-and"]], "dpnp.logical_not": [[195, "dpnp-logical-not"]], "dpnp.logical_or": [[196, "dpnp-logical-or"]], "dpnp.logical_xor": [[197, "dpnp-logical-xor"]], "dpnp.logspace": [[198, "dpnp-logspace"]], "dpnp.logsumexp": [[199, "dpnp-logsumexp"]], "dpnp.mask_indices": [[200, "dpnp-mask-indices"]], "dpnp.matmul": [[201, "dpnp-matmul"]], "dpnp.max": [[202, "dpnp-max"]], "dpnp.maximum": [[203, "dpnp-maximum"]], "dpnp.mean": [[204, "dpnp-mean"]], "dpnp.median": [[205, "dpnp-median"]], "dpnp.meshgrid": [[206, "dpnp-meshgrid"]], "dpnp.mgrid": [[207, "dpnp-mgrid"]], "dpnp.min": [[208, "dpnp-min"]], "dpnp.minimum": [[209, "dpnp-minimum"]], "dpnp.mod": [[210, "dpnp-mod"]], "dpnp.modf": [[211, "dpnp-modf"]], "dpnp.moveaxis": [[212, "dpnp-moveaxis"]], "dpnp.multiply": [[213, "dpnp-multiply"]], "dpnp.nanargmax": [[214, "dpnp-nanargmax"]], "dpnp.nanargmin": [[215, "dpnp-nanargmin"]], "dpnp.nancumprod": [[216, "dpnp-nancumprod"]], "dpnp.nancumsum": [[217, "dpnp-nancumsum"]], "dpnp.nanmax": [[218, "dpnp-nanmax"]], "dpnp.nanmean": [[219, "dpnp-nanmean"]], "dpnp.nanmin": [[220, "dpnp-nanmin"]], "dpnp.nanprod": [[221, "dpnp-nanprod"]], "dpnp.nanstd": [[222, "dpnp-nanstd"]], "dpnp.nansum": [[223, "dpnp-nansum"]], "dpnp.nanvar": [[224, "dpnp-nanvar"]], "dpnp.ndarray": [[225, "dpnp-ndarray"]], "dpnp.ndarray.T": [[226, "dpnp-ndarray-t"]], "dpnp.ndarray.__abs__": [[227, "dpnp-ndarray-abs"]], "dpnp.ndarray.__add__": [[228, "dpnp-ndarray-add"]], "dpnp.ndarray.__and__": [[229, "dpnp-ndarray-and"]], "dpnp.ndarray.__bool__": [[230, "dpnp-ndarray-bool"]], "dpnp.ndarray.__complex__": [[231, "dpnp-ndarray-complex"]], "dpnp.ndarray.__copy__": [[232, "dpnp-ndarray-copy"]], "dpnp.ndarray.__eq__": [[233, "dpnp-ndarray-eq"]], "dpnp.ndarray.__float__": [[234, "dpnp-ndarray-float"]], "dpnp.ndarray.__floordiv__": [[235, "dpnp-ndarray-floordiv"]], "dpnp.ndarray.__ge__": [[236, "dpnp-ndarray-ge"]], "dpnp.ndarray.__getitem__": [[237, "dpnp-ndarray-getitem"]], "dpnp.ndarray.__gt__": [[238, "dpnp-ndarray-gt"]], "dpnp.ndarray.__iadd__": [[239, "dpnp-ndarray-iadd"]], "dpnp.ndarray.__iand__": [[240, "dpnp-ndarray-iand"]], "dpnp.ndarray.__ifloordiv__": [[241, "dpnp-ndarray-ifloordiv"]], "dpnp.ndarray.__ilshift__": [[242, "dpnp-ndarray-ilshift"]], "dpnp.ndarray.__imod__": [[243, "dpnp-ndarray-imod"]], "dpnp.ndarray.__imul__": [[244, "dpnp-ndarray-imul"]], "dpnp.ndarray.__int__": [[245, "dpnp-ndarray-int"]], "dpnp.ndarray.__invert__": [[246, "dpnp-ndarray-invert"]], "dpnp.ndarray.__ior__": [[247, "dpnp-ndarray-ior"]], "dpnp.ndarray.__ipow__": [[248, "dpnp-ndarray-ipow"]], "dpnp.ndarray.__irshift__": [[249, "dpnp-ndarray-irshift"]], "dpnp.ndarray.__isub__": [[250, "dpnp-ndarray-isub"]], "dpnp.ndarray.__itruediv__": [[251, "dpnp-ndarray-itruediv"]], "dpnp.ndarray.__ixor__": [[252, "dpnp-ndarray-ixor"]], "dpnp.ndarray.__le__": [[253, "dpnp-ndarray-le"]], "dpnp.ndarray.__len__": [[254, "dpnp-ndarray-len"]], "dpnp.ndarray.__lshift__": [[255, "dpnp-ndarray-lshift"]], "dpnp.ndarray.__lt__": [[256, "dpnp-ndarray-lt"]], "dpnp.ndarray.__matmul__": [[257, "dpnp-ndarray-matmul"]], "dpnp.ndarray.__mod__": [[258, "dpnp-ndarray-mod"]], "dpnp.ndarray.__mul__": [[259, "dpnp-ndarray-mul"]], "dpnp.ndarray.__ne__": [[260, "dpnp-ndarray-ne"]], "dpnp.ndarray.__neg__": [[261, "dpnp-ndarray-neg"]], "dpnp.ndarray.__new__": [[262, "dpnp-ndarray-new"]], "dpnp.ndarray.__or__": [[263, "dpnp-ndarray-or"]], "dpnp.ndarray.__pos__": [[264, "dpnp-ndarray-pos"]], "dpnp.ndarray.__pow__": [[265, "dpnp-ndarray-pow"]], "dpnp.ndarray.__repr__": [[266, "dpnp-ndarray-repr"]], "dpnp.ndarray.__rshift__": [[267, "dpnp-ndarray-rshift"]], "dpnp.ndarray.__setitem__": [[268, "dpnp-ndarray-setitem"]], "dpnp.ndarray.__str__": [[269, "dpnp-ndarray-str"]], "dpnp.ndarray.__sub__": [[270, "dpnp-ndarray-sub"]], "dpnp.ndarray.__truediv__": [[271, "dpnp-ndarray-truediv"]], "dpnp.ndarray.__xor__": [[272, "dpnp-ndarray-xor"]], "dpnp.ndarray.all": [[273, "dpnp-ndarray-all"]], "dpnp.ndarray.any": [[274, "dpnp-ndarray-any"]], "dpnp.ndarray.argmax": [[275, "dpnp-ndarray-argmax"]], "dpnp.ndarray.argmin": [[276, "dpnp-ndarray-argmin"]], "dpnp.ndarray.argsort": [[277, "dpnp-ndarray-argsort"]], "dpnp.ndarray.astype": [[278, "dpnp-ndarray-astype"]], "dpnp.ndarray.choose": [[279, "dpnp-ndarray-choose"]], "dpnp.ndarray.clip": [[280, "dpnp-ndarray-clip"]], "dpnp.ndarray.conj": [[281, "dpnp-ndarray-conj"]], "dpnp.ndarray.conjugate": [[282, "dpnp-ndarray-conjugate"]], "dpnp.ndarray.copy": [[283, "dpnp-ndarray-copy"]], "dpnp.ndarray.cumprod": [[284, "dpnp-ndarray-cumprod"]], "dpnp.ndarray.cumsum": [[285, "dpnp-ndarray-cumsum"]], "dpnp.ndarray.diagonal": [[286, "dpnp-ndarray-diagonal"]], "dpnp.ndarray.dtype": [[287, "dpnp-ndarray-dtype"]], "dpnp.ndarray.fill": [[288, "dpnp-ndarray-fill"]], "dpnp.ndarray.flags": [[289, "dpnp-ndarray-flags"]], "dpnp.ndarray.flat": [[290, "dpnp-ndarray-flat"]], "dpnp.ndarray.flatten": [[291, "dpnp-ndarray-flatten"]], "dpnp.ndarray.imag": [[292, "dpnp-ndarray-imag"]], "dpnp.ndarray.item": [[293, "dpnp-ndarray-item"]], "dpnp.ndarray.itemsize": [[294, "dpnp-ndarray-itemsize"]], "dpnp.ndarray.max": [[295, "dpnp-ndarray-max"]], "dpnp.ndarray.mean": [[296, "dpnp-ndarray-mean"]], "dpnp.ndarray.min": [[297, "dpnp-ndarray-min"]], "dpnp.ndarray.nbytes": [[298, "dpnp-ndarray-nbytes"]], "dpnp.ndarray.ndim": [[299, "dpnp-ndarray-ndim"]], "dpnp.ndarray.nonzero": [[300, "dpnp-ndarray-nonzero"]], "dpnp.ndarray.partition": [[301, "dpnp-ndarray-partition"]], "dpnp.ndarray.prod": [[302, "dpnp-ndarray-prod"]], "dpnp.ndarray.put": [[303, "dpnp-ndarray-put"]], "dpnp.ndarray.ravel": [[304, "dpnp-ndarray-ravel"]], "dpnp.ndarray.real": [[305, "dpnp-ndarray-real"]], "dpnp.ndarray.repeat": [[306, "dpnp-ndarray-repeat"]], "dpnp.ndarray.reshape": [[307, "dpnp-ndarray-reshape"]], "dpnp.ndarray.round": [[308, "dpnp-ndarray-round"]], "dpnp.ndarray.searchsorted": [[309, "dpnp-ndarray-searchsorted"]], "dpnp.ndarray.shape": [[310, "dpnp-ndarray-shape"]], "dpnp.ndarray.size": [[311, "dpnp-ndarray-size"]], "dpnp.ndarray.sort": [[312, "dpnp-ndarray-sort"]], "dpnp.ndarray.squeeze": [[313, "dpnp-ndarray-squeeze"]], "dpnp.ndarray.std": [[314, "dpnp-ndarray-std"]], "dpnp.ndarray.strides": [[315, "dpnp-ndarray-strides"]], "dpnp.ndarray.sum": [[316, "dpnp-ndarray-sum"]], "dpnp.ndarray.swapaxes": [[317, "dpnp-ndarray-swapaxes"]], "dpnp.ndarray.take": [[318, "dpnp-ndarray-take"]], "dpnp.ndarray.trace": [[319, "dpnp-ndarray-trace"]], "dpnp.ndarray.transpose": [[320, "dpnp-ndarray-transpose"]], "dpnp.ndarray.var": [[321, "dpnp-ndarray-var"]], "dpnp.negative": [[322, "dpnp-negative"]], "dpnp.nonzero": [[323, "dpnp-nonzero"]], "dpnp.not_equal": [[324, "dpnp-not-equal"]], "dpnp.ogrid": [[325, "dpnp-ogrid"]], "dpnp.ones": [[326, "dpnp-ones"]], "dpnp.ones_like": [[327, "dpnp-ones-like"]], "dpnp.outer": [[328, "dpnp-outer"]], "dpnp.partition": [[329, "dpnp-partition"]], "dpnp.place": [[330, "dpnp-place"]], "dpnp.positive": [[331, "dpnp-positive"]], "dpnp.power": [[332, "dpnp-power"]], "dpnp.prod": [[333, "dpnp-prod"]], "dpnp.proj": [[334, "dpnp-proj"]], "dpnp.ptp": [[335, "dpnp-ptp"]], "dpnp.put": [[336, "dpnp-put"]], "dpnp.put_along_axis": [[337, "dpnp-put-along-axis"]], "dpnp.putmask": [[338, "dpnp-putmask"]], "dpnp.rad2deg": [[339, "dpnp-rad2deg"]], "dpnp.radians": [[340, "dpnp-radians"]], "dpnp.random.RandomState": [[341, "dpnp-random-randomstate"]], "dpnp.random.beta": [[342, "dpnp-random-beta"]], "dpnp.random.binomial": [[343, "dpnp-random-binomial"]], "dpnp.random.bytes": [[344, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[345, "dpnp-random-chisquare"]], "dpnp.random.choice": [[346, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[347, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[348, "dpnp-random-exponential"]], "dpnp.random.f": [[349, "dpnp-random-f"]], "dpnp.random.gamma": [[350, "dpnp-random-gamma"]], "dpnp.random.geometric": [[351, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[352, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[353, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[354, "dpnp-random-laplace"]], "dpnp.random.logistic": [[355, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[356, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[357, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[358, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[359, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[360, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[361, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[362, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[363, "dpnp-random-normal"]], "dpnp.random.pareto": [[364, "dpnp-random-pareto"]], "dpnp.random.permutation": [[365, "dpnp-random-permutation"]], "dpnp.random.poisson": [[366, "dpnp-random-poisson"]], "dpnp.random.power": [[367, "dpnp-random-power"]], "dpnp.random.rand": [[368, "dpnp-random-rand"]], "dpnp.random.randint": [[369, "dpnp-random-randint"]], "dpnp.random.randn": [[370, "dpnp-random-randn"]], "dpnp.random.random": [[371, "dpnp-random-random"]], "dpnp.random.random_integers": [[372, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[373, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[374, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[375, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[376, "dpnp-random-sample"]], "dpnp.random.seed": [[377, "dpnp-random-seed"]], "dpnp.random.shuffle": [[378, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[379, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[380, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[381, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[382, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[383, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[384, "dpnp-random-triangular"]], "dpnp.random.uniform": [[385, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[386, "dpnp-random-vonmises"]], "dpnp.random.wald": [[387, "dpnp-random-wald"]], "dpnp.random.weibull": [[388, "dpnp-random-weibull"]], "dpnp.random.zipf": [[389, "dpnp-random-zipf"]], "dpnp.ravel": [[390, "dpnp-ravel"]], "dpnp.real": [[391, "dpnp-real"]], "dpnp.reciprocal": [[392, "dpnp-reciprocal"]], "dpnp.reduce_hypot": [[393, "dpnp-reduce-hypot"]], "dpnp.remainder": [[394, "dpnp-remainder"]], "dpnp.repeat": [[395, "dpnp-repeat"]], "dpnp.reshape": [[396, "dpnp-reshape"]], "dpnp.result_type": [[397, "dpnp-result-type"]], "dpnp.right_shift": [[398, "dpnp-right-shift"]], "dpnp.rint": [[399, "dpnp-rint"]], "dpnp.roll": [[400, "dpnp-roll"]], "dpnp.rollaxis": [[401, "dpnp-rollaxis"]], "dpnp.round": [[402, "dpnp-round"]], "dpnp.row_stack": [[403, "dpnp-row-stack"]], "dpnp.rsqrt": [[404, "dpnp-rsqrt"]], "dpnp.searchsorted": [[405, "dpnp-searchsorted"]], "dpnp.select": [[406, "dpnp-select"]], "dpnp.shape": [[407, "dpnp-shape"]], "dpnp.sign": [[408, "dpnp-sign"]], "dpnp.signbit": [[409, "dpnp-signbit"]], "dpnp.sin": [[410, "dpnp-sin"]], "dpnp.sinh": [[411, "dpnp-sinh"]], "dpnp.sort": [[412, "dpnp-sort"]], "dpnp.sort_complex": [[413, "dpnp-sort-complex"]], "dpnp.sqrt": [[414, "dpnp-sqrt"]], "dpnp.square": [[415, "dpnp-square"]], "dpnp.squeeze": [[416, "dpnp-squeeze"]], "dpnp.stack": [[417, "dpnp-stack"]], "dpnp.std": [[418, "dpnp-std"]], "dpnp.subtract": [[419, "dpnp-subtract"]], "dpnp.sum": [[420, "dpnp-sum"]], "dpnp.swapaxes": [[421, "dpnp-swapaxes"]], "dpnp.take": [[422, "dpnp-take"]], "dpnp.take_along_axis": [[423, "dpnp-take-along-axis"]], "dpnp.tan": [[424, "dpnp-tan"]], "dpnp.tanh": [[425, "dpnp-tanh"]], "dpnp.tensordot": [[426, "dpnp-tensordot"]], "dpnp.tile": [[427, "dpnp-tile"]], "dpnp.trace": [[428, "dpnp-trace"]], "dpnp.transpose": [[429, "dpnp-transpose"]], "dpnp.trapz": [[430, "dpnp-trapz"]], "dpnp.tri": [[431, "dpnp-tri"]], "dpnp.tril": [[432, "dpnp-tril"]], "dpnp.tril_indices": [[433, "dpnp-tril-indices"]], "dpnp.tril_indices_from": [[434, "dpnp-tril-indices-from"]], "dpnp.triu": [[435, "dpnp-triu"]], "dpnp.triu_indices": [[436, "dpnp-triu-indices"]], "dpnp.triu_indices_from": [[437, "dpnp-triu-indices-from"]], "dpnp.true_divide": [[438, "dpnp-true-divide"]], "dpnp.trunc": [[439, "dpnp-trunc"]], "dpnp.unique": [[440, "dpnp-unique"]], "dpnp.unwrap": [[441, "dpnp-unwrap"]], "dpnp.vander": [[442, "dpnp-vander"]], "dpnp.var": [[443, "dpnp-var"]], "dpnp.vdot": [[444, "dpnp-vdot"]], "dpnp.vstack": [[445, "dpnp-vstack"]], "dpnp.where": [[446, "dpnp-where"]], "dpnp.zeros": [[447, "dpnp-zeros"]], "dpnp.zeros_like": [[448, "dpnp-zeros-like"]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[227, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[228, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[229, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[230, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[231, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[232, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[87, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[233, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[234, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[235, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[87, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[236, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[87, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[237, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[87, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[238, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[87, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[87, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[87, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[87, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[87, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[273, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[274, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "arange() (in module dpnp)": [[20, "dpnp.arange", false]], "arccos() (in module dpnp)": [[21, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[22, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[23, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[24, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[25, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[26, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[27, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[275, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[28, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[276, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[29, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[277, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[30, "dpnp.argsort", false]], "around() (in module dpnp)": [[31, "dpnp.around", false]], "array() (in module dpnp)": [[32, "dpnp.array", false]], "array_equal() (in module dpnp)": [[33, "dpnp.array_equal", false]], "asanyarray() (in module dpnp)": [[34, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[35, "dpnp.asarray", false]], "ascontiguousarray() (in module dpnp)": [[36, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[37, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[38, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[39, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[278, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[40, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[41, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[42, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[43, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[44, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[87, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[342, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[45, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[343, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[46, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[47, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[48, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[49, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[50, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[51, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[87, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[344, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[52, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[53, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[54, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[87, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[345, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[346, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[167, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[279, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[55, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[280, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[56, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[57, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[58, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[168, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[281, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[59, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[282, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[60, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[61, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[283, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[62, "dpnp.copy", false]], "copysign() (in module dpnp)": [[63, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[64, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[65, "dpnp.correlate", false]], "cos() (in module dpnp)": [[66, "dpnp.cos", false]], "cosh() (in module dpnp)": [[67, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[68, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[69, "dpnp.cov", false]], "cross() (in module dpnp)": [[70, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[71, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[284, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[72, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[285, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[73, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[74, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[75, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[87, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[169, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[76, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[77, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[78, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[79, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[286, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[80, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[81, "dpnp.diff", false]], "digitize() (in module dpnp)": [[82, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[347, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[83, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[84, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[10, "module-dpnp.fft", false]], "dpnp.random": [[459, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[85, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[86, "dpnp.dstack", false]], "dtype (class in dpnp)": [[87, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[287, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[88, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[170, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[171, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[172, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[173, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[89, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[90, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[91, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[92, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[93, "dpnp.equal", false]], "erf() (in module dpnp)": [[94, "dpnp.erf", false]], "exp() (in module dpnp)": [[95, "dpnp.exp", false]], "exp2() (in module dpnp)": [[96, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[97, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[98, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[348, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[99, "dpnp.extract", false]], "eye() (in module dpnp)": [[100, "dpnp.eye", false]], "f() (in module dpnp.random)": [[349, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[101, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[102, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[103, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[104, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[105, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[106, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[87, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[288, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[120, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[121, "dpnp.finfo", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[87, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[289, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[290, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[122, "dpnp.flatiter", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[291, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[123, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[124, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[125, "dpnp.flipud", false]], "floor() (in module dpnp)": [[126, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[127, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[128, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[129, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[130, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[131, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[132, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[133, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[134, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[135, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[136, "dpnp.fromstring", false]], "full() (in module dpnp)": [[137, "dpnp.full", false]], "full_like() (in module dpnp)": [[138, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[350, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[351, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[139, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[140, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[141, "dpnp.gradient", false]], "greater() (in module dpnp)": [[142, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[143, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[352, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[87, "dpnp.dtype.hasobject", false]], "hfft() (in module dpnp.fft)": [[107, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[144, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[145, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[146, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[353, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[147, "dpnp.hypot", false]], "identity() (in module dpnp)": [[148, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[108, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[109, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[110, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[111, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[112, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[149, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[292, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[150, "dpnp.imag", false]], "indices() (in module dpnp)": [[151, "dpnp.indices", false]], "inner() (in module dpnp)": [[152, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[174, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[153, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[113, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[114, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[115, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[87, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[87, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[154, "dpnp.isclose", false]], "isfinite() (in module dpnp)": [[155, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[156, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[157, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[87, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[158, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[159, "dpnp.isposinf", false]], "isscalar() (in module dpnp)": [[160, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[161, "dpnp.issubdtype", false]], "issubsctype() (in module dpnp)": [[162, "dpnp.issubsctype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[293, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[87, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[294, "dpnp.ndarray.itemsize", false]], "kind (dpnp.dtype attribute)": [[87, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[163, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[354, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[164, "dpnp.left_shift", false]], "less() (in module dpnp)": [[165, "dpnp.less", false]], "less_equal() (in module dpnp)": [[166, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[187, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[188, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[189, "dpnp.log", false]], "log10() (in module dpnp)": [[190, "dpnp.log10", false]], "log1p() (in module dpnp)": [[191, "dpnp.log1p", false]], "log2() (in module dpnp)": [[192, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[193, "dpnp.logaddexp", false]], "logical_and() (in module dpnp)": [[194, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[195, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[196, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[197, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[355, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[356, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[357, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[198, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[199, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[175, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[200, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[201, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[176, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[177, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[295, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[202, "dpnp.max", false]], "maximum() (in module dpnp)": [[203, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[296, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[204, "dpnp.mean", false]], "median() (in module dpnp)": [[205, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[206, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[87, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[207, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[297, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[208, "dpnp.min", false]], "minimum() (in module dpnp)": [[209, "dpnp.minimum", false]], "mod() (in module dpnp)": [[210, "dpnp.mod", false]], "modf() (in module dpnp)": [[211, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [10, "module-dpnp.fft", false], [459, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[212, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[178, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[358, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[213, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[359, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[87, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[87, "dpnp.dtype.names", false]], "nanargmax() (in module dpnp)": [[214, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[215, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[216, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[217, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[218, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[219, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[220, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[221, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[222, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[223, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[224, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[298, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[225, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[87, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[299, "dpnp.ndarray.ndim", false]], "negative() (in module dpnp)": [[322, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[360, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[87, "dpnp.dtype.newbyteorder", false]], "noncentral_chisquare() (in module dpnp.random)": [[361, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[362, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[300, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[323, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[179, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[363, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[324, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[87, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[325, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[326, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[327, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[328, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[364, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[301, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[329, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[365, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[180, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[330, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[366, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[331, "dpnp.positive", false]], "power() (in module dpnp)": [[332, "dpnp.power", false]], "power() (in module dpnp.random)": [[367, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[302, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[333, "dpnp.prod", false]], "proj() (in module dpnp)": [[334, "dpnp.proj", false]], "ptp() (in module dpnp)": [[335, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[303, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[336, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[337, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[338, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[181, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[339, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[340, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[368, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[369, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[370, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[371, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[372, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[373, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[341, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[374, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[304, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[390, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[375, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[305, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[391, "dpnp.real", false]], "reciprocal() (in module dpnp)": [[392, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[393, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[394, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[306, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[395, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[307, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[396, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[397, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[116, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[117, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[118, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[119, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[398, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[399, "dpnp.rint", false]], "roll() (in module dpnp)": [[400, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[401, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[308, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[402, "dpnp.round", false]], "row_stack() (in module dpnp)": [[403, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[404, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[376, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[309, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[405, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[377, "dpnp.random.seed", false]], "select() (in module dpnp)": [[406, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[87, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[310, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[407, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[378, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[408, "dpnp.sign", false]], "signbit() (in module dpnp)": [[409, "dpnp.signbit", false]], "sin() (in module dpnp)": [[410, "dpnp.sin", false]], "sinh() (in module dpnp)": [[411, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[311, "dpnp.ndarray.size", false]], "slogdet() (in module dpnp.linalg)": [[182, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[183, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[312, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[412, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[413, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[414, "dpnp.sqrt", false]], "square() (in module dpnp)": [[415, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[313, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[416, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[417, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[379, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[380, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[381, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[382, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[383, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[314, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[418, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[87, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[315, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[87, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[419, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[316, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[420, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[184, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[317, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[421, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[226, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[318, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[422, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[423, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[424, "dpnp.tan", false]], "tanh() (in module dpnp)": [[425, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[426, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[185, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[186, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[427, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[319, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[428, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[320, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[429, "dpnp.transpose", false]], "trapz() (in module dpnp)": [[430, "dpnp.trapz", false]], "tri() (in module dpnp)": [[431, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[384, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[432, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[433, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[434, "dpnp.tril_indices_from", false]], "triu() (in module dpnp)": [[435, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[436, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[437, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[438, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[439, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[87, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[341, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[385, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[440, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[441, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[442, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[321, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[443, "dpnp.var", false]], "vdot() (in module dpnp)": [[444, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[386, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[445, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[387, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[388, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[446, "dpnp.where", false]], "zeros() (in module dpnp)": [[447, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[448, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[389, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "arange"], [21, 1, 1, "", "arccos"], [22, 1, 1, "", "arccosh"], [23, 1, 1, "", "arcsin"], [24, 1, 1, "", "arcsinh"], [25, 1, 1, "", "arctan"], [26, 1, 1, "", "arctan2"], [27, 1, 1, "", "arctanh"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "argmin"], [30, 1, 1, "", "argsort"], [31, 1, 1, "", "around"], [32, 1, 1, "", "array"], [33, 1, 1, "", "array_equal"], [34, 1, 1, "", "asanyarray"], [35, 1, 1, "", "asarray"], [36, 1, 1, "", "ascontiguousarray"], [37, 1, 1, "", "asfarray"], [38, 1, 1, "", "asfortranarray"], [39, 1, 1, "", "asnumpy"], [40, 1, 1, "", "astype"], [41, 1, 1, "", "atleast_1d"], [42, 1, 1, "", "atleast_2d"], [43, 1, 1, "", "atleast_3d"], [44, 1, 1, "", "average"], [45, 1, 1, "", "bincount"], [46, 1, 1, "", "bitwise_and"], [47, 1, 1, "", "bitwise_not"], [48, 1, 1, "", "bitwise_or"], [49, 1, 1, "", "bitwise_xor"], [50, 1, 1, "", "broadcast_arrays"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "can_cast"], [53, 1, 1, "", "cbrt"], [54, 1, 1, "", "ceil"], [55, 1, 1, "", "choose"], [56, 1, 1, "", "clip"], [57, 1, 1, "", "column_stack"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "correlate"], [66, 1, 1, "", "cos"], [67, 1, 1, "", "cosh"], [68, 1, 1, "", "count_nonzero"], [69, 1, 1, "", "cov"], [70, 1, 1, "", "cross"], [71, 1, 1, "", "cumlogsumexp"], [72, 1, 1, "", "cumprod"], [73, 1, 1, "", "cumsum"], [74, 1, 1, "", "deg2rad"], [75, 1, 1, "", "degrees"], [76, 1, 1, "", "diag"], [77, 1, 1, "", "diag_indices"], [78, 1, 1, "", "diag_indices_from"], [79, 1, 1, "", "diagflat"], [80, 1, 1, "", "diagonal"], [81, 1, 1, "", "diff"], [82, 1, 1, "", "digitize"], [83, 1, 1, "", "divide"], [84, 1, 1, "", "dot"], [86, 1, 1, "", "dstack"], [87, 2, 1, "", "dtype"], [88, 1, 1, "", "ediff1d"], [89, 1, 1, "", "einsum"], [90, 1, 1, "", "einsum_path"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "erf"], [95, 1, 1, "", "exp"], [96, 1, 1, "", "exp2"], [97, 1, 1, "", "expand_dims"], [98, 1, 1, "", "expm1"], [99, 1, 1, "", "extract"], [100, 1, 1, "", "eye"], [101, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [120, 1, 1, "", "fill_diagonal"], [121, 1, 1, "", "finfo"], [122, 2, 1, "", "flatiter"], [123, 1, 1, "", "flip"], [124, 1, 1, "", "fliplr"], [125, 1, 1, "", "flipud"], [126, 1, 1, "", "floor"], [127, 1, 1, "", "floor_divide"], [128, 1, 1, "", "fmax"], [129, 1, 1, "", "fmin"], [130, 1, 1, "", "fmod"], [131, 1, 1, "", "from_dlpack"], [132, 1, 1, "", "frombuffer"], [133, 1, 1, "", "fromfile"], [134, 1, 1, "", "fromfunction"], [135, 1, 1, "", "fromiter"], [136, 1, 1, "", "fromstring"], [137, 1, 1, "", "full"], [138, 1, 1, "", "full_like"], [139, 1, 1, "", "geomspace"], [140, 1, 1, "", "get_include"], [141, 1, 1, "", "gradient"], [142, 1, 1, "", "greater"], [143, 1, 1, "", "greater_equal"], [144, 1, 1, "", "histogram"], [145, 1, 1, "", "histogram_bin_edges"], [146, 1, 1, "", "hstack"], [147, 1, 1, "", "hypot"], [148, 1, 1, "", "identity"], [149, 1, 1, "", "iinfo"], [150, 1, 1, "", "imag"], [151, 1, 1, "", "indices"], [152, 1, 1, "", "inner"], [153, 1, 1, "", "invert"], [154, 1, 1, "", "isclose"], [155, 1, 1, "", "isfinite"], [156, 1, 1, "", "isinf"], [157, 1, 1, "", "isnan"], [158, 1, 1, "", "isneginf"], [159, 1, 1, "", "isposinf"], [160, 1, 1, "", "isscalar"], [161, 1, 1, "", "issubdtype"], [162, 1, 1, "", "issubsctype"], [163, 1, 1, "", "kron"], [164, 1, 1, "", "left_shift"], [165, 1, 1, "", "less"], [166, 1, 1, "", "less_equal"], [187, 1, 1, "", "linspace"], [188, 1, 1, "", "loadtxt"], [189, 1, 1, "", "log"], [190, 1, 1, "", "log10"], [191, 1, 1, "", "log1p"], [192, 1, 1, "", "log2"], [193, 1, 1, "", "logaddexp"], [194, 1, 1, "", "logical_and"], [195, 1, 1, "", "logical_not"], [196, 1, 1, "", "logical_or"], [197, 1, 1, "", "logical_xor"], [198, 1, 1, "", "logspace"], [199, 1, 1, "", "logsumexp"], [200, 1, 1, "", "mask_indices"], [201, 1, 1, "", "matmul"], [202, 1, 1, "", "max"], [203, 1, 1, "", "maximum"], [204, 1, 1, "", "mean"], [205, 1, 1, "", "median"], [206, 1, 1, "", "meshgrid"], [207, 5, 1, "", "mgrid"], [208, 1, 1, "", "min"], [209, 1, 1, "", "minimum"], [210, 1, 1, "", "mod"], [211, 1, 1, "", "modf"], [212, 1, 1, "", "moveaxis"], [213, 1, 1, "", "multiply"], [214, 1, 1, "", "nanargmax"], [215, 1, 1, "", "nanargmin"], [216, 1, 1, "", "nancumprod"], [217, 1, 1, "", "nancumsum"], [218, 1, 1, "", "nanmax"], [219, 1, 1, "", "nanmean"], [220, 1, 1, "", "nanmin"], [221, 1, 1, "", "nanprod"], [222, 1, 1, "", "nanstd"], [223, 1, 1, "", "nansum"], [224, 1, 1, "", "nanvar"], [225, 3, 1, "", "ndarray"], [322, 1, 1, "", "negative"], [323, 1, 1, "", "nonzero"], [324, 1, 1, "", "not_equal"], [325, 5, 1, "", "ogrid"], [326, 1, 1, "", "ones"], [327, 1, 1, "", "ones_like"], [328, 1, 1, "", "outer"], [329, 1, 1, "", "partition"], [330, 1, 1, "", "place"], [331, 1, 1, "", "positive"], [332, 1, 1, "", "power"], [333, 1, 1, "", "prod"], [334, 1, 1, "", "proj"], [335, 1, 1, "", "ptp"], [336, 1, 1, "", "put"], [337, 1, 1, "", "put_along_axis"], [338, 1, 1, "", "putmask"], [339, 1, 1, "", "rad2deg"], [340, 1, 1, "", "radians"], [459, 0, 0, "-", "random"], [390, 1, 1, "", "ravel"], [391, 1, 1, "", "real"], [392, 1, 1, "", "reciprocal"], [393, 1, 1, "", "reduce_hypot"], [394, 1, 1, "", "remainder"], [395, 1, 1, "", "repeat"], [396, 1, 1, "", "reshape"], [397, 1, 1, "", "result_type"], [398, 1, 1, "", "right_shift"], [399, 1, 1, "", "rint"], [400, 1, 1, "", "roll"], [401, 1, 1, "", "rollaxis"], [402, 1, 1, "", "round"], [403, 1, 1, "", "row_stack"], [404, 1, 1, "", "rsqrt"], [405, 1, 1, "", "searchsorted"], [406, 1, 1, "", "select"], [407, 1, 1, "", "shape"], [408, 1, 1, "", "sign"], [409, 1, 1, "", "signbit"], [410, 1, 1, "", "sin"], [411, 1, 1, "", "sinh"], [412, 1, 1, "", "sort"], [413, 1, 1, "", "sort_complex"], [414, 1, 1, "", "sqrt"], [415, 1, 1, "", "square"], [416, 1, 1, "", "squeeze"], [417, 1, 1, "", "stack"], [418, 1, 1, "", "std"], [419, 1, 1, "", "subtract"], [420, 1, 1, "", "sum"], [421, 1, 1, "", "swapaxes"], [422, 1, 1, "", "take"], [423, 1, 1, "", "take_along_axis"], [424, 1, 1, "", "tan"], [425, 1, 1, "", "tanh"], [426, 1, 1, "", "tensordot"], [427, 1, 1, "", "tile"], [428, 1, 1, "", "trace"], [429, 1, 1, "", "transpose"], [430, 1, 1, "", "trapz"], [431, 1, 1, "", "tri"], [432, 1, 1, "", "tril"], [433, 1, 1, "", "tril_indices"], [434, 1, 1, "", "tril_indices_from"], [435, 1, 1, "", "triu"], [436, 1, 1, "", "triu_indices"], [437, 1, 1, "", "triu_indices_from"], [438, 1, 1, "", "true_divide"], [439, 1, 1, "", "trunc"], [440, 1, 1, "", "unique"], [441, 1, 1, "", "unwrap"], [442, 1, 1, "", "vander"], [443, 1, 1, "", "var"], [444, 1, 1, "", "vdot"], [445, 1, 1, "", "vstack"], [446, 1, 1, "", "where"], [447, 1, 1, "", "zeros"], [448, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[85, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[85, 3, 1, "", "T"], [85, 4, 1, "", "__eq__"], [85, 4, 1, "", "__ge__"], [85, 4, 1, "", "__getitem__"], [85, 4, 1, "", "__gt__"], [85, 4, 1, "", "__le__"], [85, 4, 1, "", "__len__"], [85, 4, 1, "", "__lt__"], [85, 4, 1, "", "__ne__"], [85, 4, 1, "", "__setitem__"], [85, 4, 1, "", "all"], [85, 4, 1, "", "any"], [85, 4, 1, "", "argmax"], [85, 4, 1, "", "argmin"], [85, 4, 1, "", "argsort"], [85, 4, 1, "", "asnumpy"], [85, 4, 1, "", "astype"], [85, 4, 1, "", "choose"], [85, 4, 1, "", "clip"], [85, 4, 1, "", "conj"], [85, 4, 1, "", "conjugate"], [85, 4, 1, "", "copy"], [85, 4, 1, "", "cumprod"], [85, 4, 1, "", "cumsum"], [85, 3, 1, "", "device"], [85, 4, 1, "", "diagonal"], [85, 4, 1, "", "dot"], [85, 3, 1, "", "dtype"], [85, 4, 1, "", "fill"], [85, 3, 1, "", "flags"], [85, 3, 1, "", "flat"], [85, 4, 1, "", "flatten"], [85, 4, 1, "", "get_array"], [85, 3, 1, "", "imag"], [85, 4, 1, "", "item"], [85, 3, 1, "", "itemsize"], [85, 4, 1, "", "max"], [85, 4, 1, "", "mean"], [85, 4, 1, "", "min"], [85, 3, 1, "", "nbytes"], [85, 3, 1, "", "ndim"], [85, 4, 1, "", "nonzero"], [85, 4, 1, "", "partition"], [85, 4, 1, "", "prod"], [85, 4, 1, "", "put"], [85, 4, 1, "", "ravel"], [85, 3, 1, "", "real"], [85, 4, 1, "", "repeat"], [85, 4, 1, "", "reshape"], [85, 4, 1, "", "round"], [85, 4, 1, "", "searchsorted"], [85, 3, 1, "", "shape"], [85, 3, 1, "", "size"], [85, 4, 1, "", "sort"], [85, 4, 1, "", "squeeze"], [85, 4, 1, "", "std"], [85, 3, 1, "", "strides"], [85, 4, 1, "", "sum"], [85, 4, 1, "", "swapaxes"], [85, 3, 1, "", "sycl_context"], [85, 3, 1, "", "sycl_device"], [85, 3, 1, "", "sycl_queue"], [85, 4, 1, "", "take"], [85, 4, 1, "", "to_device"], [85, 4, 1, "", "trace"], [85, 4, 1, "", "transpose"], [85, 3, 1, "", "usm_type"], [85, 4, 1, "", "var"]], "dpnp.dtype": [[87, 4, 1, "", "__eq__"], [87, 4, 1, "", "__ge__"], [87, 4, 1, "", "__getitem__"], [87, 4, 1, "", "__gt__"], [87, 4, 1, "", "__le__"], [87, 4, 1, "", "__len__"], [87, 4, 1, "", "__lt__"], [87, 4, 1, "", "__ne__"], [87, 3, 1, "", "alignment"], [87, 3, 1, "", "base"], [87, 3, 1, "", "byteorder"], [87, 3, 1, "", "char"], [87, 3, 1, "", "descr"], [87, 3, 1, "", "fields"], [87, 3, 1, "", "flags"], [87, 3, 1, "", "hasobject"], [87, 3, 1, "", "isalignedstruct"], [87, 3, 1, "", "isbuiltin"], [87, 3, 1, "", "isnative"], [87, 3, 1, "", "itemsize"], [87, 3, 1, "", "kind"], [87, 3, 1, "", "metadata"], [87, 3, 1, "", "name"], [87, 3, 1, "", "names"], [87, 3, 1, "", "ndim"], [87, 4, 1, "", "newbyteorder"], [87, 3, 1, "", "num"], [87, 3, 1, "", "shape"], [87, 3, 1, "", "str"], [87, 3, 1, "", "subdtype"], [87, 3, 1, "", "type"]], "dpnp.fft": [[102, 1, 1, "", "fft"], [103, 1, 1, "", "fft2"], [104, 1, 1, "", "fftfreq"], [105, 1, 1, "", "fftn"], [106, 1, 1, "", "fftshift"], [107, 1, 1, "", "hfft"], [108, 1, 1, "", "ifft"], [109, 1, 1, "", "ifft2"], [110, 1, 1, "", "ifftn"], [111, 1, 1, "", "ifftshift"], [112, 1, 1, "", "ihfft"], [113, 1, 1, "", "irfft"], [114, 1, 1, "", "irfft2"], [115, 1, 1, "", "irfftn"], [116, 1, 1, "", "rfft"], [117, 1, 1, "", "rfft2"], [118, 1, 1, "", "rfftfreq"], [119, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[122, 4, 1, "", "__eq__"], [122, 4, 1, "", "__ge__"], [122, 4, 1, "", "__getitem__"], [122, 4, 1, "", "__gt__"], [122, 4, 1, "", "__iter__"], [122, 4, 1, "", "__le__"], [122, 4, 1, "", "__lt__"], [122, 4, 1, "", "__ne__"], [122, 4, 1, "", "__next__"], [122, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[167, 1, 1, "", "cholesky"], [168, 1, 1, "", "cond"], [169, 1, 1, "", "det"], [170, 1, 1, "", "eig"], [171, 1, 1, "", "eigh"], [172, 1, 1, "", "eigvals"], [173, 1, 1, "", "eigvalsh"], [174, 1, 1, "", "inv"], [175, 1, 1, "", "lstsq"], [176, 1, 1, "", "matrix_power"], [177, 1, 1, "", "matrix_rank"], [178, 1, 1, "", "multi_dot"], [179, 1, 1, "", "norm"], [180, 1, 1, "", "pinv"], [181, 1, 1, "", "qr"], [182, 1, 1, "", "slogdet"], [183, 1, 1, "", "solve"], [184, 1, 1, "", "svd"], [185, 1, 1, "", "tensorinv"], [186, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[226, 6, 1, "", "T"], [227, 4, 1, "", "__abs__"], [228, 4, 1, "", "__add__"], [229, 4, 1, "", "__and__"], [230, 4, 1, "", "__bool__"], [231, 4, 1, "", "__complex__"], [232, 4, 1, "", "__copy__"], [233, 4, 1, "", "__eq__"], [234, 4, 1, "", "__float__"], [235, 4, 1, "", "__floordiv__"], [236, 4, 1, "", "__ge__"], [237, 4, 1, "", "__getitem__"], [238, 4, 1, "", "__gt__"], [239, 4, 1, "", "__iadd__"], [240, 4, 1, "", "__iand__"], [241, 4, 1, "", "__ifloordiv__"], [242, 4, 1, "", "__ilshift__"], [243, 4, 1, "", "__imod__"], [244, 4, 1, "", "__imul__"], [245, 4, 1, "", "__int__"], [246, 4, 1, "", "__invert__"], [247, 4, 1, "", "__ior__"], [248, 4, 1, "", "__ipow__"], [249, 4, 1, "", "__irshift__"], [250, 4, 1, "", "__isub__"], [251, 4, 1, "", "__itruediv__"], [252, 4, 1, "", "__ixor__"], [253, 4, 1, "", "__le__"], [254, 4, 1, "", "__len__"], [255, 4, 1, "", "__lshift__"], [256, 4, 1, "", "__lt__"], [257, 4, 1, "", "__matmul__"], [258, 4, 1, "", "__mod__"], [259, 4, 1, "", "__mul__"], [260, 4, 1, "", "__ne__"], [261, 4, 1, "", "__neg__"], [262, 4, 1, "", "__new__"], [263, 4, 1, "", "__or__"], [264, 4, 1, "", "__pos__"], [265, 4, 1, "", "__pow__"], [266, 4, 1, "", "__repr__"], [267, 4, 1, "", "__rshift__"], [268, 4, 1, "", "__setitem__"], [269, 4, 1, "", "__str__"], [270, 4, 1, "", "__sub__"], [271, 4, 1, "", "__truediv__"], [272, 4, 1, "", "__xor__"], [273, 4, 1, "", "all"], [274, 4, 1, "", "any"], [275, 4, 1, "", "argmax"], [276, 4, 1, "", "argmin"], [277, 4, 1, "", "argsort"], [278, 4, 1, "", "astype"], [279, 4, 1, "", "choose"], [280, 4, 1, "", "clip"], [281, 4, 1, "", "conj"], [282, 4, 1, "", "conjugate"], [283, 4, 1, "", "copy"], [284, 4, 1, "", "cumprod"], [285, 4, 1, "", "cumsum"], [286, 4, 1, "", "diagonal"], [287, 6, 1, "", "dtype"], [288, 4, 1, "", "fill"], [289, 6, 1, "", "flags"], [290, 6, 1, "", "flat"], [291, 4, 1, "", "flatten"], [292, 6, 1, "", "imag"], [293, 4, 1, "", "item"], [294, 6, 1, "", "itemsize"], [295, 4, 1, "", "max"], [296, 4, 1, "", "mean"], [297, 4, 1, "", "min"], [298, 6, 1, "", "nbytes"], [299, 6, 1, "", "ndim"], [300, 4, 1, "", "nonzero"], [301, 4, 1, "", "partition"], [302, 4, 1, "", "prod"], [303, 4, 1, "", "put"], [304, 4, 1, "", "ravel"], [305, 6, 1, "", "real"], [306, 4, 1, "", "repeat"], [307, 4, 1, "", "reshape"], [308, 4, 1, "", "round"], [309, 4, 1, "", "searchsorted"], [310, 6, 1, "", "shape"], [311, 6, 1, "", "size"], [312, 4, 1, "", "sort"], [313, 4, 1, "", "squeeze"], [314, 4, 1, "", "std"], [315, 6, 1, "", "strides"], [316, 4, 1, "", "sum"], [317, 4, 1, "", "swapaxes"], [318, 4, 1, "", "take"], [319, 4, 1, "", "trace"], [320, 4, 1, "", "transpose"], [321, 4, 1, "", "var"]], "dpnp.random": [[341, 2, 1, "", "RandomState"], [342, 1, 1, "", "beta"], [343, 1, 1, "", "binomial"], [344, 1, 1, "", "bytes"], [345, 1, 1, "", "chisquare"], [346, 1, 1, "", "choice"], [347, 1, 1, "", "dirichlet"], [348, 1, 1, "", "exponential"], [349, 1, 1, "", "f"], [350, 1, 1, "", "gamma"], [351, 1, 1, "", "geometric"], [352, 1, 1, "", "gumbel"], [353, 1, 1, "", "hypergeometric"], [354, 1, 1, "", "laplace"], [355, 1, 1, "", "logistic"], [356, 1, 1, "", "lognormal"], [357, 1, 1, "", "logseries"], [358, 1, 1, "", "multinomial"], [359, 1, 1, "", "multivariate_normal"], [360, 1, 1, "", "negative_binomial"], [361, 1, 1, "", "noncentral_chisquare"], [362, 1, 1, "", "noncentral_f"], [363, 1, 1, "", "normal"], [364, 1, 1, "", "pareto"], [365, 1, 1, "", "permutation"], [366, 1, 1, "", "poisson"], [367, 1, 1, "", "power"], [368, 1, 1, "", "rand"], [369, 1, 1, "", "randint"], [370, 1, 1, "", "randn"], [371, 1, 1, "", "random"], [372, 1, 1, "", "random_integers"], [373, 1, 1, "", "random_sample"], [374, 1, 1, "", "ranf"], [375, 1, 1, "", "rayleigh"], [376, 1, 1, "", "sample"], [377, 1, 1, "", "seed"], [378, 1, 1, "", "shuffle"], [379, 1, 1, "", "standard_cauchy"], [380, 1, 1, "", "standard_exponential"], [381, 1, 1, "", "standard_gamma"], [382, 1, 1, "", "standard_normal"], [383, 1, 1, "", "standard_t"], [384, 1, 1, "", "triangular"], [385, 1, 1, "", "uniform"], [386, 1, 1, "", "vonmises"], [387, 1, 1, "", "wald"], [388, 1, 1, "", "weibull"], [389, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[341, 4, 1, "", "__eq__"], [341, 4, 1, "", "__ge__"], [341, 4, 1, "", "__gt__"], [341, 4, 1, "", "__le__"], [341, 4, 1, "", "__lt__"], [341, 4, 1, "", "__ne__"], [341, 4, 1, "", "get_state"], [341, 4, 1, "", "get_sycl_device"], [341, 4, 1, "", "get_sycl_queue"], [341, 4, 1, "", "normal"], [341, 4, 1, "", "rand"], [341, 4, 1, "", "randint"], [341, 4, 1, "", "randn"], [341, 4, 1, "", "random_sample"], [341, 4, 1, "", "standard_normal"], [341, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 70, 73, 85, 87, 103, 105, 109, 110, 114, 115, 117, 119, 120, 132, 133, 175, 177, 179, 184, 287, 320, 341, 342, 343, 348, 349, 350, 352, 353, 354, 355, 356, 358, 360, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 427, 456], "0": [0, 4, 6, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 104, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 141, 144, 145, 148, 151, 152, 155, 156, 157, 158, 159, 163, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 187, 188, 189, 190, 191, 192, 195, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 283, 286, 288, 292, 293, 305, 308, 312, 314, 319, 320, 321, 323, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 343, 348, 350, 351, 352, 354, 355, 356, 358, 359, 360, 363, 365, 366, 367, 368, 371, 373, 374, 375, 376, 379, 382, 384, 385, 386, 392, 394, 395, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 446, 447, 448, 456], "00": [66, 90, 410], "000": 343, "00000000005e": 98, "000000082740371e": 98, "000000e": [66, 410], "00001e10": [15, 154], "000e": 90, "00867716": 345, "01": 90, "02": 90, "03088525e": 91, "0396842": 198, "04": 90, "04719755": 340, "04921661": 341, "05": [15, 90, 154], "06310682": 341, "07944154": [71, 182], "08": [15, 66, 90, 154, 359, 410], "08156915": 341, "0943951": 340, "09861229": [71, 182, 191], "0dev0": 6, "0j": [18, 84, 85, 201, 292, 305, 408], "0th": 426, "1": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 148, 150, 151, 152, 154, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 277, 278, 283, 286, 288, 291, 292, 293, 301, 305, 312, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 343, 345, 346, 348, 350, 352, 354, 355, 356, 358, 359, 360, 363, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 380, 382, 385, 390, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456], "10": [0, 4, 13, 22, 24, 28, 29, 44, 56, 62, 71, 72, 73, 77, 78, 81, 82, 85, 87, 89, 90, 98, 137, 139, 144, 145, 150, 163, 164, 189, 190, 191, 192, 198, 199, 205, 213, 307, 335, 337, 341, 343, 353, 365, 393, 397, 398, 400, 402, 405, 417, 423, 432, 433, 434, 435, 436, 437, 446], "100": [77, 139, 163, 178, 198, 353, 379], "1000": [52, 139, 178, 198, 342, 343, 348, 350, 352, 353, 354, 355, 356, 363, 364, 367, 369, 371, 374, 376, 382, 386, 387, 388, 389], "10000": [73, 178, 351, 366, 375, 385], "100000": 360, "1000000": [379, 381, 383, 384], "1024": 0, "105": 90, "11": [28, 29, 44, 67, 77, 78, 85, 141, 179, 307, 360, 369, 402, 405, 411, 432, 433, 434, 435, 436, 437, 446], "110": [89, 152], "113": 193, "11570901": 341, "1179187": 341, "118033988749895": 418, "119": 89, "1196081": 341, "12": [28, 29, 43, 70, 77, 78, 82, 87, 89, 150, 198, 333, 335, 365, 405, 432, 433, 434, 435, 436, 437, 446], "120": [72, 75], "123": [85, 90, 293], "125": [332, 442], "127": 139, "128": [0, 139], "12th": 89, "13": [28, 29, 47, 77, 78, 84, 87, 89, 153, 201, 405, 433, 434, 436, 437], "130": 89, "134": 152, "13436424": 341, "135": 26, "13710533": 345, "139884456208480": 14, "14": [28, 29, 46, 47, 77, 78, 84, 152, 153, 405, 426, 433, 434, 436, 437], "140053638309840": 19, "14159265": [21, 26], "15": [28, 29, 73, 77, 78, 82, 89, 180, 190, 365, 405, 433, 434, 436, 437], "150": 75, "15888336": 198, "16": [6, 46, 77, 78, 87, 135, 139, 141, 213, 332, 424, 433, 434, 436, 437], "16227766": [168, 393], "16394577": 341, "17157288": [171, 173], "177": [139, 198], "18": [6, 72, 87, 88, 89, 179, 198], "180": [26, 89], "18236388": 341, "18557831": 341, "19": [68, 87], "1923875335537315": 370, "19245009": 404, "19722458": 71, "1d": [336, 337, 423], "1e": [15, 98, 154, 170, 180, 190, 191, 193, 359], "1e10": [15, 154], "1j": [11, 12, 18, 59, 60, 85, 150, 170, 184, 292, 305, 413, 415], "1th": 426, "2": [0, 3, 4, 11, 12, 13, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 44, 46, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 109, 114, 117, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 278, 283, 286, 288, 291, 293, 301, 320, 323, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340, 341, 345, 349, 353, 359, 365, 368, 370, 381, 383, 384, 387, 389, 390, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "20": [6, 72, 82, 89, 151, 163, 164, 179, 337, 343, 358, 405, 423], "20000": 343, "200e": 90, "2048": 0, "21": [73, 87], "215": 198, "21941987": 341, "21968665": 341, "22": 336, "22460635e": 424, "22497216": 179, "22776602": 198, "23": [6, 341], "230": 89, "23606798": 179, "239": 6, "24": [28, 29, 70, 72, 88, 89, 152, 163, 185, 333, 426, 428], "24264069": 179, "24544512": 341, "247219128924647": 222, "25": [87, 89, 94, 141, 144, 145, 174, 187, 213, 224, 370, 379, 442, 443], "255": [46, 48], "25506903": 341, "256": [0, 139], "26": [49, 89], "26618007j": 192, "27": [53, 198, 332, 404, 442], "28": 89, "28318531": 441, "28352814": 341, "299": 6, "2d": [184, 201], "2e": 73, "2f": 0, "2j": [59, 60, 84, 150, 171, 173, 201, 408, 413, 444], "3": [0, 3, 4, 13, 20, 21, 26, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 46, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 139, 141, 144, 145, 146, 147, 148, 150, 151, 152, 163, 164, 168, 169, 170, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 283, 286, 291, 293, 301, 312, 320, 323, 324, 325, 326, 327, 328, 332, 333, 334, 336, 341, 345, 349, 356, 359, 365, 368, 369, 370, 380, 384, 387, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 412, 413, 414, 416, 417, 418, 419, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448], "30": [70, 75, 89, 337, 340, 423, 444], "3003003": 392, "30102999566": 190, "3012989": 411, "30258509": [71, 199], "31": [49, 139], "312": 91, "316": 198, "32": [87, 89, 139, 221, 223, 426], "33": 392, "333": 178, "33836967": 341, "34074171": 341, "34132519": 198, "34846923": 179, "34960421": 198, "35": [89, 351], "35106603e": 179, "35355338": 404, "36": 70, "364": 6, "37": 402, "371139e": 66, "38": [152, 343], "38268343": 171, "38268343j": 171, "38629436": 71, "38885": 343, "389056099": [95, 98], "39": 6, "39295758": 341, "397": 6, "3e": [0, 73], "3j": [84, 201, 413], "3rd": 58, "3x3": 200, "3x8000": 380, "4": [0, 13, 14, 20, 28, 29, 32, 41, 43, 44, 46, 48, 50, 56, 57, 58, 61, 64, 66, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 120, 123, 127, 128, 129, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 163, 166, 169, 174, 176, 177, 179, 182, 185, 186, 187, 192, 194, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 219, 222, 224, 283, 286, 291, 301, 312, 320, 323, 325, 327, 332, 333, 335, 336, 341, 342, 345, 365, 370, 386, 390, 394, 395, 396, 400, 401, 402, 403, 408, 412, 414, 417, 418, 419, 421, 422, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 448], "40": [89, 164, 337, 423], "40882036": 341, "4096": 0, "41421356": [168, 179], "429": 6, "43": 6, "44": 336, "4400": [89, 426], "443469": 198, "45": [18, 26], "4532": [89, 426], "46": 89, "46394577": 341, "464": 198, "4664": [89, 426], "47": 6, "4730": [89, 426], "4796": [89, 426], "48": [6, 70], "48093112": 341, "4874": [89, 426], "48927254": 341, "49": 6, "4928": [89, 426], "49543509": 341, "49778714": 441, "499128": 84, "4d": 184, "4j": [150, 444], "4x4": [433, 436], "5": [0, 6, 13, 14, 19, 20, 27, 28, 41, 44, 45, 46, 48, 49, 50, 54, 56, 58, 61, 64, 65, 68, 70, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 94, 120, 123, 124, 125, 126, 127, 128, 129, 130, 135, 139, 141, 144, 145, 146, 147, 150, 151, 152, 163, 164, 167, 171, 173, 174, 178, 179, 183, 187, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 219, 222, 278, 283, 323, 325, 326, 327, 332, 335, 336, 341, 342, 343, 345, 348, 360, 364, 365, 366, 367, 370, 373, 388, 390, 392, 394, 396, 398, 399, 400, 401, 402, 403, 405, 408, 413, 417, 418, 420, 421, 422, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448], "50": [139, 163, 193, 198, 337, 423, 426, 446], "500": 163, "5018": [89, 426], "5091786": 67, "51": 6, "512": 0, "5162": [89, 426], "52359878": 340, "52928804": 341, "5306": [89, 426], "54": 341, "542": 6, "54288406": 341, "54465213": 341, "548739": 411, "54930614": 27, "55": 336, "5555555555555554": 224, "56": 6, "562": 198, "5620499351813308": [11, 12], "56920387": 341, "5707963267948966": 23, "57079633": [18, 26, 340, 441], "58997253": 341, "591953": 67, "5e": 193, "5j": [207, 325, 413], "6": [0, 4, 6, 13, 20, 28, 29, 41, 44, 48, 49, 56, 58, 64, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 93, 98, 123, 138, 141, 146, 150, 151, 152, 163, 179, 180, 181, 184, 185, 187, 198, 200, 216, 217, 221, 283, 293, 323, 327, 332, 335, 340, 341, 358, 360, 365, 370, 390, 396, 400, 401, 402, 403, 413, 417, 419, 420, 421, 422, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 441, 444, 445, 446, 448], "60": [70, 75, 89, 337, 423, 426, 446], "600": 163, "60943791": 71, "61799388": 340, "62": 152, "6227766": 139, "62318272": 345, "62341325": 139, "624": 90, "63": 139, "63317787e": 424, "63522211": 341, "63836967": 341, "64": [0, 4, 89, 139, 221, 223, 332, 402], "64000": 89, "65745445": 22, "6666666666666665": 219, "67": 89, "67305985": 132, "673174": 341, "67718303": 341, "69295758": 341, "69314718": [71, 182, 191], "6990877": 341, "6j": [150, 444], "7": [13, 15, 20, 41, 54, 56, 64, 68, 70, 73, 76, 77, 78, 80, 81, 83, 85, 88, 95, 123, 126, 139, 141, 152, 154, 163, 179, 184, 200, 205, 210, 213, 293, 323, 334, 335, 341, 365, 394, 397, 399, 400, 419, 420, 421, 422, 426, 432, 433, 434, 435, 436, 437, 438, 439, 444, 446], "70": [163, 444, 446], "700": 163, "700e": 90, "70710677": [85, 292, 305], "70710678": [168, 170], "70710678j": 170, "70882036": 341, "718281828": [95, 98], "72": 70, "720": 72, "72075441": 198, "72538256": 24, "74165739": 179, "742278e": 410, "74596669": 179, "74921661": 341, "75": [44, 94, 141, 145, 174, 187], "754": 121, "76096244": 341, "76377462": 341, "78539816": [18, 25, 26, 441], "78927254": 341, "79175947": 71, "7j": 334, "8": [4, 13, 15, 41, 53, 56, 64, 70, 76, 77, 78, 80, 81, 85, 87, 89, 90, 123, 139, 141, 150, 154, 169, 179, 182, 184, 185, 187, 198, 200, 323, 332, 333, 335, 341, 365, 384, 400, 404, 410, 422, 426, 428, 430, 432, 433, 434, 435, 436, 437, 442, 446], "80": [87, 89, 446], "8000": 380, "80226506": 341, "81715362": 341, "827941": [139, 198], "82842712": [171, 173], "84288406": 341, "84401099": 341, "84743374": 341, "84803548": 179, "85": 89, "86": 152, "87649168": 193, "88997253": 341, "89920014": 345, "8f": 87, "8j": 444, "9": [4, 13, 41, 56, 64, 70, 73, 76, 77, 78, 80, 83, 85, 89, 91, 127, 135, 139, 141, 170, 175, 179, 180, 181, 184, 198, 200, 213, 293, 323, 335, 341, 343, 345, 365, 400, 414, 419, 426, 432, 433, 434, 435, 436, 437, 438, 442, 446], "90": [18, 75, 446], "917152": 425, "92387953": 171, "92387953j": 171, "94": 89, "94591015": 71, "95": 175, "98": 201, "98024613": 198, "99": [191, 337], "99322285": 22, "99532227": 94, "996272": 425, "99822295": 24, "99853728": 94, "999": 90, "99959305": 94, "99989938": 94, "99997791": 94, "A": [11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 64, 66, 67, 71, 72, 73, 76, 77, 79, 80, 83, 85, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 164, 165, 166, 167, 171, 172, 173, 175, 177, 178, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 207, 209, 210, 213, 216, 217, 221, 223, 278, 283, 291, 310, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 341, 343, 360, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 390, 392, 394, 395, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 421, 424, 425, 426, 427, 429, 431, 433, 436, 438, 439, 442, 446, 447, 448], "AND": [14, 46, 47, 48, 49, 153, 194, 195, 196, 197], "And": [4, 39, 40, 77, 85, 278, 433, 436], "Be": 170, "Being": 3, "But": [4, 87], "By": [28, 29, 40, 70, 85, 139, 175, 187, 198, 201, 202, 204, 208, 214, 215, 218, 219, 220, 221, 222, 223, 224, 278, 390, 395, 400, 418, 431, 433, 436, 443], "For": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 291, 292, 293, 305, 307, 315, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456], "If": [4, 11, 12, 14, 15, 19, 20, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 56, 58, 70, 71, 72, 73, 76, 80, 81, 84, 85, 87, 89, 90, 97, 100, 101, 120, 121, 123, 136, 139, 141, 144, 145, 146, 150, 151, 152, 158, 159, 167, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 198, 199, 202, 204, 206, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 310, 312, 333, 336, 337, 341, 363, 385, 391, 393, 396, 400, 402, 403, 405, 412, 416, 417, 418, 420, 421, 423, 426, 427, 428, 429, 442, 443, 444, 445, 446, 456], "In": [4, 28, 29, 72, 73, 90, 141, 167, 172, 178, 181, 198, 216, 217, 219, 221, 223, 333, 336, 341, 385, 396, 420, 422, 439], "It": [4, 14, 19, 28, 29, 56, 72, 73, 82, 84, 120, 141, 171, 173, 201, 204, 214, 215, 216, 217, 218, 219, 220, 222, 224, 333, 418, 420, 443], "Its": [56, 185, 337, 428], "NOT": [47, 153, 194, 195, 196, 197], "No": [35, 89, 167], "Not": [14, 19, 155, 216, 217, 218, 220, 221, 223, 333], "OR": [19, 46, 47, 48, 49, 153, 194, 195, 196, 197], "On": 4, "One": [41, 42, 43, 70, 86, 87, 396], "Or": 141, "That": 200, "The": [3, 4, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 51, 53, 56, 57, 58, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 108, 116, 120, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 278, 283, 291, 292, 301, 305, 322, 323, 324, 325, 326, 327, 331, 332, 333, 335, 336, 337, 341, 344, 346, 347, 357, 362, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 427, 429, 431, 433, 434, 436, 437, 438, 439, 442, 443, 445, 446, 447, 448, 456, 460], "Then": [36, 38, 200], "There": 187, "These": [4, 87, 89, 90, 97, 200, 212, 433, 436, 456, 460], "To": 4, "With": [28, 29, 44, 179, 202, 208, 214, 215, 221, 223, 333, 420], "_": [0, 145, 417], "__array_interface__": 87, "__bool__": 456, "__dlpack__": 131, "__dlpack_device__": 131, "__eq__": [85, 87, 122, 341], "__ge__": [85, 87, 122, 341], "__getitem__": [85, 87, 122], "__gt__": [85, 87, 122, 341], "__iter__": 122, "__le__": [85, 87, 122, 341], "__len__": [85, 87], "__lt__": [85, 87, 122, 341], "__main__": 0, "__name__": 0, "__ne__": [85, 87, 122, 341], "__next__": 122, "__setitem__": [85, 122], "__sycl_usm_array_interface__": 37, "_dtypes_list": 0, "a1": 33, "a2": 33, "a_max": 56, "a_min": 56, "ab": [6, 12, 15], "abc": 89, "abcd": 90, "about": [36, 38, 85, 121, 170, 289, 456], "abov": [3, 71, 76, 79, 151, 181, 199, 393, 431, 432, 435], "absolut": [6, 11, 15, 18, 101, 182, 222, 224, 334, 418, 443], "accept": [30, 89, 341, 412, 433, 436], "access": [77, 78, 120, 200, 433, 436, 456], "accord": [14, 19, 44, 52, 87, 121, 170, 171, 172, 173, 199, 204, 219, 222, 224, 393, 398, 418, 443], "accordingli": [218, 220], "account": 396, "accumul": [71, 72, 73, 89, 144, 216, 217, 221, 223, 333, 420, 428], "accur": [87, 98, 141, 191, 193], "achiev": 89, "across": [80, 145, 216, 217, 221, 223], "activ": 4, "actual": [87, 144, 145, 167, 178], "ad": [15, 87, 90, 97, 169, 182, 460], "add": [6, 87], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [71, 167, 219], "address": 87, "advanc": 89, "advers": 89, "advis": 4, "affect": [20, 80, 89, 120, 144, 145], "after": [86, 120, 360, 400], "ag": 87, "against": [15, 28, 29, 50, 51, 56, 140, 179, 180, 202, 208, 214, 215, 221, 223, 333, 337, 420, 423], "ai": [3, 337, 423], "ai_max": 423, "ai_min": 423, "ainv": [174, 185], "algebra": [449, 460], "algorithm": [89, 90], "alia": [16, 17, 83, 121, 210, 225, 341, 371, 374, 376, 394, 403, 438, 445], "alias": 9, "align": 87, "all": [4, 6, 9, 15, 19, 33, 40, 44, 57, 68, 81, 85, 86, 87, 89, 90, 95, 96, 98, 100, 120, 123, 124, 125, 132, 133, 135, 139, 141, 146, 148, 167, 177, 180, 187, 198, 202, 208, 214, 215, 218, 220, 278, 281, 288, 301, 333, 343, 400, 403, 416, 420, 445, 456], "allclos": [6, 33, 154, 174, 180, 181, 183, 184, 186], "alloc": [3, 4, 20, 32, 34, 35, 36, 37, 38, 40, 44, 62, 71, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 158, 159, 187, 188, 198, 199, 200, 204, 207, 219, 222, 224, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 393, 416, 418, 431, 433, 436, 442, 443, 447, 448], "allow": [40, 85, 89, 144, 145, 200, 278, 307, 456], "alltru": 6, "almost": [170, 433], "along": [3, 4, 14, 16, 17, 19, 28, 29, 30, 44, 57, 58, 68, 71, 72, 73, 76, 77, 79, 80, 81, 85, 86, 88, 120, 123, 124, 125, 128, 129, 134, 139, 141, 146, 151, 179, 181, 185, 186, 187, 198, 199, 202, 203, 204, 205, 206, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 275, 276, 277, 284, 285, 295, 297, 302, 303, 314, 316, 318, 319, 321, 333, 335, 336, 337, 393, 395, 400, 401, 403, 412, 417, 418, 420, 422, 423, 426, 427, 428, 430, 433, 434, 436, 437, 443, 445, 456], "alpha": [342, 347, 348, 364, 367], "alreadi": [4, 35, 41, 42, 43, 328], "also": [3, 13, 18, 20, 26, 46, 48, 49, 63, 83, 87, 89, 93, 97, 127, 130, 134, 136, 141, 142, 143, 144, 147, 164, 165, 166, 167, 193, 200, 203, 209, 210, 212, 213, 323, 324, 332, 379, 394, 398, 419, 438, 456], "alter": 80, "altern": [3, 4, 14, 19, 72, 73, 84, 85, 201, 202, 204, 208, 216, 217, 219, 221, 222, 223, 224, 320, 333, 418, 420, 443], "although": [18, 87, 427], "alwai": [4, 30, 34, 40, 80, 85, 101, 171, 173, 222, 224, 278, 323, 396, 413, 418, 443], "amax": [6, 202], "ambigu": 456, "amin": [6, 208], "an": [0, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 164, 165, 166, 169, 172, 175, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 277, 278, 279, 280, 283, 293, 295, 301, 303, 306, 307, 310, 312, 313, 317, 318, 320, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 343, 348, 349, 351, 360, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 456], "anaconda": 3, "analyt": 3, "angl": [6, 25, 26, 74, 75, 339, 340, 441], "ani": [3, 6, 14, 15, 30, 32, 34, 35, 36, 37, 38, 40, 50, 51, 62, 76, 79, 81, 85, 87, 89, 90, 120, 137, 138, 139, 141, 145, 146, 176, 186, 187, 198, 200, 218, 220, 278, 341, 385, 412, 442, 456], "anoth": [4, 64, 85, 131, 283, 303, 336, 401], "answer": 343, "anti": [80, 120], "anyth": 87, "ap": 175, "api": [0, 2, 3, 6, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 87, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "appear": [97, 124, 125], "append": [0, 6, 81, 90, 97, 164], "appli": [28, 29, 30, 44, 52, 89, 397, 426], "applic": 87, "apply_along_axi": 6, "apply_over_ax": 6, "approach": 87, "appropri": [4, 28, 29, 140, 186, 214, 215, 218, 220, 341, 369, 372, 456], "approxim": 121, "ar": [3, 4, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 134, 139, 141, 142, 143, 144, 145, 147, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 300, 301, 322, 323, 324, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 366, 367, 369, 372, 373, 375, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 410, 412, 414, 415, 417, 418, 419, 420, 422, 424, 425, 426, 428, 430, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 456], "arang": [0, 6, 13, 28, 29, 41, 42, 43, 44, 45, 56, 63, 75, 76, 77, 78, 80, 83, 84, 85, 89, 93, 95, 96, 98, 123, 130, 138, 139, 141, 144, 151, 152, 163, 179, 187, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 206, 208, 210, 213, 286, 324, 327, 332, 336, 340, 365, 394, 397, 400, 419, 426, 428, 433, 434, 436, 437, 438, 446, 448], "arbitrari": [39, 84, 87, 89, 152, 201, 397, 433, 436], "arbitrarili": 89, "arc": [18, 25], "arcco": [6, 22, 23, 25, 26, 66], "arccosh": [6, 21, 24, 27, 67], "arcsin": [6, 21, 24, 25, 26, 410], "arcsinh": [6, 22, 23, 27, 411], "arctan": [6, 18, 21, 23, 26, 27, 424], "arctan2": [6, 18, 25], "arctanh": [6, 22, 24, 25, 26, 425], "arg": [50, 341], "arg1": [161, 162], "arg2": [161, 162], "argmax": [0, 6, 29, 85, 214, 337, 423, 456], "argmin": [6, 28, 85, 215, 423, 456], "argpartit": [6, 30, 456], "argsort": [6, 85, 405, 412, 423, 429, 456], "argument": [0, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 52, 53, 54, 56, 58, 63, 66, 67, 83, 84, 85, 87, 88, 90, 94, 95, 96, 98, 126, 127, 128, 129, 130, 147, 150, 153, 161, 162, 164, 178, 179, 190, 191, 192, 193, 200, 201, 203, 209, 210, 211, 213, 307, 320, 322, 331, 332, 334, 336, 392, 394, 397, 398, 399, 404, 408, 409, 410, 411, 417, 419, 424, 425, 426, 430, 438, 439, 456], "argwher": 6, "ari": [41, 42, 43], "arithmet": [44, 139, 204, 205, 219, 222, 224, 331, 418, 420, 443, 449, 460], "around": [6, 85, 139, 336, 402], "arr": [78, 87, 145, 338, 365, 434, 437], "arr2": 87, "arr_t": [40, 85, 278], "arra": 446, "arrai": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 109, 110, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 232, 275, 276, 277, 278, 279, 280, 283, 286, 287, 288, 289, 291, 292, 293, 294, 296, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 460], "array2str": 6, "array_equ": 6, "array_equiv": [6, 33], "array_lik": [32, 34, 35, 36, 37, 38, 39, 44, 62, 64, 76, 79, 137, 138, 139, 187, 198, 336, 337, 341, 407, 426, 442], "array_of_diagon": 80, "array_repr": 6, "array_split": [6, 58], "array_str": 6, "arrays_and_dtyp": 397, "asanyarrai": [6, 35, 38], "asarrai": [4, 6, 34, 36, 38, 39], "asarray_chkfinit": [6, 34, 35], "ascend": [171, 173, 405], "ascii": 87, "ascontiguousarrai": [6, 34, 35, 38], "asfarrai": [6, 34, 35], "asfortranarrai": [6, 34, 35, 36], "asmatrix": 6, "asnumpi": 85, "aspect": 87, "assembl": [58, 86, 146, 403, 417, 445], "assign": [85, 288, 433, 436], "associ": [44, 144, 145, 456], "assum": [44, 90, 177, 180, 184, 200], "astyp": [6, 85, 139, 323], "atleast_1d": [6, 42, 43, 97], "atleast_2d": [6, 41, 43, 97], "atleast_3d": [6, 41, 42, 97], "atol": [15, 154], "attain": 0, "attempt": [84, 178], "attribut": [85, 87, 92, 121, 138, 149, 181, 327, 448, 449], "automat": [144, 145], "avail": [2, 3, 4, 15, 65, 68, 69, 75, 87, 88, 94, 154, 205, 211, 214, 215, 218, 220, 221, 340, 430, 441, 449, 456], "averag": [6, 85, 204, 219, 296, 420, 460], "avg": 44, "avoid": [42, 43], "aweight": 69, "ax": [14, 19, 28, 29, 44, 71, 81, 84, 85, 89, 97, 103, 105, 106, 109, 110, 111, 114, 115, 117, 119, 123, 141, 152, 179, 183, 185, 186, 199, 201, 202, 204, 208, 212, 214, 215, 218, 219, 220, 221, 222, 223, 224, 310, 317, 320, 328, 333, 393, 400, 401, 416, 418, 420, 421, 426, 427, 428, 429, 443], "axi": [14, 16, 17, 19, 28, 29, 30, 44, 57, 58, 68, 70, 71, 72, 73, 80, 81, 85, 86, 88, 89, 97, 102, 107, 108, 112, 113, 116, 123, 124, 125, 128, 129, 134, 139, 141, 146, 151, 175, 179, 187, 198, 199, 201, 202, 203, 204, 205, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 277, 284, 285, 291, 295, 296, 297, 301, 302, 303, 306, 312, 313, 314, 316, 318, 320, 321, 329, 333, 335, 336, 337, 390, 393, 395, 396, 400, 401, 403, 412, 416, 417, 418, 420, 421, 422, 423, 426, 427, 428, 429, 430, 443, 445, 456], "axis1": [80, 85, 286, 317, 319, 421, 428], "axis2": [80, 85, 286, 317, 319, 421, 428], "axisa": 70, "axisb": 70, "axisc": 70, "axiserror": [30, 412], "b": [13, 15, 28, 29, 46, 49, 57, 58, 64, 70, 73, 84, 85, 86, 87, 88, 89, 90, 93, 132, 133, 142, 143, 146, 152, 163, 165, 166, 169, 175, 178, 179, 180, 182, 183, 184, 185, 186, 194, 196, 201, 202, 208, 324, 328, 332, 342, 397, 403, 417, 426, 427, 430, 444, 445], "back": [85, 134, 291, 390, 396, 401], "backend": [2, 140, 344, 346, 347, 357, 362, 378], "backward": [40, 85, 141, 278, 400, 401], "bad": 353, "bartlett": 6, "base": [0, 4, 87, 89, 96, 139, 144, 145, 184, 189, 190, 191, 192, 198, 201, 330, 332, 336, 338], "base_repr": 6, "basic": [52, 89, 456, 460], "batch": [103, 105, 109, 110, 114, 115, 117, 119], "bc": [169, 182], "bcde": 90, "becaus": [14, 19, 456], "becom": [85, 144, 320], "been": [86, 337, 401, 423], "befor": [4, 30, 58, 71, 85, 124, 125, 186, 199, 202, 208, 222, 224, 301, 312, 333, 393, 400, 401, 412, 418, 420, 427, 443, 444], "begin": [90, 139, 187, 198], "behav": [188, 336], "behavior": [85, 283, 427], "behind": [85, 301], "being": [3, 87], "belong": [82, 144], "below": [0, 4, 9, 76, 79, 87, 177, 431, 432, 435, 456], "best": 90, "beta": [6, 352], "between": [15, 20, 52, 81, 88, 121, 133, 136, 141, 152, 187, 198, 358, 372, 419, 441], "beyond": [4, 400], "bia": 69, "big": 87, "bin": [82, 144, 145, 379], "bin_edg": [144, 145], "binari": [46, 48, 49, 132, 133, 135, 136, 449, 460], "binary_repr": 6, "bincount": [6, 82, 144], "binomi": [6, 360], "bins_0": 145, "bins_1": 145, "bit": [46, 47, 48, 49, 87, 121, 149, 153, 164, 194, 196, 197, 221, 223, 398, 409, 460], "bitwis": [46, 48, 49], "bitwise_and": [6, 47, 48, 49, 153, 194], "bitwise_not": 6, "bitwise_or": [6, 46, 47, 49, 153, 196], "bitwise_xor": [6, 46, 47, 48, 153, 197], "biufcmmosuv": 87, "blackman": 6, "block": [6, 58, 86, 120, 146, 163, 403, 417, 445], "bmat": 6, "bool": [9, 14, 19, 28, 29, 32, 37, 40, 44, 52, 64, 71, 82, 85, 87, 90, 93, 102, 108, 116, 120, 139, 142, 143, 144, 155, 156, 157, 158, 159, 165, 166, 167, 177, 179, 180, 184, 187, 198, 199, 202, 204, 206, 208, 214, 215, 218, 219, 220, 221, 222, 223, 224, 278, 323, 324, 333, 393, 396, 409, 418, 420, 442, 443, 456], "bool_": 9, "boolean": [46, 47, 48, 49, 64, 71, 87, 151, 153, 154, 155, 156, 157, 158, 159, 194, 196, 199, 200, 204, 219, 221, 222, 224, 323, 393, 396, 418, 422, 443], "both": [13, 15, 26, 44, 46, 48, 49, 56, 63, 70, 83, 84, 93, 127, 128, 129, 130, 142, 143, 147, 152, 163, 164, 165, 166, 179, 193, 194, 196, 197, 201, 203, 209, 210, 213, 223, 324, 332, 394, 398, 419, 426, 428, 433, 436, 438, 444, 446], "bound": [336, 405, 422], "boundari": [141, 336], "briefli": 456, "broadcast": [13, 14, 19, 28, 29, 44, 50, 51, 56, 64, 83, 89, 128, 129, 147, 158, 159, 179, 180, 197, 199, 201, 202, 203, 204, 208, 209, 213, 214, 215, 219, 221, 222, 223, 224, 332, 333, 336, 337, 393, 395, 418, 419, 420, 423, 427, 438, 443, 446], "broadcast_arrai": [6, 51], "broadcast_shap": 6, "broadcast_to": [6, 50, 427], "buffer": [37, 72, 73, 85, 132, 133, 135, 136, 188, 202, 208, 216, 217, 396], "buffer_lik": 132, "build": 460, "build_loc": 4, "built": 87, "busday_count": 6, "busday_offset": 6, "byte": [6, 40, 85, 87, 89, 132, 133, 188, 278, 294, 298], "byte_bound": 6, "byteord": 87, "byteswap": 6, "bz2": 188, "c": [2, 4, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 70, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 126, 127, 130, 137, 138, 140, 142, 143, 147, 150, 152, 153, 155, 156, 157, 163, 164, 165, 166, 169, 175, 178, 179, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 209, 210, 213, 278, 283, 291, 304, 322, 323, 324, 326, 327, 331, 332, 334, 390, 392, 394, 396, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 426, 427, 438, 439, 446, 447, 448], "c_contigu": [36, 38, 85, 283], "ca": 61, "calcul": [11, 12, 13, 18, 26, 44, 71, 73, 81, 83, 88, 89, 93, 95, 96, 98, 126, 127, 128, 129, 130, 141, 145, 147, 170, 171, 172, 173, 175, 180, 191, 193, 199, 201, 204, 210, 213, 219, 222, 224, 324, 332, 333, 393, 394, 418, 419, 438, 443, 444, 449], "call": [18, 28, 29, 30, 36, 38, 87, 134, 170, 172, 178, 200, 232, 323, 416, 427], "callabl": [134, 200], "can": [0, 3, 4, 13, 15, 20, 26, 30, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 52, 62, 63, 70, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 100, 120, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 151, 152, 153, 163, 164, 165, 166, 167, 174, 175, 176, 186, 187, 188, 193, 194, 196, 197, 198, 200, 201, 203, 207, 209, 210, 213, 221, 223, 278, 312, 322, 323, 324, 325, 326, 327, 331, 332, 337, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 394, 396, 398, 412, 419, 422, 423, 426, 428, 431, 433, 436, 437, 438, 442, 444, 446, 447, 448, 456], "can_cast": [6, 460], "cannot": [58, 85, 214, 215, 310, 416, 417], "capabl": [20, 32, 34, 35, 36, 38, 44, 101, 139, 187, 198, 201], "care": [20, 170], "cartesian": 206, "case": [4, 14, 19, 20, 28, 29, 32, 34, 35, 36, 38, 44, 62, 72, 73, 76, 79, 81, 90, 91, 92, 100, 132, 133, 134, 135, 137, 138, 139, 141, 148, 170, 181, 184, 187, 188, 198, 207, 216, 217, 221, 223, 325, 326, 327, 333, 396, 420, 426, 431, 442, 447, 448, 456], "cast": [14, 19, 40, 52, 58, 64, 71, 72, 73, 85, 89, 146, 170, 199, 201, 204, 216, 217, 219, 221, 222, 223, 224, 278, 333, 393, 403, 417, 418, 420, 443, 445], "cat": [343, 360], "cauchi": 379, "cbrt": [6, 414], "cdef": 90, "cdot": 426, "cdoubl": 9, "ceil": [6, 31, 126, 127, 399, 402, 439], "center": [106, 111], "central": [141, 361, 362], "certain": [87, 200], "cfloat": 9, "chain": [84, 85, 89, 90], "chang": [40, 62, 70, 85, 87, 89, 216, 217, 278, 291, 315, 320, 322, 330, 331, 336, 337, 338, 390, 396, 401, 441, 460], "channel": 4, "char": 87, "charact": [87, 133], "check": [14, 19, 34, 35, 52, 167, 180, 183], "check_valid": 359, "chi": [345, 361], "chisquar": 6, "choic": [6, 55, 85, 171, 173, 279], "choicelist": 406, "choleski": 6, "choos": [6, 18, 25, 85, 90, 446, 456], "chosen": [144, 446], "circl": 182, "clamp": [336, 422], "clariti": 120, "class": [3, 85, 87, 88, 122, 132, 133, 134, 136, 151, 188, 341, 369, 431, 460], "classic": 89, "clear": [87, 456], "clip": [6, 85, 336, 422, 456], "close": [21, 22, 23, 25, 39, 40, 85, 89, 97, 187, 278, 341, 369, 399, 402], "closer": 439, "cloud": 3, "cmake": 4, "co": [6, 21, 67, 172, 410, 424], "code": [37, 87, 161], "coeffici": [175, 183, 186], "coerc": [37, 132, 133, 134, 135, 136, 188], "coin": 343, "col": 151, "collaps": [85, 291], "column": [6, 34, 35, 36, 38, 39, 40, 57, 58, 72, 73, 80, 85, 86, 100, 120, 124, 125, 141, 146, 148, 170, 171, 175, 178, 181, 184, 278, 390, 403, 417, 431, 433, 436, 442, 445], "column_stack": [6, 58, 86, 146, 403, 417, 445], "combin": [0, 87, 97, 141], "combinatori": 90, "comma": [87, 89], "command": 4, "common": [323, 426], "common_typ": 6, "compani": [343, 360], "compar": [15, 93, 145, 203, 209], "compare_chararrai": 6, "comparison": [2, 93, 142, 143, 165, 166, 324, 449, 460], "compat": [3, 14, 19, 40, 44, 85, 199, 204, 218, 219, 220, 222, 224, 278, 393, 396, 418, 443, 460], "compil": [4, 87, 140], "complement": 441, "complementari": 127, "complet": [3, 4, 90, 133, 134, 181, 401, 456], "complex": [9, 11, 12, 18, 25, 26, 52, 71, 84, 85, 87, 90, 94, 101, 121, 150, 170, 171, 172, 173, 181, 182, 184, 199, 201, 222, 224, 281, 282, 334, 391, 393, 413, 418, 443, 444, 456, 460], "complex128": [9, 44, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 397], "complex64": [9, 44, 102, 108], "compliant": 85, "complic": 89, "compon": [106, 111, 121, 150, 391], "compos": 63, "composit": [163, 420, 430], "compress": [6, 422, 456], "comput": [4, 18, 21, 22, 23, 24, 25, 26, 27, 31, 44, 46, 47, 48, 49, 53, 59, 60, 66, 67, 71, 72, 73, 81, 82, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 126, 141, 142, 143, 144, 145, 150, 151, 153, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 204, 205, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 322, 331, 334, 391, 392, 393, 394, 399, 402, 404, 408, 409, 410, 411, 414, 418, 420, 424, 425, 426, 433, 436, 443], "compute_uv": [168, 184], "concaten": [6, 57, 86, 146, 403, 417, 423, 445], "concept": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448, 456], "cond": [6, 174], "condit": [40, 84, 85, 99, 168, 174, 178, 278, 323, 330, 336, 338, 406, 446], "condlist": 406, "confus": 130, "conj": [6, 60, 85, 150, 167, 170, 334], "conjug": [6, 59, 84, 85, 150, 167, 170, 171, 172, 173, 201, 281, 334, 444], "consecut": [81, 88, 141], "conserv": 206, "consid": [20, 32, 34, 35, 36, 38, 90, 139, 155, 171, 173, 177, 187, 198, 201, 341, 369], "consist": [33, 133, 145, 186, 187, 423, 426], "constant": [9, 87, 141], "constraint": 44, "construct": [34, 35, 55, 76, 79, 80, 85, 87, 100, 132, 133, 134, 135, 136, 148, 188, 207, 279, 325, 395, 427, 428, 446, 449], "constructor": 456, "consum": [85, 298], "contain": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 59, 60, 63, 64, 66, 67, 70, 71, 80, 83, 85, 87, 93, 95, 96, 98, 126, 127, 130, 131, 136, 140, 141, 142, 143, 144, 145, 147, 150, 151, 153, 164, 165, 166, 171, 181, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 209, 210, 213, 214, 215, 218, 219, 220, 222, 224, 307, 322, 323, 324, 331, 332, 334, 341, 391, 392, 393, 394, 398, 399, 402, 404, 408, 409, 410, 411, 414, 415, 418, 419, 424, 425, 429, 433, 434, 436, 437, 438, 439, 443, 456], "content": [36, 85, 378], "contigu": [34, 35, 36, 38, 84, 85, 89, 178, 304, 390, 396], "continu": [341, 373], "contourf": 206, "contract": [89, 90, 426], "contrast": 336, "contribut": [44, 144, 145], "control": [4, 40, 52, 58, 64, 85, 89, 146, 201, 278, 403, 417, 445], "conveni": [85, 320, 341], "convent": [84, 89, 90, 152, 186, 201, 328, 426], "convers": [40, 85, 89, 278, 449], "convert": [28, 29, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 62, 74, 75, 76, 79, 87, 90, 97, 137, 138, 139, 187, 198, 339, 340, 441, 442], "convolut": [61, 65], "convolv": [6, 65], "coordin": [68, 134, 141, 206], "copi": [6, 20, 30, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 64, 76, 77, 79, 80, 85, 87, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 206, 207, 232, 278, 291, 293, 301, 307, 310, 325, 326, 327, 329, 331, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 396, 405, 412, 416, 431, 432, 433, 435, 436, 442, 447, 448, 456], "copysign": [6, 322, 331], "copyto": [6, 85, 283], "core": [3, 87, 89, 456], "corrcoef": [6, 69], "correct": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 46, 47, 48, 49, 53, 54, 58, 59, 60, 63, 66, 67, 83, 93, 95, 96, 98, 101, 126, 127, 130, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 209, 210, 213, 322, 324, 331, 332, 334, 392, 394, 398, 399, 402, 404, 408, 409, 410, 411, 414, 415, 417, 419, 424, 425, 438, 439], "correctli": [18, 25, 28, 29, 179, 202, 208, 214, 215, 221, 223, 323, 333, 420], "correl": [6, 460], "correspond": [6, 20, 28, 29, 32, 34, 35, 36, 37, 38, 40, 56, 58, 62, 76, 77, 79, 80, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 141, 148, 151, 170, 171, 187, 188, 198, 200, 201, 207, 278, 287, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 400, 407, 418, 426, 429, 431, 433, 436, 442, 443, 447, 448, 456], "cosh": [6, 22, 66, 411, 425], "cosin": [21, 22, 23, 24, 25, 26, 27, 66, 67, 410, 411, 424, 425], "cost": [89, 90], "costli": 90, "could": [85, 312], "count": [14, 19, 45, 68, 82, 87, 90, 123, 132, 133, 135, 136, 141, 144, 145, 323, 333, 343, 420, 449, 460], "count_nonzero": [6, 323], "counterpart": 456, "cov": [6, 359], "covari": 69, "cover": [433, 436, 460], "cpu": [4, 15, 20, 32, 34, 35, 36, 38, 62, 65, 69, 76, 79, 88, 91, 92, 94, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 128, 129, 132, 133, 134, 135, 137, 138, 139, 148, 154, 187, 188, 198, 205, 207, 211, 221, 325, 326, 327, 330, 422, 430, 431, 442, 447, 448], "creat": [3, 4, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 78, 79, 80, 85, 87, 90, 91, 92, 100, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 283, 325, 326, 327, 337, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 428, 431, 433, 434, 436, 437, 442, 447, 448, 456, 460], "creation": [87, 90, 449, 456, 460], "cross": [6, 65], "csingl": 9, "cube": [53, 414], "cubic": 90, "cumprod": [6, 85, 216, 456], "cumproduct": 6, "cumsum": [6, 81, 85, 217, 420, 456], "cumul": [71, 72, 73, 81, 85, 216, 217, 284, 285, 420], "cupi": [2, 449], "current": [11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 63, 66, 67, 83, 87, 88, 90, 95, 96, 98, 126, 127, 128, 129, 130, 133, 145, 147, 148, 153, 164, 190, 191, 192, 193, 203, 209, 210, 211, 213, 322, 331, 332, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 419, 424, 425, 430, 438, 439], "custom": 456, "cut": 175, "cutoff": 180, "cyclic": 336, "cython": 4, "d": [0, 14, 19, 20, 44, 57, 58, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 100, 103, 104, 105, 109, 110, 114, 115, 117, 118, 119, 120, 124, 125, 136, 146, 148, 152, 169, 171, 172, 178, 179, 182, 201, 206, 216, 217, 223, 291, 323, 332, 333, 336, 346, 390, 396, 403, 405, 407, 417, 420, 422, 426, 427, 428, 442, 445, 456], "d0": [341, 368, 370], "d1": [341, 370], "d3": 77, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 209, 210, 211, 213, 214, 215, 218, 219, 220, 221, 222, 224, 278, 307, 320, 322, 324, 326, 327, 331, 332, 334, 336, 337, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 428, 430, 431, 438, 439, 441, 443, 445, 446, 447, 448, 449, 460], "datatyp": [87, 177], "date": 4, "datetim": 87, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [69, 85, 222, 224, 314, 321, 418, 443], "decai": 354, "decim": [31, 85, 121, 308, 399, 402], "decomposit": [167, 174, 177, 180, 184, 460], "decompress": 188, "decreas": 82, "def": 0, "default": [3, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 108, 120, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 171, 173, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 283, 291, 322, 324, 325, 326, 327, 329, 331, 332, 333, 334, 336, 341, 345, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 382, 385, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 422, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 448, 456], "default_rng": 6, "defg": 90, "defici": 177, "defin": [70, 87, 92, 138, 144, 145, 327, 331, 448, 456], "definit": [70, 126, 167], "deg": [18, 340], "deg2rad": [6, 339, 340, 441], "degre": [6, 18, 74, 222, 224, 339, 340, 383, 418, 441, 443], "delet": 6, "delta": [222, 224, 418, 441, 443], "demonstr": [0, 4, 87], "dens": [151, 207], "densiti": 144, "depend": [4, 80, 101, 171, 175, 181, 183, 184, 187, 221, 223, 406, 446], "deprec": 6, "deprecate_with_doc": 6, "depth": [57, 58, 86, 146, 403, 417, 445], "deriv": 141, "descend": 184, "descr": 87, "describ": [71, 87, 199, 393, 460], "descript": [71, 87, 144, 199, 393, 456], "desir": [20, 32, 34, 35, 36, 38, 39, 51, 91, 92, 100, 137, 138, 139, 148, 187, 198, 326, 327, 427, 431, 447, 448], "destin": [58, 146, 212, 336, 337, 403, 417, 423, 445], "det": [6, 182], "detail": [31, 131, 402, 433, 434, 436, 437, 456], "determin": [13, 18, 21, 22, 23, 24, 25, 26, 27, 46, 48, 49, 53, 63, 66, 67, 83, 95, 96, 98, 127, 130, 133, 134, 136, 147, 162, 164, 169, 175, 181, 182, 189, 190, 191, 192, 193, 201, 203, 209, 210, 213, 332, 392, 394, 398, 404, 408, 410, 411, 414, 415, 419, 424, 425, 428, 438, 439], "devel": 4, "develop": [3, 4], "deviat": [85, 204, 219, 222, 224, 314, 341, 356, 363, 418, 443], "devic": [0, 2, 3, 20, 32, 34, 35, 36, 37, 38, 40, 44, 62, 71, 76, 77, 79, 85, 91, 92, 100, 101, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 199, 200, 201, 204, 207, 219, 222, 224, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 393, 416, 418, 431, 433, 436, 442, 443, 447, 448], "df": [345, 361, 383, 384], "dfden": [349, 362], "dfnum": [349, 362], "di": [77, 78], "diag": [6, 79, 80, 89, 100, 124, 125, 148, 170, 172, 184, 428], "diag_indic": [6, 78, 120], "diag_indices_from": [6, 77, 120], "diagflat": [6, 76, 80, 428], "diagon": [6, 76, 77, 78, 79, 85, 89, 100, 120, 148, 167, 171, 172, 173, 200, 319, 428, 431, 432, 433, 434, 435, 436, 437, 456], "dice": 358, "dictionari": 87, "diff": [6, 73, 88, 141, 144], "differ": [3, 15, 20, 32, 34, 35, 36, 38, 44, 62, 71, 73, 76, 79, 81, 85, 87, 88, 91, 92, 100, 121, 124, 125, 132, 133, 134, 135, 137, 138, 139, 141, 148, 173, 187, 188, 198, 199, 201, 207, 283, 325, 326, 327, 332, 393, 419, 431, 433, 436, 442, 447, 448, 460], "digit": [6, 121, 144], "dim": 15, "dimens": [14, 19, 28, 29, 32, 41, 42, 43, 44, 57, 58, 64, 69, 70, 77, 80, 81, 85, 87, 97, 124, 125, 141, 146, 151, 152, 177, 179, 181, 199, 202, 204, 206, 207, 208, 212, 214, 215, 218, 219, 220, 221, 222, 223, 224, 291, 299, 310, 323, 325, 333, 337, 341, 371, 373, 374, 376, 393, 396, 407, 416, 417, 418, 420, 421, 423, 427, 428, 433, 434, 436, 437, 443, 456, 460], "dimension": [2, 4, 30, 61, 65, 68, 71, 77, 78, 79, 80, 81, 82, 85, 89, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 132, 133, 135, 141, 175, 181, 185, 186, 199, 202, 206, 207, 208, 214, 215, 218, 220, 222, 224, 313, 325, 328, 333, 393, 412, 418, 420, 427, 443, 444, 449], "direct": [70, 81, 124, 125, 141], "directli": [87, 134, 151, 198, 323, 423], "directori": 140, "dirichlet": 6, "discard": 439, "discret": [3, 61, 65, 73, 81, 88, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 141, 341, 449], "disp": 6, "dispers": 386, "displac": [85, 315], "distanc": 141, "distinguish": 87, "distribut": [3, 4, 198, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 460], "divid": [6, 86, 127, 130, 210, 394, 438], "divis": [83, 127, 128, 129, 130, 210, 332, 394, 438, 439], "divisor": [222, 224, 418, 443], "divmod": [6, 456], "dlpack": 131, "dmlc": 131, "dn": [341, 368, 370], "do": [3, 4, 87, 200, 343, 401], "docstr": 456, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 291, 292, 293, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456], "doe": [20, 52, 101, 181, 216, 217], "done": [3, 40, 85, 89, 186, 278], "dot": [6, 85, 89, 90, 152, 167, 172, 174, 178, 180, 181, 183, 184, 185, 186, 201, 426, 444], "doubl": [9, 354, 426], "down": 125, "dp": [83, 169, 171, 182, 183, 332, 396, 397, 407, 419, 438], "dparrai": 461, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 15, 20, 32, 34, 35, 36, 37, 38, 40, 62, 68, 76, 77, 79, 85, 91, 92, 99, 100, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 214, 215, 218, 220, 221, 278, 325, 326, 327, 330, 335, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 422, 431, 433, 436, 442, 447, 448], "dpnp": [0, 2, 3, 4, 449, 456, 460, 461, 464], "dpnp_arrai": [20, 32, 34, 35, 36, 38, 40, 62, 76, 77, 79, 91, 92, 100, 120, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 149, 151, 187, 188, 198, 200, 207, 225, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448, 449], "dpnp_iface_arraycr": [207, 325], "draw": [341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "drawn": [341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 366, 367, 369, 372, 375, 381, 382, 383, 384, 385, 386, 387, 388, 389, 406], "drill": [343, 360], "driver": 2, "drop": [3, 87], "dsplit": [6, 58, 86], "dst": 64, "dstack": [6, 57, 58, 146, 403, 417, 445], "dt": 87, "dt2": 87, "dtype": [0, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 52, 53, 54, 58, 59, 60, 63, 66, 67, 69, 71, 72, 73, 77, 83, 85, 89, 91, 92, 93, 95, 96, 98, 100, 101, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 164, 165, 166, 178, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 284, 285, 296, 302, 314, 316, 319, 321, 322, 324, 326, 327, 331, 332, 333, 334, 341, 363, 369, 385, 392, 393, 394, 397, 398, 399, 402, 403, 404, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 428, 431, 432, 435, 438, 439, 443, 445, 447, 448, 456], "dump": 6, "dx": [141, 430], "dy": 141, "dz": 141, "e": [9, 22, 24, 71, 72, 80, 87, 91, 92, 97, 100, 133, 137, 138, 141, 148, 164, 170, 182, 185, 189, 326, 327, 341, 421, 431, 447, 448], "ea": 90, "each": [0, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 63, 66, 67, 72, 73, 77, 80, 82, 83, 85, 87, 90, 93, 95, 96, 98, 124, 125, 126, 127, 130, 134, 141, 142, 143, 144, 145, 150, 153, 155, 156, 157, 164, 165, 166, 170, 171, 172, 173, 175, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 210, 212, 213, 308, 310, 322, 323, 324, 331, 332, 334, 337, 343, 360, 391, 392, 394, 395, 398, 399, 400, 402, 404, 408, 409, 410, 411, 414, 415, 417, 419, 423, 424, 425, 427, 433, 434, 436, 437, 438, 439, 456], "easiest": 4, "easili": [0, 145], "edg": [56, 82, 144, 145], "edge_ord": 141, "ediff1d": [6, 81, 141], "effect": [90, 332], "effici": [133, 177, 180, 184], "efgh": 90, "eig": [6, 171, 172, 173], "eigenvalu": [170, 171, 172, 173, 460], "eigenvector": [170, 171, 172, 173], "eigh": [6, 170, 172, 173], "eigval": [6, 170, 171, 173], "eigvalsh": [6, 170, 171, 172], "einstein": [84, 89, 90, 152, 186, 201, 328, 426], "einsum": [6, 84, 90, 152, 186, 201, 328, 426], "einsum_path": [6, 89], "either": [15, 38, 44, 68, 71, 80, 87, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 128, 129, 141, 152, 154, 171, 173, 179, 181, 199, 214, 215, 218, 220, 221, 223, 330, 393, 405, 422, 423], "element": [4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 44, 45, 46, 47, 48, 49, 53, 54, 56, 59, 60, 63, 64, 66, 67, 71, 72, 73, 78, 80, 81, 82, 83, 85, 87, 88, 90, 93, 95, 96, 98, 99, 100, 101, 120, 123, 124, 125, 126, 127, 128, 129, 130, 136, 141, 142, 143, 144, 145, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 172, 176, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 273, 274, 281, 282, 284, 285, 287, 288, 291, 293, 294, 296, 298, 300, 301, 306, 307, 308, 309, 311, 314, 315, 318, 321, 322, 323, 324, 330, 331, 332, 333, 334, 336, 338, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 422, 424, 425, 426, 427, 428, 432, 434, 435, 437, 438, 439, 440, 443, 446, 456, 460, 464], "ellipsi": 89, "els": [0, 182, 230], "elsewher": [100, 148, 431, 446], "empti": [4, 6, 32, 85, 92, 133, 137, 138, 175, 288, 326, 327, 447, 448], "empty_lik": [6, 32, 91, 138, 327, 448], "enabl": [120, 177, 180, 184], "encount": [216, 217, 218, 220], "end": [20, 80, 87, 90, 139, 187, 198], "end_tim": 0, "endian": 87, "endpoint": [20, 139, 187, 198], "engin": 377, "enough": 144, "entir": [44, 71, 144, 145, 199, 204, 218, 219, 220, 222, 224, 393, 418, 443], "entri": [85, 87, 91, 120, 123, 124, 125, 313, 416], "env": 4, "environ": 4, "ep": [121, 177], "epsilon": 177, "epsneg": 121, "equal": [6, 14, 15, 19, 33, 44, 58, 65, 69, 73, 85, 100, 139, 141, 142, 143, 144, 145, 146, 154, 161, 164, 165, 166, 176, 180, 181, 186, 187, 198, 210, 301, 324, 341, 351, 385, 394, 398, 399, 402, 403, 408, 416, 417, 431, 433, 436, 445], "equal_nan": [33, 154], "equat": [175, 183, 185, 186, 460], "equiv": [40, 52, 58, 64, 85, 89, 146, 176, 201, 278, 403, 417, 445], "equival": [13, 14, 16, 17, 19, 28, 29, 30, 31, 44, 62, 70, 71, 83, 84, 85, 86, 90, 97, 130, 185, 199, 210, 213, 232, 273, 274, 286, 307, 320, 323, 328, 331, 340, 341, 369, 393, 394, 396, 402, 407, 412, 419, 420, 426, 429, 438, 456], "error": [71, 94, 170, 199, 393, 416, 449, 456], "essenti": 4, "estim": [69, 145, 343, 360], "etc": [87, 360], "euclidean": 175, "euler_gamma": 9, "evalu": [14, 15, 19, 85, 89, 90, 93, 186, 206, 273, 274, 328, 426, 456], "even": [87, 399, 402], "evenli": [20, 139, 187, 198, 399], "everi": [337, 423], "exact": 178, "exactli": [39, 74, 136, 339, 341, 369], "examin": 175, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 283, 286, 288, 291, 292, 293, 301, 305, 307, 312, 315, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "except": [4, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 66, 67, 68, 81, 82, 83, 84, 85, 91, 92, 93, 95, 96, 98, 100, 102, 108, 116, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 146, 147, 148, 153, 155, 156, 157, 164, 165, 166, 178, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 208, 209, 210, 213, 218, 219, 220, 221, 222, 223, 224, 278, 310, 322, 324, 326, 327, 331, 332, 333, 334, 392, 394, 395, 396, 398, 399, 404, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 424, 425, 438, 439, 443, 447, 448], "exclud": [11, 12, 187, 341, 385], "exclus": [341, 369], "execut": [3, 4, 15, 34, 35, 65, 69, 88, 94, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 128, 129, 134, 154, 205, 211, 221, 330, 344, 346, 347, 357, 362, 378, 422, 430], "executor": 0, "exist": [57, 58, 86, 87, 97, 146, 396, 403, 417, 445, 460], "exp": [6, 96, 98, 182, 191, 193, 199], "exp2": [6, 95, 98], "expand": [81, 97], "expand_dim": [6, 28, 29], "expect": [4, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 46, 47, 48, 49, 53, 54, 59, 60, 63, 66, 67, 71, 72, 73, 83, 84, 87, 93, 95, 96, 98, 101, 126, 127, 130, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 208, 209, 210, 213, 216, 217, 219, 221, 222, 223, 224, 322, 324, 331, 332, 333, 334, 391, 392, 393, 394, 398, 399, 402, 404, 408, 409, 410, 411, 414, 415, 418, 419, 420, 424, 425, 438, 439, 443, 446], "explain": 456, "explan": 87, "explicit": 89, "explicitli": 80, "explor": [90, 343, 360], "expm1": [6, 95, 96, 191], "expon": [95, 96, 98, 176, 193, 199, 332, 367, 460], "exponenti": [6, 90, 193, 199, 354, 380], "expos": [132, 456], "express": [26, 89, 90, 188], "extend": [87, 163, 456], "extens": [0, 1, 3, 4, 9, 140, 188, 449], "extobj": 201, "extra": [87, 136], "extract": [6, 76, 79, 80, 89, 100, 148, 151, 200, 428], "extrema": 460, "ey": [6, 59, 60, 68, 85, 128, 129, 148, 152, 163, 174, 176, 177, 185, 186, 197, 203, 209, 407, 428], "f": [0, 6, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 83, 85, 87, 89, 91, 92, 93, 95, 96, 98, 100, 101, 126, 127, 130, 137, 138, 141, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 176, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 209, 210, 213, 278, 283, 291, 322, 324, 326, 327, 331, 332, 334, 362, 390, 392, 394, 396, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 438, 439, 446, 447, 448], "f0": 87, "f1": 87, "f2": 87, "f4": 52, "f8": [52, 87], "f_contigu": [36, 38], "fab": [6, 11, 12], "fact": 172, "factor": [167, 181], "fail": 343, "fallback": [170, 172, 344, 346, 347, 357, 362, 378], "fals": [14, 15, 16, 17, 18, 19, 28, 29, 32, 33, 36, 38, 40, 44, 46, 47, 49, 50, 51, 52, 62, 68, 69, 71, 73, 82, 85, 87, 89, 90, 92, 93, 120, 134, 138, 139, 142, 143, 144, 151, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 177, 179, 180, 184, 187, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 208, 214, 215, 218, 219, 220, 221, 222, 223, 224, 230, 273, 274, 275, 276, 278, 295, 296, 297, 302, 314, 316, 321, 323, 324, 327, 333, 335, 393, 396, 409, 418, 420, 442, 443, 446, 448, 456], "fanci": 422, "fashion": 456, "fastcopyandtranspos": 6, "fastest": [85, 291, 390, 396], "fb": 90, "featur": 87, "few": 120, "fft": [6, 449, 460], "fft2": 6, "fftfreq": 6, "fftn": 6, "fftshift": 6, "fh": 133, "field": [87, 206], "field1": 87, "file": [132, 133, 135, 136, 140, 188], "filenam": [133, 188], "fill": [6, 32, 85, 91, 92, 120, 137, 138, 144, 145, 206, 283, 326, 327, 422, 431, 447, 448], "fill_diagon": 6, "fill_valu": [137, 138], "filter": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "final": [4, 139, 198], "find": [45, 82, 85, 101, 144, 177, 180, 184, 309, 323, 405, 412, 440, 460], "find_common_typ": 6, "fine": 4, "finfo_object": 121, "finit": [155, 156, 157, 158, 159], "first": [13, 14, 19, 26, 28, 29, 30, 44, 46, 48, 49, 57, 58, 63, 70, 71, 80, 83, 84, 85, 87, 90, 93, 96, 123, 127, 130, 141, 142, 143, 144, 145, 147, 152, 161, 162, 163, 164, 165, 166, 178, 185, 188, 193, 194, 196, 197, 200, 201, 202, 203, 206, 208, 209, 210, 213, 214, 215, 291, 324, 328, 332, 333, 390, 394, 396, 398, 400, 403, 405, 412, 413, 415, 419, 420, 421, 423, 426, 428, 438, 444, 445], "fit": [175, 395], "fix": [6, 80, 87, 336], "flag": [36, 38, 85, 87, 283], "flat": [28, 29, 85, 122, 291, 395], "flatnonzero": [6, 323], "flatten": [6, 28, 29, 30, 58, 72, 73, 76, 79, 80, 85, 120, 144, 145, 202, 208, 214, 215, 216, 217, 221, 223, 290, 304, 312, 323, 328, 337, 390, 395, 400, 412, 423, 428, 444], "flexibl": [84, 87, 133, 178], "flip": [6, 47, 80, 120, 124, 125, 153, 343], "fliplr": [6, 80, 120, 123, 125], "flipud": [6, 80, 120, 123, 124], "float": [9, 11, 12, 15, 18, 20, 26, 34, 35, 37, 44, 52, 63, 71, 73, 87, 91, 92, 96, 100, 101, 121, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 148, 150, 175, 176, 177, 179, 180, 187, 188, 193, 198, 199, 202, 204, 208, 219, 222, 224, 326, 327, 341, 345, 370, 371, 373, 374, 376, 379, 380, 382, 385, 391, 392, 393, 404, 418, 431, 443, 447, 448, 456, 460], "float16": 9, "float32": [0, 37, 40, 52, 72, 85, 87, 89, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 278, 341, 363, 368, 370, 371, 373, 374, 376, 382, 385, 397], "float64": [0, 37, 40, 44, 52, 73, 85, 87, 89, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 278, 341, 342, 348, 349, 350, 352, 354, 355, 356, 363, 364, 367, 368, 370, 371, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 431], "float_": 9, "float_pow": 6, "floor": [6, 31, 54, 127, 210, 394, 399, 402, 439], "floor_divid": [6, 210, 394], "flop": 90, "flush": 133, "fmax": [6, 129, 202, 203, 209, 218, 332], "fmin": [6, 128, 203, 208, 209, 220, 332], "fmod": [6, 128, 129, 210, 332, 394], "fn": 134, "fname": 188, "follow": [4, 44, 87, 97, 121, 149, 171, 173, 180, 426, 456, 460], "forc": [87, 89], "forg": 4, "form": [32, 34, 35, 36, 37, 38, 57, 62, 76, 79, 85, 86, 89, 90, 137, 138, 139, 187, 198, 320, 403, 442, 445], "format": [87, 133, 136, 460], "format_float_posit": 6, "format_float_scientif": 6, "forth": 426, "fortran": [38, 40, 85, 278, 291, 390, 396], "forward": 141, "found": [4, 405, 456], "four": [341, 370], "fourier": [102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 449], "fraction": [211, 439], "free": [85, 307], "freedom": [222, 224, 383, 418, 443], "frequenc": [104, 106, 111, 118], "freshli": [158, 159], "frexp": 6, "fro": [168, 179], "frobeniu": 168, "from": [3, 14, 19, 28, 29, 30, 34, 35, 50, 52, 55, 58, 64, 71, 74, 75, 80, 85, 86, 87, 89, 96, 99, 123, 131, 132, 133, 134, 135, 136, 141, 144, 146, 170, 172, 173, 177, 178, 188, 199, 206, 279, 283, 313, 318, 333, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 396, 397, 403, 405, 406, 415, 416, 417, 420, 422, 423, 428, 437, 441, 442, 445, 446, 460], "from_": 52, "from_dlpack": 6, "frombuff": [6, 133, 135, 136, 188], "fromfil": [6, 132, 135, 136], "fromfunct": [6, 34, 35], "fromit": [6, 34, 35, 132, 133, 136], "frompyfunc": 6, "fromregex": [6, 188], "fromstr": [6, 132, 133, 135, 188], "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 291, 292, 293, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448], "full_lik": [6, 32, 92, 137, 327, 448], "full_matric": 184, "fulli": 87, "function": [0, 2, 3, 11, 12, 15, 16, 17, 20, 28, 29, 31, 32, 34, 35, 36, 38, 39, 62, 65, 69, 71, 74, 80, 83, 85, 88, 89, 91, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 145, 148, 154, 170, 172, 178, 188, 191, 193, 199, 200, 205, 206, 210, 211, 221, 273, 274, 283, 286, 307, 320, 326, 327, 330, 339, 340, 341, 344, 346, 347, 357, 362, 378, 393, 394, 402, 403, 408, 418, 422, 423, 427, 430, 433, 434, 436, 437, 438, 443, 445, 446, 447, 448, 449, 456, 460], "fundament": 87, "further": [433, 436], "futur": [87, 145], "fweight": 69, "g": [4, 87, 91, 92, 100, 137, 138, 148, 326, 327, 341, 431, 447, 448], "gamma": [6, 381], "gaussian": [341, 363, 387], "gc": 90, "gcd": 6, "gen": 89, "gender": 87, "gener": [30, 44, 87, 139, 152, 170, 171, 172, 173, 180, 181, 188, 198, 341, 343, 346, 377, 433, 436, 442, 456, 460], "genfromtxt": [6, 188], "geometr": [6, 139, 187], "geomspac": [6, 187, 198], "get": [78, 85, 139, 187, 198, 200, 423, 434, 437, 456], "get_arrai": 85, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 341], "get_sycl_devic": 341, "get_sycl_queu": 341, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 87], "gf50cd035f1": 6, "gid": 145, "github": 131, "give": [79, 85, 145, 320, 396, 407], "given": [14, 15, 19, 20, 28, 29, 31, 32, 34, 35, 36, 38, 40, 44, 57, 62, 68, 69, 72, 73, 81, 84, 85, 86, 87, 88, 90, 91, 92, 120, 123, 128, 129, 137, 138, 139, 141, 144, 145, 174, 187, 198, 200, 202, 203, 206, 208, 209, 216, 217, 218, 220, 221, 222, 223, 224, 275, 276, 278, 284, 285, 297, 302, 303, 308, 314, 316, 321, 323, 326, 327, 333, 335, 336, 341, 346, 368, 385, 393, 395, 399, 400, 401, 403, 405, 418, 420, 426, 427, 430, 431, 443, 445, 447, 448, 456], "global": 0, "good": 353, "gpu": [0, 3, 4, 20, 32, 34, 35, 36, 38, 62, 76, 79, 91, 92, 100, 132, 133, 134, 135, 137, 138, 139, 148, 187, 188, 198, 207, 325, 326, 327, 431, 442, 447, 448], "grade": 87, "gradient": [6, 81, 175], "graphic": 4, "greater": [6, 85, 93, 127, 143, 164, 165, 166, 177, 181, 301, 324, 398, 408, 416], "greater_equ": [6, 93, 142, 165, 166, 324], "greatest": 127, "greedi": [89, 90], "grid": [34, 35, 134, 151, 206, 207, 325], "guarante": [87, 396], "guid": [2, 3], "gumbel": 6, "gz": 188, "h": [140, 167, 181, 206], "ha": [4, 11, 12, 14, 18, 19, 28, 29, 30, 44, 71, 72, 73, 82, 87, 93, 97, 107, 112, 134, 141, 142, 143, 146, 150, 165, 166, 172, 182, 184, 199, 204, 210, 216, 217, 219, 221, 222, 223, 224, 324, 333, 391, 392, 393, 394, 395, 401, 404, 416, 417, 418, 420, 421, 427, 428, 443, 456], "had": [337, 423], "hadamard": 90, "half": [22, 187, 341, 371, 373, 374, 376, 385, 421], "ham": 6, "han": 6, "hand": [70, 186], "handl": [20, 87, 101, 188, 323, 422, 460], "happen": [40, 44, 85, 278, 343], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 87, "have": [3, 4, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 57, 58, 59, 60, 63, 66, 67, 70, 71, 72, 73, 83, 84, 86, 87, 93, 95, 96, 98, 101, 121, 126, 127, 130, 142, 143, 146, 147, 150, 153, 155, 156, 157, 158, 159, 164, 165, 166, 175, 178, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 203, 204, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 322, 324, 331, 332, 333, 334, 360, 391, 392, 393, 394, 398, 399, 402, 403, 404, 408, 409, 410, 411, 414, 415, 417, 418, 419, 420, 424, 425, 427, 438, 439, 443, 445, 456], "hd": 90, "header": 140, "heavisid": 6, "hello": 87, "helper": 460, "henc": [97, 141], "here": [6, 30, 87, 412, 433, 436], "hermit": [171, 173], "hermitian": [107, 112, 167, 170, 171, 172, 173, 177, 180, 184, 460], "hfft": 6, "hierarchi": 161, "high": [341, 369, 372, 385], "higher": [89, 444], "highli": 133, "hist": [144, 379], "hist_0": 145, "hist_1": 145, "histogram": [6, 82, 145, 405, 460], "histogram2d": 6, "histogram_bin_edg": [6, 144], "histogramdd": [6, 144], "hold": [56, 72, 73, 144, 179, 216, 217, 221, 223, 428], "homogen": 87, "horizont": [57, 58, 80, 86, 120, 123, 146, 403, 417, 445], "host": [3, 4, 20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 431, 433, 436, 442, 447, 448], "household": 181, "how": [0, 4, 87, 141, 336, 422, 433, 436], "howev": [85, 312], "hsplit": [6, 58], "hstack": [6, 57, 58, 86, 403, 417, 445], "http": [4, 131], "hyperbol": [21, 22, 23, 24, 25, 26, 27, 66, 67, 410, 411, 424, 425, 460], "hypergeometr": 6, "hypot": [6, 393], "hypotenus": [147, 393], "i": [0, 3, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 278, 283, 291, 301, 307, 312, 315, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 456], "i0": 6, "i1": [85, 87, 315], "i2": [85, 87, 315], "i3": [85, 315], "i4": [52, 87], "i7": 89, "i8": [52, 87], "icpx": 4, "icx": 4, "id": [14, 19, 85, 293], "ident": [3, 6, 14, 19, 71, 87, 100, 183, 380], "identifi": 87, "ieee": 121, "ifft": 6, "ifft2": 6, "ifftn": 6, "ifftshift": 6, "ignor": [28, 29, 70, 87, 128, 129, 136, 144, 145, 202, 203, 204, 208, 209, 214, 215, 218, 219, 220, 222, 224, 418, 443], "ihfft": 6, "ii": [89, 364], "iinfo": 358, "iinfo_object": 149, "ij": [89, 90, 206], "ijk": 89, "il": 90, "il1": 433, "il2": 433, "illustr": 172, "ilm": 89, "imag": [6, 85, 456], "imaginari": [85, 150, 170, 171, 173, 176, 292, 413], "implement": [3, 6, 37, 131], "impli": 87, "implicit": 89, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 283, 286, 291, 292, 301, 305, 312, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 340, 366, 375, 379, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "improv": 89, "in1d": 6, "in_array1": 94, "includ": [4, 14, 19, 20, 32, 34, 35, 36, 37, 38, 44, 62, 71, 76, 79, 82, 89, 90, 101, 137, 138, 139, 140, 144, 145, 180, 187, 198, 199, 204, 218, 219, 220, 222, 224, 341, 385, 393, 418, 442, 443], "include_initi": 71, "inclus": [341, 369, 372], "increas": [82, 87, 97, 144, 442], "ind": [30, 82, 185, 336, 337, 433, 434, 436, 437], "index": [28, 29, 30, 55, 85, 87, 90, 100, 151, 206, 214, 215, 279, 291, 315, 323, 336, 337, 390, 396, 405, 422, 423, 433, 436, 446, 449, 460], "index_arrai": [28, 29, 30], "indic": [6, 28, 29, 30, 71, 77, 78, 82, 85, 87, 89, 90, 120, 134, 144, 185, 186, 200, 201, 207, 214, 215, 275, 276, 277, 300, 303, 309, 318, 323, 336, 337, 396, 405, 408, 409, 412, 422, 423, 429, 433, 434, 436, 437, 446], "indirect": [30, 412], "individu": 351, "inequ": 324, "inexact": [221, 223], "inf": [9, 15, 22, 26, 34, 35, 63, 83, 155, 156, 157, 158, 159, 168, 179, 189, 190, 192, 203, 209, 214, 215, 218, 220, 223, 334, 414, 438], "infer": [71, 199, 393, 396], "infin": [9, 14, 19, 127, 155, 156, 157, 158, 159, 210, 218, 220, 223, 394, 439, 460], "infinit": 168, "info": 6, "inform": [0, 36, 38, 85, 87, 121, 289, 456, 460], "infti": 9, "initi": [16, 17, 71, 85, 91, 136, 202, 208, 218, 220, 221, 223, 295, 297, 302, 316, 333, 341, 420], "inner": [6, 70, 89, 90, 178, 201, 328], "input": [11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 113, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 169, 171, 177, 179, 181, 182, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 291, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 363, 369, 385, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 438, 439, 441, 442, 443, 444, 447, 448], "insert": [6, 28, 29, 80, 82, 85, 89, 97, 139, 144, 187, 198, 214, 215, 218, 220, 309, 337, 405, 460], "instal": 2, "instanc": [3, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 141, 148, 151, 187, 188, 198, 200, 201, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "instead": [40, 80, 84, 85, 97, 126, 139, 144, 145, 151, 178, 187, 198, 202, 208, 278, 323, 333, 420, 456], "instruct": 4, "int": [9, 14, 19, 20, 28, 29, 30, 31, 37, 44, 51, 58, 70, 71, 72, 73, 76, 77, 79, 80, 81, 85, 87, 91, 92, 93, 97, 100, 120, 121, 123, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 148, 149, 151, 175, 176, 179, 185, 186, 187, 198, 199, 200, 202, 204, 208, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 320, 326, 327, 329, 333, 336, 337, 341, 369, 372, 393, 395, 396, 400, 401, 402, 412, 416, 417, 418, 420, 421, 423, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 442, 443, 447, 448, 456], "int16": 87, "int32": [0, 9, 37, 52, 87, 91, 92, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 132, 135, 137, 138, 148, 188, 221, 223, 326, 327, 341, 343, 351, 353, 358, 360, 366, 369, 385, 397, 420, 431, 447, 448], "int64": [0, 9, 52, 87, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 221, 223, 397], "int8": [87, 333], "int_": 9, "intc": 9, "integ": [15, 20, 31, 44, 45, 46, 47, 48, 49, 51, 71, 72, 73, 82, 85, 87, 123, 126, 127, 144, 149, 153, 154, 164, 176, 179, 185, 199, 202, 204, 208, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 312, 320, 333, 336, 341, 369, 372, 377, 393, 394, 396, 398, 399, 400, 402, 405, 407, 415, 418, 420, 422, 426, 428, 439, 443, 456], "integer_lik": 426, "integr": [3, 4, 44, 71, 144, 199, 204, 211, 219, 222, 224, 332, 393, 418, 420, 430, 443], "intel": [3, 4, 89], "intend": [85, 320], "interchang": [85, 212, 317, 421], "interfac": [0, 132], "interior": 141, "intermedi": [72, 89, 90], "intern": 341, "interp": 6, "interpret": [2, 34, 35, 39, 51, 62, 87, 132, 200, 323, 336, 456], "intersect1d": 6, "interv": [20, 21, 22, 23, 25, 82, 97, 139, 187, 198, 341, 369, 371, 373, 374, 376, 384, 385, 421], "intp": [221, 223], "intrins": 456, "introduc": 400, "introselect": [85, 301, 329], "inv": [6, 168, 180], "invers": [18, 21, 22, 23, 24, 25, 26, 27, 66, 67, 96, 97, 98, 108, 109, 110, 111, 112, 113, 114, 115, 174, 180, 185, 186, 191, 387, 410, 411, 424, 425], "invert": [6, 47, 174, 180, 185], "invok": 456, "involv": [85, 185, 310], "io": [131, 188], "irfft": 6, "irfft2": 6, "irfftn": 6, "irrespect": 30, "is_busdai": 6, "isalignedstruct": 87, "isbuiltin": 87, "isclos": [6, 15], "iscomplex": 6, "iscomplexobj": 6, "isfinit": [6, 156, 157, 158, 159, 218, 220, 223], "isfortran": 6, "isin": 6, "isinf": [6, 155, 157, 158, 159], "isn": 87, "isnan": [6, 155, 156, 158, 159, 216, 217, 218, 220, 221, 223], "isnat": [6, 157], "isneginf": [6, 155, 156, 157, 159], "isposinf": [6, 155, 156, 157, 158], "isreal": 6, "isrealobj": 6, "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 85, 132, 133, 135, 449], "item_dtyp": 87, "item_hasobject": 87, "item_is_point": 87, "items": [85, 87], "itemset": 6, "iter": [6, 34, 35, 85, 90, 122, 132, 133, 135, 136, 290, 291, 460], "its": [4, 6, 11, 12, 14, 19, 30, 44, 76, 85, 102, 108, 121, 144, 145, 148, 170, 171, 172, 173, 178, 180, 186, 204, 219, 222, 224, 320, 378, 390, 393, 396, 412, 418, 429, 431, 443, 456], "itself": [40, 85, 87, 278, 456], "iu": 200, "iu1": [200, 436], "iu2": 436, "ix_": 6, "j": [59, 60, 85, 89, 134, 150, 151, 163, 167, 170, 171, 192, 201, 320, 328, 334, 337, 413, 415, 423, 426], "j1": 163, "ji": 89, "jil": 89, "jk": [89, 90], "jl": 90, "join": [57, 58, 86, 146, 403, 417, 445, 460], "jump": [74, 339], "just": [57, 80, 87], "k": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 76, 79, 83, 85, 89, 93, 95, 96, 98, 100, 101, 126, 127, 130, 142, 143, 147, 150, 153, 155, 156, 157, 163, 164, 165, 166, 175, 181, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 209, 210, 213, 232, 278, 283, 322, 324, 331, 332, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 426, 431, 432, 433, 434, 435, 436, 437, 438, 439, 446, 464], "kaiser": 6, "kappa": 386, "keep": [39, 40, 85, 278], "keepdim": [14, 16, 17, 19, 28, 29, 44, 68, 85, 179, 199, 202, 204, 205, 208, 214, 215, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 295, 296, 297, 302, 314, 316, 321, 333, 335, 337, 393, 418, 420, 423, 443], "kei": [3, 30, 85, 87, 122, 237, 268, 412], "key2": 87, "keyword": [11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 63, 66, 67, 70, 83, 88, 95, 96, 98, 126, 127, 128, 129, 130, 134, 141, 147, 153, 164, 190, 191, 192, 193, 201, 203, 209, 210, 211, 213, 322, 331, 332, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 419, 424, 425, 430, 438, 439, 446, 456], "ki": 89, "kind": [30, 40, 52, 58, 64, 71, 85, 87, 89, 121, 146, 178, 199, 201, 277, 278, 301, 312, 329, 393, 403, 412, 417, 445, 460], "kl": [89, 90], "known": [133, 379], "kron": 6, "kroneck": 163, "kth": [85, 301, 329], "kwarg": [11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 59, 60, 63, 66, 67, 75, 83, 85, 93, 95, 96, 98, 101, 126, 127, 128, 129, 130, 134, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 209, 210, 211, 213, 262, 280, 307, 322, 324, 331, 332, 334, 340, 392, 394, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 430, 438, 439, 440, 441], "l": [87, 167, 171, 173], "la": [170, 172, 173], "label": 89, "laid": 38, "lam": 366, "lambda": 134, "lapack": [170, 172], "laplac": 6, "laptop": 4, "larg": [74, 87, 144, 180, 339], "larger": [89, 121, 428, 456], "largest": [90, 121, 126, 149, 175, 210, 394], "largest_singular_valu": 180, "last": [14, 19, 30, 70, 80, 81, 85, 123, 139, 141, 152, 178, 187, 198, 201, 291, 333, 390, 396, 400, 405, 412, 416, 420, 426], "latest": [4, 131], "layout": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 83, 85, 89, 91, 92, 93, 95, 96, 98, 100, 101, 126, 127, 130, 137, 138, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 209, 210, 213, 289, 322, 324, 326, 327, 331, 334, 392, 394, 396, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 438, 439, 446, 447, 448, 449], "lcm": 6, "ldexp": 6, "lead": [216, 217], "learn": [3, 4], "least": [41, 42, 43, 44, 78, 86, 87, 90, 97, 120, 124, 133, 154, 175, 181, 403, 445], "left": [28, 29, 31, 80, 82, 85, 124, 125, 164, 172, 179, 202, 208, 214, 215, 221, 223, 309, 333, 384, 398, 402, 405, 420, 442], "left_shift": [6, 398], "leg": [147, 393], "legaci": 377, "len": [85, 87, 151, 175, 202, 206, 207, 208, 254, 407, 442], "length": [20, 44, 72, 73, 81, 85, 93, 136, 139, 141, 144, 146, 170, 184, 198, 202, 206, 208, 216, 217, 310, 344, 396, 397, 403, 405, 407, 416, 426, 427, 445], "less": [6, 72, 73, 93, 142, 143, 144, 145, 166, 175, 180, 216, 217, 221, 223, 324, 333, 408, 420, 428], "less_equ": [6, 93, 142, 143, 165, 324], "let": 343, "level": [449, 456], "level_zero": [20, 32, 34, 35, 36, 38, 62, 76, 79, 91, 92, 100, 132, 133, 134, 135, 137, 138, 139, 148, 187, 188, 198, 207, 325, 326, 327, 431, 442, 447, 448], "lexsort": [6, 30, 412], "li": [400, 401], "librari": [3, 4, 456], "like": [20, 32, 34, 35, 36, 38, 40, 41, 42, 43, 57, 85, 86, 89, 91, 100, 132, 133, 134, 135, 136, 137, 139, 148, 187, 188, 198, 200, 278, 291, 326, 341, 385, 396, 447, 460], "limit": [3, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 75, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 147, 148, 149, 153, 154, 155, 156, 157, 164, 165, 166, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 278, 280, 322, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 366, 367, 369, 372, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 392, 394, 396, 398, 399, 404, 406, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 422, 424, 425, 430, 438, 439, 441, 443, 447, 448], "linalg": [6, 84, 89, 90, 415], "line": [175, 188], "linear": [61, 65, 175, 183, 198, 449, 460], "linspac": [0, 6, 20, 94, 139, 198, 206, 441], "linux": 4, "list": [3, 6, 9, 32, 34, 35, 36, 38, 41, 42, 43, 50, 58, 62, 76, 79, 85, 86, 87, 89, 90, 137, 138, 139, 141, 146, 187, 188, 198, 201, 320, 397, 403, 406, 417, 426, 429, 442, 445, 446], "list_pickl": 87, "littl": 87, "ln": 198, "load": [6, 133, 188], "loadtxt": [6, 133], "loc": [341, 352, 354, 355, 363, 387], "local": 4, "locat": [0, 4, 140, 158, 159, 200, 328, 352, 354, 405], "log": [6, 98, 139, 182, 187, 190, 191, 192, 193, 198, 199, 356], "log10": [6, 189, 191, 192], "log1p": [6, 96, 98, 189, 190, 192], "log2": [6, 189, 190, 191], "log_bas": 198, "logabsdet": 182, "logaddexp": [6, 71, 199], "logaddexp2": 6, "logarithm": [71, 169, 182, 187, 189, 190, 191, 192, 193, 199, 357, 460], "logic": [14, 19, 194, 195, 196, 197, 449, 460], "logical_and": [6, 46, 195, 196, 197], "logical_not": [6, 47, 153, 194, 196, 197], "logical_or": [6, 48, 194, 195, 197], "logical_xor": [6, 49, 194, 195, 196], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 139, 187], "logsumdexp": 193, "logsumexp": 71, "lomax": 364, "long": [87, 176], "lookfor": 6, "loop": 89, "lorentz": 379, "low": [341, 369, 372, 385, 456], "lower": [76, 100, 144, 145, 161, 167, 171, 173, 200, 431, 432, 433, 434, 436, 437], "lowest": [44, 89, 90, 341, 369], "lstsq": 6, "m": [69, 86, 87, 89, 100, 123, 124, 125, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 200, 201, 337, 423, 431, 432, 433, 434, 435, 436, 437], "machin": [4, 121, 149, 175], "machineri": 87, "made": [41, 87, 163], "magnitud": [11, 12, 63, 101, 334], "mai": [14, 18, 19, 40, 52, 56, 58, 64, 73, 85, 87, 89, 90, 97, 141, 145, 146, 168, 170, 171, 175, 179, 181, 198, 201, 219, 222, 224, 278, 337, 403, 417, 427, 445, 456], "main": [76, 77, 78, 79, 80, 100, 120, 148, 173, 200, 428, 431, 432, 433, 435, 436], "maintain": [82, 85, 87, 144, 309, 405, 423], "major": [4, 34, 35, 36, 38, 39, 40, 85, 278, 323, 390], "make": [36, 38, 57, 87, 206], "manag": 0, "mani": 456, "manipul": [3, 77, 449, 460], "manual": [4, 87, 427], "mappingproxi": 87, "mask": [87, 200, 323, 330, 338, 422, 433, 436], "mask_func": 200, "mask_indic": [6, 433, 436], "mass": 144, "mat": 6, "match": [11, 12, 35, 58, 64, 71, 81, 87, 133, 141, 152, 199, 201, 336, 337, 393, 417, 422, 423, 426, 446], "math": 94, "mathemat": [449, 460], "matlab": 130, "matmul": [6, 84, 181, 184, 444], "matplotlib": [206, 379], "matric": [120, 134, 169, 170, 172, 174, 177, 179, 180, 181, 182, 184, 201, 206, 460], "matrix": [69, 84, 89, 152, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 201, 206, 415, 435, 442, 444, 449, 460], "matrix_pow": [6, 415], "matrix_rank": 6, "max": [0, 6, 16, 28, 85, 121, 128, 144, 145, 149, 175, 177, 203, 208, 209, 218, 280, 358, 423, 427, 456], "max_arg": 0, "max_val": 0, "maxima": [202, 203], "maximum": [0, 6, 16, 28, 29, 56, 85, 90, 128, 129, 202, 208, 209, 214, 215, 218, 220, 275, 295, 332, 335, 337], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 40, 44, 85, 89, 132, 133, 135, 141, 168, 179, 205, 219, 222, 224, 278, 291, 320, 341, 354, 356, 359, 363, 382, 386, 387, 390, 396, 418, 420, 443, 456], "meaningfulli": 456, "meant": 456, "median": [0, 6], "memori": [3, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 83, 85, 87, 89, 91, 92, 93, 95, 96, 98, 100, 101, 126, 127, 130, 137, 138, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 206, 209, 210, 213, 289, 315, 322, 324, 326, 327, 331, 334, 392, 394, 396, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 438, 439, 446, 447, 448, 449], "mersenn": 341, "meshgrid": [6, 134, 207, 325], "met": [84, 178], "meta": 87, "metadata": 87, "method": [14, 16, 17, 19, 30, 40, 62, 84, 85, 87, 122, 131, 133, 177, 180, 184, 278, 283, 307, 323, 341, 396, 407, 420, 429, 449], "mgridclass": 207, "middl": [80, 172], "might": 89, "min": [6, 17, 29, 56, 85, 121, 129, 144, 145, 149, 168, 175, 181, 184, 202, 203, 209, 220, 280, 423, 456], "min_scalar_typ": 6, "minima": [208, 209], "minimum": [6, 17, 28, 29, 56, 85, 128, 129, 202, 203, 208, 214, 215, 218, 220, 276, 297, 332, 335], "minlength": 45, "mintypecod": 6, "minu": [98, 127, 210, 394, 439], "miscellan": [2, 449, 460], "mise": 386, "miss": 188, "mix": 201, "mkl": 4, "mod": [6, 394], "mode": [55, 61, 65, 85, 181, 279, 303, 318, 336, 379, 384, 405, 422], "model": 343, "modf": 6, "modifi": [62, 80, 378], "modul": [140, 449], "modulu": [130, 210, 394], "monoton": [82, 144], "moor": 180, "more": [0, 3, 4, 15, 30, 32, 41, 42, 43, 86, 87, 89, 90, 98, 124, 125, 131, 133, 145, 146, 151, 175, 176, 177, 178, 180, 184, 191, 193, 417, 426, 456], "most": [3, 4, 80, 81, 87, 90, 341, 377, 416], "move": [85, 212, 301, 400, 401, 429], "moveaxi": [6, 400, 401, 429], "msg": 0, "msort": 6, "mt19937": 377, "mu": [352, 356, 363, 386], "multi": [2, 85, 103, 105, 109, 110, 114, 115, 117, 119, 207, 315, 325, 449], "multi_dot": [6, 84, 89, 90], "multiarrai": 87, "multidimension": [144, 152, 446], "multinomi": 6, "multipl": [28, 29, 30, 44, 58, 70, 71, 87, 89, 145, 146, 170, 171, 172, 173, 174, 178, 199, 202, 204, 208, 218, 219, 220, 222, 224, 393, 403, 412, 417, 418, 443, 445, 449], "multipli": [6, 72, 89, 172, 221, 333], "multivari": 359, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 44, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 71, 72, 73, 81, 83, 84, 86, 95, 96, 97, 98, 99, 101, 120, 124, 126, 127, 130, 133, 136, 141, 142, 143, 144, 145, 146, 147, 150, 153, 155, 156, 157, 158, 159, 164, 165, 166, 167, 178, 179, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 322, 324, 331, 332, 333, 334, 336, 337, 392, 393, 394, 398, 399, 400, 402, 403, 404, 405, 408, 409, 410, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 438, 439, 443, 445, 446], "mx": 175, "n": [0, 4, 73, 77, 78, 81, 82, 85, 86, 87, 88, 97, 100, 102, 104, 105, 107, 108, 110, 112, 113, 115, 116, 118, 119, 120, 126, 134, 141, 148, 175, 176, 177, 180, 181, 184, 185, 186, 200, 201, 206, 222, 224, 320, 336, 343, 358, 360, 370, 380, 405, 407, 415, 418, 421, 422, 426, 429, 431, 432, 433, 434, 435, 436, 437, 442, 443, 456], "n1": 206, "n2": [188, 206], "n3": 206, "naiv": 90, "name": [0, 6, 87], "namedtupl": 181, "nan": [9, 14, 15, 19, 28, 29, 34, 35, 83, 128, 129, 155, 156, 157, 158, 159, 190, 202, 203, 204, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 332, 333, 414, 418, 438, 443, 460], "nan_to_num": 6, "nanargmax": [6, 28, 215], "nanargmin": [6, 29, 214], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 128, 202, 203, 209, 220], "nanmean": [6, 204, 222, 224, 418, 443], "nanmedian": 6, "nanmin": [6, 129, 203, 208, 209, 218], "nanpercentil": 6, "nanprod": [6, 333], "nanquantil": 6, "nanstd": [6, 204, 219, 224, 418, 443], "nansum": 6, "nanvar": [6, 204, 219, 222, 418, 443], "nat": 157, "nativ": 87, "native_cod": 87, "native_dt": 87, "natur": [182, 189, 190, 191, 192, 193, 199], "nbad": 353, "nbyte": 85, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449], "ndim": [6, 32, 38, 41, 42, 43, 69, 77, 80, 85, 87, 163, 184, 202, 208, 326, 427, 429, 447], "ndmin": 32, "nearest": [31, 127, 210, 394, 399, 402, 439], "necessari": [4, 14, 19, 20, 32, 34, 35, 36, 38, 41, 64, 72, 73, 120, 139, 187, 198, 201, 204, 216, 217, 219, 221, 222, 223, 224, 333, 396, 418, 420, 443], "necessarili": [170, 172], "need": [4, 80, 140, 423, 446], "needs_init": 87, "needs_pyapi": 87, "neg": [6, 14, 19, 31, 45, 63, 79, 80, 82, 97, 100, 123, 136, 141, 144, 155, 156, 157, 158, 159, 176, 218, 220, 222, 223, 224, 331, 332, 333, 336, 360, 402, 418, 420, 422, 428, 443], "negative_binomi": 6, "neither": [84, 184, 201, 218, 220], "nest": [37, 86, 146, 403, 417, 445], "nested_it": 6, "never": 396, "new": [32, 40, 50, 51, 57, 58, 71, 72, 73, 80, 85, 86, 87, 91, 92, 97, 131, 135, 136, 137, 138, 139, 146, 148, 187, 198, 199, 200, 203, 209, 212, 216, 217, 221, 223, 278, 307, 320, 326, 327, 393, 396, 400, 401, 403, 417, 427, 429, 445, 446, 447, 448, 456], "new_dtyp": 87, "new_ord": 87, "newaxi": 97, "newbyteord": [6, 87], "newli": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 83, 85, 91, 92, 93, 95, 96, 98, 100, 101, 126, 127, 130, 137, 138, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 209, 210, 213, 278, 322, 324, 326, 327, 331, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 438, 439, 447, 448], "newshap": 396, "next": [4, 121], "nextaft": 6, "ngood": 353, "ni": [206, 337, 423], "nine": 343, "ninf": [9, 218, 220, 223], "ninja": 4, "nj": [337, 423], "njm": 89, "nk": [337, 423], "nlk": 89, "nn": 206, "noisi": 175, "non": [20, 32, 34, 35, 36, 37, 38, 40, 44, 45, 62, 68, 76, 77, 79, 82, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 148, 151, 155, 187, 188, 198, 200, 207, 214, 215, 218, 220, 222, 224, 278, 300, 323, 325, 326, 327, 332, 341, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 418, 426, 431, 433, 436, 442, 443, 446, 447, 448], "nonc": [361, 362], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 164, 165, 166, 168, 175, 177, 178, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 293, 295, 296, 297, 301, 302, 303, 306, 308, 309, 312, 313, 314, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 433, 436, 438, 439, 442, 443, 445, 446, 447, 448, 456], "nonzero": [6, 68, 85, 446, 456], "nor": [172, 218, 220], "norm": [6, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 168, 172, 175, 460], "normal": [6, 69, 144, 170, 171, 181, 341, 356, 359, 370, 382], "not_equ": [6, 93, 142, 143, 165, 166], "note": [11, 12, 13, 14, 18, 19, 28, 29, 30, 31, 39, 62, 70, 74, 80, 82, 83, 85, 87, 90, 97, 126, 132, 133, 134, 135, 136, 144, 151, 155, 170, 188, 198, 210, 213, 222, 223, 224, 283, 307, 323, 336, 339, 344, 346, 347, 357, 362, 394, 396, 412, 418, 419, 421, 422, 426, 427, 438, 443, 444], "notic": 87, "notimplementederror": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 56, 59, 60, 62, 63, 66, 67, 83, 85, 91, 92, 93, 95, 96, 98, 100, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 147, 148, 153, 155, 156, 157, 164, 165, 166, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 208, 209, 210, 213, 218, 219, 220, 222, 223, 224, 278, 322, 324, 326, 327, 331, 332, 333, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 424, 425, 438, 439, 443, 447, 448], "now": [14, 19, 36, 38, 77, 172, 175, 200], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 283, 286, 288, 291, 292, 293, 301, 305, 312, 320, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 340, 366, 375, 388, 389, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "nsamp": 353, "nsampl": 353, "nth": 426, "nuc": 179, "num": [0, 87, 94, 139, 187, 198, 441], "number": [14, 15, 18, 19, 20, 31, 44, 45, 50, 51, 68, 77, 79, 81, 82, 85, 87, 89, 90, 97, 100, 101, 121, 127, 132, 133, 135, 136, 139, 141, 144, 145, 148, 149, 155, 168, 174, 177, 181, 182, 184, 185, 186, 187, 198, 210, 216, 217, 218, 220, 221, 222, 223, 224, 299, 308, 310, 311, 323, 333, 334, 341, 343, 353, 377, 394, 395, 399, 400, 401, 402, 409, 418, 421, 427, 429, 431, 439, 442, 443, 456, 460], "numer": [3, 4, 11, 12, 13, 21, 22, 23, 24, 25, 27, 31, 59, 60, 63, 66, 67, 83, 87, 93, 95, 98, 127, 142, 143, 150, 155, 156, 157, 165, 166, 189, 190, 191, 192, 203, 209, 213, 322, 324, 331, 332, 334, 391, 399, 402, 408, 409, 410, 411, 419, 424, 425, 438, 460], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 287, 291, 292, 293, 305, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 456, 460], "nx": 206, "ny": 206, "nzero": 9, "o": [4, 14, 19, 87], "obj": [28, 29, 30, 87, 131, 144, 160], "obj2sctyp": 6, "object": [20, 32, 34, 35, 36, 37, 38, 39, 40, 62, 76, 77, 79, 85, 87, 91, 92, 97, 100, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 149, 151, 168, 171, 179, 187, 188, 198, 200, 207, 278, 307, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 396, 431, 433, 436, 442, 447, 448, 456], "obtain": [80, 167, 323], "occupi": [121, 149], "occur": [40, 52, 58, 64, 85, 89, 146, 170, 201, 278, 403, 417, 445], "occurr": [28, 29, 45, 82, 144, 214, 215], "off": [20, 170, 175], "offset": [80, 85, 87, 132, 133, 200, 286, 319, 428, 433, 434, 436, 437], "ogrid": 446, "ogridclass": 325, "oil": [343, 360], "omit": [341, 369], "onc": 174, "one": [3, 4, 15, 28, 29, 30, 32, 37, 41, 42, 43, 44, 56, 61, 64, 65, 85, 87, 91, 93, 97, 100, 102, 104, 107, 108, 112, 113, 116, 118, 124, 125, 133, 137, 141, 145, 146, 148, 151, 172, 176, 179, 189, 190, 192, 200, 202, 206, 207, 208, 214, 215, 221, 223, 283, 291, 294, 323, 325, 327, 333, 360, 401, 412, 416, 417, 420, 426, 433, 434, 436, 437, 447, 456], "oneapi": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "onedpl": 4, "onemkl": [4, 170, 172], "ones": [6, 32, 36, 38, 44, 71, 83, 85, 89, 91, 92, 93, 97, 100, 137, 138, 147, 148, 163, 175, 177, 199, 200, 216, 221, 327, 333, 393, 397, 401, 429, 431, 438, 447, 448], "ones_lik": [6, 32, 92, 138, 326, 448], "onli": [14, 19, 20, 28, 29, 30, 32, 34, 35, 36, 38, 40, 41, 44, 56, 62, 65, 69, 85, 87, 88, 89, 90, 91, 92, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 151, 167, 171, 173, 181, 184, 187, 188, 198, 200, 201, 202, 204, 205, 208, 214, 215, 218, 219, 220, 221, 222, 224, 278, 312, 326, 327, 329, 331, 333, 341, 363, 369, 385, 396, 406, 412, 418, 420, 422, 423, 436, 443, 446, 447, 448, 456], "open": [133, 187, 325, 341, 371, 373, 374, 376, 385, 421], "opencl": [20, 32, 34, 35, 36, 38, 62, 76, 79, 91, 92, 100, 132, 133, 134, 135, 137, 138, 139, 148, 187, 188, 198, 207, 325, 326, 327, 431, 442, 447, 448], "oper": [13, 46, 47, 48, 49, 83, 87, 89, 90, 93, 97, 120, 127, 130, 142, 143, 153, 164, 165, 166, 167, 194, 196, 201, 202, 208, 210, 213, 214, 215, 322, 324, 331, 332, 336, 394, 398, 419, 427, 438, 449, 460], "operand": [89, 90, 186, 328, 426], "opposit": 87, "optim": [4, 89, 90, 144, 145], "option": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 66, 67, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 95, 96, 98, 100, 101, 120, 123, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 171, 173, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 291, 320, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 336, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 448], "ord": 179, "order": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 80, 82, 83, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 120, 123, 124, 125, 126, 127, 130, 133, 137, 138, 141, 142, 143, 144, 147, 150, 153, 155, 156, 157, 164, 165, 166, 168, 170, 171, 172, 173, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 206, 209, 210, 212, 213, 232, 277, 278, 283, 291, 301, 304, 309, 312, 320, 322, 323, 324, 326, 327, 329, 331, 332, 334, 390, 392, 394, 396, 398, 399, 404, 405, 408, 409, 410, 411, 412, 414, 415, 419, 424, 425, 426, 429, 438, 439, 442, 446, 447, 448, 460], "ordin": [175, 183], "ordinari": [152, 167], "org": 4, "orient": 70, "origin": [50, 80, 85, 179, 206, 212, 221, 223, 396, 400], "orthogon": [172, 181], "orthonorm": 181, "other": [30, 40, 50, 51, 81, 85, 87, 126, 134, 148, 170, 172, 178, 212, 228, 229, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 270, 271, 272, 278, 341, 385, 401, 412, 449, 460], "otherwis": [3, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 76, 81, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 147, 148, 152, 153, 154, 155, 156, 157, 164, 165, 166, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 278, 307, 322, 324, 326, 327, 330, 331, 332, 333, 334, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 398, 399, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 424, 425, 428, 430, 438, 439, 443, 446, 447, 448], "otim": 426, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 168, 174, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 279, 280, 283, 284, 285, 291, 295, 296, 297, 302, 308, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 340, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 435, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448], "outer": [6, 70, 80, 89, 90, 163], "output": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 71, 72, 73, 76, 77, 79, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 147, 148, 150, 151, 153, 155, 156, 157, 164, 165, 166, 178, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 221, 222, 223, 224, 278, 322, 324, 325, 326, 327, 331, 332, 333, 334, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 398, 399, 402, 404, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 424, 425, 427, 428, 431, 433, 436, 438, 439, 442, 443, 446, 447, 448, 460], "outsid": [144, 145], "over": [14, 19, 44, 71, 72, 73, 84, 85, 89, 90, 122, 123, 134, 139, 144, 145, 152, 179, 187, 198, 199, 201, 202, 204, 206, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 291, 333, 341, 368, 373, 384, 385, 393, 418, 420, 426, 443, 460], "overrid": [70, 92, 138, 327, 448], "overview": 2, "overwrite_input": 205, "p": [168, 175, 176, 343, 346, 351, 357, 360], "pack": [80, 390, 460], "packag": [0, 3], "packbit": 6, "pad": [6, 87], "page": [3, 460], "pair": [90, 170], "parallel": [1, 3, 4, 9, 449], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 288, 291, 307, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448], "parameter": [341, 363, 385], "pareto": 6, "pars": [133, 188], "part": [3, 85, 150, 170, 171, 173, 200, 211, 292, 305, 391, 413, 433, 436, 439, 456], "partial": [30, 412], "particular": [87, 178], "particularli": 89, "partit": [6, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 412, 431, 433, 436, 442, 447, 448, 456], "pass": [35, 85, 87, 134, 145, 175, 200, 307, 434, 437], "path": [4, 89, 90, 133, 188], "path_info": 90, "pathlib": 188, "pattern": 44, "penros": 180, "per": 89, "percentil": [6, 205], "perf_count": 0, "perform": [14, 19, 35, 56, 81, 89, 123, 167, 333, 420], "permit": 133, "permut": [6, 85, 89, 212, 320, 429, 460], "phase": [18, 441], "pi": [0, 9, 21, 23, 25, 26, 66, 67, 75, 410, 411, 424, 425, 441], "pickl": [133, 188], "piecewis": 6, "pinf": 9, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 31, 56, 58, 72, 73, 84, 85, 97, 120, 151, 201, 202, 204, 208, 216, 217, 219, 221, 222, 223, 224, 291, 312, 320, 325, 333, 336, 378, 396, 400, 402, 412, 417, 418, 420, 428, 443, 456], "platform": [72, 73, 87, 216, 217, 221, 223, 333, 420], "pleas": [0, 3, 144, 456], "plot": 379, "plt": [206, 379], "plu": [189, 190, 192], "point": [11, 12, 18, 20, 26, 31, 34, 35, 44, 63, 71, 87, 91, 92, 96, 100, 101, 121, 132, 133, 134, 136, 137, 138, 141, 148, 150, 175, 176, 187, 188, 193, 199, 204, 219, 222, 224, 326, 327, 341, 370, 382, 391, 392, 393, 402, 404, 405, 418, 431, 443, 447, 448, 460], "pointer": 87, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 46, 47, 48, 49, 53, 54, 59, 60, 63, 66, 67, 83, 85, 93, 95, 96, 98, 101, 126, 127, 130, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 209, 210, 213, 322, 324, 331, 332, 334, 341, 368, 392, 394, 398, 399, 402, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 438, 439], "portion": [144, 145], "posit": [6, 14, 15, 19, 20, 31, 34, 35, 53, 63, 79, 80, 85, 97, 100, 101, 121, 133, 155, 156, 157, 158, 159, 167, 176, 185, 212, 218, 220, 223, 301, 315, 322, 343, 367, 400, 401, 402, 404, 414, 415, 428, 429], "possess": 170, "possibl": [39, 40, 42, 43, 85, 89, 90, 97, 141, 144, 200, 278, 307, 396, 416, 421, 429], "possibli": 37, "pow": 456, "power": [6, 96, 176, 415, 442], "pre": 145, "precis": [11, 12, 44, 72, 73, 87, 89, 121, 150, 175, 200, 216, 217, 221, 223, 333, 391, 420, 428], "prefer": [55, 62, 85, 283, 323], "prepend": [81, 427], "present": [87, 218, 220, 223], "preserv": [40, 41, 42, 43, 56, 85, 87, 89, 123, 124, 125, 171, 172, 173, 278, 428], "previou": 44, "print": [0, 4, 44, 45, 61, 82, 87, 90, 341, 360, 365, 440], "print_device_info": 0, "printabl": 90, "printopt": 6, "prior": 81, "prob1": 193, "prob12": 193, "prob2": 193, "probabl": [144, 343, 351, 360], "proce": 456, "processor": 89, "prod": [6, 72, 85, 185, 186, 221, 456], "produc": [87, 188, 405], "product": [6, 70, 72, 84, 85, 89, 90, 152, 163, 178, 183, 185, 186, 201, 213, 216, 221, 284, 328, 333, 426, 444, 460], "program": [4, 126], "progress": [139, 187], "project": [87, 334], "promot": [13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 46, 48, 49, 52, 53, 63, 66, 67, 83, 95, 96, 98, 127, 130, 139, 147, 164, 187, 189, 190, 191, 192, 193, 198, 201, 203, 209, 210, 213, 332, 392, 394, 397, 398, 404, 408, 410, 411, 414, 415, 419, 424, 425, 427, 438, 439], "promote_typ": 6, "propag": [87, 128, 129, 202, 203, 208, 209, 216, 217, 218, 220, 221, 223], "proper": [170, 172], "properti": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 171, 173, 181, 187, 188, 198, 200, 207, 226, 278, 287, 289, 290, 292, 294, 298, 299, 305, 310, 311, 315, 320, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448, 456], "protocol": [37, 87, 131], "prototyp": 92, "provid": [0, 6, 28, 29, 58, 64, 71, 85, 89, 90, 97, 135, 144, 145, 146, 158, 159, 199, 214, 215, 218, 220, 221, 223, 341, 369, 372, 393, 403, 417, 422, 445, 446, 464], "pseudo": [180, 341], "ptp": 6, "purpos": 175, "put": [6, 85, 337, 423, 456], "put_along_axi": [6, 336, 423], "putmask": [6, 336], "pval": 358, "py": 4, "pypi": 4, "pyplot": [206, 379], "pytest": 4, "python": [0, 2, 3, 37, 85, 87, 130, 131, 210, 293, 394, 456], "pzero": 9, "q": [172, 176, 181, 186, 205], "qr": 6, "quadrant": [18, 25], "quantil": 6, "quaternion": 176, "question": 76, "queue": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "quick": [2, 3], "quotient": 26, "r": 181, "r2": 181, "rad": 75, "rad2deg": [6, 74, 75, 441], "radian": [6, 18, 21, 22, 23, 25, 26, 74, 75, 339, 441], "rais": [11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 71, 82, 83, 84, 85, 91, 92, 93, 95, 96, 98, 100, 102, 108, 116, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 147, 148, 153, 155, 156, 157, 164, 165, 166, 176, 178, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 208, 209, 210, 213, 214, 215, 218, 219, 220, 222, 223, 224, 278, 279, 310, 322, 324, 326, 327, 331, 332, 333, 334, 392, 393, 394, 396, 398, 399, 404, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 424, 425, 438, 439, 443, 447, 448, 456], "rand": [6, 90, 341, 371, 373, 374, 376], "randint": [6, 85, 293, 341, 372], "randn": [6, 123, 124, 125, 180, 181, 184, 186, 341, 417], "random": [85, 90, 123, 124, 125, 172, 178, 180, 181, 184, 186, 293, 417, 449, 460], "random_integ": [6, 341, 369], "random_sampl": [6, 341, 368, 371, 374, 376], "randomli": 365, "randomst": 369, "ranf": 6, "rang": [0, 82, 135, 144, 145, 335, 336, 360, 365, 417, 426, 429, 441, 460], "rank": [97, 99, 134, 175, 177, 421], "ratio": [0, 83, 127, 175, 438], "ration": 460, "ravel": [6, 85, 179, 291, 328, 456], "ravel_multi_index": 6, "raw": 181, "rayleigh": 6, "rcond": [175, 180], "re": [28, 29, 45, 76, 400, 440], "read": [76, 80, 85, 87, 132, 133, 135, 136, 188, 291, 390, 396], "readonli": 87, "real": [6, 11, 12, 20, 26, 53, 54, 63, 71, 85, 113, 114, 115, 116, 117, 119, 121, 126, 128, 129, 130, 147, 150, 167, 170, 171, 172, 173, 177, 180, 181, 182, 184, 193, 199, 210, 222, 224, 343, 360, 392, 393, 394, 404, 413, 418, 439, 443, 456, 460], "real_if_clos": 6, "rearrang": [85, 301, 460], "rebuild": 86, "recal": 87, "recent": 416, "recfromcsv": 6, "recfromtxt": 6, "recip": 4, "reciproc": [6, 404, 414], "recommend": [4, 89, 323, 427], "reconstruct": [87, 184], "reduc": [14, 19, 28, 29, 44, 181, 184, 199, 202, 204, 206, 208, 214, 215, 218, 219, 220, 221, 222, 223, 224, 333, 393, 418, 420, 443], "reduce_hypot": 147, "reduct": [14, 19], "refer": [0, 2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 291, 292, 293, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456], "reflect": 456, "reflector": 181, "regardless": [87, 171, 173], "regular": 188, "rel": [15, 85, 315, 400, 401], "relat": 87, "relev": [87, 139, 187, 198], "rem": 130, "remain": [14, 19, 44, 90, 144, 199, 204, 212, 219, 222, 224, 393, 396, 418, 443], "remaind": [6, 127, 128, 129, 130, 210, 332], "remov": [28, 29, 74, 80, 85, 97, 313, 333, 339, 416, 420, 460], "reorder": [89, 123, 186, 212], "rep": [395, 427], "repeat": [6, 85, 120, 170, 171, 172, 173, 206, 427, 456], "repeatedli": 89, "repetit": [0, 395, 427], "replac": [3, 37, 56, 216, 217, 337, 346, 456], "replic": 427, "repr": 266, "repres": [20, 32, 34, 35, 36, 37, 38, 44, 85, 87, 90, 131, 134, 139, 141, 151, 182, 187, 198, 206, 224, 310, 341, 456], "represent": [46, 48, 49, 90, 121, 149, 151, 456], "request": 401, "requir": [4, 6, 32, 36, 38, 40, 85, 87, 89, 101, 151, 278], "res_cpu": 76, "res_host": 76, "rese": 377, "reset": 456, "reshap": [0, 6, 13, 28, 29, 41, 43, 44, 76, 77, 78, 80, 83, 84, 85, 86, 89, 97, 123, 130, 151, 152, 163, 179, 200, 201, 202, 208, 213, 286, 291, 310, 320, 365, 390, 400, 419, 426, 428, 433, 434, 436, 437, 438, 456], "resid": [97, 101], "residu": 175, "resiz": [6, 97, 456], "resolut": 121, "resolv": [71, 97, 199, 393], "resourc": 0, "respect": [13, 26, 46, 48, 49, 83, 85, 93, 127, 130, 141, 142, 143, 164, 165, 166, 193, 194, 196, 197, 210, 213, 315, 324, 332, 394, 398, 419, 438], "restor": 400, "result": [0, 4, 14, 19, 26, 28, 29, 44, 46, 47, 48, 49, 52, 56, 58, 63, 71, 72, 73, 83, 84, 87, 88, 90, 92, 93, 98, 127, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 151, 153, 155, 156, 157, 158, 159, 164, 165, 166, 167, 170, 179, 181, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 208, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 323, 324, 327, 328, 332, 333, 336, 341, 343, 373, 393, 396, 397, 398, 399, 401, 402, 405, 408, 409, 417, 418, 420, 423, 426, 427, 438, 439, 443, 446, 448, 456], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 52, 87, 460], "retriev": [80, 87], "retstep": 187, "return": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 295, 296, 297, 300, 301, 302, 304, 307, 308, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 341, 344, 363, 365, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 456], "reus": [145, 396], "revers": [80, 85, 120, 123, 124, 125, 320, 429, 442], "rewrit": 175, "rfft": 6, "rfft2": 6, "rfftfreq": 6, "rfftn": 6, "right": [56, 70, 80, 82, 124, 125, 147, 164, 170, 171, 172, 173, 178, 186, 200, 384, 393, 398, 405, 428, 433, 436, 442], "right_shift": [6, 164], "rightmost": [144, 145, 186], "rint": [6, 31, 402], "roll": [6, 401], "rollaxi": [6, 400], "root": [6, 53, 147, 168, 392, 393, 404, 414, 415], "rot90": 6, "roughli": [87, 175], "round": [6, 20, 31, 85, 127, 170, 210, 394, 399, 439, 456, 460], "round_": 6, "routin": [2, 449, 456], "row": [38, 40, 57, 58, 72, 73, 80, 85, 86, 100, 124, 125, 141, 146, 148, 151, 178, 184, 278, 323, 390, 403, 417, 431, 433, 445], "row_stack": [6, 445], "rowvar": 69, "rsqrt": [392, 414], "rtol": [15, 154], "rule": [13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 44, 46, 48, 49, 52, 53, 63, 64, 66, 67, 70, 83, 95, 96, 98, 127, 130, 139, 147, 164, 187, 189, 190, 191, 192, 193, 198, 199, 201, 203, 204, 209, 210, 213, 219, 222, 224, 332, 392, 393, 394, 397, 398, 404, 408, 410, 411, 414, 415, 418, 419, 420, 424, 425, 430, 438, 439, 443], "run": [0, 4], "runtim": 4, "runtimewarn": [218, 220], "s1": [85, 87, 163, 315], "s10": 87, "s16": 87, "s2": [85, 87, 315], "s25": 87, "s3": [85, 315], "safe": [40, 52, 58, 64, 85, 89, 146, 201, 278, 403, 417, 445], "safe_ev": 6, "said": 186, "same": [4, 11, 12, 13, 14, 15, 19, 26, 28, 29, 30, 31, 33, 36, 38, 39, 40, 44, 46, 47, 48, 49, 51, 57, 58, 63, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 92, 93, 97, 99, 120, 127, 128, 129, 130, 131, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 158, 159, 163, 164, 165, 166, 172, 176, 181, 193, 194, 196, 197, 199, 202, 203, 204, 208, 209, 210, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 307, 320, 324, 327, 332, 333, 337, 339, 341, 363, 369, 385, 390, 391, 393, 394, 395, 398, 400, 401, 403, 405, 412, 416, 417, 418, 419, 420, 423, 426, 428, 432, 434, 435, 437, 438, 443, 444, 445, 448], "same_kind": [40, 52, 58, 64, 85, 89, 146, 201, 278, 403, 417, 445], "sampl": [104, 118, 139, 141, 144, 187, 198, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 423, 433, 436, 449, 460], "satisfi": [32, 36, 38, 40, 85, 99, 174, 278], "save": [6, 133], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 26, 32, 34, 35, 36, 37, 38, 46, 48, 49, 52, 62, 63, 64, 70, 76, 79, 81, 83, 84, 85, 87, 89, 90, 93, 120, 127, 128, 129, 130, 137, 138, 139, 141, 142, 143, 144, 145, 147, 152, 160, 163, 164, 165, 166, 183, 187, 193, 194, 196, 197, 198, 200, 201, 203, 206, 209, 210, 213, 288, 293, 324, 332, 336, 337, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 364, 366, 367, 369, 372, 375, 377, 381, 383, 384, 385, 386, 387, 388, 389, 394, 398, 405, 419, 426, 438, 439, 442, 444, 446, 456], "scale": [90, 139, 163, 181, 187, 198, 341, 348, 350, 352, 353, 354, 355, 363, 375, 380, 387], "scipi": 94, "scope": 4, "script": 4, "sctype2char": 6, "search": [90, 449, 460], "searchsort": [6, 82, 85, 144, 412, 456], "second": [13, 26, 44, 46, 48, 49, 63, 70, 80, 83, 84, 87, 90, 93, 96, 127, 130, 141, 142, 143, 144, 145, 146, 147, 152, 162, 163, 164, 165, 166, 193, 194, 196, 197, 200, 201, 202, 203, 206, 208, 209, 210, 213, 324, 328, 332, 394, 398, 415, 419, 421, 426, 428, 438, 444], "section": [4, 87, 456], "see": [3, 31, 87, 131, 144, 175, 358, 402, 433, 434, 436, 437, 456], "seed": [6, 85, 90, 293, 341], "seek": 133, "select": [6, 64, 202, 208, 416, 449], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "self": [85, 87, 122, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 290, 341], "semant": 144, "sens": 186, "sep": [133, 136], "separ": [85, 87, 89, 133, 136, 145, 307], "sequenc": [37, 41, 42, 43, 57, 58, 61, 65, 86, 89, 90, 91, 92, 137, 138, 139, 144, 145, 146, 151, 178, 187, 198, 212, 326, 327, 365, 378, 397, 403, 417, 426, 445, 447, 448], "sequenti": [15, 65, 69, 88, 94, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 128, 129, 154, 205, 211, 221, 330, 422, 430], "seri": 357, "set": [28, 29, 32, 40, 55, 76, 77, 79, 82, 85, 87, 89, 91, 137, 144, 145, 148, 151, 177, 179, 180, 187, 202, 208, 214, 215, 223, 268, 278, 279, 290, 326, 327, 333, 408, 409, 420, 433, 436, 447, 448, 456], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 87], "setflag": 6, "setter": [85, 310], "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 174, "sh": [85, 307], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 40, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 63, 65, 66, 67, 69, 71, 72, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 123, 126, 127, 130, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 166, 169, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 307, 313, 320, 322, 324, 325, 326, 327, 331, 332, 333, 334, 336, 337, 341, 350, 353, 358, 359, 364, 368, 369, 370, 371, 372, 373, 374, 376, 381, 382, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 443, 445, 446, 447, 448, 449, 460], "share": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 431, 433, 436, 442, 447, 448], "shared_bin": 145, "shares_memori": 6, "shift": [106, 111, 164, 398, 400], "short": [439, 456], "shorthand": [11, 12, 13, 46, 47, 48, 49, 83, 93, 127, 142, 143, 153, 164, 165, 166, 194, 196, 201, 210, 213, 322, 324, 331, 332, 394, 398, 419, 438, 446], "should": [28, 29, 40, 80, 82, 84, 85, 89, 90, 130, 133, 140, 144, 154, 175, 176, 201, 212, 214, 215, 218, 220, 278, 309, 358, 396, 405, 426, 428, 456], "show": [9, 87, 120, 147, 197, 206, 216, 217, 218, 220, 223, 379], "show_config": 6, "shown": 4, "shuffl": 6, "side": [85, 141, 172, 309, 405], "sigma": [356, 363], "sign": [6, 15, 63, 87, 169, 182, 210, 322, 331, 333, 394, 409, 420, 439], "signal": [107, 112], "signatur": [200, 201], "signbit": [6, 408], "signific": 89, "signum": 408, "similar": [3, 34, 35, 85, 87, 139, 187, 198, 200, 283, 341, 369, 433, 434, 436, 437], "simpl": [4, 197, 460], "simpli": [78, 85, 133, 144, 145, 320], "sin": [0, 6, 23, 66, 172, 206, 411, 424], "sinc": [6, 85, 170, 172, 312, 323], "sine": [21, 22, 23, 24, 25, 26, 27, 66, 67, 410, 411, 424, 425], "singl": [9, 30, 51, 57, 85, 89, 90, 141, 178, 202, 208, 313, 333, 341, 360, 369, 370, 371, 372, 373, 374, 376, 382, 420, 456], "singlecomplex": 9, "singleton": [14, 19, 44, 97, 199, 204, 218, 219, 220, 222, 224, 393, 416, 418, 443], "singular": [174, 175, 177, 180, 184], "sinh": [6, 24, 67, 410, 425], "size": [0, 6, 20, 28, 29, 32, 44, 58, 65, 69, 72, 73, 77, 82, 85, 87, 90, 133, 139, 141, 146, 179, 181, 184, 187, 198, 200, 202, 204, 208, 214, 215, 216, 217, 219, 221, 223, 293, 294, 310, 326, 333, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 400, 403, 416, 417, 420, 426, 436, 445, 447], "skip": 80, "slice": [214, 215, 218, 219, 220, 222, 224, 336, 337, 423, 436, 437, 456], "slogdet": [6, 169], "slower": 426, "slowest": [85, 291, 390, 396], "small": [15, 98, 175, 180, 191, 193, 436], "smaller": [81, 85, 121, 175, 210, 301, 394], "smallest": [121, 149], "smallest_norm": 121, "smat": 184, "so": [14, 19, 44, 87, 93, 144, 187, 199, 204, 206, 219, 222, 224, 379, 393, 418, 426, 427, 443], "solut": [175, 183], "solv": [6, 175, 185, 186, 460], "some": [20, 87, 97, 99, 126, 152, 175, 446, 456], "sometim": 456, "sometru": 6, "somewhat": 176, "sophist": 176, "sort": [6, 30, 85, 184, 277, 301, 405, 413, 423, 429, 449, 456, 460], "sort_complex": 6, "sorter": [85, 309, 405], "sought": 168, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 55, 56, 57, 58, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 151, 152, 154, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 199, 200, 201, 202, 204, 205, 206, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 323, 326, 327, 328, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 397, 400, 401, 405, 406, 407, 412, 413, 416, 417, 418, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448], "space": [6, 20, 133, 139, 141, 187, 198], "spars": [151, 206], "special": [2, 87, 94, 449, 460], "specif": [0, 4, 87, 134], "specifi": [14, 19, 20, 28, 29, 30, 31, 32, 34, 35, 36, 38, 44, 51, 52, 58, 62, 71, 72, 73, 76, 79, 80, 85, 89, 90, 91, 92, 100, 123, 132, 133, 134, 135, 137, 138, 139, 141, 148, 171, 173, 179, 185, 186, 187, 188, 198, 199, 204, 205, 207, 216, 217, 219, 221, 222, 223, 224, 277, 286, 325, 326, 327, 333, 336, 341, 354, 364, 382, 390, 393, 400, 401, 402, 417, 418, 420, 426, 428, 429, 431, 442, 443, 447, 448], "spectrum": [106, 111], "speed": 89, "speedup": 90, "spell": 323, "split": [6, 58, 86, 146, 403, 417, 445, 460], "spreadsheet": 126, "sqrt": [6, 53, 85, 292, 305, 393, 404, 415], "squar": [6, 53, 147, 148, 167, 168, 170, 171, 172, 174, 175, 176, 182, 185, 186, 200, 222, 224, 345, 361, 392, 393, 404, 414, 418, 434, 437, 442, 443], "squeez": [6, 85, 97, 456], "src": 64, "stabl": [30, 412], "stack": [6, 57, 58, 86, 146, 169, 177, 180, 181, 182, 201, 323, 403, 423, 445], "stand": 141, "standard": [85, 121, 127, 130, 204, 210, 219, 222, 224, 293, 314, 341, 356, 363, 370, 379, 380, 381, 382, 383, 394, 418, 443, 456, 460], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 341, 370], "standard_t": 6, "start": [2, 3, 20, 36, 38, 90, 132, 139, 187, 198, 200, 401, 433, 436], "start_tim": 0, "state": 341, "statist": [449, 460], "std": [6, 85, 204, 219, 222, 224, 443, 456], "stdev": [341, 382], "step": [4, 20, 90, 139, 187, 198], "sticki": 87, "still": 44, "stop": [20, 139, 187, 198], "store": [139, 158, 159, 187, 198, 201, 328], "str": [37, 58, 87, 89, 90, 133, 136, 146, 188, 269, 403, 417, 445], "str_": 87, "straightforward": 151, "stride": [39, 40, 85, 278], "string": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 87, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448, 456], "string_repr": 90, "stringio": 188, "strongli": [4, 427], "struct": 87, "structur": [87, 188], "student": 383, "style": [40, 85, 278, 323, 390], "sub": [58, 80, 87, 89, 146, 186, 403, 417, 428, 431, 445], "subarrai": [87, 151], "subclass": [35, 162], "subdivid": 87, "subdtyp": 87, "subok": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 32, 40, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 62, 63, 66, 67, 83, 85, 92, 93, 95, 96, 98, 101, 126, 127, 128, 129, 130, 138, 142, 143, 147, 150, 153, 155, 156, 157, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 209, 210, 213, 278, 322, 324, 327, 331, 332, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 414, 415, 419, 424, 425, 438, 439, 448], "subscript": [89, 90], "subset": [3, 141, 416, 460], "subtract": 6, "subtyp": 390, "success": [343, 351, 360], "sugar": [78, 434, 437], "suggest": 80, "suit": 4, "suitabl": [85, 320, 405], "sum": [0, 3, 4, 6, 13, 44, 71, 73, 76, 79, 80, 81, 84, 85, 89, 144, 147, 152, 168, 175, 185, 193, 199, 201, 216, 217, 223, 285, 319, 343, 358, 360, 393, 426, 428, 456, 460], "sum_along_diagon": 428, "sum_of_weight": 44, "summari": 449, "summat": [84, 89, 90, 152, 186, 201, 328, 426], "suppli": [178, 341, 370], "support": [3, 9, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 62, 63, 65, 66, 67, 68, 69, 75, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 147, 148, 153, 154, 155, 156, 157, 164, 165, 166, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 278, 322, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 396, 398, 404, 406, 408, 409, 410, 412, 414, 415, 418, 419, 420, 422, 424, 425, 430, 438, 439, 441, 443, 447, 448, 464], "surnam": 87, "svd": [6, 168, 174, 177, 180], "swap": [87, 421], "swapax": [6, 85, 212, 456], "swapped_cod": 87, "swapped_dt": 87, "sy": 87, "sycl": [0, 3, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "sycl_context": 85, "sycl_devic": 85, "sycl_queu": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "sycldevic": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "syclqueu": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 278, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 431, 433, 436, 442, 447, 448], "symmetr": [167, 170, 171, 172, 173, 177, 180, 184], "symmetri": [107, 112], "syntact": [78, 434, 437], "syntax": 456, "sys_is_l": 87, "system": [3, 4, 183], "t": [58, 69, 85, 87, 167, 170, 172, 175, 320, 323, 383], "tabl": [2, 9, 449], "tack": 87, "take": [6, 57, 85, 200, 337, 396, 405, 423, 456], "take_along_axi": [6, 28, 29, 30, 55, 337, 422], "taken": [44, 80, 81, 90, 144, 201, 222, 224, 418, 428, 431, 433, 436, 443, 444], "tall": 120, "tan": [6, 25, 26, 66, 410, 425], "tangent": [18, 21, 22, 23, 24, 25, 26, 27, 66, 67, 410, 411, 424, 425], "tanh": [6, 27, 67, 411, 424], "target": [40, 52, 85, 278, 336], "target_devic": 85, "tau": 181, "tbb": 4, "tempfil": 133, "temporari": 133, "temporaryfil": 133, "ten": 351, "tensor": [15, 37, 68, 85, 89, 90, 99, 128, 129, 185, 186, 214, 215, 218, 220, 221, 330, 335, 422, 426], "tensordot": [6, 84, 89, 152, 185, 186, 201, 328], "tensorinv": [6, 186], "tensorsolv": [6, 185], "term": [13, 83, 90, 213, 419, 438], "test": [0, 2, 14, 15, 19, 93, 142, 143, 155, 156, 157, 158, 159, 165, 166, 221, 323, 324, 343, 456, 460], "test_repetit": 0, "test_typ": 0, "text": [132, 133, 135, 136, 188], "th": [73, 76, 79, 81, 85, 88, 100, 141, 151, 205, 320, 325, 429, 432, 434, 435, 437], "than": [32, 72, 73, 85, 121, 124, 125, 127, 134, 142, 143, 144, 145, 146, 164, 165, 166, 175, 177, 180, 181, 216, 217, 221, 223, 301, 333, 398, 408, 416, 417, 420, 426, 428, 439, 456], "thei": [15, 87, 172, 175, 403, 405, 426, 433, 436, 442, 445, 456], "them": [57, 456], "theor": 170, "theoret": 90, "therefor": [134, 171, 173], "thi": [11, 12, 16, 17, 20, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 56, 58, 62, 71, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 98, 101, 120, 121, 124, 125, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 171, 173, 175, 178, 179, 182, 187, 188, 191, 193, 198, 199, 200, 201, 202, 208, 210, 212, 214, 215, 218, 220, 221, 223, 278, 283, 288, 291, 301, 307, 310, 320, 323, 333, 336, 337, 339, 374, 376, 390, 393, 394, 396, 401, 403, 417, 420, 422, 423, 427, 434, 437, 442, 445, 446], "third": [57, 58, 86, 146, 403, 417, 445], "those": [56, 176, 337], "thousand": 351, "three": [41, 42, 43, 97, 176, 200, 341, 377, 426], "threshold": 177, "through": [35, 87, 145, 170, 172, 175, 200, 456], "throw": 358, "thu": 427, "tile": [6, 395, 460], "time": [0, 13, 15, 26, 46, 48, 49, 63, 81, 83, 84, 93, 127, 128, 129, 130, 142, 143, 147, 152, 157, 163, 164, 165, 166, 175, 193, 194, 196, 197, 203, 209, 210, 213, 324, 332, 343, 358, 394, 395, 398, 419, 423, 426, 427, 438, 444], "time_dpnp": 0, "time_numpi": 0, "timedelta": 87, "timeit": 89, "tini": 121, "titl": 87, "tm": 130, "to_begin": 88, "to_devic": 85, "to_end": 88, "tobyt": 6, "todo": 361, "tofil": [6, 133], "togeth": [15, 58, 87, 417, 446], "tol": [177, 359], "toler": [15, 33, 154], "tolist": 6, "too": [4, 446], "toolkit": 3, "tostr": 6, "total": [6, 68, 72, 85, 298, 418, 443], "toward": [126, 127, 144, 145, 210, 394, 439], "trace": [6, 76, 79, 80, 85, 89, 456], "traceback": 416, "transfer": 85, "transform": [90, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 449], "transpos": [6, 85, 89, 167, 172, 212, 226, 456, 460], "trapezoid": [420, 430], "trapz": [6, 420], "treat": [15, 133, 141, 171, 173, 175, 178, 188, 216, 217, 221, 223, 333, 337, 405, 423, 427, 456], "tri": 6, "trial": 343, "triangl": [76, 147, 200, 393, 431, 432, 433, 434, 435, 436, 437], "triangular": [6, 167, 171, 173, 181, 200, 433, 434, 436, 437], "trigonometr": [18, 21, 22, 23, 24, 25, 26, 27, 66, 67, 410, 411, 424, 425, 460], "tril": [6, 76, 200, 431, 433, 434, 436], "tril_indic": [6, 200, 434, 436], "tril_indices_from": [6, 437], "trili": 434, "trili1": 434, "trim_zero": 6, "triu": [6, 76, 200, 431, 433, 436, 437], "triu_indic": [6, 200, 433, 437], "triu_indices_from": [6, 434], "triui": 437, "triuim1": 437, "trivial": [170, 423], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 38, 40, 41, 44, 46, 47, 48, 49, 52, 53, 54, 59, 60, 62, 63, 64, 66, 67, 68, 69, 73, 82, 83, 85, 87, 89, 90, 93, 95, 96, 97, 98, 99, 101, 120, 123, 124, 125, 126, 127, 128, 129, 130, 134, 139, 142, 143, 144, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 174, 177, 179, 180, 181, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 230, 273, 274, 278, 283, 295, 296, 297, 302, 314, 316, 321, 322, 323, 324, 331, 332, 333, 334, 337, 346, 392, 393, 394, 396, 398, 399, 404, 408, 409, 410, 411, 414, 415, 418, 419, 420, 423, 424, 425, 426, 438, 439, 442, 443, 446], "true_divid": [6, 83], "trunc": [6, 31, 54, 126, 399, 402], "truncat": [31, 54, 126, 379, 399, 402, 439], "trust": [214, 215], "truth": [46, 47, 48, 49, 93, 142, 143, 153, 165, 166, 194, 195, 196, 197, 324, 456, 460], "try": 4, "tup": [57, 86, 146, 403, 445], "tupl": [14, 19, 28, 29, 32, 34, 35, 36, 38, 44, 51, 62, 71, 76, 77, 78, 79, 85, 87, 90, 97, 123, 134, 137, 138, 139, 141, 144, 145, 151, 163, 179, 181, 186, 187, 198, 199, 200, 201, 202, 204, 206, 207, 208, 218, 219, 220, 221, 222, 223, 224, 310, 320, 323, 325, 333, 393, 396, 400, 407, 416, 418, 420, 427, 429, 433, 434, 436, 437, 442, 443, 456], "turn": 57, "twister": 341, "two": [15, 33, 41, 42, 46, 47, 48, 49, 61, 65, 70, 79, 80, 81, 84, 85, 87, 89, 90, 97, 141, 152, 153, 154, 163, 171, 175, 178, 183, 194, 196, 197, 201, 202, 203, 208, 209, 212, 218, 220, 301, 317, 328, 341, 370, 399, 402, 421, 426, 428, 433, 434, 436, 437, 444], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 283, 287, 291, 307, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 460], "type_nam": 0, "typeerror": [15, 44, 64, 68, 102, 108, 116], "typenam": 6, "typestr": 87, "typic": [15, 405, 456], "u": [87, 167, 171, 173, 184, 200, 221, 223], "u1": [87, 132, 133], "u16": 87, "u4": 52, "u8": 87, "ufunc": [2, 449, 456], "uint64": 87, "uint8": [87, 132, 133], "un": 87, "unari": 456, "undefin": [18, 85, 301], "underli": [46, 48, 49, 396], "undocu": 87, "unexpect": [221, 223], "unicod": 87, "uniform": [6, 87, 141, 144, 145, 198, 341, 368, 371, 373, 374, 376], "uniformli": [198, 341, 385], "uniniti": [32, 91, 92, 137, 326, 447], "union1d": 6, "uniqu": [6, 44, 45, 71, 82, 87, 199, 204, 212, 219, 222, 224, 393, 418, 443], "unit": [85, 170, 176, 182, 315], "unitari": [141, 181, 184], "uniti": 144, "univers": [2, 449, 456], "unless": [14, 19, 40, 72, 73, 85, 89, 144, 170, 177, 179, 198, 216, 217, 221, 223, 278, 333, 420], "unlik": [30, 85, 307, 412], "unmodifi": 145, "unpackbit": 6, "unravel_index": [6, 28, 29], "unsaf": [40, 52, 58, 64, 85, 89, 146, 201, 278, 403, 417, 445], "unsign": [87, 333, 420], "unspecifi": 396, "unsupport": [11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 63, 66, 67, 83, 95, 96, 98, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 147, 153, 164, 190, 191, 192, 193, 203, 209, 210, 211, 213, 322, 331, 332, 334, 392, 394, 398, 399, 404, 408, 409, 410, 411, 419, 424, 425, 430, 438, 439], "until": [90, 400, 401], "unwrap": [6, 74, 339], "up": [4, 87, 89, 125, 434], "updat": 4, "uplo": [171, 173], "upon": [85, 315], "upper": [76, 100, 144, 145, 167, 171, 173, 181, 200, 431, 433, 434, 435, 436, 437], "us": [4, 13, 20, 32, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 52, 56, 58, 62, 70, 72, 73, 76, 77, 79, 80, 83, 85, 87, 89, 90, 91, 92, 93, 97, 100, 101, 120, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 164, 165, 166, 167, 168, 171, 172, 173, 175, 177, 178, 179, 180, 187, 188, 194, 196, 198, 200, 201, 202, 204, 206, 207, 208, 210, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 232, 278, 283, 291, 322, 323, 324, 325, 326, 327, 331, 332, 333, 337, 341, 344, 346, 347, 357, 362, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 382, 385, 390, 394, 395, 396, 398, 400, 405, 408, 413, 418, 419, 420, 422, 423, 426, 427, 428, 430, 431, 433, 434, 436, 437, 438, 442, 443, 446, 447, 448, 456], "usag": [3, 4], "use_getitem": 87, "use_setitem": 87, "user": 87, "usm": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 416, 431, 433, 436, 442, 447, 448], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 95, 96, 97, 98, 99, 101, 120, 123, 124, 125, 126, 127, 128, 129, 130, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 437, 438, 439, 443, 444, 445, 446, 448], "usm_typ": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 85, 91, 92, 100, 132, 133, 134, 135, 136, 137, 138, 139, 148, 151, 187, 188, 198, 200, 207, 325, 326, 327, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 382, 385, 431, 433, 436, 442, 447, 448], "usual": [77, 87, 201], "util": 449, "v": [61, 76, 79, 85, 87, 170, 171, 309, 336, 405], "v0": 6, "v1": 6, "v10": 87, "v9": 6, "val": [85, 120, 122, 268, 303, 330], "valid": [65, 97, 200, 421, 433, 434, 436, 437], "valu": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 76, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 108, 120, 121, 122, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 151, 153, 155, 156, 157, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 228, 229, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 270, 271, 272, 275, 276, 278, 280, 283, 288, 290, 301, 303, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 351, 368, 369, 385, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 404, 405, 406, 408, 409, 410, 412, 414, 415, 418, 419, 420, 422, 423, 424, 425, 428, 433, 436, 438, 439, 441, 443, 446, 447, 448, 456, 460], "value2": 87, "valueerror": [214, 215, 396, 416], "vander": 6, "vandermond": 442, "var": [6, 85, 204, 219, 222, 224, 418, 456], "vararg": 141, "vari": [14, 18, 19, 80, 90, 134, 151, 168, 170, 171, 175, 179, 219, 222, 224], "variabl": [69, 175, 183], "varianc": [85, 204, 219, 222, 224, 321, 418, 443, 460], "variou": 464, "vdot": [6, 84, 201], "vector": [70, 89, 134, 152, 168, 177, 178, 179, 184, 201, 206, 328, 444, 460], "vendor": 4, "veri": [3, 15, 206], "verif": 0, "verifi": 167, "version": [4, 85, 87, 290, 323], "vertic": [57, 58, 80, 86, 120, 123, 124, 146, 403, 417, 445], "vh": 184, "view": [6, 41, 42, 43, 50, 76, 80, 85, 97, 123, 124, 125, 206, 212, 226, 307, 320, 337, 396, 416, 421, 429], "violat": 64, "void": 87, "void640": 87, "von": 386, "vonmis": 6, "vsplit": [6, 58], "vstack": [6, 57, 58, 86, 146, 175, 403, 417], "w": [44, 170, 171, 172, 173, 176], "wa": [71, 87, 178, 199, 218, 220, 222, 224, 341, 382, 393, 418, 443], "wai": [3, 4, 85, 90, 133, 301, 426], "wald": 6, "walk": 87, "want": [4, 423], "warn": [87, 214, 215, 359], "we": [62, 77, 80, 90, 120, 175, 200, 337, 423], "weibul": [6, 389], "weight": [44, 45, 69, 144, 145, 204, 219, 420], "well": [87, 89, 133, 144, 145, 333, 343, 360, 379], "were": [58, 134, 341, 370, 417], "what": [40, 52, 58, 64, 85, 87, 89, 93, 146, 201, 278, 343, 360, 403, 417, 445, 456], "when": [20, 32, 34, 35, 36, 38, 39, 40, 44, 62, 64, 82, 85, 87, 139, 170, 179, 181, 187, 198, 200, 201, 210, 216, 217, 218, 220, 221, 223, 278, 394, 399, 401, 402, 422, 426, 446], "whenev": [97, 421, 429], "where": [0, 6, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 64, 66, 67, 71, 76, 77, 79, 81, 82, 83, 85, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 175, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 213, 218, 219, 220, 221, 222, 223, 224, 273, 274, 278, 295, 296, 297, 302, 309, 314, 316, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 341, 363, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 385, 392, 393, 394, 398, 399, 401, 404, 405, 408, 409, 410, 411, 414, 415, 418, 419, 420, 424, 425, 428, 429, 431, 433, 436, 438, 439, 442, 443, 447, 448], "wherev": 64, "whether": [14, 15, 19, 71, 82, 87, 167, 181, 187, 221, 223, 396, 409], "which": [3, 4, 14, 19, 28, 29, 30, 34, 35, 40, 44, 50, 58, 64, 71, 72, 73, 77, 79, 80, 81, 82, 84, 85, 87, 89, 90, 97, 101, 121, 123, 134, 135, 139, 141, 144, 145, 146, 155, 156, 157, 158, 159, 167, 170, 177, 179, 186, 198, 199, 200, 201, 202, 204, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 278, 323, 333, 336, 393, 395, 400, 412, 416, 417, 418, 420, 428, 429, 431, 432, 433, 435, 436, 439, 443, 446, 456], "whichev": 152, "while": [144, 145, 204, 219, 222, 224, 323, 333, 400, 418, 420, 431, 443], "whitespac": [133, 136], "who": 6, "whole": [433, 436], "whose": [11, 12, 80, 87, 100, 120, 168, 171, 172, 173, 185, 200, 212, 400, 434, 437], "wide": 120, "width": [87, 144, 145], "wild": [343, 360], "window": 4, "wise": [11, 12, 13, 15, 18, 21, 22, 23, 24, 25, 26, 27, 31, 33, 46, 47, 48, 49, 53, 54, 57, 58, 59, 60, 63, 66, 67, 71, 83, 85, 86, 93, 95, 96, 98, 101, 126, 127, 128, 129, 130, 142, 143, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 208, 209, 210, 211, 213, 218, 220, 221, 282, 322, 324, 331, 332, 334, 391, 392, 394, 398, 399, 402, 403, 404, 408, 409, 410, 411, 414, 415, 417, 419, 424, 425, 438, 439, 445, 456, 460, 464], "within": [15, 20, 33, 40, 85, 89, 144, 145, 154, 278, 336, 341, 385], "without": [80, 85, 91, 310, 320, 390, 396, 456], "won": 87, "word": [126, 172, 341, 385], "work": [4, 31, 39, 74, 339, 423, 456], "world": [87, 343, 360], "would": [30, 58, 85, 87, 134, 151, 178, 200, 201, 301, 341, 412, 417, 423, 429], "wrap": [74, 85, 120, 303, 318, 336, 339, 405, 422], "wrapper": 85, "write": [76, 80, 85, 120, 133, 291, 396], "written": [71, 120, 133, 199, 393, 446], "x": [0, 3, 4, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 42, 43, 47, 50, 51, 53, 54, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 76, 79, 81, 82, 85, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 126, 132, 133, 134, 135, 137, 138, 139, 141, 148, 150, 151, 153, 155, 156, 157, 158, 159, 168, 172, 175, 179, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 211, 212, 278, 283, 292, 293, 305, 322, 323, 325, 326, 327, 330, 331, 333, 334, 335, 359, 365, 390, 391, 392, 393, 395, 399, 400, 401, 402, 404, 408, 409, 410, 411, 414, 415, 416, 421, 422, 424, 425, 430, 431, 439, 440, 442, 446, 447, 448], "x0": [36, 38, 62, 79, 327, 442, 448], "x00": 133, "x01": [132, 133], "x02": [132, 133], "x03": [132, 133], "x04": [132, 133], "x05": 132, "x1": [13, 15, 18, 25, 26, 40, 45, 46, 48, 49, 55, 63, 65, 74, 75, 83, 85, 88, 93, 127, 128, 129, 130, 142, 143, 147, 154, 164, 165, 166, 193, 194, 195, 196, 197, 201, 203, 205, 206, 209, 210, 211, 213, 278, 322, 324, 329, 331, 332, 338, 339, 340, 378, 394, 398, 400, 419, 430, 438, 441], "x1_i": [13, 26, 46, 48, 49, 63, 83, 93, 127, 130, 142, 143, 147, 164, 165, 166, 193, 194, 196, 197, 210, 213, 324, 332, 394, 398, 419, 438], "x2": [13, 14, 15, 18, 19, 25, 26, 32, 46, 48, 49, 63, 65, 83, 93, 127, 128, 129, 130, 142, 143, 147, 154, 164, 165, 166, 193, 194, 195, 196, 197, 201, 203, 206, 209, 210, 213, 322, 324, 331, 332, 394, 398, 400, 414, 419, 438], "x2_i": [13, 26, 46, 48, 49, 63, 83, 93, 127, 130, 142, 143, 147, 164, 165, 166, 193, 194, 196, 197, 210, 213, 324, 332, 394, 398, 419, 438], "x3": [14, 19], "x_i": [11, 12, 18, 21, 22, 23, 24, 25, 27, 47, 53, 54, 59, 60, 66, 67, 95, 96, 98, 126, 150, 153, 189, 190, 191, 192, 195, 322, 331, 334, 391, 392, 399, 402, 404, 408, 409, 410, 411, 414, 415, 424, 425, 439], "xi": [192, 206], "xn": 206, "xor": [46, 47, 48, 49, 153, 194, 195, 196, 197], "xv": 206, "xx": 206, "xy": 206, "y": [0, 4, 20, 32, 34, 35, 36, 38, 41, 50, 62, 69, 70, 79, 85, 87, 91, 92, 97, 100, 132, 133, 134, 135, 137, 138, 139, 141, 148, 158, 159, 168, 175, 187, 188, 198, 206, 207, 211, 283, 307, 325, 326, 327, 430, 431, 442, 446, 447, 448], "y1": 430, "yet": [4, 6], "yield": [30, 221, 223, 323, 341, 446, 456], "you": [4, 80, 200, 423, 456], "your": [4, 80], "yv": 206, "yy": 206, "z": [14, 19, 20, 32, 34, 35, 36, 38, 62, 79, 91, 92, 100, 132, 133, 134, 135, 137, 138, 139, 148, 187, 188, 198, 206, 207, 325, 326, 327, 351, 431, 442, 447, 448], "zero": [6, 14, 19, 30, 32, 68, 71, 77, 81, 85, 91, 92, 100, 106, 111, 120, 126, 133, 137, 138, 148, 158, 159, 164, 170, 171, 173, 175, 176, 177, 180, 184, 199, 200, 202, 204, 208, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 300, 315, 323, 326, 327, 333, 341, 343, 371, 373, 374, 376, 393, 408, 412, 418, 420, 426, 431, 432, 435, 439, 443, 446, 448], "zeros_lik": [6, 32, 92, 138, 327, 447], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.flatiter", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 227, "__add__": 228, "__and__": 229, "__bool__": 230, "__complex__": 231, "__copy__": 232, "__eq__": 233, "__float__": 234, "__floordiv__": 235, "__ge__": 236, "__getitem__": 237, "__gt__": 238, "__iadd__": 239, "__iand__": 240, "__ifloordiv__": 241, "__ilshift__": 242, "__imod__": 243, "__imul__": 244, "__int__": 245, "__invert__": 246, "__ior__": 247, "__ipow__": 248, "__irshift__": 249, "__isub__": 250, "__itruediv__": 251, "__ixor__": 252, "__le__": 253, "__len__": 254, "__lshift__": 255, "__lt__": 256, "__matmul__": 257, "__mod__": 258, "__mul__": 259, "__ne__": 260, "__neg__": 261, "__new__": 262, "__or__": 263, "__pos__": 264, "__pow__": 265, "__repr__": 266, "__rshift__": 267, "__setitem__": 268, "__str__": 269, "__sub__": 270, "__truediv__": 271, "__xor__": 272, "ab": 11, "absolut": 12, "ad": 453, "add": 13, "algebra": [6, 451], "all": [14, 273], "allclos": 15, "amax": 16, "amin": 17, "anaconda": 4, "angl": 18, "ani": [19, 274], "api": [1, 449], "arang": 20, "arcco": 21, "arccosh": 22, "arcsin": 23, "arcsinh": 24, "arctan": 25, "arctan2": 26, "arctanh": 27, "argmax": [28, 275], "argmin": [29, 276], "argsort": [30, 277], "arithmet": [454, 456, 458], "around": 31, "arrai": [6, 7, 9, 32, 450, 452, 453, 456], "array_equ": 33, "asanyarrai": 34, "asarrai": 35, "ascontiguousarrai": 36, "asfarrai": 37, "asfortranarrai": 38, "asnumpi": 39, "astyp": [40, 278], "atleast_1d": 41, "atleast_2d": 42, "atleast_3d": 43, "attribut": 456, "avail": [9, 464], "averag": [44, 463], "backend": 1, "basic": [453, 458], "beta": 342, "binari": 5, "bincount": 45, "binomi": 343, "bit": [5, 464], "bitwise_and": 46, "bitwise_not": 47, "bitwise_or": 48, "bitwise_xor": 49, "broadcast_arrai": 50, "broadcast_to": 51, "build": [4, 7], "byte": 344, "c": 1, "calcul": 456, "can_cast": 52, "cbrt": 53, "ceil": 54, "chang": 453, "chisquar": 345, "choic": 346, "choleski": 167, "choos": [55, 279], "class": 7, "clip": [56, 280], "co": 66, "column_stack": 57, "comparison": [6, 452, 456, 464], "complex": 454, "concaten": 58, "cond": 168, "conda": 4, "conj": [59, 281], "conjug": [60, 282], "construct": 456, "control": 0, "convers": 456, "convolv": 61, "copi": [62, 283], "copysign": 63, "copyto": 64, "correl": [65, 463], "cosh": 67, "count": 461, "count_nonzero": 68, "cov": 69, "creat": 8, "creation": 7, "cross": 70, "cumlogsumexp": 71, "cumprod": [72, 284], "cumsum": [73, 285], "cupi": 6, "data": [0, 2, 7, 8, 9, 450, 456, 459], "decomposit": 451, "deg2rad": 74, "degre": 75, "det": 169, "develop": 2, "devic": 4, "diag": 76, "diag_indic": 77, "diag_indices_from": 78, "diagflat": 79, "diagon": [80, 286], "diff": 81, "differ": 454, "digit": 82, "dimens": 453, "dimension": [6, 456], "dirichlet": 347, "discret": 6, "distribut": 459, "divid": 83, "dot": 84, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459], "dpnp_arrai": 85, "driver": 4, "dstack": 86, "dtype": [87, 287], "ediff1d": 88, "eig": 170, "eigenvalu": 451, "eigh": 171, "eigval": 172, "eigvalsh": 173, "einsum": 89, "einsum_path": 90, "element": [5, 453], "empti": 91, "empty_lik": 92, "equal": 93, "equat": 451, "erf": 94, "error": 462, "exampl": [0, 4], "exist": 7, "exp": 95, "exp2": 96, "expand_dim": 97, "expm1": 98, "expon": 454, "exponenti": 348, "extens": 2, "extract": 99, "extrema": 454, "ey": 100, "f": 349, "fab": 101, "fft": [10, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "fft2": 103, "fftfreq": 104, "fftn": 105, "fftshift": 106, "fill": 288, "fill_diagon": 120, "find": 454, "finfo": 121, "flag": 289, "flat": 290, "flatit": 122, "flatten": 291, "flip": 123, "fliplr": 124, "flipud": 125, "float": [454, 464], "floor": 126, "floor_divid": 127, "fmax": 128, "fmin": 129, "fmod": 130, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 131, "frombuff": 132, "fromfil": 133, "fromfunct": 134, "fromit": 135, "fromstr": 136, "full": 137, "full_lik": 138, "function": [10, 452, 454, 462, 463, 464], "gamma": 350, "gener": [450, 459], "geometr": 351, "geomspac": 139, "get_includ": 140, "gradient": 141, "greater": 142, "greater_equ": 143, "guid": 4, "gumbel": 352, "handl": 454, "helper": 10, "hermitian": 10, "hfft": 107, "histogram": [144, 463], "histogram_bin_edg": 145, "hstack": 146, "hyperbol": 454, "hypergeometr": 353, "hypot": 147, "ident": 148, "ifft": 108, "ifft2": 109, "ifftn": 110, "ifftshift": 111, "ihfft": 112, "iinfo": 149, "imag": [150, 292], "index": [450, 456], "indic": 151, "infin": 452, "inform": [2, 8], "inner": 152, "insert": 450, "instal": 4, "interplai": 0, "interpret": 4, "inv": 174, "invert": 153, "irfft": 113, "irfft2": 114, "irfftn": 115, "isclos": 154, "isfinit": 155, "isinf": 156, "isnan": 157, "isneginf": 158, "isposinf": 159, "isscalar": 160, "issubdtyp": 161, "issubsctyp": 162, "item": [293, 456], "items": 294, "iter": 450, "join": 453, "kind": 453, "kron": 163, "laplac": 354, "layout": 456, "left_shift": 164, "less": 165, "less_equ": 166, "level": 6, "librari": 0, "like": [450, 453], "linalg": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "linear": [6, 451], "linspac": 187, "loadtxt": 188, "log": 189, "log10": 190, "log1p": 191, "log2": 192, "logaddexp": 193, "logarithm": 454, "logic": 452, "logical_and": 194, "logical_not": 195, "logical_or": 196, "logical_xor": 197, "logist": 355, "lognorm": 356, "logseri": 357, "logspac": 198, "logsumexp": 199, "lstsq": 175, "manipul": [453, 456], "mask_indic": 200, "math": 464, "mathemat": 454, "matmul": 201, "matric": 7, "matrix": [7, 451, 456], "matrix_pow": 176, "matrix_rank": 177, "max": [202, 295], "maximum": 203, "mean": [204, 296], "median": 205, "memori": 456, "meshgrid": 206, "method": 456, "mgrid": 207, "min": [208, 297], "minimum": 209, "miscellan": [8, 454, 455], "mod": 210, "modf": 211, "modul": [6, 458], "moveaxi": 212, "multi": [6, 456], "multi_dot": 178, "multinomi": 358, "multipl": 456, "multipli": 213, "multivariate_norm": 359, "nan": 452, "nanargmax": 214, "nanargmin": 215, "nancumprod": 216, "nancumsum": 217, "nanmax": 218, "nanmean": 219, "nanmin": 220, "nanprod": 221, "nanstd": 222, "nansum": 223, "nanvar": 224, "nbyte": 298, "ndarrai": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 456], "ndim": 299, "neg": 322, "negative_binomi": 360, "noncentral_chisquar": 361, "noncentral_f": 362, "nonzero": [300, 323], "norm": [179, 451], "normal": 363, "not_equ": 324, "number": [451, 453, 454], "numer": 7, "numpi": [2, 6], "ogrid": 325, "ones": 326, "ones_lik": 327, "oper": [5, 450, 452, 453, 454, 456, 464], "order": 463, "other": [451, 454, 456], "outer": 328, "output": 5, "over": 450, "overview": 3, "pack": 5, "packag": [4, 458], "pad": 457, "parallel": [0, 2], "pareto": 364, "partit": [301, 329], "permut": [365, 459], "pinv": 180, "place": 330, "point": 454, "poisson": 366, "poly1d": 458, "polynomi": 458, "polyutil": 458, "posit": 331, "power": [332, 367], "prod": [302, 333], "product": [451, 454], "proj": 334, "ptp": 335, "put": [303, 336], "put_along_axi": 337, "putmask": 338, "python": 4, "qr": 181, "quick": 4, "rad2deg": 339, "radian": 340, "rand": 368, "randint": 369, "randn": 370, "random": [6, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 459], "random_integ": 372, "random_sampl": 373, "randomst": 341, "ranf": 374, "rang": 7, "ration": 454, "ravel": [304, 390], "rayleigh": 375, "real": [10, 305, 391], "rearrang": 453, "reciproc": 392, "reduce_hypot": 393, "refer": [1, 449], "remaind": 394, "remov": 453, "repeat": [306, 395], "reshap": [307, 396], "result_typ": 397, "rfft": 116, "rfft2": 117, "rfftfreq": 118, "rfftn": 119, "right_shift": 398, "rint": 399, "roll": 400, "rollaxi": 401, "round": [308, 402, 454], "routin": [7, 8, 10, 450, 453, 454, 455, 460], "row_stack": 403, "rsqrt": 404, "sampl": [6, 376, 459], "scikit": 4, "search": 461, "searchsort": [309, 405], "seed": 377, "select": [406, 456], "shape": [7, 310, 407, 453, 456], "shuffl": 378, "sign": 408, "signbit": 409, "simpl": 459, "sin": 410, "sinh": 411, "size": 311, "slogdet": 182, "solv": [183, 451], "sort": [312, 412, 461], "sort_complex": 413, "special": [454, 456, 462], "split": 453, "sqrt": 414, "squar": 415, "squeez": [313, 416], "stack": 417, "standard": 10, "standard_cauchi": 379, "standard_exponenti": 380, "standard_gamma": 381, "standard_norm": 382, "standard_t": 383, "start": 4, "statist": 463, "std": [314, 418], "stride": 315, "subtract": 419, "sum": [316, 420, 454], "summari": 6, "svd": 184, "swapax": [317, 421], "t": 226, "tabl": 6, "take": [318, 422], "take_along_axi": 423, "tan": 424, "tanh": 425, "tensordot": 426, "tensorinv": 185, "tensorsolv": 186, "test": [4, 8, 452], "tile": [427, 453], "trace": [319, 428], "transform": 6, "transpos": [320, 429, 453], "trapz": 430, "tri": 431, "triangular": 384, "trigonometr": [454, 464], "tril": 432, "tril_indic": 433, "tril_indices_from": 434, "triu": 435, "triu_indic": 436, "triu_indices_from": 437, "true_divid": 438, "trunc": 439, "truth": 452, "twiddl": 464, "type": [8, 9, 452, 456], "ufunc": 464, "uniform": 385, "uniqu": 440, "univers": 464, "unwrap": 441, "util": 455, "valu": [7, 452], "vander": 442, "var": [321, 443], "varianc": 463, "vdot": 444, "vector": 451, "vonmis": 386, "vstack": 445, "wald": 387, "weibul": 388, "where": 446, "wise": 5, "zero": 447, "zeros_lik": 448, "zipf": 389}})