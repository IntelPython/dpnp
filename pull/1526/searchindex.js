Search.setIndex({"docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/difference", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diff", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linspace", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.negative", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round_", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.sign", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.triu", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/difference.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round_.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table", "Array Creation Routines", "Difference with NumPy*", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_to", "dpnp.cbrt", "dpnp.ceil", "dpnp.concatenate", "dpnp.conj", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diagflat", "dpnp.diff", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.fromfile", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isscalar", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.inv", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.qr", "dpnp.linalg.svd", "dpnp.linspace", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanprod", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.negative", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.power", "dpnp.prod", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.reciprocal", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.right_shift", "dpnp.rollaxis", "dpnp.round_", "dpnp.searchsorted", "dpnp.sign", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.triu", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "terms": {"provid": [0, 6, 71, 184, 212, 215, 263, 271, 288], "api": [0, 2, 3, 6, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 252], "manag": 0, "specif": [0, 4], "sycl": [0, 3, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "resourc": 0, "base": [0, 4, 111, 142, 144, 147, 152, 180], "python": [0, 2, 3, 71, 252], "packag": [0, 3, 284], "an": [0, 3, 4, 11, 13, 15, 16, 17, 18, 26, 27, 28, 30, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 50, 53, 71, 72, 73, 74, 75, 76, 77, 81, 108, 110, 112, 113, 121, 128, 132, 138, 140, 154, 156, 163, 164, 175, 176, 177, 179, 180, 184, 186, 191, 192, 194, 203, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 232, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 252, 253, 258, 260, 261, 262, 265, 271, 272, 273], "below": [0, 4, 138, 140, 260, 262], "demonstr": [0, 4], "how": [0, 4], "extens": [0, 1, 3, 4, 112, 274], "numpi": [0, 1, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 284], "can": [0, 3, 4, 12, 43, 44, 45, 46, 69, 70, 71, 77, 108, 114, 115, 121, 128, 129, 130, 148, 150, 151, 162, 165, 173, 174, 178, 180, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 235, 237, 238, 251], "easili": 0, "combin": [0, 81], "devic": [0, 2, 3, 18, 30, 32, 33, 34, 35, 36, 71, 75, 76, 83, 109, 110, 143, 176, 177, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 248, 272, 273], "interfac": 0, "dpctl": [0, 4, 11, 12, 13, 17, 43, 44, 45, 46, 47, 50, 57, 69, 70, 71, 76, 77, 110, 114, 115, 121, 123, 124, 125, 128, 129, 130, 134, 144, 148, 149, 150, 151, 156, 158, 162, 164, 165, 173, 174, 177, 178, 180, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 235, 238, 243, 246, 247, 248, 249, 251, 252, 258, 261, 262, 271, 273], "liter": 0, "queue": [0, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "from": [0, 3, 26, 27, 28, 32, 33, 50, 55, 64, 65, 71, 80, 108, 158, 175, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 247, 248, 249, 266, 271, 284], "allow": [0, 71], "set": [0, 30, 71, 75, 109, 138, 140, 176, 177, 272, 273], "input": [0, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 84, 96, 97, 98, 99, 100, 102, 103, 104, 107, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 206, 212, 228, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 266, 268, 271, 272, 273], "current": [0, 11, 12, 14, 21, 23, 24, 43, 44, 45, 46, 49, 50, 54, 61, 62, 63, 69, 70, 71, 72, 84, 103, 104, 107, 113, 118, 119, 120, 121, 128, 155, 161, 162, 163, 165, 166, 167, 168, 169, 172, 180, 234, 235, 238, 242, 245, 249, 251, 254, 256, 259, 264], "usabl": 0, "insid": 0, "context": 0, "": [0, 3, 4, 71, 86, 88, 92, 93, 97, 98, 100, 102, 138, 140, 142, 184, 185, 186, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 280], "scope": [0, 4], "thi": [0, 15, 16, 35, 37, 64, 71, 105, 106, 108, 112, 140, 162, 182, 217, 219, 237, 263, 269, 271], "wai": [0, 3, 4, 71, 108], "arrai": [0, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 92, 93, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 284], "creation": [0, 74, 274, 284], "function": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 139, 140, 143, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 187, 189, 190, 200, 205, 221, 233, 234, 235, 236, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 261, 262, 263, 264, 268, 269, 271, 272, 273, 274, 284], "dpnp": [0, 3, 4, 6, 8, 274, 277, 280, 284, 285, 288], "which": [0, 3, 4, 32, 33, 71, 131, 138, 140, 173, 248, 249], "i": [0, 3, 4, 6, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 113, 118, 119, 121, 122, 123, 124, 125, 126, 128, 131, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 166, 167, 168, 169, 170, 172, 173, 176, 177, 179, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 266, 268, 271, 272, 273, 280], "defin": [0, 71], "alloc": [0, 3, 4, 164, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 248], "us": [0, 4, 12, 28, 43, 44, 45, 46, 69, 71, 77, 81, 103, 108, 111, 112, 114, 115, 121, 128, 129, 130, 131, 143, 148, 150, 152, 158, 165, 173, 174, 184, 187, 189, 190, 200, 205, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 225, 228, 235, 237, 238, 251, 259], "import": [0, 3, 4, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 103, 104, 107, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 209, 218, 222, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273], "np": [0, 3, 4, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 103, 104, 107, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 181, 183, 209, 218, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 273], "device_context": 0, "opencl": 0, "gpu": [0, 3, 4], "x": [0, 3, 4, 10, 11, 13, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 34, 36, 44, 47, 48, 49, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 66, 71, 72, 75, 76, 78, 79, 80, 81, 82, 84, 103, 107, 109, 110, 111, 113, 120, 121, 123, 124, 125, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 161, 163, 164, 166, 167, 172, 173, 176, 177, 178, 180, 202, 208, 233, 234, 236, 237, 242, 243, 244, 246, 247, 248, 252, 253, 254, 255, 256, 259, 264, 265, 267, 271, 272, 273], "1": [0, 3, 4, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 32, 33, 34, 36, 38, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 110, 111, 113, 115, 116, 119, 120, 122, 128, 129, 130, 134, 136, 139, 140, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 191, 193, 195, 197, 198, 199, 201, 202, 203, 206, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 223, 225, 228, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273], "2": [0, 3, 4, 10, 11, 12, 18, 20, 22, 26, 27, 28, 29, 30, 32, 33, 34, 36, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 86, 92, 97, 100, 103, 104, 107, 113, 114, 115, 116, 120, 128, 129, 130, 134, 136, 139, 140, 142, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 188, 192, 196, 202, 208, 211, 213, 224, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273], "3": [0, 3, 4, 6, 12, 18, 19, 26, 27, 28, 29, 30, 32, 33, 34, 36, 41, 43, 46, 47, 48, 50, 52, 53, 56, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 76, 77, 78, 79, 80, 82, 103, 104, 107, 113, 116, 118, 119, 120, 128, 142, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 173, 174, 175, 177, 178, 180, 181, 184, 188, 192, 199, 202, 208, 211, 212, 213, 223, 227, 230, 233, 234, 235, 236, 237, 238, 239, 245, 246, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 265, 266, 267, 268, 271, 273], "sum": [0, 3, 4, 6, 12, 63, 70, 71, 116, 153, 167, 169, 186, 201, 203, 257, 284], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280], "more": [0, 3, 4, 30, 138, 139, 249, 261, 262], "inform": [0, 34, 36, 71], "pleas": [0, 3, 280], "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280], "document": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280], "time": [0, 12, 43, 45, 46, 69, 70, 77, 114, 115, 125, 128, 129, 130, 148, 150, 151, 162, 165, 174, 178, 180, 186, 201, 235, 238, 251], "def": 0, "run": [0, 4], "executor": 0, "size": [0, 6, 30, 50, 56, 60, 61, 71, 111, 140, 143, 152, 176, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 248, 249, 250, 268, 272], "test_typ": 0, "repetit": 0, "reshap": [0, 6, 12, 26, 27, 66, 69, 71, 81, 154, 160, 165, 208, 251], "arang": [0, 6, 12, 26, 27, 41, 42, 65, 66, 69, 71, 77, 79, 80, 82, 110, 111, 116, 143, 145, 146, 148, 149, 150, 151, 152, 154, 158, 160, 165, 174, 177, 183, 208, 235, 251, 271, 273], "dtype": [0, 8, 11, 12, 18, 24, 30, 32, 33, 34, 35, 36, 43, 44, 45, 46, 50, 54, 57, 60, 69, 71, 75, 76, 77, 83, 104, 107, 109, 110, 111, 113, 114, 115, 118, 119, 121, 123, 124, 125, 128, 129, 130, 142, 143, 144, 148, 149, 150, 151, 152, 155, 156, 161, 162, 165, 170, 174, 176, 177, 180, 181, 184, 206, 212, 228, 235, 238, 243, 246, 247, 249, 250, 251, 252, 257, 260, 268, 272, 273], "_": [0, 249], "rang": [0, 116, 203, 208, 249, 266, 284], "start_tim": 0, "perf_count": 0, "result": [0, 4, 10, 11, 13, 17, 43, 44, 45, 46, 49, 54, 61, 62, 63, 71, 72, 84, 103, 107, 113, 120, 121, 123, 124, 125, 128, 140, 148, 149, 150, 151, 155, 161, 163, 166, 167, 172, 178, 180, 184, 186, 216, 237, 238, 242, 252, 256, 264], "end_tim": 0, "append": [0, 6, 68], "return": [0, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 61, 62, 63, 69, 70, 71, 73, 74, 75, 76, 77, 78, 83, 103, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 158, 160, 163, 164, 165, 166, 167, 173, 174, 176, 177, 178, 179, 180, 184, 187, 206, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 232, 233, 234, 235, 237, 238, 242, 243, 245, 246, 247, 248, 249, 251, 252, 256, 257, 258, 261, 262, 269, 271, 272, 273], "median": [0, 6], "get_dtyp": 0, "_dtypes_list": 0, "int32": [0, 8, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 108, 184, 186, 194, 196, 201, 203, 209, 212, 228], "int64": [0, 8, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 108], "float32": [0, 8, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 108, 184, 206, 211, 213, 214, 216, 217, 219, 225, 228], "select_default_devic": 0, "has_aspect_fp64": 0, "float64": [0, 8, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 108, 184, 185, 191, 192, 193, 195, 197, 198, 199, 206, 207, 210, 211, 213, 214, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 260], "test_repetit": 0, "5": [0, 6, 12, 13, 18, 25, 26, 29, 41, 42, 43, 45, 46, 49, 50, 52, 56, 59, 61, 62, 63, 66, 69, 71, 72, 78, 103, 104, 107, 111, 113, 116, 118, 128, 134, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 164, 165, 173, 175, 176, 177, 180, 184, 185, 186, 188, 191, 203, 207, 208, 209, 210, 213, 216, 231, 233, 234, 235, 237, 238, 239, 242, 249, 252, 256, 258, 260, 261, 262, 264, 266, 267, 271, 272, 273], "type_nam": 0, "name": [0, 6], "print": [0, 4, 30, 42, 52, 75, 116, 184, 203, 208, 265], "f": [0, 6, 34, 36, 71, 75, 76, 83, 109, 110, 176, 177, 205, 237, 272, 273], "test": [0, 2, 13, 17, 123, 124, 125, 186, 284], "type": [0, 3, 4, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 84, 103, 104, 107, 108, 109, 110, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 264, 266, 268, 271, 272, 273, 274, 284], "each": [0, 11, 42, 50, 57, 71, 134, 135, 158, 186, 203, 243, 246, 249], "64": [0, 4, 29], "128": 0, "256": 0, "512": 0, "1024": 0, "2048": 0, "4096": 0, "time_numpi": 0, "result_numpi": 0, "time_dpnp": 0, "result_dpnp": 0, "verif": 0, "true": [0, 11, 12, 13, 14, 17, 24, 30, 31, 34, 36, 43, 44, 45, 46, 53, 54, 55, 57, 60, 69, 71, 77, 81, 104, 107, 111, 114, 115, 116, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 138, 140, 142, 143, 144, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 165, 174, 180, 181, 189, 235, 237, 238, 243, 246, 247, 251, 252, 263, 267, 271], "els": 0, "msg": 0, "n": [0, 4, 68, 72, 83, 85, 87, 88, 90, 91, 93, 95, 96, 98, 99, 101, 102, 119, 138, 140, 158, 186, 201, 203, 213, 223, 247, 260, 267], "4": [0, 12, 13, 18, 29, 30, 41, 43, 45, 50, 52, 57, 61, 62, 63, 66, 67, 69, 71, 72, 75, 77, 80, 104, 107, 109, 111, 113, 114, 115, 116, 118, 130, 143, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 173, 175, 177, 180, 181, 184, 185, 188, 208, 213, 229, 233, 235, 236, 237, 239, 242, 245, 246, 249, 250, 251, 252, 256, 258, 259, 261, 262, 267, 268, 271, 273], "3e": 0, "ratio": 0, "6": [0, 4, 12, 18, 26, 27, 29, 45, 46, 50, 54, 61, 62, 63, 65, 66, 69, 71, 72, 77, 82, 84, 110, 142, 143, 152, 166, 167, 173, 177, 183, 184, 201, 203, 208, 213, 233, 237, 239, 249, 251, 252, 256, 259, 261, 262, 266, 271, 273], "2f": 0, "__name__": 0, "__main__": 0, "try": [0, 4], "gpu_queu": 0, "get_sycl_devic": [0, 184], "print_device_info": 0, "except": [0, 4, 30, 32, 33, 34, 36, 71, 237], "importerror": 0, "data": [1, 3, 4, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 69, 70, 71, 72, 77, 78, 79, 80, 82, 84, 103, 104, 107, 108, 113, 114, 115, 118, 121, 122, 123, 124, 125, 128, 129, 130, 134, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 178, 180, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 264, 266, 268, 271, 274, 284], "parallel": [1, 3, 4, 274], "overview": 2, "quick": [2, 3], "start": [2, 3, 18, 34, 36, 111, 143, 152, 239], "guid": [2, 3], "driver": 2, "interpret": 2, "instal": 2, "exampl": [2, 3, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 103, 104, 107, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273], "multi": [2, 71, 86, 88, 92, 93, 97, 98, 100, 102, 159, 175, 274], "dimension": [2, 4, 38, 52, 56, 67, 71, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 158, 159, 175, 252, 274], "ndarrai": [2, 3, 6, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 82, 84, 103, 104, 107, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 178, 179, 180, 183, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 266, 268, 271, 274], "univers": [2, 274], "ufunc": [2, 274], "routin": [2, 274], "special": [2, 78, 274, 284], "differ": [2, 3, 68, 71, 72, 135, 140, 153, 251, 274, 284], "comparison": [2, 77, 114, 115, 129, 130, 174, 274, 284], "tabl": [2, 140, 274], "miscellan": [2, 274, 284], "c": [2, 4, 34, 36, 37, 53, 71, 75, 76, 83, 109, 110, 112, 153, 176, 177, 233, 237, 272, 273], "backend": [2, 112, 187, 189, 190, 200, 205, 221], "The": [3, 4, 12, 15, 16, 18, 26, 27, 43, 44, 45, 46, 50, 51, 57, 60, 69, 71, 72, 77, 81, 114, 115, 119, 121, 128, 129, 130, 134, 135, 139, 140, 144, 148, 150, 164, 165, 174, 180, 184, 187, 189, 190, 200, 205, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 235, 237, 238, 243, 249, 251, 252, 271, 284], "librari": [3, 4], "implement": [3, 6], "subset": [3, 248, 284], "execut": [3, 4, 11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 32, 33, 41, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 83, 84, 103, 104, 107, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 143, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 187, 189, 190, 200, 205, 221, 233, 234, 235, 236, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 261, 262, 264, 268, 271, 272, 273], "ani": [3, 6, 13, 15, 16, 71, 184, 228, 246], "drop": 3, "replac": [3, 35, 189], "core": 3, "numer": [3, 4, 284], "being": 3, "develop": [3, 4], "part": [3, 51, 163], "intel": [3, 4], "ai": 3, "analyt": 3, "toolkit": 3, "distribut": [3, 4, 152, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 284], "also": [3, 81, 222], "avail": [3, 4, 274], "anaconda": 3, "cloud": 3, "page": [3, 284], "learn": [3, 4], "Being": 3, "mean": [3, 6, 41, 71, 140, 157, 184, 197, 199, 202, 206, 225, 229, 230, 237, 250, 268, 284], "usag": [3, 4], "veri": [3, 158], "similar": [3, 32, 33, 111, 143, 152, 184, 212], "class": [3, 71, 184, 212, 246, 247, 260], "compat": [3, 237, 284], "altern": [3, 4, 153], "abov": [3, 261], "instanc": [3, 71, 158, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "creat": [3, 4, 30, 32, 33, 67, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "ident": [3, 6, 223], "one": [3, 4, 30, 35, 38, 52, 55, 56, 71, 75, 77, 85, 87, 90, 91, 95, 96, 99, 101, 109, 140, 144, 147, 158, 166, 177, 203, 248, 249, 272], "kei": [3, 28, 71, 245], "memori": [3, 32, 33, 34, 36, 71, 237], "default": [3, 11, 12, 13, 17, 18, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 41, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 59, 60, 68, 69, 71, 72, 75, 76, 77, 83, 85, 91, 104, 107, 109, 110, 111, 114, 115, 118, 121, 123, 124, 125, 128, 129, 130, 138, 140, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 170, 174, 176, 177, 179, 180, 184, 188, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 228, 235, 237, 238, 241, 243, 246, 247, 249, 250, 251, 252, 257, 268, 272, 273], "system": [3, 4], "integr": [3, 4, 163, 259], "discret": [3, 52, 56, 68, 72, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 184, 274], "otherwis": [3, 11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 41, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 78, 83, 84, 103, 104, 107, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 143, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 261, 262, 264, 268, 271, 272, 273], "host": [3, 4, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228], "do": [3, 4, 186], "have": [3, 4, 31, 47, 164, 203], "most": [3, 4, 248], "manipul": [3, 274, 284], "ar": [3, 4, 8, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 38, 41, 43, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 84, 103, 104, 107, 108, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 212, 215, 216, 218, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 264, 266, 268, 271], "done": 3, "see": [3, 71, 140, 201, 240], "complet": [3, 4], "list": [3, 6, 50, 71, 236, 249], "support": [3, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 266, 268, 271, 272, 273, 288], "along": [3, 4, 13, 15, 16, 17, 26, 27, 41, 50, 62, 63, 68, 71, 72, 120, 140, 154, 156, 157, 160, 166, 167, 170, 239, 249, 250, 256, 257, 259, 268], "limit": [3, 8, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 134, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 212, 215, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 266, 268, 271, 272, 273], "To": 4, "program": [4, 103], "beyond": 4, "cpu": [4, 11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 41, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 83, 84, 103, 104, 107, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 143, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 233, 234, 235, 236, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 261, 262, 264, 268, 271, 272, 273], "you": 4, "need": [4, 71, 112], "appropri": [4, 112, 184, 212, 215], "hardwar": 4, "work": [4, 15, 16, 35, 37, 64, 105, 106, 162, 182, 263, 269], "fine": 4, "laptop": 4, "graphic": 4, "In": [4, 26, 27, 71, 131, 184, 228, 237], "major": [4, 32, 33, 34, 36, 71], "case": [4, 26, 27, 142, 237], "your": 4, "window": 4, "alreadi": 4, "ha": [4, 43, 44, 45, 46, 90, 95, 121, 248, 249, 252], "all": [4, 6, 17, 31, 71, 79, 131, 186, 246, 248], "necessari": [4, 55, 237], "But": 4, "want": 4, "up": 4, "date": [4, 71], "alwai": [4, 32, 237], "updat": 4, "latest": 4, "follow": [4, 8, 81, 284], "instruct": 4, "step": [4, 18, 111, 143, 152], "8": [4, 12, 14, 48, 66, 122, 142, 143, 152, 166, 184, 208, 227, 243, 256, 259, 261, 262, 267, 271], "9": [4, 12, 54, 59, 66, 69, 71, 84, 104, 142, 153, 165, 180, 184, 186, 188, 208, 246, 251, 256, 261, 262, 267, 271], "10": [4, 12, 20, 22, 26, 27, 29, 53, 63, 71, 109, 111, 116, 128, 144, 147, 152, 157, 165, 169, 184, 186, 196, 208, 238, 249, 261, 262, 271], "If": [4, 35, 70, 71, 138, 139, 140, 156, 184, 206, 228, 236, 237, 246, 252], "yet": [4, 6], "easiest": 4, "It": 4, "essenti": 4, "machin": 4, "optim": [4, 74], "includ": [4, 112, 152, 184, 228], "anoth": [4, 55], "vendor": 4, "too": 4, "manual": 4, "shown": 4, "next": 4, "section": 4, "recommend": [4, 173], "org": 4, "channel": 4, "command": 4, "forg": 4, "pip": 4, "http": 4, "pypi": 4, "simpl": [4, 151, 284], "These": [4, 81, 284], "its": [4, 6, 51, 71, 85, 91, 118, 134, 135, 221, 237, 258], "depend": [4, 35, 134, 140, 271], "control": 4, "requir": [4, 6, 34, 36, 71], "compil": [4, 112], "runtim": 4, "onemkl": 4, "befor": [4, 71], "strongli": 4, "advis": 4, "version": [4, 71, 173], "activ": 4, "local": 4, "environ": 4, "env": 4, "And": [4, 71], "sourc": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "recip": 4, "finanli": 4, "setuptool": 4, "o": 4, "On": 4, "linux": 4, "cython": 4, "dpcpp_linux": 4, "mkl": 4, "devel": 4, "dpcpp": 4, "tbb": 4, "onedpl": 4, "cmake": 4, "ninja": 4, "pytest": 4, "dpcpp_win": 4, "setup": 4, "py": 4, "g": [4, 71, 184], "dcmake_c_compil": 4, "path": 4, "icx": 4, "dcmake_cxx_compil": 4, "icpx": 4, "script": 4, "build_loc": 4, "suit": 4, "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 31, 42, 43, 44, 45, 46, 48, 49, 51, 54, 57, 58, 62, 63, 69, 71, 72, 77, 79, 80, 82, 84, 103, 105, 106, 107, 114, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 136, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 161, 162, 163, 165, 166, 167, 172, 173, 174, 180, 181, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 251, 252, 254, 255, 261, 262, 263, 264, 265, 271, 284], "asarrai": [4, 6, 32, 37], "y": [4, 11, 12, 34, 36, 47, 53, 57, 60, 61, 69, 70, 71, 81, 113, 144, 156, 158, 163, 165, 173, 180, 237, 243, 246, 247, 251, 252, 258, 259, 271], "locat": [4, 112, 195, 197], "same": [4, 12, 15, 16, 31, 34, 35, 36, 37, 43, 45, 46, 47, 64, 69, 70, 71, 76, 77, 81, 105, 106, 110, 114, 115, 128, 129, 130, 148, 149, 150, 151, 162, 164, 165, 174, 177, 178, 180, 182, 184, 206, 212, 228, 235, 238, 246, 247, 248, 251, 263, 269, 273], "shape": [4, 6, 26, 27, 30, 31, 47, 55, 56, 60, 61, 71, 75, 76, 81, 109, 110, 136, 138, 142, 148, 149, 150, 151, 153, 154, 160, 164, 176, 177, 184, 193, 196, 201, 202, 207, 211, 212, 213, 214, 215, 216, 217, 219, 224, 225, 231, 237, 239, 246, 247, 248, 249, 253, 258, 272, 273, 284], "0": [4, 6, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 42, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 65, 66, 67, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 101, 103, 104, 107, 110, 111, 113, 116, 118, 119, 120, 123, 124, 125, 134, 136, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 158, 159, 160, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 183, 184, 186, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 206, 208, 209, 210, 211, 214, 216, 217, 218, 219, 222, 225, 227, 228, 229, 234, 235, 236, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 266, 268, 271, 272, 273], "expect": 4, "comput": [4, 20, 21, 24, 41, 43, 44, 45, 46, 49, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 116, 120, 121, 132, 133, 135, 139, 140, 141, 148, 149, 150, 151, 156, 157, 162, 170, 235, 250, 252, 254, 255, 256, 264, 268], "empti": [4, 6, 30, 71, 76, 109, 110, 156, 176, 177, 272, 273], "found": 4, "here": 6, "correspond": [6, 26, 27, 71, 134, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "column": [6, 32, 33, 34, 36, 50, 71, 117, 134, 139], "v1": 6, "23": [6, 184], "v0": 6, "12": [6, 26, 27, 208, 261, 262], "2dev0": 6, "38": [6, 186], "ged63bfddf": 6, "cupi": 6, "v8": 6, "397": 6, "209": 6, "286": 6, "56": 6, "29": 6, "47": 6, "20": [6, 128, 186, 201], "13": [6, 26, 27, 44, 71, 121, 167], "16": [6, 43, 113, 165, 180, 254], "21": [6, 63], "18": [6, 72], "51": 6, "48": [6, 166], "total": [6, 71], "545": 6, "317": 6, "415": 6, "ab": [6, 11, 84], "absolut": [6, 10, 84], "add": 6, "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "allclos": [6, 31, 122, 142], "alltru": 6, "amax": [6, 16, 26], "amin": [6, 15, 27], "angl": [6, 23, 24, 64, 65, 182, 183, 266], "apply_along_axi": 6, "apply_over_ax": 6, "arcco": [6, 21], "arccosh": 6, "arcsin": [6, 19, 243], "arcsinh": [6, 20], "arctan": [6, 19, 21, 24], "arctan2": [6, 21, 23], "arctanh": [6, 20], "argmax": [6, 15, 27, 71], "argmin": [6, 16, 26, 71], "argpartit": [6, 28], "argsort": [6, 71, 245, 258], "argwher": 6, "around": [6, 71, 240], "array2str": 6, "array_equ": 6, "array_equiv": [6, 31], "array_repr": 6, "array_split": [6, 50], "array_str": 6, "asanyarrai": [6, 33, 36], "asarray_chkfinit": [6, 32, 33], "ascontiguousarrai": [6, 32, 33, 36], "asfarrai": [6, 32, 33], "asfortranarrai": [6, 32, 33, 34], "asmatrix": 6, "atleast_1d": [6, 81], "atleast_2d": [6, 81], "atleast_3d": [6, 81], "averag": [6, 71, 156], "bartlett": 6, "base_repr": 6, "binary_repr": 6, "bincount": 6, "bitwise_and": [6, 44, 45, 46, 121, 148], "bitwise_not": 6, "bitwise_or": [6, 43, 44, 46, 121, 150], "bitwise_xor": [6, 43, 44, 45, 121, 151], "blackman": 6, "block": [6, 50, 249], "bmat": 6, "broadcast_arrai": 6, "broadcast_shap": 6, "broadcast_to": 6, "busday_count": 6, "busday_offset": 6, "byte_bound": 6, "can_cast": 6, "cbrt": 6, "ceil": [6, 103, 104, 264], "choos": [6, 21, 23, 24, 71], "clip": 6, "column_stack": [6, 50], "common_typ": 6, "compare_chararrai": 6, "compress": 6, "concaten": [6, 249], "conj": [6, 71], "conjug": [6, 51, 70, 71, 131, 134, 153], "convolv": [6, 56], "copi": [6, 30, 34, 36, 55, 71, 158, 179, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 237, 245, 248, 261, 262], "copysign": 6, "copyto": 6, "corrcoef": [6, 60], "correl": [6, 284], "co": [6, 19, 21, 243], "cosh": [6, 20], "count_nonzero": [6, 173], "cov": [6, 202], "cross": [6, 56], "cumprod": [6, 166], "cumproduct": 6, "cumsum": [6, 71, 167], "datetime_as_str": 6, "datetime_data": 6, "deg2rad": [6, 182, 183, 266], "degre": [6, 64, 182, 183, 226, 266], "delet": 6, "deprec": 6, "deprecate_with_doc": 6, "diag": [6, 142], "diag_indic": 6, "diag_indices_from": 6, "diagflat": 6, "diagon": [6, 66, 67, 71, 83, 119, 131, 257, 260, 261, 262], "diff": [6, 72, 116], "digit": 6, "disp": 6, "divid": [6, 104, 107, 136, 162, 235, 263], "divmod": 6, "dot": [6, 71, 73, 74, 120, 137, 139, 142, 153, 256, 269], "dsplit": [6, 50], "dstack": [6, 50], "ediff1d": 6, "einsum": [6, 74, 120, 153, 178, 256], "einsum_path": [6, 73], "empty_lik": [6, 30, 75, 110, 177, 273], "equal": [6, 13, 14, 17, 31, 50, 55, 56, 60, 71, 104, 114, 115, 122, 129, 130, 136, 174, 184, 194, 228, 235, 245, 248, 249], "exp": [6, 144, 146], "exp2": [6, 79], "expand_dim": [6, 26, 27], "expm1": [6, 79, 146], "extract": [6, 66], "ey": [6, 51, 151], "fab": 6, "fastcopyandtranspos": 6, "fill_diagon": 6, "find_common_typ": 6, "fix": 6, "flatnonzero": [6, 173], "flip": [6, 186], "fliplr": 6, "flipud": 6, "float_pow": 6, "floor": [6, 49, 104, 235, 264], "floor_divid": [6, 107, 162, 235], "fmax": [6, 15, 16, 106, 155, 161, 180], "fmin": [6, 15, 16, 105, 155, 161, 180], "fmod": [6, 105, 106, 155, 161, 162, 180, 235], "format_float_posit": 6, "format_float_scientif": 6, "frexp": 6, "from_dlpack": 6, "frombuff": 6, "fromfil": 6, "fromfunct": [6, 32, 33], "fromit": [6, 32, 33], "frompyfunc": 6, "fromregex": 6, "fromstr": 6, "full": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "full_lik": [6, 30, 76, 109, 177, 273], "gcd": 6, "genfromtxt": 6, "geomspac": [6, 143, 152], "get_array_wrap": 6, "get_includ": 6, "get_printopt": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "gradient": 6, "greater": [6, 71, 77, 115, 129, 130, 138, 174], "greater_equ": [6, 77, 114, 129, 130, 174], "ham": 6, "han": 6, "heavisid": 6, "histogram": [6, 284], "histogram2d": 6, "histogram_bin_edg": 6, "histogramdd": 6, "hsplit": [6, 50], "hstack": [6, 50], "hypot": 6, "i0": 6, "imag": 6, "in1d": 6, "indic": [6, 15, 16, 26, 27, 28, 71, 173, 237, 241, 242, 258], "info": 6, "inner": [6, 73, 74, 178], "insert": [6, 81, 241], "interp": 6, "intersect1d": 6, "invert": [6, 44], "is_busdai": 6, "isclos": 6, "iscomplex": 6, "iscomplexobj": 6, "isfinit": [6, 124, 125], "isfortran": 6, "isin": 6, "isinf": [6, 123, 125], "isnan": [6, 123, 124], "isnat": [6, 125], "isneginf": [6, 123, 124, 125], "isposinf": [6, 123, 124, 125], "isreal": 6, "isrealobj": 6, "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "iter": [6, 32, 33, 71], "ix_": 6, "kaiser": 6, "kron": 6, "lcm": 6, "ldexp": 6, "left_shift": [6, 238], "less": [6, 77, 114, 115, 130, 174, 236], "less_equ": [6, 77, 114, 115, 129, 174], "lexsort": [6, 28, 71, 245], "linspac": [6, 18, 78, 111, 152, 158, 266], "load": 6, "loadtxt": 6, "log": [6, 82, 111, 143, 147, 152, 199], "log10": [6, 144, 147], "log1p": [6, 82, 144, 147], "log2": [6, 144], "logaddexp": 6, "logaddexp2": 6, "logical_and": [6, 43, 149, 150, 151], "logical_not": [6, 44, 121, 148, 150, 151], "logical_or": [6, 45, 148, 149, 151], "logical_xor": [6, 46, 148, 149, 150], "logspac": [6, 111, 143], "lookfor": 6, "mask_indic": 6, "mat": 6, "matmul": [6, 142], "max": [6, 15, 26, 71, 138, 201], "maximum": [6, 15, 16, 26, 27, 71, 105, 106, 154, 161, 180], "maximum_sctyp": 6, "may_share_memori": 6, "meshgrid": [6, 159, 175], "min": [6, 16, 27, 71], "min_scalar_typ": 6, "minimum": [6, 15, 16, 26, 27, 71, 105, 106, 155, 160, 180], "mintypecod": 6, "mod": [6, 235], "modf": 6, "moveaxi": [6, 239, 258], "msort": 6, "multipli": 6, "nan_to_num": 6, "nanargmax": 6, "nanargmin": 6, "nancumprod": [6, 167], "nancumsum": 6, "nanmax": [6, 15, 16], "nanmean": [6, 156, 250, 268], "nanmedian": 6, "nanmin": [6, 15, 16], "nanpercentil": 6, "nanprod": 6, "nanquantil": 6, "nanstd": [6, 156, 250, 268], "nansum": 6, "nanvar": [6, 156, 250, 268], "ndim": [6, 30, 34, 36, 60, 71, 176, 239, 253, 272], "neg": [6, 13, 17, 42, 123, 124, 125, 180, 203, 246], "nested_it": 6, "nextaft": 6, "nonzero": [6, 71, 271], "not_equ": [6, 77, 114, 115, 129, 130], "obj2sctyp": 6, "ones": [6, 30, 34, 36, 69, 75, 76, 77, 81, 83, 109, 110, 118, 119, 153, 168, 177, 239, 258, 260, 272, 273], "ones_lik": [6, 30, 76, 110, 176, 273], "outer": [6, 73, 74, 127], "packbit": 6, "pad": [6, 274, 284], "partit": [6, 71, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 245], "percentil": [6, 157], "piecewis": 6, "place": [6, 71, 221, 237], "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "posit": [6, 13, 17, 32, 33, 71, 81, 123, 124, 125, 131, 164, 180, 186, 210, 239, 246, 247, 258], "power": [6, 80, 137, 247], "printopt": 6, "prod": [6, 71, 168], "product": [6, 61, 62, 70, 73, 74, 120, 127, 137, 139, 153, 165, 166, 178, 181, 256, 269, 284], "promote_typ": 6, "ptp": 6, "put": 6, "put_along_axi": 6, "putmask": 6, "quantil": 6, "rad2deg": [6, 64, 65, 266], "radian": [6, 64, 65, 182, 266], "ravel": [6, 71, 140], "ravel_multi_index": 6, "real": [6, 96, 97, 98, 99, 100, 102, 131, 134, 135, 138, 186, 203, 246, 284], "real_if_clos": 6, "recfromcsv": 6, "recfromtxt": 6, "reciproc": 6, "remaind": [6, 104, 105, 106, 107, 155, 161, 162, 180], "repeat": [6, 134, 135], "resiz": [6, 81], "result_typ": 6, "right_shift": [6, 128], "rint": 6, "roll": [6, 239], "rollaxi": 6, "root": [6, 48, 246, 247], "rot90": 6, "round": [6, 29, 71, 103, 104, 235, 240, 264, 284], "round_": 6, "row_stack": 6, "safe_ev": 6, "save": 6, "savetxt": 6, "savez": 6, "savez_compress": 6, "sctype2char": 6, "searchsort": [6, 245], "select": [6, 248], "set_numeric_op": 6, "set_printopt": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setxor1d": 6, "shares_memori": 6, "show_config": 6, "sign": [6, 51, 54], "signbit": 6, "sin": [6, 21, 158], "sinc": 6, "sinh": [6, 20, 243], "sometru": 6, "sort": [6, 28, 71, 241, 258, 274, 284], "sort_complex": 6, "space": [6, 18, 111, 143, 152], "split": [6, 50, 249, 284], "sqrt": [6, 247], "squar": [6, 119, 131, 133, 134, 137, 188, 204, 246], "squeez": [6, 71, 81], "stack": [6, 50, 117, 138, 270], "std": [6, 71, 156, 268], "subtract": 6, "swapax": [6, 164], "take": [6, 71, 237], "take_along_axi": [6, 26, 27, 28], "tan": [6, 21, 24], "tanh": [6, 20], "tensordot": [6, 70, 120, 153], "tile": [6, 236, 284], "trace": 6, "transpos": [6, 71, 131, 164, 284], "trapz": 6, "tri": 6, "tril": 6, "tril_indic": 6, "tril_indices_from": 6, "trim_zero": 6, "triu": 6, "triu_indic": 6, "triu_indices_from": 6, "true_divid": 6, "trunc": [6, 49, 103], "typenam": 6, "union1d": 6, "uniqu": [6, 42], "unpackbit": 6, "unravel_index": [6, 26, 27], "unwrap": [6, 64, 182], "vander": 6, "var": [6, 71, 156, 250], "vdot": [6, 70, 153], "vsplit": [6, 50], "vstack": [6, 50], "where": [6, 11, 12, 13, 17, 24, 43, 44, 45, 46, 54, 55, 57, 69, 71, 77, 103, 104, 107, 114, 115, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 141, 144, 148, 149, 150, 151, 154, 155, 156, 160, 161, 162, 165, 174, 180, 181, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 235, 238, 241, 243, 246, 247, 251, 252], "who": 6, "zero": [6, 13, 17, 30, 59, 75, 76, 83, 89, 94, 103, 109, 110, 138, 142, 164, 169, 173, 176, 177, 180, 184, 186, 214, 216, 217, 219, 252, 260, 261, 262, 273], "zeros_lik": [6, 30, 76, 110, 177, 272], "astyp": [6, 71, 173], "byteswap": 6, "dump": 6, "fill": [6, 30, 71, 75, 76, 109, 110, 176, 177, 272, 273], "flatten": [6, 67, 71, 173, 233], "getfield": 6, "item": [6, 71], "itemset": 6, "newbyteord": 6, "setfield": 6, "setflag": 6, "tobyt": 6, "tofil": [6, 108], "tolist": 6, "tostr": 6, "view": [6, 39, 40, 71, 237, 248, 258], "linalg": [6, 247], "choleski": 6, "cond": 6, "det": 6, "eig": [6, 134, 135], "eigh": 6, "eigval": [6, 134], "eigvalsh": 6, "inv": 6, "lstsq": 6, "matrix_pow": [6, 247], "matrix_rank": 6, "multi_dot": 6, "norm": [6, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 284], "pinv": 6, "qr": 6, "slogdet": 6, "solv": [6, 284], "svd": [6, 138], "tensorinv": 6, "tensorsolv": 6, "fft": [6, 274, 284], "fft2": 6, "fftfreq": 6, "fftn": 6, "fftshift": 6, "hfft": 6, "ifft": 6, "ifft2": 6, "ifftn": 6, "ifftshift": 6, "ihfft": 6, "irfft": 6, "irfft2": 6, "irfftn": 6, "register_func": 6, "restore_al": 6, "restore_func": 6, "rfft": 6, "rfft2": 6, "rfftfreq": 6, "rfftn": 6, "beta": [6, 195], "binomi": [6, 203], "byte": [6, 71], "chisquar": 6, "choic": [6, 71], "default_rng": 6, "dirichlet": 6, "exponenti": [6, 144, 197, 223], "gamma": [6, 224], "geometr": [6, 111, 143], "get_stat": [6, 184], "gumbel": 6, "hypergeometr": 6, "laplac": 6, "logist": 6, "lognorm": 6, "logseri": 6, "multinomi": 6, "multivariate_norm": 6, "negative_binomi": 6, "noncentral_chisquar": 6, "noncentral_f": 6, "normal": [6, 60, 134, 184, 199, 202, 213, 225], "pareto": 6, "permut": [6, 71, 164, 258, 284], "poisson": 6, "rand": [6, 184, 214, 216, 217, 219], "randint": [6, 71, 184, 215], "randn": [6, 142, 184, 249], "random_integ": [6, 184, 212], "random_sampl": [6, 184, 211, 214, 217, 219], "ranf": 6, "rayleigh": 6, "seed": [6, 71, 184], "set_stat": 6, "shuffl": 6, "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 184, 213], "standard_t": 6, "triangular": [6, 131, 141], "uniform": [6, 184, 211, 214, 216, 217, 219], "vonmis": 6, "wald": 6, "weibul": [6, 232], "zipf": 6, "bool": [8, 13, 17, 35, 71, 77, 114, 115, 123, 124, 125, 129, 130, 138, 140, 173, 174, 237], "complex128": [8, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "nan": [8, 13, 15, 16, 17, 32, 33, 69, 123, 124, 125, 156, 166, 167, 168, 169, 170, 246, 250, 268, 284], "arg": [10, 73, 105, 106, 184, 263, 269], "kwarg": [10, 11, 12, 14, 21, 23, 24, 43, 44, 45, 46, 49, 50, 51, 54, 57, 61, 62, 63, 69, 70, 71, 73, 77, 79, 84, 103, 104, 105, 106, 107, 108, 113, 114, 115, 118, 120, 121, 123, 124, 125, 128, 129, 130, 144, 148, 149, 150, 151, 153, 155, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 180, 234, 235, 238, 242, 243, 245, 246, 247, 249, 251, 254, 256, 259, 260, 263, 264, 265, 269], "calcul": [10, 11, 68, 72, 79, 84, 103, 105, 106, 107, 155, 161, 162, 168, 169, 180, 181, 235, 246], "valu": [10, 11, 12, 13, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 59, 60, 68, 69, 71, 72, 75, 76, 77, 83, 84, 85, 91, 103, 104, 107, 109, 110, 111, 114, 115, 118, 121, 123, 124, 125, 128, 129, 130, 131, 135, 138, 140, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 170, 173, 174, 176, 177, 179, 180, 184, 194, 211, 212, 228, 235, 236, 237, 238, 241, 243, 246, 247, 249, 250, 251, 252, 256, 257, 264, 266, 268, 272, 273, 284], "wise": [10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 31, 43, 44, 45, 46, 48, 49, 50, 51, 54, 57, 58, 69, 71, 77, 79, 80, 82, 84, 103, 105, 106, 107, 114, 115, 117, 121, 122, 123, 124, 125, 128, 129, 130, 136, 144, 145, 146, 147, 148, 149, 150, 151, 155, 161, 162, 163, 165, 172, 174, 180, 234, 235, 238, 242, 243, 244, 246, 247, 251, 254, 255, 263, 264, 270], "note": [10, 13, 15, 16, 17, 26, 27, 35, 37, 64, 71, 81, 103, 105, 106, 123, 140, 152, 162, 173, 182, 187, 189, 190, 200, 205, 237, 263, 269], "shorthand": [10, 12, 43, 44, 45, 46, 69, 77, 114, 115, 121, 128, 129, 130, 148, 150, 165, 174, 235, 238, 251, 271], "out": [11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 43, 44, 45, 46, 48, 49, 50, 54, 57, 58, 60, 65, 69, 70, 71, 77, 78, 79, 80, 82, 103, 104, 107, 114, 115, 118, 121, 122, 123, 124, 125, 128, 129, 130, 139, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 170, 173, 174, 178, 180, 181, 183, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 233, 234, 235, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 264, 266, 268], "none": [11, 12, 13, 15, 16, 17, 18, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 54, 57, 59, 60, 61, 69, 70, 71, 72, 75, 76, 77, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 118, 119, 121, 123, 124, 125, 128, 129, 130, 138, 139, 140, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 165, 170, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 264, 267, 268, 271, 272, 273], "subok": [11, 12, 30, 43, 44, 45, 46, 47, 53, 57, 69, 71, 76, 77, 104, 110, 114, 115, 121, 123, 124, 125, 128, 129, 130, 144, 148, 149, 150, 151, 162, 165, 174, 177, 180, 235, 238, 243, 246, 247, 251, 273], "contain": [11, 13, 17, 18, 43, 44, 45, 46, 71, 112, 121, 128, 134, 156, 184, 238, 246, 252], "paramet": [11, 12, 13, 14, 17, 18, 24, 26, 27, 29, 30, 32, 33, 34, 36, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 57, 59, 61, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 143, 144, 148, 149, 150, 151, 152, 153, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 251, 252, 253, 256, 257, 259, 261, 262, 264, 271, 272, 273], "onli": [11, 18, 26, 27, 28, 30, 32, 33, 34, 36, 41, 53, 55, 56, 57, 59, 60, 68, 72, 75, 76, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 108, 109, 110, 111, 123, 124, 125, 128, 131, 143, 144, 149, 152, 154, 157, 158, 160, 170, 176, 177, 179, 184, 206, 212, 228, 237, 238, 239, 241, 243, 250, 256, 257, 261, 262, 268, 271, 272, 273], "either": [11, 12, 13, 14, 17, 24, 36, 43, 44, 45, 46, 47, 50, 54, 57, 69, 70, 77, 104, 107, 114, 115, 118, 121, 122, 123, 124, 125, 128, 129, 130, 140, 144, 148, 149, 150, 151, 155, 156, 158, 161, 162, 164, 165, 173, 174, 178, 180, 220, 235, 236, 238, 243, 246, 247, 248, 249, 251, 252, 258, 271], "tensor": [11, 12, 13, 17, 43, 44, 45, 46, 47, 50, 57, 69, 70, 71, 76, 77, 110, 114, 115, 120, 121, 123, 124, 125, 128, 129, 130, 134, 144, 148, 149, 150, 151, 156, 158, 162, 164, 165, 173, 174, 177, 178, 180, 235, 238, 243, 246, 247, 248, 249, 251, 252, 256, 258, 261, 262, 271, 273], "usm_ndarrai": [11, 12, 13, 17, 43, 44, 45, 46, 47, 50, 57, 69, 70, 71, 76, 77, 110, 114, 115, 121, 123, 124, 125, 128, 129, 130, 134, 144, 148, 149, 150, 151, 156, 158, 162, 164, 165, 173, 174, 177, 178, 180, 235, 237, 238, 243, 246, 247, 248, 249, 251, 252, 258, 261, 262, 271, 273], "keyword": [11, 12, 14, 21, 23, 24, 43, 44, 45, 46, 49, 50, 54, 61, 62, 63, 69, 70, 72, 84, 103, 104, 107, 113, 118, 120, 121, 128, 155, 161, 162, 163, 165, 166, 167, 168, 169, 172, 180, 234, 235, 238, 242, 245, 249, 251, 254, 256, 259, 264], "argument": [11, 12, 14, 21, 23, 24, 43, 44, 45, 46, 49, 50, 54, 61, 62, 63, 69, 70, 71, 72, 78, 84, 103, 104, 107, 113, 118, 120, 121, 128, 136, 139, 155, 161, 162, 163, 165, 166, 167, 168, 169, 172, 180, 234, 235, 238, 242, 245, 249, 251, 254, 256, 259, 264], "unsupport": [11, 12, 14, 21, 23, 24, 43, 44, 45, 46, 49, 50, 54, 61, 62, 63, 69, 70, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 113, 118, 120, 121, 128, 139, 155, 161, 162, 163, 165, 166, 167, 168, 169, 172, 180, 181, 234, 235, 238, 242, 245, 249, 251, 254, 256, 259, 264], "sequenti": [11, 12, 13, 14, 17, 18, 24, 26, 27, 28, 29, 41, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 83, 84, 103, 104, 107, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 143, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 233, 234, 235, 236, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 261, 262, 264, 268, 271, 272, 273], "dp": [11, 47, 69, 70, 71, 134, 180, 237, 251, 258, 271], "x1": [12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 35, 41, 42, 43, 45, 46, 48, 49, 51, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 107, 110, 113, 114, 115, 118, 120, 122, 127, 128, 129, 130, 133, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 177, 178, 179, 180, 181, 182, 183, 221, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 250, 251, 253, 254, 255, 256, 257, 259, 261, 262, 264, 265, 266, 267, 268, 273], "x2": [12, 13, 14, 17, 21, 23, 24, 30, 43, 45, 46, 54, 56, 61, 69, 70, 77, 104, 107, 111, 114, 115, 118, 120, 122, 127, 128, 129, 130, 143, 148, 149, 150, 151, 152, 153, 155, 158, 161, 162, 165, 173, 174, 178, 180, 235, 238, 241, 246, 251, 256], "order": [12, 28, 30, 32, 33, 34, 36, 37, 43, 44, 45, 46, 53, 57, 69, 71, 73, 74, 75, 76, 77, 83, 104, 109, 110, 114, 115, 121, 123, 124, 125, 128, 129, 130, 134, 135, 140, 144, 148, 149, 150, 151, 162, 164, 165, 174, 176, 177, 179, 233, 235, 237, 238, 241, 243, 246, 247, 251, 272, 273, 284], "k": [12, 30, 43, 44, 45, 46, 53, 57, 66, 67, 69, 71, 77, 83, 104, 114, 115, 121, 123, 124, 125, 128, 129, 130, 144, 148, 149, 150, 151, 162, 165, 174, 235, 238, 243, 246, 247, 251, 260, 261, 262, 288], "scalar": [12, 14, 24, 38, 43, 45, 46, 54, 69, 70, 71, 77, 104, 107, 114, 115, 118, 126, 128, 129, 130, 148, 150, 151, 155, 158, 161, 162, 165, 174, 178, 180, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 212, 215, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 235, 238, 251, 271], "both": [12, 43, 45, 46, 69, 70, 77, 114, 115, 128, 129, 130, 140, 148, 150, 151, 162, 165, 174, 178, 180, 235, 238, 251], "b": [12, 43, 46, 50, 62, 63, 70, 72, 77, 107, 114, 115, 120, 129, 130, 142, 148, 150, 153, 166, 167, 174, 178, 180, 185, 249, 256, 259], "7": [12, 14, 18, 49, 59, 63, 66, 69, 71, 72, 79, 103, 113, 122, 142, 153, 157, 165, 167, 173, 184, 208, 235, 251, 256, 261, 262, 264, 271], "oper": [12, 43, 44, 45, 46, 69, 71, 77, 81, 114, 115, 121, 128, 129, 130, 131, 148, 149, 150, 151, 165, 174, 235, 238, 251, 274, 284], "axi": [13, 15, 16, 17, 26, 27, 28, 41, 50, 59, 61, 62, 63, 68, 71, 72, 81, 85, 90, 91, 95, 96, 99, 111, 140, 143, 152, 154, 156, 157, 160, 166, 167, 170, 179, 181, 236, 237, 239, 248, 249, 250, 252, 259, 268], "keepdim": [13, 17, 59, 71, 140, 154, 156, 157, 160, 170, 181, 250, 252, 268], "fals": [13, 14, 17, 30, 31, 34, 36, 41, 43, 44, 46, 47, 53, 59, 60, 71, 76, 77, 110, 111, 114, 115, 121, 122, 123, 124, 125, 129, 130, 138, 140, 142, 143, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 170, 174, 177, 181, 237, 250, 252, 267, 268, 273], "whether": [13, 17, 131, 237], "given": [13, 15, 16, 17, 18, 26, 27, 29, 30, 53, 60, 62, 63, 68, 70, 71, 72, 75, 76, 109, 110, 118, 158, 160, 166, 167, 176, 177, 181, 184, 189, 211, 228, 239, 240, 252, 259, 260, 272, 273], "evalu": [13, 17, 71, 73, 74, 77, 120, 158, 178, 256], "logic": [13, 17, 148, 150, 151, 274, 284], "AND": [13, 43, 44, 45, 46, 121, 148, 149, 150, 151], "reduct": [13, 17], "equival": [13, 17, 71, 81, 183, 184, 212, 237, 240, 258], "method": [13, 17, 71, 108, 138, 184, 237, 258], "Not": [13, 17, 71, 123, 166, 168, 169], "number": [13, 17, 18, 29, 42, 51, 59, 71, 103, 104, 111, 123, 138, 140, 143, 152, 166, 168, 169, 173, 184, 186, 196, 220, 235, 239, 240, 242, 264, 284], "infin": [13, 17, 103, 104, 123, 124, 125, 235, 264, 284], "becaus": [13, 17], "x3": [13, 17, 143, 152], "rtol": [14, 122], "1e": [14, 122, 202], "05": [14, 122], "atol": [14, 122], "08": [14, 57, 122, 202, 243], "two": [14, 15, 16, 31, 39, 43, 44, 45, 46, 52, 56, 61, 67, 71, 73, 74, 120, 121, 122, 127, 134, 139, 148, 150, 151, 153, 164, 178, 184, 213, 253, 261, 262, 269], "within": [14, 18, 31, 122, 184, 228], "toler": [14, 31, 122], "1e10": [14, 122], "00001e10": [14, 122], "propag": [15, 16], "ignor": [15, 16, 71, 156, 170, 250, 268], "exactli": [15, 16, 35, 37, 64, 182, 184, 212], "OR": [17, 43, 44, 45, 46, 121, 148, 149, 150, 151], "stop": [18, 111, 143, 152], "like": [18, 30, 32, 33, 34, 36, 75, 83, 109, 119, 176, 184, 228, 237, 272, 284], "usm_typ": [18, 30, 32, 33, 34, 36, 71, 75, 76, 83, 109, 110, 143, 176, 177, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 272, 273], "sycl_queu": [18, 30, 32, 33, 34, 36, 71, 75, 76, 83, 109, 110, 143, 176, 177, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 272, 273], "evenli": [18, 29, 111, 143, 152], "interv": [18, 143, 184, 212, 214, 216, 217, 219, 227, 228], "d": [18, 50, 83, 86, 87, 88, 92, 93, 97, 98, 100, 101, 102, 134, 139, 140, 158, 173, 189, 237, 271], "care": 18, "handl": [18, 173, 284], "endpoint": [18, 111, 143, 152], "trigonometr": [19, 20, 21, 23, 24, 25, 57, 58, 79, 80, 82, 145, 146, 147, 243, 244, 284], "invers": [19, 20, 21, 22, 23, 24, 25, 44, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 121, 144, 146, 230, 243], "cosin": [19, 20, 21, 57, 58, 243], "tangent": [19, 20, 21, 23, 24, 25, 254, 255], "sine": [19, 20, 21, 22, 243, 244], "14159265": 19, "hyperbol": [20, 22, 25, 58, 243, 244, 255, 284], "e": [20, 22, 71, 144, 184], "65745445": 20, "99322285": 20, "arc": [21, 23, 24], "quadrant": [21, 23, 24], "correctli": [21, 23, 24, 140, 173], "5707963267948966": 21, "72538256": 22, "99822295": 22, "complex": [23, 24, 51, 70, 71, 78, 134, 135, 142, 153, 246, 284], "78539816": [23, 266], "57079633": [24, 183, 266], "54930614": 25, "convert": [26, 27, 32, 33, 34, 35, 36, 38, 64, 65, 182, 183, 266], "flat": [26, 27, 71], "index": [26, 27, 71, 81, 158, 237], "tupl": [26, 27, 71, 81, 140, 173, 236, 237], "appli": [26, 27, 28, 148, 150, 151], "index_arrai": [26, 27, 28, 71], "call": [26, 27, 28, 34, 36, 139, 248, 271], "multipl": [26, 27, 28, 50, 71, 134, 135, 245, 249], "occurr": [26, 27, 42], "first": [26, 27, 71, 80, 139, 180, 237, 247], "11": [26, 27, 29, 71, 113, 203, 212, 244, 261, 262], "14": [26, 27, 43, 44, 70, 121, 256], "15": [26, 27, 63, 208, 252], "in_array1": [28, 59, 78], "kind": [28, 71, 179, 284], "would": [28, 71, 184, 258], "pramet": [28, 41, 56, 60, 154, 157, 160, 170, 250, 268], "describ": [28, 71, 140, 252, 284], "algorithm": [28, 71], "indirect": [28, 71, 245], "stabl": [28, 71, 245], "partial": [28, 245], "decim": [29, 71, 240], "37": 29, "nearest": [29, 103, 104, 235, 264], "even": 29, "int": [29, 35, 42, 71, 77, 113, 179, 184, 212, 215, 237, 260], "ndmin": 30, "rais": [30, 32, 33, 34, 36, 50, 71, 80, 137, 180, 237, 247, 249], "valueerror": [30, 32, 33, 34, 36, 237, 248], "new": [30, 47, 50, 71, 75, 76, 81, 109, 110, 164, 176, 177, 237, 239, 249, 258, 272, 273], "uniniti": [30, 76, 109, 176, 272], "than": [30, 71, 138, 236, 249], "dimens": [30, 38, 39, 40, 50, 60, 71, 81, 136, 140, 164, 184, 214, 216, 217, 219, 236, 237, 245, 248, 249, 261, 262, 284], "a1": 31, "a2": 31, "equal_nan": [31, 122], "consist": 31, "pass": [32, 33, 71], "subclass": [32, 33], "through": [32, 33], "contigu": [32, 33, 34, 36, 71, 233, 237], "float": [32, 33, 35, 113, 138, 140, 152, 184, 188, 213, 214, 216, 217, 219, 222, 223, 225, 228, 284], "point": [32, 33, 143, 184, 213, 225, 284], "check": [32, 33, 131], "inf": [32, 33, 69, 123, 124, 125, 140, 144, 145, 147, 246], "construct": [32, 33, 66, 71, 108, 159, 175], "grid": [32, 33, 158], "object": [33, 34, 36, 53, 71, 81, 131, 134, 140, 159, 175, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 237], "satisfi": [34, 36], "flag": [34, 36, 71], "about": [34, 36, 71], "layout": [34, 36, 71, 237], "f_contigu": [34, 36], "make": [34, 36, 158], "now": [34, 36], "c_contigu": [34, 36], "Then": [34, 36], "capabl": 35, "laid": 36, "fortran": [36, 71, 237], "row": [36, 50, 71, 139, 270], "ari": [38, 39, 40], "least": [38, 39, 40, 122], "whilst": 38, "higher": 38, "preserv": [38, 71], "three": [40, 184, 220], "weight": [41, 42, 60, 116, 156], "specifi": [41, 47, 71, 111, 120, 140, 143, 152, 156, 157, 170, 184, 197, 207, 225, 239, 250, 256, 268], "arithmet": [41, 111, 156, 157, 250, 268, 284], "minlength": 42, "count": [42, 59, 137, 173, 186, 274, 284], "non": [42, 59, 123, 134, 173, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 246], "find": [42, 138, 241, 245, 265], "re": [42, 116, 265], "bit": [43, 44, 45, 46, 121, 128, 148, 150, 151, 238, 284], "integ": [43, 44, 45, 46, 71, 103, 104, 121, 122, 128, 137, 140, 180, 184, 212, 215, 220, 235, 237, 238, 239, 247, 261, 262, 264], "boolean": [43, 45, 46, 122, 123, 124, 125, 148, 149, 150, 151, 237], "truth": [43, 44, 45, 46, 77, 114, 115, 121, 129, 130, 148, 149, 150, 151, 174, 284], "xor": [43, 44, 45, 46, 121, 148, 149, 150, 151], "255": [43, 45], "NOT": [44, 121, 148, 149, 150, 151], "31": [46, 111], "26": 46, "broadcast": [47, 55, 140, 148, 150, 151, 153], "must": [47, 71, 131, 139, 140], "cube": 48, "27": [48, 267], "truncat": [49, 103, 222, 264], "join": [50, 249, 284], "sequenc": [50, 52, 56, 117, 137, 139, 208, 221, 249, 270], "exist": [50, 81, 237, 249], "typeerror": [50, 249], "exept": [50, 249], "sub": [50, 249], "horizont": [50, 117], "vertic": [50, 270], "3rd": 50, "depth": 50, "assembl": [50, 249], "third": 50, "t": [50, 60, 71, 135, 226, 277], "obtain": [51, 173], "chang": [51, 54, 71, 237, 266, 284], "imaginari": 51, "2j": [51, 134], "1j": [51, 142, 247], "j": [51, 134, 247], "v": [52, 134], "mode": [52, 56, 71, 141, 222, 227], "linear": [52, 56, 152, 274, 284], "convolut": [52, 56], "ca": 52, "z": [53, 158, 194], "dst": 55, "src": 55, "cast": [55, 71], "same_kind": 55, "valid": 56, "pi": [57, 65, 243, 244, 254, 255, 266], "000000e": [57, 243], "00": [57, 243], "371139e": 57, "m": [60, 83, 131, 132, 134, 135, 138, 260], "rowvar": 60, "bia": 60, "ddof": [60, 71, 170, 250, 268], "fweight": 60, "aweight": 60, "estim": [60, 186, 203], "covari": 60, "matrix": [60, 131, 134, 135, 137, 138, 140, 141, 153, 247, 262, 267, 284], "variabl": 60, "axisa": 61, "axisb": 61, "axisc": 61, "vector": [61, 138, 139, 140, 158, 269, 284], "cumul": [62, 63, 71, 166, 167], "24": [62, 72, 168, 181], "120": [62, 65], "720": 62, "remov": [64, 71, 81, 182, 248, 284], "larg": [64, 182], "jump": [64, 182], "wrap": [64, 71, 182], "rad": 65, "30": [65, 183], "60": [65, 271], "90": [65, 271], "150": 65, "prepend": 68, "th": [68, 72, 157, 261, 262], "quotient": 69, "over": [70, 140, 143, 153, 158, 166, 181, 184, 211, 216, 227, 228, 252], "arbitrari": [70, 153], "ax": [70, 71, 86, 88, 89, 92, 93, 94, 97, 98, 100, 102, 120, 140, 153, 156, 164, 239, 248, 253, 256, 258], "buffer": [71, 237], "offset": [71, 257], "stride": 71, "wrapper": 71, "compliant": 71, "origin": [71, 140, 164, 237], "__getitem__": 71, "__setitem__": 71, "val": 71, "__len__": 71, "perform": [71, 131], "option": [71, 138, 139, 140, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 237], "Its": 71, "right": [71, 118, 128, 133, 134, 227, 238, 241], "hold": [71, 140], "output": [71, 77, 114, 115, 129, 130, 137, 139, 158, 174, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 248, 284], "integer_arrai": 71, "versionchang": 71, "previous": 71, "wa": [71, 184, 225, 252], "error": [71, 78, 274], "At": 71, "some": [71, 81, 103], "futur": 71, "intend": 71, "until": [71, 239], "should": [71, 112, 122, 201, 236, 237, 241], "explicitli": 71, "when": [71, 140, 152, 271], "arr": [71, 173, 208], "avoid": 71, "futurewarn": 71, "quicksort": 71, "mergesort": 71, "heapsort": 71, "field": [71, 158], "compar": [71, 77], "second": [71, 80, 180, 247], "etc": [71, 203, 284], "other": [71, 103, 139, 164, 184, 228, 284], "word": [71, 103, 184, 228], "yield": [71, 184], "maskedarrai": 71, "inplac": 71, "asnumpi": 71, "content": [71, 221], "popul": [71, 184, 211], "unsaf": 71, "target": 71, "A": [71, 108, 135, 184, 186, 203, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 258], "style": 71, "keep": 71, "close": [71, 184, 212], "possibl": [71, 237, 248, 258], "happen": [71, 186], "itself": 71, "possibli": 71, "doe": 71, "axis1": [71, 253, 257], "axis2": [71, 253, 257], "assign": 71, "collaps": 71, "occur": 71, "get_arrai": 71, "get": 71, "id": 71, "standard": [71, 104, 107, 156, 162, 184, 199, 206, 213, 222, 223, 224, 225, 226, 235, 250, 252, 268, 284], "random": [71, 142, 249, 274, 284], "123": 71, "initi": [71, 75, 154, 160, 181, 184, 252], "kth": [71, 179], "introselect": [71, 179], "rearrang": [71, 284], "smaller": [71, 104, 235], "move": [71, 164, 239, 258], "behind": 71, "undefin": 71, "dparrai": [71, 277, 285], "sh": 71, "unlik": 71, "free": 71, "separ": 71, "singl": [71, 139, 156, 184, 203, 212, 213, 214, 215, 216, 217, 219, 225], "entri": [71, 75], "varianc": [71, 156, 170, 250, 268, 284], "to_devic": 71, "target_devic": 71, "transfer": 71, "suitabl": 71, "properti": [71, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "give": [71, 237], "without": [71, 75, 237], "mask": 71, "finit": [71, 123, 124, 125], "__eq__": [71, 184], "self": [71, 184], "__ne__": [71, 184], "__lt__": [71, 184], "__le__": [71, 184], "__gt__": [71, 184], "__ge__": [71, 184], "attribut": 71, "items": 71, "nbyte": 71, "consum": 71, "length": [71, 77, 187, 237, 248], "repres": [71, 184], "diment": 71, "setter": 71, "involv": 71, "cannot": [71, 248], "displac": 71, "upon": 71, "unit": 71, "respect": 71, "s1": 71, "s2": 71, "s3": 71, "i1": 71, "i2": 71, "i3": 71, "sycl_context": 71, "sycl_devic": 71, "to_end": 72, "to_begin": 72, "between": [72, 135, 201, 215, 266], "consecut": 72, "obj": [72, 126], "seealso": 72, "einstein": [73, 74, 120, 153, 178, 256], "summat": [73, 74, 120, 153, 178, 256], "convent": [73, 74, 120, 153, 178, 256], "operand": [73, 74, 120, 178, 256], "lowest": [73, 74, 184, 212], "cost": [73, 74], "contract": [73, 74], "express": [73, 74], "subscript": 74, "greedi": 74, "consid": [74, 123, 138, 184, 212], "intermedi": 74, "dpnp_arrai": [76, 110, 158, 171, 177, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 237, 261, 262, 273, 274], "what": [77, 186, 203], "so": [77, 144, 222, 246], "scipi": 78, "math": 78, "num": [78, 111, 143, 152, 266], "25": [78, 113, 116, 143, 165, 180, 213, 222, 267, 268], "75": [78, 113, 143], "99532227": 78, "99853728": 78, "99959305": 78, "99989938": 78, "99997791": 78, "expon": [79, 82, 180, 210, 284], "718281828": [79, 82], "389056099": [79, 82], "exponent2": 80, "expand": 81, "appear": 81, "singleton": [81, 248], "newaxi": 81, "mai": [81, 134, 152], "instead": [81, 103, 111, 143, 152, 173], "minu": [82, 103, 104, 235, 264], "elsewher": [83, 260, 271], "fourier": [85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 274], "transform": [85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 274], "complex64": [85, 91], "datatyp": [85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 138], "batch": [86, 88, 92, 93, 97, 98, 100, 102], "sampl": [87, 101, 111, 143, 152, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 274, 284], "frequenc": [87, 89, 94, 101], "shift": [89, 94, 128, 238], "compon": [89, 94], "center": [89, 94], "spectrum": [89, 94], "signal": [90, 95], "hermitian": [90, 95, 131, 134, 138, 142, 284], "symmetri": [90, 95], "toward": [103, 104, 235, 264], "spreadsheet": 103, "definit": [103, 131], "largest": [104, 235], "divis": [104, 105, 106, 107, 155, 161, 162, 180, 235, 263], "complementari": [104, 107, 162], "file": [108, 112], "text": 108, "binari": [108, 274, 284], "highli": 108, "effici": [108, 138], "read": [108, 237], "known": [108, 222], "well": [108, 186, 203, 222], "pars": 108, "simpli": 108, "format": [108, 284], "written": 108, "fill_valu": [109, 110], "50": [111, 152, 256, 271], "scale": [111, 143, 152, 184, 191, 193, 195, 196, 197, 198, 206, 218, 223, 230], "progress": [111, 143], "1000": [111, 152, 185, 186, 191, 193, 195, 196, 197, 198, 199, 206, 207, 210, 212, 214, 217, 219, 225, 229, 230, 231, 232], "100": [111, 152, 196, 222], "62341325": 111, "6227766": 111, "177": [111, 152], "827941": [111, 152], "directori": 112, "h": [112, 131, 158], "header": 112, "modul": [112, 274], "against": [112, 140], "vararg": 113, "y1": [113, 259], "bin": [116, 222], "densiti": 116, "dataset": 116, "hist": [116, 222], "bin_edg": 116, "4999999999999996": 116, "tup": [117, 270], "leg": 118, "triangl": [118, 261, 262], "hypotenus": 118, "main": [119, 135], "nat": 125, "kroneck": 127, "left": [128, 140, 227, 238, 241], "40": 128, "decomposit": [131, 142, 284], "l": [131, 134], "lower": [131, 261], "ordinari": 131, "symmetr": [131, 134, 138], "No": 131, "verifi": 131, "addit": 131, "actual": 131, "array_lik": [131, 132, 135, 137, 138, 139, 140, 184], "upper": [131, 141, 262], "factor": [131, 141], "determin": [132, 148, 150, 151], "eigenvalu": [133, 134, 135, 284], "eigenvector": [133, 134, 135], "uplo": 134, "w": [134, 135], "ascend": 134, "accord": [134, 135], "17157288": 134, "82842712": 134, "92387953": 134, "38268343": 134, "vari": 134, "38268343j": 134, "92387953j": 134, "gener": [135, 184, 186, 189, 220, 267, 284], "aren": 135, "whose": 135, "thei": 135, "necessarili": 135, "nor": 135, "matric": [135, 138, 140, 158, 284], "suppli": [137, 139, 184, 213], "tol": [138, 202], "rank": 138, "singular": [138, 142], "threshold": 138, "ep": 138, "epsilon": 138, "assum": 138, "enabl": 138, "treat": [139, 166, 168, 169], "last": [139, 237, 248], "ord": 140, "abl": 140, "eight": 140, "infinit": 140, "unless": 140, "under": 140, "With": 140, "reduc": [141, 142], "q": [141, 157], "orthonorm": 141, "r": 141, "full_matric": 142, "compute_uv": 142, "reconstruct": 142, "2d": 142, "u": 142, "vh": 142, "smat": 142, "4d": 142, "retstep": 143, "end": 143, "logarithm": [143, 144, 145, 146, 147, 200, 284], "natur": [144, 147], "plu": [144, 147], "30102999566": 145, "69314718": 146, "09861229": 146, "show": [151, 158, 222], "uniformli": [152, 184, 228], "directli": 152, "215": 152, "443469": 152, "464": 152, "15888336": 152, "316": 152, "22776602": 152, "562": 152, "34132519": 152, "0396842": 152, "34960421": 152, "rule": [153, 259], "deviat": [156, 184, 199, 206, 250, 268], "while": [156, 170, 173, 250, 268], "overwrite_input": 157, "xi": 158, "spars": 158, "xy": 158, "coordin": 158, "xn": 158, "nx": 158, "ny": 158, "xv": 158, "yv": 158, "matplotlib": [158, 222], "pyplot": [158, 222], "plt": [158, 222], "xx": 158, "yy": 158, "contourf": 158, "dpnp_iface_arraycr": [159, 175], "mgridclass": 159, "dens": 159, "5j": [159, 175], "fraction": 163, "destin": 164, "remain": [164, 237], "usm": [164, 184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 248], "interchang": [164, 253], "_novalu": [170, 250, 268], "alia": [171, 184, 214, 217, 219], "out2": 173, "ogridclass": 175, "open": [175, 184, 214, 216, 217, 219, 228], "deg": 183, "52359878": 183, "04719755": 183, "0943951": 183, "61799388": 183, "mersenn": 184, "twister": 184, "pseudo": 184, "maximumum": [184, 220], "string": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "sycldevic": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "syclqueu": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "concept": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228, 280], "oneapi": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "filter": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "selector": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 228], "intern": 184, "state": 184, "get_sycl_queu": 184, "loc": [184, 195, 197, 198, 206, 230], "draw": [184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "gaussian": [184, 206, 230], "share": [184, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228], "drawn": [184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 212, 215, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232], "parameter": [184, 206, 228], "58997253": 184, "84288406": 184, "33836967": 184, "16394577": 184, "40882036": 184, "39295758": 184, "48927254": 184, "74921661": 184, "13436424": 184, "56920387": 184, "84743374": 184, "80226506": 184, "76377462": 184, "06310682": 184, "25506903": 184, "1179187": 184, "49543509": 184, "76096244": 184, "low": [184, 212, 215, 228], "high": [184, 212, 215, 228], "inclus": [184, 212, 215], "exclus": [184, 212], "half": [184, 214, 216, 217, 219, 228], "omit": [184, 212, 271], "d0": [184, 211, 213], "d1": [184, 213], "dn": [184, 211, 213], "were": [184, 213], "84401099": 184, "four": [184, 213], "88997253": 184, "54288406": 184, "63836967": 184, "46394577": 184, "70882036": 184, "69295758": 184, "78927254": 184, "04921661": 184, "continu": [184, 216], "stdev": [184, 225], "81715362": 184, "54465213": 184, "18557831": 184, "28352814": 184, "67718303": 184, "11570901": 184, "21968665": 184, "18236388": 184, "08156915": 184, "21941987": 184, "24544512": 184, "63522211": 184, "673174": 184, "exclud": [184, 228], "54": 184, "48093112": 184, "52928804": 184, "1196081": 184, "6990877": 184, "34074171": 184, "conveni": 184, "accept": 184, "alpha": [185, 190, 191, 207, 210], "p": [186, 189, 194, 200, 203], "trial": 186, "probabl": [186, 194, 203], "coin": 186, "world": [186, 203], "compani": [186, 203], "drill": [186, 203], "wild": [186, 203], "cat": [186, 203], "oil": [186, 203], "explor": [186, 203], "success": [186, 194, 203], "nine": 186, "fail": 186, "let": 186, "000": 186, "model": 186, "20000": 186, "answer": 186, "38885": 186, "fallback": [187, 189, 190, 200, 205, 221], "df": [188, 204, 226, 227], "chi": [188, 204], "89920014": 188, "00867716": 188, "13710533": 188, "62318272": 188, "dfnum": [192, 205], "dfden": [192, 205], "ten": 194, "thousand": 194, "individu": 194, "35": 194, "10000": [194, 209, 218, 228], "mu": [195, 199, 206, 229], "ngood": 196, "nbad": 196, "nsampl": 196, "nsamp": 196, "good": 196, "bad": 196, "doubl": 197, "decai": 197, "sigma": [199, 206], "seri": 200, "pval": 201, "iinfo": 201, "throw": 201, "dice": 201, "check_valid": 202, "warn": 202, "multivari": 202, "after": 203, "100000": 203, "nonc": [204, 205], "noncentr": [204, 205], "todo": 204, "ii": 207, "lomax": 207, "randomli": 208, "lam": 209, "randomst": 212, "1923875335537315": 213, "rese": 220, "legaci": 220, "mt19937": 220, "engin": 220, "modifi": 221, "cauchi": 222, "lorentz": 222, "plot": 222, "1000000": [222, 224, 226, 227], "3x8000": 223, "8000": 223, "student": 226, "freedom": 226, "kappa": 229, "von": 229, "mise": 229, "dispers": 229, "33": 234, "3003003": 234, "len": 236, "newshap": 237, "One": 237, "infer": 237, "write": 237, "fastest": 237, "back": 237, "slowest": 237, "account": 237, "underli": 237, "never": 237, "reus": 237, "guarante": 237, "unspecifi": 237, "backward": 239, "li": 239, "detail": 240, "side": 241, "sorter": 241, "maintain": 241, "742278e": 243, "3012989": 244, "548739": 244, "traceback": 248, "recent": 248, "nd": 249, "nest": 249, "118033988749895": 250, "entir": 252, "22460635e": 254, "63317787e": 254, "996272": 255, "917152": 255, "32": 256, "whenev": 258, "dx": 259, "composit": 259, "trapezoid": 259, "delta": 266, "complement": 266, "phase": 266, "49778714": 266, "28318531": 266, "increas": 267, "vandermond": 267, "125": 267, "condit": 271, "chosen": 271, "70": 271, "80": 271, "algebra": [274, 284], "mathemat": [274, 284], "polynomi": [274, 284], "search": [274, 284], "statist": [274, 284], "summari": 274, "level": 274, "util": 274, "counterpart": 280, "basic": [280, 284], "cover": 284, "ad": 284, "elementwis": [284, 288], "pack": 284, "helper": 284, "equat": 284, "poly1d": 284, "variou": 288}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[10, 1, 1, "", "abs"], [11, 1, 1, "", "absolute"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "allclose"], [15, 1, 1, "", "amax"], [16, 1, 1, "", "amin"], [17, 1, 1, "", "any"], [18, 1, 1, "", "arange"], [19, 1, 1, "", "arccos"], [20, 1, 1, "", "arccosh"], [21, 1, 1, "", "arcsin"], [22, 1, 1, "", "arcsinh"], [23, 1, 1, "", "arctan"], [24, 1, 1, "", "arctan2"], [25, 1, 1, "", "arctanh"], [26, 1, 1, "", "argmax"], [27, 1, 1, "", "argmin"], [28, 1, 1, "", "argsort"], [29, 1, 1, "", "around"], [30, 1, 1, "", "array"], [31, 1, 1, "", "array_equal"], [32, 1, 1, "", "asanyarray"], [33, 1, 1, "", "asarray"], [34, 1, 1, "", "ascontiguousarray"], [35, 1, 1, "", "asfarray"], [36, 1, 1, "", "asfortranarray"], [37, 1, 1, "", "asnumpy"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bincount"], [43, 1, 1, "", "bitwise_and"], [44, 1, 1, "", "bitwise_not"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "broadcast_to"], [48, 1, 1, "", "cbrt"], [49, 1, 1, "", "ceil"], [50, 1, 1, "", "concatenate"], [51, 1, 1, "", "conj"], [52, 1, 1, "", "convolve"], [53, 1, 1, "", "copy"], [54, 1, 1, "", "copysign"], [55, 1, 1, "", "copyto"], [56, 1, 1, "", "correlate"], [57, 1, 1, "", "cos"], [58, 1, 1, "", "cosh"], [59, 1, 1, "", "count_nonzero"], [60, 1, 1, "", "cov"], [61, 1, 1, "", "cross"], [62, 1, 1, "", "cumprod"], [63, 1, 1, "", "cumsum"], [64, 1, 1, "", "deg2rad"], [65, 1, 1, "", "degrees"], [66, 1, 1, "", "diag"], [67, 1, 1, "", "diagflat"], [68, 1, 1, "", "diff"], [69, 1, 1, "", "divide"], [70, 1, 1, "", "dot"], [72, 1, 1, "", "ediff1d"], [73, 1, 1, "", "einsum"], [74, 1, 1, "", "einsum_path"], [75, 1, 1, "", "empty"], [76, 1, 1, "", "empty_like"], [77, 1, 1, "", "equal"], [78, 1, 1, "", "erf"], [79, 1, 1, "", "exp"], [80, 1, 1, "", "exp2"], [81, 1, 1, "", "expand_dims"], [82, 1, 1, "", "expm1"], [83, 1, 1, "", "eye"], [84, 1, 1, "", "fabs"], [9, 0, 0, "-", "fft"], [103, 1, 1, "", "floor"], [104, 1, 1, "", "floor_divide"], [105, 1, 1, "", "fmax"], [106, 1, 1, "", "fmin"], [107, 1, 1, "", "fmod"], [108, 1, 1, "", "fromfile"], [109, 1, 1, "", "full"], [110, 1, 1, "", "full_like"], [111, 1, 1, "", "geomspace"], [112, 1, 1, "", "get_include"], [113, 1, 1, "", "gradient"], [114, 1, 1, "", "greater"], [115, 1, 1, "", "greater_equal"], [116, 1, 1, "", "histogram"], [117, 1, 1, "", "hstack"], [118, 1, 1, "", "hypot"], [119, 1, 1, "", "identity"], [120, 1, 1, "", "inner"], [121, 1, 1, "", "invert"], [122, 1, 1, "", "isclose"], [123, 1, 1, "", "isfinite"], [124, 1, 1, "", "isinf"], [125, 1, 1, "", "isnan"], [126, 1, 1, "", "isscalar"], [127, 1, 1, "", "kron"], [128, 1, 1, "", "left_shift"], [129, 1, 1, "", "less"], [130, 1, 1, "", "less_equal"], [143, 1, 1, "", "linspace"], [144, 1, 1, "", "log"], [145, 1, 1, "", "log10"], [146, 1, 1, "", "log1p"], [147, 1, 1, "", "log2"], [148, 1, 1, "", "logical_and"], [149, 1, 1, "", "logical_not"], [150, 1, 1, "", "logical_or"], [151, 1, 1, "", "logical_xor"], [152, 1, 1, "", "logspace"], [153, 1, 1, "", "matmul"], [154, 1, 1, "", "max"], [155, 1, 1, "", "maximum"], [156, 1, 1, "", "mean"], [157, 1, 1, "", "median"], [158, 1, 1, "", "meshgrid"], [159, 5, 1, "", "mgrid"], [160, 1, 1, "", "min"], [161, 1, 1, "", "minimum"], [162, 1, 1, "", "mod"], [163, 1, 1, "", "modf"], [164, 1, 1, "", "moveaxis"], [165, 1, 1, "", "multiply"], [166, 1, 1, "", "nancumprod"], [167, 1, 1, "", "nancumsum"], [168, 1, 1, "", "nanprod"], [169, 1, 1, "", "nansum"], [170, 1, 1, "", "nanvar"], [171, 3, 1, "", "ndarray"], [172, 1, 1, "", "negative"], [173, 1, 1, "", "nonzero"], [174, 1, 1, "", "not_equal"], [175, 5, 1, "", "ogrid"], [176, 1, 1, "", "ones"], [177, 1, 1, "", "ones_like"], [178, 1, 1, "", "outer"], [179, 1, 1, "", "partition"], [180, 1, 1, "", "power"], [181, 1, 1, "", "prod"], [182, 1, 1, "", "rad2deg"], [183, 1, 1, "", "radians"], [283, 0, 0, "-", "random"], [233, 1, 1, "", "ravel"], [234, 1, 1, "", "reciprocal"], [235, 1, 1, "", "remainder"], [236, 1, 1, "", "repeat"], [237, 1, 1, "", "reshape"], [238, 1, 1, "", "right_shift"], [239, 1, 1, "", "rollaxis"], [240, 1, 1, "", "round_"], [241, 1, 1, "", "searchsorted"], [242, 1, 1, "", "sign"], [243, 1, 1, "", "sin"], [244, 1, 1, "", "sinh"], [245, 1, 1, "", "sort"], [246, 1, 1, "", "sqrt"], [247, 1, 1, "", "square"], [248, 1, 1, "", "squeeze"], [249, 1, 1, "", "stack"], [250, 1, 1, "", "std"], [251, 1, 1, "", "subtract"], [252, 1, 1, "", "sum"], [253, 1, 1, "", "swapaxes"], [254, 1, 1, "", "tan"], [255, 1, 1, "", "tanh"], [256, 1, 1, "", "tensordot"], [257, 1, 1, "", "trace"], [258, 1, 1, "", "transpose"], [259, 1, 1, "", "trapz"], [260, 1, 1, "", "tri"], [261, 1, 1, "", "tril"], [262, 1, 1, "", "triu"], [263, 1, 1, "", "true_divide"], [264, 1, 1, "", "trunc"], [265, 1, 1, "", "unique"], [266, 1, 1, "", "unwrap"], [267, 1, 1, "", "vander"], [268, 1, 1, "", "var"], [269, 1, 1, "", "vdot"], [270, 1, 1, "", "vstack"], [271, 1, 1, "", "where"], [272, 1, 1, "", "zeros"], [273, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[71, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[71, 3, 1, "", "T"], [71, 4, 1, "", "__eq__"], [71, 4, 1, "", "__ge__"], [71, 4, 1, "", "__getitem__"], [71, 4, 1, "", "__gt__"], [71, 4, 1, "", "__le__"], [71, 4, 1, "", "__len__"], [71, 4, 1, "", "__lt__"], [71, 4, 1, "", "__ne__"], [71, 4, 1, "", "__setitem__"], [71, 4, 1, "", "all"], [71, 4, 1, "", "any"], [71, 4, 1, "", "argmax"], [71, 4, 1, "", "argmin"], [71, 4, 1, "", "argsort"], [71, 4, 1, "", "asnumpy"], [71, 4, 1, "", "astype"], [71, 4, 1, "", "choose"], [71, 4, 1, "", "conj"], [71, 4, 1, "", "conjugate"], [71, 4, 1, "", "cumsum"], [71, 3, 1, "", "device"], [71, 4, 1, "", "diagonal"], [71, 4, 1, "", "dot"], [71, 3, 1, "", "dtype"], [71, 4, 1, "", "fill"], [71, 3, 1, "", "flags"], [71, 3, 1, "", "flat"], [71, 4, 1, "", "flatten"], [71, 4, 1, "", "get_array"], [71, 4, 1, "", "item"], [71, 3, 1, "", "itemsize"], [71, 4, 1, "", "max"], [71, 4, 1, "", "mean"], [71, 4, 1, "", "min"], [71, 3, 1, "", "nbytes"], [71, 3, 1, "", "ndim"], [71, 4, 1, "", "nonzero"], [71, 4, 1, "", "partition"], [71, 4, 1, "", "prod"], [71, 4, 1, "", "reshape"], [71, 4, 1, "", "round"], [71, 3, 1, "", "shape"], [71, 3, 1, "", "size"], [71, 4, 1, "", "squeeze"], [71, 4, 1, "", "std"], [71, 3, 1, "", "strides"], [71, 4, 1, "", "sum"], [71, 3, 1, "", "sycl_context"], [71, 3, 1, "", "sycl_device"], [71, 3, 1, "", "sycl_queue"], [71, 4, 1, "", "take"], [71, 4, 1, "", "to_device"], [71, 4, 1, "", "transpose"], [71, 3, 1, "", "usm_type"], [71, 4, 1, "", "var"]], "dpnp.fft": [[85, 1, 1, "", "fft"], [86, 1, 1, "", "fft2"], [87, 1, 1, "", "fftfreq"], [88, 1, 1, "", "fftn"], [89, 1, 1, "", "fftshift"], [90, 1, 1, "", "hfft"], [91, 1, 1, "", "ifft"], [92, 1, 1, "", "ifft2"], [93, 1, 1, "", "ifftn"], [94, 1, 1, "", "ifftshift"], [95, 1, 1, "", "ihfft"], [96, 1, 1, "", "irfft"], [97, 1, 1, "", "irfft2"], [98, 1, 1, "", "irfftn"], [99, 1, 1, "", "rfft"], [100, 1, 1, "", "rfft2"], [101, 1, 1, "", "rfftfreq"], [102, 1, 1, "", "rfftn"]], "dpnp.linalg": [[131, 1, 1, "", "cholesky"], [132, 1, 1, "", "det"], [133, 1, 1, "", "eig"], [134, 1, 1, "", "eigh"], [135, 1, 1, "", "eigvals"], [136, 1, 1, "", "inv"], [137, 1, 1, "", "matrix_power"], [138, 1, 1, "", "matrix_rank"], [139, 1, 1, "", "multi_dot"], [140, 1, 1, "", "norm"], [141, 1, 1, "", "qr"], [142, 1, 1, "", "svd"]], "dpnp.random": [[184, 2, 1, "", "RandomState"], [185, 1, 1, "", "beta"], [186, 1, 1, "", "binomial"], [187, 1, 1, "", "bytes"], [188, 1, 1, "", "chisquare"], [189, 1, 1, "", "choice"], [190, 1, 1, "", "dirichlet"], [191, 1, 1, "", "exponential"], [192, 1, 1, "", "f"], [193, 1, 1, "", "gamma"], [194, 1, 1, "", "geometric"], [195, 1, 1, "", "gumbel"], [196, 1, 1, "", "hypergeometric"], [197, 1, 1, "", "laplace"], [198, 1, 1, "", "logistic"], [199, 1, 1, "", "lognormal"], [200, 1, 1, "", "logseries"], [201, 1, 1, "", "multinomial"], [202, 1, 1, "", "multivariate_normal"], [203, 1, 1, "", "negative_binomial"], [204, 1, 1, "", "noncentral_chisquare"], [205, 1, 1, "", "noncentral_f"], [206, 1, 1, "", "normal"], [207, 1, 1, "", "pareto"], [208, 1, 1, "", "permutation"], [209, 1, 1, "", "poisson"], [210, 1, 1, "", "power"], [211, 1, 1, "", "rand"], [212, 1, 1, "", "randint"], [213, 1, 1, "", "randn"], [214, 1, 1, "", "random"], [215, 1, 1, "", "random_integers"], [216, 1, 1, "", "random_sample"], [217, 1, 1, "", "ranf"], [218, 1, 1, "", "rayleigh"], [219, 1, 1, "", "sample"], [220, 1, 1, "", "seed"], [221, 1, 1, "", "shuffle"], [222, 1, 1, "", "standard_cauchy"], [223, 1, 1, "", "standard_exponential"], [224, 1, 1, "", "standard_gamma"], [225, 1, 1, "", "standard_normal"], [226, 1, 1, "", "standard_t"], [227, 1, 1, "", "triangular"], [228, 1, 1, "", "uniform"], [229, 1, 1, "", "vonmises"], [230, 1, 1, "", "wald"], [231, 1, 1, "", "weibull"], [232, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[184, 4, 1, "", "__eq__"], [184, 4, 1, "", "__ge__"], [184, 4, 1, "", "__gt__"], [184, 4, 1, "", "__le__"], [184, 4, 1, "", "__lt__"], [184, 4, 1, "", "__ne__"], [184, 4, 1, "", "get_state"], [184, 4, 1, "", "get_sycl_device"], [184, 4, 1, "", "get_sycl_queue"], [184, 4, 1, "", "normal"], [184, 4, 1, "", "rand"], [184, 4, 1, "", "randint"], [184, 4, 1, "", "randn"], [184, 4, 1, "", "random_sample"], [184, 4, 1, "", "standard_normal"], [184, 4, 1, "", "uniform"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"interplai": 0, "data": [0, 2, 7, 8, 283], "parallel": [0, 2], "control": 0, "librari": 0, "exampl": [0, 4], "c": 1, "backend": 1, "api": [1, 274], "refer": [1, 274], "extens": 2, "numpi": [2, 8], "develop": 2, "inform": 2, "overview": 3, "quick": 4, "start": 4, "guid": 4, "devic": 4, "driver": 4, "python": 4, "interpret": 4, "instal": 4, "packag": [4, 282], "from": [4, 7], "anaconda": 4, "build": 4, "conda": 4, "scikit": 4, "test": [4, 276], "binari": 5, "oper": [5, 276, 277, 278, 288], "elementwis": 5, "bit": [5, 288], "pack": 5, "output": 5, "format": 5, "comparison": [6, 276, 288], "tabl": 6, "summari": 6, "modul": [6, 282], "level": 6, "multi": [6, 280], "dimension": [6, 280], "arrai": [6, 7, 30, 276, 277, 280], "linear": [6, 275], "algebra": [6, 275], "discret": 6, "fourier": 6, "transform": 6, "random": [6, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 283], "sampl": [6, 219, 283], "creation": 7, "routin": [7, 9, 277, 278, 279, 284], "basic": [7, 277, 282], "other": [7, 278], "numer": 7, "rang": 7, "matrix": [7, 275], "differ": [8, 278], "type": [8, 276], "fft": [9, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "function": [9, 276, 278, 286, 287, 288], "standard": 9, "real": 9, "hermitian": 9, "helper": 9, "dpnp": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 283], "ab": 10, "absolut": 11, "add": 12, "all": 13, "allclos": 14, "amax": 15, "amin": 16, "ani": 17, "arang": 18, "arcco": 19, "arccosh": 20, "arcsin": 21, "arcsinh": 22, "arctan": 23, "arctan2": 24, "arctanh": 25, "argmax": 26, "argmin": 27, "argsort": 28, "around": 29, "array_equ": 31, "asanyarrai": 32, "asarrai": 33, "ascontiguousarrai": 34, "asfarrai": 35, "asfortranarrai": 36, "asnumpi": 37, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "averag": 41, "bincount": 42, "bitwise_and": 43, "bitwise_not": 44, "bitwise_or": 45, "bitwise_xor": 46, "broadcast_to": 47, "cbrt": 48, "ceil": 49, "concaten": 50, "conj": 51, "convolv": 52, "copi": 53, "copysign": 54, "copyto": 55, "correl": [56, 287], "co": 57, "cosh": 58, "count_nonzero": 59, "cov": 60, "cross": 61, "cumprod": 62, "cumsum": 63, "deg2rad": 64, "degre": 65, "diag": 66, "diagflat": 67, "diff": 68, "divid": 69, "dot": 70, "dpnp_arrai": 71, "ediff1d": 72, "einsum": 73, "einsum_path": 74, "empti": 75, "empty_lik": 76, "equal": 77, "erf": 78, "exp": 79, "exp2": 80, "expand_dim": 81, "expm1": 82, "ey": 83, "fab": 84, "fft2": 86, "fftfreq": 87, "fftn": 88, "fftshift": 89, "hfft": 90, "ifft": 91, "ifft2": 92, "ifftn": 93, "ifftshift": 94, "ihfft": 95, "irfft": 96, "irfft2": 97, "irfftn": 98, "rfft": 99, "rfft2": 100, "rfftfreq": 101, "rfftn": 102, "floor": 103, "floor_divid": 104, "fmax": 105, "fmin": 106, "fmod": 107, "fromfil": 108, "full": 109, "full_lik": 110, "geomspac": 111, "get_includ": 112, "gradient": 113, "greater": 114, "greater_equ": 115, "histogram": [116, 287], "hstack": 117, "hypot": 118, "ident": 119, "inner": 120, "invert": 121, "isclos": 122, "isfinit": 123, "isinf": 124, "isnan": 125, "isscalar": 126, "kron": 127, "left_shift": 128, "less": 129, "less_equ": 130, "linalg": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "choleski": 131, "det": 132, "eig": 133, "eigh": 134, "eigval": 135, "inv": 136, "matrix_pow": 137, "matrix_rank": 138, "multi_dot": 139, "norm": [140, 275], "qr": 141, "svd": 142, "linspac": 143, "log": 144, "log10": 145, "log1p": 146, "log2": 147, "logical_and": 148, "logical_not": 149, "logical_or": 150, "logical_xor": 151, "logspac": 152, "matmul": 153, "max": 154, "maximum": 155, "mean": [156, 287], "median": 157, "meshgrid": 158, "mgrid": 159, "min": 160, "minimum": 161, "mod": 162, "modf": 163, "moveaxi": 164, "multipli": 165, "nancumprod": 166, "nancumsum": 167, "nanprod": 168, "nansum": 169, "nanvar": 170, "ndarrai": [171, 280], "neg": 172, "nonzero": 173, "not_equ": 174, "ogrid": 175, "ones": 176, "ones_lik": 177, "outer": 178, "partit": 179, "power": [180, 210], "prod": 181, "rad2deg": 182, "radian": 183, "randomst": 184, "beta": 185, "binomi": 186, "byte": 187, "chisquar": 188, "choic": 189, "dirichlet": 190, "exponenti": 191, "f": 192, "gamma": 193, "geometr": 194, "gumbel": 195, "hypergeometr": 196, "laplac": 197, "logist": 198, "lognorm": 199, "logseri": 200, "multinomi": 201, "multivariate_norm": 202, "negative_binomi": 203, "noncentral_chisquar": 204, "noncentral_f": 205, "normal": 206, "pareto": 207, "permut": [208, 283], "poisson": 209, "rand": 211, "randint": 212, "randn": 213, "random_integ": 215, "random_sampl": 216, "ranf": 217, "rayleigh": 218, "seed": 220, "shuffl": 221, "standard_cauchi": 222, "standard_exponenti": 223, "standard_gamma": 224, "standard_norm": 225, "standard_t": 226, "triangular": 227, "uniform": 228, "vonmis": 229, "wald": 230, "weibul": 231, "zipf": 232, "ravel": 233, "reciproc": 234, "remaind": 235, "repeat": 236, "reshap": 237, "right_shift": 238, "rollaxi": 239, "round_": 240, "searchsort": 241, "sign": 242, "sin": 243, "sinh": 244, "sort": [245, 285], "sqrt": 246, "squar": 247, "squeez": 248, "stack": 249, "std": 250, "subtract": 251, "sum": [252, 278], "swapax": 253, "tan": 254, "tanh": 255, "tensordot": 256, "trace": 257, "transpos": [258, 277], "trapz": 259, "tri": 260, "tril": 261, "triu": 262, "true_divid": 263, "trunc": 264, "uniqu": 265, "unwrap": 266, "vander": 267, "var": 268, "vdot": 269, "vstack": 270, "where": 271, "zero": 272, "zeros_lik": 273, "vector": 275, "product": [275, 278], "decomposit": 275, "eigenvalu": 275, "etc": 275, "solv": 275, "equat": 275, "special": [275, 278, 286], "matric": 275, "logic": 276, "truth": 276, "valu": 276, "infin": 276, "nan": 276, "manipul": 277, "chang": 277, "shape": 277, "like": 277, "number": [277, 278], "dimens": 277, "kind": 277, "join": 277, "split": 277, "tile": 277, "ad": 277, "remov": 277, "element": 277, "rearrang": 277, "mathemat": 278, "trigonometr": [278, 288], "hyperbol": 278, "round": 278, "expon": 278, "logarithm": 278, "float": [278, 288], "point": 278, "arithmet": [278, 282], "handl": 278, "complex": 278, "miscellan": [278, 279], "util": 279, "pad": 281, "polynomi": 282, "polyutil": 282, "poly1d": 282, "simpl": 283, "distribut": 283, "gener": 283, "search": 285, "count": 285, "error": 286, "statist": 287, "order": 287, "varianc": 287, "univers": 288, "ufunc": 288, "avail": 288, "math": 288, "twiddl": 288}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Interplay with the Data Parallel Control Library": [[0, "interplay-with-the-data-parallel-control-library"]], "Example": [[0, "example"]], "C++ backend API Reference": [[1, "c-backend-api-reference"]], "Data Parallel Extension for NumPy*": [[2, "module-dpnp"]], "Development information": [[2, null]], "Overview": [[3, "id1"]], "Quick Start Guide": [[4, "id1"]], "Device Drivers": [[4, "device-drivers"]], "Python Interpreter": [[4, "python-interpreter"]], "Installation": [[4, "installation"]], "Install Package from Anaconda": [[4, "install-package-from-anaconda"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Testing": [[4, "testing"]], "Examples": [[4, "examples"]], "Binary Operations": [[5, "binary-operations"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Bit packing": [[5, "bit-packing"]], "Output formatting": [[5, "output-formatting"]], "Comparison Table": [[6, "comparison-table"]], "Summary": [[6, "summary"]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Linear Algebra": [[6, "linear-algebra"], [275, "linear-algebra"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Random Sampling": [[6, "random-sampling"]], "Array Creation Routines": [[7, "array-creation-routines"]], "Basic creation routines": [[7, "basic-creation-routines"]], "Creation from other data": [[7, "creation-from-other-data"]], "Numerical ranges": [[7, "numerical-ranges"]], "Matrix creation": [[7, "matrix-creation"]], "Difference with NumPy*": [[8, "difference-with-numpy"]], "Data types": [[8, "data-types"]], "FFT Functions": [[9, "fft-functions"]], "Standard FFTs": [[9, "standard-ffts"]], "Real FFTs": [[9, "real-ffts"]], "Hermitian FFTs": [[9, "hermitian-ffts"]], "Helper routines": [[9, "helper-routines"]], "dpnp.abs": [[10, "dpnp-abs"]], "dpnp.absolute": [[11, "dpnp-absolute"]], "dpnp.add": [[12, "dpnp-add"]], "dpnp.all": [[13, "dpnp-all"]], "dpnp.allclose": [[14, "dpnp-allclose"]], "dpnp.amax": [[15, "dpnp-amax"]], "dpnp.amin": [[16, "dpnp-amin"]], "dpnp.any": [[17, "dpnp-any"]], "dpnp.arange": [[18, "dpnp-arange"]], "dpnp.arccos": [[19, "dpnp-arccos"]], "dpnp.arccosh": [[20, "dpnp-arccosh"]], "dpnp.arcsin": [[21, "dpnp-arcsin"]], "dpnp.arcsinh": [[22, "dpnp-arcsinh"]], "dpnp.arctan": [[23, "dpnp-arctan"]], "dpnp.arctan2": [[24, "dpnp-arctan2"]], "dpnp.arctanh": [[25, "dpnp-arctanh"]], "dpnp.argmax": [[26, "dpnp-argmax"]], "dpnp.argmin": [[27, "dpnp-argmin"]], "dpnp.argsort": [[28, "dpnp-argsort"]], "dpnp.around": [[29, "dpnp-around"]], "dpnp.array": [[30, "dpnp-array"]], "dpnp.array_equal": [[31, "dpnp-array-equal"]], "dpnp.asanyarray": [[32, "dpnp-asanyarray"]], "dpnp.asarray": [[33, "dpnp-asarray"]], "dpnp.ascontiguousarray": [[34, "dpnp-ascontiguousarray"]], "dpnp.asfarray": [[35, "dpnp-asfarray"]], "dpnp.asfortranarray": [[36, "dpnp-asfortranarray"]], "dpnp.asnumpy": [[37, "dpnp-asnumpy"]], "dpnp.atleast_1d": [[38, "dpnp-atleast-1d"]], "dpnp.atleast_2d": [[39, "dpnp-atleast-2d"]], "dpnp.atleast_3d": [[40, "dpnp-atleast-3d"]], "dpnp.average": [[41, "dpnp-average"]], "dpnp.bincount": [[42, "dpnp-bincount"]], "dpnp.bitwise_and": [[43, "dpnp-bitwise-and"]], "dpnp.bitwise_not": [[44, "dpnp-bitwise-not"]], "dpnp.bitwise_or": [[45, "dpnp-bitwise-or"]], "dpnp.bitwise_xor": [[46, "dpnp-bitwise-xor"]], "dpnp.broadcast_to": [[47, "dpnp-broadcast-to"]], "dpnp.cbrt": [[48, "dpnp-cbrt"]], "dpnp.ceil": [[49, "dpnp-ceil"]], "dpnp.concatenate": [[50, "dpnp-concatenate"]], "dpnp.conj": [[51, "dpnp-conj"]], "dpnp.convolve": [[52, "dpnp-convolve"]], "dpnp.copy": [[53, "dpnp-copy"]], "dpnp.copysign": [[54, "dpnp-copysign"]], "dpnp.copyto": [[55, "dpnp-copyto"]], "dpnp.correlate": [[56, "dpnp-correlate"]], "dpnp.cos": [[57, "dpnp-cos"]], "dpnp.cosh": [[58, "dpnp-cosh"]], "dpnp.count_nonzero": [[59, "dpnp-count-nonzero"]], "dpnp.cov": [[60, "dpnp-cov"]], "dpnp.cross": [[61, "dpnp-cross"]], "dpnp.cumprod": [[62, "dpnp-cumprod"]], "dpnp.cumsum": [[63, "dpnp-cumsum"]], "dpnp.deg2rad": [[64, "dpnp-deg2rad"]], "dpnp.degrees": [[65, "dpnp-degrees"]], "dpnp.diag": [[66, "dpnp-diag"]], "dpnp.diagflat": [[67, "dpnp-diagflat"]], "dpnp.diff": [[68, "dpnp-diff"]], "dpnp.divide": [[69, "dpnp-divide"]], "dpnp.dot": [[70, "dpnp-dot"]], "dpnp.dpnp_array.dpnp_array": [[71, "dpnp-dpnp-array-dpnp-array"]], "dpnp.ediff1d": [[72, "dpnp-ediff1d"]], "dpnp.einsum": [[73, "dpnp-einsum"]], "dpnp.einsum_path": [[74, "dpnp-einsum-path"]], "dpnp.empty": [[75, "dpnp-empty"]], "dpnp.empty_like": [[76, "dpnp-empty-like"]], "dpnp.equal": [[77, "dpnp-equal"]], "dpnp.erf": [[78, "dpnp-erf"]], "dpnp.exp": [[79, "dpnp-exp"]], "dpnp.exp2": [[80, "dpnp-exp2"]], "dpnp.expand_dims": [[81, "dpnp-expand-dims"]], "dpnp.expm1": [[82, "dpnp-expm1"]], "dpnp.eye": [[83, "dpnp-eye"]], "dpnp.fabs": [[84, "dpnp-fabs"]], "dpnp.fft.fft": [[85, "dpnp-fft-fft"]], "dpnp.fft.fft2": [[86, "dpnp-fft-fft2"]], "dpnp.fft.fftfreq": [[87, "dpnp-fft-fftfreq"]], "dpnp.fft.fftn": [[88, "dpnp-fft-fftn"]], "dpnp.fft.fftshift": [[89, "dpnp-fft-fftshift"]], "dpnp.fft.hfft": [[90, "dpnp-fft-hfft"]], "dpnp.fft.ifft": [[91, "dpnp-fft-ifft"]], "dpnp.fft.ifft2": [[92, "dpnp-fft-ifft2"]], "dpnp.fft.ifftn": [[93, "dpnp-fft-ifftn"]], "dpnp.fft.ifftshift": [[94, "dpnp-fft-ifftshift"]], "dpnp.fft.ihfft": [[95, "dpnp-fft-ihfft"]], "dpnp.fft.irfft": [[96, "dpnp-fft-irfft"]], "dpnp.fft.irfft2": [[97, "dpnp-fft-irfft2"]], "dpnp.fft.irfftn": [[98, "dpnp-fft-irfftn"]], "dpnp.fft.rfft": [[99, "dpnp-fft-rfft"]], "dpnp.fft.rfft2": [[100, "dpnp-fft-rfft2"]], "dpnp.fft.rfftfreq": [[101, "dpnp-fft-rfftfreq"]], "dpnp.fft.rfftn": [[102, "dpnp-fft-rfftn"]], "dpnp.floor": [[103, "dpnp-floor"]], "dpnp.floor_divide": [[104, "dpnp-floor-divide"]], "dpnp.fmax": [[105, "dpnp-fmax"]], "dpnp.fmin": [[106, "dpnp-fmin"]], "dpnp.fmod": [[107, "dpnp-fmod"]], "dpnp.fromfile": [[108, "dpnp-fromfile"]], "dpnp.full": [[109, "dpnp-full"]], "dpnp.full_like": [[110, "dpnp-full-like"]], "dpnp.geomspace": [[111, "dpnp-geomspace"]], "dpnp.get_include": [[112, "dpnp-get-include"]], "dpnp.gradient": [[113, "dpnp-gradient"]], "dpnp.greater": [[114, "dpnp-greater"]], "dpnp.greater_equal": [[115, "dpnp-greater-equal"]], "dpnp.histogram": [[116, "dpnp-histogram"]], "dpnp.hstack": [[117, "dpnp-hstack"]], "dpnp.hypot": [[118, "dpnp-hypot"]], "dpnp.identity": [[119, "dpnp-identity"]], "dpnp.inner": [[120, "dpnp-inner"]], "dpnp.invert": [[121, "dpnp-invert"]], "dpnp.isclose": [[122, "dpnp-isclose"]], "dpnp.isfinite": [[123, "dpnp-isfinite"]], "dpnp.isinf": [[124, "dpnp-isinf"]], "dpnp.isnan": [[125, "dpnp-isnan"]], "dpnp.isscalar": [[126, "dpnp-isscalar"]], "dpnp.kron": [[127, "dpnp-kron"]], "dpnp.left_shift": [[128, "dpnp-left-shift"]], "dpnp.less": [[129, "dpnp-less"]], "dpnp.less_equal": [[130, "dpnp-less-equal"]], "dpnp.linalg.cholesky": [[131, "dpnp-linalg-cholesky"]], "dpnp.linalg.det": [[132, "dpnp-linalg-det"]], "dpnp.linalg.eig": [[133, "dpnp-linalg-eig"]], "dpnp.linalg.eigh": [[134, "dpnp-linalg-eigh"]], "dpnp.linalg.eigvals": [[135, "dpnp-linalg-eigvals"]], "dpnp.linalg.inv": [[136, "dpnp-linalg-inv"]], "dpnp.linalg.matrix_power": [[137, "dpnp-linalg-matrix-power"]], "dpnp.linalg.matrix_rank": [[138, "dpnp-linalg-matrix-rank"]], "dpnp.linalg.multi_dot": [[139, "dpnp-linalg-multi-dot"]], "dpnp.linalg.norm": [[140, "dpnp-linalg-norm"]], "dpnp.linalg.qr": [[141, "dpnp-linalg-qr"]], "dpnp.linalg.svd": [[142, "dpnp-linalg-svd"]], "dpnp.linspace": [[143, "dpnp-linspace"]], "dpnp.log": [[144, "dpnp-log"]], "dpnp.log10": [[145, "dpnp-log10"]], "dpnp.log1p": [[146, "dpnp-log1p"]], "dpnp.log2": [[147, "dpnp-log2"]], "dpnp.logical_and": [[148, "dpnp-logical-and"]], "dpnp.logical_not": [[149, "dpnp-logical-not"]], "dpnp.logical_or": [[150, "dpnp-logical-or"]], "dpnp.logical_xor": [[151, "dpnp-logical-xor"]], "dpnp.logspace": [[152, "dpnp-logspace"]], "dpnp.matmul": [[153, "dpnp-matmul"]], "dpnp.max": [[154, "dpnp-max"]], "dpnp.maximum": [[155, "dpnp-maximum"]], "dpnp.mean": [[156, "dpnp-mean"]], "dpnp.median": [[157, "dpnp-median"]], "dpnp.meshgrid": [[158, "dpnp-meshgrid"]], "dpnp.mgrid": [[159, "dpnp-mgrid"]], "dpnp.min": [[160, "dpnp-min"]], "dpnp.minimum": [[161, "dpnp-minimum"]], "dpnp.mod": [[162, "dpnp-mod"]], "dpnp.modf": [[163, "dpnp-modf"]], "dpnp.moveaxis": [[164, "dpnp-moveaxis"]], "dpnp.multiply": [[165, "dpnp-multiply"]], "dpnp.nancumprod": [[166, "dpnp-nancumprod"]], "dpnp.nancumsum": [[167, "dpnp-nancumsum"]], "dpnp.nanprod": [[168, "dpnp-nanprod"]], "dpnp.nansum": [[169, "dpnp-nansum"]], "dpnp.nanvar": [[170, "dpnp-nanvar"]], "dpnp.ndarray": [[171, "dpnp-ndarray"]], "dpnp.negative": [[172, "dpnp-negative"]], "dpnp.nonzero": [[173, "dpnp-nonzero"]], "dpnp.not_equal": [[174, "dpnp-not-equal"]], "dpnp.ogrid": [[175, "dpnp-ogrid"]], "dpnp.ones": [[176, "dpnp-ones"]], "dpnp.ones_like": [[177, "dpnp-ones-like"]], "dpnp.outer": [[178, "dpnp-outer"]], "dpnp.partition": [[179, "dpnp-partition"]], "dpnp.power": [[180, "dpnp-power"]], "dpnp.prod": [[181, "dpnp-prod"]], "dpnp.rad2deg": [[182, "dpnp-rad2deg"]], "dpnp.radians": [[183, "dpnp-radians"]], "dpnp.random.RandomState": [[184, "dpnp-random-randomstate"]], "dpnp.random.beta": [[185, "dpnp-random-beta"]], "dpnp.random.binomial": [[186, "dpnp-random-binomial"]], "dpnp.random.bytes": [[187, "dpnp-random-bytes"]], "dpnp.random.chisquare": [[188, "dpnp-random-chisquare"]], "dpnp.random.choice": [[189, "dpnp-random-choice"]], "dpnp.random.dirichlet": [[190, "dpnp-random-dirichlet"]], "dpnp.random.exponential": [[191, "dpnp-random-exponential"]], "dpnp.random.f": [[192, "dpnp-random-f"]], "dpnp.random.gamma": [[193, "dpnp-random-gamma"]], "dpnp.random.geometric": [[194, "dpnp-random-geometric"]], "dpnp.random.gumbel": [[195, "dpnp-random-gumbel"]], "dpnp.random.hypergeometric": [[196, "dpnp-random-hypergeometric"]], "dpnp.random.laplace": [[197, "dpnp-random-laplace"]], "dpnp.random.logistic": [[198, "dpnp-random-logistic"]], "dpnp.random.lognormal": [[199, "dpnp-random-lognormal"]], "dpnp.random.logseries": [[200, "dpnp-random-logseries"]], "dpnp.random.multinomial": [[201, "dpnp-random-multinomial"]], "dpnp.random.multivariate_normal": [[202, "dpnp-random-multivariate-normal"]], "dpnp.random.negative_binomial": [[203, "dpnp-random-negative-binomial"]], "dpnp.random.noncentral_chisquare": [[204, "dpnp-random-noncentral-chisquare"]], "dpnp.random.noncentral_f": [[205, "dpnp-random-noncentral-f"]], "dpnp.random.normal": [[206, "dpnp-random-normal"]], "dpnp.random.pareto": [[207, "dpnp-random-pareto"]], "dpnp.random.permutation": [[208, "dpnp-random-permutation"]], "dpnp.random.poisson": [[209, "dpnp-random-poisson"]], "dpnp.random.power": [[210, "dpnp-random-power"]], "dpnp.random.rand": [[211, "dpnp-random-rand"]], "dpnp.random.randint": [[212, "dpnp-random-randint"]], "dpnp.random.randn": [[213, "dpnp-random-randn"]], "dpnp.random.random": [[214, "dpnp-random-random"]], "dpnp.random.random_integers": [[215, "dpnp-random-random-integers"]], "dpnp.random.random_sample": [[216, "dpnp-random-random-sample"]], "dpnp.random.ranf": [[217, "dpnp-random-ranf"]], "dpnp.random.rayleigh": [[218, "dpnp-random-rayleigh"]], "dpnp.random.sample": [[219, "dpnp-random-sample"]], "dpnp.random.seed": [[220, "dpnp-random-seed"]], "dpnp.random.shuffle": [[221, "dpnp-random-shuffle"]], "dpnp.random.standard_cauchy": [[222, "dpnp-random-standard-cauchy"]], "dpnp.random.standard_exponential": [[223, "dpnp-random-standard-exponential"]], "dpnp.random.standard_gamma": [[224, "dpnp-random-standard-gamma"]], "dpnp.random.standard_normal": [[225, "dpnp-random-standard-normal"]], "dpnp.random.standard_t": [[226, "dpnp-random-standard-t"]], "dpnp.random.triangular": [[227, "dpnp-random-triangular"]], "dpnp.random.uniform": [[228, "dpnp-random-uniform"]], "dpnp.random.vonmises": [[229, "dpnp-random-vonmises"]], "dpnp.random.wald": [[230, "dpnp-random-wald"]], "dpnp.random.weibull": [[231, "dpnp-random-weibull"]], "dpnp.random.zipf": [[232, "dpnp-random-zipf"]], "dpnp.ravel": [[233, "dpnp-ravel"]], "dpnp.reciprocal": [[234, "dpnp-reciprocal"]], "dpnp.remainder": [[235, "dpnp-remainder"]], "dpnp.repeat": [[236, "dpnp-repeat"]], "dpnp.reshape": [[237, "dpnp-reshape"]], "dpnp.right_shift": [[238, "dpnp-right-shift"]], "dpnp.rollaxis": [[239, "dpnp-rollaxis"]], "dpnp.round_": [[240, "dpnp-round"]], "dpnp.searchsorted": [[241, "dpnp-searchsorted"]], "dpnp.sign": [[242, "dpnp-sign"]], "dpnp.sin": [[243, "dpnp-sin"]], "dpnp.sinh": [[244, "dpnp-sinh"]], "dpnp.sort": [[245, "dpnp-sort"]], "dpnp.sqrt": [[246, "dpnp-sqrt"]], "dpnp.square": [[247, "dpnp-square"]], "dpnp.squeeze": [[248, "dpnp-squeeze"]], "dpnp.stack": [[249, "dpnp-stack"]], "dpnp.std": [[250, "dpnp-std"]], "dpnp.subtract": [[251, "dpnp-subtract"]], "dpnp.sum": [[252, "dpnp-sum"]], "dpnp.swapaxes": [[253, "dpnp-swapaxes"]], "dpnp.tan": [[254, "dpnp-tan"]], "dpnp.tanh": [[255, "dpnp-tanh"]], "dpnp.tensordot": [[256, "dpnp-tensordot"]], "dpnp.trace": [[257, "dpnp-trace"]], "dpnp.transpose": [[258, "dpnp-transpose"]], "dpnp.trapz": [[259, "dpnp-trapz"]], "dpnp.tri": [[260, "dpnp-tri"]], "dpnp.tril": [[261, "dpnp-tril"]], "dpnp.triu": [[262, "dpnp-triu"]], "dpnp.true_divide": [[263, "dpnp-true-divide"]], "dpnp.trunc": [[264, "dpnp-trunc"]], "dpnp.unique": [[265, "dpnp-unique"]], "dpnp.unwrap": [[266, "dpnp-unwrap"]], "dpnp.vander": [[267, "dpnp-vander"]], "dpnp.var": [[268, "dpnp-var"]], "dpnp.vdot": [[269, "dpnp-vdot"]], "dpnp.vstack": [[270, "dpnp-vstack"]], "dpnp.where": [[271, "dpnp-where"]], "dpnp.zeros": [[272, "dpnp-zeros"]], "dpnp.zeros_like": [[273, "dpnp-zeros-like"]], "API Reference": [[274, "api-reference"]], "Matrix and vector products": [[275, "matrix-and-vector-products"]], "Decompositions": [[275, "decompositions"]], "Matrix eigenvalues": [[275, "matrix-eigenvalues"]], "Norms etc.": [[275, "norms-etc"]], "Solving linear equations": [[275, "solving-linear-equations"]], "Special Matrices": [[275, "special-matrices"]], "Logic Functions": [[276, "logic-functions"]], "Truth value testing": [[276, "truth-value-testing"]], "Infinities and NaNs": [[276, "infinities-and-nans"]], "Array type testing": [[276, "array-type-testing"]], "Logic operations": [[276, "logic-operations"]], "Comparison": [[276, "comparison"]], "Array Manipulation Routines": [[277, "array-manipulation-routines"]], "Basic operations": [[277, "basic-operations"]], "Changing array shape": [[277, "changing-array-shape"]], "Transpose-like operations": [[277, "transpose-like-operations"]], "Changing number of dimensions": [[277, "changing-number-of-dimensions"]], "Changing kind of array": [[277, "changing-kind-of-array"]], "Joining arrays": [[277, "joining-arrays"]], "Splitting arrays": [[277, "splitting-arrays"]], "Tiling arrays": [[277, "tiling-arrays"]], "Adding and removing elements": [[277, "adding-and-removing-elements"]], "Rearranging elements": [[277, "rearranging-elements"]], "Mathematical Functions": [[278, "mathematical-functions"]], "Trigonometric functions": [[278, "trigonometric-functions"], [288, "trigonometric-functions"]], "Hyperbolic functions": [[278, "hyperbolic-functions"]], "Rounding": [[278, "rounding"]], "Sums, products, differences": [[278, "sums-products-differences"]], "Exponents and logarithms": [[278, "exponents-and-logarithms"]], "Other special functions": [[278, "other-special-functions"]], "Floating point routines": [[278, "floating-point-routines"]], "Arithmetic operations": [[278, "arithmetic-operations"]], "Handling complex numbers": [[278, "handling-complex-numbers"]], "Miscellaneous": [[278, "miscellaneous"]], "Miscellaneous routines": [[279, "miscellaneous-routines"]], "Utility": [[279, "utility"]], "Multi-Dimensional Array (ndarray)": [[280, "multi-dimensional-array-ndarray"]], "Padding": [[281, "padding"]], "Polynomials": [[282, "polynomials"]], "Polynomial Package": [[282, "polynomial-package"]], "Polynomial Module": [[282, "polynomial-module"]], "Polyutils": [[282, "polyutils"]], "Poly1d": [[282, "poly1d"]], "Basics": [[282, "basics"]], "Arithmetic": [[282, "arithmetic"]], "Random Sampling (dpnp.random)": [[283, "random-sampling-dpnp-random"]], "Simple random data": [[283, "simple-random-data"]], "Permutations": [[283, "permutations"]], "Distributions": [[283, "distributions"]], "Random generator": [[283, "random-generator"]], "Routines": [[284, "routines"]], "Sorting, Searching, and Counting": [[285, "sorting-searching-and-counting"]], "Sorting": [[285, "sorting"]], "Searching": [[285, "searching"]], "Counting": [[285, "counting"]], "Special Functions": [[286, "special-functions"]], "Error Function": [[286, "error-function"]], "Statistical Functions": [[287, "statistical-functions"]], "Order statistics": [[287, "order-statistics"]], "Means and variances": [[287, "means-and-variances"]], "Histograms": [[287, "histograms"]], "Correlations": [[287, "correlations"]], "Universal Functions (ufunc)": [[288, "universal-functions-ufunc"]], "Available ufuncs": [[288, "available-ufuncs"]], "Math operations": [[288, "math-operations"]], "Bit-twiddling functions": [[288, "bit-twiddling-functions"]], "Comparison functions": [[288, "comparison-functions"]], "Floating functions": [[288, "floating-functions"]]}, "indexentries": {"dpnp": [[2, "module-dpnp"], [3, "module-dpnp"]], "module": [[2, "module-dpnp"], [3, "module-dpnp"], [9, "module-dpnp.fft"], [283, "module-dpnp.random"]], "dpnp.fft": [[9, "module-dpnp.fft"]], "abs() (in module dpnp)": [[10, "dpnp.abs"]], "absolute() (in module dpnp)": [[11, "dpnp.absolute"]], "add() (in module dpnp)": [[12, "dpnp.add"]], "all() (in module dpnp)": [[13, "dpnp.all"]], "allclose() (in module dpnp)": [[14, "dpnp.allclose"]], "amax() (in module dpnp)": [[15, "dpnp.amax"]], "amin() (in module dpnp)": [[16, "dpnp.amin"]], "any() (in module dpnp)": [[17, "dpnp.any"]], "arange() (in module dpnp)": [[18, "dpnp.arange"]], "arccos() (in module dpnp)": [[19, "dpnp.arccos"]], "arccosh() (in module dpnp)": [[20, "dpnp.arccosh"]], "arcsin() (in module dpnp)": [[21, "dpnp.arcsin"]], "arcsinh() (in module dpnp)": [[22, "dpnp.arcsinh"]], "arctan() (in module dpnp)": [[23, "dpnp.arctan"]], "arctan2() (in module dpnp)": [[24, "dpnp.arctan2"]], "arctanh() (in module dpnp)": [[25, "dpnp.arctanh"]], "argmax() (in module dpnp)": [[26, "dpnp.argmax"]], "argmin() (in module dpnp)": [[27, "dpnp.argmin"]], "argsort() (in module dpnp)": [[28, "dpnp.argsort"]], "around() (in module dpnp)": [[29, "dpnp.around"]], "array() (in module dpnp)": [[30, "dpnp.array"]], "array_equal() (in module dpnp)": [[31, "dpnp.array_equal"]], "asanyarray() (in module dpnp)": [[32, "dpnp.asanyarray"]], "asarray() (in module dpnp)": [[33, "dpnp.asarray"]], "ascontiguousarray() (in module dpnp)": [[34, "dpnp.ascontiguousarray"]], "asfarray() (in module dpnp)": [[35, "dpnp.asfarray"]], "asfortranarray() (in module dpnp)": [[36, "dpnp.asfortranarray"]], "asnumpy() (in module dpnp)": [[37, "dpnp.asnumpy"]], "atleast_1d() (in module dpnp)": [[38, "dpnp.atleast_1d"]], "atleast_2d() (in module dpnp)": [[39, "dpnp.atleast_2d"]], "atleast_3d() (in module dpnp)": [[40, "dpnp.atleast_3d"]], "average() (in module dpnp)": [[41, "dpnp.average"]], "bincount() (in module dpnp)": [[42, "dpnp.bincount"]], "bitwise_and() (in module dpnp)": [[43, "dpnp.bitwise_and"]], "bitwise_not() (in module dpnp)": [[44, "dpnp.bitwise_not"]], "bitwise_or() (in module dpnp)": [[45, "dpnp.bitwise_or"]], "bitwise_xor() (in module dpnp)": [[46, "dpnp.bitwise_xor"]], "broadcast_to() (in module dpnp)": [[47, "dpnp.broadcast_to"]], "cbrt() (in module dpnp)": [[48, "dpnp.cbrt"]], "ceil() (in module dpnp)": [[49, "dpnp.ceil"]], "concatenate() (in module dpnp)": [[50, "dpnp.concatenate"]], "conj() (in module dpnp)": [[51, "dpnp.conj"]], "convolve() (in module dpnp)": [[52, "dpnp.convolve"]], "copy() (in module dpnp)": [[53, "dpnp.copy"]], "copysign() (in module dpnp)": [[54, "dpnp.copysign"]], "copyto() (in module dpnp)": [[55, "dpnp.copyto"]], "correlate() (in module dpnp)": [[56, "dpnp.correlate"]], "cos() (in module dpnp)": [[57, "dpnp.cos"]], "cosh() (in module dpnp)": [[58, "dpnp.cosh"]], "count_nonzero() (in module dpnp)": [[59, "dpnp.count_nonzero"]], "cov() (in module dpnp)": [[60, "dpnp.cov"]], "cross() (in module dpnp)": [[61, "dpnp.cross"]], "cumprod() (in module dpnp)": [[62, "dpnp.cumprod"]], "cumsum() (in module dpnp)": [[63, "dpnp.cumsum"]], "deg2rad() (in module dpnp)": [[64, "dpnp.deg2rad"]], "degrees() (in module dpnp)": [[65, "dpnp.degrees"]], "diag() (in module dpnp)": [[66, "dpnp.diag"]], "diagflat() (in module dpnp)": [[67, "dpnp.diagflat"]], "diff() (in module dpnp)": [[68, "dpnp.diff"]], "divide() (in module dpnp)": [[69, "dpnp.divide"]], "dot() (in module dpnp)": [[70, "dpnp.dot"]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.T"]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__eq__"]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__ge__"]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__getitem__"]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__gt__"]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__le__"]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__len__"]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__lt__"]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__ne__"]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.__setitem__"]], "all() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.all"]], "any() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.any"]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.argmax"]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.argmin"]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.argsort"]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.asnumpy"]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.astype"]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.choose"]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.conj"]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.conjugate"]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.cumsum"]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.device"]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.diagonal"]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.dot"]], "dpnp_array (class in dpnp.dpnp_array)": [[71, "dpnp.dpnp_array.dpnp_array"]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.dtype"]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.fill"]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.flags"]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.flat"]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.flatten"]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.get_array"]], "item() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.item"]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.itemsize"]], "max() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.max"]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.mean"]], "min() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.min"]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.nbytes"]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.ndim"]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.nonzero"]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.partition"]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.prod"]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.reshape"]], "round() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.round"]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.shape"]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.size"]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.squeeze"]], "std() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.std"]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.strides"]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.sum"]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.sycl_context"]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.sycl_device"]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.sycl_queue"]], "take() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.take"]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.to_device"]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.transpose"]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[71, "dpnp.dpnp_array.dpnp_array.usm_type"]], "var() (dpnp.dpnp_array.dpnp_array method)": [[71, "dpnp.dpnp_array.dpnp_array.var"]], "ediff1d() (in module dpnp)": [[72, "dpnp.ediff1d"]], "einsum() (in module dpnp)": [[73, "dpnp.einsum"]], "einsum_path() (in module dpnp)": [[74, "dpnp.einsum_path"]], "empty() (in module dpnp)": [[75, "dpnp.empty"]], "empty_like() (in module dpnp)": [[76, "dpnp.empty_like"]], "equal() (in module dpnp)": [[77, "dpnp.equal"]], "erf() (in module dpnp)": [[78, "dpnp.erf"]], "exp() (in module dpnp)": [[79, "dpnp.exp"]], "exp2() (in module dpnp)": [[80, "dpnp.exp2"]], "expand_dims() (in module dpnp)": [[81, "dpnp.expand_dims"]], "expm1() (in module dpnp)": [[82, "dpnp.expm1"]], "eye() (in module dpnp)": [[83, "dpnp.eye"]], "fabs() (in module dpnp)": [[84, "dpnp.fabs"]], "fft() (in module dpnp.fft)": [[85, "dpnp.fft.fft"]], "fft2() (in module dpnp.fft)": [[86, "dpnp.fft.fft2"]], "fftfreq() (in module dpnp.fft)": [[87, "dpnp.fft.fftfreq"]], "fftn() (in module dpnp.fft)": [[88, "dpnp.fft.fftn"]], "fftshift() (in module dpnp.fft)": [[89, "dpnp.fft.fftshift"]], "hfft() (in module dpnp.fft)": [[90, "dpnp.fft.hfft"]], "ifft() (in module dpnp.fft)": [[91, "dpnp.fft.ifft"]], "ifft2() (in module dpnp.fft)": [[92, "dpnp.fft.ifft2"]], "ifftn() (in module dpnp.fft)": [[93, "dpnp.fft.ifftn"]], "ifftshift() (in module dpnp.fft)": [[94, "dpnp.fft.ifftshift"]], "ihfft() (in module dpnp.fft)": [[95, "dpnp.fft.ihfft"]], "irfft() (in module dpnp.fft)": [[96, "dpnp.fft.irfft"]], "irfft2() (in module dpnp.fft)": [[97, "dpnp.fft.irfft2"]], "irfftn() (in module dpnp.fft)": [[98, "dpnp.fft.irfftn"]], "rfft() (in module dpnp.fft)": [[99, "dpnp.fft.rfft"]], "rfft2() (in module dpnp.fft)": [[100, "dpnp.fft.rfft2"]], "rfftfreq() (in module dpnp.fft)": [[101, "dpnp.fft.rfftfreq"]], "rfftn() (in module dpnp.fft)": [[102, "dpnp.fft.rfftn"]], "floor() (in module dpnp)": [[103, "dpnp.floor"]], "floor_divide() (in module dpnp)": [[104, "dpnp.floor_divide"]], "fmax() (in module dpnp)": [[105, "dpnp.fmax"]], "fmin() (in module dpnp)": [[106, "dpnp.fmin"]], "fmod() (in module dpnp)": [[107, "dpnp.fmod"]], "fromfile() (in module dpnp)": [[108, "dpnp.fromfile"]], "full() (in module dpnp)": [[109, "dpnp.full"]], "full_like() (in module dpnp)": [[110, "dpnp.full_like"]], "geomspace() (in module dpnp)": [[111, "dpnp.geomspace"]], "get_include() (in module dpnp)": [[112, "dpnp.get_include"]], "gradient() (in module dpnp)": [[113, "dpnp.gradient"]], "greater() (in module dpnp)": [[114, "dpnp.greater"]], "greater_equal() (in module dpnp)": [[115, "dpnp.greater_equal"]], "histogram() (in module dpnp)": [[116, "dpnp.histogram"]], "hstack() (in module dpnp)": [[117, "dpnp.hstack"]], "hypot() (in module dpnp)": [[118, "dpnp.hypot"]], "identity() (in module dpnp)": [[119, "dpnp.identity"]], "inner() (in module dpnp)": [[120, "dpnp.inner"]], "invert() (in module dpnp)": [[121, "dpnp.invert"]], "isclose() (in module dpnp)": [[122, "dpnp.isclose"]], "isfinite() (in module dpnp)": [[123, "dpnp.isfinite"]], "isinf() (in module dpnp)": [[124, "dpnp.isinf"]], "isnan() (in module dpnp)": [[125, "dpnp.isnan"]], "isscalar() (in module dpnp)": [[126, "dpnp.isscalar"]], "kron() (in module dpnp)": [[127, "dpnp.kron"]], "left_shift() (in module dpnp)": [[128, "dpnp.left_shift"]], "less() (in module dpnp)": [[129, "dpnp.less"]], "less_equal() (in module dpnp)": [[130, "dpnp.less_equal"]], "cholesky() (in module dpnp.linalg)": [[131, "dpnp.linalg.cholesky"]], "det() (in module dpnp.linalg)": [[132, "dpnp.linalg.det"]], "eig() (in module dpnp.linalg)": [[133, "dpnp.linalg.eig"]], "eigh() (in module dpnp.linalg)": [[134, "dpnp.linalg.eigh"]], "eigvals() (in module dpnp.linalg)": [[135, "dpnp.linalg.eigvals"]], "inv() (in module dpnp.linalg)": [[136, "dpnp.linalg.inv"]], "matrix_power() (in module dpnp.linalg)": [[137, "dpnp.linalg.matrix_power"]], "matrix_rank() (in module dpnp.linalg)": [[138, "dpnp.linalg.matrix_rank"]], "multi_dot() (in module dpnp.linalg)": [[139, "dpnp.linalg.multi_dot"]], "norm() (in module dpnp.linalg)": [[140, "dpnp.linalg.norm"]], "qr() (in module dpnp.linalg)": [[141, "dpnp.linalg.qr"]], "svd() (in module dpnp.linalg)": [[142, "dpnp.linalg.svd"]], "linspace() (in module dpnp)": [[143, "dpnp.linspace"]], "log() (in module dpnp)": [[144, "dpnp.log"]], "log10() (in module dpnp)": [[145, "dpnp.log10"]], "log1p() (in module dpnp)": [[146, "dpnp.log1p"]], "log2() (in module dpnp)": [[147, "dpnp.log2"]], "logical_and() (in module dpnp)": [[148, "dpnp.logical_and"]], "logical_not() (in module dpnp)": [[149, "dpnp.logical_not"]], "logical_or() (in module dpnp)": [[150, "dpnp.logical_or"]], "logical_xor() (in module dpnp)": [[151, "dpnp.logical_xor"]], "logspace() (in module dpnp)": [[152, "dpnp.logspace"]], "matmul() (in module dpnp)": [[153, "dpnp.matmul"]], "max() (in module dpnp)": [[154, "dpnp.max"]], "maximum() (in module dpnp)": [[155, "dpnp.maximum"]], "mean() (in module dpnp)": [[156, "dpnp.mean"]], "median() (in module dpnp)": [[157, "dpnp.median"]], "meshgrid() (in module dpnp)": [[158, "dpnp.meshgrid"]], "mgrid (in module dpnp)": [[159, "dpnp.mgrid"]], "min() (in module dpnp)": [[160, "dpnp.min"]], "minimum() (in module dpnp)": [[161, "dpnp.minimum"]], "mod() (in module dpnp)": [[162, "dpnp.mod"]], "modf() (in module dpnp)": [[163, "dpnp.modf"]], "moveaxis() (in module dpnp)": [[164, "dpnp.moveaxis"]], "multiply() (in module dpnp)": [[165, "dpnp.multiply"]], "nancumprod() (in module dpnp)": [[166, "dpnp.nancumprod"]], "nancumsum() (in module dpnp)": [[167, "dpnp.nancumsum"]], "nanprod() (in module dpnp)": [[168, "dpnp.nanprod"]], "nansum() (in module dpnp)": [[169, "dpnp.nansum"]], "nanvar() (in module dpnp)": [[170, "dpnp.nanvar"]], "ndarray (in module dpnp)": [[171, "dpnp.ndarray"]], "negative() (in module dpnp)": [[172, "dpnp.negative"]], "nonzero() (in module dpnp)": [[173, "dpnp.nonzero"]], "not_equal() (in module dpnp)": [[174, "dpnp.not_equal"]], "ogrid (in module dpnp)": [[175, "dpnp.ogrid"]], "ones() (in module dpnp)": [[176, "dpnp.ones"]], "ones_like() (in module dpnp)": [[177, "dpnp.ones_like"]], "outer() (in module dpnp)": [[178, "dpnp.outer"]], "partition() (in module dpnp)": [[179, "dpnp.partition"]], "power() (in module dpnp)": [[180, "dpnp.power"]], "prod() (in module dpnp)": [[181, "dpnp.prod"]], "rad2deg() (in module dpnp)": [[182, "dpnp.rad2deg"]], "radians() (in module dpnp)": [[183, "dpnp.radians"]], "randomstate (class in dpnp.random)": [[184, "dpnp.random.RandomState"]], "__eq__() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.__eq__"]], "__ge__() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.__ge__"]], "__gt__() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.__gt__"]], "__le__() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.__le__"]], "__lt__() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.__lt__"]], "__ne__() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.__ne__"]], "get_state() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.get_state"]], "get_sycl_device() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.get_sycl_device"]], "get_sycl_queue() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.get_sycl_queue"]], "normal() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.normal"]], "rand() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.rand"]], "randint() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.randint"]], "randn() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.randn"]], "random_sample() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.random_sample"]], "standard_normal() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.standard_normal"]], "uniform() (dpnp.random.randomstate method)": [[184, "dpnp.random.RandomState.uniform"]], "beta() (in module dpnp.random)": [[185, "dpnp.random.beta"]], "binomial() (in module dpnp.random)": [[186, "dpnp.random.binomial"]], "bytes() (in module dpnp.random)": [[187, "dpnp.random.bytes"]], "chisquare() (in module dpnp.random)": [[188, "dpnp.random.chisquare"]], "choice() (in module dpnp.random)": [[189, "dpnp.random.choice"]], "dirichlet() (in module dpnp.random)": [[190, "dpnp.random.dirichlet"]], "exponential() (in module dpnp.random)": [[191, "dpnp.random.exponential"]], "f() (in module dpnp.random)": [[192, "dpnp.random.f"]], "gamma() (in module dpnp.random)": [[193, "dpnp.random.gamma"]], "geometric() (in module dpnp.random)": [[194, "dpnp.random.geometric"]], "gumbel() (in module dpnp.random)": [[195, "dpnp.random.gumbel"]], "hypergeometric() (in module dpnp.random)": [[196, "dpnp.random.hypergeometric"]], "laplace() (in module dpnp.random)": [[197, "dpnp.random.laplace"]], "logistic() (in module dpnp.random)": [[198, "dpnp.random.logistic"]], "lognormal() (in module dpnp.random)": [[199, "dpnp.random.lognormal"]], "logseries() (in module dpnp.random)": [[200, "dpnp.random.logseries"]], "multinomial() (in module dpnp.random)": [[201, "dpnp.random.multinomial"]], "multivariate_normal() (in module dpnp.random)": [[202, "dpnp.random.multivariate_normal"]], "negative_binomial() (in module dpnp.random)": [[203, "dpnp.random.negative_binomial"]], "noncentral_chisquare() (in module dpnp.random)": [[204, "dpnp.random.noncentral_chisquare"]], "noncentral_f() (in module dpnp.random)": [[205, "dpnp.random.noncentral_f"]], "normal() (in module dpnp.random)": [[206, "dpnp.random.normal"]], "pareto() (in module dpnp.random)": [[207, "dpnp.random.pareto"]], "permutation() (in module dpnp.random)": [[208, "dpnp.random.permutation"]], "poisson() (in module dpnp.random)": [[209, "dpnp.random.poisson"]], "power() (in module dpnp.random)": [[210, "dpnp.random.power"]], "rand() (in module dpnp.random)": [[211, "dpnp.random.rand"]], "randint() (in module dpnp.random)": [[212, "dpnp.random.randint"]], "randn() (in module dpnp.random)": [[213, "dpnp.random.randn"]], "random() (in module dpnp.random)": [[214, "dpnp.random.random"]], "random_integers() (in module dpnp.random)": [[215, "dpnp.random.random_integers"]], "random_sample() (in module dpnp.random)": [[216, "dpnp.random.random_sample"]], "ranf() (in module dpnp.random)": [[217, "dpnp.random.ranf"]], "rayleigh() (in module dpnp.random)": [[218, "dpnp.random.rayleigh"]], "sample() (in module dpnp.random)": [[219, "dpnp.random.sample"]], "seed() (in module dpnp.random)": [[220, "dpnp.random.seed"]], "shuffle() (in module dpnp.random)": [[221, "dpnp.random.shuffle"]], "standard_cauchy() (in module dpnp.random)": [[222, "dpnp.random.standard_cauchy"]], "standard_exponential() (in module dpnp.random)": [[223, "dpnp.random.standard_exponential"]], "standard_gamma() (in module dpnp.random)": [[224, "dpnp.random.standard_gamma"]], "standard_normal() (in module dpnp.random)": [[225, "dpnp.random.standard_normal"]], "standard_t() (in module dpnp.random)": [[226, "dpnp.random.standard_t"]], "triangular() (in module dpnp.random)": [[227, "dpnp.random.triangular"]], "uniform() (in module dpnp.random)": [[228, "dpnp.random.uniform"]], "vonmises() (in module dpnp.random)": [[229, "dpnp.random.vonmises"]], "wald() (in module dpnp.random)": [[230, "dpnp.random.wald"]], "weibull() (in module dpnp.random)": [[231, "dpnp.random.weibull"]], "zipf() (in module dpnp.random)": [[232, "dpnp.random.zipf"]], "ravel() (in module dpnp)": [[233, "dpnp.ravel"]], "reciprocal() (in module dpnp)": [[234, "dpnp.reciprocal"]], "remainder() (in module dpnp)": [[235, "dpnp.remainder"]], "repeat() (in module dpnp)": [[236, "dpnp.repeat"]], "reshape() (in module dpnp)": [[237, "dpnp.reshape"]], "right_shift() (in module dpnp)": [[238, "dpnp.right_shift"]], "rollaxis() (in module dpnp)": [[239, "dpnp.rollaxis"]], "round_() (in module dpnp)": [[240, "dpnp.round_"]], "searchsorted() (in module dpnp)": [[241, "dpnp.searchsorted"]], "sign() (in module dpnp)": [[242, "dpnp.sign"]], "sin() (in module dpnp)": [[243, "dpnp.sin"]], "sinh() (in module dpnp)": [[244, "dpnp.sinh"]], "sort() (in module dpnp)": [[245, "dpnp.sort"]], "sqrt() (in module dpnp)": [[246, "dpnp.sqrt"]], "square() (in module dpnp)": [[247, "dpnp.square"]], "squeeze() (in module dpnp)": [[248, "dpnp.squeeze"]], "stack() (in module dpnp)": [[249, "dpnp.stack"]], "std() (in module dpnp)": [[250, "dpnp.std"]], "subtract() (in module dpnp)": [[251, "dpnp.subtract"]], "sum() (in module dpnp)": [[252, "dpnp.sum"]], "swapaxes() (in module dpnp)": [[253, "dpnp.swapaxes"]], "tan() (in module dpnp)": [[254, "dpnp.tan"]], "tanh() (in module dpnp)": [[255, "dpnp.tanh"]], "tensordot() (in module dpnp)": [[256, "dpnp.tensordot"]], "trace() (in module dpnp)": [[257, "dpnp.trace"]], "transpose() (in module dpnp)": [[258, "dpnp.transpose"]], "trapz() (in module dpnp)": [[259, "dpnp.trapz"]], "tri() (in module dpnp)": [[260, "dpnp.tri"]], "tril() (in module dpnp)": [[261, "dpnp.tril"]], "triu() (in module dpnp)": [[262, "dpnp.triu"]], "true_divide() (in module dpnp)": [[263, "dpnp.true_divide"]], "trunc() (in module dpnp)": [[264, "dpnp.trunc"]], "unique() (in module dpnp)": [[265, "dpnp.unique"]], "unwrap() (in module dpnp)": [[266, "dpnp.unwrap"]], "vander() (in module dpnp)": [[267, "dpnp.vander"]], "var() (in module dpnp)": [[268, "dpnp.var"]], "vdot() (in module dpnp)": [[269, "dpnp.vdot"]], "vstack() (in module dpnp)": [[270, "dpnp.vstack"]], "where() (in module dpnp)": [[271, "dpnp.where"]], "zeros() (in module dpnp)": [[272, "dpnp.zeros"]], "zeros_like() (in module dpnp)": [[273, "dpnp.zeros_like"]], "dpnp.random": [[283, "module-dpnp.random"]]}})