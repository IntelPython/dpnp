Search.setIndex({"alltitles": {"API Reference": [[457, null]], "Adding and removing elements": [[461, "adding-and-removing-elements"]], "Arithmetic": [[466, "arithmetic"]], "Arithmetic operations": [[462, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[464, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Indexing Routines": [[458, null]], "Array Manipulation Routines": [[461, null]], "Array attributes": [[464, "array-attributes"]], "Array conversion": [[464, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[464, "array-methods"]], "Array type testing": [[460, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[472, "available-ufuncs"]], "Averages and variances": [[471, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[461, "basic-operations"]], "Basics": [[466, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[472, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[464, "calculation"]], "Changing array shape": [[461, "changing-array-shape"]], "Changing kind of array": [[461, "changing-kind-of-array"]], "Changing number of dimensions": [[461, "changing-number-of-dimensions"]], "Comparison": [[460, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[472, "comparison-functions"]], "Constructing arrays": [[464, "constructing-arrays"]], "Correlations": [[471, "correlations"]], "Counting": [[469, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[464, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[459, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[467, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[470, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[462, "exponents-and-logarithms"]], "Extrema Finding": [[462, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[472, "floating-functions"]], "Floating point routines": [[462, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[458, "generating-index-arrays"]], "Handling complex numbers": [[462, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[471, "histograms"]], "Hyperbolic functions": [[462, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[464, "indexing-arrays"]], "Indexing-like operations": [[458, "indexing-like-operations"]], "Infinities and NaNs": [[460, "infinities-and-nans"]], "Inserting data into arrays": [[458, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[464, "item-selection-and-manipulation"]], "Iterating over arrays": [[458, "iterating-over-arrays"]], "Joining arrays": [[461, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [459, null]], "Logic Functions": [[460, null]], "Logic operations": [[460, "logic-operations"]], "Math operations": [[472, "math-operations"]], "Mathematical Functions": [[462, null]], "Matrix and vector products": [[459, "matrix-and-vector-products"]], "Matrix eigenvalues": [[459, "matrix-eigenvalues"]], "Memory layout": [[464, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [462, "miscellaneous"]], "Miscellaneous routines": [[463, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[464, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[459, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[471, "order-statistics"]], "Other attributes": [[464, "other-attributes"]], "Other special functions": [[462, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[465, null]], "Permutations": [[467, "permutations"]], "Poly1d": [[466, "poly1d"]], "Polynomial Module": [[466, "polynomial-module"]], "Polynomial Package": [[466, "polynomial-package"]], "Polynomials": [[466, null]], "Polyutils": [[466, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[467, null]], "Random generator": [[467, "random-generator"]], "Rational routines": [[462, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[461, "rearranging-elements"]], "Rounding": [[462, "rounding"]], "Routines": [[468, null]], "Searching": [[469, "searching"]], "Shape manipulation": [[464, "shape-manipulation"]], "Simple random data": [[467, "simple-random-data"]], "Solving linear equations": [[459, "solving-linear-equations"]], "Sorting": [[469, "sorting"]], "Sorting, Searching, and Counting": [[469, null]], "Special Functions": [[470, null]], "Special methods": [[464, "special-methods"]], "Splitting arrays": [[461, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[471, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[462, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[461, "tiling-arrays"]], "Transpose-like operations": [[461, "transpose-like-operations"]], "Trigonometric functions": [[462, "trigonometric-functions"], [472, "trigonometric-functions"]], "Truth value testing": [[460, "truth-value-testing"]], "Type Promotion": [[10, "type-promotion"]], "Universal Functions (ufunc)": [[472, null]], "Utility": [[463, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.add": [[13, null]], "dpnp.all": [[14, null]], "dpnp.allclose": [[15, null]], "dpnp.amax": [[16, null]], "dpnp.amin": [[17, null]], "dpnp.angle": [[18, null]], "dpnp.any": [[19, null]], "dpnp.arange": [[20, null]], "dpnp.arccos": [[21, null]], "dpnp.arccosh": [[22, null]], "dpnp.arcsin": [[23, null]], "dpnp.arcsinh": [[24, null]], "dpnp.arctan": [[25, null]], "dpnp.arctan2": [[26, null]], "dpnp.arctanh": [[27, null]], "dpnp.argmax": [[28, null]], "dpnp.argmin": [[29, null]], "dpnp.argsort": [[30, null]], "dpnp.around": [[31, null]], "dpnp.array": [[32, null]], "dpnp.array_equal": [[33, null]], "dpnp.asanyarray": [[34, null]], "dpnp.asarray": [[35, null]], "dpnp.ascontiguousarray": [[36, null]], "dpnp.asfarray": [[37, null]], "dpnp.asfortranarray": [[38, null]], "dpnp.asnumpy": [[39, null]], "dpnp.astype": [[40, null]], "dpnp.atleast_1d": [[41, null]], "dpnp.atleast_2d": [[42, null]], "dpnp.atleast_3d": [[43, null]], "dpnp.average": [[44, null]], "dpnp.bincount": [[45, null]], "dpnp.bitwise_and": [[46, null]], "dpnp.bitwise_not": [[47, null]], "dpnp.bitwise_or": [[48, null]], "dpnp.bitwise_xor": [[49, null]], "dpnp.broadcast_arrays": [[50, null]], "dpnp.broadcast_to": [[51, null]], "dpnp.can_cast": [[52, null]], "dpnp.cbrt": [[53, null]], "dpnp.ceil": [[54, null]], "dpnp.choose": [[55, null]], "dpnp.clip": [[56, null]], "dpnp.column_stack": [[57, null]], "dpnp.concatenate": [[58, null]], "dpnp.conj": [[59, null]], "dpnp.conjugate": [[60, null]], "dpnp.convolve": [[61, null]], "dpnp.copy": [[62, null]], "dpnp.copysign": [[63, null]], "dpnp.copyto": [[64, null]], "dpnp.correlate": [[65, null]], "dpnp.cos": [[66, null]], "dpnp.cosh": [[67, null]], "dpnp.count_nonzero": [[68, null]], "dpnp.cov": [[69, null]], "dpnp.cross": [[70, null]], "dpnp.cumlogsumexp": [[71, null]], "dpnp.cumprod": [[72, null]], "dpnp.cumsum": [[73, null]], "dpnp.deg2rad": [[74, null]], "dpnp.degrees": [[75, null]], "dpnp.diag": [[76, null]], "dpnp.diag_indices": [[77, null]], "dpnp.diag_indices_from": [[78, null]], "dpnp.diagflat": [[79, null]], "dpnp.diagonal": [[80, null]], "dpnp.diff": [[81, null]], "dpnp.digitize": [[82, null]], "dpnp.divide": [[83, null]], "dpnp.dot": [[84, null]], "dpnp.dpnp_array.dpnp_array": [[85, null]], "dpnp.dstack": [[86, null]], "dpnp.dtype": [[87, null]], "dpnp.ediff1d": [[88, null]], "dpnp.einsum": [[89, null]], "dpnp.einsum_path": [[90, null]], "dpnp.empty": [[91, null]], "dpnp.empty_like": [[92, null]], "dpnp.equal": [[93, null]], "dpnp.erf": [[94, null]], "dpnp.exp": [[95, null]], "dpnp.exp2": [[96, null]], "dpnp.expand_dims": [[97, null]], "dpnp.expm1": [[98, null]], "dpnp.extract": [[99, null]], "dpnp.eye": [[100, null]], "dpnp.fabs": [[101, null]], "dpnp.fft.fft": [[102, null]], "dpnp.fft.fft2": [[103, null]], "dpnp.fft.fftfreq": [[104, null]], "dpnp.fft.fftn": [[105, null]], "dpnp.fft.fftshift": [[106, null]], "dpnp.fft.hfft": [[107, null]], "dpnp.fft.ifft": [[108, null]], "dpnp.fft.ifft2": [[109, null]], "dpnp.fft.ifftn": [[110, null]], "dpnp.fft.ifftshift": [[111, null]], "dpnp.fft.ihfft": [[112, null]], "dpnp.fft.irfft": [[113, null]], "dpnp.fft.irfft2": [[114, null]], "dpnp.fft.irfftn": [[115, null]], "dpnp.fft.rfft": [[116, null]], "dpnp.fft.rfft2": [[117, null]], "dpnp.fft.rfftfreq": [[118, null]], "dpnp.fft.rfftn": [[119, null]], "dpnp.fill_diagonal": [[120, null]], "dpnp.finfo": [[121, null]], "dpnp.flatiter": [[122, null]], "dpnp.flatnonzero": [[123, null]], "dpnp.flip": [[124, null]], "dpnp.fliplr": [[125, null]], "dpnp.flipud": [[126, null]], "dpnp.floor": [[127, null]], "dpnp.floor_divide": [[128, null]], "dpnp.fmax": [[129, null]], "dpnp.fmin": [[130, null]], "dpnp.fmod": [[131, null]], "dpnp.from_dlpack": [[132, null]], "dpnp.frombuffer": [[133, null]], "dpnp.fromfile": [[134, null]], "dpnp.fromfunction": [[135, null]], "dpnp.fromiter": [[136, null]], "dpnp.fromstring": [[137, null]], "dpnp.full": [[138, null]], "dpnp.full_like": [[139, null]], "dpnp.geomspace": [[140, null]], "dpnp.get_include": [[141, null]], "dpnp.gradient": [[142, null]], "dpnp.greater": [[143, null]], "dpnp.greater_equal": [[144, null]], "dpnp.histogram": [[145, null]], "dpnp.histogram_bin_edges": [[146, null]], "dpnp.hstack": [[147, null]], "dpnp.hypot": [[148, null]], "dpnp.identity": [[149, null]], "dpnp.iinfo": [[150, null]], "dpnp.imag": [[151, null]], "dpnp.indices": [[152, null]], "dpnp.inner": [[153, null]], "dpnp.invert": [[154, null]], "dpnp.isclose": [[155, null]], "dpnp.iscomplex": [[156, null]], "dpnp.iscomplexobj": [[157, null]], "dpnp.isfinite": [[158, null]], "dpnp.isinf": [[159, null]], "dpnp.isnan": [[160, null]], "dpnp.isneginf": [[161, null]], "dpnp.isposinf": [[162, null]], "dpnp.isreal": [[163, null]], "dpnp.isrealobj": [[164, null]], "dpnp.isscalar": [[165, null]], "dpnp.issubdtype": [[166, null]], "dpnp.issubsctype": [[167, null]], "dpnp.kron": [[168, null]], "dpnp.left_shift": [[169, null]], "dpnp.less": [[170, null]], "dpnp.less_equal": [[171, null]], "dpnp.linalg.cholesky": [[172, null]], "dpnp.linalg.cond": [[173, null]], "dpnp.linalg.det": [[174, null]], "dpnp.linalg.eig": [[175, null]], "dpnp.linalg.eigh": [[176, null]], "dpnp.linalg.eigvals": [[177, null]], "dpnp.linalg.eigvalsh": [[178, null]], "dpnp.linalg.inv": [[179, null]], "dpnp.linalg.lstsq": [[180, null]], "dpnp.linalg.matrix_power": [[181, null]], "dpnp.linalg.matrix_rank": [[182, null]], "dpnp.linalg.multi_dot": [[183, null]], "dpnp.linalg.norm": [[184, null]], "dpnp.linalg.pinv": [[185, null]], "dpnp.linalg.qr": [[186, null]], "dpnp.linalg.slogdet": [[187, null]], "dpnp.linalg.solve": [[188, null]], "dpnp.linalg.svd": [[189, null]], "dpnp.linalg.tensorinv": [[190, null]], "dpnp.linalg.tensorsolve": [[191, null]], "dpnp.linspace": [[192, null]], "dpnp.loadtxt": [[193, null]], "dpnp.log": [[194, null]], "dpnp.log10": [[195, null]], "dpnp.log1p": [[196, null]], "dpnp.log2": [[197, null]], "dpnp.logaddexp": [[198, null]], "dpnp.logaddexp2": [[199, null]], "dpnp.logical_and": [[200, null]], "dpnp.logical_not": [[201, null]], "dpnp.logical_or": [[202, null]], "dpnp.logical_xor": [[203, null]], "dpnp.logspace": [[204, null]], "dpnp.logsumexp": [[205, null]], "dpnp.mask_indices": [[206, null]], "dpnp.matmul": [[207, null]], "dpnp.max": [[208, null]], "dpnp.maximum": [[209, null]], "dpnp.mean": [[210, null]], "dpnp.median": [[211, null]], "dpnp.meshgrid": [[212, null]], "dpnp.mgrid": [[213, null]], "dpnp.min": [[214, null]], "dpnp.minimum": [[215, null]], "dpnp.mod": [[216, null]], "dpnp.modf": [[217, null]], "dpnp.moveaxis": [[218, null]], "dpnp.multiply": [[219, null]], "dpnp.nanargmax": [[220, null]], "dpnp.nanargmin": [[221, null]], "dpnp.nancumprod": [[222, null]], "dpnp.nancumsum": [[223, null]], "dpnp.nanmax": [[224, null]], "dpnp.nanmean": [[225, null]], "dpnp.nanmin": [[226, null]], "dpnp.nanprod": [[227, null]], "dpnp.nanstd": [[228, null]], "dpnp.nansum": [[229, null]], "dpnp.nanvar": [[230, null]], "dpnp.ndarray": [[231, null]], "dpnp.ndarray.T": [[232, null]], "dpnp.ndarray.__abs__": [[233, null]], "dpnp.ndarray.__add__": [[234, null]], "dpnp.ndarray.__and__": [[235, null]], "dpnp.ndarray.__bool__": [[236, null]], "dpnp.ndarray.__complex__": [[237, null]], "dpnp.ndarray.__copy__": [[238, null]], "dpnp.ndarray.__eq__": [[239, null]], "dpnp.ndarray.__float__": [[240, null]], "dpnp.ndarray.__floordiv__": [[241, null]], "dpnp.ndarray.__ge__": [[242, null]], "dpnp.ndarray.__getitem__": [[243, null]], "dpnp.ndarray.__gt__": [[244, null]], "dpnp.ndarray.__iadd__": [[245, null]], "dpnp.ndarray.__iand__": [[246, null]], "dpnp.ndarray.__ifloordiv__": [[247, null]], "dpnp.ndarray.__ilshift__": [[248, null]], "dpnp.ndarray.__imod__": [[249, null]], "dpnp.ndarray.__imul__": [[250, null]], "dpnp.ndarray.__int__": [[251, null]], "dpnp.ndarray.__invert__": [[252, null]], "dpnp.ndarray.__ior__": [[253, null]], "dpnp.ndarray.__ipow__": [[254, null]], "dpnp.ndarray.__irshift__": [[255, null]], "dpnp.ndarray.__isub__": [[256, null]], "dpnp.ndarray.__itruediv__": [[257, null]], "dpnp.ndarray.__ixor__": [[258, null]], "dpnp.ndarray.__le__": [[259, null]], "dpnp.ndarray.__len__": [[260, null]], "dpnp.ndarray.__lshift__": [[261, null]], "dpnp.ndarray.__lt__": [[262, null]], "dpnp.ndarray.__matmul__": [[263, null]], "dpnp.ndarray.__mod__": [[264, null]], "dpnp.ndarray.__mul__": [[265, null]], "dpnp.ndarray.__ne__": [[266, null]], "dpnp.ndarray.__neg__": [[267, null]], "dpnp.ndarray.__new__": [[268, null]], "dpnp.ndarray.__or__": [[269, null]], "dpnp.ndarray.__pos__": [[270, null]], "dpnp.ndarray.__pow__": [[271, null]], "dpnp.ndarray.__repr__": [[272, null]], "dpnp.ndarray.__rshift__": [[273, null]], "dpnp.ndarray.__setitem__": [[274, null]], "dpnp.ndarray.__str__": [[275, null]], "dpnp.ndarray.__sub__": [[276, null]], "dpnp.ndarray.__truediv__": [[277, null]], "dpnp.ndarray.__xor__": [[278, null]], "dpnp.ndarray.all": [[279, null]], "dpnp.ndarray.any": [[280, null]], "dpnp.ndarray.argmax": [[281, null]], "dpnp.ndarray.argmin": [[282, null]], "dpnp.ndarray.argsort": [[283, null]], "dpnp.ndarray.astype": [[284, null]], "dpnp.ndarray.choose": [[285, null]], "dpnp.ndarray.clip": [[286, null]], "dpnp.ndarray.conj": [[287, null]], "dpnp.ndarray.conjugate": [[288, null]], "dpnp.ndarray.copy": [[289, null]], "dpnp.ndarray.cumprod": [[290, null]], "dpnp.ndarray.cumsum": [[291, null]], "dpnp.ndarray.diagonal": [[292, null]], "dpnp.ndarray.dtype": [[293, null]], "dpnp.ndarray.fill": [[294, null]], "dpnp.ndarray.flags": [[295, null]], "dpnp.ndarray.flat": [[296, null]], "dpnp.ndarray.flatten": [[297, null]], "dpnp.ndarray.imag": [[298, null]], "dpnp.ndarray.item": [[299, null]], "dpnp.ndarray.itemsize": [[300, null]], "dpnp.ndarray.max": [[301, null]], "dpnp.ndarray.mean": [[302, null]], "dpnp.ndarray.min": [[303, null]], "dpnp.ndarray.nbytes": [[304, null]], "dpnp.ndarray.ndim": [[305, null]], "dpnp.ndarray.nonzero": [[306, null]], "dpnp.ndarray.partition": [[307, null]], "dpnp.ndarray.prod": [[308, null]], "dpnp.ndarray.put": [[309, null]], "dpnp.ndarray.ravel": [[310, null]], "dpnp.ndarray.real": [[311, null]], "dpnp.ndarray.repeat": [[312, null]], "dpnp.ndarray.reshape": [[313, null]], "dpnp.ndarray.round": [[314, null]], "dpnp.ndarray.searchsorted": [[315, null]], "dpnp.ndarray.shape": [[316, null]], "dpnp.ndarray.size": [[317, null]], "dpnp.ndarray.sort": [[318, null]], "dpnp.ndarray.squeeze": [[319, null]], "dpnp.ndarray.std": [[320, null]], "dpnp.ndarray.strides": [[321, null]], "dpnp.ndarray.sum": [[322, null]], "dpnp.ndarray.swapaxes": [[323, null]], "dpnp.ndarray.take": [[324, null]], "dpnp.ndarray.trace": [[325, null]], "dpnp.ndarray.transpose": [[326, null]], "dpnp.ndarray.var": [[327, null]], "dpnp.negative": [[328, null]], "dpnp.nextafter": [[329, null]], "dpnp.nonzero": [[330, null]], "dpnp.not_equal": [[331, null]], "dpnp.ogrid": [[332, null]], "dpnp.ones": [[333, null]], "dpnp.ones_like": [[334, null]], "dpnp.outer": [[335, null]], "dpnp.partition": [[336, null]], "dpnp.place": [[337, null]], "dpnp.positive": [[338, null]], "dpnp.power": [[339, null]], "dpnp.prod": [[340, null]], "dpnp.proj": [[341, null]], "dpnp.ptp": [[342, null]], "dpnp.put": [[343, null]], "dpnp.put_along_axis": [[344, null]], "dpnp.putmask": [[345, null]], "dpnp.rad2deg": [[346, null]], "dpnp.radians": [[347, null]], "dpnp.random.RandomState": [[348, null]], "dpnp.random.beta": [[349, null]], "dpnp.random.binomial": [[350, null]], "dpnp.random.bytes": [[351, null]], "dpnp.random.chisquare": [[352, null]], "dpnp.random.choice": [[353, null]], "dpnp.random.dirichlet": [[354, null]], "dpnp.random.exponential": [[355, null]], "dpnp.random.f": [[356, null]], "dpnp.random.gamma": [[357, null]], "dpnp.random.geometric": [[358, null]], "dpnp.random.gumbel": [[359, null]], "dpnp.random.hypergeometric": [[360, null]], "dpnp.random.laplace": [[361, null]], "dpnp.random.logistic": [[362, null]], "dpnp.random.lognormal": [[363, null]], "dpnp.random.logseries": [[364, null]], "dpnp.random.multinomial": [[365, null]], "dpnp.random.multivariate_normal": [[366, null]], "dpnp.random.negative_binomial": [[367, null]], "dpnp.random.noncentral_chisquare": [[368, null]], "dpnp.random.noncentral_f": [[369, null]], "dpnp.random.normal": [[370, null]], "dpnp.random.pareto": [[371, null]], "dpnp.random.permutation": [[372, null]], "dpnp.random.poisson": [[373, null]], "dpnp.random.power": [[374, null]], "dpnp.random.rand": [[375, null]], "dpnp.random.randint": [[376, null]], "dpnp.random.randn": [[377, null]], "dpnp.random.random": [[378, null]], "dpnp.random.random_integers": [[379, null]], "dpnp.random.random_sample": [[380, null]], "dpnp.random.ranf": [[381, null]], "dpnp.random.rayleigh": [[382, null]], "dpnp.random.sample": [[383, null]], "dpnp.random.seed": [[384, null]], "dpnp.random.shuffle": [[385, null]], "dpnp.random.standard_cauchy": [[386, null]], "dpnp.random.standard_exponential": [[387, null]], "dpnp.random.standard_gamma": [[388, null]], "dpnp.random.standard_normal": [[389, null]], "dpnp.random.standard_t": [[390, null]], "dpnp.random.triangular": [[391, null]], "dpnp.random.uniform": [[392, null]], "dpnp.random.vonmises": [[393, null]], "dpnp.random.wald": [[394, null]], "dpnp.random.weibull": [[395, null]], "dpnp.random.zipf": [[396, null]], "dpnp.ravel": [[397, null]], "dpnp.real": [[398, null]], "dpnp.reciprocal": [[399, null]], "dpnp.reduce_hypot": [[400, null]], "dpnp.remainder": [[401, null]], "dpnp.repeat": [[402, null]], "dpnp.reshape": [[403, null]], "dpnp.result_type": [[404, null]], "dpnp.right_shift": [[405, null]], "dpnp.rint": [[406, null]], "dpnp.roll": [[407, null]], "dpnp.rollaxis": [[408, null]], "dpnp.round": [[409, null]], "dpnp.row_stack": [[410, null]], "dpnp.rsqrt": [[411, null]], "dpnp.searchsorted": [[412, null]], "dpnp.select": [[413, null]], "dpnp.shape": [[414, null]], "dpnp.sign": [[415, null]], "dpnp.signbit": [[416, null]], "dpnp.sin": [[417, null]], "dpnp.sinh": [[418, null]], "dpnp.sort": [[419, null]], "dpnp.sort_complex": [[420, null]], "dpnp.sqrt": [[421, null]], "dpnp.square": [[422, null]], "dpnp.squeeze": [[423, null]], "dpnp.stack": [[424, null]], "dpnp.std": [[425, null]], "dpnp.subtract": [[426, null]], "dpnp.sum": [[427, null]], "dpnp.swapaxes": [[428, null]], "dpnp.take": [[429, null]], "dpnp.take_along_axis": [[430, null]], "dpnp.tan": [[431, null]], "dpnp.tanh": [[432, null]], "dpnp.tensordot": [[433, null]], "dpnp.tile": [[434, null]], "dpnp.trace": [[435, null]], "dpnp.transpose": [[436, null]], "dpnp.trapz": [[437, null]], "dpnp.tri": [[438, null]], "dpnp.tril": [[439, null]], "dpnp.tril_indices": [[440, null]], "dpnp.tril_indices_from": [[441, null]], "dpnp.trim_zeros": [[442, null]], "dpnp.triu": [[443, null]], "dpnp.triu_indices": [[444, null]], "dpnp.triu_indices_from": [[445, null]], "dpnp.true_divide": [[446, null]], "dpnp.trunc": [[447, null]], "dpnp.unique": [[448, null]], "dpnp.unwrap": [[449, null]], "dpnp.vander": [[450, null]], "dpnp.var": [[451, null]], "dpnp.vdot": [[452, null]], "dpnp.vstack": [[453, null]], "dpnp.where": [[454, null]], "dpnp.zeros": [[455, null]], "dpnp.zeros_like": [[456, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.issubsctype", "reference/generated/dpnp.kron", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.real", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.reshape", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapz", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.issubsctype.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapz.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[233, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[234, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[235, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[236, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[237, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[238, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[87, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[239, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[240, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[241, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[87, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[242, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[87, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[243, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[87, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[244, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[245, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[246, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[247, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[248, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[249, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[250, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[251, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[252, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[253, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[87, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[87, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[87, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[87, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[122, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "add() (in module dpnp)": [[13, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[87, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[279, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[14, "dpnp.all", false]], "allclose() (in module dpnp)": [[15, "dpnp.allclose", false]], "amax() (in module dpnp)": [[16, "dpnp.amax", false]], "amin() (in module dpnp)": [[17, "dpnp.amin", false]], "angle() (in module dpnp)": [[18, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[280, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[19, "dpnp.any", false]], "arange() (in module dpnp)": [[20, "dpnp.arange", false]], "arccos() (in module dpnp)": [[21, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[22, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[23, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[24, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[25, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[26, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[27, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[281, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[28, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[282, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[29, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[283, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[30, "dpnp.argsort", false]], "around() (in module dpnp)": [[31, "dpnp.around", false]], "array() (in module dpnp)": [[32, "dpnp.array", false]], "array_equal() (in module dpnp)": [[33, "dpnp.array_equal", false]], "asanyarray() (in module dpnp)": [[34, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[35, "dpnp.asarray", false]], "ascontiguousarray() (in module dpnp)": [[36, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[37, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[38, "dpnp.asfortranarray", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[39, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[284, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[40, "dpnp.astype", false]], "atleast_1d() (in module dpnp)": [[41, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[42, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[43, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[44, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[87, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[349, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[45, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[350, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[46, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[47, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[48, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[49, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[50, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[51, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[87, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[351, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[52, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[53, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[54, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[87, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[352, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[353, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[172, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[285, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[55, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[286, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[56, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[57, "dpnp.column_stack", false]], "concatenate() (in module dpnp)": [[58, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[173, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[287, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[59, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[288, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[60, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[61, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[289, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[62, "dpnp.copy", false]], "copysign() (in module dpnp)": [[63, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[64, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[65, "dpnp.correlate", false]], "cos() (in module dpnp)": [[66, "dpnp.cos", false]], "cosh() (in module dpnp)": [[67, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[68, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[69, "dpnp.cov", false]], "cross() (in module dpnp)": [[70, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[71, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[290, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[72, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[291, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[73, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[74, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[75, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[87, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[174, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[76, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[77, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[78, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[79, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[292, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[80, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[81, "dpnp.diff", false]], "digitize() (in module dpnp)": [[82, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[354, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[83, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[84, "dpnp.dot", false]], "dpnp": [[2, "module-dpnp", false], [3, "module-dpnp", false]], "dpnp.fft": [[10, "module-0", false], [10, "module-dpnp.fft", false]], "dpnp.random": [[467, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[85, "dpnp.dpnp_array.dpnp_array", false]], "dstack() (in module dpnp)": [[86, "dpnp.dstack", false]], "dtype (class in dpnp)": [[87, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[293, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[88, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[175, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[176, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[177, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[178, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[89, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[90, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[91, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[92, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[93, "dpnp.equal", false]], "erf() (in module dpnp)": [[94, "dpnp.erf", false]], "exp() (in module dpnp)": [[95, "dpnp.exp", false]], "exp2() (in module dpnp)": [[96, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[97, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[98, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[355, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[99, "dpnp.extract", false]], "eye() (in module dpnp)": [[100, "dpnp.eye", false]], "f() (in module dpnp.random)": [[356, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[101, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[102, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[103, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[104, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[105, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[106, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[87, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[294, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[120, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[121, "dpnp.finfo", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[87, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[295, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[296, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[122, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[123, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[297, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[124, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[125, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[126, "dpnp.flipud", false]], "floor() (in module dpnp)": [[127, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[128, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[129, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[130, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[131, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[132, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[133, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[134, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[135, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[136, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[137, "dpnp.fromstring", false]], "full() (in module dpnp)": [[138, "dpnp.full", false]], "full_like() (in module dpnp)": [[139, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[357, "dpnp.random.gamma", false]], "geometric() (in module dpnp.random)": [[358, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[140, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[141, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[142, "dpnp.gradient", false]], "greater() (in module dpnp)": [[143, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[144, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[359, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[87, "dpnp.dtype.hasobject", false]], "hfft() (in module dpnp.fft)": [[107, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[145, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[146, "dpnp.histogram_bin_edges", false]], "hstack() (in module dpnp)": [[147, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[360, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[148, "dpnp.hypot", false]], "identity() (in module dpnp)": [[149, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[108, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[109, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[110, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[111, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[112, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[150, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[298, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[151, "dpnp.imag", false]], "indices() (in module dpnp)": [[152, "dpnp.indices", false]], "inner() (in module dpnp)": [[153, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[179, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[154, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[113, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[114, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[115, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[87, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[87, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[155, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[156, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[157, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[158, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[159, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[160, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[87, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[161, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[162, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[163, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[164, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[165, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[166, "dpnp.issubdtype", false]], "issubsctype() (in module dpnp)": [[167, "dpnp.issubsctype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[299, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[87, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[300, "dpnp.ndarray.itemsize", false]], "kind (dpnp.dtype attribute)": [[87, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[168, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[361, "dpnp.random.laplace", false]], "left_shift() (in module dpnp)": [[169, "dpnp.left_shift", false]], "less() (in module dpnp)": [[170, "dpnp.less", false]], "less_equal() (in module dpnp)": [[171, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[192, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[193, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[194, "dpnp.log", false]], "log10() (in module dpnp)": [[195, "dpnp.log10", false]], "log1p() (in module dpnp)": [[196, "dpnp.log1p", false]], "log2() (in module dpnp)": [[197, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[198, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[199, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[200, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[201, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[202, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[203, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[362, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[363, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[364, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[204, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[205, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[180, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[206, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[207, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[181, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[182, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[301, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[208, "dpnp.max", false]], "maximum() (in module dpnp)": [[209, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[302, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[210, "dpnp.mean", false]], "median() (in module dpnp)": [[211, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[212, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[87, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[213, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[303, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[214, "dpnp.min", false]], "minimum() (in module dpnp)": [[215, "dpnp.minimum", false]], "mod() (in module dpnp)": [[216, "dpnp.mod", false]], "modf() (in module dpnp)": [[217, "dpnp.modf", false]], "module": [[2, "module-dpnp", false], [3, "module-dpnp", false], [10, "module-0", false], [10, "module-dpnp.fft", false], [467, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[218, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[183, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[365, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[219, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[366, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[87, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[87, "dpnp.dtype.names", false]], "nanargmax() (in module dpnp)": [[220, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[221, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[222, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[223, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[224, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[225, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[226, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[227, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[228, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[229, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[230, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[304, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[231, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[87, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[305, "dpnp.ndarray.ndim", false]], "negative() (in module dpnp)": [[328, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[367, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[87, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[329, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[368, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[369, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[306, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[330, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[184, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[370, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[331, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[87, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[332, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[333, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[334, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[335, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[371, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[307, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[336, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[372, "dpnp.random.permutation", false]], "pinv() (in module dpnp.linalg)": [[185, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[337, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[373, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[338, "dpnp.positive", false]], "power() (in module dpnp)": [[339, "dpnp.power", false]], "power() (in module dpnp.random)": [[374, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[308, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[340, "dpnp.prod", false]], "proj() (in module dpnp)": [[341, "dpnp.proj", false]], "ptp() (in module dpnp)": [[342, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[309, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[343, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[344, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[345, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[186, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[346, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[347, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[375, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[376, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[377, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[378, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[379, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[380, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[348, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[381, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[310, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[397, "dpnp.ravel", false]], "rayleigh() (in module dpnp.random)": [[382, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[311, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[398, "dpnp.real", false]], "reciprocal() (in module dpnp)": [[399, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[400, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[401, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[312, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[402, "dpnp.repeat", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[313, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[403, "dpnp.reshape", false]], "result_type() (in module dpnp)": [[404, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[116, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[117, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[118, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[119, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[405, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[406, "dpnp.rint", false]], "roll() (in module dpnp)": [[407, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[408, "dpnp.rollaxis", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[314, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[409, "dpnp.round", false]], "row_stack() (in module dpnp)": [[410, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[411, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[383, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[315, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[412, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[384, "dpnp.random.seed", false]], "select() (in module dpnp)": [[413, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[87, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[316, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[414, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[385, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[415, "dpnp.sign", false]], "signbit() (in module dpnp)": [[416, "dpnp.signbit", false]], "sin() (in module dpnp)": [[417, "dpnp.sin", false]], "sinh() (in module dpnp)": [[418, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[317, "dpnp.ndarray.size", false]], "slogdet() (in module dpnp.linalg)": [[187, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[188, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[318, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[419, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[420, "dpnp.sort_complex", false]], "sqrt() (in module dpnp)": [[421, "dpnp.sqrt", false]], "square() (in module dpnp)": [[422, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[319, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[423, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[424, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[386, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[387, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[388, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[389, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[390, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[320, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[425, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[87, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[321, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[87, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[426, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[322, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[427, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[189, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[323, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[428, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[232, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[324, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[429, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[430, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[431, "dpnp.tan", false]], "tanh() (in module dpnp)": [[432, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[433, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[190, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[191, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[434, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[325, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[435, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[326, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[436, "dpnp.transpose", false]], "trapz() (in module dpnp)": [[437, "dpnp.trapz", false]], "tri() (in module dpnp)": [[438, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[391, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[439, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[440, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[441, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[442, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[443, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[444, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[445, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[446, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[447, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[87, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[348, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[392, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[448, "dpnp.unique", false]], "unwrap() (in module dpnp)": [[449, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[85, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[450, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[85, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[327, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[451, "dpnp.var", false]], "vdot() (in module dpnp)": [[452, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[393, "dpnp.random.vonmises", false]], "vstack() (in module dpnp)": [[453, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[394, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[395, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[454, "dpnp.where", false]], "zeros() (in module dpnp)": [[455, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[456, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[396, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "arange"], [21, 1, 1, "", "arccos"], [22, 1, 1, "", "arccosh"], [23, 1, 1, "", "arcsin"], [24, 1, 1, "", "arcsinh"], [25, 1, 1, "", "arctan"], [26, 1, 1, "", "arctan2"], [27, 1, 1, "", "arctanh"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "argmin"], [30, 1, 1, "", "argsort"], [31, 1, 1, "", "around"], [32, 1, 1, "", "array"], [33, 1, 1, "", "array_equal"], [34, 1, 1, "", "asanyarray"], [35, 1, 1, "", "asarray"], [36, 1, 1, "", "ascontiguousarray"], [37, 1, 1, "", "asfarray"], [38, 1, 1, "", "asfortranarray"], [39, 1, 1, "", "asnumpy"], [40, 1, 1, "", "astype"], [41, 1, 1, "", "atleast_1d"], [42, 1, 1, "", "atleast_2d"], [43, 1, 1, "", "atleast_3d"], [44, 1, 1, "", "average"], [45, 1, 1, "", "bincount"], [46, 1, 1, "", "bitwise_and"], [47, 1, 1, "", "bitwise_not"], [48, 1, 1, "", "bitwise_or"], [49, 1, 1, "", "bitwise_xor"], [50, 1, 1, "", "broadcast_arrays"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "can_cast"], [53, 1, 1, "", "cbrt"], [54, 1, 1, "", "ceil"], [55, 1, 1, "", "choose"], [56, 1, 1, "", "clip"], [57, 1, 1, "", "column_stack"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "correlate"], [66, 1, 1, "", "cos"], [67, 1, 1, "", "cosh"], [68, 1, 1, "", "count_nonzero"], [69, 1, 1, "", "cov"], [70, 1, 1, "", "cross"], [71, 1, 1, "", "cumlogsumexp"], [72, 1, 1, "", "cumprod"], [73, 1, 1, "", "cumsum"], [74, 1, 1, "", "deg2rad"], [75, 1, 1, "", "degrees"], [76, 1, 1, "", "diag"], [77, 1, 1, "", "diag_indices"], [78, 1, 1, "", "diag_indices_from"], [79, 1, 1, "", "diagflat"], [80, 1, 1, "", "diagonal"], [81, 1, 1, "", "diff"], [82, 1, 1, "", "digitize"], [83, 1, 1, "", "divide"], [84, 1, 1, "", "dot"], [86, 1, 1, "", "dstack"], [87, 2, 1, "", "dtype"], [88, 1, 1, "", "ediff1d"], [89, 1, 1, "", "einsum"], [90, 1, 1, "", "einsum_path"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "erf"], [95, 1, 1, "", "exp"], [96, 1, 1, "", "exp2"], [97, 1, 1, "", "expand_dims"], [98, 1, 1, "", "expm1"], [99, 1, 1, "", "extract"], [100, 1, 1, "", "eye"], [101, 1, 1, "", "fabs"], [10, 0, 0, "module-0", "fft"], [120, 1, 1, "", "fill_diagonal"], [121, 1, 1, "", "finfo"], [122, 2, 1, "", "flatiter"], [123, 1, 1, "", "flatnonzero"], [124, 1, 1, "", "flip"], [125, 1, 1, "", "fliplr"], [126, 1, 1, "", "flipud"], [127, 1, 1, "", "floor"], [128, 1, 1, "", "floor_divide"], [129, 1, 1, "", "fmax"], [130, 1, 1, "", "fmin"], [131, 1, 1, "", "fmod"], [132, 1, 1, "", "from_dlpack"], [133, 1, 1, "", "frombuffer"], [134, 1, 1, "", "fromfile"], [135, 1, 1, "", "fromfunction"], [136, 1, 1, "", "fromiter"], [137, 1, 1, "", "fromstring"], [138, 1, 1, "", "full"], [139, 1, 1, "", "full_like"], [140, 1, 1, "", "geomspace"], [141, 1, 1, "", "get_include"], [142, 1, 1, "", "gradient"], [143, 1, 1, "", "greater"], [144, 1, 1, "", "greater_equal"], [145, 1, 1, "", "histogram"], [146, 1, 1, "", "histogram_bin_edges"], [147, 1, 1, "", "hstack"], [148, 1, 1, "", "hypot"], [149, 1, 1, "", "identity"], [150, 1, 1, "", "iinfo"], [151, 1, 1, "", "imag"], [152, 1, 1, "", "indices"], [153, 1, 1, "", "inner"], [154, 1, 1, "", "invert"], [155, 1, 1, "", "isclose"], [156, 1, 1, "", "iscomplex"], [157, 1, 1, "", "iscomplexobj"], [158, 1, 1, "", "isfinite"], [159, 1, 1, "", "isinf"], [160, 1, 1, "", "isnan"], [161, 1, 1, "", "isneginf"], [162, 1, 1, "", "isposinf"], [163, 1, 1, "", "isreal"], [164, 1, 1, "", "isrealobj"], [165, 1, 1, "", "isscalar"], [166, 1, 1, "", "issubdtype"], [167, 1, 1, "", "issubsctype"], [168, 1, 1, "", "kron"], [169, 1, 1, "", "left_shift"], [170, 1, 1, "", "less"], [171, 1, 1, "", "less_equal"], [192, 1, 1, "", "linspace"], [193, 1, 1, "", "loadtxt"], [194, 1, 1, "", "log"], [195, 1, 1, "", "log10"], [196, 1, 1, "", "log1p"], [197, 1, 1, "", "log2"], [198, 1, 1, "", "logaddexp"], [199, 1, 1, "", "logaddexp2"], [200, 1, 1, "", "logical_and"], [201, 1, 1, "", "logical_not"], [202, 1, 1, "", "logical_or"], [203, 1, 1, "", "logical_xor"], [204, 1, 1, "", "logspace"], [205, 1, 1, "", "logsumexp"], [206, 1, 1, "", "mask_indices"], [207, 1, 1, "", "matmul"], [208, 1, 1, "", "max"], [209, 1, 1, "", "maximum"], [210, 1, 1, "", "mean"], [211, 1, 1, "", "median"], [212, 1, 1, "", "meshgrid"], [213, 5, 1, "", "mgrid"], [214, 1, 1, "", "min"], [215, 1, 1, "", "minimum"], [216, 1, 1, "", "mod"], [217, 1, 1, "", "modf"], [218, 1, 1, "", "moveaxis"], [219, 1, 1, "", "multiply"], [220, 1, 1, "", "nanargmax"], [221, 1, 1, "", "nanargmin"], [222, 1, 1, "", "nancumprod"], [223, 1, 1, "", "nancumsum"], [224, 1, 1, "", "nanmax"], [225, 1, 1, "", "nanmean"], [226, 1, 1, "", "nanmin"], [227, 1, 1, "", "nanprod"], [228, 1, 1, "", "nanstd"], [229, 1, 1, "", "nansum"], [230, 1, 1, "", "nanvar"], [231, 3, 1, "", "ndarray"], [328, 1, 1, "", "negative"], [329, 1, 1, "", "nextafter"], [330, 1, 1, "", "nonzero"], [331, 1, 1, "", "not_equal"], [332, 5, 1, "", "ogrid"], [333, 1, 1, "", "ones"], [334, 1, 1, "", "ones_like"], [335, 1, 1, "", "outer"], [336, 1, 1, "", "partition"], [337, 1, 1, "", "place"], [338, 1, 1, "", "positive"], [339, 1, 1, "", "power"], [340, 1, 1, "", "prod"], [341, 1, 1, "", "proj"], [342, 1, 1, "", "ptp"], [343, 1, 1, "", "put"], [344, 1, 1, "", "put_along_axis"], [345, 1, 1, "", "putmask"], [346, 1, 1, "", "rad2deg"], [347, 1, 1, "", "radians"], [467, 0, 0, "-", "random"], [397, 1, 1, "", "ravel"], [398, 1, 1, "", "real"], [399, 1, 1, "", "reciprocal"], [400, 1, 1, "", "reduce_hypot"], [401, 1, 1, "", "remainder"], [402, 1, 1, "", "repeat"], [403, 1, 1, "", "reshape"], [404, 1, 1, "", "result_type"], [405, 1, 1, "", "right_shift"], [406, 1, 1, "", "rint"], [407, 1, 1, "", "roll"], [408, 1, 1, "", "rollaxis"], [409, 1, 1, "", "round"], [410, 1, 1, "", "row_stack"], [411, 1, 1, "", "rsqrt"], [412, 1, 1, "", "searchsorted"], [413, 1, 1, "", "select"], [414, 1, 1, "", "shape"], [415, 1, 1, "", "sign"], [416, 1, 1, "", "signbit"], [417, 1, 1, "", "sin"], [418, 1, 1, "", "sinh"], [419, 1, 1, "", "sort"], [420, 1, 1, "", "sort_complex"], [421, 1, 1, "", "sqrt"], [422, 1, 1, "", "square"], [423, 1, 1, "", "squeeze"], [424, 1, 1, "", "stack"], [425, 1, 1, "", "std"], [426, 1, 1, "", "subtract"], [427, 1, 1, "", "sum"], [428, 1, 1, "", "swapaxes"], [429, 1, 1, "", "take"], [430, 1, 1, "", "take_along_axis"], [431, 1, 1, "", "tan"], [432, 1, 1, "", "tanh"], [433, 1, 1, "", "tensordot"], [434, 1, 1, "", "tile"], [435, 1, 1, "", "trace"], [436, 1, 1, "", "transpose"], [437, 1, 1, "", "trapz"], [438, 1, 1, "", "tri"], [439, 1, 1, "", "tril"], [440, 1, 1, "", "tril_indices"], [441, 1, 1, "", "tril_indices_from"], [442, 1, 1, "", "trim_zeros"], [443, 1, 1, "", "triu"], [444, 1, 1, "", "triu_indices"], [445, 1, 1, "", "triu_indices_from"], [446, 1, 1, "", "true_divide"], [447, 1, 1, "", "trunc"], [448, 1, 1, "", "unique"], [449, 1, 1, "", "unwrap"], [450, 1, 1, "", "vander"], [451, 1, 1, "", "var"], [452, 1, 1, "", "vdot"], [453, 1, 1, "", "vstack"], [454, 1, 1, "", "where"], [455, 1, 1, "", "zeros"], [456, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[85, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[85, 3, 1, "", "T"], [85, 4, 1, "", "__eq__"], [85, 4, 1, "", "__ge__"], [85, 4, 1, "", "__getitem__"], [85, 4, 1, "", "__gt__"], [85, 4, 1, "", "__le__"], [85, 4, 1, "", "__len__"], [85, 4, 1, "", "__lt__"], [85, 4, 1, "", "__ne__"], [85, 4, 1, "", "__setitem__"], [85, 4, 1, "", "all"], [85, 4, 1, "", "any"], [85, 4, 1, "", "argmax"], [85, 4, 1, "", "argmin"], [85, 4, 1, "", "argsort"], [85, 4, 1, "", "asnumpy"], [85, 4, 1, "", "astype"], [85, 4, 1, "", "choose"], [85, 4, 1, "", "clip"], [85, 4, 1, "", "conj"], [85, 4, 1, "", "conjugate"], [85, 4, 1, "", "copy"], [85, 4, 1, "", "cumprod"], [85, 4, 1, "", "cumsum"], [85, 3, 1, "", "device"], [85, 4, 1, "", "diagonal"], [85, 4, 1, "", "dot"], [85, 3, 1, "", "dtype"], [85, 4, 1, "", "fill"], [85, 3, 1, "", "flags"], [85, 3, 1, "", "flat"], [85, 4, 1, "", "flatten"], [85, 4, 1, "", "get_array"], [85, 3, 1, "", "imag"], [85, 4, 1, "", "item"], [85, 3, 1, "", "itemsize"], [85, 4, 1, "", "max"], [85, 4, 1, "", "mean"], [85, 4, 1, "", "min"], [85, 3, 1, "", "nbytes"], [85, 3, 1, "", "ndim"], [85, 4, 1, "", "nonzero"], [85, 4, 1, "", "partition"], [85, 4, 1, "", "prod"], [85, 4, 1, "", "put"], [85, 4, 1, "", "ravel"], [85, 3, 1, "", "real"], [85, 4, 1, "", "repeat"], [85, 4, 1, "", "reshape"], [85, 4, 1, "", "round"], [85, 4, 1, "", "searchsorted"], [85, 3, 1, "", "shape"], [85, 3, 1, "", "size"], [85, 4, 1, "", "sort"], [85, 4, 1, "", "squeeze"], [85, 4, 1, "", "std"], [85, 3, 1, "", "strides"], [85, 4, 1, "", "sum"], [85, 4, 1, "", "swapaxes"], [85, 3, 1, "", "sycl_context"], [85, 3, 1, "", "sycl_device"], [85, 3, 1, "", "sycl_queue"], [85, 4, 1, "", "take"], [85, 4, 1, "", "to_device"], [85, 4, 1, "", "trace"], [85, 4, 1, "", "transpose"], [85, 3, 1, "", "usm_type"], [85, 4, 1, "", "var"]], "dpnp.dtype": [[87, 4, 1, "", "__eq__"], [87, 4, 1, "", "__ge__"], [87, 4, 1, "", "__getitem__"], [87, 4, 1, "", "__gt__"], [87, 4, 1, "", "__le__"], [87, 4, 1, "", "__len__"], [87, 4, 1, "", "__lt__"], [87, 4, 1, "", "__ne__"], [87, 3, 1, "", "alignment"], [87, 3, 1, "", "base"], [87, 3, 1, "", "byteorder"], [87, 3, 1, "", "char"], [87, 3, 1, "", "descr"], [87, 3, 1, "", "fields"], [87, 3, 1, "", "flags"], [87, 3, 1, "", "hasobject"], [87, 3, 1, "", "isalignedstruct"], [87, 3, 1, "", "isbuiltin"], [87, 3, 1, "", "isnative"], [87, 3, 1, "", "itemsize"], [87, 3, 1, "", "kind"], [87, 3, 1, "", "metadata"], [87, 3, 1, "", "name"], [87, 3, 1, "", "names"], [87, 3, 1, "", "ndim"], [87, 4, 1, "", "newbyteorder"], [87, 3, 1, "", "num"], [87, 3, 1, "", "shape"], [87, 3, 1, "", "str"], [87, 3, 1, "", "subdtype"], [87, 3, 1, "", "type"]], "dpnp.fft": [[102, 1, 1, "", "fft"], [103, 1, 1, "", "fft2"], [104, 1, 1, "", "fftfreq"], [105, 1, 1, "", "fftn"], [106, 1, 1, "", "fftshift"], [107, 1, 1, "", "hfft"], [108, 1, 1, "", "ifft"], [109, 1, 1, "", "ifft2"], [110, 1, 1, "", "ifftn"], [111, 1, 1, "", "ifftshift"], [112, 1, 1, "", "ihfft"], [113, 1, 1, "", "irfft"], [114, 1, 1, "", "irfft2"], [115, 1, 1, "", "irfftn"], [116, 1, 1, "", "rfft"], [117, 1, 1, "", "rfft2"], [118, 1, 1, "", "rfftfreq"], [119, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[122, 4, 1, "", "__eq__"], [122, 4, 1, "", "__ge__"], [122, 4, 1, "", "__getitem__"], [122, 4, 1, "", "__gt__"], [122, 4, 1, "", "__iter__"], [122, 4, 1, "", "__le__"], [122, 4, 1, "", "__lt__"], [122, 4, 1, "", "__ne__"], [122, 4, 1, "", "__next__"], [122, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[172, 1, 1, "", "cholesky"], [173, 1, 1, "", "cond"], [174, 1, 1, "", "det"], [175, 1, 1, "", "eig"], [176, 1, 1, "", "eigh"], [177, 1, 1, "", "eigvals"], [178, 1, 1, "", "eigvalsh"], [179, 1, 1, "", "inv"], [180, 1, 1, "", "lstsq"], [181, 1, 1, "", "matrix_power"], [182, 1, 1, "", "matrix_rank"], [183, 1, 1, "", "multi_dot"], [184, 1, 1, "", "norm"], [185, 1, 1, "", "pinv"], [186, 1, 1, "", "qr"], [187, 1, 1, "", "slogdet"], [188, 1, 1, "", "solve"], [189, 1, 1, "", "svd"], [190, 1, 1, "", "tensorinv"], [191, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[232, 6, 1, "", "T"], [233, 4, 1, "", "__abs__"], [234, 4, 1, "", "__add__"], [235, 4, 1, "", "__and__"], [236, 4, 1, "", "__bool__"], [237, 4, 1, "", "__complex__"], [238, 4, 1, "", "__copy__"], [239, 4, 1, "", "__eq__"], [240, 4, 1, "", "__float__"], [241, 4, 1, "", "__floordiv__"], [242, 4, 1, "", "__ge__"], [243, 4, 1, "", "__getitem__"], [244, 4, 1, "", "__gt__"], [245, 4, 1, "", "__iadd__"], [246, 4, 1, "", "__iand__"], [247, 4, 1, "", "__ifloordiv__"], [248, 4, 1, "", "__ilshift__"], [249, 4, 1, "", "__imod__"], [250, 4, 1, "", "__imul__"], [251, 4, 1, "", "__int__"], [252, 4, 1, "", "__invert__"], [253, 4, 1, "", "__ior__"], [254, 4, 1, "", "__ipow__"], [255, 4, 1, "", "__irshift__"], [256, 4, 1, "", "__isub__"], [257, 4, 1, "", "__itruediv__"], [258, 4, 1, "", "__ixor__"], [259, 4, 1, "", "__le__"], [260, 4, 1, "", "__len__"], [261, 4, 1, "", "__lshift__"], [262, 4, 1, "", "__lt__"], [263, 4, 1, "", "__matmul__"], [264, 4, 1, "", "__mod__"], [265, 4, 1, "", "__mul__"], [266, 4, 1, "", "__ne__"], [267, 4, 1, "", "__neg__"], [268, 4, 1, "", "__new__"], [269, 4, 1, "", "__or__"], [270, 4, 1, "", "__pos__"], [271, 4, 1, "", "__pow__"], [272, 4, 1, "", "__repr__"], [273, 4, 1, "", "__rshift__"], [274, 4, 1, "", "__setitem__"], [275, 4, 1, "", "__str__"], [276, 4, 1, "", "__sub__"], [277, 4, 1, "", "__truediv__"], [278, 4, 1, "", "__xor__"], [279, 4, 1, "", "all"], [280, 4, 1, "", "any"], [281, 4, 1, "", "argmax"], [282, 4, 1, "", "argmin"], [283, 4, 1, "", "argsort"], [284, 4, 1, "", "astype"], [285, 4, 1, "", "choose"], [286, 4, 1, "", "clip"], [287, 4, 1, "", "conj"], [288, 4, 1, "", "conjugate"], [289, 4, 1, "", "copy"], [290, 4, 1, "", "cumprod"], [291, 4, 1, "", "cumsum"], [292, 4, 1, "", "diagonal"], [293, 6, 1, "", "dtype"], [294, 4, 1, "", "fill"], [295, 6, 1, "", "flags"], [296, 6, 1, "", "flat"], [297, 4, 1, "", "flatten"], [298, 6, 1, "", "imag"], [299, 4, 1, "", "item"], [300, 6, 1, "", "itemsize"], [301, 4, 1, "", "max"], [302, 4, 1, "", "mean"], [303, 4, 1, "", "min"], [304, 6, 1, "", "nbytes"], [305, 6, 1, "", "ndim"], [306, 4, 1, "", "nonzero"], [307, 4, 1, "", "partition"], [308, 4, 1, "", "prod"], [309, 4, 1, "", "put"], [310, 4, 1, "", "ravel"], [311, 6, 1, "", "real"], [312, 4, 1, "", "repeat"], [313, 4, 1, "", "reshape"], [314, 4, 1, "", "round"], [315, 4, 1, "", "searchsorted"], [316, 6, 1, "", "shape"], [317, 6, 1, "", "size"], [318, 4, 1, "", "sort"], [319, 4, 1, "", "squeeze"], [320, 4, 1, "", "std"], [321, 6, 1, "", "strides"], [322, 4, 1, "", "sum"], [323, 4, 1, "", "swapaxes"], [324, 4, 1, "", "take"], [325, 4, 1, "", "trace"], [326, 4, 1, "", "transpose"], [327, 4, 1, "", "var"]], "dpnp.random": [[348, 2, 1, "", "RandomState"], [349, 1, 1, "", "beta"], [350, 1, 1, "", "binomial"], [351, 1, 1, "", "bytes"], [352, 1, 1, "", "chisquare"], [353, 1, 1, "", "choice"], [354, 1, 1, "", "dirichlet"], [355, 1, 1, "", "exponential"], [356, 1, 1, "", "f"], [357, 1, 1, "", "gamma"], [358, 1, 1, "", "geometric"], [359, 1, 1, "", "gumbel"], [360, 1, 1, "", "hypergeometric"], [361, 1, 1, "", "laplace"], [362, 1, 1, "", "logistic"], [363, 1, 1, "", "lognormal"], [364, 1, 1, "", "logseries"], [365, 1, 1, "", "multinomial"], [366, 1, 1, "", "multivariate_normal"], [367, 1, 1, "", "negative_binomial"], [368, 1, 1, "", "noncentral_chisquare"], [369, 1, 1, "", "noncentral_f"], [370, 1, 1, "", "normal"], [371, 1, 1, "", "pareto"], [372, 1, 1, "", "permutation"], [373, 1, 1, "", "poisson"], [374, 1, 1, "", "power"], [375, 1, 1, "", "rand"], [376, 1, 1, "", "randint"], [377, 1, 1, "", "randn"], [378, 1, 1, "", "random"], [379, 1, 1, "", "random_integers"], [380, 1, 1, "", "random_sample"], [381, 1, 1, "", "ranf"], [382, 1, 1, "", "rayleigh"], [383, 1, 1, "", "sample"], [384, 1, 1, "", "seed"], [385, 1, 1, "", "shuffle"], [386, 1, 1, "", "standard_cauchy"], [387, 1, 1, "", "standard_exponential"], [388, 1, 1, "", "standard_gamma"], [389, 1, 1, "", "standard_normal"], [390, 1, 1, "", "standard_t"], [391, 1, 1, "", "triangular"], [392, 1, 1, "", "uniform"], [393, 1, 1, "", "vonmises"], [394, 1, 1, "", "wald"], [395, 1, 1, "", "weibull"], [396, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[348, 4, 1, "", "__eq__"], [348, 4, 1, "", "__ge__"], [348, 4, 1, "", "__gt__"], [348, 4, 1, "", "__le__"], [348, 4, 1, "", "__lt__"], [348, 4, 1, "", "__ne__"], [348, 4, 1, "", "get_state"], [348, 4, 1, "", "get_sycl_device"], [348, 4, 1, "", "get_sycl_queue"], [348, 4, 1, "", "normal"], [348, 4, 1, "", "rand"], [348, 4, 1, "", "randint"], [348, 4, 1, "", "randn"], [348, 4, 1, "", "random_sample"], [348, 4, 1, "", "standard_normal"], [348, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 70, 73, 85, 87, 103, 105, 107, 109, 110, 112, 114, 115, 117, 119, 120, 133, 134, 180, 182, 184, 189, 293, 326, 348, 349, 350, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 434, 464], "0": [0, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 142, 145, 146, 149, 152, 153, 155, 158, 159, 160, 161, 162, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 187, 192, 193, 194, 195, 196, 197, 201, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 289, 292, 294, 298, 299, 311, 314, 318, 320, 325, 326, 327, 330, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 347, 348, 350, 355, 357, 358, 359, 361, 362, 363, 365, 366, 367, 370, 372, 373, 374, 375, 378, 380, 381, 382, 383, 386, 389, 391, 392, 393, 399, 401, 402, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 454, 455, 456, 464], "00": [66, 90, 102, 417], "000": 350, "00000000005e": 98, "00000000e": 102, "000000082740371e": 98, "000000e": [66, 417], "00001e10": [15, 155], "0001e10": 155, "000e": 90, "00867716": 352, "01": 90, "02": 90, "03088525e": 91, "0396842": 204, "04": 90, "04719755": 347, "04921661": 348, "05": [15, 90, 155], "06310682": 348, "07944154": [71, 187], "08": [15, 66, 90, 155, 366, 417], "08156915": 348, "0943951": 347, "09640474": 199, "09861229": [71, 187, 196], "0dev0": 6, "0j": [18, 84, 85, 156, 157, 163, 164, 207, 298, 311, 415], "0th": 433, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 149, 151, 152, 153, 155, 156, 157, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 283, 284, 289, 292, 294, 297, 298, 299, 307, 311, 318, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 350, 352, 353, 355, 357, 359, 361, 362, 363, 365, 366, 367, 370, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 387, 389, 392, 397, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 464], "10": [0, 4, 13, 22, 24, 28, 29, 44, 56, 62, 71, 72, 73, 77, 78, 81, 82, 85, 87, 89, 90, 98, 99, 106, 118, 138, 140, 145, 146, 151, 155, 168, 169, 194, 195, 196, 197, 204, 205, 211, 219, 313, 342, 344, 348, 350, 360, 372, 400, 404, 405, 407, 409, 412, 424, 430, 439, 440, 441, 443, 444, 445, 454], "100": [77, 118, 140, 155, 168, 183, 204, 360, 386], "1000": [52, 140, 183, 204, 349, 350, 355, 357, 359, 360, 361, 362, 363, 370, 371, 374, 376, 378, 381, 383, 389, 393, 394, 395, 396], "10000": [73, 183, 358, 373, 382, 392], "100000": 367, "1000000": [386, 388, 390, 391], "1024": 0, "105": 90, "11": [28, 29, 44, 67, 77, 78, 85, 99, 142, 184, 313, 367, 376, 409, 412, 418, 439, 440, 441, 443, 444, 445, 454], "110": [89, 153], "113": 198, "11570901": 348, "1179187": 348, "118033988749895": 425, "119": 89, "1196081": 348, "12": [10, 28, 29, 43, 70, 75, 77, 78, 82, 87, 89, 99, 151, 204, 340, 342, 347, 372, 412, 439, 440, 441, 443, 444, 445, 454], "120": [72, 75], "123": [85, 90, 299], "125": [339, 450], "127": 140, "128": [0, 140], "12th": 89, "13": [10, 28, 29, 47, 77, 78, 84, 87, 89, 154, 207, 412, 440, 441, 444, 445], "130": 89, "134": 153, "13436424": 348, "135": 26, "13710533": 352, "139884456208480": 14, "14": [28, 29, 46, 47, 77, 78, 84, 153, 154, 412, 433, 440, 441, 444, 445], "140053638309840": 19, "14159265": [21, 26, 74, 347], "14423775e": 102, "146": 6, "15": [28, 29, 73, 77, 78, 82, 89, 107, 112, 185, 195, 372, 412, 440, 441, 444, 445], "150": 75, "15888336": 204, "16": [6, 46, 77, 78, 87, 102, 136, 140, 142, 219, 339, 431, 440, 441, 444, 445], "16227766": [173, 400], "16394577": 348, "164": 199, "166": 199, "16j": 102, "17": 102, "17157288": [176, 178], "17281316e": 102, "177": [140, 204], "17j": 102, "18": [6, 72, 87, 88, 89, 184, 204], "180": [26, 74, 75, 89, 346, 472], "1805": 10, "18236388": 348, "18557831": 348, "1887902": 347, "19": [10, 68, 87], "1923875335537315": 377, "19245009": 411, "1965": 10, "19722458": 71, "1d": [343, 344, 430], "1e": [15, 98, 155, 175, 185, 195, 196, 198, 199, 366], "1e10": [15, 155], "1j": [11, 12, 18, 59, 60, 85, 113, 151, 156, 163, 175, 189, 298, 311, 420, 422], "1th": 433, "2": [0, 3, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 44, 46, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 156, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 284, 289, 292, 294, 297, 299, 307, 326, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 346, 347, 348, 352, 356, 360, 366, 372, 375, 377, 388, 390, 391, 394, 396, 397, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "20": [6, 72, 82, 89, 118, 152, 155, 168, 169, 184, 344, 350, 365, 412, 430], "20000": 350, "2007": 10, "200e": 90, "2048": 0, "21": [73, 87], "210": 75, "215": 204, "21941987": 348, "21968665": 348, "22": 343, "22460635e": 431, "22464680e": 102, "22497216": 184, "22776602": 204, "23": [6, 348], "230": 89, "23598776": 347, "23606798": 184, "24": [28, 29, 70, 72, 88, 89, 153, 168, 190, 340, 433, 435], "240": 75, "24264069": 184, "24544512": 348, "247": 6, "247219128924647": 228, "25": [87, 89, 94, 104, 142, 145, 146, 179, 192, 219, 230, 377, 386, 450, 451], "255": [46, 48], "25506903": 348, "256": [0, 140], "26": [49, 89], "26618007j": 197, "27": [53, 204, 339, 411, 450], "270": 75, "28": 89, "28318531": 449, "28352814": 348, "28904982": 199, "297": 10, "299": 6, "2d": [189, 207], "2e": 73, "2f": 0, "2j": [59, 60, 84, 102, 151, 156, 163, 176, 178, 207, 415, 420, 452], "3": [0, 3, 4, 13, 20, 21, 26, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 46, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 106, 107, 111, 112, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 140, 142, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 163, 164, 165, 168, 169, 173, 174, 175, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 289, 292, 297, 299, 307, 318, 326, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 343, 347, 348, 352, 356, 363, 366, 372, 375, 376, 377, 387, 391, 394, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 414, 416, 419, 420, 421, 423, 424, 425, 426, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456], "30": [70, 75, 89, 118, 344, 347, 430, 452], "300": 75, "3003003": 399, "301": 10, "30102999566": 195, "3012989": 418, "30258509": [71, 205], "31": [49, 140], "312": 91, "316": 204, "32": [87, 89, 140, 227, 229, 433], "33": 399, "330": 75, "333": 183, "33486982e": 102, "33836967": 348, "34074171": 348, "34132519": 204, "34846923": 184, "34960421": 204, "35": [89, 358], "35106603e": 184, "35355338": 411, "36": 70, "37": 409, "371139e": 66, "372": 6, "38": [153, 350], "38268343": 176, "38268343j": 176, "38629436": 71, "38885": 350, "389056099": [95, 98], "39": 6, "39295758": 348, "397": 6, "3e": [0, 73], "3j": [84, 207, 420], "3rd": 58, "3x3": 206, "3x8000": 387, "4": [0, 13, 14, 20, 28, 29, 32, 41, 43, 44, 46, 48, 50, 56, 57, 58, 61, 64, 66, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 99, 104, 106, 107, 108, 111, 112, 118, 120, 123, 124, 128, 129, 130, 134, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 156, 163, 168, 171, 174, 179, 181, 182, 184, 187, 190, 191, 192, 197, 200, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 228, 230, 289, 292, 297, 307, 318, 326, 330, 332, 334, 339, 340, 342, 343, 347, 348, 349, 352, 372, 377, 393, 397, 401, 402, 403, 407, 408, 409, 410, 415, 419, 421, 424, 425, 426, 428, 429, 433, 434, 436, 437, 439, 440, 441, 443, 444, 445, 446, 450, 451, 452, 453, 454, 456], "40": [89, 118, 169, 344, 430], "40882036": 348, "4096": 0, "41421356": [173, 184], "429": 6, "44": [337, 343], "4400": [89, 433], "443469": 204, "44509285e": 102, "45": [18, 26], "4532": [89, 433], "46": 89, "46394577": 348, "464": 204, "4664": [89, 433], "47": 6, "4730": [89, 433], "4796": [89, 433], "48": [6, 70], "48093112": 348, "4874": [89, 433], "48927254": 348, "49": 6, "4928": [89, 433], "49543509": 348, "49778714": 449, "499128": 84, "4d": 189, "4j": [151, 452], "4x4": [440, 444], "5": [0, 6, 13, 14, 19, 20, 27, 28, 41, 44, 45, 46, 48, 49, 50, 54, 56, 58, 61, 64, 65, 68, 70, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 94, 99, 104, 106, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 142, 145, 146, 147, 148, 151, 152, 153, 156, 163, 168, 169, 172, 176, 178, 179, 183, 184, 188, 192, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 225, 228, 284, 289, 330, 332, 333, 334, 339, 342, 343, 347, 348, 349, 350, 352, 355, 367, 371, 372, 373, 374, 377, 380, 395, 397, 399, 401, 403, 405, 406, 407, 408, 409, 410, 412, 415, 420, 424, 425, 427, 428, 429, 433, 434, 436, 438, 439, 440, 441, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456], "50": [118, 140, 168, 198, 199, 204, 344, 430, 433, 454], "500": 168, "5018": [89, 433], "5091786": 67, "51": 6, "512": 0, "5162": [89, 433], "52069395e": 102, "52359878": 347, "52928804": 348, "5306": [89, 433], "54": 348, "542": 6, "54288406": 348, "54465213": 348, "548739": 418, "54930614": 27, "55": [337, 343], "5555555555555554": 230, "56": 6, "562": 204, "5620499351813308": [11, 12], "56920387": 348, "5707963267948966": 23, "57079633": [18, 26, 347, 449], "58997253": 348, "591953": 67, "5e": [198, 199], "5j": [213, 332, 420], "6": [0, 4, 6, 13, 20, 28, 29, 41, 44, 48, 49, 56, 58, 64, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 93, 98, 99, 104, 107, 118, 124, 139, 142, 147, 151, 152, 153, 168, 184, 185, 186, 189, 190, 192, 204, 206, 222, 223, 227, 289, 299, 330, 334, 337, 339, 342, 348, 365, 367, 372, 377, 397, 403, 407, 408, 409, 410, 420, 424, 426, 427, 428, 429, 433, 435, 437, 439, 440, 441, 443, 444, 445, 446, 449, 452, 453, 454, 456], "60": [70, 75, 89, 344, 430, 433, 454], "600": 168, "60943791": 71, "61799388": 347, "62": 153, "6227766": 140, "62318272": 352, "62341325": 140, "624": 90, "63": 140, "63317787e": 431, "63522211": 348, "63836967": 348, "64": [0, 4, 89, 140, 227, 229, 339, 409], "64000": 89, "65745445": 22, "66519143": 347, "6666666666666665": 225, "67": 89, "67305985": 133, "673174": 348, "67718303": 348, "69295758": 348, "69314718": [71, 187, 196], "6990877": 348, "6j": [151, 452], "7": [13, 15, 20, 41, 54, 56, 64, 68, 70, 73, 76, 77, 78, 80, 81, 83, 85, 88, 95, 99, 124, 127, 140, 142, 153, 155, 168, 184, 189, 206, 211, 216, 219, 299, 330, 341, 342, 348, 372, 401, 404, 406, 407, 426, 427, 428, 429, 433, 439, 440, 441, 443, 444, 445, 446, 447, 452, 454], "70": [168, 452, 454], "700": 168, "700e": 90, "70710677": [85, 298, 311], "70710678": [173, 175], "70710678j": 175, "70882036": 348, "71238898": 347, "718281828": [95, 98], "72": 70, "720": 72, "72075441": 204, "72538256": 24, "74165739": 184, "742278e": 417, "74596669": 184, "74921661": 348, "75": [44, 94, 104, 142, 146, 179, 192], "754": 121, "75958653": 347, "76096244": 348, "76377462": 348, "77447665": 199, "78539816": [18, 25, 26, 449], "78927254": 348, "79175947": 71, "7j": 341, "8": [4, 13, 15, 41, 53, 56, 64, 70, 76, 77, 78, 80, 81, 85, 87, 89, 90, 99, 102, 104, 118, 124, 140, 142, 151, 155, 174, 184, 187, 189, 190, 192, 204, 206, 330, 339, 340, 342, 348, 372, 391, 407, 411, 417, 429, 433, 435, 437, 439, 440, 441, 443, 444, 445, 450, 454], "80": [87, 89, 454], "8000": 387, "80226506": 348, "81715362": 348, "827941": [140, 204], "82842712": [176, 178], "84288406": 348, "84401099": 348, "84743374": 348, "84803548": 184, "85": 89, "86": 153, "87649168": 198, "88178420e": 102, "88997253": 348, "89920014": 352, "8f": 87, "8j": 452, "9": [4, 13, 41, 56, 64, 70, 73, 76, 77, 78, 80, 83, 85, 89, 91, 99, 102, 106, 111, 128, 136, 140, 142, 155, 175, 180, 184, 185, 186, 189, 204, 206, 219, 299, 330, 342, 348, 350, 352, 372, 407, 421, 426, 433, 439, 440, 441, 443, 444, 445, 446, 450, 454], "90": [18, 75, 346, 454], "917152": 432, "92387953": 176, "92387953j": 176, "94": 89, "94591015": 71, "95": 180, "95799250e": 102, "98": 207, "98024613": 204, "99": [196, 344], "99322285": 22, "99532227": 94, "996272": 432, "99822295": 24, "99853728": 94, "999": 90, "99959305": 94, "99989938": 94, "99997791": 94, "999999e": 155, "A": [10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 85, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 104, 116, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 148, 149, 151, 152, 154, 158, 159, 160, 161, 162, 169, 170, 171, 172, 176, 177, 178, 180, 182, 183, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 213, 215, 216, 219, 222, 223, 227, 229, 284, 289, 297, 316, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 341, 346, 347, 348, 350, 367, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 397, 399, 401, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 428, 429, 431, 432, 433, 434, 436, 438, 440, 442, 444, 446, 447, 450, 454, 455, 456], "AND": [14, 46, 47, 48, 49, 154, 200, 201, 202, 203], "And": [4, 39, 40, 77, 85, 284, 440, 444], "Be": 175, "Being": 3, "But": [4, 87], "By": [28, 29, 40, 70, 85, 107, 113, 140, 180, 192, 204, 207, 208, 210, 214, 220, 221, 224, 225, 226, 227, 228, 229, 230, 284, 397, 402, 407, 425, 429, 438, 440, 442, 444, 451], "For": [0, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 297, 298, 299, 311, 313, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 464], "If": [4, 10, 11, 12, 14, 15, 19, 20, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 56, 58, 70, 71, 72, 73, 76, 80, 81, 84, 85, 87, 89, 90, 97, 99, 100, 101, 102, 107, 108, 112, 113, 116, 120, 121, 124, 129, 130, 137, 140, 142, 145, 146, 147, 151, 152, 153, 155, 161, 162, 163, 172, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 204, 205, 208, 209, 210, 212, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 316, 318, 337, 340, 343, 344, 348, 370, 392, 398, 400, 402, 403, 407, 409, 410, 412, 419, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 450, 451, 452, 453, 454, 464], "In": [4, 10, 28, 29, 72, 73, 90, 113, 142, 172, 177, 183, 186, 199, 204, 222, 223, 225, 227, 229, 340, 343, 348, 392, 403, 427, 429, 447], "It": [4, 10, 14, 19, 28, 29, 56, 72, 73, 82, 84, 102, 107, 108, 112, 113, 116, 120, 142, 176, 178, 199, 207, 210, 220, 221, 222, 223, 224, 225, 226, 228, 230, 340, 425, 427, 429, 451], "Its": [56, 190, 344, 435], "NOT": [47, 154, 200, 201, 202, 203], "No": [35, 89, 172], "Not": [14, 19, 158, 222, 223, 224, 226, 227, 229, 340], "OR": [19, 46, 47, 48, 49, 154, 200, 201, 202, 203], "On": 4, "One": [41, 42, 43, 70, 86, 87, 113, 403], "Or": 142, "That": 206, "The": [3, 4, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 51, 53, 56, 57, 58, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 160, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 284, 289, 297, 298, 307, 311, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 342, 343, 344, 346, 347, 348, 351, 353, 354, 364, 369, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 438, 440, 441, 442, 444, 445, 446, 447, 450, 451, 453, 454, 455, 456, 464, 468, 472], "Then": [10, 36, 38, 206], "There": [10, 192], "These": [4, 87, 89, 90, 97, 206, 218, 344, 430, 440, 444, 464, 468], "To": [4, 107, 113, 330], "With": [28, 29, 44, 184, 208, 214, 220, 221, 227, 229, 340, 427], "_": [0, 146, 424], "__array_interface__": 87, "__bool__": 464, "__dlpack__": 132, "__dlpack_device__": 132, "__eq__": [85, 87, 122, 348], "__ge__": [85, 87, 122, 348], "__getitem__": [85, 87, 122], "__gt__": [85, 87, 122, 348], "__iter__": 122, "__le__": [85, 87, 122, 348], "__len__": [85, 87], "__lt__": [85, 87, 122, 348], "__main__": 0, "__name__": 0, "__ne__": [85, 87, 122, 348], "__next__": 122, "__setitem__": [85, 122], "__sycl_usm_array_interface__": 37, "_dtypes_list": 0, "a1": 33, "a2": 33, "a_": 10, "a_k": 10, "a_m": 10, "a_max": 56, "a_min": 56, "a_resamp": 113, "ab": [6, 10, 12, 15, 155], "abc": 89, "abcd": 90, "about": [36, 38, 85, 121, 175, 295, 464], "abov": [3, 71, 76, 79, 152, 186, 205, 400, 438, 439, 443], "absolut": [6, 11, 15, 18, 101, 155, 187, 228, 230, 341, 425, 451], "accept": [30, 89, 348, 419, 440, 444], "access": [10, 77, 78, 120, 206, 440, 444, 464], "accord": [14, 19, 44, 52, 87, 121, 175, 176, 177, 178, 205, 210, 225, 228, 230, 400, 405, 425, 451], "accordingli": [224, 226], "account": 403, "accumul": [71, 72, 73, 89, 145, 222, 223, 227, 229, 340, 427, 435], "accur": [87, 98, 142, 196, 198], "accuraci": 113, "achiev": 89, "across": [80, 146, 222, 223, 227, 229], "activ": 4, "actual": [87, 145, 146, 172, 183], "ad": [15, 87, 90, 97, 113, 155, 174, 187, 199, 468], "add": [6, 87], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [71, 172, 225], "address": 87, "advanc": 89, "advers": 89, "advis": 4, "affect": [20, 80, 89, 120, 145, 146], "after": [86, 120, 329, 367, 407], "ag": 87, "against": [15, 28, 29, 50, 51, 56, 141, 155, 184, 185, 208, 214, 220, 221, 227, 229, 340, 344, 427, 430], "ai": [3, 344, 430], "ai_max": 430, "ai_min": 430, "ainv": [179, 190], "al": 10, "algebra": [457, 468], "algorithm": [10, 89, 90, 116], "alia": [10, 16, 17, 83, 102, 107, 108, 112, 113, 116, 121, 216, 231, 348, 378, 381, 383, 401, 410, 446, 453], "alias": [9, 107, 113], "align": 87, "all": [4, 6, 9, 15, 19, 33, 40, 44, 57, 68, 75, 81, 85, 86, 87, 89, 90, 95, 96, 98, 100, 106, 111, 120, 124, 125, 126, 133, 134, 136, 140, 142, 147, 149, 172, 182, 185, 192, 204, 208, 214, 220, 221, 224, 226, 284, 287, 294, 307, 340, 350, 407, 410, 423, 427, 453, 464, 472], "allclos": [6, 33, 155, 179, 185, 186, 188, 189, 191], "alloc": [3, 4, 20, 32, 34, 35, 36, 37, 38, 40, 44, 62, 71, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 161, 162, 192, 193, 204, 205, 206, 210, 213, 225, 228, 230, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 400, 423, 425, 438, 440, 444, 450, 451, 455, 456], "allow": [40, 85, 89, 145, 146, 199, 206, 284, 313, 429, 464], "alltru": 6, "almost": [175, 440], "along": [3, 4, 14, 16, 17, 19, 28, 29, 30, 44, 57, 58, 68, 71, 72, 73, 76, 77, 79, 80, 81, 85, 86, 88, 99, 102, 106, 107, 108, 112, 113, 116, 120, 124, 125, 126, 129, 130, 135, 140, 142, 147, 152, 184, 186, 190, 191, 192, 204, 205, 208, 209, 210, 211, 212, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 281, 282, 283, 290, 291, 301, 303, 308, 309, 320, 322, 324, 325, 327, 337, 340, 342, 343, 344, 400, 402, 407, 408, 410, 419, 424, 425, 427, 429, 430, 433, 434, 435, 437, 440, 441, 444, 445, 451, 453, 464], "alpha": [349, 354, 355, 371, 374], "alreadi": [4, 10, 35, 41, 42, 43, 335], "also": [3, 10, 13, 15, 18, 20, 26, 46, 48, 49, 63, 83, 87, 89, 93, 97, 116, 128, 129, 130, 131, 135, 137, 142, 143, 144, 145, 148, 155, 169, 170, 171, 172, 198, 199, 206, 209, 215, 216, 218, 219, 330, 331, 339, 386, 401, 405, 426, 429, 446, 464], "alter": 80, "altern": [3, 4, 14, 19, 72, 73, 84, 85, 207, 208, 210, 214, 222, 223, 225, 227, 228, 229, 230, 326, 340, 425, 427, 451], "although": [18, 87, 111, 434], "alwai": [4, 10, 30, 34, 40, 80, 85, 101, 176, 178, 228, 230, 284, 330, 403, 420, 425, 451], "amax": [6, 208], "ambigu": 464, "amin": [6, 214], "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 107, 108, 112, 113, 116, 118, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 164, 169, 170, 171, 174, 177, 180, 182, 183, 184, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 238, 283, 284, 285, 286, 289, 299, 301, 307, 309, 312, 313, 316, 318, 319, 323, 324, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 350, 355, 356, 358, 367, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 456, 464, 472], "anaconda": [3, 4], "analog": [107, 112], "analysi": 10, "analyt": 3, "angl": [6, 10, 25, 26, 74, 75, 346, 347, 449, 472], "ani": [3, 6, 14, 15, 30, 32, 34, 35, 36, 37, 38, 40, 50, 51, 62, 76, 79, 81, 85, 87, 89, 90, 120, 138, 139, 140, 142, 146, 147, 157, 164, 165, 181, 191, 192, 204, 206, 224, 226, 284, 348, 392, 419, 450, 464], "anoth": [4, 64, 85, 99, 132, 289, 309, 337, 343, 408], "answer": 350, "anti": [80, 120], "anyth": 87, "ap": 180, "api": [0, 2, 3, 6, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 87, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "appear": [97, 125, 126], "append": [0, 6, 81, 90, 97, 108, 169], "appli": [28, 29, 30, 44, 52, 89, 404, 433], "applic": [10, 87], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [87, 108], "appropri": [4, 28, 29, 102, 107, 108, 112, 113, 116, 141, 191, 220, 221, 224, 226, 348, 376, 379, 429, 464], "approxim": 121, "ar": [3, 4, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 140, 142, 143, 144, 145, 146, 148, 153, 154, 155, 158, 159, 160, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 306, 307, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 373, 374, 376, 379, 380, 382, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 435, 437, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 464], "arang": [0, 6, 13, 28, 29, 41, 42, 43, 44, 45, 56, 63, 75, 76, 77, 78, 80, 83, 84, 85, 89, 93, 95, 96, 98, 99, 102, 123, 124, 131, 139, 140, 142, 145, 152, 153, 168, 184, 192, 195, 196, 200, 201, 202, 203, 204, 206, 207, 208, 212, 214, 216, 219, 292, 331, 334, 337, 339, 343, 347, 372, 401, 404, 407, 426, 433, 435, 440, 441, 444, 445, 446, 454, 456], "arbitrari": [39, 84, 87, 89, 153, 207, 404, 440, 444], "arbitrarili": 89, "arc": [18, 25], "arcco": [6, 22, 23, 25, 26, 66], "arccosh": [6, 21, 24, 27, 67], "arcsin": [6, 21, 24, 25, 26, 417], "arcsinh": [6, 22, 23, 27, 418], "arctan": [6, 18, 21, 23, 26, 27, 431], "arctan2": [6, 18, 25], "arctanh": [6, 22, 24, 25, 26, 432], "arg": [50, 348], "arg1": [166, 167], "arg2": [166, 167], "argmax": [0, 6, 29, 85, 220, 344, 430, 464], "argmin": [6, 28, 85, 221, 430, 464], "argpartit": [6, 30, 344, 430, 464], "argsort": [6, 85, 344, 412, 419, 430, 436, 464], "argument": [0, 10, 11, 12, 13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 52, 53, 54, 56, 58, 63, 66, 67, 74, 75, 83, 84, 85, 87, 88, 90, 94, 95, 96, 98, 127, 128, 129, 130, 131, 148, 151, 154, 165, 166, 167, 169, 183, 184, 195, 196, 197, 198, 199, 206, 207, 209, 215, 216, 217, 219, 313, 326, 328, 329, 338, 339, 341, 343, 346, 347, 399, 401, 404, 405, 406, 411, 415, 416, 417, 418, 424, 426, 431, 432, 433, 437, 446, 447, 464], "argwher": [6, 330], "ari": [41, 42, 43], "arithmet": [44, 140, 210, 211, 225, 228, 230, 338, 425, 427, 451, 457, 468], "around": [6, 85, 140, 343, 409], "arr": [78, 87, 146, 345, 372, 441, 445], "arr2": 87, "arr_t": [40, 85, 284], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 238, 281, 282, 283, 284, 285, 286, 289, 292, 293, 294, 295, 297, 298, 299, 300, 302, 304, 305, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 468], "array2str": 6, "array_equ": 6, "array_equiv": [6, 33], "array_lik": [32, 34, 35, 36, 37, 38, 39, 44, 62, 64, 76, 79, 99, 138, 139, 140, 157, 164, 192, 204, 337, 343, 344, 348, 414, 429, 433, 450], "array_of_diagon": 80, "array_repr": 6, "array_split": [6, 58], "array_str": 6, "arrays_and_dtyp": 404, "art": 10, "asanyarrai": [6, 35, 38], "asarrai": [4, 6, 34, 36, 38, 39], "asarray_chkfinit": [6, 34, 35], "ascend": [176, 178, 412], "ascii": 87, "ascontiguousarrai": [6, 34, 35, 38], "asfarrai": [6, 34, 35], "asfortranarrai": [6, 34, 35, 36], "asmatrix": 6, "asnumpi": 85, "aspect": 87, "assembl": [58, 86, 147, 410, 424, 453], "assign": [85, 294, 440, 444], "associ": [44, 145, 146, 464], "assum": [10, 44, 90, 107, 113, 182, 185, 189, 206], "astyp": [6, 85, 140, 330], "atleast_1d": [6, 42, 43, 97], "atleast_2d": [6, 41, 43, 97], "atleast_3d": [6, 41, 42, 97], "atol": [15, 155], "attain": 0, "attempt": [84, 183], "attribut": [85, 87, 92, 121, 139, 150, 186, 334, 456, 457], "automat": [145, 146], "avail": [2, 3, 4, 10, 65, 68, 69, 87, 88, 94, 211, 217, 220, 221, 224, 226, 227, 437, 449, 457, 464], "averag": [6, 85, 210, 225, 302, 427, 468], "avg": 44, "avoid": [42, 43, 107, 113], "aweight": 69, "ax": [14, 19, 28, 29, 44, 71, 81, 84, 85, 89, 97, 103, 105, 106, 109, 110, 111, 114, 115, 117, 119, 124, 142, 153, 184, 188, 190, 191, 205, 207, 208, 210, 214, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 316, 323, 326, 335, 340, 400, 407, 408, 423, 425, 427, 428, 433, 434, 435, 436, 451], "axi": [14, 16, 17, 19, 28, 29, 30, 44, 57, 58, 68, 70, 71, 72, 73, 80, 81, 85, 86, 88, 89, 97, 99, 102, 106, 107, 108, 112, 113, 116, 124, 125, 126, 129, 130, 135, 140, 142, 147, 152, 180, 184, 192, 204, 205, 207, 208, 209, 210, 211, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 283, 290, 291, 297, 301, 302, 303, 307, 308, 309, 312, 318, 319, 320, 322, 324, 326, 327, 336, 337, 340, 342, 343, 344, 397, 400, 402, 403, 407, 408, 410, 419, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 437, 451, 453, 464], "axis1": [80, 85, 292, 323, 325, 428, 435], "axis2": [80, 85, 292, 323, 325, 428, 435], "axisa": 70, "axisb": 70, "axisc": 70, "axiserror": [30, 419], "b": [10, 13, 15, 28, 29, 46, 49, 57, 58, 64, 70, 73, 84, 85, 86, 87, 88, 89, 90, 93, 133, 134, 143, 144, 147, 153, 155, 168, 170, 171, 174, 180, 183, 184, 185, 187, 188, 189, 190, 191, 200, 202, 207, 208, 214, 329, 331, 335, 339, 349, 404, 410, 424, 433, 434, 437, 442, 452, 453], "back": [85, 135, 297, 397, 403, 408, 442], "backend": [2, 141, 351, 353, 354, 364, 369, 385], "backward": [10, 40, 85, 102, 107, 108, 112, 113, 116, 142, 284, 407, 408], "bad": 360, "bartlett": 6, "base": [0, 4, 87, 89, 96, 99, 140, 145, 146, 189, 194, 195, 196, 197, 198, 199, 204, 205, 207, 337, 339, 343, 345], "base_repr": 6, "basic": [52, 89, 464, 468], "batch": [103, 105, 109, 110, 114, 115, 117, 119], "bc": [174, 187], "bcde": 90, "becaus": [10, 14, 19, 107, 113, 464], "becom": [10, 85, 145, 326], "been": [86, 344, 408, 430], "befor": [4, 30, 58, 71, 85, 108, 125, 126, 191, 205, 208, 214, 228, 230, 307, 318, 340, 400, 407, 408, 419, 425, 427, 434, 451, 452], "begin": [90, 140, 192, 204], "behav": [193, 343], "behavior": [85, 289, 434], "behind": [85, 307], "being": [3, 87, 129, 130, 209, 215], "belong": [82, 145], "below": [0, 4, 9, 76, 79, 87, 113, 182, 438, 439, 443, 464], "best": 90, "beta": [6, 359], "between": [15, 20, 52, 81, 88, 121, 134, 137, 142, 153, 155, 192, 204, 365, 379, 426, 449], "beyond": [4, 407], "bia": 69, "big": 87, "bin": [82, 102, 104, 118, 145, 146, 386], "bin_edg": [145, 146], "binari": [46, 48, 49, 133, 134, 136, 137, 457, 468], "binary_repr": 6, "bincount": [6, 82, 145], "binomi": [6, 367], "bins_0": 146, "bins_1": 146, "bit": [46, 47, 48, 49, 87, 121, 150, 154, 169, 200, 202, 203, 227, 229, 405, 416, 468], "bitwis": [46, 48, 49], "bitwise_and": [6, 47, 48, 49, 154, 200], "bitwise_not": 6, "bitwise_or": [6, 46, 47, 49, 154, 202], "bitwise_xor": [6, 46, 47, 48, 154, 203], "biufcmmosuv": 87, "blackman": 6, "block": [6, 58, 86, 120, 147, 168, 410, 424, 453], "bmat": 6, "bool": [9, 14, 15, 19, 28, 29, 32, 37, 40, 44, 52, 64, 71, 82, 85, 87, 90, 93, 120, 140, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 182, 184, 185, 189, 192, 204, 205, 208, 210, 212, 214, 220, 221, 224, 225, 226, 227, 228, 229, 230, 284, 330, 331, 340, 400, 403, 416, 425, 427, 429, 450, 451, 464], "bool_": 9, "boolean": [46, 47, 48, 49, 64, 71, 87, 99, 152, 154, 155, 158, 159, 160, 161, 162, 163, 200, 202, 205, 206, 210, 225, 227, 228, 230, 330, 337, 400, 403, 425, 429, 451], "both": [10, 13, 15, 26, 44, 46, 48, 49, 56, 63, 70, 83, 84, 93, 116, 128, 129, 130, 131, 143, 144, 148, 153, 155, 168, 169, 170, 171, 184, 198, 199, 200, 202, 203, 207, 209, 215, 216, 219, 229, 329, 331, 339, 401, 405, 426, 433, 435, 440, 442, 444, 446, 452, 454], "bound": [343, 412, 429], "boundari": [142, 343], "briefli": 464, "broadcast": [13, 14, 19, 28, 29, 44, 50, 51, 56, 64, 83, 89, 99, 129, 130, 148, 161, 162, 184, 185, 203, 205, 207, 208, 209, 210, 214, 215, 219, 220, 221, 225, 227, 228, 229, 230, 339, 340, 343, 344, 400, 402, 425, 426, 427, 430, 434, 446, 451, 454], "broadcast_arrai": [6, 51], "broadcast_shap": 6, "broadcast_to": [6, 50, 434], "brought": 10, "buffer": [37, 72, 73, 85, 133, 134, 136, 137, 193, 208, 214, 222, 223, 403], "buffer_lik": 133, "build": 468, "build_loc": 4, "built": 87, "busday_count": 6, "busday_offset": 6, "byte": [6, 40, 85, 87, 89, 133, 134, 193, 284, 300, 304], "byte_bound": 6, "byteord": 87, "byteswap": 6, "bz2": 193, "c": [2, 4, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 70, 74, 75, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 127, 128, 129, 130, 131, 138, 139, 141, 143, 144, 148, 151, 153, 154, 158, 159, 160, 168, 169, 170, 171, 174, 180, 183, 184, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 215, 216, 219, 284, 289, 297, 310, 328, 329, 330, 331, 333, 334, 338, 339, 341, 346, 347, 397, 399, 401, 403, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 433, 434, 446, 447, 454, 455, 456], "c_contigu": [36, 38, 85, 289], "ca": 61, "calcul": [10, 11, 12, 13, 18, 26, 44, 71, 73, 81, 83, 88, 89, 93, 95, 96, 98, 102, 111, 127, 128, 131, 142, 146, 148, 175, 176, 177, 178, 180, 185, 196, 198, 199, 205, 207, 210, 216, 219, 225, 228, 230, 331, 339, 340, 400, 401, 425, 426, 446, 451, 452, 457], "call": [10, 18, 28, 29, 30, 36, 38, 87, 108, 113, 116, 135, 175, 177, 183, 206, 238, 330, 423, 429, 434, 472], "callabl": [135, 206], "cambridg": 10, "can": [0, 3, 4, 10, 13, 15, 20, 26, 30, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 52, 62, 63, 70, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 100, 102, 104, 108, 113, 118, 120, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 152, 153, 154, 155, 157, 164, 165, 168, 169, 170, 171, 172, 179, 180, 181, 191, 192, 193, 198, 199, 200, 202, 203, 204, 206, 207, 209, 213, 215, 216, 219, 227, 229, 284, 318, 328, 329, 330, 331, 332, 333, 334, 338, 339, 344, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 401, 403, 405, 419, 426, 429, 430, 433, 435, 438, 440, 444, 445, 446, 450, 452, 454, 455, 456, 464], "can_cast": [6, 468], "cannot": [58, 85, 220, 221, 316, 423, 424], "capabl": [20, 32, 34, 35, 36, 38, 44, 101, 140, 192, 204, 207], "care": [20, 175], "cartesian": 212, "case": [4, 14, 19, 20, 28, 29, 32, 34, 35, 36, 38, 44, 62, 72, 73, 76, 79, 81, 90, 91, 92, 100, 104, 107, 112, 116, 118, 133, 134, 135, 136, 138, 139, 140, 142, 149, 175, 186, 189, 192, 193, 199, 204, 213, 222, 223, 227, 229, 332, 333, 334, 340, 403, 427, 433, 438, 450, 455, 456, 464], "cast": [14, 19, 40, 52, 58, 64, 71, 72, 73, 85, 89, 147, 175, 205, 207, 210, 222, 223, 225, 227, 228, 229, 230, 284, 340, 400, 410, 424, 425, 427, 451, 453], "cat": [350, 367], "cauchi": 386, "cbrt": [6, 421], "cdef": 90, "cdot": 433, "cdoubl": 9, "ceil": [6, 31, 127, 128, 406, 409, 447], "center": [104, 106, 111, 118], "central": [142, 368, 369], "certain": [87, 206], "cfloat": 9, "ch": 10, "chain": [84, 85, 89, 90], "chang": [40, 62, 70, 85, 87, 89, 99, 222, 223, 284, 297, 321, 326, 328, 337, 338, 343, 344, 345, 397, 403, 408, 449, 468], "char": 87, "charact": [87, 134], "check": [14, 19, 34, 35, 52, 107, 157, 164, 172, 185, 188], "check_valid": 366, "chi": [352, 368], "chisquar": 6, "choic": [6, 55, 85, 176, 178, 285], "choicelist": 413, "choleski": 6, "choos": [6, 18, 25, 85, 90, 454, 464], "chosen": [145, 454], "circ": 472, "circl": 187, "clamp": [343, 429], "clariti": 120, "class": [3, 85, 87, 88, 122, 133, 134, 135, 137, 152, 193, 348, 376, 438, 468], "classic": 89, "clear": [87, 464], "clip": [6, 85, 343, 429, 464], "close": [21, 22, 23, 25, 39, 40, 85, 89, 97, 192, 284, 348, 376, 406, 409], "closer": 447, "cloud": 3, "cmake": 4, "co": [6, 21, 67, 177, 417, 431], "code": [37, 87, 166], "coeffici": [180, 188, 191], "coerc": [37, 133, 134, 135, 136, 137, 193], "coin": 350, "col": 152, "collaps": [85, 297], "column": [6, 34, 35, 36, 38, 39, 40, 57, 58, 72, 73, 80, 85, 86, 100, 120, 125, 126, 142, 147, 149, 175, 176, 180, 183, 186, 189, 284, 397, 410, 424, 438, 440, 444, 450, 453], "column_stack": [6, 58, 86, 147, 410, 424, 453], "com": 4, "combin": [0, 87, 97, 142], "combinatori": 90, "comma": [87, 89], "command": 4, "common": [108, 330, 433], "common_typ": 6, "compani": [350, 367], "compar": [15, 93, 129, 130, 146, 155, 209, 215], "compare_chararrai": 6, "comparison": [2, 93, 143, 144, 170, 171, 331, 457, 468], "compat": [3, 10, 14, 19, 40, 44, 85, 205, 210, 224, 225, 226, 228, 230, 284, 400, 403, 425, 451, 468], "compil": [4, 87, 141], "complement": 449, "complementari": 128, "complet": [3, 4, 90, 134, 135, 186, 408, 464], "complex": [9, 10, 11, 12, 18, 25, 26, 52, 71, 84, 85, 87, 90, 94, 101, 102, 108, 112, 113, 116, 121, 129, 130, 151, 156, 157, 163, 164, 175, 176, 177, 178, 186, 187, 189, 205, 207, 209, 215, 228, 230, 287, 288, 341, 398, 400, 420, 425, 451, 452, 464, 468], "complex128": [9, 10, 44, 103, 105, 109, 110, 114, 115, 117, 119, 404], "complex64": [9, 10, 44], "compliant": 85, "complic": 89, "compon": [10, 106, 111, 118, 121, 151, 398], "compos": 63, "composit": [168, 427, 437], "compress": [6, 99, 429, 464], "comput": [4, 10, 18, 21, 22, 23, 24, 25, 26, 27, 31, 44, 46, 47, 48, 49, 53, 59, 60, 66, 67, 71, 72, 73, 81, 82, 89, 95, 96, 97, 98, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 127, 142, 143, 144, 145, 146, 151, 152, 154, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 205, 207, 210, 211, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 328, 338, 341, 398, 399, 400, 401, 406, 409, 411, 415, 416, 417, 418, 421, 425, 427, 431, 432, 433, 440, 444, 451], "compute_uv": [173, 189], "concaten": [6, 57, 86, 147, 410, 424, 430, 453], "concept": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456, 464], "cond": [6, 179], "condit": [40, 84, 85, 99, 173, 179, 183, 284, 330, 337, 343, 345, 413, 454], "condlist": 413, "confus": 131, "conj": [6, 60, 85, 107, 151, 172, 175, 341], "conjug": [6, 10, 59, 84, 85, 113, 116, 151, 172, 175, 176, 177, 178, 207, 287, 341, 452], "consecut": [81, 88, 142], "conserv": 212, "consid": [15, 20, 32, 34, 35, 36, 38, 90, 118, 140, 155, 158, 176, 178, 182, 192, 204, 207, 348, 376], "consist": [33, 134, 146, 191, 192, 430, 433], "constant": [9, 87, 142], "constraint": 44, "construct": [34, 35, 55, 76, 79, 80, 85, 87, 100, 133, 134, 135, 136, 137, 149, 193, 213, 285, 332, 434, 435, 454, 457], "constructor": 464, "consum": [85, 304], "contain": [10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 59, 60, 63, 64, 66, 67, 70, 71, 80, 83, 85, 87, 93, 95, 96, 98, 104, 113, 116, 118, 123, 127, 128, 129, 130, 131, 132, 137, 141, 142, 143, 144, 145, 146, 148, 151, 152, 154, 169, 170, 171, 176, 186, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 215, 216, 219, 220, 221, 224, 225, 226, 228, 230, 313, 328, 330, 331, 338, 339, 341, 348, 398, 399, 400, 401, 405, 406, 409, 411, 415, 416, 417, 418, 421, 422, 425, 426, 431, 432, 436, 440, 441, 444, 445, 446, 447, 451, 464], "content": [36, 85, 385], "context": 10, "contigu": [34, 35, 36, 38, 84, 85, 89, 183, 310, 397, 403], "continu": [348, 380], "contourf": 212, "contract": [89, 90, 433], "contrast": 343, "contribut": [10, 44, 145, 146], "control": [4, 40, 52, 58, 64, 85, 89, 147, 207, 284, 410, 424, 453], "conveni": [85, 326, 348], "convent": [84, 89, 90, 102, 107, 108, 112, 113, 116, 153, 191, 207, 335, 433], "convers": [40, 85, 89, 284, 457], "convert": [28, 29, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 62, 74, 75, 76, 79, 87, 90, 97, 138, 139, 140, 157, 164, 192, 204, 346, 347, 449, 450], "convolut": [10, 61, 65], "convolv": [6, 65], "coolei": 10, "coordin": [68, 135, 142, 152, 212], "copi": [6, 20, 30, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 64, 76, 77, 79, 80, 85, 87, 91, 92, 99, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 212, 213, 238, 284, 297, 299, 307, 313, 316, 332, 333, 334, 336, 337, 338, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 403, 412, 419, 423, 438, 439, 440, 443, 444, 450, 455, 456, 464], "copysign": [6, 328, 338], "copyto": [6, 85, 99, 289, 337], "core": [3, 87, 89, 464], "corrcoef": [6, 69], "correct": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 46, 47, 48, 49, 53, 54, 58, 59, 60, 63, 66, 67, 74, 75, 83, 93, 95, 96, 98, 101, 107, 113, 127, 128, 129, 130, 131, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 215, 216, 219, 328, 329, 331, 338, 339, 341, 346, 347, 399, 401, 405, 406, 409, 411, 415, 416, 417, 418, 421, 422, 424, 426, 431, 432, 446, 447], "correctli": [18, 25, 28, 29, 184, 208, 214, 220, 221, 227, 229, 330, 340, 427], "correl": [6, 468], "correspond": [6, 10, 20, 28, 29, 32, 34, 35, 36, 37, 38, 40, 56, 58, 62, 74, 75, 76, 77, 79, 80, 85, 91, 92, 100, 104, 107, 113, 116, 118, 133, 134, 135, 136, 137, 138, 139, 140, 142, 149, 152, 175, 176, 192, 193, 204, 206, 207, 213, 284, 293, 332, 333, 334, 346, 347, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 407, 414, 425, 433, 436, 438, 440, 444, 450, 451, 455, 456, 464], "correspondingli": 10, "cosh": [6, 22, 66, 418, 432], "cosin": [21, 22, 23, 24, 25, 26, 27, 66, 67, 417, 418, 431, 432], "cost": [89, 90], "costli": 90, "could": [85, 107, 113, 318], "count": [14, 19, 45, 68, 82, 87, 90, 124, 133, 134, 136, 137, 142, 145, 146, 330, 340, 350, 427, 457, 468], "count_nonzero": [6, 330], "counterpart": [10, 107, 113, 464], "cov": [6, 366], "covari": 69, "cover": [440, 444, 468], "cpu": [4, 20, 32, 34, 35, 36, 38, 62, 65, 69, 76, 79, 88, 91, 92, 94, 100, 103, 104, 105, 109, 110, 114, 115, 117, 118, 119, 133, 134, 135, 136, 138, 139, 140, 149, 192, 193, 204, 211, 213, 217, 227, 332, 333, 334, 437, 438, 450, 455, 456], "creat": [3, 4, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 78, 79, 80, 85, 87, 90, 91, 92, 100, 104, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 289, 332, 333, 334, 344, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 435, 438, 440, 441, 444, 445, 450, 455, 456, 464, 468], "creation": [87, 90, 457, 464, 468], "crop": [102, 107, 108, 112, 113, 116], "cross": [6, 65], "csingl": 9, "ct": 10, "cube": [53, 421], "cubic": 90, "cumprod": [6, 85, 222, 464], "cumproduct": 6, "cumsum": [6, 81, 85, 223, 427, 464], "cumul": [71, 72, 73, 81, 85, 222, 223, 290, 291, 427], "cupi": [2, 457], "current": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 63, 66, 67, 74, 75, 83, 87, 88, 90, 95, 96, 98, 127, 128, 129, 130, 131, 134, 146, 148, 149, 154, 169, 195, 196, 197, 198, 199, 209, 215, 216, 217, 219, 328, 329, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 426, 431, 432, 437, 446, 447], "custom": 464, "customarili": 10, "cut": 180, "cutoff": 185, "cycl": [104, 118], "cyclic": 343, "cython": 4, "d": [0, 14, 19, 20, 44, 57, 58, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 100, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 119, 120, 123, 125, 126, 137, 147, 149, 153, 174, 176, 177, 183, 184, 187, 207, 212, 222, 223, 229, 297, 330, 339, 340, 343, 353, 397, 403, 410, 412, 414, 424, 427, 429, 433, 434, 435, 442, 450, 453, 464], "d0": [348, 375, 377], "d1": [348, 377], "d3": 77, "data": [1, 3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 107, 109, 110, 113, 114, 115, 117, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 169, 170, 171, 180, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 230, 284, 313, 326, 328, 329, 331, 333, 334, 337, 338, 339, 341, 343, 344, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 430, 431, 432, 435, 437, 438, 446, 447, 449, 451, 453, 454, 455, 456, 457, 468], "datatyp": [87, 182], "date": 4, "datetim": 87, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [69, 85, 228, 230, 320, 327, 425, 451], "decai": 361, "decim": [31, 85, 121, 314, 406, 409], "decomposit": [172, 179, 182, 185, 189, 468], "decompress": 193, "decreas": 82, "decreasingli": 10, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 158, 159, 160, 161, 162, 169, 170, 171, 172, 173, 176, 178, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 289, 297, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 346, 347, 348, 352, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 387, 389, 392, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 454, 455, 456, 464], "default_rng": 6, "defg": 90, "defici": 182, "defin": [10, 70, 87, 92, 129, 130, 139, 145, 146, 209, 215, 334, 338, 456, 464], "definit": [70, 102, 107, 108, 112, 113, 116, 127, 172], "deg": [18, 347], "deg2rad": [6, 346, 347, 449], "degre": [6, 18, 74, 228, 230, 346, 347, 390, 425, 449, 451, 472], "delet": 6, "delta": [10, 228, 230, 425, 449, 451], "demonstr": [0, 4, 87], "dens": [152, 213], "densiti": 145, "depend": [4, 80, 101, 107, 113, 176, 180, 186, 188, 189, 192, 227, 229, 413, 454], "deprec": 6, "deprecate_with_doc": 6, "depth": [57, 58, 86, 147, 410, 424, 453], "deriv": 142, "descend": 189, "descr": 87, "describ": [71, 87, 205, 400, 468], "descript": [71, 87, 145, 205, 400, 464], "design": 10, "desir": [20, 32, 34, 35, 36, 38, 39, 51, 91, 92, 100, 108, 138, 139, 140, 149, 192, 204, 333, 334, 434, 438, 455, 456], "destin": [58, 147, 218, 343, 344, 410, 424, 430, 453], "det": [6, 187], "detail": [31, 132, 409, 440, 441, 444, 445, 464], "determin": [13, 18, 21, 22, 23, 24, 25, 26, 27, 46, 48, 49, 53, 63, 66, 67, 74, 75, 83, 95, 96, 98, 128, 129, 130, 131, 134, 135, 137, 148, 167, 169, 174, 180, 186, 187, 194, 195, 196, 197, 198, 199, 207, 209, 215, 216, 219, 329, 339, 346, 347, 399, 401, 405, 411, 415, 417, 418, 421, 422, 426, 431, 432, 435, 446, 447], "devel": 4, "develop": [3, 4], "deviat": [85, 210, 225, 228, 230, 320, 348, 363, 370, 425, 451], "devic": [0, 2, 3, 20, 32, 34, 35, 36, 37, 38, 40, 44, 62, 71, 76, 77, 79, 85, 91, 92, 100, 101, 104, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 205, 206, 207, 210, 213, 225, 228, 230, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 400, 423, 425, 438, 440, 444, 450, 451, 455, 456], "df": [352, 368, 390, 391], "dfden": [356, 369], "dfnum": [356, 369], "dft": [10, 102, 107, 108, 112, 113, 116], "di": [77, 78], "diag": [6, 79, 80, 89, 100, 125, 126, 149, 175, 177, 189, 435], "diag_indic": [6, 78, 120], "diag_indices_from": [6, 77, 120], "diagflat": [6, 76, 80, 435], "diagon": [6, 76, 77, 78, 79, 85, 89, 100, 120, 149, 172, 176, 177, 178, 206, 325, 435, 438, 439, 440, 441, 443, 444, 445, 464], "dice": 365, "dictionari": 87, "diff": [6, 73, 88, 142, 145], "differ": [3, 10, 15, 20, 32, 34, 35, 36, 38, 44, 62, 71, 73, 76, 79, 81, 85, 87, 88, 91, 92, 100, 104, 108, 111, 118, 121, 125, 126, 133, 134, 135, 136, 138, 139, 140, 142, 149, 155, 178, 192, 193, 204, 205, 207, 213, 289, 332, 333, 334, 337, 339, 344, 400, 426, 430, 438, 440, 444, 450, 455, 456, 468], "digit": [6, 10, 121, 145], "dim": 15, "dimens": [14, 19, 28, 29, 32, 41, 42, 43, 44, 57, 58, 64, 69, 70, 77, 80, 81, 85, 87, 97, 125, 126, 142, 147, 152, 153, 182, 184, 186, 205, 208, 210, 212, 213, 214, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 297, 305, 316, 330, 332, 340, 344, 348, 378, 380, 381, 383, 400, 403, 414, 423, 424, 425, 427, 428, 429, 430, 434, 435, 440, 441, 444, 445, 451, 464, 468], "dimension": [2, 4, 30, 61, 65, 68, 71, 77, 78, 79, 80, 81, 82, 85, 89, 102, 103, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 133, 134, 136, 142, 152, 180, 186, 190, 191, 205, 208, 212, 213, 214, 220, 221, 224, 226, 228, 230, 319, 332, 335, 340, 400, 419, 425, 427, 429, 434, 451, 452, 457], "direct": [10, 70, 81, 102, 107, 108, 112, 113, 116, 125, 126, 142, 329], "directli": [87, 135, 152, 204, 330, 430], "directori": 141, "dirichlet": 6, "discard": 447, "discret": [3, 10, 61, 65, 73, 81, 88, 102, 103, 104, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 142, 348, 457], "disp": 6, "dispers": 393, "displac": [85, 321], "distanc": 142, "distinct": [129, 130, 209, 215], "distinguish": 87, "distribut": [3, 4, 204, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 468], "divid": [6, 86, 128, 131, 216, 401, 446], "divis": [83, 128, 131, 216, 339, 401, 446, 447], "divisor": [228, 230, 425, 451], "divmod": [6, 464], "dlpack": 132, "dmlc": 132, "dn": [348, 375, 377], "do": [3, 4, 87, 206, 350, 408], "docstr": 464, "document": [0, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 297, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 464], "doe": [20, 52, 99, 101, 116, 129, 130, 186, 222, 223, 337, 429], "domain": [10, 107, 112], "done": [3, 40, 85, 89, 191, 284], "dot": [6, 85, 89, 90, 153, 172, 177, 179, 183, 185, 186, 188, 189, 190, 191, 207, 433, 452], "doubl": [9, 361, 433], "down": 126, "dp": [83, 174, 176, 187, 188, 339, 403, 404, 414, 426, 446], "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 20, 32, 34, 35, 36, 37, 38, 40, 62, 68, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 220, 221, 224, 226, 227, 284, 332, 333, 334, 342, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "dpnp": [0, 2, 3, 4, 10, 457, 464, 468, 469, 472], "dpnp_arrai": [20, 32, 34, 35, 36, 38, 40, 62, 76, 77, 79, 91, 92, 100, 104, 118, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 150, 152, 192, 193, 204, 206, 213, 231, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456, 457], "dpnp_iface_arraycr": [213, 332], "draw": [348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "drawn": [348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 373, 374, 376, 379, 382, 388, 389, 390, 391, 392, 393, 394, 395, 396, 413], "drill": [350, 367], "driver": 2, "drop": [3, 87], "dsplit": [6, 58, 86], "dst": 64, "dstack": [6, 57, 58, 147, 410, 424, 453], "dt": 87, "dt2": 87, "dtype": [0, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 52, 53, 54, 58, 59, 60, 63, 66, 67, 69, 71, 72, 73, 74, 75, 77, 83, 85, 89, 91, 92, 93, 95, 96, 98, 100, 101, 102, 107, 108, 112, 113, 116, 120, 121, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 158, 159, 160, 161, 162, 169, 170, 171, 183, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 290, 291, 302, 308, 320, 322, 325, 327, 328, 329, 331, 333, 334, 338, 339, 340, 341, 346, 347, 348, 370, 376, 392, 399, 400, 401, 404, 405, 406, 409, 410, 411, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432, 435, 438, 439, 443, 446, 447, 451, 453, 455, 456, 464], "due": 116, "dump": 6, "dx": [142, 437], "dy": 142, "dz": 142, "e": [9, 10, 22, 24, 71, 72, 80, 87, 91, 92, 97, 100, 107, 113, 116, 134, 138, 139, 142, 149, 169, 175, 187, 190, 194, 333, 334, 348, 402, 428, 438, 455, 456], "ea": 90, "each": [0, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 63, 66, 67, 72, 73, 77, 80, 82, 83, 85, 87, 90, 93, 95, 96, 98, 107, 113, 125, 126, 127, 128, 131, 135, 142, 143, 144, 145, 146, 151, 154, 158, 159, 160, 169, 170, 171, 175, 176, 177, 178, 180, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 216, 218, 219, 314, 316, 328, 330, 331, 338, 339, 341, 344, 350, 367, 398, 399, 401, 402, 405, 406, 407, 409, 411, 415, 416, 417, 418, 421, 422, 424, 426, 430, 431, 432, 434, 440, 441, 444, 445, 446, 447, 464], "easier": 429, "easiest": 4, "easili": [0, 146], "edg": [56, 82, 145, 146], "edge_ord": 142, "ediff1d": [6, 81, 142], "effect": [90, 129, 130, 209, 215, 339], "effici": [10, 102, 116, 134, 182, 185, 189], "efgh": 90, "eig": [6, 176, 177, 178], "eigenvalu": [175, 176, 177, 178, 468], "eigenvector": [175, 176, 177, 178], "eigh": [6, 175, 177, 178], "eigval": [6, 175, 176, 178], "eigvalsh": [6, 175, 176, 177], "einstein": [84, 89, 90, 153, 191, 207, 335, 433], "einsum": [6, 84, 90, 153, 191, 207, 335, 433], "einsum_path": [6, 89], "either": [38, 44, 68, 71, 80, 87, 103, 105, 107, 109, 110, 113, 114, 115, 117, 119, 120, 142, 153, 176, 178, 184, 186, 205, 220, 221, 224, 226, 227, 229, 400, 412, 430], "element": [4, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 44, 45, 46, 47, 48, 49, 53, 54, 56, 59, 60, 63, 64, 66, 67, 71, 72, 73, 78, 80, 81, 82, 83, 85, 87, 88, 90, 93, 95, 96, 98, 99, 100, 101, 116, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 142, 143, 144, 145, 146, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 177, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 219, 222, 223, 224, 226, 227, 228, 229, 230, 279, 280, 287, 288, 290, 291, 293, 294, 297, 299, 300, 302, 304, 306, 307, 312, 313, 314, 315, 317, 320, 321, 324, 327, 328, 329, 330, 331, 337, 338, 339, 340, 341, 343, 345, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 429, 431, 432, 433, 434, 435, 439, 441, 443, 445, 446, 447, 448, 451, 454, 464, 468, 472], "ellipsi": 89, "els": [0, 187, 236], "elsewher": [100, 149, 438, 454], "empti": [4, 6, 32, 85, 92, 134, 138, 139, 180, 294, 333, 334, 337, 455, 456], "empty_lik": [6, 32, 91, 139, 334, 456], "enabl": [120, 182, 185, 189], "encount": [222, 223, 224, 226], "end": [20, 80, 87, 90, 108, 140, 192, 204], "end_tim": 0, "endian": 87, "endpoint": [20, 140, 192, 204], "engin": 384, "enough": 145, "entir": [44, 71, 107, 145, 146, 205, 210, 224, 225, 226, 228, 230, 400, 425, 451], "entri": [85, 87, 91, 99, 107, 113, 120, 124, 125, 126, 319, 423], "env": 4, "environ": 4, "ep": [121, 182, 329], "epsilon": 182, "epsneg": 121, "equal": [6, 14, 15, 19, 33, 44, 58, 65, 69, 73, 85, 100, 140, 142, 143, 144, 145, 146, 147, 155, 157, 164, 166, 169, 170, 171, 181, 185, 186, 191, 192, 204, 216, 307, 331, 348, 358, 392, 401, 405, 406, 409, 410, 415, 423, 424, 438, 440, 444, 453], "equal_nan": [15, 33, 155], "equat": [180, 188, 190, 191, 468], "equiv": [40, 52, 58, 64, 85, 89, 147, 181, 207, 284, 410, 424, 453], "equival": [10, 13, 14, 16, 17, 19, 28, 29, 30, 31, 44, 62, 70, 71, 74, 75, 83, 84, 85, 86, 90, 97, 99, 123, 129, 130, 131, 190, 205, 216, 219, 238, 279, 280, 292, 313, 326, 330, 335, 338, 346, 347, 348, 376, 400, 401, 403, 409, 414, 419, 426, 427, 429, 433, 436, 446, 464], "error": [71, 94, 107, 112, 175, 205, 400, 423, 457, 464], "essenti": 4, "estim": [69, 146, 350, 367], "et": 10, "etc": [10, 87, 367], "eturn": 99, "euclidean": 180, "euler_gamma": 9, "evalu": [14, 15, 19, 85, 89, 90, 93, 157, 164, 191, 212, 279, 280, 335, 433, 464], "even": [10, 87, 104, 106, 107, 108, 111, 112, 113, 116, 118, 157, 164, 406, 409], "evenli": [20, 140, 192, 204, 406], "event": 199, "everi": [344, 430], "everywher": 113, "exact": [99, 183, 337], "exactli": [10, 39, 137, 348, 376], "examin": 180, "exampl": [2, 3, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 289, 292, 294, 297, 298, 299, 307, 311, 313, 318, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "exce": 199, "except": [4, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 66, 67, 68, 74, 75, 81, 82, 83, 84, 85, 91, 92, 93, 95, 96, 98, 100, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 147, 148, 149, 154, 158, 159, 160, 169, 170, 171, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 214, 215, 216, 219, 224, 225, 226, 227, 228, 229, 230, 284, 316, 328, 329, 331, 333, 334, 338, 339, 340, 341, 346, 347, 399, 401, 402, 403, 405, 406, 411, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 431, 432, 446, 447, 451, 455, 456], "exclud": [11, 12, 192, 348, 392], "exclus": [348, 376], "execut": [3, 4, 34, 35, 65, 69, 88, 94, 103, 105, 109, 110, 114, 115, 117, 119, 135, 211, 217, 227, 351, 353, 354, 364, 369, 385, 437], "executor": 0, "exist": [10, 57, 58, 86, 87, 97, 147, 403, 410, 424, 453, 468], "exp": [6, 10, 96, 98, 102, 187, 196, 198, 205], "exp2": [6, 95, 98], "expand": [81, 97], "expand_dim": [6, 28, 29], "expect": [4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 46, 47, 48, 49, 53, 54, 59, 60, 63, 66, 67, 71, 72, 73, 74, 75, 83, 84, 87, 93, 95, 96, 98, 101, 113, 127, 128, 129, 130, 131, 143, 144, 148, 151, 154, 155, 158, 159, 160, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 214, 215, 216, 219, 222, 223, 225, 227, 228, 229, 230, 328, 329, 331, 338, 339, 340, 341, 346, 347, 398, 399, 400, 401, 405, 406, 409, 411, 415, 416, 417, 418, 421, 422, 425, 426, 427, 431, 432, 446, 447, 451, 454], "explain": 464, "explan": 87, "explicit": 89, "explicitli": 80, "exploit": [10, 116], "explor": [90, 350, 367], "expm1": [6, 95, 96, 196], "expon": [10, 95, 96, 98, 181, 198, 199, 205, 339, 374, 468], "exponenti": [6, 10, 90, 198, 199, 205, 361, 387], "expos": [133, 464], "express": [10, 26, 89, 90, 193], "extend": [10, 87, 168, 464], "extens": [0, 1, 3, 4, 9, 141, 193, 457], "extobj": 207, "extra": [87, 113, 137], "extract": [6, 76, 79, 80, 89, 100, 123, 149, 152, 206, 337, 429, 435], "extrema": 468, "ey": [6, 59, 60, 68, 85, 129, 130, 149, 153, 168, 179, 181, 182, 190, 191, 203, 209, 215, 414, 435], "f": [0, 6, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 83, 85, 87, 89, 91, 92, 93, 95, 96, 98, 100, 101, 104, 116, 118, 127, 128, 129, 130, 131, 138, 139, 142, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 215, 216, 219, 284, 289, 297, 328, 329, 331, 333, 334, 338, 339, 341, 346, 347, 369, 397, 399, 401, 403, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 442, 446, 447, 454, 455, 456], "f0": 87, "f1": 87, "f2": 87, "f4": 52, "f8": [52, 87], "f_contigu": [36, 38], "f_k": 10, "fab": [6, 11, 12], "fact": 177, "factor": [10, 102, 107, 108, 112, 113, 116, 172, 186], "fail": 350, "fallback": [175, 177, 351, 353, 354, 364, 369, 385], "fals": [14, 15, 16, 17, 18, 19, 28, 29, 32, 33, 36, 38, 40, 44, 46, 47, 49, 50, 51, 52, 62, 68, 69, 71, 73, 82, 85, 87, 89, 90, 92, 93, 99, 120, 135, 139, 140, 143, 144, 145, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 182, 184, 185, 189, 192, 200, 201, 202, 203, 204, 205, 208, 210, 211, 212, 214, 220, 221, 224, 225, 226, 227, 228, 229, 230, 236, 279, 280, 281, 282, 284, 301, 302, 303, 308, 320, 322, 327, 330, 331, 334, 340, 342, 400, 403, 416, 425, 427, 450, 451, 454, 456, 464], "famili": 10, "fanci": 429, "fashion": [199, 464], "fast": [10, 102, 116], "fastcopyandtranspos": 6, "faster": [10, 129, 130], "fastest": [85, 297, 397, 403], "fb": [90, 442], "featur": 87, "few": 120, "fft": [6, 457, 468], "fft2": [6, 102], "fftfreq": [6, 10, 102, 106, 111, 118], "fftn": [6, 102, 116], "fftshift": [6, 10, 111], "fh": 134, "field": [87, 212], "field1": 87, "file": [133, 134, 136, 137, 141, 193], "filenam": [134, 193], "fill": [6, 32, 85, 91, 92, 120, 138, 139, 145, 146, 212, 289, 333, 334, 438, 455, 456], "fill_diagon": 6, "fill_valu": [138, 139], "filt": 442, "filter": [10, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "final": [4, 10, 116, 140, 204], "find": [45, 82, 85, 101, 145, 182, 185, 189, 315, 329, 330, 402, 412, 419, 448, 468], "find_common_typ": 6, "fine": 4, "finfo": 329, "finfo_object": 121, "finit": [158, 159, 160, 161, 162], "first": [13, 14, 15, 19, 26, 28, 29, 30, 44, 46, 48, 49, 57, 58, 63, 70, 71, 80, 83, 84, 85, 87, 90, 93, 96, 107, 124, 128, 129, 130, 131, 142, 143, 144, 145, 146, 148, 153, 155, 166, 167, 168, 169, 170, 171, 183, 190, 193, 198, 199, 200, 202, 203, 206, 207, 208, 209, 212, 214, 215, 216, 219, 220, 221, 297, 331, 335, 337, 339, 340, 397, 401, 403, 405, 407, 410, 412, 419, 420, 422, 426, 427, 428, 430, 433, 435, 446, 452, 453], "fit": [180, 402], "fix": [6, 80, 87, 343], "flag": [36, 38, 85, 87, 289], "flanneri": 10, "flat": [28, 29, 85, 122, 297, 402], "flatnonzero": [6, 330], "flatten": [6, 28, 29, 30, 58, 72, 73, 76, 79, 80, 85, 120, 123, 145, 146, 208, 214, 220, 221, 222, 223, 227, 229, 296, 310, 318, 330, 335, 344, 397, 402, 407, 419, 429, 430, 435, 452], "flexibl": [84, 87, 134, 183], "flip": [6, 47, 80, 120, 125, 126, 154, 350], "fliplr": [6, 80, 120, 124, 126], "flipud": [6, 80, 120, 124, 125], "float": [9, 11, 12, 18, 20, 26, 34, 35, 37, 44, 52, 63, 71, 73, 87, 91, 92, 96, 100, 101, 104, 118, 121, 133, 134, 135, 136, 137, 138, 139, 142, 145, 146, 149, 151, 180, 181, 182, 184, 185, 192, 193, 198, 199, 204, 205, 208, 210, 214, 225, 228, 230, 329, 333, 334, 348, 352, 377, 378, 380, 381, 383, 386, 387, 389, 392, 398, 399, 400, 411, 425, 438, 451, 455, 456, 464, 468], "float16": 9, "float32": [0, 10, 37, 40, 52, 72, 85, 87, 89, 103, 105, 109, 110, 114, 115, 117, 119, 284, 329, 348, 370, 375, 377, 378, 380, 381, 383, 389, 392, 404], "float64": [0, 10, 37, 40, 44, 52, 73, 85, 87, 89, 103, 105, 109, 110, 114, 115, 117, 119, 284, 348, 349, 355, 356, 357, 359, 361, 362, 363, 370, 371, 374, 375, 377, 378, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 438], "float_": 9, "float_pow": 6, "floor": [6, 31, 54, 128, 216, 401, 406, 409, 447], "floor_divid": [6, 216, 401], "flop": 90, "flush": 134, "fmax": [6, 130, 208, 209, 215, 224, 339], "fmin": [6, 129, 209, 214, 215, 226, 339], "fmod": [6, 216, 339, 401], "fn": 135, "fname": 193, "follow": [4, 10, 44, 87, 97, 113, 121, 150, 176, 178, 185, 433, 464, 468], "forc": [87, 89], "forg": 4, "form": [10, 32, 34, 35, 36, 37, 38, 57, 62, 76, 79, 85, 86, 89, 90, 113, 138, 139, 140, 157, 164, 192, 204, 326, 410, 450, 453], "format": [87, 134, 137, 468], "format_float_posit": 6, "format_float_scientif": 6, "former": [344, 430], "forth": 433, "fortran": [38, 40, 85, 284, 297, 397, 403], "forward": [10, 102, 107, 108, 112, 113, 116, 142], "found": [4, 412, 464], "four": [348, 377], "fourier": [10, 102, 103, 104, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 457], "frac": 10, "fraction": [217, 447], "free": [85, 313], "freedom": [228, 230, 390, 425, 451], "freq": [104, 106, 111, 118], "freq_spectrum": 107, "frequenc": [10, 102, 104, 106, 107, 111, 112, 113, 116, 118], "freshli": [161, 162], "frexp": 6, "fro": [173, 184], "frobeniu": 173, "from": [3, 10, 14, 19, 28, 29, 30, 34, 35, 50, 52, 55, 58, 64, 71, 74, 75, 80, 85, 86, 87, 89, 96, 99, 124, 132, 133, 134, 135, 136, 137, 142, 145, 147, 152, 175, 177, 178, 182, 183, 193, 205, 212, 285, 289, 319, 324, 337, 340, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 403, 404, 410, 412, 413, 422, 423, 424, 427, 429, 430, 435, 442, 445, 449, 450, 453, 454, 468], "from_": 52, "from_dlpack": 6, "frombuff": [6, 134, 136, 137, 193], "fromfil": [6, 133, 136, 137], "fromfunct": [6, 34, 35], "fromit": [6, 34, 35, 133, 134, 137], "frompyfunc": 6, "fromregex": [6, 193], "fromstr": [6, 133, 134, 136, 193], "front": 442, "full": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 297, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456], "full_lik": [6, 32, 92, 138, 334, 456], "full_matric": 189, "fulli": 87, "function": [0, 2, 3, 11, 12, 16, 17, 20, 28, 29, 31, 32, 34, 35, 36, 38, 39, 62, 65, 69, 71, 74, 75, 80, 83, 85, 88, 89, 91, 92, 94, 98, 100, 101, 103, 105, 106, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 149, 175, 177, 183, 193, 196, 198, 199, 205, 206, 211, 212, 216, 217, 227, 279, 280, 289, 292, 313, 326, 333, 334, 344, 346, 347, 348, 351, 353, 354, 364, 369, 385, 400, 401, 409, 410, 415, 425, 429, 430, 434, 437, 440, 441, 444, 445, 446, 451, 453, 454, 455, 456, 457, 464, 468], "fundament": [10, 87], "further": [440, 444], "futur": [87, 146], "fweight": 69, "g": [4, 10, 87, 91, 92, 100, 138, 139, 149, 333, 334, 348, 438, 455, 456], "g37d8d33fa6": 6, "gamma": [6, 388], "gauss": 10, "gaussian": [348, 370, 394], "gc": 90, "gcd": 6, "gen": 89, "gender": 87, "gener": [10, 30, 44, 87, 113, 116, 140, 153, 175, 176, 177, 178, 185, 186, 193, 204, 348, 350, 353, 384, 440, 444, 450, 464, 468], "genfromtxt": [6, 193], "geometr": [6, 140, 192], "geomspac": [6, 192, 204], "get": [78, 85, 107, 113, 140, 192, 204, 206, 430, 441, 445, 464], "get_arrai": 85, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 348], "get_sycl_devic": 348, "get_sycl_queu": 348, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 87], "gid": 146, "github": 132, "give": [10, 79, 85, 146, 326, 403, 414], "given": [14, 15, 19, 20, 28, 29, 31, 32, 34, 35, 36, 38, 40, 44, 57, 62, 68, 69, 72, 73, 81, 84, 85, 86, 87, 88, 90, 91, 92, 99, 102, 104, 107, 108, 112, 113, 116, 118, 120, 124, 129, 130, 138, 139, 140, 142, 145, 146, 155, 179, 192, 204, 206, 208, 209, 212, 214, 215, 222, 223, 224, 226, 227, 228, 229, 230, 281, 282, 284, 290, 291, 303, 308, 309, 314, 320, 322, 327, 330, 333, 334, 337, 340, 342, 343, 348, 353, 375, 392, 400, 402, 406, 407, 408, 410, 412, 425, 427, 429, 433, 434, 437, 438, 451, 453, 455, 456, 464], "global": 0, "good": 360, "gpu": [0, 3, 4, 20, 32, 34, 35, 36, 38, 62, 76, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 138, 139, 140, 149, 192, 193, 204, 213, 332, 333, 334, 438, 450, 455, 456], "grade": 87, "gradient": [6, 81, 180], "graphic": 4, "great": 10, "greater": [6, 85, 93, 128, 144, 169, 170, 171, 182, 186, 307, 331, 405, 415, 423], "greater_equ": [6, 93, 143, 170, 171, 331], "greatest": 128, "greedi": [89, 90], "grid": [34, 35, 135, 152, 212, 213, 332], "group": 330, "guarante": [87, 403], "guid": [2, 3], "gumbel": 6, "gz": 193, "h": [141, 172, 186, 212], "ha": [4, 10, 11, 12, 14, 18, 19, 28, 29, 30, 44, 71, 72, 73, 82, 87, 93, 97, 107, 112, 113, 135, 142, 143, 144, 147, 151, 156, 157, 163, 164, 170, 171, 177, 187, 189, 205, 210, 216, 222, 223, 225, 227, 228, 229, 230, 331, 340, 398, 399, 400, 401, 402, 408, 411, 423, 424, 425, 427, 428, 429, 434, 435, 451, 464], "had": [344, 430], "hadamard": 90, "half": [22, 106, 107, 192, 348, 378, 380, 381, 383, 392, 428], "ham": 6, "han": 6, "hand": [70, 191], "handl": [20, 87, 101, 193, 330, 429, 468], "happen": [40, 44, 85, 284, 350], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 87, "have": [3, 4, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 57, 58, 59, 60, 63, 66, 67, 70, 71, 72, 73, 74, 75, 83, 84, 86, 87, 93, 95, 96, 98, 101, 121, 127, 128, 129, 130, 131, 143, 144, 147, 148, 151, 154, 155, 158, 159, 160, 161, 162, 169, 170, 171, 180, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 328, 329, 331, 337, 338, 339, 340, 341, 346, 347, 367, 398, 399, 400, 401, 402, 405, 406, 409, 410, 411, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 431, 432, 434, 446, 447, 451, 453, 464], "hd": 90, "header": 141, "heavisid": 6, "hello": 87, "helper": 468, "henc": [97, 142], "here": [6, 30, 87, 107, 112, 113, 419, 440, 444], "hermit": [176, 178], "hermitian": [107, 112, 113, 116, 172, 175, 176, 177, 178, 182, 185, 189, 468], "hfft": [6, 10, 112], "hierarchi": 166, "high": [113, 348, 376, 379, 392], "higher": [89, 452], "highest": 102, "highli": 134, "hist": [145, 386], "hist_0": 146, "hist_1": 146, "histogram": [6, 82, 146, 412, 468], "histogram2d": 6, "histogram_bin_edg": [6, 145], "histogramdd": [6, 145], "hold": [56, 72, 73, 145, 184, 222, 223, 227, 229, 435], "homogen": 87, "horizont": [57, 58, 80, 86, 120, 124, 147, 410, 424, 453], "host": [3, 4, 20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 438, 440, 444, 450, 455, 456], "household": 186, "how": [0, 4, 87, 113, 116, 142, 343, 429, 440, 444], "howev": [85, 318, 429], "hsplit": [6, 58], "hstack": [6, 57, 58, 86, 410, 424, 453], "http": [4, 132], "hyperbol": [21, 22, 23, 24, 25, 26, 27, 66, 67, 417, 418, 431, 432, 468], "hypergeometr": 6, "hypot": [6, 400], "hypotenus": [148, 400], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 238, 284, 289, 297, 307, 313, 318, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 464, 472], "i0": 6, "i1": [85, 87, 321], "i2": [85, 87, 321], "i3": [85, 321], "i4": [52, 87], "i7": 89, "i8": [52, 87], "icpx": 4, "icx": 4, "id": [14, 19, 85, 299], "ident": [3, 6, 14, 19, 71, 87, 100, 111, 120, 188, 387], "identifi": 87, "ieee": 121, "ifft": [6, 102, 112, 113, 118], "ifft2": [6, 108], "ifftn": [6, 108], "ifftshift": [6, 10, 106], "ignor": [28, 29, 70, 87, 129, 130, 137, 145, 146, 208, 209, 210, 214, 215, 220, 221, 224, 225, 226, 228, 230, 425, 451], "ihfft": [6, 107], "ii": [89, 371], "iinfo": 365, "iinfo_object": 150, "ij": [89, 90, 212], "ijk": 89, "il": 90, "il1": 440, "il2": 440, "illustr": 177, "ilm": 89, "imag": [6, 10, 85, 464], "imaginari": [85, 113, 129, 130, 151, 156, 157, 163, 164, 175, 176, 178, 181, 209, 215, 298, 420], "implement": [3, 6, 37, 132], "impli": 87, "implicit": 89, "import": [0, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 289, 292, 297, 298, 307, 311, 318, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 373, 382, 386, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "improv": 89, "in1d": 6, "in_array1": 94, "includ": [4, 10, 14, 19, 20, 32, 34, 35, 36, 37, 38, 44, 62, 71, 76, 79, 82, 89, 90, 101, 138, 139, 140, 141, 145, 146, 157, 164, 185, 192, 204, 205, 210, 224, 225, 226, 228, 230, 348, 392, 400, 425, 450, 451], "include_initi": 71, "inclus": [348, 376, 379], "increas": [82, 87, 97, 113, 145, 450], "ind": [30, 82, 190, 343, 344, 440, 441, 444, 445], "index": [4, 28, 29, 30, 55, 85, 87, 90, 100, 123, 152, 212, 220, 221, 285, 297, 321, 330, 343, 344, 397, 403, 412, 429, 430, 440, 444, 454, 457, 468], "index_arrai": [28, 29, 30], "indic": [6, 10, 28, 29, 30, 71, 77, 78, 82, 85, 87, 89, 90, 99, 102, 107, 108, 112, 113, 116, 120, 123, 135, 145, 190, 191, 206, 207, 213, 220, 221, 281, 282, 283, 306, 309, 315, 324, 330, 343, 344, 403, 412, 415, 416, 419, 429, 430, 436, 440, 441, 444, 445, 454], "indirect": [30, 419], "individu": 358, "inequ": 331, "inexact": [227, 229], "inf": [9, 15, 22, 26, 34, 35, 63, 83, 155, 158, 159, 160, 161, 162, 173, 184, 194, 195, 197, 209, 215, 220, 221, 224, 226, 229, 341, 421, 446], "infer": [71, 205, 400, 403], "infin": [9, 14, 19, 128, 158, 159, 160, 161, 162, 216, 224, 226, 229, 401, 447, 468], "infinit": 173, "info": 6, "inform": [0, 36, 38, 85, 87, 107, 113, 121, 295, 464, 468], "infti": 9, "initi": [16, 17, 71, 85, 91, 137, 208, 214, 224, 226, 227, 229, 301, 303, 308, 322, 340, 348, 427], "inner": [6, 70, 89, 90, 183, 207, 335], "input": [10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 176, 182, 184, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 297, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 370, 376, 392, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 446, 447, 449, 450, 451, 452, 455, 456], "insert": [6, 28, 29, 80, 82, 85, 89, 97, 140, 145, 192, 204, 220, 221, 224, 226, 315, 344, 412, 468], "instal": 2, "instanc": [3, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 107, 118, 133, 134, 135, 136, 137, 138, 139, 140, 142, 149, 152, 192, 193, 204, 206, 207, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "instead": [40, 80, 84, 85, 97, 127, 140, 145, 146, 152, 183, 192, 199, 204, 208, 214, 284, 330, 340, 427, 464], "instruct": 4, "int": [9, 14, 19, 20, 28, 29, 30, 31, 37, 44, 51, 58, 70, 71, 72, 73, 76, 77, 79, 80, 81, 85, 87, 91, 92, 93, 97, 100, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 149, 150, 152, 180, 181, 184, 190, 191, 192, 204, 205, 206, 208, 210, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 326, 333, 334, 336, 340, 343, 344, 348, 376, 379, 400, 402, 403, 407, 408, 409, 419, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 450, 451, 455, 456, 464], "int16": 87, "int32": [0, 9, 37, 52, 87, 91, 92, 100, 103, 105, 109, 110, 114, 115, 117, 119, 133, 136, 138, 139, 149, 193, 227, 229, 333, 334, 348, 350, 358, 360, 365, 367, 373, 376, 392, 404, 427, 438, 455, 456], "int64": [0, 9, 52, 87, 103, 105, 109, 110, 114, 115, 117, 119, 227, 229, 404], "int8": [87, 340], "int_": 9, "intc": 9, "integ": [20, 31, 44, 45, 46, 47, 48, 49, 51, 71, 72, 73, 82, 85, 87, 124, 127, 128, 145, 150, 154, 169, 181, 184, 190, 205, 208, 210, 214, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 318, 326, 340, 343, 348, 376, 379, 384, 400, 401, 402, 403, 405, 406, 407, 409, 412, 414, 422, 425, 427, 429, 433, 435, 447, 451, 464], "integer_lik": 433, "integr": [3, 4, 44, 71, 145, 205, 210, 217, 225, 228, 230, 339, 400, 425, 427, 437, 451], "intel": [3, 89], "intend": [85, 326], "interchang": [85, 218, 323, 428], "interfac": [0, 133], "interior": 142, "intermedi": [72, 89, 90], "intern": 348, "interp": 6, "interpol": 113, "interpret": [2, 34, 35, 39, 51, 62, 87, 107, 113, 133, 206, 330, 343, 464], "intersect1d": 6, "interv": [10, 20, 21, 22, 23, 25, 82, 97, 140, 192, 204, 348, 376, 378, 380, 381, 383, 391, 392, 428], "intp": [227, 229], "intrins": 464, "introduc": 407, "introduct": 10, "introselect": [85, 307, 336], "inv": [6, 173, 185], "invers": [10, 18, 21, 22, 23, 24, 25, 26, 27, 66, 67, 96, 97, 98, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 179, 185, 190, 191, 196, 394, 417, 418, 431, 432], "invert": [6, 47, 179, 185, 190], "invok": 464, "involv": [85, 190, 316], "io": [132, 193], "irfft": [6, 104, 107, 112, 116, 118], "irfft2": [6, 113], "irfftn": [6, 113], "irrespect": 30, "is_busdai": 6, "isalignedstruct": 87, "isbuiltin": 87, "isclos": [6, 15], "iscomplex": [6, 157, 163], "iscomplexobj": [6, 156, 164], "isfinit": [6, 159, 160, 161, 162, 224, 226, 229], "isfortran": 6, "isin": 6, "isinf": [6, 158, 160, 161, 162], "isn": 87, "isnan": [6, 158, 159, 161, 162, 222, 223, 224, 226, 227, 229], "isnat": [6, 160], "isneginf": [6, 158, 159, 160, 162], "isposinf": [6, 158, 159, 160, 161], "isreal": [6, 156, 164], "isrealobj": [6, 157, 163], "isscalar": 6, "issctyp": 6, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 85, 133, 134, 136, 457], "item_dtyp": 87, "item_hasobject": 87, "item_is_point": 87, "items": [85, 87], "itemset": 6, "iter": [6, 34, 35, 85, 90, 122, 133, 134, 136, 137, 296, 297, 344, 430, 468], "its": [4, 6, 10, 11, 12, 14, 19, 30, 44, 76, 85, 107, 113, 121, 145, 146, 149, 175, 176, 177, 178, 183, 185, 191, 210, 225, 228, 230, 326, 385, 397, 400, 403, 419, 425, 436, 438, 451, 464], "itself": [40, 85, 87, 284, 464], "iu": 206, "iu1": [206, 444], "iu2": 444, "ix_": 6, "j": [59, 60, 85, 89, 107, 108, 112, 113, 116, 135, 151, 152, 168, 172, 175, 176, 197, 207, 326, 335, 341, 344, 420, 422, 430, 433], "j1": 168, "jame": 10, "ji": 89, "jil": 89, "jk": [89, 90], "jl": 90, "john": 10, "join": [57, 58, 86, 147, 410, 424, 453, 468], "jump": [74, 346], "just": [57, 80, 87, 116], "k": [10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 76, 79, 83, 85, 89, 93, 95, 96, 98, 100, 101, 127, 128, 129, 130, 131, 143, 144, 148, 151, 154, 158, 159, 160, 168, 169, 170, 171, 180, 186, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 209, 215, 216, 219, 238, 284, 289, 328, 329, 331, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 433, 438, 439, 440, 441, 443, 444, 445, 446, 447, 454, 472], "kaiser": 6, "kappa": 393, "keep": [39, 40, 85, 284], "keepdim": [14, 16, 17, 19, 28, 29, 44, 68, 85, 184, 205, 208, 210, 211, 214, 220, 221, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 301, 302, 303, 308, 320, 322, 327, 340, 342, 344, 400, 425, 427, 430, 451], "kei": [3, 30, 85, 87, 122, 243, 274, 419], "key2": 87, "keyword": [10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 63, 66, 67, 70, 74, 75, 83, 88, 95, 96, 98, 127, 128, 129, 130, 131, 135, 142, 148, 154, 169, 195, 196, 197, 198, 199, 207, 209, 215, 216, 217, 219, 328, 329, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 426, 431, 432, 437, 446, 447, 454, 464], "ki": 89, "kind": [30, 40, 52, 58, 64, 71, 85, 87, 89, 121, 147, 183, 205, 207, 283, 284, 307, 318, 336, 400, 410, 419, 424, 453, 468], "kl": [10, 89, 90], "known": [10, 134, 386], "kron": 6, "kroneck": 168, "kth": [85, 307, 336], "kwarg": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 59, 60, 63, 66, 67, 74, 75, 83, 85, 93, 95, 96, 98, 101, 127, 128, 129, 130, 131, 135, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 215, 216, 217, 219, 268, 286, 313, 328, 329, 331, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 437, 446, 447, 448, 449], "l": [10, 87, 172, 176, 178], "la": [175, 177, 178], "label": 89, "laid": 38, "lam": 373, "lambda": 135, "lapack": [175, 177], "laplac": 6, "laptop": 4, "larg": [10, 74, 87, 145, 185, 346], "larger": [89, 102, 108, 112, 116, 121, 435, 464], "largest": [10, 90, 116, 121, 127, 150, 180, 216, 401], "largest_singular_valu": 185, "last": [14, 19, 30, 70, 80, 81, 85, 102, 107, 108, 112, 113, 116, 124, 140, 142, 153, 183, 192, 204, 207, 297, 340, 397, 403, 407, 412, 419, 423, 427, 433], "latest": [4, 132], "latter": [129, 130, 209, 215, 344, 430], "layout": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 83, 85, 89, 91, 92, 93, 95, 96, 98, 100, 101, 127, 128, 129, 130, 131, 138, 139, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 215, 216, 219, 295, 328, 329, 331, 333, 334, 338, 339, 341, 346, 347, 399, 401, 403, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 446, 447, 454, 455, 456, 457], "lcm": 6, "ldexp": 6, "ldot": 10, "lead": [108, 222, 223, 442], "learn": [3, 4, 199], "least": [41, 42, 43, 44, 78, 86, 87, 90, 97, 120, 125, 129, 130, 134, 157, 180, 186, 209, 215, 410, 453], "left": [10, 28, 29, 31, 80, 82, 85, 125, 126, 169, 177, 184, 208, 214, 220, 221, 227, 229, 315, 340, 391, 405, 409, 412, 427, 450], "left_shift": [6, 405], "leg": [148, 400], "legaci": 384, "len": [85, 87, 106, 107, 112, 113, 152, 180, 208, 212, 213, 214, 260, 414, 450], "length": [20, 44, 72, 73, 81, 85, 93, 102, 104, 107, 108, 111, 112, 113, 116, 118, 137, 140, 142, 145, 147, 175, 189, 204, 208, 212, 214, 222, 223, 316, 344, 351, 403, 404, 410, 412, 414, 423, 430, 433, 434, 453], "less": [6, 72, 73, 93, 143, 144, 145, 146, 171, 180, 185, 222, 223, 227, 229, 331, 340, 415, 427, 435], "less_equ": [6, 93, 143, 144, 170, 331], "let": 350, "level": [457, 464], "level_zero": [20, 32, 34, 35, 36, 38, 62, 76, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 138, 139, 140, 149, 192, 193, 204, 213, 332, 333, 334, 438, 450, 455, 456], "lexsort": [6, 30, 419], "li": [407, 408], "librari": [3, 4, 464], "light": 10, "like": [20, 32, 34, 35, 36, 38, 40, 41, 42, 43, 57, 85, 86, 89, 91, 100, 133, 134, 135, 136, 137, 138, 140, 149, 192, 193, 204, 206, 284, 297, 333, 344, 348, 392, 403, 430, 455, 468], "limit": [3, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 74, 75, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 98, 100, 103, 105, 109, 110, 114, 115, 117, 119, 121, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 148, 149, 150, 154, 158, 159, 160, 169, 170, 171, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 284, 286, 328, 329, 331, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 373, 374, 376, 379, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 401, 403, 405, 406, 411, 413, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 431, 432, 437, 446, 447, 449, 451, 455, 456], "linalg": [6, 84, 89, 90, 422], "line": [180, 193], "linear": [10, 61, 65, 180, 188, 204, 457, 468], "linspac": [0, 6, 20, 94, 140, 204, 212, 449], "linux": 4, "list": [3, 6, 9, 32, 34, 35, 36, 38, 41, 42, 43, 50, 58, 62, 76, 79, 85, 86, 87, 89, 90, 106, 111, 120, 138, 139, 140, 142, 147, 157, 164, 192, 193, 204, 207, 326, 402, 404, 410, 413, 424, 433, 436, 450, 453, 454], "list_pickl": 87, "littl": 87, "ln": 204, "load": [6, 134, 193], "loadtxt": [6, 134], "loc": [348, 359, 361, 362, 370, 394], "local": 4, "locat": [0, 4, 141, 161, 162, 206, 335, 359, 361, 412], "log": [6, 98, 140, 187, 192, 195, 196, 197, 198, 204, 205, 363], "log10": [6, 194, 196, 197], "log1p": [6, 96, 98, 194, 195, 197], "log2": [6, 194, 195, 196, 199], "log_bas": 204, "logabsdet": 187, "logaddexp": [6, 71, 199, 205], "logaddexp2": [6, 198, 205], "logarithm": [71, 174, 187, 192, 194, 195, 196, 197, 198, 199, 205, 364, 468], "logic": [14, 19, 200, 201, 202, 203, 457, 468], "logical_and": [6, 46, 201, 202, 203], "logical_not": [6, 47, 154, 200, 202, 203], "logical_or": [6, 48, 200, 201, 203], "logical_xor": [6, 49, 200, 201, 202], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 140, 192], "logsumexp": [71, 198, 199], "lomax": 371, "long": [87, 181], "longer": [107, 113], "look": [329, 430], "lookfor": 6, "loop": 89, "lorentz": 386, "lose": [107, 113], "low": [348, 376, 379, 392, 464], "lower": [76, 100, 145, 146, 166, 172, 176, 178, 206, 438, 439, 440, 441, 444, 445], "lowest": [44, 89, 90, 348, 376], "lstsq": 6, "m": [4, 10, 69, 86, 87, 89, 100, 107, 113, 124, 125, 126, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 206, 207, 344, 429, 430, 438, 439, 440, 441, 443, 444, 445], "machin": [4, 10, 121, 150, 180, 199], "machineri": 87, "made": [41, 87, 168], "magnitud": [11, 12, 63, 101, 341], "mai": [14, 18, 19, 40, 52, 56, 58, 64, 73, 85, 87, 89, 90, 97, 107, 108, 112, 113, 116, 142, 146, 147, 173, 175, 176, 180, 184, 186, 199, 204, 207, 225, 228, 230, 284, 344, 410, 424, 434, 453, 464], "main": [76, 77, 78, 79, 80, 100, 120, 149, 178, 206, 435, 438, 439, 440, 443, 444], "mainstai": 10, "maintain": [82, 85, 87, 145, 315, 412, 430], "major": [4, 34, 35, 36, 38, 39, 40, 85, 284, 330, 397], "make": [36, 38, 57, 87, 212], "manag": 0, "mani": [10, 464], "manipul": [3, 77, 457, 468], "manual": [4, 87, 434], "mappingproxi": 87, "mask": [87, 206, 330, 337, 345, 429, 440, 444], "mask_func": 206, "mask_indic": [6, 440, 444], "mass": 145, "mat": 6, "match": [11, 12, 35, 58, 64, 71, 81, 87, 134, 142, 153, 205, 207, 343, 344, 400, 424, 429, 430, 433, 454], "math": [10, 94], "mathemat": [457, 468], "matlab": 131, "matmul": [6, 84, 186, 189, 452], "matplotlib": [212, 386], "matric": [120, 135, 152, 174, 175, 177, 179, 182, 184, 185, 186, 187, 189, 207, 212, 468], "matrix": [69, 84, 89, 153, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 207, 212, 422, 443, 450, 452, 457, 468], "matrix_pow": [6, 422], "matrix_rank": 6, "max": [0, 6, 16, 28, 85, 121, 129, 130, 145, 146, 150, 180, 182, 209, 214, 215, 224, 286, 365, 430, 434, 464], "max_arg": 0, "max_val": 0, "maxima": [129, 208, 209], "maximum": [0, 6, 16, 28, 29, 56, 85, 90, 129, 130, 208, 214, 215, 220, 221, 224, 226, 281, 301, 339, 342, 344], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 40, 44, 85, 89, 116, 133, 134, 136, 142, 173, 184, 211, 225, 228, 230, 284, 297, 326, 348, 361, 363, 366, 370, 389, 393, 394, 397, 403, 425, 427, 451, 464], "meaningfulli": 464, "meant": 464, "median": [0, 6], "memori": [3, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 83, 85, 87, 89, 91, 92, 93, 95, 96, 98, 100, 101, 127, 128, 129, 130, 131, 138, 139, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 212, 215, 216, 219, 295, 321, 328, 329, 331, 333, 334, 338, 339, 341, 346, 347, 399, 401, 403, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 446, 447, 454, 455, 456, 457], "mersenn": 348, "meshgrid": [6, 135, 152, 213, 332], "met": [84, 183], "meta": 87, "metadata": 87, "method": [10, 14, 16, 17, 19, 30, 40, 62, 84, 85, 87, 122, 132, 134, 182, 185, 189, 284, 289, 313, 330, 348, 403, 414, 427, 429, 436, 457], "mgrid": 152, "mgridclass": 213, "middl": [10, 80, 177], "might": [89, 108], "min": [6, 17, 29, 56, 85, 121, 129, 130, 145, 146, 150, 173, 180, 186, 189, 208, 209, 215, 226, 286, 430, 464], "min_scalar_typ": 6, "minima": [130, 214, 215], "minimum": [6, 17, 28, 29, 56, 85, 129, 130, 208, 209, 214, 220, 221, 224, 226, 282, 303, 339, 342], "minlength": 45, "mintypecod": 6, "minu": [98, 128, 216, 401, 447], "miscellan": [2, 457, 468], "mise": 393, "miss": 193, "mix": 207, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 99, 401], "mode": [55, 61, 65, 85, 102, 107, 108, 112, 113, 116, 186, 285, 309, 324, 343, 386, 391, 412, 429], "model": 350, "modf": 6, "modifi": [62, 80, 120, 385], "modul": [141, 457], "modulu": [131, 216, 401], "monoton": [82, 145], "moor": 185, "more": [0, 3, 4, 30, 32, 41, 42, 43, 86, 87, 89, 90, 98, 125, 126, 132, 134, 146, 147, 152, 180, 181, 182, 183, 185, 189, 196, 198, 424, 433, 464], "most": [3, 4, 80, 81, 87, 90, 102, 348, 384, 423], "move": [85, 218, 307, 407, 408, 436], "moveaxi": [6, 407, 408, 436], "msg": 0, "msort": 6, "mt19937": 384, "mu": [359, 363, 370, 393], "multi": [2, 85, 103, 105, 109, 110, 114, 115, 117, 119, 152, 213, 321, 332, 457], "multi_dot": [6, 84, 89, 90], "multiarrai": 87, "multidimension": [145, 153, 454], "multinomi": 6, "multipl": [10, 28, 29, 30, 44, 58, 70, 71, 87, 89, 146, 147, 175, 176, 177, 178, 179, 183, 205, 208, 210, 214, 224, 225, 226, 228, 230, 400, 410, 419, 424, 425, 451, 453, 457], "multipli": [6, 72, 89, 177, 227, 340], "multivari": 366, "multivariate_norm": 6, "must": [11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 44, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 71, 72, 73, 74, 75, 81, 83, 84, 86, 95, 96, 97, 98, 101, 107, 108, 112, 113, 116, 120, 125, 127, 128, 129, 130, 131, 134, 137, 142, 143, 144, 145, 146, 147, 148, 151, 154, 158, 159, 160, 161, 162, 169, 170, 171, 172, 183, 184, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 328, 329, 331, 337, 338, 339, 340, 341, 343, 344, 346, 347, 399, 400, 401, 402, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 446, 447, 451, 453, 454], "mx": 180, "n": [0, 4, 10, 73, 77, 78, 81, 82, 85, 86, 87, 88, 97, 100, 102, 104, 105, 107, 108, 110, 112, 113, 115, 116, 118, 119, 120, 127, 135, 142, 149, 180, 181, 182, 185, 186, 189, 190, 191, 206, 207, 212, 228, 230, 326, 337, 343, 350, 365, 367, 377, 387, 412, 414, 422, 425, 428, 429, 433, 436, 438, 439, 440, 441, 443, 444, 445, 450, 451, 464], "n1": 212, "n2": [193, 212], "n3": 212, "naiv": 90, "name": [0, 6, 87], "namedtupl": 186, "nan": [9, 14, 15, 19, 28, 29, 34, 35, 83, 129, 130, 155, 158, 159, 160, 161, 162, 195, 208, 209, 210, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 339, 340, 421, 425, 446, 451, 468], "nan_to_num": 6, "nanargmax": [6, 28, 221], "nanargmin": [6, 29, 220], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 129, 130, 208, 209, 215, 226], "nanmean": [6, 210, 228, 230, 425, 451], "nanmedian": 6, "nanmin": [6, 129, 130, 209, 214, 215, 224], "nanpercentil": 6, "nanprod": [6, 340], "nanquantil": 6, "nanstd": [6, 210, 225, 230, 425, 451], "nansum": 6, "nanvar": [6, 210, 225, 228, 425, 451], "nat": 160, "nativ": 87, "native_cod": 87, "native_dt": 87, "natur": [187, 194, 195, 196, 197, 198, 199, 205], "nbad": 360, "nbyte": 85, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 469], "ndim": [6, 32, 38, 41, 42, 43, 69, 77, 80, 85, 87, 120, 168, 189, 208, 214, 333, 434, 436, 455], "ndmin": 32, "nearest": [31, 128, 216, 401, 406, 409, 447], "necessari": [4, 14, 19, 20, 32, 34, 35, 36, 38, 41, 64, 72, 73, 99, 107, 113, 120, 140, 192, 204, 207, 210, 222, 223, 225, 227, 228, 229, 230, 340, 403, 425, 427, 451], "necessarili": [175, 177], "need": [4, 80, 141, 429, 430, 454], "needs_init": 87, "needs_pyapi": 87, "neg": [6, 10, 14, 19, 31, 45, 63, 79, 80, 82, 97, 100, 113, 116, 124, 137, 142, 145, 158, 159, 160, 161, 162, 181, 224, 226, 228, 229, 230, 338, 339, 340, 343, 367, 409, 425, 427, 429, 435, 451], "negative_binomi": 6, "neither": [84, 129, 130, 189, 207, 224, 226], "nest": [37, 86, 147, 410, 424, 453], "nested_it": 6, "net": [129, 130, 209, 215], "never": 403, "new": [32, 40, 50, 51, 57, 58, 71, 72, 73, 80, 85, 86, 87, 91, 92, 97, 129, 130, 132, 136, 137, 138, 139, 140, 147, 149, 192, 204, 205, 206, 209, 215, 218, 222, 223, 227, 229, 284, 313, 326, 333, 334, 400, 403, 407, 408, 410, 424, 434, 436, 453, 454, 455, 456, 464], "new_dtyp": 87, "new_ord": 87, "newaxi": 97, "newbyteord": [6, 87], "newli": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 83, 85, 91, 92, 93, 95, 96, 98, 100, 101, 127, 128, 129, 130, 131, 138, 139, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 215, 216, 219, 284, 328, 329, 331, 333, 334, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 446, 447, 455, 456], "newshap": 403, "next": [4, 121, 329], "nextaft": 6, "ngood": 360, "ni": [212, 344, 429, 430], "nine": 350, "ninf": [9, 224, 226, 229], "ninja": 4, "nj": [344, 429, 430], "njm": 89, "nk": [344, 429, 430], "nl": 10, "nlk": 89, "nn": 212, "noisi": 180, "non": [20, 32, 34, 35, 36, 37, 38, 40, 44, 45, 62, 68, 76, 77, 79, 82, 85, 91, 92, 99, 100, 104, 113, 116, 118, 123, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 149, 152, 156, 158, 192, 193, 204, 206, 213, 220, 221, 224, 226, 228, 230, 284, 306, 330, 332, 333, 334, 337, 339, 348, 368, 369, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 425, 433, 438, 440, 444, 450, 451, 454, 455, 456], "nonc": [368, 369], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 158, 159, 160, 161, 162, 169, 170, 171, 173, 180, 182, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 299, 301, 302, 303, 307, 308, 309, 312, 314, 315, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 440, 444, 446, 447, 450, 451, 453, 454, 455, 456, 464], "nonzero": [6, 68, 85, 123, 454, 464], "nor": [129, 130, 177, 224, 226], "norm": [6, 10, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 173, 177, 180, 468], "normal": [6, 69, 102, 107, 108, 112, 113, 116, 145, 175, 176, 186, 199, 348, 363, 366, 377, 389], "not_equ": [6, 93, 143, 144, 170, 171], "note": [11, 12, 13, 14, 18, 19, 28, 29, 30, 31, 39, 62, 70, 74, 80, 82, 83, 85, 87, 90, 97, 99, 102, 106, 107, 108, 112, 113, 116, 127, 129, 130, 133, 134, 135, 136, 137, 145, 152, 158, 175, 193, 204, 216, 219, 228, 229, 230, 289, 313, 330, 337, 343, 346, 351, 353, 354, 364, 369, 401, 403, 419, 425, 426, 428, 433, 434, 446, 451, 452], "notic": [87, 113, 116], "notimplementederror": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 83, 85, 91, 92, 93, 95, 96, 98, 100, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 148, 149, 154, 158, 159, 160, 169, 170, 171, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 214, 215, 216, 219, 224, 225, 226, 228, 229, 230, 284, 328, 329, 331, 333, 334, 338, 339, 340, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 431, 432, 446, 447, 451, 455, 456], "now": [14, 19, 36, 38, 77, 177, 180, 206], "np": [3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 289, 292, 294, 297, 298, 299, 307, 311, 318, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 346, 347, 373, 382, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "nr": 10, "nsamp": 360, "nsampl": 360, "nth": 433, "nuc": 184, "num": [0, 87, 94, 140, 192, 204, 449], "number": [10, 14, 15, 18, 19, 20, 31, 44, 45, 50, 51, 68, 77, 79, 81, 82, 85, 87, 89, 90, 97, 100, 101, 107, 112, 113, 116, 121, 128, 133, 134, 136, 137, 140, 142, 145, 146, 149, 150, 155, 156, 157, 158, 164, 173, 179, 182, 186, 187, 189, 190, 191, 192, 199, 204, 216, 222, 223, 224, 226, 227, 228, 229, 230, 305, 314, 316, 317, 330, 337, 340, 341, 348, 350, 360, 384, 401, 402, 406, 407, 408, 409, 416, 425, 428, 434, 436, 438, 447, 450, 451, 464, 468], "numer": [3, 4, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 27, 31, 59, 60, 63, 66, 67, 83, 87, 93, 95, 98, 113, 128, 129, 130, 143, 144, 151, 155, 158, 159, 160, 170, 171, 194, 195, 196, 197, 209, 215, 219, 328, 331, 338, 339, 341, 398, 406, 409, 415, 416, 417, 418, 426, 431, 432, 446, 468], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 293, 297, 298, 299, 311, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 464, 468], "nx": 212, "ny": 212, "nyquist": [10, 106, 107, 113, 116, 118], "nzero": 9, "o": [4, 14, 19, 87], "obj": [28, 29, 30, 87, 132, 145], "obj2sctyp": 6, "object": [20, 32, 34, 35, 36, 37, 38, 39, 40, 62, 76, 77, 79, 85, 87, 91, 92, 97, 100, 104, 118, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 150, 152, 173, 176, 184, 192, 193, 204, 206, 213, 284, 313, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 403, 438, 440, 444, 450, 455, 456, 464], "obtain": [10, 80, 172, 330], "obviou": 10, "occupi": [121, 150], "occur": [40, 52, 58, 64, 85, 89, 147, 175, 207, 284, 410, 424, 453], "occurr": [28, 29, 45, 82, 145, 220, 221], "odd": [10, 104, 107, 111, 112, 113, 116, 118], "off": [20, 175, 180], "offset": [80, 85, 87, 133, 134, 206, 292, 325, 435, 440, 441, 444, 445], "ogrid": [152, 454], "ogridclass": 332, "oil": [350, 367], "omit": [348, 376], "onc": 179, "one": [3, 4, 28, 29, 30, 32, 37, 41, 42, 43, 44, 56, 61, 64, 65, 85, 87, 91, 93, 97, 99, 100, 102, 107, 108, 111, 112, 113, 116, 125, 126, 129, 130, 134, 138, 142, 146, 147, 149, 152, 157, 177, 181, 184, 194, 195, 197, 206, 208, 209, 212, 213, 214, 215, 220, 221, 227, 229, 289, 297, 300, 330, 332, 334, 337, 340, 367, 408, 419, 423, 424, 427, 429, 433, 440, 441, 444, 445, 455, 464], "oneapi": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "onedpl": 4, "onemkl": [4, 175, 177], "ones": [6, 32, 36, 38, 44, 71, 83, 85, 89, 91, 92, 93, 97, 100, 138, 139, 148, 149, 168, 180, 182, 205, 206, 222, 227, 334, 340, 400, 404, 408, 436, 438, 446, 455, 456], "ones_lik": [6, 32, 92, 139, 333, 456], "onli": [10, 14, 19, 20, 28, 29, 30, 32, 34, 35, 36, 38, 40, 41, 44, 56, 62, 65, 69, 85, 87, 88, 89, 90, 91, 92, 100, 103, 105, 106, 109, 110, 114, 115, 116, 117, 119, 120, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 152, 172, 176, 178, 186, 189, 192, 193, 204, 206, 207, 208, 210, 211, 214, 220, 221, 224, 225, 226, 227, 228, 230, 284, 318, 333, 334, 336, 337, 338, 340, 348, 370, 376, 392, 403, 413, 419, 425, 427, 430, 444, 451, 454, 455, 456, 464], "open": [134, 152, 192, 332, 348, 378, 380, 381, 383, 392, 428], "opencl": [20, 32, 34, 35, 36, 38, 62, 76, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 138, 139, 140, 149, 192, 193, 204, 213, 332, 333, 334, 438, 450, 455, 456], "oper": [10, 13, 46, 47, 48, 49, 83, 87, 89, 90, 93, 97, 120, 128, 131, 143, 144, 154, 169, 170, 171, 172, 200, 202, 207, 208, 214, 216, 219, 220, 221, 328, 331, 338, 339, 343, 401, 405, 426, 434, 446, 457, 468], "operand": [89, 90, 191, 335, 433], "opposit": [10, 87, 99, 107, 112, 337], "optim": [4, 89, 90, 145, 146], "option": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 95, 96, 98, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 158, 159, 160, 161, 162, 169, 170, 171, 172, 173, 176, 178, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 297, 326, 328, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 343, 346, 347, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 454, 455, 456], "ord": 184, "order": [10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 39, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 74, 75, 80, 82, 83, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 113, 120, 124, 125, 126, 127, 128, 129, 130, 131, 134, 138, 139, 142, 143, 144, 145, 148, 151, 154, 158, 159, 160, 169, 170, 171, 173, 175, 176, 177, 178, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 212, 215, 216, 218, 219, 238, 283, 284, 289, 297, 307, 310, 315, 318, 326, 328, 329, 330, 331, 333, 334, 336, 338, 339, 341, 346, 347, 397, 399, 401, 403, 405, 406, 411, 412, 415, 416, 417, 418, 419, 421, 422, 426, 431, 432, 433, 436, 446, 447, 450, 454, 455, 456, 468], "ordin": [180, 188], "ordinari": [113, 153, 172], "org": 4, "orient": [70, 344, 430], "origin": [50, 80, 85, 107, 113, 184, 212, 218, 227, 229, 403, 407], "ortho": [10, 102, 107, 108, 112, 113, 116], "orthogon": [177, 186], "orthonorm": 186, "other": [30, 40, 50, 51, 81, 85, 87, 113, 127, 135, 149, 175, 177, 183, 218, 234, 235, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 284, 348, 392, 408, 419, 457, 468], "otherwis": [3, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 74, 75, 76, 81, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 103, 105, 109, 110, 114, 115, 117, 119, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 148, 149, 153, 154, 158, 159, 160, 169, 170, 171, 180, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 284, 313, 328, 329, 331, 333, 334, 338, 339, 340, 341, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 431, 432, 435, 437, 446, 447, 451, 454, 455, 456], "otim": 433, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 111, 112, 113, 116, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 173, 179, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 285, 286, 289, 290, 291, 297, 301, 302, 303, 308, 314, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 346, 347, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 442, 443, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456], "outer": [6, 70, 80, 89, 90, 168], "output": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 40, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 66, 67, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 104, 107, 108, 113, 116, 118, 123, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 148, 149, 151, 152, 154, 155, 156, 158, 159, 160, 169, 170, 171, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 221, 222, 223, 225, 227, 228, 229, 230, 284, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 405, 406, 409, 411, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 431, 432, 434, 435, 438, 440, 444, 446, 447, 450, 451, 454, 455, 456, 468], "outsid": [145, 146], "over": [10, 14, 19, 44, 71, 72, 73, 84, 85, 89, 90, 102, 106, 107, 108, 111, 112, 113, 116, 122, 124, 135, 140, 145, 146, 153, 184, 192, 204, 205, 207, 208, 210, 212, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 297, 340, 344, 348, 375, 380, 391, 392, 400, 425, 427, 429, 430, 433, 451, 468], "overrid": [70, 92, 139, 334, 456], "overview": 2, "overwrite_input": 211, "p": [10, 173, 180, 181, 350, 353, 358, 364, 367], "pack": [80, 397, 468], "packag": [0, 3], "packbit": 6, "pad": [6, 87, 102, 107, 108, 112, 113, 116], "page": [3, 468], "pair": [10, 90, 102, 107, 108, 112, 113, 116, 175], "parallel": [1, 3, 4, 9, 457], "paramet": [11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 294, 297, 313, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456], "parameter": [348, 370, 392], "pareto": 6, "pars": [134, 193], "part": [3, 10, 85, 113, 129, 130, 151, 156, 157, 163, 164, 175, 176, 178, 206, 209, 215, 217, 298, 311, 398, 420, 440, 444, 447, 464], "partial": [30, 419], "particular": [87, 183], "particularli": 89, "partit": [6, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 419, 438, 440, 444, 450, 455, 456, 464], "pass": [35, 85, 87, 135, 146, 180, 206, 313, 441, 445], "path": [4, 89, 90, 134, 193], "path_info": 90, "pathlib": 193, "pattern": 44, "penros": 185, "per": [89, 104, 118], "percentil": [6, 211], "perf_count": 0, "perform": [14, 19, 35, 56, 81, 89, 108, 124, 172, 340, 427], "period": 10, "permit": 134, "permut": [6, 85, 89, 218, 326, 436, 468], "phase": [10, 18, 449], "pi": [0, 9, 10, 21, 23, 25, 26, 66, 67, 74, 75, 102, 346, 417, 418, 431, 432, 449, 472], "pickl": [134, 193], "piecewis": 6, "pinf": 9, "pinv": 6, "pip": 4, "place": [6, 14, 15, 19, 31, 56, 58, 72, 73, 84, 85, 97, 99, 102, 107, 108, 112, 113, 116, 120, 152, 155, 207, 208, 210, 214, 222, 223, 225, 227, 228, 229, 230, 297, 318, 326, 332, 340, 343, 344, 385, 403, 407, 409, 419, 424, 425, 427, 429, 435, 451, 464], "platform": [72, 73, 87, 222, 223, 227, 229, 340, 427], "pleas": [0, 3, 145, 464], "plot": 386, "plt": [212, 386], "plu": [194, 195, 197], "point": [10, 11, 12, 18, 20, 26, 31, 34, 35, 44, 63, 71, 87, 91, 92, 96, 100, 101, 107, 112, 113, 116, 121, 133, 134, 135, 137, 138, 139, 142, 149, 151, 180, 181, 192, 193, 198, 199, 205, 210, 225, 228, 230, 329, 333, 334, 348, 377, 389, 398, 399, 400, 409, 411, 412, 425, 438, 451, 455, 456, 468], "pointer": 87, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 31, 46, 47, 48, 49, 53, 54, 59, 60, 63, 66, 67, 74, 75, 83, 85, 93, 95, 96, 98, 101, 127, 128, 129, 130, 131, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 215, 216, 219, 328, 329, 331, 338, 339, 341, 346, 347, 348, 375, 399, 401, 405, 406, 409, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 446, 447], "portion": [145, 146], "posit": [6, 10, 14, 15, 19, 20, 31, 34, 35, 53, 63, 79, 80, 85, 97, 100, 101, 113, 116, 118, 121, 134, 155, 158, 159, 160, 161, 162, 172, 181, 190, 218, 224, 226, 229, 307, 321, 328, 350, 374, 407, 408, 409, 411, 421, 422, 435, 436], "possess": 175, "possibl": [10, 39, 40, 42, 43, 85, 89, 90, 97, 129, 130, 142, 145, 206, 284, 313, 403, 423, 428, 429, 436], "possibli": 37, "pow": 464, "power": [6, 10, 96, 102, 181, 422, 450], "pre": 146, "precis": [11, 12, 44, 72, 73, 87, 89, 121, 151, 180, 206, 222, 223, 227, 229, 340, 398, 427, 435], "prefer": [55, 62, 85, 289, 330], "prepend": [81, 434], "present": [87, 224, 226, 229], "preserv": [40, 41, 42, 43, 56, 85, 87, 89, 124, 125, 126, 176, 177, 178, 284, 435], "press": 10, "previou": 44, "print": [0, 4, 44, 45, 61, 82, 87, 90, 348, 367, 372, 448], "print_device_info": 0, "printabl": 90, "printopt": 6, "prior": 81, "prob1": [198, 199], "prob12": [198, 199], "prob2": [198, 199], "probabl": [145, 199, 350, 358, 367], "proce": 464, "process": 10, "processor": 89, "prod": [6, 72, 85, 190, 191, 227, 464], "produc": [10, 87, 193, 344, 412, 430], "product": [6, 70, 72, 84, 85, 89, 90, 153, 168, 183, 188, 190, 191, 207, 219, 222, 227, 290, 335, 340, 433, 452, 468], "program": [4, 127], "progress": [140, 192], "project": [87, 341], "promot": [13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 46, 48, 49, 52, 53, 63, 66, 67, 74, 75, 83, 95, 96, 98, 128, 129, 130, 131, 140, 148, 169, 192, 194, 195, 196, 197, 198, 199, 204, 207, 209, 215, 216, 219, 329, 339, 346, 347, 399, 401, 404, 405, 411, 415, 417, 418, 421, 422, 426, 431, 432, 434, 446, 447], "promote_typ": 6, "propag": [87, 129, 130, 208, 209, 214, 215, 222, 223, 224, 226, 227, 229], "proper": [129, 130, 175, 177], "properti": [10, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 176, 178, 186, 192, 193, 204, 206, 213, 232, 284, 293, 295, 296, 298, 300, 304, 305, 311, 316, 317, 321, 326, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456, 464], "protocol": [37, 87, 132], "prototyp": 92, "provid": [0, 6, 10, 28, 29, 58, 64, 71, 85, 89, 90, 97, 102, 107, 108, 112, 113, 116, 136, 145, 146, 147, 161, 162, 205, 220, 221, 224, 226, 227, 229, 348, 376, 379, 400, 410, 424, 429, 453, 454, 472], "pseudo": [185, 348], "ptp": 6, "pure": [10, 107, 113, 116], "purpos": 180, "put": [6, 10, 85, 99, 107, 113, 337, 344, 430, 464], "put_along_axi": [6, 343, 430], "putmask": [6, 343], "pval": 365, "py": 4, "pypi": 4, "pyplot": [212, 386], "pytest": 4, "python": [0, 2, 3, 37, 85, 87, 131, 132, 216, 299, 401, 402, 464], "pzero": 9, "q": [177, 181, 186, 191, 211], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [18, 25], "quantil": 6, "quaternion": 181, "question": 76, "queue": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "quick": [2, 3], "quotient": 26, "r": [75, 186], "r2": 186, "rad": 75, "rad2deg": [6, 74, 75, 449], "radian": [6, 18, 21, 22, 23, 25, 26, 74, 75, 346, 449, 472], "rais": [11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 71, 74, 75, 82, 83, 84, 85, 91, 92, 93, 95, 96, 98, 100, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 148, 149, 154, 158, 159, 160, 169, 170, 171, 181, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 224, 225, 226, 228, 229, 230, 284, 285, 316, 328, 329, 331, 333, 334, 338, 339, 340, 341, 346, 347, 399, 400, 401, 403, 405, 406, 411, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 431, 432, 446, 447, 451, 455, 456, 464], "rand": [6, 90, 348, 378, 380, 381, 383], "randint": [6, 85, 299, 348, 379], "randn": [6, 124, 125, 126, 185, 186, 189, 191, 348, 424], "random": [85, 90, 124, 125, 126, 177, 183, 185, 186, 189, 191, 299, 424, 457, 468], "random_integ": [6, 348, 376], "random_sampl": [6, 348, 375, 378, 381, 383], "randomli": 372, "randomst": 376, "ranf": 6, "rang": [0, 82, 136, 145, 146, 199, 342, 343, 367, 372, 402, 424, 433, 436, 449, 468], "rank": [97, 99, 135, 180, 182, 428], "rate": [104, 118], "rather": 330, "ratio": [0, 83, 128, 180, 446, 472], "ration": 468, "ravel": [6, 85, 99, 123, 184, 297, 335, 464], "ravel_multi_index": 6, "raw": 186, "rayleigh": 6, "rcond": [180, 185], "re": [28, 29, 45, 76, 407, 448], "read": [76, 80, 85, 87, 133, 134, 136, 137, 193, 297, 397, 403], "readonli": 87, "real": [6, 11, 12, 20, 26, 53, 54, 63, 71, 85, 102, 107, 112, 113, 114, 115, 116, 117, 119, 121, 127, 129, 130, 131, 148, 151, 156, 163, 164, 172, 175, 176, 177, 178, 182, 185, 186, 187, 189, 198, 199, 205, 209, 215, 216, 228, 230, 350, 367, 399, 400, 401, 411, 420, 425, 447, 451, 464, 468], "real_if_clos": 6, "rearrang": [85, 307, 468], "rebuild": 86, "recal": 87, "recent": 423, "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 411, 421], "recommend": [89, 330, 434], "reconstruct": [87, 189], "recov": 10, "reduc": [14, 19, 28, 29, 44, 186, 189, 205, 208, 210, 212, 214, 220, 221, 224, 225, 226, 227, 228, 229, 230, 340, 400, 425, 427, 451], "reduce_hypot": 148, "reduct": [14, 19], "redund": 116, "refer": [0, 2, 3, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 297, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 464], "reflect": 464, "reflector": 186, "regardless": [87, 176, 178], "regular": 193, "rel": [15, 85, 155, 321, 407, 408], "relat": 87, "relev": [87, 140, 192, 204], "rem": 131, "remain": [14, 19, 44, 90, 145, 205, 210, 218, 225, 228, 230, 400, 403, 425, 451], "remaind": [6, 128, 131, 216, 339], "remov": [28, 29, 74, 80, 85, 97, 113, 319, 340, 346, 423, 427, 468], "reorder": [89, 124, 191, 218], "rep": 434, "repeat": [6, 85, 120, 175, 176, 177, 178, 212, 337, 434, 464], "repeatedli": 89, "repetit": [0, 402, 434], "replac": [3, 10, 37, 56, 99, 222, 223, 337, 344, 353, 464], "replic": 434, "repo": 4, "repr": 272, "repres": [10, 20, 32, 34, 35, 36, 37, 38, 44, 85, 87, 90, 116, 132, 135, 140, 142, 152, 187, 192, 204, 212, 230, 316, 348, 442, 464], "represent": [46, 48, 49, 90, 121, 150, 152, 329, 464], "request": 408, "requir": [4, 6, 32, 36, 38, 40, 85, 87, 89, 101, 152, 284], "res_cpu": 76, "res_host": 76, "resampl": 113, "rese": 384, "reset": 464, "reshap": [0, 6, 13, 28, 29, 41, 43, 44, 76, 77, 78, 80, 83, 84, 85, 86, 89, 97, 99, 106, 111, 124, 131, 152, 153, 168, 184, 206, 207, 208, 214, 219, 292, 297, 316, 326, 337, 372, 397, 407, 426, 433, 435, 440, 441, 444, 445, 446, 464], "resid": [97, 101], "residu": 180, "resiz": [6, 97, 464], "resolut": 121, "resolv": [71, 97, 205, 400], "resourc": 0, "respect": [10, 13, 26, 46, 48, 49, 83, 85, 93, 128, 131, 142, 143, 144, 169, 170, 171, 198, 199, 200, 202, 203, 216, 219, 321, 331, 339, 401, 405, 426, 446], "restor": 407, "result": [0, 4, 10, 14, 19, 26, 28, 29, 44, 46, 47, 48, 49, 52, 56, 58, 63, 71, 72, 73, 83, 84, 87, 88, 90, 92, 93, 98, 102, 107, 108, 112, 113, 116, 128, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 146, 152, 154, 158, 159, 160, 161, 162, 169, 170, 171, 172, 175, 184, 186, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 214, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 330, 331, 334, 335, 339, 340, 343, 348, 350, 380, 400, 403, 404, 405, 406, 408, 409, 412, 415, 416, 424, 425, 427, 429, 430, 433, 434, 442, 446, 447, 451, 454, 456, 464], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 52, 87, 468], "ret": 347, "retriev": [80, 87], "retstep": 192, "return": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 301, 302, 303, 306, 307, 308, 310, 313, 314, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 351, 370, 372, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 464], "reus": [146, 403], "revers": [80, 85, 120, 124, 125, 126, 326, 436, 450], "rewrit": 180, "rfft": [6, 10, 104, 107, 112, 113, 118], "rfft2": 6, "rfftfreq": [6, 104], "rfftn": [6, 102, 116], "right": [10, 56, 70, 80, 82, 125, 126, 148, 169, 175, 176, 177, 178, 183, 191, 206, 391, 400, 405, 412, 435, 440, 444, 450], "right_shift": [6, 169], "rightmost": [145, 146, 191], "rint": [6, 31, 409], "roll": [6, 408], "rollaxi": [6, 407], "root": [6, 53, 148, 173, 399, 400, 411, 421, 422], "rot90": 6, "roughli": [87, 180], "round": [6, 20, 31, 85, 128, 175, 216, 401, 406, 447, 464, 468], "round_": 6, "roundoff": [107, 112], "routin": [2, 457, 464], "row": [38, 40, 57, 58, 72, 73, 80, 85, 86, 100, 125, 126, 142, 147, 149, 152, 183, 189, 284, 330, 397, 410, 424, 438, 440, 453], "row_stack": [6, 453], "rowvar": 69, "rsqrt": [399, 421], "rtol": [15, 155], "rule": [13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 44, 46, 48, 49, 52, 53, 63, 64, 66, 67, 70, 74, 75, 83, 95, 96, 98, 128, 129, 130, 131, 140, 148, 169, 192, 194, 195, 196, 197, 198, 199, 204, 205, 207, 209, 210, 215, 216, 219, 225, 228, 230, 329, 339, 346, 347, 399, 400, 401, 404, 405, 411, 415, 417, 418, 421, 422, 425, 426, 427, 431, 432, 437, 446, 447, 451], "run": [0, 4], "runtim": 4, "runtimewarn": [224, 226], "s1": [85, 87, 168, 321], "s10": 87, "s16": 87, "s2": [85, 87, 321], "s25": 87, "s3": [85, 321], "safe": [40, 52, 58, 64, 85, 89, 147, 207, 284, 410, 424, 453], "safe_ev": 6, "said": 191, "same": [4, 10, 11, 12, 13, 14, 15, 19, 26, 28, 29, 30, 31, 33, 36, 38, 39, 40, 44, 46, 47, 48, 49, 51, 57, 58, 63, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 92, 93, 97, 99, 120, 128, 129, 130, 131, 132, 139, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 161, 162, 163, 168, 169, 170, 171, 177, 181, 186, 198, 199, 200, 202, 203, 205, 208, 209, 210, 214, 215, 216, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 313, 326, 329, 331, 334, 337, 339, 340, 344, 348, 370, 376, 392, 397, 398, 400, 401, 402, 405, 407, 408, 410, 412, 419, 423, 424, 425, 426, 427, 429, 430, 433, 435, 439, 441, 443, 445, 446, 451, 452, 453, 456], "same_kind": [40, 52, 58, 64, 85, 89, 147, 207, 284, 410, 424, 453], "sampl": [10, 104, 111, 116, 118, 140, 142, 145, 192, 204, 344, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 430, 440, 444, 457, 468], "sample_r": 118, "satisfi": [32, 36, 38, 40, 85, 99, 179, 284, 337], "save": [6, 134], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [13, 15, 26, 32, 34, 35, 36, 37, 38, 46, 48, 49, 52, 62, 63, 64, 70, 76, 79, 81, 83, 84, 85, 87, 89, 90, 93, 99, 104, 118, 120, 128, 129, 130, 131, 138, 139, 140, 142, 143, 144, 145, 146, 148, 153, 155, 157, 164, 165, 168, 169, 170, 171, 188, 192, 198, 199, 200, 202, 203, 204, 206, 207, 209, 212, 215, 216, 219, 294, 299, 329, 331, 337, 339, 343, 344, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374, 376, 379, 382, 384, 388, 390, 391, 392, 393, 394, 395, 396, 401, 405, 412, 426, 429, 433, 446, 447, 450, 452, 454, 464], "scale": [10, 90, 102, 107, 108, 112, 113, 116, 140, 168, 186, 192, 204, 348, 355, 357, 359, 360, 361, 362, 370, 382, 387, 394], "scientif": 10, "scipi": 94, "scope": 4, "script": 4, "sctype2char": 6, "search": [90, 457, 468], "searchsort": [6, 82, 85, 145, 419, 464], "second": [13, 15, 26, 44, 46, 48, 49, 63, 70, 80, 83, 84, 87, 90, 93, 96, 104, 106, 113, 116, 118, 128, 129, 130, 131, 142, 143, 144, 145, 146, 147, 148, 153, 155, 167, 168, 169, 170, 171, 198, 199, 200, 202, 203, 206, 207, 208, 209, 212, 214, 215, 216, 219, 331, 335, 339, 401, 405, 422, 426, 428, 433, 435, 446, 452], "section": [4, 87, 464], "see": [3, 31, 87, 102, 107, 108, 112, 113, 116, 132, 145, 180, 365, 409, 440, 441, 444, 445, 464], "seed": [6, 85, 90, 299, 348], "seek": 134, "select": [6, 64, 99, 208, 214, 423, 429, 457], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "self": [85, 87, 122, 233, 234, 235, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 296, 348], "semant": 145, "sens": 191, "sep": [134, 137], "separ": [10, 85, 87, 89, 134, 137, 146, 313], "sequenc": [37, 41, 42, 43, 57, 58, 61, 65, 86, 89, 90, 91, 92, 113, 138, 139, 140, 145, 146, 147, 152, 183, 192, 204, 218, 333, 334, 337, 372, 385, 402, 404, 410, 424, 433, 453, 455, 456], "sequenti": [65, 69, 88, 94, 103, 105, 109, 110, 114, 115, 117, 119, 211, 217, 227, 437], "seri": [10, 113, 364], "set": [10, 28, 29, 32, 40, 55, 76, 77, 79, 82, 85, 87, 89, 91, 138, 145, 146, 149, 152, 182, 184, 185, 192, 208, 214, 220, 221, 229, 274, 284, 285, 296, 333, 334, 340, 415, 416, 427, 440, 444, 455, 456, 464], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 87], "setflag": 6, "setter": [85, 316], "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 179, "sh": [85, 313], "shape": [4, 6, 11, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 40, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 107, 108, 112, 113, 116, 118, 124, 127, 128, 129, 130, 131, 135, 138, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 174, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 313, 319, 326, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 343, 344, 346, 347, 348, 357, 360, 365, 366, 371, 375, 376, 377, 378, 379, 380, 381, 383, 388, 389, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 438, 439, 441, 443, 444, 445, 446, 447, 451, 453, 454, 455, 456, 457, 468], "share": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 438, 440, 444, 450, 455, 456], "shared_bin": 146, "shares_memori": 6, "shift": [10, 106, 111, 169, 405, 407], "short": [447, 464], "shorter": [107, 113], "shorthand": [11, 12, 13, 46, 47, 48, 49, 83, 93, 128, 143, 144, 154, 169, 170, 171, 200, 202, 207, 216, 219, 328, 331, 338, 339, 401, 405, 426, 446, 454], "should": [28, 29, 40, 80, 82, 84, 85, 89, 90, 102, 107, 108, 112, 113, 116, 131, 134, 141, 145, 180, 181, 207, 218, 220, 221, 224, 226, 284, 315, 365, 403, 412, 429, 433, 435, 464], "show": [9, 87, 120, 148, 203, 212, 222, 223, 224, 226, 229, 386], "show_config": 6, "shown": 4, "shuffl": 6, "side": [85, 142, 177, 315, 412], "sigma": [363, 370], "sign": [6, 10, 15, 63, 87, 155, 174, 187, 216, 328, 338, 340, 401, 416, 427, 447], "signal": [10, 104, 107, 112, 113, 118], "signatur": [206, 207], "signbit": [6, 415], "signific": 89, "signum": 415, "similar": [3, 34, 35, 85, 87, 140, 192, 204, 206, 289, 337, 348, 376, 440, 441, 444, 445], "simpl": [4, 203, 468], "simpli": [78, 85, 134, 145, 146, 326], "sin": [0, 6, 23, 66, 177, 212, 418, 431], "sinc": [6, 85, 113, 175, 177, 318, 330], "sine": [21, 22, 23, 24, 25, 26, 27, 66, 67, 417, 418, 431, 432], "singl": [9, 10, 30, 51, 57, 85, 89, 90, 142, 183, 208, 214, 319, 340, 348, 367, 376, 377, 378, 379, 380, 381, 383, 389, 427, 464], "singlecomplex": 9, "singleton": [14, 19, 44, 97, 205, 210, 224, 225, 226, 228, 230, 400, 423, 425, 451], "singular": [179, 180, 182, 185, 189], "sinh": [6, 24, 67, 417, 432], "size": [0, 6, 20, 28, 29, 32, 44, 58, 65, 69, 72, 73, 77, 82, 85, 87, 90, 99, 102, 104, 108, 118, 134, 140, 142, 147, 184, 186, 189, 192, 204, 206, 208, 210, 214, 220, 221, 222, 223, 225, 227, 229, 299, 300, 316, 333, 337, 340, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 407, 410, 423, 424, 427, 433, 444, 453, 455], "skip": 80, "slice": [99, 220, 221, 224, 225, 226, 228, 230, 343, 344, 430, 444, 445, 464], "slogdet": [6, 174], "slower": 433, "slowest": [85, 297, 397, 403], "small": [15, 98, 155, 180, 185, 196, 198, 199, 444], "smaller": [81, 85, 102, 108, 112, 116, 121, 180, 216, 307, 337, 401], "smallest": [121, 150], "smallest_norm": 121, "smat": 189, "so": [10, 14, 19, 44, 87, 93, 107, 112, 145, 164, 192, 199, 205, 210, 212, 225, 228, 230, 386, 400, 425, 433, 434, 451], "softwar": 4, "solut": [180, 188], "solv": [6, 180, 190, 191, 468], "some": [20, 87, 97, 99, 127, 153, 180, 337, 454, 464], "sometim": 464, "sometru": 6, "somewhat": 181, "sophist": 181, "sort": [6, 30, 85, 189, 283, 307, 412, 420, 430, 436, 457, 464, 468], "sort_complex": 6, "sorter": [85, 315, 412], "sought": 173, "sourc": [4, 6, 14, 15, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 55, 56, 57, 58, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 152, 153, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 210, 211, 212, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 330, 333, 334, 335, 336, 337, 340, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 407, 408, 412, 413, 414, 419, 420, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456], "space": [6, 20, 104, 106, 118, 134, 140, 142, 192, 204], "spars": [152, 212], "special": [2, 87, 94, 457, 468], "specif": [0, 4, 87, 135], "specifi": [14, 19, 20, 28, 29, 30, 31, 32, 34, 35, 36, 38, 44, 51, 52, 58, 62, 71, 72, 73, 76, 79, 80, 85, 89, 90, 91, 92, 99, 100, 102, 104, 107, 108, 112, 113, 116, 118, 124, 133, 134, 135, 136, 138, 139, 140, 142, 149, 176, 178, 184, 190, 191, 192, 193, 204, 205, 210, 211, 213, 222, 223, 225, 227, 228, 229, 230, 283, 292, 332, 333, 334, 337, 340, 343, 344, 348, 361, 371, 389, 397, 400, 407, 408, 409, 424, 425, 427, 429, 430, 433, 435, 436, 438, 450, 451, 455, 456], "spectrum": [10, 106, 107, 111, 112], "speed": 89, "speedup": 90, "spell": 330, "split": [6, 58, 86, 147, 410, 424, 453, 468], "spreadsheet": 127, "sqrt": [6, 10, 53, 85, 298, 311, 400, 411, 422], "squar": [6, 53, 148, 149, 172, 173, 175, 176, 177, 179, 180, 181, 187, 190, 191, 206, 228, 230, 352, 368, 399, 400, 411, 421, 425, 441, 445, 450, 451], "squeez": [6, 85, 97, 464], "src": 64, "stabl": [30, 419], "stack": [6, 57, 58, 86, 147, 174, 182, 185, 186, 187, 207, 330, 410, 430, 453], "stand": 142, "standard": [85, 121, 128, 131, 210, 216, 225, 228, 230, 299, 320, 348, 363, 370, 377, 386, 387, 388, 389, 390, 401, 425, 451, 464, 468], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 348, 377], "standard_t": 6, "start": [2, 3, 20, 36, 38, 90, 104, 118, 133, 140, 192, 204, 206, 408, 440, 444], "start_tim": 0, "state": 348, "statist": [457, 468], "std": [6, 85, 210, 225, 228, 230, 451, 464], "stdev": [348, 389], "step": [4, 20, 90, 140, 192, 204], "sticki": 87, "still": 44, "stop": [20, 140, 192, 204], "store": [140, 161, 162, 192, 199, 204, 207, 335], "str": [37, 58, 87, 89, 90, 134, 137, 147, 193, 275, 410, 424, 442, 453], "str_": 87, "straightforward": 152, "stride": [39, 40, 85, 284], "string": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 87, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 442, 444, 450, 455, 456, 464], "string_repr": 90, "stringio": 193, "strongli": [4, 434], "struct": 87, "structur": [87, 193], "student": 390, "style": [40, 85, 284, 330, 397], "sub": [58, 80, 87, 89, 147, 191, 410, 424, 435, 438, 453], "subarrai": [87, 152], "subclass": [35, 167], "subdivid": 87, "subdtyp": 87, "subok": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 32, 40, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 62, 63, 66, 67, 74, 75, 83, 85, 92, 93, 95, 96, 98, 101, 127, 128, 129, 130, 131, 139, 143, 144, 148, 151, 154, 158, 159, 160, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 215, 216, 219, 284, 328, 329, 331, 334, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 421, 422, 426, 431, 432, 446, 447, 456], "subscript": [89, 90], "subset": [3, 142, 423, 468], "subtract": 6, "subtyp": 397, "success": [350, 358, 367], "sugar": [78, 441, 445], "suggest": 80, "suit": 4, "suitabl": [85, 326, 344, 412, 430], "sum": [0, 3, 4, 6, 10, 13, 44, 71, 73, 76, 79, 80, 81, 84, 85, 89, 145, 148, 153, 173, 180, 190, 198, 199, 205, 207, 222, 223, 229, 291, 325, 350, 365, 367, 400, 433, 435, 464, 468], "sum_": 10, "sum_along_diagon": 435, "sum_of_weight": 44, "summari": 457, "summat": [84, 89, 90, 153, 191, 207, 335, 433], "suppli": [107, 112, 183, 348, 377], "support": [3, 9, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 62, 63, 65, 66, 67, 68, 69, 74, 75, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 98, 100, 103, 105, 109, 110, 114, 115, 117, 119, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 148, 149, 154, 158, 159, 160, 169, 170, 171, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 284, 328, 329, 331, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 403, 405, 411, 413, 415, 416, 417, 419, 421, 422, 425, 426, 427, 431, 432, 437, 446, 447, 449, 451, 455, 456, 472], "surnam": 87, "surpris": 108, "svd": [6, 173, 179, 182, 185], "swap": [87, 106, 428], "swapax": [6, 85, 218, 464], "swapped_cod": 87, "swapped_dt": 87, "sy": 87, "sycl": [0, 3, 20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "sycl_context": 85, "sycl_devic": 85, "sycl_queu": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "sycldevic": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "syclqueu": [20, 32, 34, 35, 36, 37, 38, 40, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 284, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 438, 440, 444, 450, 455, 456], "symmetr": [107, 113, 116, 172, 175, 176, 177, 178, 182, 185, 189], "symmetri": [10, 102, 107, 112, 113, 116], "syntact": [78, 441, 445], "syntax": 464, "sys_is_l": 87, "system": [3, 4, 188], "t": [10, 58, 69, 85, 87, 107, 172, 175, 177, 180, 326, 330, 390], "tabl": [2, 9, 457], "tack": 87, "take": [6, 57, 85, 99, 206, 337, 344, 403, 412, 430, 464], "take_along_axi": [6, 28, 29, 30, 55, 344, 429], "taken": [44, 80, 81, 90, 107, 113, 145, 207, 228, 230, 425, 435, 438, 440, 444, 451, 452], "tall": 120, "tan": [6, 25, 26, 66, 417, 432], "tangent": [18, 21, 22, 23, 24, 25, 26, 27, 66, 67, 417, 418, 431, 432], "tanh": [6, 27, 67, 418, 431], "target": [40, 52, 85, 284, 343], "target_devic": 85, "tau": 186, "tbb": 4, "tempfil": 134, "temporari": 134, "temporaryfil": 134, "ten": 358, "tensor": [37, 68, 85, 89, 90, 190, 191, 220, 221, 224, 226, 227, 342, 433], "tensordot": [6, 84, 89, 153, 190, 191, 207, 335], "tensorinv": [6, 191], "tensorsolv": [6, 190], "term": [10, 13, 83, 90, 102, 113, 116, 219, 426, 446], "test": [0, 2, 14, 15, 19, 93, 143, 144, 156, 158, 159, 160, 161, 162, 170, 171, 227, 330, 331, 350, 464, 468], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [133, 134, 136, 137, 193], "th": [73, 76, 79, 81, 85, 88, 100, 142, 152, 211, 326, 332, 436, 439, 441, 443, 445], "than": [32, 72, 73, 85, 102, 107, 108, 112, 113, 116, 121, 125, 126, 128, 135, 143, 144, 145, 146, 147, 169, 170, 171, 180, 182, 185, 186, 222, 223, 227, 229, 307, 330, 337, 340, 405, 415, 423, 424, 427, 433, 435, 447, 464], "thei": [15, 87, 155, 177, 180, 410, 412, 433, 440, 444, 450, 453, 464], "them": [57, 464], "theor": 175, "theoret": 90, "therefor": [102, 116, 135, 176, 178], "thi": [10, 11, 12, 16, 17, 20, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 56, 58, 62, 71, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 98, 99, 101, 102, 106, 107, 108, 112, 113, 116, 120, 121, 123, 125, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 157, 164, 176, 178, 180, 183, 184, 187, 192, 193, 196, 198, 199, 204, 205, 206, 207, 208, 214, 216, 218, 220, 221, 224, 226, 227, 229, 284, 289, 294, 297, 307, 313, 316, 326, 330, 337, 340, 343, 344, 381, 383, 397, 400, 401, 403, 408, 410, 424, 427, 429, 430, 434, 441, 445, 450, 453, 454], "thing": 429, "third": [57, 58, 86, 147, 410, 424, 453], "those": [10, 56, 181, 344], "though": 108, "thousand": 358, "three": [41, 42, 43, 97, 181, 206, 348, 384, 433], "threshold": 182, "through": [35, 87, 146, 175, 177, 180, 206, 464], "throw": 365, "thu": [10, 107, 113, 434], "tile": [6, 402, 468], "time": [0, 10, 13, 15, 26, 46, 48, 49, 63, 81, 83, 84, 93, 107, 112, 128, 129, 130, 131, 143, 144, 148, 153, 155, 160, 168, 169, 170, 171, 180, 198, 199, 200, 202, 203, 209, 215, 216, 219, 329, 331, 339, 350, 365, 401, 405, 426, 430, 433, 434, 446, 452], "time_dpnp": 0, "time_numpi": 0, "timedelta": 87, "timeit": 89, "timestep": 104, "tini": 121, "titl": 87, "tm": 131, "to_begin": 88, "to_devic": 85, "to_end": 88, "tobyt": 6, "todo": 368, "tofil": [6, 134], "togeth": [15, 58, 87, 155, 424, 454], "tol": [182, 366], "toler": [15, 33, 155], "tolist": 6, "too": [4, 454], "toolkit": 3, "tostr": 6, "total": [6, 68, 72, 85, 304, 425, 451], "toward": [127, 128, 145, 146, 216, 329, 401, 447], "trace": [6, 76, 79, 80, 85, 89, 464], "traceback": 423, "trail": 442, "transfer": 85, "transform": [90, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 457], "transpos": [6, 85, 89, 172, 177, 218, 232, 464, 468], "trapezoid": [427, 437], "trapz": [6, 427], "treat": [15, 107, 113, 134, 142, 155, 176, 178, 180, 183, 193, 222, 223, 227, 229, 340, 344, 412, 430, 434, 464], "tri": 6, "trial": 350, "triangl": [76, 148, 206, 400, 438, 439, 440, 441, 443, 444, 445], "triangular": [6, 172, 176, 178, 186, 206, 440, 441, 444, 445], "trigonometr": [18, 21, 22, 23, 24, 25, 26, 27, 66, 67, 417, 418, 431, 432, 468], "tril": [6, 76, 206, 438, 440, 441, 444], "tril_indic": [6, 206, 441, 444], "tril_indices_from": [6, 445], "trili": 441, "trili1": 441, "trim": 442, "trim_zero": 6, "triu": [6, 76, 206, 438, 440, 444, 445], "triu_indic": [6, 206, 440, 445], "triu_indices_from": [6, 441], "triui": 445, "triuim1": 445, "trivial": [175, 430], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 38, 40, 41, 44, 46, 47, 48, 49, 52, 53, 54, 59, 60, 62, 63, 64, 66, 67, 68, 69, 73, 74, 75, 82, 83, 85, 87, 89, 90, 93, 95, 96, 97, 98, 99, 101, 120, 124, 125, 126, 127, 128, 129, 130, 131, 135, 140, 143, 144, 145, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 179, 182, 184, 185, 186, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 236, 279, 280, 284, 289, 301, 302, 303, 308, 320, 322, 327, 328, 329, 330, 331, 337, 338, 339, 340, 341, 344, 346, 347, 353, 399, 400, 401, 403, 405, 406, 411, 415, 416, 417, 418, 421, 422, 425, 426, 427, 430, 431, 432, 433, 446, 447, 450, 451, 454], "true_divid": [6, 83], "trunc": [6, 31, 54, 127, 406, 409], "truncat": [31, 54, 102, 107, 108, 112, 113, 116, 127, 386, 406, 409, 447], "trust": [220, 221], "truth": [46, 47, 48, 49, 93, 143, 144, 154, 170, 171, 200, 201, 202, 203, 331, 464, 468], "try": 4, "tukei": 10, "tup": [57, 86, 147, 410, 453], "tupl": [14, 19, 28, 29, 32, 34, 35, 36, 38, 44, 51, 62, 71, 76, 77, 78, 79, 85, 87, 90, 97, 106, 111, 124, 135, 138, 139, 140, 142, 145, 146, 152, 157, 164, 168, 184, 186, 191, 192, 204, 205, 206, 207, 208, 210, 212, 213, 214, 224, 225, 226, 227, 228, 229, 230, 316, 326, 330, 332, 340, 400, 402, 403, 407, 414, 423, 425, 427, 434, 436, 440, 441, 444, 445, 450, 451, 464], "turn": 57, "twister": 348, "two": [10, 15, 33, 41, 42, 46, 47, 48, 49, 61, 65, 70, 79, 80, 81, 84, 85, 87, 89, 90, 97, 102, 108, 113, 129, 130, 142, 153, 154, 155, 168, 176, 180, 183, 188, 200, 202, 203, 207, 208, 209, 214, 215, 218, 224, 226, 307, 323, 335, 348, 377, 406, 409, 428, 433, 435, 440, 441, 444, 445, 452], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 289, 293, 297, 313, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 468], "type_nam": 0, "typeerror": [44, 64, 68], "typenam": 6, "typestr": 87, "typic": [15, 107, 155, 412, 464], "u": [87, 172, 176, 178, 189, 206, 227, 229], "u1": [87, 133, 134], "u16": 87, "u4": 52, "u8": 87, "ufunc": [2, 457, 464], "uint64": 87, "uint8": [87, 133, 134], "uk": 10, "un": 87, "unari": 464, "undefin": [18, 85, 307], "underli": [46, 48, 49, 403], "undo": 10, "undocu": 87, "unexpect": [227, 229], "unicod": 87, "uniform": [6, 87, 142, 145, 146, 204, 348, 375, 378, 380, 381, 383], "uniformli": [204, 348, 392], "uniniti": [32, 91, 92, 138, 333, 455], "union1d": 6, "uniqu": [6, 44, 45, 71, 82, 87, 205, 210, 218, 225, 228, 230, 400, 402, 425, 451], "unit": [85, 104, 118, 175, 181, 187, 321], "unitari": [10, 142, 186, 189], "uniti": 145, "univ": 10, "univers": [2, 457, 464], "unless": [14, 19, 40, 72, 73, 85, 89, 145, 175, 182, 184, 204, 222, 223, 227, 229, 284, 340, 427], "unlik": [30, 85, 118, 313, 419], "unmodifi": 146, "unpackbit": 6, "unravel_index": [6, 28, 29], "unsaf": [40, 52, 58, 64, 85, 89, 147, 207, 284, 410, 424, 453], "unscal": 10, "unsign": [87, 340, 427], "unspecifi": 403, "unsupport": [11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 46, 47, 48, 49, 53, 54, 56, 63, 66, 67, 74, 75, 83, 95, 96, 98, 103, 105, 109, 110, 114, 115, 117, 119, 127, 128, 129, 130, 131, 148, 154, 169, 195, 196, 197, 198, 199, 209, 215, 216, 217, 219, 328, 329, 338, 339, 341, 346, 347, 399, 401, 405, 406, 411, 415, 416, 417, 418, 426, 431, 432, 437, 446, 447], "until": [90, 407, 408], "unwrap": [6, 74, 346], "up": [4, 10, 87, 89, 126, 430, 441], "updat": 4, "uplo": [176, 178], "upon": [85, 321], "upper": [76, 100, 145, 146, 172, 176, 178, 186, 206, 438, 440, 441, 443, 444, 445], "url": 4, "us": [4, 10, 13, 20, 32, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 52, 56, 58, 62, 70, 72, 73, 76, 77, 79, 80, 83, 85, 87, 89, 90, 91, 92, 93, 97, 100, 101, 102, 104, 107, 108, 112, 113, 116, 118, 120, 123, 127, 128, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 169, 170, 171, 172, 173, 176, 177, 178, 180, 182, 183, 184, 185, 192, 193, 199, 200, 202, 204, 206, 207, 208, 210, 212, 213, 214, 216, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 238, 284, 289, 297, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 344, 348, 351, 353, 354, 364, 369, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 389, 392, 397, 401, 402, 403, 405, 407, 412, 415, 420, 425, 426, 427, 429, 430, 433, 434, 435, 437, 438, 440, 441, 444, 445, 446, 450, 451, 454, 455, 456, 464, 472], "usag": [3, 4, 104, 118], "use_getitem": 87, "use_setitem": 87, "user": 87, "usm": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 423, 438, 440, 444, 450, 455, 456], "usm_ndarrai": [11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 95, 96, 97, 98, 99, 101, 102, 106, 107, 108, 111, 112, 113, 116, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 328, 329, 330, 331, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 443, 445, 446, 447, 451, 452, 453, 454, 456], "usm_typ": [20, 32, 34, 35, 36, 37, 38, 62, 76, 77, 79, 85, 91, 92, 100, 104, 118, 133, 134, 135, 136, 137, 138, 139, 140, 149, 152, 192, 193, 204, 206, 213, 332, 333, 334, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 389, 392, 438, 440, 444, 450, 455, 456], "usual": [77, 87, 207], "util": 457, "v": [61, 76, 79, 85, 87, 175, 176, 315, 343, 412], "v0": 6, "v1": 6, "v10": 87, "v9": 6, "val": [85, 120, 122, 274, 309, 337], "valid": [65, 97, 206, 428, 440, 441, 444, 445], "valu": [10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 96, 98, 99, 100, 101, 107, 113, 116, 120, 121, 122, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 234, 235, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 271, 273, 274, 276, 277, 278, 281, 282, 284, 286, 289, 294, 296, 307, 309, 328, 329, 330, 331, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 358, 375, 376, 392, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 415, 416, 417, 419, 421, 422, 425, 426, 427, 429, 430, 431, 432, 435, 440, 444, 446, 447, 449, 451, 454, 455, 456, 464, 468], "value2": 87, "valueerror": [220, 221, 403, 423], "vander": 6, "vandermond": 450, "var": [6, 85, 210, 225, 228, 230, 425, 464], "vararg": 142, "vari": [10, 14, 18, 19, 80, 90, 107, 108, 112, 113, 116, 135, 152, 173, 175, 176, 180, 184, 225, 228, 230], "variabl": [69, 180, 188], "varianc": [85, 210, 225, 228, 230, 327, 425, 451, 468], "variou": 472, "vdot": [6, 84, 207], "vector": [70, 89, 135, 152, 153, 173, 182, 183, 184, 189, 207, 212, 335, 452, 468], "vendor": 4, "veri": [3, 10, 15, 155, 212], "verif": 0, "verifi": 172, "version": [4, 85, 87, 123, 296, 330], "vertic": [57, 58, 80, 86, 120, 124, 125, 147, 410, 424, 453], "vetterlin": 10, "vh": 189, "via": 113, "view": [6, 41, 42, 43, 50, 76, 80, 85, 97, 124, 125, 126, 212, 218, 232, 313, 326, 344, 403, 423, 428, 436], "violat": 64, "void": 87, "void640": 87, "von": 393, "vonmis": 6, "vsplit": [6, 58], "vstack": [6, 57, 58, 86, 147, 180, 410, 424], "w": [10, 44, 175, 176, 177, 178, 181], "wa": [10, 71, 87, 183, 205, 224, 226, 228, 230, 348, 389, 400, 425, 451], "wai": [3, 4, 10, 85, 90, 102, 134, 307, 433], "wald": 6, "walk": 87, "want": [4, 430], "warn": [87, 220, 221, 366], "we": [62, 77, 80, 90, 120, 180, 206, 344, 430], "weibul": [6, 396], "weight": [44, 45, 69, 145, 146, 210, 225, 427], "well": [87, 89, 134, 145, 146, 340, 350, 367, 386], "were": [58, 135, 348, 377, 424], "what": [10, 40, 52, 58, 64, 85, 87, 89, 93, 102, 107, 108, 112, 113, 116, 147, 156, 207, 284, 350, 367, 410, 424, 453, 464], "when": [10, 20, 32, 34, 35, 36, 38, 39, 40, 44, 62, 64, 82, 85, 87, 102, 113, 116, 129, 130, 140, 175, 184, 186, 192, 199, 204, 206, 207, 216, 222, 223, 224, 226, 227, 229, 284, 401, 406, 408, 409, 429, 433, 454, 472], "whenev": [97, 428, 436], "where": [0, 6, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 63, 64, 66, 67, 71, 74, 75, 76, 77, 79, 81, 82, 83, 85, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 107, 113, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 169, 170, 171, 172, 180, 186, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 219, 224, 225, 226, 227, 228, 229, 230, 279, 280, 284, 301, 302, 303, 308, 315, 320, 322, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 346, 347, 348, 370, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 392, 399, 400, 401, 405, 406, 408, 411, 412, 415, 416, 417, 418, 421, 422, 425, 426, 427, 431, 432, 435, 436, 438, 440, 444, 446, 447, 450, 451, 455, 456], "wherev": 64, "whether": [14, 15, 19, 71, 82, 87, 155, 156, 172, 186, 192, 227, 229, 403, 416], "which": [3, 4, 10, 14, 19, 28, 29, 30, 34, 35, 40, 44, 50, 58, 64, 71, 72, 73, 77, 79, 80, 81, 82, 84, 85, 87, 89, 90, 97, 101, 102, 106, 107, 108, 111, 112, 113, 116, 121, 124, 129, 130, 135, 136, 140, 142, 145, 146, 147, 158, 159, 160, 161, 162, 172, 175, 182, 184, 191, 204, 205, 206, 207, 208, 209, 210, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 284, 330, 340, 343, 400, 402, 407, 419, 423, 424, 425, 427, 429, 435, 436, 438, 439, 440, 443, 444, 447, 451, 454, 464], "whichev": 153, "while": [10, 145, 146, 210, 225, 228, 230, 330, 337, 340, 407, 425, 427, 438, 451], "whitespac": [134, 137], "who": 6, "whole": [440, 444], "whose": [11, 12, 80, 87, 99, 100, 120, 173, 176, 177, 178, 190, 206, 218, 407, 441, 445], "why": 113, "wide": 120, "width": [87, 145, 146], "wild": [350, 367], "window": [4, 104, 118], "wise": [11, 12, 13, 15, 18, 21, 22, 23, 24, 25, 26, 27, 31, 33, 46, 47, 48, 49, 53, 54, 57, 58, 59, 60, 63, 66, 67, 71, 83, 85, 86, 93, 95, 96, 98, 101, 127, 128, 129, 130, 131, 143, 144, 147, 148, 151, 154, 155, 158, 159, 160, 161, 162, 169, 170, 171, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 214, 215, 216, 217, 219, 224, 226, 227, 288, 328, 329, 331, 338, 339, 341, 398, 399, 401, 405, 406, 409, 410, 411, 415, 416, 417, 418, 421, 422, 424, 426, 431, 432, 446, 447, 453, 464, 468, 472], "within": [15, 20, 33, 40, 85, 89, 107, 112, 113, 145, 146, 155, 284, 343, 348, 392], "without": [80, 85, 91, 120, 316, 326, 397, 403, 464], "won": 87, "word": [113, 127, 177, 348, 392], "work": [4, 31, 39, 430, 464], "world": [87, 350, 367], "would": [30, 58, 85, 87, 135, 152, 183, 206, 207, 307, 348, 419, 424, 430, 436], "wrap": [74, 85, 120, 309, 324, 343, 346, 412, 429], "wrapper": 85, "write": [76, 80, 85, 120, 134, 297, 403], "written": [71, 120, 134, 205, 400, 454], "x": [0, 3, 4, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 42, 43, 47, 50, 51, 53, 54, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 74, 75, 76, 79, 81, 82, 85, 87, 88, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 119, 122, 123, 127, 133, 134, 135, 136, 138, 139, 140, 142, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 177, 180, 184, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 212, 213, 217, 218, 284, 289, 298, 299, 311, 328, 330, 332, 333, 334, 338, 340, 341, 342, 346, 347, 366, 372, 397, 398, 399, 400, 402, 406, 407, 408, 409, 411, 415, 416, 417, 418, 421, 422, 423, 428, 429, 431, 432, 437, 438, 447, 448, 450, 454, 455, 456], "x0": [36, 38, 62, 79, 334, 450, 456], "x00": 134, "x01": [133, 134], "x02": [133, 134], "x03": [133, 134], "x04": [133, 134], "x05": 133, "x1": [13, 15, 18, 25, 26, 40, 45, 46, 48, 49, 55, 63, 65, 83, 85, 88, 93, 128, 129, 130, 131, 143, 144, 148, 169, 170, 171, 198, 199, 200, 201, 202, 203, 207, 209, 211, 212, 215, 216, 217, 219, 284, 328, 329, 331, 336, 338, 339, 345, 385, 401, 405, 407, 426, 437, 446, 449], "x1_i": [13, 26, 46, 48, 49, 63, 83, 93, 128, 131, 143, 144, 148, 169, 170, 171, 198, 199, 200, 202, 203, 216, 219, 331, 339, 401, 405, 426, 446], "x2": [13, 14, 15, 18, 19, 25, 26, 32, 46, 48, 49, 63, 65, 83, 93, 128, 129, 130, 131, 143, 144, 148, 169, 170, 171, 198, 199, 200, 201, 202, 203, 207, 209, 212, 215, 216, 219, 328, 329, 331, 338, 339, 401, 405, 407, 421, 426, 446], "x2_i": [13, 26, 46, 48, 49, 63, 83, 93, 128, 131, 143, 144, 148, 169, 170, 171, 198, 199, 200, 202, 203, 216, 219, 331, 339, 401, 405, 426, 446], "x3": [14, 19], "x_i": [11, 12, 18, 21, 22, 23, 24, 25, 27, 47, 53, 54, 59, 60, 66, 67, 95, 96, 98, 127, 151, 154, 194, 195, 196, 197, 201, 328, 338, 341, 398, 399, 406, 409, 411, 415, 416, 417, 418, 421, 422, 431, 432, 447], "xi": [197, 212], "xn": 212, "xor": [46, 47, 48, 49, 154, 200, 201, 202, 203], "xv": 212, "xx": 212, "xy": 212, "y": [0, 4, 20, 32, 34, 35, 36, 38, 41, 50, 62, 69, 70, 79, 85, 87, 91, 92, 97, 100, 104, 118, 133, 134, 135, 136, 138, 139, 140, 142, 149, 161, 162, 173, 180, 192, 193, 204, 212, 213, 217, 289, 313, 332, 333, 334, 437, 438, 450, 454, 455, 456], "y1": 437, "yet": [4, 6], "yield": [30, 227, 229, 330, 348, 454, 464], "you": [4, 80, 107, 112, 113, 206, 429, 430, 464], "your": [4, 80], "yv": 212, "yy": 212, "z": [14, 19, 20, 32, 34, 35, 36, 38, 62, 79, 91, 92, 100, 104, 118, 133, 134, 135, 136, 138, 139, 140, 149, 192, 193, 204, 212, 213, 332, 333, 334, 358, 438, 450, 455, 456], "zero": [6, 10, 14, 19, 30, 32, 68, 71, 77, 81, 85, 91, 92, 99, 100, 102, 104, 106, 107, 108, 111, 112, 113, 116, 118, 120, 123, 127, 134, 138, 139, 149, 156, 157, 161, 162, 163, 164, 169, 175, 176, 178, 180, 181, 182, 185, 189, 205, 206, 208, 210, 214, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 306, 321, 330, 333, 334, 340, 348, 350, 378, 380, 381, 383, 400, 415, 419, 425, 427, 433, 438, 439, 442, 443, 447, 451, 454, 456], "zeros_lik": [6, 32, 75, 92, 139, 334, 347, 455], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.asanyarray", "dpnp.asarray", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asnumpy", "dpnp.astype", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.issubsctype", "dpnp.kron", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.place", "dpnp.positive", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.real", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.reshape", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.sort", "dpnp.sort_complex", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapz", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Array Indexing Routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical Functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 233, "__add__": 234, "__and__": 235, "__bool__": 236, "__complex__": 237, "__copy__": 238, "__eq__": 239, "__float__": 240, "__floordiv__": 241, "__ge__": 242, "__getitem__": 243, "__gt__": 244, "__iadd__": 245, "__iand__": 246, "__ifloordiv__": 247, "__ilshift__": 248, "__imod__": 249, "__imul__": 250, "__int__": 251, "__invert__": 252, "__ior__": 253, "__ipow__": 254, "__irshift__": 255, "__isub__": 256, "__itruediv__": 257, "__ixor__": 258, "__le__": 259, "__len__": 260, "__lshift__": 261, "__lt__": 262, "__matmul__": 263, "__mod__": 264, "__mul__": 265, "__ne__": 266, "__neg__": 267, "__new__": 268, "__or__": 269, "__pos__": 270, "__pow__": 271, "__repr__": 272, "__rshift__": 273, "__setitem__": 274, "__str__": 275, "__sub__": 276, "__truediv__": 277, "__xor__": 278, "ab": 11, "absolut": 12, "ad": 461, "add": 13, "algebra": [6, 459], "all": [14, 279], "allclos": 15, "amax": 16, "amin": 17, "angl": 18, "ani": [19, 280], "api": [1, 457], "arang": 20, "arcco": 21, "arccosh": 22, "arcsin": 23, "arcsinh": 24, "arctan": 25, "arctan2": 26, "arctanh": 27, "argmax": [28, 281], "argmin": [29, 282], "argsort": [30, 283], "arithmet": [462, 464, 466], "around": 31, "arrai": [6, 7, 9, 32, 458, 460, 461, 464], "array_equ": 33, "asanyarrai": 34, "asarrai": 35, "ascontiguousarrai": 36, "asfarrai": 37, "asfortranarrai": 38, "asnumpi": 39, "astyp": [40, 284], "atleast_1d": 41, "atleast_2d": 42, "atleast_3d": 43, "attribut": 464, "avail": [9, 472], "averag": [44, 471], "backend": 1, "background": 10, "basic": [461, 466], "beta": 349, "binari": 5, "bincount": 45, "binomi": 350, "bit": [5, 472], "bitwise_and": 46, "bitwise_not": 47, "bitwise_or": 48, "bitwise_xor": 49, "broadcast_arrai": 50, "broadcast_to": 51, "build": [4, 7], "byte": 351, "c": 1, "calcul": 464, "can_cast": 52, "cbrt": 53, "ceil": 54, "chang": 461, "channel": 4, "chisquar": 352, "choic": 353, "choleski": 172, "choos": [55, 285], "class": 7, "clip": [56, 286], "co": 66, "column_stack": 57, "comparison": [6, 460, 464, 472], "complex": 462, "concaten": 58, "cond": 173, "conda": 4, "conj": [59, 287], "conjug": [60, 288], "construct": 464, "control": 0, "convers": 464, "convolv": 61, "copi": [62, 289], "copysign": 63, "copyto": 64, "correl": [65, 471], "cosh": 67, "count": 469, "count_nonzero": 68, "cov": 69, "creat": 8, "creation": 7, "cross": 70, "cumlogsumexp": 71, "cumprod": [72, 290], "cumsum": [73, 291], "cupi": 6, "data": [0, 2, 7, 8, 9, 458, 464, 467], "decomposit": 459, "deg2rad": 74, "degre": 75, "det": 174, "detail": 10, "develop": 2, "devic": 4, "diag": 76, "diag_indic": 77, "diag_indices_from": 78, "diagflat": 79, "diagon": [80, 292], "diff": 81, "differ": 462, "digit": 82, "dimens": [10, 461], "dimension": [6, 464], "dirichlet": 354, "discret": 6, "distribut": 467, "divid": 83, "dot": 84, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 467], "dpnp_arrai": 85, "driver": 4, "dstack": 86, "dtype": [87, 293], "ediff1d": 88, "eig": 175, "eigenvalu": 459, "eigh": 176, "eigval": 177, "eigvalsh": 178, "einsum": 89, "einsum_path": 90, "element": [5, 461], "empti": 91, "empty_lik": 92, "equal": 93, "equat": 459, "erf": 94, "error": 470, "exampl": [0, 4], "exist": 7, "exp": 95, "exp2": 96, "expand_dim": 97, "expm1": 98, "expon": 462, "exponenti": 355, "extens": 2, "extract": 99, "extrema": 462, "ey": 100, "f": 356, "fab": 101, "fft": [10, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "fft2": 103, "fftfreq": 104, "fftn": 105, "fftshift": 106, "fill": 294, "fill_diagon": 120, "find": 462, "finfo": 121, "flag": 295, "flat": 296, "flatit": 122, "flatnonzero": 123, "flatten": 297, "flip": 124, "fliplr": 125, "flipud": 126, "float": [462, 472], "floor": 127, "floor_divid": 128, "fmax": 129, "fmin": 130, "fmod": 131, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 132, "frombuff": 133, "fromfil": 134, "fromfunct": 135, "fromit": 136, "fromstr": 137, "full": 138, "full_lik": 139, "function": [10, 460, 462, 470, 471, 472], "gamma": 357, "gener": [458, 467], "geometr": 358, "geomspac": 140, "get_includ": 141, "gradient": 142, "greater": 143, "greater_equ": 144, "guid": 4, "gumbel": 359, "handl": 462, "helper": 10, "hermitian": 10, "hfft": 107, "higher": 10, "histogram": [145, 471], "histogram_bin_edg": 146, "hstack": 147, "hyperbol": 462, "hypergeometr": 360, "hypot": 148, "ident": 149, "ifft": 108, "ifft2": 109, "ifftn": 110, "ifftshift": 111, "ihfft": 112, "iinfo": 150, "imag": [151, 298], "implement": 10, "index": [458, 464], "indic": 152, "infin": 460, "inform": [2, 8, 10], "inner": 153, "insert": 458, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 179, "invert": 154, "irfft": 113, "irfft2": 114, "irfftn": 115, "isclos": 155, "iscomplex": 156, "iscomplexobj": 157, "isfinit": 158, "isinf": 159, "isnan": 160, "isneginf": 161, "isposinf": 162, "isreal": 163, "isrealobj": 164, "isscalar": 165, "issubdtyp": 166, "issubsctyp": 167, "item": [299, 464], "items": 300, "iter": 458, "join": 461, "kind": 461, "kron": 168, "laplac": 361, "layout": 464, "left_shift": 169, "less": 170, "less_equ": 171, "level": 6, "librari": 0, "like": [458, 461], "linalg": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "linear": [6, 459], "linspac": 192, "loadtxt": 193, "log": 194, "log10": 195, "log1p": 196, "log2": 197, "logaddexp": 198, "logaddexp2": 199, "logarithm": 462, "logic": 460, "logical_and": 200, "logical_not": 201, "logical_or": 202, "logical_xor": 203, "logist": 362, "lognorm": 363, "logseri": 364, "logspac": 204, "logsumexp": 205, "lstsq": 180, "manipul": [461, 464], "mask_indic": 206, "math": 472, "mathemat": 462, "matmul": 207, "matric": 7, "matrix": [7, 459, 464], "matrix_pow": 181, "matrix_rank": 182, "max": [208, 301], "maximum": 209, "mean": [210, 302], "median": 211, "memori": 464, "meshgrid": 212, "method": 464, "mgrid": 213, "min": [214, 303], "minimum": 215, "miscellan": [8, 462, 463], "mod": 216, "modf": 217, "modul": [6, 466], "moveaxi": 218, "multi": [6, 464], "multi_dot": 183, "multinomi": 365, "multipl": 464, "multipli": 219, "multivariate_norm": 366, "nan": 460, "nanargmax": 220, "nanargmin": 221, "nancumprod": 222, "nancumsum": 223, "nanmax": 224, "nanmean": 225, "nanmin": 226, "nanprod": 227, "nanstd": 228, "nansum": 229, "nanvar": 230, "nbyte": 304, "ndarrai": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 464], "ndim": 305, "neg": 328, "negative_binomi": 367, "nextaft": 329, "noncentral_chisquar": 368, "noncentral_f": 369, "nonzero": [306, 330], "norm": [184, 459], "normal": [10, 370], "not_equ": 331, "number": [459, 461, 462], "numer": 7, "numpi": [2, 6], "ogrid": 332, "ones": 333, "ones_lik": 334, "oper": [5, 458, 460, 461, 462, 464, 472], "order": 471, "other": [459, 462, 464], "outer": 335, "output": 5, "over": 458, "overview": 3, "pack": 5, "packag": [4, 466], "pad": 465, "parallel": [0, 2], "pareto": 371, "partit": [307, 336], "permut": [372, 467], "pinv": 185, "place": 337, "point": 462, "poisson": 373, "poly1d": 466, "polynomi": 466, "polyutil": 466, "posit": 338, "power": [339, 374], "prod": [308, 340], "product": [459, 462], "proj": 341, "promot": 10, "ptp": 342, "put": [309, 343], "put_along_axi": 344, "putmask": 345, "python": 4, "qr": 186, "quick": 4, "r": 4, "rad2deg": 346, "radian": 347, "rand": 375, "randint": 376, "randn": 377, "random": [6, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 467], "random_integ": 379, "random_sampl": 380, "randomst": 348, "ranf": 381, "rang": 7, "ration": 462, "ravel": [310, 397], "rayleigh": 382, "real": [10, 311, 398], "rearrang": 461, "reciproc": 399, "reduce_hypot": 400, "refer": [1, 457], "remaind": 401, "remov": 461, "repeat": [312, 402], "reshap": [313, 403], "result_typ": 404, "rfft": 116, "rfft2": 117, "rfftfreq": 118, "rfftn": 119, "right_shift": 405, "rint": 406, "roll": 407, "rollaxi": 408, "round": [314, 409, 462], "routin": [7, 8, 10, 458, 461, 462, 463, 468], "row_stack": 410, "rsqrt": 411, "sampl": [6, 383, 467], "scikit": 4, "search": 469, "searchsort": [315, 412], "seed": 384, "select": [413, 464], "shape": [7, 316, 414, 461, 464], "shuffl": 385, "sign": 415, "signbit": 416, "simpl": 467, "sin": 417, "sinh": 418, "size": 317, "slogdet": 187, "solv": [188, 459], "sort": [318, 419, 469], "sort_complex": 420, "special": [462, 464, 470], "split": 461, "sqrt": 421, "squar": 422, "squeez": [319, 423], "stack": 424, "standard": 10, "standard_cauchi": 386, "standard_exponenti": 387, "standard_gamma": 388, "standard_norm": 389, "standard_t": 390, "start": 4, "statist": 471, "std": [320, 425], "stride": 321, "subtract": 426, "sum": [322, 427, 462], "summari": 6, "svd": 189, "swapax": [323, 428], "t": 232, "tabl": 6, "take": [324, 429], "take_along_axi": 430, "tan": 431, "tanh": 432, "tensordot": 433, "tensorinv": 190, "tensorsolv": 191, "test": [4, 8, 460], "tile": [434, 461], "trace": [325, 435], "transform": [6, 10], "transpos": [326, 436, 461], "trapz": 437, "tri": 438, "triangular": 391, "trigonometr": [462, 472], "tril": 439, "tril_indic": 440, "tril_indices_from": 441, "trim_zero": 442, "triu": 443, "triu_indic": 444, "triu_indices_from": 445, "true_divid": 446, "trunc": 447, "truth": 460, "twiddl": 472, "type": [8, 9, 10, 460, 464], "ufunc": 472, "uniform": 392, "uniqu": 448, "univers": 472, "unwrap": 449, "util": 463, "valu": [7, 460], "vander": 450, "var": [327, 451], "varianc": 471, "vdot": 452, "vector": 459, "vonmis": 393, "vstack": 453, "wald": 394, "weibul": 395, "where": 454, "wise": 5, "zero": 455, "zeros_lik": 456, "zipf": 396}})