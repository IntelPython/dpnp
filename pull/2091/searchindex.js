Search.setIndex({"alltitles": {"API Reference": [[490, null]], "Adding and removing elements": [[494, "adding-and-removing-elements"]], "Arithmetic": [[499, "arithmetic"]], "Arithmetic operations": [[495, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[497, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Manipulation Routines": [[494, null]], "Array attributes": [[497, "array-attributes"]], "Array conversion": [[497, "array-conversion"]], "Array creation routines": [[7, null]], "Array methods": [[497, "array-methods"]], "Array type testing": [[493, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[505, "available-ufuncs"]], "Averages and variances": [[504, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[494, "basic-operations"]], "Basics": [[499, "basics"]], "Binary Operations": [[5, null]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[505, "bit-twiddling-functions"]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[497, "calculation"]], "Changing array shape": [[494, "changing-array-shape"]], "Changing kind of array": [[494, "changing-kind-of-array"]], "Changing number of dimensions": [[494, "changing-number-of-dimensions"]], "Comparison": [[493, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[505, "comparison-functions"]], "Constructing arrays": [[497, "constructing-arrays"]], "Correlations": [[504, "correlations"]], "Counting": [[502, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[497, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[492, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"]], "Distributions": [[500, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[503, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exponents and logarithms": [[495, "exponents-and-logarithms"]], "Extrema finding": [[495, "extrema-finding"]], "FFT Functions": [[10, null]], "Floating functions": [[505, "floating-functions"]], "Floating point routines": [[495, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Generating index arrays": [[491, "generating-index-arrays"]], "Handling complex numbers": [[495, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[504, "histograms"]], "Hyperbolic functions": [[495, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[497, "indexing-arrays"]], "Indexing routines": [[491, null]], "Indexing-like operations": [[491, "indexing-like-operations"]], "Infinities and NaNs": [[493, "infinities-and-nans"]], "Inserting data into arrays": [[491, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[497, "item-selection-and-manipulation"]], "Iterating over arrays": [[491, "iterating-over-arrays"]], "Joining arrays": [[494, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"], [492, null]], "Logic Functions": [[493, null]], "Logic operations": [[493, "logic-operations"]], "Math operations": [[505, "math-operations"]], "Mathematical functions": [[495, null]], "Matrix and vector products": [[492, "matrix-and-vector-products"]], "Matrix eigenvalues": [[492, "matrix-eigenvalues"]], "Memory layout": [[497, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [495, "miscellaneous"]], "Miscellaneous routines": [[496, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[497, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[492, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[504, "order-statistics"]], "Other attributes": [[497, "other-attributes"]], "Other special functions": [[495, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Padding": [[498, null]], "Permutations": [[500, "permutations"]], "Poly1d": [[499, "poly1d"]], "Polynomial Module": [[499, "polynomial-module"]], "Polynomial Package": [[499, "polynomial-package"]], "Polynomials": [[499, null]], "Polyutils": [[499, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random Sampling (dpnp.random)": [[500, null]], "Random generator": [[500, "random-generator"]], "Rational routines": [[495, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[494, "rearranging-elements"]], "Rounding": [[495, "rounding"]], "Routines": [[501, null]], "Searching": [[502, "searching"]], "Shape manipulation": [[497, "shape-manipulation"]], "Simple random data": [[500, "simple-random-data"]], "Solving linear equations": [[492, "solving-linear-equations"]], "Sorting": [[502, "sorting"]], "Sorting, Searching, and Counting": [[502, null]], "Special Functions": [[503, null]], "Special methods": [[497, "special-methods"]], "Splitting arrays": [[494, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistical Functions": [[504, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[495, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[494, "tiling-arrays"]], "Transpose-like operations": [[494, "transpose-like-operations"]], "Trigonometric functions": [[495, "trigonometric-functions"], [505, "trigonometric-functions"]], "Truth value testing": [[493, "truth-value-testing"]], "Universal Functions (ufunc)": [[505, null]], "Utility": [[496, "utility"]], "dpnp.abs": [[11, null]], "dpnp.absolute": [[12, null]], "dpnp.acos": [[13, null]], "dpnp.acosh": [[14, null]], "dpnp.add": [[15, null]], "dpnp.all": [[16, null]], "dpnp.allclose": [[17, null]], "dpnp.amax": [[18, null]], "dpnp.amin": [[19, null]], "dpnp.angle": [[20, null]], "dpnp.any": [[21, null]], "dpnp.append": [[22, null]], "dpnp.arange": [[23, null]], "dpnp.arccos": [[24, null]], "dpnp.arccosh": [[25, null]], "dpnp.arcsin": [[26, null]], "dpnp.arcsinh": [[27, null]], "dpnp.arctan": [[28, null]], "dpnp.arctan2": [[29, null]], "dpnp.arctanh": [[30, null]], "dpnp.argmax": [[31, null]], "dpnp.argmin": [[32, null]], "dpnp.argsort": [[33, null]], "dpnp.argwhere": [[34, null]], "dpnp.around": [[35, null]], "dpnp.array": [[36, null]], "dpnp.array_equal": [[37, null]], "dpnp.array_equiv": [[38, null]], "dpnp.array_split": [[39, null]], "dpnp.asanyarray": [[40, null]], "dpnp.asarray": [[41, null]], "dpnp.asarray_chkfinite": [[42, null]], "dpnp.ascontiguousarray": [[43, null]], "dpnp.asfarray": [[44, null]], "dpnp.asfortranarray": [[45, null]], "dpnp.asin": [[46, null]], "dpnp.asinh": [[47, null]], "dpnp.asnumpy": [[48, null]], "dpnp.astype": [[49, null]], "dpnp.atan": [[50, null]], "dpnp.atan2": [[51, null]], "dpnp.atanh": [[52, null]], "dpnp.atleast_1d": [[53, null]], "dpnp.atleast_2d": [[54, null]], "dpnp.atleast_3d": [[55, null]], "dpnp.average": [[56, null]], "dpnp.bincount": [[57, null]], "dpnp.bitwise_and": [[58, null]], "dpnp.bitwise_not": [[59, null]], "dpnp.bitwise_or": [[60, null]], "dpnp.bitwise_xor": [[61, null]], "dpnp.broadcast_arrays": [[62, null]], "dpnp.broadcast_to": [[63, null]], "dpnp.can_cast": [[64, null]], "dpnp.cbrt": [[65, null]], "dpnp.ceil": [[66, null]], "dpnp.choose": [[67, null]], "dpnp.clip": [[68, null]], "dpnp.column_stack": [[69, null]], "dpnp.concat": [[70, null]], "dpnp.concatenate": [[71, null]], "dpnp.conj": [[72, null]], "dpnp.conjugate": [[73, null]], "dpnp.convolve": [[74, null]], "dpnp.copy": [[75, null]], "dpnp.copysign": [[76, null]], "dpnp.copyto": [[77, null]], "dpnp.correlate": [[78, null]], "dpnp.cos": [[79, null]], "dpnp.cosh": [[80, null]], "dpnp.count_nonzero": [[81, null]], "dpnp.cov": [[82, null]], "dpnp.cross": [[83, null]], "dpnp.cumlogsumexp": [[84, null]], "dpnp.cumprod": [[85, null]], "dpnp.cumsum": [[86, null]], "dpnp.deg2rad": [[87, null]], "dpnp.degrees": [[88, null]], "dpnp.diag": [[89, null]], "dpnp.diag_indices": [[90, null]], "dpnp.diag_indices_from": [[91, null]], "dpnp.diagflat": [[92, null]], "dpnp.diagonal": [[93, null]], "dpnp.diff": [[94, null]], "dpnp.digitize": [[95, null]], "dpnp.divide": [[96, null]], "dpnp.dot": [[97, null]], "dpnp.dpnp_array.dpnp_array": [[98, null]], "dpnp.dsplit": [[99, null]], "dpnp.dstack": [[100, null]], "dpnp.dtype": [[101, null]], "dpnp.ediff1d": [[102, null]], "dpnp.einsum": [[103, null]], "dpnp.einsum_path": [[104, null]], "dpnp.empty": [[105, null]], "dpnp.empty_like": [[106, null]], "dpnp.equal": [[107, null]], "dpnp.erf": [[108, null]], "dpnp.exp": [[109, null]], "dpnp.exp2": [[110, null]], "dpnp.expand_dims": [[111, null]], "dpnp.expm1": [[112, null]], "dpnp.extract": [[113, null]], "dpnp.eye": [[114, null]], "dpnp.fabs": [[115, null]], "dpnp.fft.fft": [[116, null]], "dpnp.fft.fft2": [[117, null]], "dpnp.fft.fftfreq": [[118, null]], "dpnp.fft.fftn": [[119, null]], "dpnp.fft.fftshift": [[120, null]], "dpnp.fft.hfft": [[121, null]], "dpnp.fft.ifft": [[122, null]], "dpnp.fft.ifft2": [[123, null]], "dpnp.fft.ifftn": [[124, null]], "dpnp.fft.ifftshift": [[125, null]], "dpnp.fft.ihfft": [[126, null]], "dpnp.fft.irfft": [[127, null]], "dpnp.fft.irfft2": [[128, null]], "dpnp.fft.irfftn": [[129, null]], "dpnp.fft.rfft": [[130, null]], "dpnp.fft.rfft2": [[131, null]], "dpnp.fft.rfftfreq": [[132, null]], "dpnp.fft.rfftn": [[133, null]], "dpnp.fill_diagonal": [[134, null]], "dpnp.finfo": [[135, null]], "dpnp.fix": [[136, null]], "dpnp.flatiter": [[137, null]], "dpnp.flatnonzero": [[138, null]], "dpnp.flip": [[139, null]], "dpnp.fliplr": [[140, null]], "dpnp.flipud": [[141, null]], "dpnp.float_power": [[142, null]], "dpnp.floor": [[143, null]], "dpnp.floor_divide": [[144, null]], "dpnp.fmax": [[145, null]], "dpnp.fmin": [[146, null]], "dpnp.fmod": [[147, null]], "dpnp.from_dlpack": [[148, null]], "dpnp.frombuffer": [[149, null]], "dpnp.fromfile": [[150, null]], "dpnp.fromfunction": [[151, null]], "dpnp.fromiter": [[152, null]], "dpnp.fromstring": [[153, null]], "dpnp.full": [[154, null]], "dpnp.full_like": [[155, null]], "dpnp.gcd": [[156, null]], "dpnp.geomspace": [[157, null]], "dpnp.get_include": [[158, null]], "dpnp.gradient": [[159, null]], "dpnp.greater": [[160, null]], "dpnp.greater_equal": [[161, null]], "dpnp.heaviside": [[162, null]], "dpnp.histogram": [[163, null]], "dpnp.histogram_bin_edges": [[164, null]], "dpnp.hsplit": [[165, null]], "dpnp.hstack": [[166, null]], "dpnp.hypot": [[167, null]], "dpnp.identity": [[168, null]], "dpnp.iinfo": [[169, null]], "dpnp.imag": [[170, null]], "dpnp.indices": [[171, null]], "dpnp.inner": [[172, null]], "dpnp.invert": [[173, null]], "dpnp.isclose": [[174, null]], "dpnp.iscomplex": [[175, null]], "dpnp.iscomplexobj": [[176, null]], "dpnp.isfinite": [[177, null]], "dpnp.isinf": [[178, null]], "dpnp.isnan": [[179, null]], "dpnp.isneginf": [[180, null]], "dpnp.isposinf": [[181, null]], "dpnp.isreal": [[182, null]], "dpnp.isrealobj": [[183, null]], "dpnp.isscalar": [[184, null]], "dpnp.issubdtype": [[185, null]], "dpnp.ix_": [[186, null]], "dpnp.kron": [[187, null]], "dpnp.lcm": [[188, null]], "dpnp.left_shift": [[189, null]], "dpnp.less": [[190, null]], "dpnp.less_equal": [[191, null]], "dpnp.linalg.cholesky": [[192, null]], "dpnp.linalg.cond": [[193, null]], "dpnp.linalg.det": [[194, null]], "dpnp.linalg.eig": [[195, null]], "dpnp.linalg.eigh": [[196, null]], "dpnp.linalg.eigvals": [[197, null]], "dpnp.linalg.eigvalsh": [[198, null]], "dpnp.linalg.inv": [[199, null]], "dpnp.linalg.lstsq": [[200, null]], "dpnp.linalg.matrix_power": [[201, null]], "dpnp.linalg.matrix_rank": [[202, null]], "dpnp.linalg.multi_dot": [[203, null]], "dpnp.linalg.norm": [[204, null]], "dpnp.linalg.pinv": [[205, null]], "dpnp.linalg.qr": [[206, null]], "dpnp.linalg.slogdet": [[207, null]], "dpnp.linalg.solve": [[208, null]], "dpnp.linalg.svd": [[209, null]], "dpnp.linalg.tensorinv": [[210, null]], "dpnp.linalg.tensorsolve": [[211, null]], "dpnp.linspace": [[212, null]], "dpnp.loadtxt": [[213, null]], "dpnp.log": [[214, null]], "dpnp.log10": [[215, null]], "dpnp.log1p": [[216, null]], "dpnp.log2": [[217, null]], "dpnp.logaddexp": [[218, null]], "dpnp.logaddexp2": [[219, null]], "dpnp.logical_and": [[220, null]], "dpnp.logical_not": [[221, null]], "dpnp.logical_or": [[222, null]], "dpnp.logical_xor": [[223, null]], "dpnp.logspace": [[224, null]], "dpnp.logsumexp": [[225, null]], "dpnp.mask_indices": [[226, null]], "dpnp.matmul": [[227, null]], "dpnp.max": [[228, null]], "dpnp.maximum": [[229, null]], "dpnp.mean": [[230, null]], "dpnp.median": [[231, null]], "dpnp.meshgrid": [[232, null]], "dpnp.mgrid": [[233, null]], "dpnp.min": [[234, null]], "dpnp.minimum": [[235, null]], "dpnp.mod": [[236, null]], "dpnp.modf": [[237, null]], "dpnp.moveaxis": [[238, null]], "dpnp.multiply": [[239, null]], "dpnp.nan_to_num": [[240, null]], "dpnp.nanargmax": [[241, null]], "dpnp.nanargmin": [[242, null]], "dpnp.nancumprod": [[243, null]], "dpnp.nancumsum": [[244, null]], "dpnp.nanmax": [[245, null]], "dpnp.nanmean": [[246, null]], "dpnp.nanmin": [[247, null]], "dpnp.nanprod": [[248, null]], "dpnp.nanstd": [[249, null]], "dpnp.nansum": [[250, null]], "dpnp.nanvar": [[251, null]], "dpnp.ndarray": [[252, null]], "dpnp.ndarray.T": [[253, null]], "dpnp.ndarray.__abs__": [[254, null]], "dpnp.ndarray.__add__": [[255, null]], "dpnp.ndarray.__and__": [[256, null]], "dpnp.ndarray.__bool__": [[257, null]], "dpnp.ndarray.__complex__": [[258, null]], "dpnp.ndarray.__copy__": [[259, null]], "dpnp.ndarray.__eq__": [[260, null]], "dpnp.ndarray.__float__": [[261, null]], "dpnp.ndarray.__floordiv__": [[262, null]], "dpnp.ndarray.__ge__": [[263, null]], "dpnp.ndarray.__getitem__": [[264, null]], "dpnp.ndarray.__gt__": [[265, null]], "dpnp.ndarray.__iadd__": [[266, null]], "dpnp.ndarray.__iand__": [[267, null]], "dpnp.ndarray.__ifloordiv__": [[268, null]], "dpnp.ndarray.__ilshift__": [[269, null]], "dpnp.ndarray.__imod__": [[270, null]], "dpnp.ndarray.__imul__": [[271, null]], "dpnp.ndarray.__int__": [[272, null]], "dpnp.ndarray.__invert__": [[273, null]], "dpnp.ndarray.__ior__": [[274, null]], "dpnp.ndarray.__ipow__": [[275, null]], "dpnp.ndarray.__irshift__": [[276, null]], "dpnp.ndarray.__isub__": [[277, null]], "dpnp.ndarray.__itruediv__": [[278, null]], "dpnp.ndarray.__ixor__": [[279, null]], "dpnp.ndarray.__le__": [[280, null]], "dpnp.ndarray.__len__": [[281, null]], "dpnp.ndarray.__lshift__": [[282, null]], "dpnp.ndarray.__lt__": [[283, null]], "dpnp.ndarray.__matmul__": [[284, null]], "dpnp.ndarray.__mod__": [[285, null]], "dpnp.ndarray.__mul__": [[286, null]], "dpnp.ndarray.__ne__": [[287, null]], "dpnp.ndarray.__neg__": [[288, null]], "dpnp.ndarray.__new__": [[289, null]], "dpnp.ndarray.__or__": [[290, null]], "dpnp.ndarray.__pos__": [[291, null]], "dpnp.ndarray.__pow__": [[292, null]], "dpnp.ndarray.__repr__": [[293, null]], "dpnp.ndarray.__rshift__": [[294, null]], "dpnp.ndarray.__setitem__": [[295, null]], "dpnp.ndarray.__str__": [[296, null]], "dpnp.ndarray.__sub__": [[297, null]], "dpnp.ndarray.__truediv__": [[298, null]], "dpnp.ndarray.__xor__": [[299, null]], "dpnp.ndarray.all": [[300, null]], "dpnp.ndarray.any": [[301, null]], "dpnp.ndarray.argmax": [[302, null]], "dpnp.ndarray.argmin": [[303, null]], "dpnp.ndarray.argsort": [[304, null]], "dpnp.ndarray.astype": [[305, null]], "dpnp.ndarray.choose": [[306, null]], "dpnp.ndarray.clip": [[307, null]], "dpnp.ndarray.conj": [[308, null]], "dpnp.ndarray.conjugate": [[309, null]], "dpnp.ndarray.copy": [[310, null]], "dpnp.ndarray.cumprod": [[311, null]], "dpnp.ndarray.cumsum": [[312, null]], "dpnp.ndarray.diagonal": [[313, null]], "dpnp.ndarray.dtype": [[314, null]], "dpnp.ndarray.fill": [[315, null]], "dpnp.ndarray.flags": [[316, null]], "dpnp.ndarray.flat": [[317, null]], "dpnp.ndarray.flatten": [[318, null]], "dpnp.ndarray.imag": [[319, null]], "dpnp.ndarray.item": [[320, null]], "dpnp.ndarray.itemsize": [[321, null]], "dpnp.ndarray.max": [[322, null]], "dpnp.ndarray.mean": [[323, null]], "dpnp.ndarray.min": [[324, null]], "dpnp.ndarray.nbytes": [[325, null]], "dpnp.ndarray.ndim": [[326, null]], "dpnp.ndarray.nonzero": [[327, null]], "dpnp.ndarray.partition": [[328, null]], "dpnp.ndarray.prod": [[329, null]], "dpnp.ndarray.put": [[330, null]], "dpnp.ndarray.ravel": [[331, null]], "dpnp.ndarray.real": [[332, null]], "dpnp.ndarray.repeat": [[333, null]], "dpnp.ndarray.reshape": [[334, null]], "dpnp.ndarray.round": [[335, null]], "dpnp.ndarray.searchsorted": [[336, null]], "dpnp.ndarray.shape": [[337, null]], "dpnp.ndarray.size": [[338, null]], "dpnp.ndarray.sort": [[339, null]], "dpnp.ndarray.squeeze": [[340, null]], "dpnp.ndarray.std": [[341, null]], "dpnp.ndarray.strides": [[342, null]], "dpnp.ndarray.sum": [[343, null]], "dpnp.ndarray.swapaxes": [[344, null]], "dpnp.ndarray.take": [[345, null]], "dpnp.ndarray.trace": [[346, null]], "dpnp.ndarray.transpose": [[347, null]], "dpnp.ndarray.var": [[348, null]], "dpnp.ndim": [[349, null]], "dpnp.negative": [[350, null]], "dpnp.nextafter": [[351, null]], "dpnp.nonzero": [[352, null]], "dpnp.not_equal": [[353, null]], "dpnp.ogrid": [[354, null]], "dpnp.ones": [[355, null]], "dpnp.ones_like": [[356, null]], "dpnp.outer": [[357, null]], "dpnp.partition": [[358, null]], "dpnp.permute_dims": [[359, null]], "dpnp.place": [[360, null]], "dpnp.positive": [[361, null]], "dpnp.pow": [[362, null]], "dpnp.power": [[363, null]], "dpnp.prod": [[364, null]], "dpnp.proj": [[365, null]], "dpnp.ptp": [[366, null]], "dpnp.put": [[367, null]], "dpnp.put_along_axis": [[368, null]], "dpnp.putmask": [[369, null]], "dpnp.rad2deg": [[370, null]], "dpnp.radians": [[371, null]], "dpnp.random.RandomState": [[372, null]], "dpnp.random.beta": [[373, null]], "dpnp.random.binomial": [[374, null]], "dpnp.random.bytes": [[375, null]], "dpnp.random.chisquare": [[376, null]], "dpnp.random.choice": [[377, null]], "dpnp.random.dirichlet": [[378, null]], "dpnp.random.exponential": [[379, null]], "dpnp.random.f": [[380, null]], "dpnp.random.gamma": [[381, null]], "dpnp.random.geometric": [[382, null]], "dpnp.random.gumbel": [[383, null]], "dpnp.random.hypergeometric": [[384, null]], "dpnp.random.laplace": [[385, null]], "dpnp.random.logistic": [[386, null]], "dpnp.random.lognormal": [[387, null]], "dpnp.random.logseries": [[388, null]], "dpnp.random.multinomial": [[389, null]], "dpnp.random.multivariate_normal": [[390, null]], "dpnp.random.negative_binomial": [[391, null]], "dpnp.random.noncentral_chisquare": [[392, null]], "dpnp.random.noncentral_f": [[393, null]], "dpnp.random.normal": [[394, null]], "dpnp.random.pareto": [[395, null]], "dpnp.random.permutation": [[396, null]], "dpnp.random.poisson": [[397, null]], "dpnp.random.power": [[398, null]], "dpnp.random.rand": [[399, null]], "dpnp.random.randint": [[400, null]], "dpnp.random.randn": [[401, null]], "dpnp.random.random": [[402, null]], "dpnp.random.random_integers": [[403, null]], "dpnp.random.random_sample": [[404, null]], "dpnp.random.ranf": [[405, null]], "dpnp.random.rayleigh": [[406, null]], "dpnp.random.sample": [[407, null]], "dpnp.random.seed": [[408, null]], "dpnp.random.shuffle": [[409, null]], "dpnp.random.standard_cauchy": [[410, null]], "dpnp.random.standard_exponential": [[411, null]], "dpnp.random.standard_gamma": [[412, null]], "dpnp.random.standard_normal": [[413, null]], "dpnp.random.standard_t": [[414, null]], "dpnp.random.triangular": [[415, null]], "dpnp.random.uniform": [[416, null]], "dpnp.random.vonmises": [[417, null]], "dpnp.random.wald": [[418, null]], "dpnp.random.weibull": [[419, null]], "dpnp.random.zipf": [[420, null]], "dpnp.ravel": [[421, null]], "dpnp.ravel_multi_index": [[422, null]], "dpnp.real": [[423, null]], "dpnp.real_if_close": [[424, null]], "dpnp.reciprocal": [[425, null]], "dpnp.reduce_hypot": [[426, null]], "dpnp.remainder": [[427, null]], "dpnp.repeat": [[428, null]], "dpnp.require": [[429, null]], "dpnp.reshape": [[430, null]], "dpnp.resize": [[431, null]], "dpnp.result_type": [[432, null]], "dpnp.right_shift": [[433, null]], "dpnp.rint": [[434, null]], "dpnp.roll": [[435, null]], "dpnp.rollaxis": [[436, null]], "dpnp.rot90": [[437, null]], "dpnp.round": [[438, null]], "dpnp.row_stack": [[439, null]], "dpnp.rsqrt": [[440, null]], "dpnp.searchsorted": [[441, null]], "dpnp.select": [[442, null]], "dpnp.shape": [[443, null]], "dpnp.sign": [[444, null]], "dpnp.signbit": [[445, null]], "dpnp.sin": [[446, null]], "dpnp.sinh": [[447, null]], "dpnp.size": [[448, null]], "dpnp.sort": [[449, null]], "dpnp.sort_complex": [[450, null]], "dpnp.split": [[451, null]], "dpnp.sqrt": [[452, null]], "dpnp.square": [[453, null]], "dpnp.squeeze": [[454, null]], "dpnp.stack": [[455, null]], "dpnp.std": [[456, null]], "dpnp.subtract": [[457, null]], "dpnp.sum": [[458, null]], "dpnp.swapaxes": [[459, null]], "dpnp.take": [[460, null]], "dpnp.take_along_axis": [[461, null]], "dpnp.tan": [[462, null]], "dpnp.tanh": [[463, null]], "dpnp.tensordot": [[464, null]], "dpnp.tile": [[465, null]], "dpnp.trace": [[466, null]], "dpnp.transpose": [[467, null]], "dpnp.trapezoid": [[468, null]], "dpnp.tri": [[469, null]], "dpnp.tril": [[470, null]], "dpnp.tril_indices": [[471, null]], "dpnp.tril_indices_from": [[472, null]], "dpnp.trim_zeros": [[473, null]], "dpnp.triu": [[474, null]], "dpnp.triu_indices": [[475, null]], "dpnp.triu_indices_from": [[476, null]], "dpnp.true_divide": [[477, null]], "dpnp.trunc": [[478, null]], "dpnp.unique": [[479, null]], "dpnp.unravel_index": [[480, null]], "dpnp.unwrap": [[481, null]], "dpnp.vander": [[482, null]], "dpnp.var": [[483, null]], "dpnp.vdot": [[484, null]], "dpnp.vsplit": [[485, null]], "dpnp.vstack": [[486, null]], "dpnp.where": [[487, null]], "dpnp.zeros": [[488, null]], "dpnp.zeros_like": [[489, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/pad", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/pad.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[254, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[255, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[256, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[257, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[258, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[259, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__eq__", false]], "__eq__() (dpnp.dtype method)": [[101, "dpnp.dtype.__eq__", false]], "__eq__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__eq__", false]], "__eq__() (dpnp.ndarray method)": [[260, "dpnp.ndarray.__eq__", false]], "__eq__() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.__eq__", false]], "__float__() (dpnp.ndarray method)": [[261, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[262, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__ge__", false]], "__ge__() (dpnp.dtype method)": [[101, "dpnp.dtype.__ge__", false]], "__ge__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__ge__", false]], "__ge__() (dpnp.ndarray method)": [[263, "dpnp.ndarray.__ge__", false]], "__ge__() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.__ge__", false]], "__getitem__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__getitem__", false]], "__getitem__() (dpnp.dtype method)": [[101, "dpnp.dtype.__getitem__", false]], "__getitem__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__getitem__", false]], "__getitem__() (dpnp.ndarray method)": [[264, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__gt__", false]], "__gt__() (dpnp.dtype method)": [[101, "dpnp.dtype.__gt__", false]], "__gt__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__gt__", false]], "__gt__() (dpnp.ndarray method)": [[265, "dpnp.ndarray.__gt__", false]], "__gt__() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[266, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[267, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[268, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[269, "dpnp.ndarray.__ilshift__", false]], "__imod__() (dpnp.ndarray method)": [[270, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[271, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[272, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[273, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[274, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[275, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[276, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[277, "dpnp.ndarray.__isub__", false]], "__iter__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__iter__", false]], "__itruediv__() (dpnp.ndarray method)": [[278, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[279, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__le__", false]], "__le__() (dpnp.dtype method)": [[101, "dpnp.dtype.__le__", false]], "__le__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__le__", false]], "__le__() (dpnp.ndarray method)": [[280, "dpnp.ndarray.__le__", false]], "__le__() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.__le__", false]], "__len__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__len__", false]], "__len__() (dpnp.dtype method)": [[101, "dpnp.dtype.__len__", false]], "__len__() (dpnp.ndarray method)": [[281, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[282, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__lt__", false]], "__lt__() (dpnp.dtype method)": [[101, "dpnp.dtype.__lt__", false]], "__lt__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__lt__", false]], "__lt__() (dpnp.ndarray method)": [[283, "dpnp.ndarray.__lt__", false]], "__lt__() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[284, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[285, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[286, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__ne__", false]], "__ne__() (dpnp.dtype method)": [[101, "dpnp.dtype.__ne__", false]], "__ne__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__ne__", false]], "__ne__() (dpnp.ndarray method)": [[287, "dpnp.ndarray.__ne__", false]], "__ne__() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[288, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[289, "dpnp.ndarray.__new__", false]], "__next__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__next__", false]], "__or__() (dpnp.ndarray method)": [[290, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[291, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[292, "dpnp.ndarray.__pow__", false]], "__repr__() (dpnp.ndarray method)": [[293, "dpnp.ndarray.__repr__", false]], "__rshift__() (dpnp.ndarray method)": [[294, "dpnp.ndarray.__rshift__", false]], "__setitem__() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.__setitem__", false]], "__setitem__() (dpnp.flatiter method)": [[137, "dpnp.flatiter.__setitem__", false]], "__setitem__() (dpnp.ndarray method)": [[295, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[296, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[297, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[298, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[299, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[11, "dpnp.abs", false]], "absolute() (in module dpnp)": [[12, "dpnp.absolute", false]], "acos() (in module dpnp)": [[13, "dpnp.acos", false]], "acosh() (in module dpnp)": [[14, "dpnp.acosh", false]], "add() (in module dpnp)": [[15, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[101, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[300, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[16, "dpnp.all", false]], "allclose() (in module dpnp)": [[17, "dpnp.allclose", false]], "amax() (in module dpnp)": [[18, "dpnp.amax", false]], "amin() (in module dpnp)": [[19, "dpnp.amin", false]], "angle() (in module dpnp)": [[20, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[301, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[21, "dpnp.any", false]], "append() (in module dpnp)": [[22, "dpnp.append", false]], "arange() (in module dpnp)": [[23, "dpnp.arange", false]], "arccos() (in module dpnp)": [[24, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[25, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[26, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[27, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[28, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[29, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[30, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[302, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[31, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[303, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[32, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[304, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[33, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[34, "dpnp.argwhere", false]], "around() (in module dpnp)": [[35, "dpnp.around", false]], "array() (in module dpnp)": [[36, "dpnp.array", false]], "array_equal() (in module dpnp)": [[37, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[38, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[39, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[40, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[41, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[42, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[43, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[44, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[45, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[46, "dpnp.asin", false]], "asinh() (in module dpnp)": [[47, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (in module dpnp)": [[48, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[305, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[49, "dpnp.astype", false]], "atan() (in module dpnp)": [[50, "dpnp.atan", false]], "atan2() (in module dpnp)": [[51, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[52, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[53, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[54, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[55, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[56, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[101, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[373, "dpnp.random.beta", false]], "bincount() (in module dpnp)": [[57, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[374, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[58, "dpnp.bitwise_and", false]], "bitwise_not() (in module dpnp)": [[59, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[60, "dpnp.bitwise_or", false]], "bitwise_xor() (in module dpnp)": [[61, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[62, "dpnp.broadcast_arrays", false]], "broadcast_to() (in module dpnp)": [[63, "dpnp.broadcast_to", false]], "byteorder (dpnp.dtype attribute)": [[101, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[375, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[64, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[65, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[66, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[101, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[376, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[377, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[192, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[306, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[67, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[307, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[68, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[69, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[70, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[71, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[193, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[308, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[72, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[309, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[73, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[74, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[310, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[75, "dpnp.copy", false]], "copysign() (in module dpnp)": [[76, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[77, "dpnp.copyto", false]], "correlate() (in module dpnp)": [[78, "dpnp.correlate", false]], "cos() (in module dpnp)": [[79, "dpnp.cos", false]], "cosh() (in module dpnp)": [[80, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[81, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[82, "dpnp.cov", false]], "cross() (in module dpnp)": [[83, "dpnp.cross", false]], "cumlogsumexp() (in module dpnp)": [[84, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[311, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[85, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[312, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[86, "dpnp.cumsum", false]], "deg2rad() (in module dpnp)": [[87, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[88, "dpnp.degrees", false]], "descr (dpnp.dtype attribute)": [[101, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[194, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.device", false]], "diag() (in module dpnp)": [[89, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[90, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[91, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[92, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[313, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[93, "dpnp.diagonal", false]], "diff() (in module dpnp)": [[94, "dpnp.diff", false]], "digitize() (in module dpnp)": [[95, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[378, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[96, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (in module dpnp)": [[97, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp.fft": [[10, "module-dpnp.fft", false]], "dpnp.random": [[500, "module-dpnp.random", false]], "dpnp_array (class in dpnp.dpnp_array)": [[98, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[99, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[100, "dpnp.dstack", false]], "dtype (class in dpnp)": [[101, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[314, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[102, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[195, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[196, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[197, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[198, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[103, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[104, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[105, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[106, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[107, "dpnp.equal", false]], "erf() (in module dpnp)": [[108, "dpnp.erf", false]], "exp() (in module dpnp)": [[109, "dpnp.exp", false]], "exp2() (in module dpnp)": [[110, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[111, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[112, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[379, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[113, "dpnp.extract", false]], "eye() (in module dpnp)": [[114, "dpnp.eye", false]], "f() (in module dpnp.random)": [[380, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[115, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[116, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[117, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[118, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[119, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[120, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[101, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[315, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[134, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[135, "dpnp.finfo", false]], "fix() (in module dpnp)": [[136, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[101, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[316, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[317, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[137, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[138, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[318, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[139, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[140, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[141, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[142, "dpnp.float_power", false]], "floor() (in module dpnp)": [[143, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[144, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[145, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[146, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[147, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[148, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[149, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[150, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[151, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[152, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[153, "dpnp.fromstring", false]], "full() (in module dpnp)": [[154, "dpnp.full", false]], "full_like() (in module dpnp)": [[155, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[381, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[156, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[382, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[157, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_include() (in module dpnp)": [[158, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[159, "dpnp.gradient", false]], "greater() (in module dpnp)": [[160, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[161, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[383, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[101, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[162, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[121, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[163, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[164, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[165, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[166, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[384, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[167, "dpnp.hypot", false]], "identity() (in module dpnp)": [[168, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[122, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[123, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[124, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[125, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[126, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[169, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[319, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[170, "dpnp.imag", false]], "indices() (in module dpnp)": [[171, "dpnp.indices", false]], "inner() (in module dpnp)": [[172, "dpnp.inner", false]], "inv() (in module dpnp.linalg)": [[199, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[173, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[127, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[128, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[129, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[101, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[101, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[174, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[175, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[176, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[177, "dpnp.isfinite", false]], "isinf() (in module dpnp)": [[178, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[179, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[101, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[180, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[181, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[182, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[183, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[184, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[185, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[320, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[101, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[321, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[186, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[101, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[187, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[385, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[188, "dpnp.lcm", false]], "left_shift() (in module dpnp)": [[189, "dpnp.left_shift", false]], "less() (in module dpnp)": [[190, "dpnp.less", false]], "less_equal() (in module dpnp)": [[191, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[212, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[213, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[214, "dpnp.log", false]], "log10() (in module dpnp)": [[215, "dpnp.log10", false]], "log1p() (in module dpnp)": [[216, "dpnp.log1p", false]], "log2() (in module dpnp)": [[217, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[218, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[219, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[220, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[221, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[222, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[223, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[386, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[387, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[388, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[224, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[225, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[200, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[226, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[227, "dpnp.matmul", false]], "matrix_power() (in module dpnp.linalg)": [[201, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[202, "dpnp.linalg.matrix_rank", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[322, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[228, "dpnp.max", false]], "maximum() (in module dpnp)": [[229, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[323, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[230, "dpnp.mean", false]], "median() (in module dpnp)": [[231, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[232, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[101, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[233, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[324, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[234, "dpnp.min", false]], "minimum() (in module dpnp)": [[235, "dpnp.minimum", false]], "mod() (in module dpnp)": [[236, "dpnp.mod", false]], "modf() (in module dpnp)": [[237, "dpnp.modf", false]], "module": [[3, "module-dpnp", false], [10, "module-dpnp.fft", false], [500, "module-dpnp.random", false]], "moveaxis() (in module dpnp)": [[238, "dpnp.moveaxis", false]], "multi_dot() (in module dpnp.linalg)": [[203, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[389, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[239, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[390, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[101, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[101, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[240, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[241, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[242, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[243, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[244, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[245, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[246, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[247, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[248, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[249, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[250, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[251, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[325, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[252, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[101, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[326, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[349, "dpnp.ndim", false]], "negative() (in module dpnp)": [[350, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[391, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[101, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[351, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[392, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[393, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[327, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[352, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[204, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[394, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[353, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[101, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[354, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[355, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[356, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[357, "dpnp.outer", false]], "pareto() (in module dpnp.random)": [[395, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[328, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[358, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[396, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[359, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[205, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[360, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[397, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[361, "dpnp.positive", false]], "pow() (in module dpnp)": [[362, "dpnp.pow", false]], "power() (in module dpnp)": [[363, "dpnp.power", false]], "power() (in module dpnp.random)": [[398, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[329, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[364, "dpnp.prod", false]], "proj() (in module dpnp)": [[365, "dpnp.proj", false]], "ptp() (in module dpnp)": [[366, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[330, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[367, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[368, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[369, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[206, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[370, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[371, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[399, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[400, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[401, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[402, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[403, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[404, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[372, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[405, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[331, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[421, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[422, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[406, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[332, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[423, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[424, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[425, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[426, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[427, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[333, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[428, "dpnp.repeat", false]], "require() (in module dpnp)": [[429, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[334, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[430, "dpnp.reshape", false]], "resize() (in module dpnp)": [[431, "dpnp.resize", false]], "result_type() (in module dpnp)": [[432, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[130, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[131, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[132, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[133, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[433, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[434, "dpnp.rint", false]], "roll() (in module dpnp)": [[435, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[436, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[437, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[335, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[438, "dpnp.round", false]], "row_stack() (in module dpnp)": [[439, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[440, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[407, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[336, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[441, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[408, "dpnp.random.seed", false]], "select() (in module dpnp)": [[442, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[101, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[337, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[443, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[409, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[444, "dpnp.sign", false]], "signbit() (in module dpnp)": [[445, "dpnp.signbit", false]], "sin() (in module dpnp)": [[446, "dpnp.sin", false]], "sinh() (in module dpnp)": [[447, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[338, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[448, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[207, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[208, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[339, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[449, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[450, "dpnp.sort_complex", false]], "split() (in module dpnp)": [[451, "dpnp.split", false]], "sqrt() (in module dpnp)": [[452, "dpnp.sqrt", false]], "square() (in module dpnp)": [[453, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[340, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[454, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[455, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[410, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[411, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[412, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[413, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[414, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[341, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[456, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[101, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[342, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[101, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[457, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[343, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[458, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[209, "dpnp.linalg.svd", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[344, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[459, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[253, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[345, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[460, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[461, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[462, "dpnp.tan", false]], "tanh() (in module dpnp)": [[463, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[464, "dpnp.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[210, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[211, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[465, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[346, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[466, "dpnp.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[347, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[467, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[468, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[469, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[415, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[470, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[471, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[472, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[473, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[474, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[475, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[476, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[477, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[478, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[101, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[372, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[416, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[479, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[480, "dpnp.unravel_index", false]], "unwrap() (in module dpnp)": [[481, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array attribute)": [[98, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "vander() (in module dpnp)": [[482, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[98, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[348, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[483, "dpnp.var", false]], "vdot() (in module dpnp)": [[484, "dpnp.vdot", false]], "vonmises() (in module dpnp.random)": [[417, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[485, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[486, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[418, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[419, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[487, "dpnp.where", false]], "zeros() (in module dpnp)": [[488, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[489, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[420, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[11, 1, 1, "", "abs"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "acos"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "add"], [16, 1, 1, "", "all"], [17, 1, 1, "", "allclose"], [18, 1, 1, "", "amax"], [19, 1, 1, "", "amin"], [20, 1, 1, "", "angle"], [21, 1, 1, "", "any"], [22, 1, 1, "", "append"], [23, 1, 1, "", "arange"], [24, 1, 1, "", "arccos"], [25, 1, 1, "", "arccosh"], [26, 1, 1, "", "arcsin"], [27, 1, 1, "", "arcsinh"], [28, 1, 1, "", "arctan"], [29, 1, 1, "", "arctan2"], [30, 1, 1, "", "arctanh"], [31, 1, 1, "", "argmax"], [32, 1, 1, "", "argmin"], [33, 1, 1, "", "argsort"], [34, 1, 1, "", "argwhere"], [35, 1, 1, "", "around"], [36, 1, 1, "", "array"], [37, 1, 1, "", "array_equal"], [38, 1, 1, "", "array_equiv"], [39, 1, 1, "", "array_split"], [40, 1, 1, "", "asanyarray"], [41, 1, 1, "", "asarray"], [42, 1, 1, "", "asarray_chkfinite"], [43, 1, 1, "", "ascontiguousarray"], [44, 1, 1, "", "asfarray"], [45, 1, 1, "", "asfortranarray"], [46, 1, 1, "", "asin"], [47, 1, 1, "", "asinh"], [48, 1, 1, "", "asnumpy"], [49, 1, 1, "", "astype"], [50, 1, 1, "", "atan"], [51, 1, 1, "", "atan2"], [52, 1, 1, "", "atanh"], [53, 1, 1, "", "atleast_1d"], [54, 1, 1, "", "atleast_2d"], [55, 1, 1, "", "atleast_3d"], [56, 1, 1, "", "average"], [57, 1, 1, "", "bincount"], [58, 1, 1, "", "bitwise_and"], [59, 1, 1, "", "bitwise_not"], [60, 1, 1, "", "bitwise_or"], [61, 1, 1, "", "bitwise_xor"], [62, 1, 1, "", "broadcast_arrays"], [63, 1, 1, "", "broadcast_to"], [64, 1, 1, "", "can_cast"], [65, 1, 1, "", "cbrt"], [66, 1, 1, "", "ceil"], [67, 1, 1, "", "choose"], [68, 1, 1, "", "clip"], [69, 1, 1, "", "column_stack"], [70, 1, 1, "", "concat"], [71, 1, 1, "", "concatenate"], [72, 1, 1, "", "conj"], [73, 1, 1, "", "conjugate"], [74, 1, 1, "", "convolve"], [75, 1, 1, "", "copy"], [76, 1, 1, "", "copysign"], [77, 1, 1, "", "copyto"], [78, 1, 1, "", "correlate"], [79, 1, 1, "", "cos"], [80, 1, 1, "", "cosh"], [81, 1, 1, "", "count_nonzero"], [82, 1, 1, "", "cov"], [83, 1, 1, "", "cross"], [84, 1, 1, "", "cumlogsumexp"], [85, 1, 1, "", "cumprod"], [86, 1, 1, "", "cumsum"], [87, 1, 1, "", "deg2rad"], [88, 1, 1, "", "degrees"], [89, 1, 1, "", "diag"], [90, 1, 1, "", "diag_indices"], [91, 1, 1, "", "diag_indices_from"], [92, 1, 1, "", "diagflat"], [93, 1, 1, "", "diagonal"], [94, 1, 1, "", "diff"], [95, 1, 1, "", "digitize"], [96, 1, 1, "", "divide"], [97, 1, 1, "", "dot"], [99, 1, 1, "", "dsplit"], [100, 1, 1, "", "dstack"], [101, 2, 1, "", "dtype"], [102, 1, 1, "", "ediff1d"], [103, 1, 1, "", "einsum"], [104, 1, 1, "", "einsum_path"], [105, 1, 1, "", "empty"], [106, 1, 1, "", "empty_like"], [107, 1, 1, "", "equal"], [108, 1, 1, "", "erf"], [109, 1, 1, "", "exp"], [110, 1, 1, "", "exp2"], [111, 1, 1, "", "expand_dims"], [112, 1, 1, "", "expm1"], [113, 1, 1, "", "extract"], [114, 1, 1, "", "eye"], [115, 1, 1, "", "fabs"], [10, 0, 0, "-", "fft"], [134, 1, 1, "", "fill_diagonal"], [135, 1, 1, "", "finfo"], [136, 1, 1, "", "fix"], [137, 2, 1, "", "flatiter"], [138, 1, 1, "", "flatnonzero"], [139, 1, 1, "", "flip"], [140, 1, 1, "", "fliplr"], [141, 1, 1, "", "flipud"], [142, 1, 1, "", "float_power"], [143, 1, 1, "", "floor"], [144, 1, 1, "", "floor_divide"], [145, 1, 1, "", "fmax"], [146, 1, 1, "", "fmin"], [147, 1, 1, "", "fmod"], [148, 1, 1, "", "from_dlpack"], [149, 1, 1, "", "frombuffer"], [150, 1, 1, "", "fromfile"], [151, 1, 1, "", "fromfunction"], [152, 1, 1, "", "fromiter"], [153, 1, 1, "", "fromstring"], [154, 1, 1, "", "full"], [155, 1, 1, "", "full_like"], [156, 1, 1, "", "gcd"], [157, 1, 1, "", "geomspace"], [158, 1, 1, "", "get_include"], [159, 1, 1, "", "gradient"], [160, 1, 1, "", "greater"], [161, 1, 1, "", "greater_equal"], [162, 1, 1, "", "heaviside"], [163, 1, 1, "", "histogram"], [164, 1, 1, "", "histogram_bin_edges"], [165, 1, 1, "", "hsplit"], [166, 1, 1, "", "hstack"], [167, 1, 1, "", "hypot"], [168, 1, 1, "", "identity"], [169, 1, 1, "", "iinfo"], [170, 1, 1, "", "imag"], [171, 1, 1, "", "indices"], [172, 1, 1, "", "inner"], [173, 1, 1, "", "invert"], [174, 1, 1, "", "isclose"], [175, 1, 1, "", "iscomplex"], [176, 1, 1, "", "iscomplexobj"], [177, 1, 1, "", "isfinite"], [178, 1, 1, "", "isinf"], [179, 1, 1, "", "isnan"], [180, 1, 1, "", "isneginf"], [181, 1, 1, "", "isposinf"], [182, 1, 1, "", "isreal"], [183, 1, 1, "", "isrealobj"], [184, 1, 1, "", "isscalar"], [185, 1, 1, "", "issubdtype"], [186, 1, 1, "", "ix_"], [187, 1, 1, "", "kron"], [188, 1, 1, "", "lcm"], [189, 1, 1, "", "left_shift"], [190, 1, 1, "", "less"], [191, 1, 1, "", "less_equal"], [212, 1, 1, "", "linspace"], [213, 1, 1, "", "loadtxt"], [214, 1, 1, "", "log"], [215, 1, 1, "", "log10"], [216, 1, 1, "", "log1p"], [217, 1, 1, "", "log2"], [218, 1, 1, "", "logaddexp"], [219, 1, 1, "", "logaddexp2"], [220, 1, 1, "", "logical_and"], [221, 1, 1, "", "logical_not"], [222, 1, 1, "", "logical_or"], [223, 1, 1, "", "logical_xor"], [224, 1, 1, "", "logspace"], [225, 1, 1, "", "logsumexp"], [226, 1, 1, "", "mask_indices"], [227, 1, 1, "", "matmul"], [228, 1, 1, "", "max"], [229, 1, 1, "", "maximum"], [230, 1, 1, "", "mean"], [231, 1, 1, "", "median"], [232, 1, 1, "", "meshgrid"], [233, 5, 1, "", "mgrid"], [234, 1, 1, "", "min"], [235, 1, 1, "", "minimum"], [236, 1, 1, "", "mod"], [237, 1, 1, "", "modf"], [238, 1, 1, "", "moveaxis"], [239, 1, 1, "", "multiply"], [240, 1, 1, "", "nan_to_num"], [241, 1, 1, "", "nanargmax"], [242, 1, 1, "", "nanargmin"], [243, 1, 1, "", "nancumprod"], [244, 1, 1, "", "nancumsum"], [245, 1, 1, "", "nanmax"], [246, 1, 1, "", "nanmean"], [247, 1, 1, "", "nanmin"], [248, 1, 1, "", "nanprod"], [249, 1, 1, "", "nanstd"], [250, 1, 1, "", "nansum"], [251, 1, 1, "", "nanvar"], [252, 3, 1, "", "ndarray"], [349, 1, 1, "", "ndim"], [350, 1, 1, "", "negative"], [351, 1, 1, "", "nextafter"], [352, 1, 1, "", "nonzero"], [353, 1, 1, "", "not_equal"], [354, 5, 1, "", "ogrid"], [355, 1, 1, "", "ones"], [356, 1, 1, "", "ones_like"], [357, 1, 1, "", "outer"], [358, 1, 1, "", "partition"], [359, 1, 1, "", "permute_dims"], [360, 1, 1, "", "place"], [361, 1, 1, "", "positive"], [362, 1, 1, "", "pow"], [363, 1, 1, "", "power"], [364, 1, 1, "", "prod"], [365, 1, 1, "", "proj"], [366, 1, 1, "", "ptp"], [367, 1, 1, "", "put"], [368, 1, 1, "", "put_along_axis"], [369, 1, 1, "", "putmask"], [370, 1, 1, "", "rad2deg"], [371, 1, 1, "", "radians"], [500, 0, 0, "-", "random"], [421, 1, 1, "", "ravel"], [422, 1, 1, "", "ravel_multi_index"], [423, 1, 1, "", "real"], [424, 1, 1, "", "real_if_close"], [425, 1, 1, "", "reciprocal"], [426, 1, 1, "", "reduce_hypot"], [427, 1, 1, "", "remainder"], [428, 1, 1, "", "repeat"], [429, 1, 1, "", "require"], [430, 1, 1, "", "reshape"], [431, 1, 1, "", "resize"], [432, 1, 1, "", "result_type"], [433, 1, 1, "", "right_shift"], [434, 1, 1, "", "rint"], [435, 1, 1, "", "roll"], [436, 1, 1, "", "rollaxis"], [437, 1, 1, "", "rot90"], [438, 1, 1, "", "round"], [439, 1, 1, "", "row_stack"], [440, 1, 1, "", "rsqrt"], [441, 1, 1, "", "searchsorted"], [442, 1, 1, "", "select"], [443, 1, 1, "", "shape"], [444, 1, 1, "", "sign"], [445, 1, 1, "", "signbit"], [446, 1, 1, "", "sin"], [447, 1, 1, "", "sinh"], [448, 1, 1, "", "size"], [449, 1, 1, "", "sort"], [450, 1, 1, "", "sort_complex"], [451, 1, 1, "", "split"], [452, 1, 1, "", "sqrt"], [453, 1, 1, "", "square"], [454, 1, 1, "", "squeeze"], [455, 1, 1, "", "stack"], [456, 1, 1, "", "std"], [457, 1, 1, "", "subtract"], [458, 1, 1, "", "sum"], [459, 1, 1, "", "swapaxes"], [460, 1, 1, "", "take"], [461, 1, 1, "", "take_along_axis"], [462, 1, 1, "", "tan"], [463, 1, 1, "", "tanh"], [464, 1, 1, "", "tensordot"], [465, 1, 1, "", "tile"], [466, 1, 1, "", "trace"], [467, 1, 1, "", "transpose"], [468, 1, 1, "", "trapezoid"], [469, 1, 1, "", "tri"], [470, 1, 1, "", "tril"], [471, 1, 1, "", "tril_indices"], [472, 1, 1, "", "tril_indices_from"], [473, 1, 1, "", "trim_zeros"], [474, 1, 1, "", "triu"], [475, 1, 1, "", "triu_indices"], [476, 1, 1, "", "triu_indices_from"], [477, 1, 1, "", "true_divide"], [478, 1, 1, "", "trunc"], [479, 1, 1, "", "unique"], [480, 1, 1, "", "unravel_index"], [481, 1, 1, "", "unwrap"], [482, 1, 1, "", "vander"], [483, 1, 1, "", "var"], [484, 1, 1, "", "vdot"], [485, 1, 1, "", "vsplit"], [486, 1, 1, "", "vstack"], [487, 1, 1, "", "where"], [488, 1, 1, "", "zeros"], [489, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[98, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[98, 3, 1, "", "T"], [98, 4, 1, "", "__eq__"], [98, 4, 1, "", "__ge__"], [98, 4, 1, "", "__getitem__"], [98, 4, 1, "", "__gt__"], [98, 4, 1, "", "__le__"], [98, 4, 1, "", "__len__"], [98, 4, 1, "", "__lt__"], [98, 4, 1, "", "__ne__"], [98, 4, 1, "", "__setitem__"], [98, 4, 1, "", "all"], [98, 4, 1, "", "any"], [98, 4, 1, "", "argmax"], [98, 4, 1, "", "argmin"], [98, 4, 1, "", "argsort"], [98, 4, 1, "", "asnumpy"], [98, 4, 1, "", "astype"], [98, 4, 1, "", "choose"], [98, 4, 1, "", "clip"], [98, 4, 1, "", "conj"], [98, 4, 1, "", "conjugate"], [98, 4, 1, "", "copy"], [98, 4, 1, "", "cumprod"], [98, 4, 1, "", "cumsum"], [98, 3, 1, "", "device"], [98, 4, 1, "", "diagonal"], [98, 4, 1, "", "dot"], [98, 3, 1, "", "dtype"], [98, 4, 1, "", "fill"], [98, 3, 1, "", "flags"], [98, 3, 1, "", "flat"], [98, 4, 1, "", "flatten"], [98, 4, 1, "", "get_array"], [98, 3, 1, "", "imag"], [98, 4, 1, "", "item"], [98, 3, 1, "", "itemsize"], [98, 4, 1, "", "max"], [98, 4, 1, "", "mean"], [98, 4, 1, "", "min"], [98, 3, 1, "", "nbytes"], [98, 3, 1, "", "ndim"], [98, 4, 1, "", "nonzero"], [98, 4, 1, "", "partition"], [98, 4, 1, "", "prod"], [98, 4, 1, "", "put"], [98, 4, 1, "", "ravel"], [98, 3, 1, "", "real"], [98, 4, 1, "", "repeat"], [98, 4, 1, "", "reshape"], [98, 4, 1, "", "round"], [98, 4, 1, "", "searchsorted"], [98, 3, 1, "", "shape"], [98, 3, 1, "", "size"], [98, 4, 1, "", "sort"], [98, 4, 1, "", "squeeze"], [98, 4, 1, "", "std"], [98, 3, 1, "", "strides"], [98, 4, 1, "", "sum"], [98, 4, 1, "", "swapaxes"], [98, 3, 1, "", "sycl_context"], [98, 3, 1, "", "sycl_device"], [98, 3, 1, "", "sycl_queue"], [98, 4, 1, "", "take"], [98, 4, 1, "", "to_device"], [98, 4, 1, "", "trace"], [98, 4, 1, "", "transpose"], [98, 3, 1, "", "usm_type"], [98, 4, 1, "", "var"]], "dpnp.dtype": [[101, 4, 1, "", "__eq__"], [101, 4, 1, "", "__ge__"], [101, 4, 1, "", "__getitem__"], [101, 4, 1, "", "__gt__"], [101, 4, 1, "", "__le__"], [101, 4, 1, "", "__len__"], [101, 4, 1, "", "__lt__"], [101, 4, 1, "", "__ne__"], [101, 3, 1, "", "alignment"], [101, 3, 1, "", "base"], [101, 3, 1, "", "byteorder"], [101, 3, 1, "", "char"], [101, 3, 1, "", "descr"], [101, 3, 1, "", "fields"], [101, 3, 1, "", "flags"], [101, 3, 1, "", "hasobject"], [101, 3, 1, "", "isalignedstruct"], [101, 3, 1, "", "isbuiltin"], [101, 3, 1, "", "isnative"], [101, 3, 1, "", "itemsize"], [101, 3, 1, "", "kind"], [101, 3, 1, "", "metadata"], [101, 3, 1, "", "name"], [101, 3, 1, "", "names"], [101, 3, 1, "", "ndim"], [101, 4, 1, "", "newbyteorder"], [101, 3, 1, "", "num"], [101, 3, 1, "", "shape"], [101, 3, 1, "", "str"], [101, 3, 1, "", "subdtype"], [101, 3, 1, "", "type"]], "dpnp.fft": [[116, 1, 1, "", "fft"], [117, 1, 1, "", "fft2"], [118, 1, 1, "", "fftfreq"], [119, 1, 1, "", "fftn"], [120, 1, 1, "", "fftshift"], [121, 1, 1, "", "hfft"], [122, 1, 1, "", "ifft"], [123, 1, 1, "", "ifft2"], [124, 1, 1, "", "ifftn"], [125, 1, 1, "", "ifftshift"], [126, 1, 1, "", "ihfft"], [127, 1, 1, "", "irfft"], [128, 1, 1, "", "irfft2"], [129, 1, 1, "", "irfftn"], [130, 1, 1, "", "rfft"], [131, 1, 1, "", "rfft2"], [132, 1, 1, "", "rfftfreq"], [133, 1, 1, "", "rfftn"]], "dpnp.flatiter": [[137, 4, 1, "", "__eq__"], [137, 4, 1, "", "__ge__"], [137, 4, 1, "", "__getitem__"], [137, 4, 1, "", "__gt__"], [137, 4, 1, "", "__iter__"], [137, 4, 1, "", "__le__"], [137, 4, 1, "", "__lt__"], [137, 4, 1, "", "__ne__"], [137, 4, 1, "", "__next__"], [137, 4, 1, "", "__setitem__"]], "dpnp.linalg": [[192, 1, 1, "", "cholesky"], [193, 1, 1, "", "cond"], [194, 1, 1, "", "det"], [195, 1, 1, "", "eig"], [196, 1, 1, "", "eigh"], [197, 1, 1, "", "eigvals"], [198, 1, 1, "", "eigvalsh"], [199, 1, 1, "", "inv"], [200, 1, 1, "", "lstsq"], [201, 1, 1, "", "matrix_power"], [202, 1, 1, "", "matrix_rank"], [203, 1, 1, "", "multi_dot"], [204, 1, 1, "", "norm"], [205, 1, 1, "", "pinv"], [206, 1, 1, "", "qr"], [207, 1, 1, "", "slogdet"], [208, 1, 1, "", "solve"], [209, 1, 1, "", "svd"], [210, 1, 1, "", "tensorinv"], [211, 1, 1, "", "tensorsolve"]], "dpnp.ndarray": [[253, 6, 1, "", "T"], [254, 4, 1, "", "__abs__"], [255, 4, 1, "", "__add__"], [256, 4, 1, "", "__and__"], [257, 4, 1, "", "__bool__"], [258, 4, 1, "", "__complex__"], [259, 4, 1, "", "__copy__"], [260, 4, 1, "", "__eq__"], [261, 4, 1, "", "__float__"], [262, 4, 1, "", "__floordiv__"], [263, 4, 1, "", "__ge__"], [264, 4, 1, "", "__getitem__"], [265, 4, 1, "", "__gt__"], [266, 4, 1, "", "__iadd__"], [267, 4, 1, "", "__iand__"], [268, 4, 1, "", "__ifloordiv__"], [269, 4, 1, "", "__ilshift__"], [270, 4, 1, "", "__imod__"], [271, 4, 1, "", "__imul__"], [272, 4, 1, "", "__int__"], [273, 4, 1, "", "__invert__"], [274, 4, 1, "", "__ior__"], [275, 4, 1, "", "__ipow__"], [276, 4, 1, "", "__irshift__"], [277, 4, 1, "", "__isub__"], [278, 4, 1, "", "__itruediv__"], [279, 4, 1, "", "__ixor__"], [280, 4, 1, "", "__le__"], [281, 4, 1, "", "__len__"], [282, 4, 1, "", "__lshift__"], [283, 4, 1, "", "__lt__"], [284, 4, 1, "", "__matmul__"], [285, 4, 1, "", "__mod__"], [286, 4, 1, "", "__mul__"], [287, 4, 1, "", "__ne__"], [288, 4, 1, "", "__neg__"], [289, 4, 1, "", "__new__"], [290, 4, 1, "", "__or__"], [291, 4, 1, "", "__pos__"], [292, 4, 1, "", "__pow__"], [293, 4, 1, "", "__repr__"], [294, 4, 1, "", "__rshift__"], [295, 4, 1, "", "__setitem__"], [296, 4, 1, "", "__str__"], [297, 4, 1, "", "__sub__"], [298, 4, 1, "", "__truediv__"], [299, 4, 1, "", "__xor__"], [300, 4, 1, "", "all"], [301, 4, 1, "", "any"], [302, 4, 1, "", "argmax"], [303, 4, 1, "", "argmin"], [304, 4, 1, "", "argsort"], [305, 4, 1, "", "astype"], [306, 4, 1, "", "choose"], [307, 4, 1, "", "clip"], [308, 4, 1, "", "conj"], [309, 4, 1, "", "conjugate"], [310, 4, 1, "", "copy"], [311, 4, 1, "", "cumprod"], [312, 4, 1, "", "cumsum"], [313, 4, 1, "", "diagonal"], [314, 6, 1, "", "dtype"], [315, 4, 1, "", "fill"], [316, 6, 1, "", "flags"], [317, 6, 1, "", "flat"], [318, 4, 1, "", "flatten"], [319, 6, 1, "", "imag"], [320, 4, 1, "", "item"], [321, 6, 1, "", "itemsize"], [322, 4, 1, "", "max"], [323, 4, 1, "", "mean"], [324, 4, 1, "", "min"], [325, 6, 1, "", "nbytes"], [326, 6, 1, "", "ndim"], [327, 4, 1, "", "nonzero"], [328, 4, 1, "", "partition"], [329, 4, 1, "", "prod"], [330, 4, 1, "", "put"], [331, 4, 1, "", "ravel"], [332, 6, 1, "", "real"], [333, 4, 1, "", "repeat"], [334, 4, 1, "", "reshape"], [335, 4, 1, "", "round"], [336, 4, 1, "", "searchsorted"], [337, 6, 1, "", "shape"], [338, 6, 1, "", "size"], [339, 4, 1, "", "sort"], [340, 4, 1, "", "squeeze"], [341, 4, 1, "", "std"], [342, 6, 1, "", "strides"], [343, 4, 1, "", "sum"], [344, 4, 1, "", "swapaxes"], [345, 4, 1, "", "take"], [346, 4, 1, "", "trace"], [347, 4, 1, "", "transpose"], [348, 4, 1, "", "var"]], "dpnp.random": [[372, 2, 1, "", "RandomState"], [373, 1, 1, "", "beta"], [374, 1, 1, "", "binomial"], [375, 1, 1, "", "bytes"], [376, 1, 1, "", "chisquare"], [377, 1, 1, "", "choice"], [378, 1, 1, "", "dirichlet"], [379, 1, 1, "", "exponential"], [380, 1, 1, "", "f"], [381, 1, 1, "", "gamma"], [382, 1, 1, "", "geometric"], [383, 1, 1, "", "gumbel"], [384, 1, 1, "", "hypergeometric"], [385, 1, 1, "", "laplace"], [386, 1, 1, "", "logistic"], [387, 1, 1, "", "lognormal"], [388, 1, 1, "", "logseries"], [389, 1, 1, "", "multinomial"], [390, 1, 1, "", "multivariate_normal"], [391, 1, 1, "", "negative_binomial"], [392, 1, 1, "", "noncentral_chisquare"], [393, 1, 1, "", "noncentral_f"], [394, 1, 1, "", "normal"], [395, 1, 1, "", "pareto"], [396, 1, 1, "", "permutation"], [397, 1, 1, "", "poisson"], [398, 1, 1, "", "power"], [399, 1, 1, "", "rand"], [400, 1, 1, "", "randint"], [401, 1, 1, "", "randn"], [402, 1, 1, "", "random"], [403, 1, 1, "", "random_integers"], [404, 1, 1, "", "random_sample"], [405, 1, 1, "", "ranf"], [406, 1, 1, "", "rayleigh"], [407, 1, 1, "", "sample"], [408, 1, 1, "", "seed"], [409, 1, 1, "", "shuffle"], [410, 1, 1, "", "standard_cauchy"], [411, 1, 1, "", "standard_exponential"], [412, 1, 1, "", "standard_gamma"], [413, 1, 1, "", "standard_normal"], [414, 1, 1, "", "standard_t"], [415, 1, 1, "", "triangular"], [416, 1, 1, "", "uniform"], [417, 1, 1, "", "vonmises"], [418, 1, 1, "", "wald"], [419, 1, 1, "", "weibull"], [420, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[372, 4, 1, "", "__eq__"], [372, 4, 1, "", "__ge__"], [372, 4, 1, "", "__gt__"], [372, 4, 1, "", "__le__"], [372, 4, 1, "", "__lt__"], [372, 4, 1, "", "__ne__"], [372, 4, 1, "", "get_state"], [372, 4, 1, "", "get_sycl_device"], [372, 4, 1, "", "get_sycl_queue"], [372, 4, 1, "", "normal"], [372, 4, 1, "", "rand"], [372, 4, 1, "", "randint"], [372, 4, 1, "", "randn"], [372, 4, 1, "", "random_sample"], [372, 4, 1, "", "standard_normal"], [372, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [0, 3, 4, 10, 22, 83, 86, 98, 101, 102, 117, 119, 121, 123, 124, 126, 128, 129, 131, 133, 134, 149, 150, 200, 202, 204, 209, 314, 347, 372, 373, 374, 379, 380, 381, 383, 384, 385, 386, 387, 389, 391, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 465, 497], "0": [0, 4, 6, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 157, 159, 162, 163, 164, 165, 168, 171, 172, 174, 177, 178, 179, 180, 181, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 212, 213, 214, 215, 216, 217, 221, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 310, 313, 315, 319, 320, 332, 335, 337, 339, 341, 346, 347, 348, 349, 352, 354, 355, 356, 359, 360, 362, 363, 364, 365, 366, 367, 368, 371, 372, 374, 379, 381, 382, 383, 385, 386, 387, 389, 390, 391, 394, 396, 397, 398, 399, 402, 404, 405, 406, 407, 410, 413, 415, 416, 417, 422, 425, 427, 428, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 487, 488, 489, 497], "00": [79, 104, 116, 446], "000": [240, 374], "00000000005e": 112, "00000000e": [116, 240], "000000082740371e": 112, "000000e": [79, 446], "00001e10": [17, 174], "0001e10": 174, "000e": 104, "000j": 240, "002": 240, "00867716": 376, "01": 104, "02": [104, 240], "03": 240, "03088525e": 105, "0396842": 224, "04": 104, "04719755": 371, "04921661": 372, "05": [17, 104, 174], "0614962j": [117, 131], "06310682": 372, "07": 240, "07944154": [84, 207], "08": [17, 79, 104, 142, 174, 390, 446], "08156915": 372, "0943951": 371, "09640474": 219, "09861229": [84, 207, 216], "0d": 34, "0dev0": 6, "0j": [20, 97, 98, 175, 176, 182, 183, 227, 319, 332, 444], "0th": 464, "1": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 304, 305, 310, 313, 315, 318, 319, 320, 326, 328, 332, 337, 339, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 374, 376, 377, 379, 381, 383, 385, 386, 387, 389, 390, 391, 394, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 411, 413, 416, 421, 422, 423, 424, 425, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 497], "10": [0, 4, 14, 15, 25, 27, 31, 32, 47, 56, 68, 75, 84, 85, 86, 90, 91, 94, 95, 98, 99, 101, 103, 104, 112, 113, 120, 132, 154, 157, 163, 164, 165, 170, 174, 186, 187, 189, 214, 215, 216, 217, 224, 225, 231, 239, 334, 366, 368, 372, 374, 384, 396, 426, 432, 433, 435, 438, 441, 451, 455, 461, 470, 471, 472, 474, 475, 476, 485, 487], "100": [90, 132, 157, 174, 187, 203, 224, 384, 410, 424, 481], "1000": [64, 157, 203, 224, 373, 374, 379, 381, 383, 384, 385, 386, 387, 394, 395, 398, 400, 402, 405, 407, 413, 417, 418, 419, 420, 424, 468], "10000": [86, 203, 382, 397, 406, 416], "100000": 391, "1000000": [410, 412, 414, 415], "1024": 0, "105": 104, "11": [31, 32, 56, 80, 90, 91, 98, 99, 113, 159, 165, 204, 334, 391, 400, 438, 441, 447, 470, 471, 472, 474, 475, 476, 485, 487], "110": [103, 172], "111111": 240, "113": 218, "11570901": 372, "1179187": 372, "118033988749895": 456, "119": 103, "1196081": 372, "12": [10, 31, 32, 55, 83, 88, 90, 91, 95, 99, 101, 103, 113, 117, 131, 156, 165, 170, 188, 224, 364, 366, 371, 396, 422, 441, 470, 471, 472, 474, 475, 476, 485, 487], "120": [85, 88], "123": [98, 104, 320], "125": [142, 362, 363, 482], "127": 157, "128": [0, 157, 240], "12th": 103, "13": [10, 31, 32, 59, 90, 91, 97, 99, 101, 103, 165, 173, 227, 422, 441, 471, 472, 475, 476, 480, 485], "130": 103, "134": 172, "13436424": 372, "135": [29, 51], "13710533": 376, "139884456208480": 16, "13j": 424, "14": [31, 32, 58, 59, 90, 91, 97, 99, 136, 165, 172, 173, 441, 464, 471, 472, 475, 476, 485], "140": 481, "140053638309840": 21, "14157194": 468, "14159265": [13, 24, 29, 51, 87, 371], "14423775e": 116, "14j": 424, "15": [31, 32, 86, 90, 91, 95, 99, 103, 121, 126, 165, 205, 215, 396, 441, 471, 472, 475, 476, 485], "150": 88, "15888336": 224, "15j": 424, "16": [6, 58, 90, 91, 99, 101, 116, 142, 152, 157, 159, 165, 239, 362, 363, 424, 442, 462, 471, 472, 475, 476, 485], "1621": [422, 480], "16227766": [193, 426], "16394577": 372, "164": 219, "166": 219, "16j": 116, "17": [6, 116, 117, 131], "17157288": [196, 198], "17281316e": 116, "177": [157, 224], "17j": 116, "18": [6, 85, 101, 102, 103, 119, 204, 224], "180": [29, 51, 87, 88, 103, 370, 481, 505], "1805": 10, "18236388": 372, "18557831": 372, "1887902": 371, "19": [10, 81, 101, 422, 481], "1923875335537315": 401, "19245009": 440, "1924881e": 142, "1965": 10, "19722458": 84, "1d": [102, 367, 368, 461, 468], "1e": [17, 112, 174, 195, 205, 215, 216, 218, 219, 390], "1e10": [17, 174], "1j": [11, 12, 20, 27, 28, 37, 47, 50, 72, 73, 98, 127, 170, 175, 182, 195, 209, 319, 332, 423, 450, 453], "1th": 464, "2": [0, 3, 4, 10, 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 175, 182, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 305, 310, 313, 315, 318, 320, 326, 328, 337, 338, 347, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 372, 376, 380, 384, 390, 396, 399, 401, 412, 414, 415, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489], "20": [6, 85, 95, 103, 132, 156, 171, 174, 187, 188, 189, 204, 368, 374, 389, 441, 461, 481], "20000": 374, "2007": 10, "200e": 104, "20477401j": [117, 131], "2048": 0, "21": [86, 101], "210": 88, "215": 224, "21941987": 372, "21968665": 372, "22": [367, 422, 480], "220": 481, "220446049250313e": 424, "222222": 240, "22460635e": 462, "22464680e": 116, "22497216": 204, "22776602": 224, "23": [6, 372, 422], "230": 103, "23598776": 371, "23606798": 204, "24": [31, 32, 83, 85, 98, 102, 103, 172, 187, 210, 337, 364, 464, 466], "240": 88, "24264069": 204, "24544512": 372, "247219128924647": 249, "25": [101, 103, 108, 118, 159, 163, 164, 199, 212, 239, 251, 401, 410, 442, 482, 483], "255": [58, 60], "25506903": 372, "256": [0, 157], "26": [61, 103], "260": 481, "26618007j": 217, "269": 6, "27": [65, 142, 224, 362, 363, 440, 482], "270": 88, "28": 103, "28000000e": 240, "2800000e": 240, "283185307179586": 481, "28318531": 481, "28352814": 372, "28904982": 219, "297": 10, "299": 6, "2d": [209, 227, 437, 479], "2e": 86, "2f": 0, "2j": [72, 73, 97, 116, 170, 175, 182, 196, 198, 227, 423, 444, 450, 484], "2k": 481, "3": [0, 3, 4, 13, 15, 22, 23, 24, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 61, 62, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 125, 126, 128, 129, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 157, 159, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 182, 183, 184, 186, 187, 189, 193, 194, 195, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 310, 313, 318, 320, 326, 328, 337, 338, 339, 347, 349, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 367, 371, 372, 376, 380, 387, 390, 396, 399, 400, 401, 411, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "30": [83, 88, 98, 103, 132, 338, 368, 371, 461, 484], "300": [88, 481], "3003003": 425, "301": 10, "30102999566": 215, "3012989": 447, "30258509": [84, 225], "308": 240, "308j": 240, "31": [61, 157, 422, 480], "312": 105, "316": 224, "32": [101, 103, 157, 248, 250, 464], "33": 425, "330": 88, "333": 203, "33333333": 240, "3333333e": 240, "33340275": 468, "33486982e": 116, "33836967": 372, "340": 481, "34074171": 372, "34132519": 224, "34846923": 204, "34960421": 224, "35": [103, 382], "35106603e": 204, "35355338": 440, "36": 83, "360": 481, "37": [422, 438, 480], "371139e": 79, "38": [172, 374], "380": 481, "38268343": 196, "38268343j": 196, "38629436": 84, "38885": 374, "389056099": [109, 112], "39": 6, "39295758": 372, "394": 6, "397": 6, "3e": [0, 86, 424], "3j": [97, 227, 450], "3rd": [70, 71, 99, 451], "3x3": 226, "3x8000": 411, "4": [0, 15, 16, 22, 23, 31, 32, 34, 36, 37, 39, 53, 55, 56, 58, 60, 62, 68, 69, 70, 71, 74, 77, 79, 81, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 138, 139, 142, 144, 145, 146, 150, 151, 152, 154, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 175, 182, 186, 187, 191, 194, 199, 201, 202, 204, 207, 210, 211, 212, 217, 220, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 241, 242, 244, 246, 249, 251, 310, 313, 318, 326, 328, 337, 339, 347, 349, 352, 354, 356, 359, 362, 363, 364, 366, 367, 371, 372, 373, 376, 396, 401, 417, 421, 422, 423, 424, 427, 428, 430, 431, 435, 436, 437, 438, 439, 442, 444, 448, 449, 451, 452, 455, 456, 457, 459, 460, 464, 465, 467, 468, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489], "40": [103, 132, 189, 368, 461], "40882036": 372, "4096": 0, "41": [422, 480], "41421356": [193, 204], "42": 442, "420": 481, "429": 6, "44": [360, 367], "4400": [103, 464], "443469": 224, "44509285e": 116, "45": [6, 20, 29, 51], "4532": [103, 464], "46": 103, "460": 481, "46394577": 372, "464": 224, "4664": [103, 464], "47": 6, "4730": [103, 464], "4796": [103, 464], "48": [6, 83], "48093112": 372, "4874": [103, 464], "48927254": 372, "49": 6, "4928": [103, 464], "49543509": 372, "49778714": 481, "499128": 97, "4d": 209, "4e": 424, "4j": [170, 423, 484], "4x4": [471, 475], "5": [0, 6, 15, 16, 21, 22, 23, 30, 31, 34, 39, 52, 53, 56, 57, 58, 60, 61, 62, 66, 68, 70, 71, 74, 77, 78, 81, 83, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 113, 117, 118, 120, 128, 131, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 156, 157, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 175, 182, 186, 187, 189, 192, 196, 198, 199, 203, 204, 208, 212, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 246, 249, 305, 310, 338, 349, 352, 354, 355, 356, 359, 362, 363, 366, 367, 371, 372, 373, 374, 376, 379, 391, 395, 396, 397, 398, 401, 404, 419, 421, 422, 423, 424, 425, 427, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 448, 450, 451, 455, 456, 458, 459, 460, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489], "50": [117, 131, 132, 157, 187, 218, 219, 224, 368, 461, 464, 468, 487], "500": [187, 481], "5018": [103, 464], "5091786": 80, "51": 6, "512": 0, "5162": [103, 464], "52069395e": 116, "52359878": 371, "52928804": 372, "5306": [103, 464], "5399045e": 142, "54": 372, "540": 481, "542": 6, "54288406": 372, "54465213": 372, "548739": 447, "54930614": [30, 52], "55": [360, 367, 442], "5555555555555554": 251, "56": 6, "562": 224, "5620499351813308": [11, 12], "56920387": 372, "5707963267948966": [26, 46], "57079633": [20, 29, 51, 371, 481], "58997253": 372, "591953": 80, "5e": [218, 219], "5j": [233, 354, 450], "6": [0, 4, 6, 15, 22, 23, 31, 32, 34, 39, 53, 56, 60, 61, 68, 70, 71, 77, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 107, 112, 113, 118, 121, 132, 139, 142, 155, 156, 159, 165, 166, 170, 171, 172, 186, 187, 188, 204, 205, 206, 209, 210, 212, 224, 226, 243, 244, 248, 310, 320, 337, 349, 352, 356, 360, 362, 363, 366, 372, 389, 391, 396, 401, 421, 422, 423, 429, 430, 435, 436, 437, 438, 439, 442, 448, 450, 451, 455, 457, 458, 459, 460, 464, 466, 468, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 484, 485, 486, 487, 489], "60": [83, 88, 103, 188, 368, 461, 464, 481, 487], "600": 187, "60943791": 84, "61799388": 371, "62": 172, "6227766": 157, "62318272": 376, "62341325": 157, "624": 104, "63": 157, "63317787e": 462, "63522211": 372, "63836967": 372, "64": [0, 4, 103, 142, 157, 248, 250, 362, 363, 438], "64000": 103, "65745445": [14, 25], "66519143": 371, "6666666666666665": 246, "67": 103, "67305985": 149, "673174": 372, "67718303": 372, "69295758": 372, "69314718": [84, 207, 216], "6990877": 372, "6j": [170, 423, 484], "7": [15, 17, 22, 23, 39, 53, 66, 68, 77, 81, 83, 86, 89, 90, 91, 93, 94, 96, 98, 99, 102, 109, 113, 139, 143, 157, 159, 165, 172, 174, 186, 187, 204, 209, 226, 231, 236, 239, 320, 352, 365, 366, 372, 396, 422, 423, 427, 432, 434, 435, 437, 451, 457, 458, 459, 460, 464, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 484, 485, 487], "70": [187, 484, 487], "700": 187, "700e": 104, "70710677": [98, 319, 332], "70710678": [193, 195], "70710678j": 195, "70882036": 372, "71238898": 371, "718281828": [109, 112], "72": 83, "720": [85, 481], "72075441": 224, "72538256": [27, 47], "74165739": 204, "742278e": 446, "74596669": 204, "74921661": 372, "75": [56, 108, 118, 159, 164, 199, 212], "754": 135, "75958653": 371, "76096244": 372, "76377462": 372, "77447665": 219, "78539816": [20, 28, 29, 50, 51, 481], "78927254": 372, "79175947": 84, "79769313e": 240, "7j": 365, "8": [4, 15, 17, 22, 39, 53, 65, 68, 77, 83, 89, 90, 91, 93, 94, 98, 99, 101, 103, 104, 113, 116, 118, 132, 133, 139, 142, 157, 159, 165, 170, 174, 186, 194, 204, 207, 209, 210, 212, 224, 226, 337, 352, 362, 363, 364, 366, 372, 396, 415, 422, 423, 435, 437, 440, 446, 451, 460, 464, 466, 468, 470, 471, 472, 474, 475, 476, 480, 481, 482, 485, 487], "80": [101, 103, 487], "8000": 411, "80226506": 372, "81715362": 372, "827941": [157, 224], "82842712": [196, 198], "84288406": 372, "84401099": 372, "84743374": 372, "84803548": 204, "85": 103, "86": 172, "87649168": 218, "88": 102, "88178420e": 116, "88997253": 372, "89920014": 376, "8f": 101, "8j": 484, "9": [4, 15, 22, 39, 53, 68, 77, 83, 86, 89, 90, 91, 93, 96, 98, 99, 103, 105, 113, 116, 119, 120, 125, 136, 142, 144, 152, 157, 159, 165, 174, 186, 195, 200, 204, 205, 206, 209, 224, 226, 239, 240, 320, 352, 366, 372, 374, 376, 396, 422, 423, 435, 451, 452, 457, 464, 470, 471, 472, 474, 475, 476, 477, 480, 481, 482, 485, 487], "90": [20, 88, 370, 437, 487], "917152": 463, "92387953": 196, "92387953j": 196, "94": 103, "94591015": 84, "95": 200, "95799250e": 116, "98": 227, "98024613": 224, "99": [102, 216, 368], "99322285": [14, 25], "99532227": 108, "996272": 463, "99822295": [27, 47], "99853728": 108, "999": 104, "9990000e": 240, "99959305": 108, "99989938": 108, "9999": 240, "99997791": 108, "999999e": 174, "A": [10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 73, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 128, 129, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 165, 167, 168, 170, 171, 173, 177, 178, 179, 180, 181, 188, 189, 190, 191, 192, 196, 197, 198, 200, 202, 203, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 233, 235, 236, 239, 243, 244, 248, 250, 305, 310, 318, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 365, 370, 371, 372, 374, 391, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 421, 422, 425, 427, 433, 434, 437, 440, 444, 445, 446, 447, 451, 452, 453, 457, 459, 460, 462, 463, 464, 465, 467, 469, 471, 473, 475, 477, 478, 482, 485, 487, 488, 489, 505], "AND": [16, 58, 59, 60, 61, 173, 220, 221, 222, 223], "And": [4, 48, 49, 90, 98, 305, 471, 475], "As": 479, "Be": 195, "Being": 3, "But": [4, 101], "By": [31, 32, 42, 49, 83, 98, 117, 121, 123, 127, 129, 133, 157, 200, 212, 224, 227, 228, 230, 234, 241, 242, 245, 246, 247, 248, 249, 250, 251, 305, 421, 428, 435, 448, 456, 460, 469, 471, 473, 475, 483], "For": [0, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 318, 319, 320, 326, 332, 334, 337, 342, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 497, 505], "If": [4, 10, 11, 12, 16, 17, 21, 22, 23, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 56, 68, 70, 71, 81, 83, 84, 85, 86, 89, 93, 94, 97, 98, 99, 101, 102, 103, 104, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 145, 146, 148, 153, 157, 159, 163, 164, 165, 166, 170, 171, 172, 174, 180, 181, 182, 192, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 224, 225, 228, 229, 230, 232, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 339, 359, 360, 364, 367, 368, 372, 394, 416, 423, 424, 426, 428, 429, 430, 431, 435, 438, 439, 441, 449, 451, 454, 455, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 479, 481, 482, 483, 484, 485, 486, 487, 497, 505], "In": [4, 10, 31, 32, 85, 86, 103, 104, 122, 123, 124, 127, 129, 159, 192, 197, 203, 206, 219, 224, 243, 244, 246, 248, 250, 364, 367, 372, 416, 422, 430, 431, 458, 460, 478], "It": [4, 10, 16, 21, 22, 31, 32, 68, 85, 86, 95, 97, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 159, 196, 198, 219, 227, 230, 241, 242, 243, 244, 245, 246, 247, 249, 251, 364, 431, 442, 456, 458, 460, 483, 505], "Its": [68, 210, 368, 466], "NOT": [59, 173, 220, 221, 222, 223], "No": [41, 42, 103, 192], "Not": [16, 21, 42, 177, 240, 243, 244, 245, 247, 248, 250, 364], "OR": [21, 58, 59, 60, 61, 173, 220, 221, 222, 223], "On": 4, "One": [53, 54, 55, 83, 100, 101, 127, 430], "Or": [159, 468], "That": 226, "The": [3, 4, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 63, 65, 68, 69, 70, 71, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 176, 177, 178, 179, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 305, 310, 319, 326, 328, 332, 337, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 375, 377, 378, 388, 393, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 486, 487, 488, 489, 497, 501, 505], "Then": [10, 43, 45, 226], "There": [10, 212, 479], "These": [4, 22, 101, 103, 104, 111, 226, 238, 368, 461, 471, 475, 497, 501], "To": [4, 121, 127, 129, 142, 352, 481], "With": [31, 32, 56, 81, 165, 204, 228, 234, 241, 242, 248, 250, 364, 458, 485], "_": [0, 164, 455, 468], "__array_interface__": 101, "__bool__": 497, "__dlpack__": 148, "__dlpack_device__": 148, "__eq__": [98, 101, 137, 372], "__ge__": [98, 101, 137, 372], "__getitem__": [98, 101, 137], "__gt__": [98, 101, 137, 372], "__iter__": 137, "__le__": [98, 101, 137, 372], "__len__": [98, 101], "__lt__": [98, 101, 137, 372], "__main__": 0, "__name__": 0, "__ne__": [98, 101, 137, 372], "__next__": 137, "__setitem__": [98, 137], "__sycl_usm_array_interface__": 44, "_dtypes_list": 0, "a1": [37, 38], "a2": [37, 38], "a_": 10, "a_k": 10, "a_m": 10, "a_resamp": 127, "ab": [6, 10, 12, 17, 174], "abc": 103, "abcd": 104, "about": [43, 45, 98, 135, 195, 316, 429, 497], "abov": [3, 13, 14, 24, 25, 26, 27, 30, 46, 47, 52, 84, 89, 92, 119, 124, 129, 133, 171, 206, 225, 240, 426, 469, 470, 474], "absolut": [6, 11, 17, 20, 115, 156, 174, 188, 207, 249, 251, 365, 424, 456, 481, 483, 505], "accept": [33, 103, 372, 449, 471, 475], "access": [10, 90, 91, 134, 226, 471, 475, 497], "accord": [16, 21, 56, 64, 101, 133, 135, 195, 196, 197, 198, 225, 230, 246, 249, 251, 426, 433, 456, 483], "accordingli": [245, 247], "account": 430, "accumul": [84, 85, 86, 103, 163, 243, 244, 248, 250, 364, 458, 466], "accur": [101, 112, 159, 216, 218], "accuraci": [122, 123, 124, 127, 129], "achiev": 103, "aco": 24, "acosh": 25, "across": [93, 164, 243, 244, 248, 250], "activ": 4, "actual": [101, 163, 164, 192, 203], "ad": [17, 101, 104, 111, 127, 174, 194, 207, 219, 481, 501], "add": [6, 101, 505], "add_docstr": 6, "add_newdoc": 6, "add_newdoc_ufunc": 6, "addit": [84, 192, 246, 479], "address": 101, "adjac": 481, "advanc": 103, "advers": 103, "advis": 4, "affect": [23, 93, 103, 134, 163, 164], "after": [100, 134, 351, 391, 435], "ag": 101, "against": [17, 31, 32, 62, 63, 68, 81, 158, 174, 204, 205, 228, 234, 241, 242, 248, 250, 364, 368, 458, 461], "ai": [3, 368, 461], "ai_max": 461, "ai_min": 461, "ainv": [199, 210], "al": 10, "algebra": [490, 501], "algorithm": [10, 103, 104, 116, 122, 130], "alia": [10, 13, 14, 18, 19, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 59, 70, 71, 96, 106, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 155, 173, 189, 236, 252, 356, 359, 362, 363, 372, 402, 405, 407, 427, 433, 439, 467, 477, 481, 486, 489], "alias": [9, 121, 122, 127, 129], "align": 101, "all": [4, 6, 9, 17, 20, 21, 22, 37, 38, 42, 49, 56, 69, 81, 88, 94, 98, 100, 101, 103, 104, 109, 110, 112, 114, 119, 120, 124, 125, 128, 129, 133, 134, 139, 140, 141, 149, 150, 152, 157, 159, 166, 168, 170, 186, 192, 202, 205, 212, 224, 228, 234, 241, 242, 245, 247, 305, 308, 315, 328, 364, 374, 423, 424, 435, 439, 442, 454, 458, 479, 486, 497, 505], "allclos": [6, 37, 174, 199, 205, 206, 208, 209, 211], "alloc": [3, 4, 22, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 75, 84, 89, 90, 92, 98, 105, 106, 114, 118, 132, 136, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 180, 181, 212, 213, 224, 225, 226, 230, 233, 246, 249, 251, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 426, 454, 456, 469, 471, 475, 482, 483, 488, 489], "allow": [39, 49, 98, 103, 163, 164, 219, 226, 305, 334, 460, 497], "alltru": 6, "almost": [34, 195, 471], "along": [3, 4, 16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 69, 70, 71, 81, 84, 85, 86, 89, 90, 92, 93, 94, 98, 99, 100, 102, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 141, 145, 146, 151, 157, 159, 165, 166, 171, 204, 206, 210, 211, 212, 224, 225, 228, 229, 230, 231, 232, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 302, 303, 304, 311, 312, 322, 324, 329, 330, 338, 341, 343, 345, 346, 348, 360, 364, 366, 367, 368, 426, 428, 435, 436, 437, 439, 442, 448, 449, 451, 455, 456, 458, 460, 461, 464, 465, 466, 468, 471, 472, 475, 476, 479, 481, 483, 485, 486, 497], "alpha": [373, 378, 379, 395, 398], "alreadi": [4, 10, 41, 42, 53, 54, 55, 357, 479], "also": [3, 4, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 61, 76, 96, 98, 101, 103, 107, 111, 119, 124, 128, 129, 130, 133, 142, 144, 145, 146, 147, 151, 153, 156, 159, 160, 161, 162, 163, 167, 174, 188, 189, 190, 191, 192, 218, 219, 226, 229, 235, 236, 238, 239, 337, 352, 353, 362, 363, 410, 427, 433, 457, 460, 477, 479, 497], "alter": 93, "altern": [3, 4, 16, 21, 85, 86, 97, 98, 227, 228, 230, 234, 243, 244, 246, 248, 249, 250, 251, 347, 364, 456, 458, 483], "although": [20, 101, 123, 124, 125, 465], "alwai": [4, 10, 13, 14, 24, 25, 26, 27, 28, 30, 33, 40, 46, 47, 49, 50, 52, 93, 98, 99, 102, 115, 142, 148, 165, 196, 198, 249, 251, 305, 352, 430, 450, 456, 483, 485], "amax": [6, 228], "ambigu": 497, "amin": [6, 234], "among": 102, "amplitud": 10, "an": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183, 186, 188, 189, 190, 191, 194, 197, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 259, 304, 305, 306, 307, 310, 320, 322, 326, 328, 330, 333, 334, 337, 338, 339, 340, 344, 345, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 379, 380, 382, 391, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 497, 505], "anaconda": 3, "analog": [117, 119, 121, 123, 124, 126], "analysi": 10, "analyt": [3, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "angl": [6, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 87, 88, 170, 370, 371, 423, 424, 481, 505], "ani": [3, 6, 16, 17, 22, 36, 40, 41, 42, 43, 44, 45, 49, 62, 63, 75, 89, 92, 94, 98, 101, 103, 104, 117, 119, 123, 124, 129, 133, 134, 154, 155, 157, 159, 164, 166, 176, 183, 184, 201, 211, 212, 224, 226, 245, 247, 305, 326, 372, 416, 429, 449, 482, 497], "anoth": [4, 77, 98, 113, 123, 124, 148, 310, 330, 360, 367, 436], "answer": 374, "anti": [93, 134], "anyth": 101, "ap": 200, "apart": 468, "api": [0, 2, 3, 6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "appear": [111, 140, 141, 479], "append": [0, 6, 94, 102, 104, 111, 122, 123, 124, 189], "appli": [31, 32, 33, 56, 64, 103, 240, 422, 431, 432, 464, 468], "applic": [10, 101], "apply_along_axi": 6, "apply_over_ax": 6, "approach": [98, 101, 122, 123, 124, 337], "appropri": [4, 31, 32, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 158, 211, 241, 242, 245, 247, 372, 400, 403, 431, 460, 497], "approxim": [135, 468], "ar": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 94, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 157, 159, 160, 161, 162, 163, 164, 167, 172, 173, 174, 177, 178, 179, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 327, 328, 337, 349, 350, 351, 352, 353, 358, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 397, 398, 400, 403, 404, 406, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 431, 433, 434, 435, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 468, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 497, 505], "arang": [0, 6, 15, 31, 32, 34, 39, 53, 54, 55, 56, 57, 68, 76, 88, 89, 90, 91, 93, 96, 97, 98, 99, 103, 107, 109, 110, 112, 113, 116, 138, 139, 142, 147, 155, 156, 157, 159, 163, 165, 171, 172, 186, 187, 188, 204, 212, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 232, 234, 236, 239, 313, 353, 356, 360, 362, 363, 367, 371, 396, 427, 429, 432, 435, 437, 442, 451, 457, 464, 466, 468, 471, 472, 475, 476, 477, 485, 487, 489], "arbitrari": [48, 97, 101, 103, 172, 227, 432, 471, 475], "arbitrarili": 103, "arc": [20, 26, 28, 46, 50], "arcco": [6, 13, 14, 25, 26, 28, 29, 46, 50, 51, 79], "arccosh": [6, 13, 14, 24, 27, 30, 47, 52, 80], "arcsin": [6, 13, 24, 27, 28, 29, 46, 47, 50, 51, 446], "arcsinh": [6, 14, 25, 26, 30, 46, 47, 52, 447], "arctan": [6, 13, 20, 24, 26, 29, 30, 46, 50, 51, 52, 462], "arctan2": [6, 20, 26, 28, 46, 50, 51], "arctanh": [6, 14, 25, 27, 28, 29, 47, 50, 51, 52, 463], "area": 468, "arg": [62, 186, 372], "arg1": 185, "arg2": 185, "argmax": [0, 6, 32, 98, 241, 368, 461, 497], "argmin": [6, 31, 98, 242, 461, 497], "argpartit": [6, 33, 368, 461, 497], "argsort": [6, 98, 359, 368, 441, 449, 461, 467, 497], "argument": [0, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 76, 79, 80, 87, 88, 96, 97, 98, 101, 104, 108, 109, 110, 112, 142, 143, 144, 145, 146, 147, 162, 167, 170, 173, 184, 185, 189, 203, 204, 215, 216, 217, 218, 219, 226, 227, 229, 235, 236, 237, 239, 334, 347, 350, 351, 361, 362, 363, 365, 367, 370, 371, 423, 424, 425, 427, 432, 433, 434, 440, 444, 445, 446, 447, 455, 457, 462, 463, 464, 468, 477, 478, 497, 505], "argwher": [6, 352], "ari": [39, 53, 54, 55, 99, 102, 165, 451, 485], "arithmet": [56, 157, 230, 231, 246, 249, 251, 361, 456, 458, 483, 490, 501], "around": [6, 98, 157, 367, 422, 438], "arr": [22, 42, 91, 101, 164, 369, 396, 422, 472, 476], "arr2": 101, "arr_t": [49, 98, 305], "arrai": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 259, 302, 303, 304, 305, 306, 307, 310, 313, 314, 315, 316, 318, 319, 320, 321, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 501, 505], "array2str": 6, "array_equ": 6, "array_equiv": [6, 37], "array_lik": [22, 36, 40, 41, 42, 43, 44, 45, 48, 56, 75, 77, 89, 92, 102, 113, 154, 155, 157, 176, 183, 212, 224, 349, 360, 367, 368, 372, 437, 443, 448, 460, 464, 482], "array_of_diagon": 93, "array_repr": 6, "array_split": [6, 70, 71, 451], "array_str": 6, "arrays_and_dtyp": 432, "art": 10, "asanyarrai": [6, 41, 42, 45, 429], "asarrai": [4, 6, 40, 42, 43, 45, 48, 349, 429, 448], "asarray_chkfinit": [6, 40, 41], "ascend": [196, 198, 441], "ascii": 101, "ascontiguousarrai": [6, 40, 41, 42, 45, 429], "asfarrai": [6, 40, 41], "asfortranarrai": [6, 40, 41, 42, 43, 429], "asin": 26, "asinh": 27, "asmatrix": 6, "asnumpi": 98, "aspect": 101, "assembl": [70, 71, 100, 166, 439, 455, 486], "assign": [98, 315, 337, 471, 475], "associ": [56, 163, 164, 497], "assum": [10, 56, 104, 121, 127, 129, 202, 205, 209, 226, 468], "astyp": [6, 98, 157, 352], "atan": 28, "atan2": 29, "atanh": 30, "atleast_1d": [6, 54, 55, 111], "atleast_2d": [6, 53, 55, 111], "atleast_3d": [6, 53, 54, 111], "atol": [17, 174], "attain": 0, "attempt": [97, 203], "attribut": [98, 101, 106, 135, 155, 169, 206, 356, 489, 490], "automat": [163, 164], "avail": [2, 3, 4, 10, 78, 82, 101, 108, 231, 237, 241, 242, 245, 247, 248, 490, 497], "averag": [6, 98, 230, 246, 323, 458, 501], "avg": 56, "avoid": [36, 41, 54, 55, 121, 127, 129], "aweight": 82, "ax": [16, 21, 31, 32, 56, 81, 84, 94, 97, 98, 103, 111, 117, 119, 120, 123, 124, 125, 128, 129, 131, 133, 139, 159, 172, 204, 208, 210, 211, 225, 227, 228, 230, 234, 238, 241, 242, 245, 246, 247, 248, 249, 250, 251, 344, 347, 357, 359, 364, 426, 431, 435, 436, 437, 454, 456, 458, 459, 464, 465, 466, 467, 479, 483], "axi": [16, 18, 19, 21, 22, 31, 32, 33, 39, 56, 69, 70, 71, 81, 83, 84, 85, 86, 93, 94, 98, 99, 100, 102, 103, 111, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 139, 140, 141, 145, 146, 151, 157, 159, 165, 166, 171, 200, 204, 212, 224, 225, 227, 228, 229, 230, 231, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 300, 301, 302, 303, 304, 311, 312, 318, 322, 323, 324, 328, 329, 330, 333, 338, 339, 340, 341, 343, 345, 347, 348, 358, 359, 360, 364, 366, 367, 368, 421, 426, 428, 430, 431, 435, 436, 437, 439, 442, 448, 449, 451, 454, 455, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 479, 481, 483, 485, 486, 497], "axis1": [93, 98, 313, 344, 346, 459, 466], "axis2": [93, 98, 313, 344, 346, 459, 466], "axisa": 83, "axisb": 83, "axisc": 83, "axiserror": [33, 449], "b": [10, 15, 17, 22, 31, 32, 37, 38, 58, 61, 69, 70, 71, 77, 83, 86, 97, 98, 100, 101, 103, 104, 107, 149, 150, 160, 161, 166, 172, 174, 187, 190, 191, 194, 200, 203, 204, 205, 207, 208, 209, 210, 211, 220, 222, 227, 228, 234, 351, 353, 357, 362, 363, 373, 432, 439, 455, 464, 465, 473, 484, 486, 505], "back": [98, 151, 318, 421, 430, 431, 436, 473], "backend": [2, 158, 375, 377, 378, 388, 393, 409], "backward": [10, 49, 98, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 159, 305, 435, 436], "bad": 384, "bartlett": 6, "base": [0, 4, 101, 103, 110, 113, 142, 157, 163, 164, 209, 214, 215, 216, 217, 218, 219, 224, 225, 227, 360, 362, 363, 367, 369], "base_repr": 6, "basic": [64, 103, 497, 501], "bc": [194, 207], "bcde": 104, "becaus": [10, 16, 21, 121, 127, 129, 481, 497], "becom": [10, 98, 163, 347], "been": [100, 368, 436, 461], "befor": [4, 22, 33, 70, 71, 84, 98, 102, 122, 123, 124, 140, 141, 211, 225, 228, 234, 249, 251, 328, 339, 364, 426, 435, 436, 449, 456, 458, 465, 483, 484], "begin": [102, 104, 157, 212, 224, 442], "behav": [213, 367], "behavior": [98, 131, 240, 310, 431, 465], "behind": [98, 328], "being": [3, 101, 145, 146, 229, 235], "belong": [95, 163], "below": [0, 4, 9, 13, 24, 26, 27, 30, 46, 47, 52, 89, 92, 101, 127, 202, 469, 470, 474, 481, 497], "best": 104, "beta": [6, 383], "between": [17, 23, 39, 64, 94, 102, 135, 150, 153, 159, 172, 174, 212, 224, 389, 403, 457, 468, 481], "beyond": [4, 435], "bia": 82, "big": 101, "bin": [95, 116, 118, 132, 163, 164, 410], "bin_edg": [163, 164], "binari": [58, 60, 61, 149, 150, 152, 153, 490, 501], "binary_repr": 6, "bincount": [6, 95, 163], "binomi": [6, 391], "bins_0": 164, "bins_1": 164, "bit": [58, 59, 60, 61, 101, 135, 169, 173, 189, 220, 222, 223, 248, 250, 433, 445, 501], "bitwis": [58, 60, 61], "bitwise_and": [6, 59, 60, 61, 173, 220], "bitwise_invert": [59, 173], "bitwise_left_shift": 189, "bitwise_not": 6, "bitwise_or": [6, 58, 59, 61, 173, 222], "bitwise_right_shift": 433, "bitwise_xor": [6, 58, 59, 60, 173, 223], "biufcmmosuv": 101, "blackman": 6, "block": [6, 70, 71, 100, 134, 166, 187, 439, 455, 486], "bmat": 6, "bool": [9, 16, 17, 21, 31, 32, 36, 37, 38, 41, 44, 49, 56, 64, 77, 81, 84, 95, 98, 101, 104, 107, 134, 148, 157, 160, 161, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 202, 204, 205, 209, 212, 224, 225, 228, 230, 232, 234, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 305, 352, 353, 364, 426, 430, 442, 445, 456, 458, 460, 479, 482, 483, 497], "bool_": 9, "boolean": [58, 59, 60, 61, 77, 84, 101, 113, 142, 148, 171, 173, 174, 177, 178, 179, 180, 181, 182, 186, 220, 222, 225, 226, 230, 246, 248, 249, 251, 352, 360, 426, 430, 456, 460, 483], "boolean_sequ": 186, "both": [10, 15, 17, 22, 29, 37, 38, 51, 56, 58, 60, 61, 68, 76, 83, 96, 97, 107, 123, 130, 142, 144, 145, 146, 147, 156, 160, 161, 162, 167, 172, 174, 187, 188, 189, 190, 191, 204, 218, 219, 220, 222, 223, 227, 229, 235, 236, 239, 250, 351, 353, 362, 363, 427, 433, 457, 464, 466, 471, 473, 475, 477, 484, 487], "bound": [367, 422, 441, 460, 461], "boundari": [159, 367, 422], "branch": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "briefli": 497, "broadcast": [15, 16, 21, 31, 32, 38, 56, 62, 63, 68, 77, 81, 96, 103, 113, 142, 145, 146, 167, 180, 181, 204, 205, 223, 225, 227, 228, 229, 230, 234, 235, 239, 241, 242, 246, 248, 249, 250, 251, 362, 363, 364, 367, 368, 426, 428, 456, 457, 458, 461, 465, 477, 483, 487], "broadcast_arrai": [6, 63], "broadcast_shap": 6, "broadcast_to": [6, 62, 465], "brought": 10, "buffer": [44, 85, 86, 98, 148, 149, 150, 152, 153, 213, 228, 234, 243, 244, 430], "buffer_lik": 149, "buffererror": 148, "build": 501, "build_loc": 4, "built": 101, "busday_count": 6, "busday_offset": 6, "byte": [6, 49, 98, 101, 103, 149, 150, 213, 305, 321, 325], "byte_bound": 6, "byteord": 101, "byteswap": 6, "bz2": 213, "c": [2, 4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 83, 87, 88, 96, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 154, 155, 156, 158, 160, 161, 162, 167, 170, 172, 173, 177, 178, 179, 187, 188, 189, 190, 191, 194, 200, 203, 204, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 235, 236, 239, 305, 310, 318, 331, 350, 351, 352, 353, 355, 356, 361, 362, 363, 365, 370, 371, 421, 422, 425, 427, 429, 430, 431, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 464, 465, 477, 478, 479, 480, 487, 488, 489, 505], "c_contigu": [43, 45, 98, 310, 429], "ca": 74, "calcul": [10, 11, 12, 15, 20, 29, 51, 56, 84, 86, 94, 96, 102, 103, 107, 109, 110, 112, 116, 125, 142, 143, 144, 147, 159, 164, 167, 195, 196, 197, 198, 200, 205, 216, 218, 219, 225, 227, 230, 236, 239, 246, 249, 251, 353, 362, 363, 364, 426, 427, 456, 457, 477, 483, 484, 490, 505], "call": [10, 20, 22, 29, 31, 32, 33, 43, 45, 51, 101, 122, 123, 124, 127, 130, 151, 195, 197, 203, 226, 259, 352, 454, 460, 465, 468, 505], "callabl": [151, 226], "cambridg": 10, "can": [0, 3, 4, 10, 15, 17, 22, 23, 29, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 58, 59, 60, 61, 64, 75, 76, 83, 89, 90, 92, 93, 96, 97, 98, 101, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 132, 134, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 166, 167, 168, 171, 172, 173, 174, 176, 183, 184, 186, 187, 188, 189, 190, 191, 192, 199, 200, 201, 211, 212, 213, 218, 219, 220, 222, 223, 224, 226, 227, 229, 233, 235, 236, 239, 248, 250, 305, 310, 337, 339, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 368, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 422, 427, 429, 430, 433, 449, 457, 460, 461, 464, 466, 468, 469, 471, 475, 476, 477, 479, 482, 484, 487, 488, 489, 497, 505], "can_cast": [6, 501], "cannot": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 70, 71, 241, 242, 451, 454, 455], "capabl": [23, 36, 40, 41, 43, 45, 56, 115, 157, 212, 224, 227], "care": [23, 195], "cartesian": 232, "case": [4, 16, 21, 23, 31, 32, 36, 40, 41, 42, 43, 45, 56, 75, 85, 86, 89, 92, 94, 103, 104, 105, 106, 114, 118, 121, 126, 130, 132, 149, 150, 151, 152, 154, 155, 157, 159, 168, 195, 206, 209, 212, 213, 219, 224, 233, 243, 244, 248, 250, 354, 355, 356, 364, 430, 431, 458, 464, 469, 481, 482, 488, 489, 497], "cast": [16, 21, 49, 64, 70, 71, 77, 84, 85, 86, 98, 103, 142, 166, 195, 225, 227, 230, 240, 243, 244, 246, 248, 249, 250, 251, 305, 364, 426, 439, 455, 456, 458, 483, 486], "cat": [374, 391], "cauchi": 410, "cbrt": [6, 452], "cdef": 104, "cdot": 464, "cdoubl": 9, "ceil": [6, 35, 136, 143, 144, 434, 438, 478], "center": [117, 118, 119, 120, 124, 125, 132], "central": [159, 392, 393], "certain": [101, 226], "ch": 10, "chain": [97, 98, 103, 104], "chang": [49, 75, 83, 98, 101, 103, 113, 243, 244, 305, 318, 342, 347, 350, 360, 361, 367, 368, 369, 421, 430, 431, 436, 481, 501], "char": 101, "charact": [101, 150], "check": [16, 21, 40, 41, 42, 64, 121, 176, 183, 192, 205, 208], "check_valid": 390, "chi": [376, 392], "chisquar": 6, "choic": [6, 67, 98, 116, 117, 119, 122, 123, 124, 128, 129, 131, 133, 196, 198, 306], "choicelist": 442, "choleski": 6, "choos": [6, 20, 26, 28, 46, 50, 98, 104, 442, 487, 497], "chosen": [34, 163, 479, 487], "circ": 505, "circl": [207, 468], "clamp": [367, 460, 461], "clariti": 134, "class": [3, 4, 98, 101, 137, 149, 150, 151, 153, 171, 213, 372, 400, 469, 501], "classic": 103, "clear": [101, 497], "clip": [6, 98, 367, 422, 460, 461, 497], "close": [13, 14, 20, 24, 25, 26, 28, 46, 48, 49, 50, 98, 103, 111, 170, 212, 305, 372, 400, 423, 424, 434, 438, 468], "closer": 478, "cloud": 3, "cmake": 4, "co": [6, 13, 14, 24, 25, 26, 46, 80, 197, 446, 462, 468], "code": [44, 101, 185, 429], "codeplai": 4, "coeffici": [200, 208, 211], "coerc": [44, 149, 150, 151, 152, 153, 213], "coin": 374, "col": 171, "collaps": [98, 318, 479], "column": [6, 40, 41, 42, 43, 45, 48, 49, 69, 70, 71, 85, 86, 93, 98, 100, 114, 134, 140, 141, 159, 165, 166, 168, 195, 196, 200, 203, 206, 209, 305, 421, 422, 429, 439, 451, 455, 469, 471, 475, 480, 482, 486], "column_stack": [6, 70, 71, 100, 166, 439, 455, 486], "com": 4, "combin": [0, 101, 111, 119, 124, 129, 133, 159], "combinatori": 104, "come": 479, "comma": [101, 103], "command": 4, "common": [122, 123, 124, 156, 188, 352, 464], "common_typ": 6, "compani": [374, 391], "compar": [17, 37, 107, 145, 146, 164, 174, 229, 235], "compare_chararrai": 6, "comparison": [2, 107, 160, 161, 190, 191, 353, 490, 501], "compat": [3, 4, 10, 16, 21, 49, 56, 98, 225, 230, 245, 246, 247, 249, 251, 305, 426, 430, 456, 483, 501], "compil": [4, 101, 158, 429], "complement": 481, "complementari": [144, 481], "complet": [3, 4, 104, 150, 151, 206, 436, 497], "complex": [10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 64, 84, 97, 98, 101, 104, 108, 115, 116, 117, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 142, 145, 146, 170, 175, 176, 182, 183, 195, 196, 197, 198, 206, 207, 209, 225, 227, 229, 235, 240, 249, 251, 308, 309, 365, 423, 424, 426, 450, 456, 479, 483, 484, 497, 501], "complex128": [9, 56, 432], "complex64": [9, 56, 98, 142, 338], "compliant": 98, "complic": [103, 505], "compon": [10, 37, 120, 125, 132, 135, 170, 240, 423], "compos": 76, "composit": [86, 187, 458, 468], "compress": [6, 113, 442, 460, 497], "comput": [4, 10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 65, 72, 73, 79, 80, 84, 85, 86, 94, 95, 103, 109, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 143, 159, 160, 161, 162, 163, 164, 170, 171, 173, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 223, 225, 227, 230, 231, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 350, 361, 365, 423, 425, 426, 427, 434, 438, 440, 444, 445, 446, 447, 452, 456, 458, 462, 463, 464, 468, 471, 475, 483], "compute_uv": [193, 209], "concat": 71, "concaten": [6, 69, 70, 100, 166, 439, 451, 455, 461, 486], "concept": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489, 497], "cond": [6, 199], "condit": [34, 49, 97, 98, 113, 193, 199, 203, 305, 352, 360, 367, 369, 442, 487], "condlist": 442, "confus": 147, "conj": [6, 73, 98, 121, 170, 192, 195, 365], "conjug": [6, 10, 72, 97, 98, 127, 130, 170, 192, 195, 196, 197, 198, 227, 308, 365, 484], "consecut": [94, 102, 159], "conserv": 232, "consid": [17, 23, 36, 37, 40, 41, 43, 45, 104, 132, 157, 174, 177, 196, 198, 202, 212, 224, 227, 372, 400, 431, 479], "consist": [37, 38, 102, 116, 117, 119, 122, 123, 124, 128, 129, 131, 133, 150, 164, 211, 212, 461, 464], "constant": [9, 101, 159], "constraint": 56, "construct": [40, 41, 42, 67, 89, 92, 93, 98, 101, 114, 149, 150, 151, 152, 153, 168, 186, 213, 233, 306, 354, 442, 465, 466, 487, 490], "constructor": 497, "consum": [98, 325], "contain": [10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 42, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 76, 77, 79, 80, 83, 84, 93, 96, 98, 101, 107, 109, 110, 112, 117, 118, 119, 122, 127, 130, 132, 138, 142, 143, 144, 145, 146, 147, 148, 153, 158, 159, 160, 161, 163, 164, 167, 170, 171, 173, 189, 190, 191, 196, 206, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 230, 235, 236, 239, 241, 242, 245, 246, 247, 249, 251, 334, 350, 352, 353, 359, 361, 362, 363, 365, 372, 423, 425, 426, 427, 433, 434, 438, 440, 444, 445, 446, 447, 452, 453, 456, 457, 462, 463, 467, 471, 472, 475, 476, 477, 478, 483, 497], "content": [43, 98, 409], "context": 10, "contigu": [40, 41, 42, 43, 45, 97, 98, 103, 203, 331, 421, 429, 430], "continu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 372, 404], "contourf": 232, "contract": [103, 104, 464], "contrast": [103, 367], "contribut": [10, 56, 163, 164], "control": [4, 49, 64, 70, 71, 77, 98, 103, 166, 227, 305, 439, 455, 486], "conveni": [98, 347, 372], "convent": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 97, 103, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 172, 211, 227, 357, 464], "convers": [49, 98, 103, 305, 490], "convert": [22, 31, 32, 36, 40, 41, 42, 43, 44, 45, 48, 53, 54, 55, 75, 87, 88, 89, 92, 101, 103, 104, 111, 154, 155, 157, 176, 183, 212, 224, 370, 371, 422, 429, 480, 481, 482], "convolut": [10, 74, 78], "convolv": [6, 78], "coolei": 10, "coordin": [81, 151, 159, 171, 186, 232, 422, 480], "copi": [6, 22, 23, 33, 36, 37, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 77, 89, 90, 92, 93, 98, 101, 105, 106, 113, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 232, 233, 240, 259, 305, 318, 320, 328, 334, 337, 354, 355, 356, 358, 360, 361, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 429, 430, 431, 441, 449, 454, 469, 470, 471, 474, 475, 482, 488, 489, 497], "copysign": [6, 350, 361], "copyto": [6, 98, 113, 310, 360], "core": [3, 101, 103, 497], "corner": [117, 119, 123, 124], "corrcoef": [6, 82], "correct": [11, 12, 13, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 70, 71, 72, 73, 76, 79, 80, 87, 88, 96, 107, 109, 110, 112, 115, 121, 127, 129, 136, 142, 143, 144, 145, 146, 147, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 235, 236, 239, 350, 351, 353, 361, 362, 363, 365, 370, 371, 425, 427, 429, 433, 434, 438, 440, 444, 445, 446, 447, 452, 453, 455, 457, 462, 463, 477, 478], "correctli": [20, 26, 28, 31, 32, 46, 50, 81, 204, 228, 234, 241, 242, 248, 250, 352, 364, 458], "correl": [6, 501], "correspond": [6, 10, 23, 31, 32, 36, 39, 40, 41, 42, 43, 44, 45, 49, 68, 70, 71, 75, 87, 88, 89, 90, 92, 93, 98, 99, 105, 106, 114, 117, 118, 119, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 165, 168, 171, 186, 195, 196, 212, 213, 224, 226, 227, 233, 305, 310, 314, 354, 355, 356, 359, 370, 371, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 435, 442, 443, 451, 456, 464, 467, 468, 469, 471, 475, 482, 483, 485, 488, 489, 497], "correspondingli": [10, 451], "cosh": [6, 14, 25, 79, 447, 463], "cosin": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 446, 447, 462, 463], "cost": [103, 104], "costli": 104, "could": [98, 121, 127, 129, 339], "count": [16, 21, 57, 81, 95, 101, 104, 139, 149, 150, 152, 153, 159, 163, 164, 352, 364, 374, 448, 458, 479, 490, 501], "count_nonzero": [6, 352], "counterclockwis": [140, 141, 437], "counterpart": [10, 121, 127, 129, 497], "cov": [6, 390], "covari": 82, "cover": [471, 475, 501], "cpu": [4, 23, 36, 40, 41, 42, 43, 45, 75, 78, 82, 89, 92, 105, 106, 108, 114, 118, 132, 149, 150, 151, 152, 154, 155, 157, 168, 212, 213, 224, 231, 233, 237, 248, 354, 355, 356, 469, 482, 488, 489], "creat": [3, 4, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 91, 92, 93, 98, 101, 104, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 240, 305, 310, 354, 355, 356, 368, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 466, 469, 471, 472, 475, 476, 482, 488, 489, 497, 501], "creation": [101, 104, 490, 497, 501, 505], "crop": [116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "cross": [6, 78, 186], "csingl": 9, "ct": 10, "ctype": 429, "cube": [65, 142, 452], "cubic": 104, "cuda": 4, "cumprod": [6, 98, 243, 497], "cumproduct": 6, "cumsum": [6, 94, 98, 244, 458, 468, 497], "cumul": [84, 85, 86, 94, 98, 243, 244, 311, 312, 458, 468], "cupi": [2, 490], "current": [10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 76, 79, 80, 87, 88, 96, 98, 101, 104, 109, 110, 112, 142, 143, 144, 145, 146, 147, 150, 162, 164, 167, 168, 173, 189, 215, 216, 217, 218, 219, 229, 235, 236, 237, 239, 337, 350, 351, 361, 362, 363, 365, 370, 371, 425, 427, 429, 433, 434, 440, 444, 445, 446, 447, 457, 462, 463, 477, 478], "curv": 468, "custom": 497, "customarili": 10, "cut": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 200], "cutoff": 205, "cycl": [118, 132, 186, 431], "cyclic": 367, "cython": 4, "d": [0, 16, 21, 23, 56, 69, 70, 71, 85, 86, 89, 90, 91, 92, 93, 97, 98, 100, 101, 114, 118, 120, 125, 132, 134, 138, 140, 141, 153, 165, 166, 168, 172, 186, 194, 196, 197, 203, 204, 207, 227, 232, 243, 244, 250, 318, 352, 362, 363, 364, 367, 377, 421, 430, 439, 441, 443, 455, 458, 460, 464, 465, 466, 473, 479, 482, 486, 497], "d0": [372, 399, 401], "d1": [372, 401], "d3": 90, "data": [1, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 121, 127, 129, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 188, 189, 190, 191, 200, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 251, 305, 334, 347, 349, 350, 351, 353, 355, 356, 360, 361, 362, 363, 365, 367, 368, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 461, 462, 463, 466, 469, 477, 478, 483, 486, 487, 488, 489, 490, 501], "datatyp": [101, 202], "date": 4, "datetim": 101, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [82, 98, 249, 251, 341, 348, 456, 483], "decai": 385, "decim": [35, 98, 135, 136, 335, 434, 438], "decomposit": [192, 199, 202, 205, 209, 501], "decompress": 213, "decreas": [95, 468], "decreasingli": [10, 117, 119, 123, 124], "deem": 148, "def": 0, "default": [3, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 177, 178, 179, 180, 181, 188, 189, 190, 191, 192, 193, 196, 198, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 318, 350, 351, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 367, 370, 371, 372, 376, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 413, 416, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 497], "default_rng": 6, "defg": 104, "defici": 202, "defin": [10, 29, 51, 83, 101, 106, 116, 145, 146, 155, 162, 163, 164, 229, 235, 240, 356, 361, 424, 437, 489, 497], "definit": [83, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 143, 192, 468], "deg": [20, 371], "deg2rad": [6, 370, 371, 481], "degre": [6, 20, 87, 249, 251, 370, 371, 414, 437, 456, 481, 483, 505], "del": 505, "delet": [6, 22], "delta": [10, 249, 251, 456, 481, 483], "demonstr": [0, 4, 101], "dens": [171, 186, 233], "densiti": 163, "depend": [4, 34, 93, 115, 121, 127, 129, 196, 200, 206, 208, 209, 212, 248, 250, 442, 487], "deprec": 6, "deprecate_with_doc": 6, "depth": [69, 70, 71, 99, 100, 166, 439, 451, 455, 486], "deriv": 159, "descend": 209, "descr": 101, "describ": [84, 101, 225, 426, 501], "descript": [84, 101, 122, 124, 163, 225, 426, 497], "design": 10, "desir": [23, 36, 40, 41, 43, 45, 48, 63, 105, 106, 114, 122, 123, 124, 154, 155, 157, 168, 212, 224, 355, 356, 465, 469, 488, 489], "destin": [70, 71, 166, 238, 367, 368, 439, 455, 461, 486], "destruct": 505, "det": [6, 207], "detail": [35, 117, 119, 123, 124, 128, 129, 131, 133, 148, 438, 471, 472, 475, 476, 479, 497], "determin": [13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 60, 61, 65, 76, 79, 80, 87, 88, 96, 109, 110, 112, 144, 145, 146, 147, 150, 151, 153, 167, 189, 194, 200, 206, 207, 214, 215, 216, 217, 218, 219, 227, 229, 235, 236, 239, 351, 362, 363, 370, 371, 422, 425, 427, 433, 440, 442, 444, 446, 447, 452, 453, 457, 462, 463, 466, 477, 478, 480], "devel": 4, "develop": [3, 4], "deviat": [98, 230, 246, 249, 251, 341, 372, 387, 394, 456, 483], "devic": [0, 2, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 56, 75, 84, 89, 90, 92, 98, 103, 105, 106, 114, 115, 118, 132, 136, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 225, 226, 227, 230, 233, 246, 249, 251, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 426, 454, 456, 469, 471, 475, 482, 483, 488, 489], "df": [376, 392, 414, 415], "dfden": [380, 393], "dfnum": [380, 393], "dft": [10, 116, 121, 122, 126, 127, 130], "di": [90, 91], "diag": [6, 92, 93, 103, 114, 140, 141, 168, 195, 197, 209, 442, 466], "diag_indic": [6, 91, 134], "diag_indices_from": [6, 90, 134], "diagflat": [6, 89, 93, 466], "diagon": [6, 89, 90, 91, 92, 98, 103, 114, 134, 168, 192, 196, 197, 198, 226, 346, 442, 466, 469, 470, 471, 472, 474, 475, 476, 497], "dice": 389, "dictionari": 101, "diff": [6, 86, 102, 159, 163], "differ": [3, 10, 17, 23, 36, 39, 40, 41, 42, 43, 45, 56, 75, 84, 86, 89, 92, 94, 98, 101, 102, 105, 106, 114, 117, 118, 122, 123, 125, 128, 131, 132, 135, 140, 141, 142, 149, 150, 151, 152, 154, 155, 157, 159, 168, 174, 198, 212, 213, 224, 225, 227, 233, 310, 354, 355, 356, 360, 362, 363, 368, 426, 431, 437, 457, 461, 469, 471, 475, 481, 482, 488, 489, 501], "digit": [6, 10, 135, 163], "dim": [17, 422], "dimens": [16, 21, 22, 31, 32, 36, 53, 54, 55, 56, 69, 70, 71, 77, 81, 82, 83, 90, 93, 94, 98, 99, 101, 111, 123, 124, 136, 140, 141, 159, 166, 171, 172, 186, 202, 204, 206, 225, 228, 230, 232, 233, 234, 238, 241, 242, 245, 246, 247, 248, 249, 250, 251, 318, 326, 337, 349, 352, 354, 364, 368, 372, 402, 404, 405, 407, 422, 426, 430, 437, 443, 451, 454, 455, 456, 458, 459, 460, 461, 465, 466, 471, 472, 475, 476, 479, 480, 483, 485, 497, 501], "dimension": [2, 4, 33, 74, 78, 81, 84, 90, 91, 92, 93, 94, 95, 98, 102, 103, 116, 117, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 149, 150, 152, 159, 165, 171, 186, 200, 206, 210, 211, 225, 228, 232, 233, 234, 241, 242, 245, 247, 249, 251, 340, 349, 354, 357, 364, 426, 449, 456, 458, 460, 465, 468, 479, 483, 484, 485, 490], "direct": [10, 83, 94, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 140, 141, 159, 351, 437], "directli": [101, 151, 171, 224, 352, 461], "directori": 158, "dirichlet": 6, "discard": 478, "discont": 481, "discontinu": 481, "discret": [3, 10, 74, 78, 86, 94, 102, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 159, 372, 490], "disp": 6, "dispers": 417, "displac": [98, 342], "disregard": 431, "distanc": 159, "distinct": [145, 146, 229, 235, 431], "distinguish": 101, "distribut": [3, 4, 224, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 501], "divid": [6, 39, 99, 100, 144, 147, 165, 236, 427, 451, 477, 485], "divis": [96, 144, 147, 236, 362, 363, 427, 451, 477, 478], "divisor": [156, 188, 249, 251, 456, 483], "divmod": [6, 497], "dlpack": 148, "dmlc": 148, "dn": [372, 399, 401], "do": [3, 4, 101, 226, 374, 436, 468], "docstr": 497, "document": [0, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 497], "doe": [22, 23, 39, 64, 103, 113, 115, 130, 145, 146, 148, 206, 240, 243, 244, 360, 431, 451, 460], "domain": [10, 121, 126], "done": [3, 49, 98, 103, 211, 305, 479, 481], "dot": [6, 98, 103, 104, 172, 192, 197, 199, 203, 205, 206, 208, 209, 210, 211, 227, 464, 484], "doubl": [9, 385, 464], "down": 141, "dp": [96, 194, 196, 207, 208, 362, 363, 457, 477], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 241, 242, 245, 247, 248, 305, 310, 354, 355, 356, 366, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "dpnp": [0, 2, 3, 4, 10, 490, 497, 501, 502, 505], "dpnp_arrai": [23, 36, 40, 41, 42, 43, 45, 49, 75, 89, 90, 92, 105, 106, 114, 118, 132, 135, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 169, 171, 212, 213, 224, 226, 233, 252, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489, 490], "dpnp_iface_arraycr": [233, 354], "draw": [372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419], "drawn": [372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 397, 398, 400, 403, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 442], "drill": [374, 391], "driver": 2, "drop": [3, 101], "dsplit": [6, 70, 71, 100, 451], "dst": 77, "dstack": [6, 69, 70, 71, 166, 439, 451, 455, 486], "dt": [101, 468], "dt2": 101, "dtype": [0, 9, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 64, 65, 66, 70, 71, 72, 73, 76, 79, 80, 82, 84, 85, 86, 87, 88, 90, 96, 98, 103, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 188, 189, 190, 191, 203, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 311, 312, 323, 329, 338, 341, 343, 346, 348, 350, 351, 353, 355, 356, 361, 362, 363, 364, 365, 370, 371, 372, 394, 400, 416, 425, 426, 427, 429, 432, 433, 434, 438, 439, 440, 444, 445, 446, 447, 450, 452, 453, 455, 456, 457, 458, 460, 462, 463, 466, 469, 470, 474, 477, 478, 483, 485, 486, 488, 489, 497], "due": [130, 505], "dump": 6, "dx": [159, 468], "dy": 159, "dz": 159, "e": [9, 10, 14, 25, 27, 47, 84, 85, 93, 101, 105, 106, 111, 114, 117, 121, 122, 123, 124, 127, 129, 130, 142, 150, 154, 155, 159, 168, 189, 195, 207, 210, 214, 355, 356, 372, 424, 428, 431, 459, 469, 488, 489], "ea": 104, "each": [0, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 39, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 72, 73, 76, 79, 80, 85, 86, 90, 93, 95, 96, 98, 99, 101, 104, 107, 109, 110, 112, 117, 119, 121, 123, 124, 127, 128, 129, 131, 133, 140, 141, 142, 143, 144, 147, 151, 159, 160, 161, 163, 164, 165, 170, 173, 177, 178, 179, 186, 189, 190, 191, 195, 196, 197, 198, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 236, 238, 239, 240, 335, 350, 352, 353, 361, 362, 363, 365, 368, 374, 391, 422, 423, 425, 427, 428, 431, 433, 434, 435, 438, 440, 444, 445, 446, 447, 451, 452, 453, 455, 457, 461, 462, 463, 465, 468, 471, 472, 475, 476, 477, 478, 479, 480, 485, 497], "easier": 460, "easiest": 4, "easili": [0, 164], "edg": [68, 95, 163, 164], "edge_ord": 159, "ediff1d": [6, 94, 159], "effect": [104, 142, 145, 146, 229, 235, 362, 363, 481], "effici": [10, 116, 130, 150, 202, 205, 209], "efgh": 104, "eig": [6, 196, 197, 198], "eigenvalu": [195, 196, 197, 198, 501], "eigenvector": [195, 196, 197, 198], "eigh": [6, 195, 197, 198], "eigval": [6, 195, 196, 198], "eigvalsh": [6, 195, 196, 197], "einstein": [97, 103, 104, 172, 211, 227, 357, 464], "einsum": [6, 97, 104, 172, 211, 227, 357, 464], "einsum_path": [6, 103], "either": [37, 38, 45, 56, 84, 93, 101, 117, 119, 121, 123, 124, 127, 129, 131, 133, 134, 159, 172, 196, 198, 204, 206, 225, 241, 242, 245, 247, 248, 250, 422, 426, 431, 441, 442, 461, 468], "element": [4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 42, 46, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 66, 68, 72, 73, 76, 77, 79, 80, 84, 85, 86, 91, 93, 94, 95, 96, 98, 101, 102, 104, 107, 109, 110, 112, 113, 114, 115, 117, 119, 123, 124, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 197, 201, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 300, 301, 308, 309, 311, 312, 314, 315, 318, 320, 321, 323, 325, 327, 328, 333, 334, 335, 336, 338, 341, 342, 345, 348, 350, 351, 352, 353, 360, 361, 362, 363, 364, 365, 367, 369, 421, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 456, 457, 458, 460, 462, 463, 464, 465, 466, 468, 470, 472, 474, 476, 477, 478, 479, 480, 481, 483, 487, 497, 501, 505], "element_count": [98, 338, 448], "ellipsi": 103, "els": [0, 207, 257], "elsewher": [114, 168, 469, 487], "empti": [4, 6, 36, 98, 106, 117, 119, 123, 124, 128, 129, 131, 133, 150, 154, 155, 200, 315, 355, 356, 360, 451, 488, 489], "empty_lik": [6, 36, 105, 155, 356, 489], "enabl": [134, 202, 205, 209], "encount": [243, 244, 245, 247, 442], "end": [22, 23, 93, 101, 102, 104, 122, 157, 212, 224], "end_tim": 0, "endian": 101, "endpoint": [23, 157, 212, 224, 468], "engin": 408, "enlarg": 431, "enough": 163, "ensur": 429, "entir": [56, 84, 121, 163, 164, 225, 230, 245, 246, 247, 249, 251, 426, 456, 483], "entiti": 431, "entri": [39, 98, 99, 101, 105, 113, 121, 127, 129, 134, 139, 140, 141, 165, 340, 451, 454, 485], "enumer": 148, "env": 4, "environ": 4, "ep": [135, 202, 351, 424], "epsilon": [202, 424], "epsneg": 135, "equal": [6, 16, 17, 21, 37, 38, 39, 56, 70, 71, 78, 82, 86, 98, 99, 114, 157, 159, 160, 161, 163, 164, 165, 166, 174, 176, 183, 185, 189, 190, 191, 201, 205, 206, 211, 212, 224, 236, 328, 353, 372, 382, 416, 427, 433, 434, 438, 439, 444, 451, 454, 455, 469, 471, 475, 485, 486], "equal_nan": [17, 37, 174, 479], "equat": [200, 208, 210, 211, 501], "equiv": [49, 64, 70, 71, 77, 98, 103, 166, 201, 227, 305, 439, 455, 486], "equival": [10, 15, 16, 18, 19, 21, 31, 32, 33, 35, 38, 56, 75, 83, 84, 87, 88, 96, 97, 98, 99, 100, 104, 111, 113, 138, 145, 146, 147, 165, 186, 210, 225, 236, 239, 259, 300, 301, 313, 326, 334, 337, 347, 349, 352, 357, 359, 361, 370, 371, 372, 400, 426, 427, 430, 437, 438, 443, 449, 457, 458, 460, 464, 467, 477, 479, 485, 497, 505], "error": [84, 99, 103, 108, 121, 126, 165, 195, 225, 422, 426, 451, 454, 485, 490, 497], "essenti": 4, "estim": [82, 164, 374, 391, 468], "et": 10, "etc": [10, 36, 41, 101, 117, 119, 123, 124, 128, 129, 131, 133, 391], "euclidean": 200, "euler_gamma": 9, "evalu": [16, 17, 21, 98, 103, 104, 107, 176, 183, 211, 232, 300, 301, 357, 442, 464, 497], "even": [10, 101, 118, 120, 121, 122, 125, 126, 127, 129, 130, 132, 176, 183, 434, 438], "evenli": [23, 157, 212, 224, 434, 468], "event": 219, "everi": [129, 368, 461], "everywher": 127, "exact": [113, 203, 360], "exactli": [10, 48, 153, 372, 400, 442], "examin": 200, "exampl": [2, 3, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 313, 315, 318, 319, 320, 326, 328, 332, 334, 337, 338, 339, 342, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 505], "exce": [219, 451], "except": [4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 75, 76, 79, 80, 87, 88, 94, 95, 96, 97, 98, 105, 106, 107, 109, 110, 112, 114, 128, 129, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 165, 166, 167, 168, 173, 177, 178, 179, 189, 190, 191, 203, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 234, 235, 236, 239, 245, 246, 247, 248, 249, 250, 251, 305, 350, 351, 353, 355, 356, 361, 362, 363, 364, 365, 370, 371, 425, 427, 428, 429, 430, 433, 434, 440, 444, 445, 446, 447, 449, 451, 452, 453, 456, 457, 458, 462, 463, 477, 478, 483, 488, 489], "exclud": [11, 12, 22, 212, 372, 416], "exclus": [372, 400], "execut": [3, 4, 40, 41, 42, 78, 82, 108, 151, 231, 237, 248, 375, 377, 378, 388, 393, 409, 505], "executor": 0, "exist": [10, 69, 70, 71, 100, 101, 111, 148, 166, 430, 439, 451, 455, 486, 501], "exp": [6, 10, 110, 112, 116, 207, 216, 218, 225], "exp2": [6, 109, 112], "expand": [94, 111], "expand_dim": [6, 31, 32], "expect": [4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 88, 96, 97, 101, 107, 109, 110, 112, 115, 127, 136, 142, 143, 144, 145, 146, 147, 156, 160, 161, 162, 167, 170, 173, 174, 177, 178, 179, 188, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 234, 235, 236, 239, 243, 244, 246, 248, 249, 250, 251, 350, 351, 353, 361, 362, 363, 364, 365, 370, 371, 423, 425, 426, 427, 433, 434, 438, 440, 444, 445, 446, 447, 452, 453, 456, 457, 458, 462, 463, 477, 478, 483, 487], "explain": [119, 124, 129, 133, 497], "explan": 101, "explicit": 103, "explicitli": [93, 117, 119, 123, 124, 128, 129, 131, 133], "exploit": [10, 130], "explor": [104, 374, 391], "expm1": [6, 109, 110, 216], "expon": [10, 109, 110, 112, 142, 201, 218, 219, 225, 362, 363, 398, 501], "exponenti": [6, 10, 104, 218, 219, 225, 385, 411], "expos": [149, 497], "express": [10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 103, 104, 213, 505], "extend": [10, 101, 187, 497], "extens": [0, 1, 3, 4, 9, 158, 213, 490], "extobj": 227, "extra": [101, 127, 153], "extract": [6, 89, 92, 93, 103, 114, 138, 168, 171, 226, 360, 442, 460, 466], "extrapol": 431, "extrema": 501, "ey": [6, 72, 73, 81, 98, 123, 124, 145, 146, 168, 172, 187, 199, 201, 202, 210, 211, 223, 229, 235, 443, 466], "f": [0, 6, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 114, 115, 118, 130, 132, 136, 142, 143, 144, 145, 146, 147, 154, 155, 156, 159, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 201, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 235, 236, 239, 305, 310, 318, 350, 351, 353, 355, 356, 361, 362, 363, 365, 370, 371, 393, 421, 422, 425, 427, 429, 430, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 473, 477, 478, 480, 487, 488, 489], "f0": 101, "f1": 101, "f2": 101, "f4": 64, "f8": [64, 101], "f_contigu": [43, 45, 429], "f_k": 10, "fab": [6, 11, 12], "fact": 197, "factor": [10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 192, 206], "fail": [98, 337, 374], "fallback": [195, 197, 375, 377, 378, 388, 393, 409], "fals": [16, 17, 18, 19, 20, 21, 31, 32, 36, 37, 38, 41, 43, 45, 49, 56, 58, 59, 61, 62, 63, 64, 75, 81, 82, 84, 86, 95, 98, 101, 103, 104, 106, 107, 113, 134, 148, 151, 155, 157, 160, 161, 163, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 190, 191, 192, 193, 202, 204, 205, 209, 212, 220, 221, 222, 223, 224, 225, 228, 230, 231, 232, 234, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 257, 300, 301, 302, 303, 305, 322, 323, 324, 329, 341, 343, 348, 352, 353, 356, 364, 366, 426, 429, 430, 442, 445, 456, 458, 479, 482, 483, 487, 489, 497], "famili": 10, "fanci": 460, "fashion": [219, 497], "fast": [10, 116, 117, 119, 123, 124, 129, 130, 133], "fastcopyandtranspos": 6, "faster": [10, 145, 146], "fastest": [98, 318, 421, 430], "fb": [104, 473], "featur": 101, "few": 134, "fft": [6, 490, 501], "fft2": [6, 116, 119, 123], "fftfreq": [6, 10, 116, 120, 125, 132], "fftn": [6, 116, 117, 124, 130, 133], "fftshift": [6, 10, 117, 119, 124, 125], "fh": 150, "field": [101, 232], "field1": 101, "file": [149, 150, 152, 153, 158, 213], "filenam": [150, 213], "fill": [6, 22, 36, 98, 105, 106, 134, 154, 155, 163, 164, 232, 240, 310, 355, 356, 431, 469, 488, 489], "fill_diagon": 6, "fill_valu": [154, 155], "filt": 473, "filter": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "final": [4, 10, 129, 130, 131, 133, 157, 224], "find": [34, 57, 95, 98, 115, 163, 202, 205, 209, 336, 351, 352, 428, 441, 449, 479, 501], "find_common_typ": 6, "fine": 4, "finfo": [351, 424], "finfo_object": 135, "finit": [42, 177, 178, 179, 180, 181, 240], "first": [15, 16, 17, 21, 29, 31, 32, 33, 37, 38, 51, 56, 58, 60, 61, 69, 70, 71, 76, 83, 84, 93, 96, 97, 98, 101, 104, 107, 110, 117, 119, 121, 123, 124, 139, 142, 144, 145, 146, 147, 156, 159, 160, 161, 163, 164, 165, 167, 172, 174, 185, 187, 188, 189, 190, 191, 203, 210, 213, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 234, 235, 236, 239, 241, 242, 318, 353, 357, 360, 362, 363, 364, 421, 427, 430, 433, 435, 437, 439, 441, 442, 449, 450, 453, 457, 458, 459, 461, 464, 466, 477, 479, 484, 485, 486], "fit": [200, 428], "fix": [6, 35, 66, 93, 101, 143, 367, 434, 438, 478], "flag": [43, 45, 98, 101, 310, 429], "flanneri": 10, "flat": [31, 32, 98, 102, 137, 318, 422, 428, 480], "flatnonzero": [6, 352], "flatten": [6, 22, 31, 32, 33, 70, 71, 81, 85, 86, 89, 92, 93, 98, 102, 134, 138, 163, 164, 228, 234, 241, 242, 243, 244, 248, 250, 317, 331, 339, 352, 357, 368, 421, 422, 428, 435, 449, 460, 461, 466, 479, 480, 484], "flexibl": [97, 101, 150, 203], "flip": [6, 59, 93, 134, 140, 141, 173, 374, 437], "fliplr": [6, 93, 134, 139, 141, 437], "flipud": [6, 93, 134, 139, 140, 437], "float": [11, 12, 20, 23, 29, 40, 41, 44, 51, 56, 64, 76, 84, 86, 101, 105, 106, 110, 114, 115, 118, 132, 135, 136, 142, 149, 150, 151, 152, 153, 154, 155, 156, 159, 163, 164, 168, 170, 200, 201, 202, 204, 205, 212, 213, 218, 219, 224, 225, 228, 230, 234, 240, 246, 249, 251, 351, 355, 356, 362, 363, 372, 376, 401, 402, 404, 405, 407, 410, 411, 413, 416, 423, 424, 425, 426, 440, 456, 469, 481, 483, 488, 489, 497, 501], "float16": [9, 142], "float32": [0, 9, 42, 44, 49, 64, 85, 98, 101, 103, 142, 305, 351, 372, 394, 399, 401, 402, 404, 405, 407, 413, 416, 429, 432], "float64": [0, 9, 44, 49, 56, 64, 86, 98, 101, 103, 305, 372, 373, 379, 380, 381, 383, 385, 386, 387, 394, 395, 398, 399, 401, 402, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 432, 485], "float_pow": [6, 362, 363], "floor": [6, 35, 66, 136, 144, 236, 427, 434, 438, 478], "floor_divid": [6, 236, 427], "flop": 104, "flush": 150, "fmax": [6, 146, 228, 229, 235, 245, 362, 363], "fmin": [6, 145, 229, 234, 235, 247, 362, 363], "fmod": [6, 236, 362, 363, 427], "fn": 151, "fname": 213, "follow": [4, 10, 56, 101, 111, 127, 135, 148, 169, 196, 198, 205, 429, 464, 497, 501], "forc": [101, 103], "forg": 4, "form": [10, 22, 36, 40, 41, 42, 43, 44, 45, 69, 75, 89, 92, 98, 100, 103, 104, 123, 124, 127, 154, 155, 157, 176, 183, 186, 212, 224, 347, 431, 439, 482, 486], "format": [101, 148, 150, 153, 501], "format_float_posit": 6, "format_float_scientif": 6, "former": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 368, 461], "forth": 464, "fortran": [45, 49, 98, 305, 318, 421, 422, 429, 430, 480], "forward": [10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 159], "found": [4, 441, 497], "four": [372, 401], "fourier": [10, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 490], "fourth": 117, "frac": [10, 468], "fraction": [237, 478], "free": [98, 334], "freedom": [249, 251, 414, 456, 483], "freq": [118, 120, 125, 132], "freq_spectrum": 121, "frequenc": [10, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132], "freshli": [180, 181], "frexp": 6, "fro": [193, 204], "frobeniu": 193, "from": [3, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 62, 64, 67, 70, 71, 75, 77, 84, 87, 88, 89, 90, 92, 93, 98, 100, 101, 103, 105, 106, 110, 113, 114, 118, 122, 131, 132, 133, 139, 142, 148, 149, 150, 151, 152, 153, 154, 155, 159, 163, 166, 168, 171, 186, 195, 197, 198, 202, 203, 213, 225, 226, 232, 233, 306, 310, 340, 345, 354, 355, 356, 360, 364, 368, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 426, 430, 431, 432, 437, 439, 441, 442, 453, 454, 455, 458, 460, 461, 466, 469, 471, 473, 475, 476, 479, 481, 482, 486, 487, 488, 489, 501], "from_": 64, "from_dlpack": 6, "frombuff": [6, 150, 152, 153, 213], "fromfil": [6, 149, 152, 153], "fromfunct": [6, 40, 41, 42], "fromit": [6, 40, 41, 42, 149, 150, 153], "frompyfunc": 6, "fromregex": [6, 213], "fromstr": [6, 149, 150, 152, 213], "front": 473, "full": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "full_lik": [6, 36, 106, 154, 356, 489], "full_matric": 209, "fulli": 101, "function": [0, 2, 3, 11, 12, 13, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 75, 78, 82, 84, 87, 88, 93, 96, 98, 103, 105, 106, 108, 112, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133, 134, 142, 147, 149, 150, 151, 152, 153, 154, 155, 158, 159, 162, 163, 164, 168, 186, 195, 197, 203, 213, 216, 218, 219, 225, 226, 231, 232, 236, 237, 248, 300, 301, 310, 313, 334, 337, 347, 355, 356, 362, 363, 368, 370, 371, 372, 375, 377, 378, 388, 393, 409, 426, 427, 429, 431, 438, 439, 444, 456, 460, 461, 465, 471, 472, 475, 476, 477, 483, 486, 487, 488, 489, 490, 497, 501], "fundament": [10, 101], "further": [471, 475], "futur": [101, 164], "fweight": 82, "g": [4, 10, 101, 105, 106, 114, 154, 155, 168, 355, 356, 372, 469, 488, 489, 505], "g98168fe8a2c": 6, "gamma": [6, 412], "gauss": 10, "gaussian": [372, 394, 418], "gc": 104, "gcd": [6, 188], "gen": 103, "gender": 101, "gener": [4, 10, 33, 56, 101, 122, 127, 130, 133, 157, 172, 195, 196, 197, 198, 205, 206, 213, 224, 372, 374, 377, 408, 468, 471, 475, 482, 497, 501], "genfromtxt": [6, 213], "geometr": [6, 157, 212], "geomspac": [6, 212, 224], "get": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 91, 92, 98, 105, 106, 114, 118, 121, 127, 129, 132, 142, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 337, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 461, 469, 471, 472, 475, 476, 482, 488, 489, 497], "get_arrai": 98, "get_array_wrap": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": [6, 372], "get_sycl_devic": 372, "get_sycl_queu": 372, "getbufs": 6, "geterr": 6, "geterrcal": 6, "geterrobj": 6, "getfield": [6, 101], "getter": [98, 337], "gid": 164, "github": 148, "give": [10, 92, 98, 142, 164, 347, 430, 443, 448, 479], "given": [16, 17, 21, 22, 23, 31, 32, 35, 36, 37, 40, 41, 43, 45, 49, 56, 69, 75, 81, 82, 85, 86, 94, 97, 98, 100, 101, 102, 104, 105, 106, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 145, 146, 154, 155, 157, 159, 163, 164, 174, 199, 212, 224, 226, 228, 229, 232, 234, 235, 243, 244, 245, 247, 248, 249, 250, 251, 302, 303, 305, 311, 312, 324, 329, 330, 335, 338, 341, 343, 348, 352, 355, 356, 360, 364, 366, 367, 372, 377, 399, 416, 426, 428, 429, 434, 435, 436, 437, 439, 441, 442, 448, 451, 456, 458, 460, 464, 465, 468, 469, 479, 483, 486, 488, 489, 497], "global": 0, "good": 384, "gpu": [0, 3, 4, 23, 36, 40, 41, 42, 43, 45, 75, 89, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 157, 168, 212, 213, 224, 233, 354, 355, 356, 469, 482, 488, 489], "grade": 101, "gradient": [6, 94, 102, 200], "graphic": 4, "great": 10, "greater": [6, 98, 99, 107, 144, 161, 189, 190, 191, 202, 206, 328, 353, 433, 442, 444, 454, 481], "greater_equ": [6, 107, 160, 190, 191, 353], "greatest": [144, 156, 188], "greedi": [103, 104], "grid": [40, 41, 42, 151, 171, 232, 233, 354], "group": [34, 352], "guarante": [101, 429, 430], "guid": [2, 3], "gumbel": 6, "gz": 213, "h": [158, 192, 206, 232], "ha": [4, 10, 11, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 50, 52, 56, 84, 85, 86, 95, 101, 107, 111, 121, 126, 127, 151, 159, 160, 161, 166, 170, 175, 176, 182, 183, 190, 191, 197, 207, 209, 225, 230, 236, 243, 244, 246, 248, 249, 250, 251, 353, 364, 423, 424, 425, 426, 427, 428, 436, 440, 442, 454, 455, 456, 458, 459, 460, 465, 466, 480, 483, 497], "had": [368, 461], "hadamard": 104, "half": [14, 25, 117, 119, 120, 121, 123, 124, 212, 372, 402, 404, 405, 407, 416, 459], "ham": 6, "han": 6, "hand": [83, 211], "handl": [23, 101, 115, 213, 352, 422, 460, 461, 501], "happen": [49, 56, 98, 305, 374, 468], "hardwar": 4, "has_aspect_fp64": 0, "hasobject": 101, "have": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 69, 70, 71, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 96, 97, 100, 101, 107, 109, 110, 112, 115, 123, 124, 133, 135, 136, 142, 143, 144, 145, 146, 147, 156, 160, 161, 162, 166, 167, 170, 173, 174, 177, 178, 179, 180, 181, 188, 189, 190, 191, 200, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 235, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 350, 351, 353, 360, 361, 362, 363, 364, 365, 370, 371, 391, 423, 425, 426, 427, 428, 429, 433, 434, 438, 439, 440, 444, 445, 446, 447, 452, 453, 455, 456, 457, 458, 462, 463, 465, 477, 478, 481, 483, 486, 497], "hd": 104, "header": 158, "heavisid": 6, "hello": 101, "help": 505, "helper": 501, "henc": [111, 159], "here": [6, 33, 101, 103, 121, 126, 127, 449, 471, 475], "hermit": [196, 198], "hermitian": [121, 126, 127, 129, 130, 192, 195, 196, 197, 198, 202, 205, 209, 501], "hfft": [6, 10, 126], "hierarchi": 185, "high": [127, 372, 400, 403, 416], "higher": [103, 165, 484, 485], "highest": 116, "highli": 150, "hist": [163, 410], "hist_0": 164, "hist_1": 164, "histogram": [6, 95, 164, 441, 501], "histogram2d": 6, "histogram_bin_edg": [6, 163], "histogramdd": [6, 163], "hold": [68, 85, 86, 163, 204, 243, 244, 248, 250, 466], "homogen": 101, "horizont": [69, 70, 71, 93, 100, 134, 139, 165, 166, 437, 439, 451, 455, 486], "host": [3, 4, 23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 469, 471, 475, 482, 488, 489], "household": 206, "how": [0, 4, 101, 127, 130, 159, 367, 422, 460, 461, 471, 475], "howev": [98, 339, 460], "hsplit": [6, 70, 71, 451], "hstack": [6, 69, 70, 71, 100, 439, 451, 455, 486], "http": [4, 148], "hyperbol": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 446, 447, 462, 463, 501], "hypergeometr": 6, "hypot": [6, 426], "hypotenus": [167, 426], "i": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 259, 305, 310, 328, 334, 337, 339, 342, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 497, 505], "i0": 6, "i1": [98, 101, 342], "i2": [98, 101, 342], "i3": [98, 342], "i4": [64, 101], "i7": 103, "i8": [64, 101], "icpx": 4, "icx": 4, "id": [16, 21, 98, 320], "ident": [3, 6, 16, 21, 42, 84, 101, 114, 125, 134, 208, 411], "identifi": 101, "ieee": 135, "ifft": [6, 116, 123, 124, 126, 127, 132], "ifft2": [6, 117, 122, 124], "ifftn": [6, 119, 122, 123], "ifftshift": [6, 10, 120, 124], "ignor": [31, 32, 83, 101, 145, 146, 153, 163, 164, 228, 229, 230, 234, 235, 241, 242, 245, 246, 247, 249, 251, 456, 483], "ihfft": [6, 121], "ii": [103, 395], "iinfo": 389, "iinfo_object": 169, "ij": [103, 104, 232], "ijk": 103, "il": 104, "il1": 471, "il2": 471, "illustr": 197, "ilm": 103, "imag": [6, 10, 20, 37, 98, 423, 424, 431, 497], "imaginari": [20, 37, 98, 127, 145, 146, 170, 175, 176, 182, 183, 195, 196, 198, 201, 229, 235, 240, 319, 423, 424, 450, 479], "implement": [3, 4, 6, 44, 116, 148], "impli": 101, "implicit": 103, "import": [0, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 313, 318, 319, 326, 328, 332, 337, 338, 339, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 397, 406, 410, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "improv": 103, "in1d": 6, "in_array1": 108, "includ": [4, 10, 16, 21, 22, 23, 36, 40, 41, 42, 43, 44, 45, 56, 75, 84, 89, 92, 95, 103, 104, 115, 154, 155, 157, 158, 163, 164, 176, 183, 205, 212, 224, 225, 230, 245, 246, 247, 249, 251, 372, 416, 426, 456, 482, 483], "include_initi": 84, "inclus": [372, 400, 403, 442], "increas": [95, 101, 111, 122, 127, 163, 431, 482], "ind": [33, 95, 210, 367, 368, 471, 472, 475, 476], "index": [22, 31, 32, 33, 34, 67, 98, 101, 104, 114, 117, 123, 131, 138, 148, 171, 186, 232, 241, 242, 306, 318, 342, 352, 367, 368, 421, 422, 430, 431, 441, 442, 451, 460, 461, 471, 475, 479, 480, 487, 490, 501], "index_arrai": [31, 32, 33], "indic": [6, 10, 31, 32, 33, 34, 39, 84, 90, 91, 95, 98, 99, 101, 103, 104, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 138, 148, 151, 163, 165, 210, 211, 226, 227, 233, 241, 242, 302, 303, 304, 327, 330, 336, 345, 352, 359, 367, 368, 422, 430, 441, 444, 445, 449, 451, 460, 461, 467, 471, 472, 475, 476, 479, 480, 485, 487], "indices_or_sect": [39, 99, 165, 451, 485], "indirect": [33, 449], "individu": 382, "inequ": 353, "inexact": [142, 240, 248, 250], "inf": [9, 13, 14, 17, 24, 25, 26, 29, 30, 40, 41, 42, 46, 51, 52, 76, 96, 174, 177, 178, 179, 180, 181, 193, 204, 214, 215, 217, 229, 235, 240, 241, 242, 245, 247, 250, 365, 452, 477], "infer": [42, 84, 225, 426, 430], "infin": [13, 14, 16, 21, 24, 25, 26, 27, 28, 30, 42, 46, 47, 50, 52, 144, 177, 178, 179, 180, 181, 236, 240, 245, 247, 250, 427, 478, 501], "infinit": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 193], "infj": [27, 28, 47, 50], "info": 6, "inform": [0, 43, 45, 98, 101, 121, 127, 129, 135, 316, 429, 497, 501], "initi": [18, 19, 84, 98, 105, 153, 228, 234, 245, 247, 248, 250, 322, 324, 329, 343, 364, 372, 458], "inner": [6, 83, 103, 104, 203, 227, 357], "input": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 196, 202, 204, 206, 207, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 318, 326, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 394, 400, 416, 421, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 477, 478, 479, 481, 482, 483, 484, 485, 488, 489], "insert": [6, 22, 31, 32, 93, 95, 98, 103, 111, 157, 163, 212, 224, 241, 242, 245, 247, 336, 368, 441, 442, 501], "instal": 2, "instanc": [3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 121, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 168, 171, 212, 213, 224, 226, 227, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "instead": [34, 49, 93, 97, 98, 103, 111, 143, 157, 163, 164, 171, 203, 212, 219, 224, 228, 234, 305, 352, 364, 422, 431, 458, 497], "instruct": 4, "int": [9, 16, 21, 22, 23, 31, 32, 33, 35, 39, 44, 56, 63, 70, 71, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 98, 99, 101, 105, 106, 107, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 164, 165, 168, 169, 171, 200, 201, 204, 210, 211, 212, 224, 225, 226, 228, 230, 234, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 326, 338, 347, 349, 355, 356, 358, 359, 364, 367, 368, 372, 400, 403, 422, 426, 428, 430, 431, 435, 436, 437, 438, 448, 449, 451, 454, 455, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 479, 480, 481, 482, 483, 485, 488, 489, 497], "int16": 101, "int32": [0, 9, 44, 64, 101, 105, 106, 114, 149, 152, 154, 155, 168, 213, 248, 250, 355, 356, 372, 374, 382, 384, 389, 391, 397, 400, 416, 432, 458, 469, 488, 489], "int64": [0, 9, 64, 101, 248, 250, 432], "int8": [101, 364], "int_": 9, "int_0": 468, "int_t": 468, "intc": 9, "integ": [23, 35, 39, 56, 57, 58, 59, 60, 61, 63, 66, 84, 85, 86, 95, 98, 99, 101, 136, 139, 142, 143, 144, 148, 156, 163, 165, 169, 173, 186, 188, 189, 201, 204, 210, 225, 228, 230, 234, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 339, 347, 362, 363, 364, 367, 372, 400, 403, 408, 422, 426, 427, 428, 430, 433, 434, 435, 437, 438, 441, 442, 443, 451, 453, 456, 458, 460, 464, 466, 478, 479, 480, 481, 483, 485, 497], "integer_lik": 464, "integr": [3, 4, 56, 84, 86, 142, 163, 225, 230, 237, 246, 249, 251, 362, 363, 426, 456, 458, 468, 483], "intel": [3, 103], "intend": [98, 347], "intent": 142, "interchang": [98, 238, 344, 459], "interfac": [0, 149], "interior": 159, "intermedi": [85, 103, 104], "intern": 372, "interp": 6, "interpol": [127, 431], "interpret": [2, 40, 41, 42, 48, 63, 75, 101, 121, 127, 129, 149, 186, 226, 352, 367, 497], "intersect1d": 6, "interv": [10, 13, 14, 23, 24, 25, 26, 28, 46, 50, 95, 111, 157, 212, 224, 372, 400, 402, 404, 405, 407, 415, 416, 459], "intp": [248, 250], "intrins": 497, "introduc": 435, "introduct": 10, "introselect": [98, 328, 358], "inv": [6, 193, 205], "invers": [10, 13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 199, 205, 210, 211, 216, 418, 446, 447, 462, 463, 479], "invert": [6, 59, 199, 205, 210], "invok": 497, "involv": 210, "io": [148, 213], "irfft": [6, 118, 121, 126, 128, 129, 130, 132], "irfft2": [6, 127, 129, 131], "irfftn": [6, 127, 128, 133], "irrespect": 33, "is_busdai": 6, "isalignedstruct": 101, "isbuiltin": 101, "isclos": [6, 17], "iscomplex": [6, 176, 182], "iscomplexobj": [6, 175, 183], "isfinit": [6, 178, 179, 180, 181, 240, 245, 247, 250], "isfortran": 6, "isin": 6, "isinf": [6, 177, 179, 180, 181, 240], "isn": 101, "isnan": [6, 177, 178, 180, 181, 240, 243, 244, 245, 247, 248, 250], "isnat": [6, 179], "isneginf": [6, 177, 178, 179, 181, 240], "isposinf": [6, 177, 178, 179, 180, 240], "isreal": [6, 175, 183], "isrealobj": [6, 176, 182], "isscalar": 6, "issctyp": 6, "issu": 123, "issubclass_": 6, "issubdtyp": 6, "issubsctyp": 6, "item": [6, 34, 98, 149, 150, 152, 479, 490], "item_dtyp": 101, "item_hasobject": 101, "item_is_point": 101, "items": [98, 101], "itemset": 6, "iter": [6, 40, 41, 42, 98, 104, 137, 149, 150, 152, 153, 317, 318, 368, 431, 461, 501], "its": [4, 6, 10, 11, 12, 16, 21, 33, 56, 89, 98, 121, 127, 129, 135, 163, 164, 168, 195, 196, 197, 198, 203, 205, 211, 230, 246, 249, 251, 347, 359, 409, 421, 426, 430, 449, 456, 467, 468, 469, 483, 497], "itself": [49, 98, 101, 240, 305, 497], "iu": 226, "iu1": [226, 475], "iu2": 475, "ix_": 6, "ixgrid": 186, "j": [72, 73, 98, 103, 117, 119, 121, 122, 123, 124, 126, 127, 130, 131, 133, 142, 151, 170, 171, 187, 192, 195, 196, 217, 227, 240, 347, 357, 365, 368, 423, 450, 453, 461, 464], "j1": 187, "jame": 10, "ji": 103, "jil": 103, "jk": [103, 104], "jl": 104, "john": 10, "join": [69, 70, 71, 100, 166, 439, 451, 455, 486, 501], "jump": [87, 370], "just": [69, 93, 101, 117, 123, 128, 130, 131], "k": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 89, 92, 96, 98, 103, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 155, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 187, 188, 189, 190, 191, 200, 206, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 235, 236, 239, 259, 305, 310, 350, 351, 353, 356, 361, 362, 363, 365, 370, 371, 425, 427, 433, 434, 437, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 464, 469, 470, 471, 472, 474, 475, 476, 477, 478, 481, 487, 489, 505], "kaiser": 6, "kappa": 417, "keep": [48, 49, 98, 305, 479], "keepdim": [16, 18, 19, 21, 31, 32, 56, 81, 98, 204, 225, 228, 230, 231, 234, 241, 242, 245, 246, 247, 248, 249, 250, 251, 300, 301, 302, 303, 322, 323, 324, 329, 341, 343, 348, 364, 366, 368, 426, 456, 458, 461, 483], "kei": [3, 33, 98, 101, 137, 264, 295, 449], "key2": 101, "keyword": [10, 11, 12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 75, 76, 79, 80, 83, 87, 88, 89, 90, 92, 96, 98, 105, 106, 109, 110, 112, 114, 118, 132, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 162, 167, 168, 171, 173, 189, 213, 215, 216, 217, 218, 219, 226, 227, 229, 233, 235, 236, 237, 239, 240, 310, 350, 351, 354, 355, 356, 361, 362, 363, 365, 370, 371, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 425, 427, 433, 434, 440, 444, 445, 446, 447, 457, 462, 463, 469, 471, 475, 477, 478, 482, 487, 488, 489, 497], "ki": 103, "kind": [33, 49, 64, 70, 71, 77, 84, 98, 101, 103, 135, 166, 203, 225, 227, 304, 305, 328, 339, 358, 426, 439, 449, 455, 486, 501], "kl": [10, 103, 104], "known": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 150, 410], "kron": 6, "kroneck": 187, "kth": [98, 328, 358], "kwarg": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 76, 79, 80, 87, 88, 96, 98, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 151, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 235, 236, 237, 239, 289, 307, 334, 350, 351, 353, 361, 362, 363, 365, 370, 371, 425, 427, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 477, 478], "l": [10, 39, 101, 192, 196, 198], "la": [195, 197, 198], "label": 103, "laid": 45, "lam": 397, "lambda": 151, "lapack": [195, 197], "laplac": 6, "laptop": 4, "larg": [10, 87, 101, 163, 205, 240, 370, 481, 505], "larger": [103, 116, 117, 119, 122, 123, 124, 126, 128, 129, 130, 131, 133, 135, 431, 466, 481, 497], "largest": [10, 104, 130, 135, 143, 169, 200, 236, 240, 427], "largest_singular_valu": 205, "last": [16, 21, 22, 33, 83, 93, 94, 98, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 139, 157, 159, 172, 203, 212, 224, 227, 318, 364, 421, 430, 435, 441, 449, 454, 458, 464, 481], "later": 505, "latest": [4, 148], "latter": [13, 24, 26, 27, 28, 30, 46, 47, 50, 52, 145, 146, 229, 235, 368, 461], "layout": [4, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 103, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 154, 155, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 235, 236, 239, 310, 316, 350, 351, 353, 355, 356, 361, 362, 363, 365, 370, 371, 425, 427, 429, 430, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 477, 478, 487, 488, 489, 490], "lcm": [6, 156], "ldexp": 6, "ldot": 10, "lead": [122, 123, 124, 243, 244, 473], "learn": [3, 4, 219], "least": [53, 54, 55, 56, 91, 100, 101, 104, 111, 134, 140, 145, 146, 150, 176, 200, 206, 229, 235, 439, 486], "left": [10, 28, 31, 32, 35, 50, 81, 93, 95, 98, 140, 141, 189, 197, 204, 228, 234, 241, 242, 248, 250, 336, 364, 415, 433, 438, 441, 458, 468, 482], "left_shift": [6, 433], "leg": [167, 426], "legaci": 408, "len": [98, 101, 119, 120, 121, 124, 126, 127, 128, 129, 133, 171, 200, 228, 232, 233, 234, 281, 443, 482], "length": [23, 39, 56, 85, 86, 94, 107, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 153, 157, 159, 163, 166, 195, 209, 224, 228, 232, 234, 243, 244, 368, 375, 430, 432, 439, 441, 442, 443, 454, 461, 464, 465, 486], "less": [6, 85, 86, 107, 160, 161, 163, 164, 191, 200, 205, 243, 244, 248, 250, 353, 364, 442, 444, 458, 466], "less_equ": [6, 107, 160, 161, 190, 353], "let": 374, "level": [490, 497], "level_zero": [23, 36, 40, 41, 42, 43, 45, 75, 89, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 157, 168, 212, 213, 224, 233, 354, 355, 356, 469, 482, 488, 489], "lexicograph": 479, "lexsort": [6, 33, 449], "li": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 435, 436], "librari": [3, 4, 497], "light": 10, "like": [23, 36, 40, 41, 43, 45, 49, 53, 54, 55, 69, 98, 100, 103, 105, 114, 129, 149, 150, 151, 152, 153, 154, 157, 168, 212, 213, 224, 226, 305, 318, 326, 349, 355, 368, 372, 416, 429, 430, 461, 488, 501], "limit": [3, 4, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 82, 87, 88, 96, 98, 101, 105, 106, 107, 108, 109, 110, 112, 114, 135, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 167, 168, 169, 173, 177, 178, 179, 189, 190, 191, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 305, 307, 350, 351, 353, 355, 356, 358, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 397, 398, 400, 403, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 425, 427, 429, 430, 433, 434, 440, 444, 445, 446, 447, 449, 452, 453, 456, 457, 458, 462, 463, 477, 478, 483, 488, 489], "linalg": [6, 97, 103, 104, 453], "line": [200, 213], "linear": [10, 74, 78, 200, 208, 224, 490, 501], "linspac": [0, 6, 23, 108, 157, 224, 232, 468, 481], "linux": 4, "list": [3, 6, 9, 22, 36, 39, 40, 41, 42, 43, 45, 53, 54, 55, 62, 70, 71, 75, 89, 92, 98, 99, 100, 101, 103, 104, 120, 125, 134, 154, 155, 157, 159, 165, 166, 176, 183, 212, 213, 224, 227, 347, 359, 422, 428, 429, 431, 432, 439, 442, 451, 455, 464, 467, 480, 482, 485, 486, 487], "list_pickl": 101, "littl": 101, "ln": 224, "load": [6, 150, 213], "loadtxt": [6, 150], "loc": [372, 383, 385, 386, 394, 418], "local": 4, "locat": [0, 4, 158, 180, 181, 226, 357, 383, 385, 441], "log": [6, 112, 157, 207, 212, 215, 216, 217, 218, 224, 225, 387], "log10": [6, 214, 216, 217], "log1p": [6, 110, 112, 214, 215, 217], "log2": [6, 214, 215, 216, 219], "log_bas": 224, "logabsdet": 207, "logaddexp": [6, 84, 219, 225], "logaddexp2": [6, 218, 225], "logarithm": [84, 194, 207, 212, 214, 215, 216, 217, 218, 219, 225, 388, 501], "logic": [16, 21, 220, 221, 222, 223, 490, 501], "logical_and": [6, 58, 221, 222, 223], "logical_not": [6, 59, 173, 220, 222, 223], "logical_or": [6, 60, 220, 221, 223], "logical_xor": [6, 61, 220, 221, 222], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 157, 212], "logsumexp": [84, 218, 219], "lomax": 395, "long": [101, 201], "longer": [121, 127, 505], "look": [351, 461], "lookfor": 6, "loop": 103, "loos": 102, "lorentz": 410, "lose": [121, 127, 129], "low": [117, 119, 123, 124, 372, 400, 403, 416, 497], "lower": [89, 114, 163, 164, 185, 192, 196, 198, 226, 469, 470, 471, 472, 475, 476], "lowest": [56, 103, 104, 156, 188, 372, 400], "lstsq": 6, "m": [4, 10, 82, 100, 101, 103, 114, 117, 119, 121, 123, 124, 127, 128, 129, 133, 139, 140, 141, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 226, 227, 368, 437, 442, 460, 461, 469, 470, 471, 472, 474, 475, 476], "machin": [4, 10, 135, 169, 200, 219, 424], "machineri": 101, "made": [36, 41, 53, 101, 148, 187, 240, 451], "magnitud": [11, 12, 76, 115, 365], "mai": [16, 20, 21, 49, 64, 68, 70, 71, 77, 86, 98, 101, 103, 104, 111, 117, 119, 121, 122, 123, 124, 126, 127, 130, 133, 159, 164, 166, 193, 195, 196, 200, 204, 206, 219, 224, 227, 240, 246, 249, 251, 305, 337, 368, 424, 431, 439, 455, 465, 486, 497], "main": [89, 90, 91, 92, 93, 114, 134, 168, 198, 226, 466, 469, 470, 471, 474, 475], "mainstai": 10, "maintain": [95, 98, 101, 163, 336, 441, 461], "major": [4, 40, 41, 42, 43, 45, 48, 49, 98, 305, 352, 421, 422, 429, 480], "make": [43, 45, 69, 101, 232, 429, 479, 481], "manag": 0, "mani": [10, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 497], "manipul": [3, 90, 490, 501], "manual": [4, 101, 465], "mappingproxi": 101, "mask": [101, 186, 226, 352, 360, 369, 460, 471, 475], "mask_func": 226, "mask_indic": [6, 471, 475], "mass": 163, "mat": 6, "match": [11, 12, 41, 70, 71, 77, 81, 84, 94, 101, 148, 150, 159, 172, 225, 227, 367, 368, 426, 455, 460, 461, 464, 487], "math": [10, 108], "mathemat": [490, 501], "matlab": 147, "matmul": [6, 97, 206, 209, 484], "matplotlib": [232, 410], "matric": [134, 151, 171, 186, 194, 195, 197, 199, 202, 204, 205, 206, 207, 209, 227, 232, 501], "matrix": [82, 97, 103, 172, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 227, 232, 453, 474, 482, 484, 490, 501], "matrix_pow": [6, 453], "matrix_rank": 6, "matter": 479, "max": [0, 6, 18, 31, 68, 98, 135, 145, 146, 163, 164, 169, 200, 202, 229, 234, 235, 245, 307, 389, 461, 465, 481, 497], "max_arg": 0, "max_val": 0, "maxima": [145, 228, 229], "maximum": [0, 6, 18, 31, 32, 68, 98, 104, 145, 146, 228, 234, 235, 241, 242, 245, 247, 302, 322, 362, 363, 366, 368, 481], "maximum_sctyp": 6, "may_share_memori": 6, "mean": [3, 6, 10, 23, 36, 38, 40, 41, 42, 43, 44, 45, 49, 56, 75, 81, 89, 90, 92, 98, 103, 105, 106, 114, 117, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 149, 150, 151, 152, 153, 154, 155, 159, 168, 171, 193, 204, 213, 226, 231, 233, 246, 249, 251, 305, 310, 318, 347, 354, 355, 356, 372, 385, 387, 390, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 417, 418, 421, 430, 437, 456, 458, 469, 471, 475, 482, 483, 488, 489, 497], "meaningfulli": 497, "meant": 497, "median": [0, 6], "meet": 442, "memori": [3, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 232, 235, 236, 239, 310, 316, 342, 350, 351, 353, 355, 356, 361, 362, 363, 365, 370, 371, 425, 427, 429, 430, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 477, 478, 487, 488, 489, 490, 505], "mersenn": 372, "mesh": 186, "meshgrid": [6, 151, 171, 186, 233, 354], "met": [97, 203], "meta": 101, "metadata": 101, "method": [10, 16, 18, 19, 21, 33, 49, 75, 97, 98, 101, 137, 148, 150, 202, 205, 209, 305, 310, 326, 334, 337, 349, 352, 359, 372, 430, 443, 458, 460, 467, 490], "mgrid": [117, 119, 128, 131, 171, 186], "mgridclass": 233, "middl": [10, 93, 117, 119, 123, 124, 197], "might": [103, 122, 123, 124], "min": [6, 19, 32, 68, 98, 135, 145, 146, 163, 164, 169, 193, 200, 206, 209, 228, 229, 235, 247, 307, 461, 497], "min_scalar_typ": 6, "minima": [146, 234, 235], "minimum": [6, 19, 31, 32, 68, 98, 142, 145, 146, 228, 229, 234, 241, 242, 245, 247, 303, 324, 362, 363, 366], "minlength": 57, "mintypecod": 6, "minu": [112, 144, 236, 427, 478], "miscellan": [2, 490, 501], "mise": 417, "miss": 213, "mix": 227, "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 113, 427, 481], "mode": [67, 74, 78, 98, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 206, 306, 330, 345, 367, 410, 415, 422, 441, 460, 461], "model": [4, 374], "modf": 6, "modifi": [75, 93, 134, 409], "modul": [116, 158, 490], "modulu": [147, 236, 427], "monoton": [95, 163], "moor": 205, "more": [0, 3, 4, 33, 36, 53, 54, 55, 100, 101, 103, 104, 112, 128, 131, 140, 141, 148, 150, 164, 166, 171, 200, 201, 202, 203, 205, 209, 216, 218, 431, 437, 455, 464, 468, 479, 481, 497, 505], "most": [3, 4, 22, 93, 94, 101, 104, 116, 122, 240, 372, 408, 431, 454], "move": [98, 238, 328, 359, 435, 436, 467, 479], "moveaxi": [6, 359, 435, 436, 467], "msg": 0, "msort": 6, "mt19937": 408, "mu": [383, 387, 394, 417], "multi": [2, 98, 171, 186, 233, 342, 354, 422, 479, 490], "multi_dot": [6, 97, 103, 104], "multi_index": 422, "multiarrai": 101, "multidimension": [163, 172, 487], "multinomi": 6, "multipl": [4, 10, 31, 32, 33, 39, 56, 70, 71, 83, 84, 99, 101, 103, 117, 119, 123, 124, 128, 129, 131, 133, 156, 164, 165, 166, 186, 188, 195, 196, 197, 198, 199, 203, 225, 228, 230, 234, 245, 246, 247, 249, 251, 426, 439, 442, 449, 451, 455, 456, 468, 479, 483, 485, 486, 490], "multipli": [6, 85, 103, 197, 248, 364], "multivalu": [13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52], "multivari": 390, "multivariate_norm": 6, "must": [11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 56, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 88, 94, 96, 97, 100, 109, 110, 111, 112, 115, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 142, 143, 144, 145, 146, 147, 150, 153, 156, 159, 160, 161, 162, 163, 164, 166, 167, 170, 173, 177, 178, 179, 180, 181, 188, 189, 190, 191, 192, 203, 204, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 350, 351, 353, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 425, 426, 427, 428, 433, 434, 435, 437, 438, 439, 440, 441, 444, 445, 446, 447, 452, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 477, 478, 483, 486, 487], "mx": 200, "n": [0, 4, 10, 34, 39, 86, 90, 91, 94, 95, 98, 99, 100, 101, 102, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 151, 159, 165, 168, 186, 200, 201, 202, 205, 206, 209, 210, 211, 226, 227, 232, 249, 251, 347, 359, 360, 367, 374, 389, 391, 401, 411, 441, 443, 451, 453, 456, 459, 460, 461, 464, 467, 468, 469, 470, 471, 472, 474, 475, 476, 482, 483, 485, 497], "n1": 232, "n2": [213, 232], "n3": 232, "naiv": 104, "name": [0, 6, 101], "namedtupl": 206, "nan": [9, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 30, 31, 32, 37, 40, 41, 42, 46, 47, 50, 52, 96, 142, 145, 146, 174, 177, 178, 179, 180, 181, 215, 228, 229, 230, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 362, 363, 364, 452, 456, 477, 479, 483, 501], "nan_to_num": 6, "nanargmax": [6, 31, 242], "nanargmin": [6, 32, 241], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 145, 146, 228, 229, 235, 247], "nanmean": [6, 230, 249, 251, 456, 483], "nanmedian": 6, "nanmin": [6, 145, 146, 229, 234, 235, 245], "nanpercentil": 6, "nanprod": [6, 364], "nanquantil": 6, "nanstd": [6, 230, 246, 251, 456, 483], "nansum": 6, "nanvar": [6, 230, 246, 249, 456, 483], "nat": 179, "nativ": 101, "native_cod": 101, "native_dt": 101, "natur": [207, 214, 215, 216, 217, 218, 219, 225], "nbad": 384, "nbyte": 98, "ndarrai": [2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 502], "ndim": [6, 34, 36, 45, 53, 54, 55, 82, 90, 93, 98, 101, 134, 187, 209, 228, 234, 355, 359, 465, 467, 488], "ndmin": 36, "nearest": [35, 66, 136, 143, 144, 236, 427, 434, 438, 478], "necessari": [4, 16, 21, 23, 36, 40, 41, 43, 45, 53, 77, 85, 86, 102, 113, 121, 127, 129, 134, 148, 157, 212, 224, 227, 230, 243, 244, 246, 248, 249, 250, 251, 364, 430, 431, 456, 458, 483, 505], "necessarili": [195, 197], "need": [4, 36, 41, 93, 103, 158, 429, 460, 461, 487], "needs_init": 101, "needs_pyapi": 101, "neg": [6, 10, 16, 21, 35, 57, 76, 92, 93, 95, 98, 111, 114, 117, 119, 122, 123, 124, 127, 130, 139, 142, 153, 159, 163, 177, 178, 179, 180, 181, 201, 240, 245, 247, 249, 250, 251, 337, 361, 362, 363, 364, 367, 391, 422, 438, 456, 458, 460, 461, 466, 483], "negat": 442, "negative_binomi": 6, "neginf": 240, "neither": [97, 145, 146, 209, 227, 245, 247], "nest": [44, 100, 166, 439, 455, 486], "nested_it": 6, "net": [145, 146, 229, 235], "never": [430, 481], "new": [22, 36, 49, 62, 63, 69, 70, 71, 81, 84, 85, 86, 93, 98, 100, 101, 102, 105, 106, 111, 145, 146, 148, 152, 153, 154, 155, 157, 166, 168, 212, 224, 225, 226, 229, 235, 238, 243, 244, 248, 250, 305, 334, 337, 347, 355, 356, 359, 426, 430, 431, 435, 436, 439, 451, 455, 465, 467, 486, 487, 488, 489, 497], "new_dtyp": 101, "new_ord": 101, "new_shap": 431, "newaxi": 111, "newbyteord": [6, 101], "newli": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 42, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 105, 106, 107, 109, 110, 112, 114, 115, 136, 142, 143, 144, 145, 146, 147, 154, 155, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 235, 236, 239, 305, 310, 350, 351, 353, 355, 356, 361, 362, 363, 365, 370, 371, 425, 427, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 477, 478, 488, 489], "newshap": 430, "next": [4, 135, 351], "nextaft": 6, "ngood": 384, "ni": [232, 368, 460, 461], "nine": 374, "ninja": 4, "nj": [368, 460, 461], "njm": 103, "nk": [368, 460, 461], "nl": 10, "nlk": 103, "nn": 232, "noisi": 200, "non": [23, 34, 36, 40, 41, 42, 43, 44, 45, 49, 56, 57, 75, 81, 89, 90, 92, 95, 98, 105, 106, 113, 114, 118, 127, 130, 132, 138, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 164, 168, 171, 175, 177, 186, 212, 213, 224, 226, 233, 240, 241, 242, 245, 247, 249, 251, 305, 310, 327, 337, 352, 354, 355, 356, 360, 362, 363, 372, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 456, 464, 469, 471, 475, 482, 483, 487, 488, 489], "nonc": [392, 393], "noncentral_chisquar": 6, "noncentral_f": 6, "nonenonzero": [6, 34, 81, 98, 138, 186, 487, 497], "nor": [145, 146, 197, 245, 247], "norm": [6, 10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 193, 197, 200, 501], "normal": [6, 82, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 163, 195, 196, 206, 219, 372, 387, 390, 401, 413, 422], "not_equ": [6, 107, 160, 161, 190, 191], "note": [11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 47, 48, 50, 51, 52, 59, 70, 71, 75, 83, 87, 93, 95, 96, 98, 101, 103, 104, 111, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 143, 145, 146, 149, 150, 151, 152, 153, 163, 171, 173, 177, 189, 195, 213, 224, 236, 239, 249, 250, 251, 310, 334, 352, 359, 360, 362, 363, 367, 370, 375, 377, 378, 388, 393, 427, 429, 430, 431, 433, 437, 449, 456, 457, 459, 464, 465, 467, 468, 477, 479, 481, 483, 484], "notic": [101, 127, 130], "notimplementederror": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 105, 106, 107, 109, 110, 112, 114, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 167, 168, 173, 177, 178, 179, 189, 190, 191, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 234, 235, 236, 239, 245, 246, 247, 249, 250, 251, 305, 350, 351, 353, 355, 356, 361, 362, 363, 364, 365, 370, 371, 425, 427, 429, 433, 434, 440, 444, 445, 446, 447, 449, 452, 453, 456, 457, 458, 462, 463, 477, 478, 483, 488, 489], "now": [16, 21, 43, 45, 90, 197, 200, 226], "np": [3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 313, 315, 318, 319, 320, 326, 328, 332, 337, 338, 339, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 367, 368, 370, 371, 397, 406, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "nr": 10, "nsamp": 384, "nsampl": 384, "nth": 464, "nuc": 204, "num": [0, 101, 108, 157, 212, 224, 468, 481], "number": [10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 42, 46, 47, 50, 52, 56, 57, 62, 63, 81, 90, 92, 94, 95, 98, 101, 102, 103, 104, 111, 114, 115, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 136, 144, 149, 150, 152, 153, 157, 159, 163, 164, 168, 169, 174, 175, 176, 177, 183, 186, 193, 199, 202, 206, 207, 209, 210, 211, 212, 219, 224, 236, 240, 243, 244, 245, 247, 248, 249, 250, 251, 326, 335, 338, 349, 352, 359, 360, 364, 365, 372, 374, 384, 408, 427, 428, 431, 434, 435, 436, 437, 438, 445, 448, 456, 459, 465, 467, 469, 478, 479, 482, 483, 497, 501], "number_of_dimens": [98, 326, 349], "numer": [3, 4, 10, 11, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 30, 35, 46, 47, 50, 52, 72, 73, 76, 79, 80, 96, 101, 107, 109, 112, 122, 123, 124, 127, 129, 144, 145, 146, 160, 161, 170, 174, 177, 178, 179, 190, 191, 214, 215, 216, 217, 229, 235, 239, 350, 353, 361, 362, 363, 365, 423, 434, 438, 444, 445, 446, 447, 457, 462, 463, 477, 501], "numpi": [0, 1, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 314, 318, 319, 320, 326, 332, 337, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 497, 501], "nvidia": 4, "nx": 232, "ny": 232, "nyquist": [10, 117, 119, 120, 121, 122, 123, 124, 127, 129, 130, 132], "o": [4, 16, 21, 101], "obj": [31, 32, 33, 101, 148, 163], "obj2sctyp": 6, "object": [23, 36, 40, 41, 42, 43, 44, 45, 48, 49, 75, 89, 90, 92, 98, 101, 105, 106, 111, 114, 118, 132, 135, 137, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 169, 171, 193, 196, 204, 212, 213, 224, 226, 233, 305, 310, 334, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 430, 469, 471, 475, 482, 488, 489, 497], "obtain": [10, 93, 192, 352], "obviou": 10, "occupi": [135, 169], "occur": [22, 49, 64, 70, 71, 77, 98, 103, 166, 195, 227, 240, 305, 439, 455, 486], "occurr": [31, 32, 57, 95, 163, 241, 242, 479], "odd": [10, 118, 121, 125, 126, 127, 129, 130, 132], "off": [23, 121, 126, 195, 200], "offset": [93, 98, 101, 149, 150, 226, 313, 346, 466, 471, 472, 475, 476], "often": 162, "ogrid": [171, 186, 487], "ogridclass": 354, "oil": [374, 391], "old": 431, "omit": [372, 400], "onc": 199, "one": [3, 4, 31, 32, 33, 36, 38, 44, 53, 54, 55, 56, 74, 77, 78, 81, 98, 101, 105, 107, 111, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 140, 141, 142, 145, 146, 150, 154, 159, 164, 166, 168, 171, 176, 186, 197, 201, 204, 214, 215, 217, 226, 228, 229, 232, 233, 234, 235, 241, 242, 248, 250, 310, 318, 321, 352, 354, 356, 360, 364, 391, 422, 436, 442, 449, 454, 455, 458, 460, 464, 468, 471, 472, 475, 476, 479, 488, 497], "oneapi": [4, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "onedpl": 4, "onemkl": [4, 195, 197], "ones": [6, 36, 43, 45, 56, 84, 96, 98, 103, 105, 106, 107, 111, 114, 133, 154, 155, 167, 168, 187, 200, 202, 225, 226, 243, 248, 356, 359, 364, 426, 432, 436, 467, 469, 477, 488, 489], "ones_lik": [6, 36, 106, 155, 355, 489], "onli": [10, 16, 21, 23, 31, 32, 33, 36, 39, 40, 41, 43, 45, 49, 53, 56, 75, 78, 82, 98, 101, 103, 104, 105, 106, 114, 120, 130, 134, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 164, 171, 192, 196, 198, 206, 209, 212, 213, 224, 226, 227, 228, 230, 231, 234, 240, 241, 242, 245, 246, 247, 248, 249, 251, 305, 337, 339, 355, 356, 358, 360, 361, 364, 372, 394, 400, 416, 429, 430, 449, 456, 458, 461, 475, 479, 481, 483, 487, 488, 489, 497], "open": [150, 171, 186, 212, 354, 372, 402, 404, 405, 407, 416, 459], "opencl": [23, 36, 40, 41, 42, 43, 45, 75, 89, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 157, 168, 212, 213, 224, 233, 354, 355, 356, 469, 482, 488, 489], "oper": [10, 15, 58, 59, 60, 61, 96, 101, 103, 104, 107, 111, 134, 144, 147, 160, 161, 173, 189, 190, 191, 192, 220, 222, 227, 228, 234, 236, 239, 240, 241, 242, 350, 353, 361, 362, 363, 367, 427, 433, 457, 465, 477, 479, 481, 490, 501], "operand": [103, 104, 211, 357, 464], "opposit": [10, 101, 113, 121, 126, 360], "optim": [4, 103, 104, 163, 164], "option": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 177, 178, 179, 180, 181, 188, 189, 190, 191, 192, 193, 196, 198, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 318, 347, 350, 351, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 367, 370, 371, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 505], "ord": 204, "order": [10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 87, 88, 93, 95, 96, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 117, 119, 122, 123, 124, 127, 129, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 154, 155, 156, 159, 160, 161, 162, 163, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 193, 195, 196, 197, 198, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 232, 235, 236, 238, 239, 259, 304, 305, 310, 318, 328, 331, 336, 339, 347, 350, 351, 352, 353, 355, 356, 358, 359, 361, 362, 363, 365, 370, 371, 421, 422, 425, 427, 429, 430, 431, 433, 434, 437, 440, 441, 444, 445, 446, 447, 449, 452, 453, 457, 462, 463, 464, 467, 477, 478, 479, 480, 482, 487, 488, 489, 501], "ordin": [200, 208], "ordinari": [127, 172, 192], "orient": [83, 368, 461], "origin": [62, 93, 98, 121, 127, 129, 204, 232, 238, 248, 250, 430, 431, 435, 479], "ortho": [10, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "orthogon": [197, 206], "orthonorm": 206, "other": [33, 38, 49, 62, 63, 94, 98, 101, 122, 123, 124, 127, 129, 143, 151, 168, 195, 197, 203, 238, 255, 256, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 290, 292, 294, 297, 298, 299, 305, 372, 416, 431, 436, 449, 479, 490, 501], "otherwis": [3, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 75, 76, 78, 79, 80, 81, 82, 87, 88, 89, 94, 96, 98, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 167, 168, 172, 173, 177, 178, 179, 189, 190, 191, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 305, 334, 350, 351, 353, 355, 356, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 433, 434, 440, 441, 444, 445, 446, 447, 449, 452, 453, 454, 456, 457, 458, 462, 463, 466, 477, 478, 483, 487, 488, 489], "otim": 464, "out": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 199, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 300, 301, 302, 303, 306, 307, 310, 311, 312, 318, 322, 323, 324, 329, 335, 341, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 477, 478, 481, 482, 483, 484, 486, 487, 488, 489], "outer": [6, 83, 93, 103, 104, 187], "output": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 79, 80, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 186, 188, 189, 190, 191, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 242, 243, 244, 246, 248, 249, 250, 251, 305, 310, 350, 351, 353, 354, 355, 356, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 427, 428, 433, 434, 438, 440, 442, 444, 445, 446, 447, 449, 452, 453, 454, 456, 457, 458, 460, 462, 463, 465, 466, 469, 471, 475, 477, 478, 479, 481, 482, 483, 487, 488, 489, 501, 505], "outsid": [163, 164], "over": [10, 16, 21, 56, 84, 85, 86, 97, 98, 103, 104, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 139, 151, 157, 163, 164, 172, 204, 212, 224, 225, 227, 228, 230, 232, 234, 243, 244, 245, 246, 247, 248, 249, 250, 251, 318, 364, 368, 372, 399, 404, 415, 416, 426, 431, 456, 458, 460, 461, 464, 468, 481, 483, 501], "overal": [117, 119, 123, 124, 128, 129, 131, 133], "overflow": 142, "overrid": [83, 106, 155, 356, 489], "overview": 2, "overwrite_input": 231, "p": [10, 193, 200, 201, 374, 377, 382, 388, 391, 481], "pack": [93, 421, 501], "packag": [0, 3], "packbit": 6, "pad": [6, 101, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 431], "page": [3, 501], "pair": [10, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 195], "parallel": [1, 3, 4, 9, 490], "paramet": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 315, 318, 334, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "parameter": [372, 394, 416], "parametr": 468, "pareto": 6, "pars": [150, 213], "part": [3, 10, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 98, 127, 145, 146, 170, 175, 176, 182, 183, 195, 196, 198, 226, 229, 235, 237, 319, 332, 423, 424, 450, 471, 475, 478, 479, 497], "partial": [33, 449], "particular": [101, 203], "particularli": 103, "partit": [6, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 449, 469, 471, 475, 482, 488, 489, 497], "pass": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 164, 168, 171, 186, 200, 213, 226, 233, 240, 310, 334, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 429, 469, 471, 472, 475, 476, 482, 488, 489], "path": [4, 103, 104, 150, 213], "path_info": 104, "pathlib": 213, "pattern": 56, "penros": 205, "per": [103, 118, 132, 422], "percentil": [6, 231], "perf_count": 0, "perform": [16, 21, 41, 42, 68, 94, 103, 117, 119, 122, 123, 124, 128, 129, 131, 133, 139, 192, 364, 458], "perhap": 429, "period": [10, 481], "permit": 150, "permut": [6, 98, 103, 238, 347, 359, 467, 501], "permute_dim": 467, "phase": [10, 20, 481], "phase_deg": 481, "pi": [0, 9, 10, 13, 24, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 87, 88, 116, 370, 446, 447, 462, 463, 468, 481, 505], "pickl": [150, 213], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 16, 17, 21, 22, 35, 68, 70, 71, 85, 86, 97, 98, 111, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 148, 171, 174, 227, 228, 230, 234, 240, 243, 244, 246, 248, 249, 250, 251, 318, 337, 339, 347, 354, 364, 367, 368, 409, 430, 431, 435, 438, 449, 455, 456, 458, 460, 466, 483, 497], "plane": 437, "platform": [85, 86, 101, 243, 244, 248, 250, 364, 458], "pleas": [0, 3, 39, 99, 103, 163, 165, 485, 497], "plot": 410, "plt": [232, 410], "plu": [214, 215, 217], "plugin": 4, "point": [10, 11, 12, 20, 23, 29, 35, 40, 41, 51, 56, 76, 84, 101, 105, 106, 110, 114, 115, 116, 121, 122, 126, 127, 128, 129, 130, 135, 136, 142, 149, 150, 151, 153, 154, 155, 159, 168, 170, 200, 201, 212, 213, 218, 219, 225, 230, 240, 246, 249, 251, 351, 355, 356, 372, 401, 413, 423, 425, 426, 438, 440, 441, 456, 468, 469, 483, 488, 489, 501], "pointer": 101, "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [11, 12, 13, 14, 15, 20, 24, 25, 26, 27, 28, 29, 30, 35, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 72, 73, 76, 79, 80, 87, 88, 96, 98, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 235, 236, 239, 350, 351, 353, 361, 362, 363, 365, 370, 371, 372, 399, 425, 427, 433, 434, 438, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 477, 478], "portion": [163, 164], "posinf": 240, "posit": [6, 10, 16, 17, 21, 23, 35, 40, 41, 42, 65, 76, 92, 93, 98, 111, 114, 115, 117, 119, 122, 123, 124, 127, 130, 132, 135, 142, 150, 174, 177, 178, 179, 180, 181, 192, 201, 210, 238, 240, 245, 247, 250, 328, 342, 350, 359, 374, 398, 435, 436, 438, 440, 442, 452, 453, 466, 467], "possess": 195, "possibl": [10, 48, 49, 54, 55, 98, 99, 103, 104, 111, 145, 146, 159, 163, 165, 226, 305, 334, 359, 430, 451, 454, 459, 460, 461, 467, 485], "possibli": 44, "pow": [363, 497], "power": [6, 10, 110, 116, 142, 201, 362, 453, 482], "pre": 164, "precis": [11, 12, 56, 85, 86, 101, 103, 135, 142, 170, 200, 226, 243, 244, 248, 250, 364, 423, 458, 466], "predecessor": 481, "prefer": [67, 75, 98, 310, 337, 352], "prepend": [94, 102, 465], "present": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 168, 171, 213, 226, 233, 245, 247, 250, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 469, 471, 475, 482, 488, 489], "preserv": [49, 53, 54, 55, 68, 98, 101, 103, 139, 140, 141, 142, 196, 197, 198, 305, 429, 466, 479], "press": 10, "prevent": 103, "previou": 56, "print": [0, 4, 42, 56, 57, 74, 95, 101, 104, 372, 391, 396], "print_device_info": 0, "printabl": 104, "printopt": 6, "prior": 94, "prob1": [218, 219], "prob12": [218, 219], "prob2": [218, 219], "probabl": [163, 219, 374, 382, 391], "proce": 497, "process": 10, "processor": 103, "prod": [6, 85, 98, 210, 211, 248, 497], "produc": [10, 34, 101, 213, 368, 441, 461], "product": [6, 83, 85, 97, 98, 103, 104, 172, 186, 187, 203, 208, 210, 211, 227, 239, 243, 248, 311, 357, 364, 464, 484, 501], "program": [4, 143], "progress": [157, 212], "project": [4, 101, 365], "promot": [13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 58, 60, 61, 64, 65, 76, 79, 80, 87, 88, 96, 109, 110, 112, 142, 144, 145, 146, 147, 157, 167, 189, 212, 214, 215, 216, 217, 218, 219, 224, 227, 229, 235, 236, 239, 351, 362, 363, 370, 371, 425, 427, 432, 433, 440, 444, 446, 447, 452, 453, 457, 462, 463, 465, 477, 478], "promote_typ": 6, "propag": [101, 145, 146, 228, 229, 234, 235, 243, 244, 245, 247, 248, 250], "proper": [145, 146, 195, 197], "properti": [10, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 196, 198, 206, 212, 213, 224, 226, 233, 253, 305, 310, 314, 316, 317, 319, 321, 325, 326, 332, 337, 338, 342, 347, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489, 497], "protocol": [44, 101, 148], "prototyp": 106, "provid": [0, 6, 10, 31, 32, 70, 71, 77, 84, 98, 99, 103, 104, 111, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 152, 163, 164, 166, 180, 181, 225, 241, 242, 245, 247, 248, 250, 372, 400, 403, 426, 429, 439, 455, 460, 468, 479, 486, 487, 505], "pseudo": [205, 372], "ptp": 6, "pure": [10, 121, 127, 129, 130], "purpos": [34, 200], "put": [6, 10, 98, 113, 121, 127, 129, 360, 368, 461, 497], "put_along_axi": [6, 367, 461], "putmask": [6, 367], "pval": 389, "py": 4, "pyplot": [232, 410], "pytest": 4, "python": [0, 2, 3, 44, 98, 101, 147, 148, 236, 320, 427, 428, 497], "q": [197, 201, 206, 211, 231], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [20, 26, 28, 46, 50, 117], "quantil": 6, "quaternion": 201, "question": 89, "queue": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "quick": [2, 3], "quickli": [186, 505], "quotient": [29, 51], "r": [88, 206], "r2": 206, "rad": 88, "rad2deg": [6, 87, 88, 481], "radian": [6, 13, 14, 20, 24, 25, 26, 28, 29, 46, 50, 51, 87, 88, 370, 481, 505], "rais": [11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 72, 73, 75, 76, 77, 79, 80, 84, 87, 88, 95, 96, 97, 98, 99, 105, 106, 107, 109, 110, 112, 114, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 165, 167, 168, 173, 177, 178, 179, 189, 190, 191, 201, 203, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 234, 235, 236, 239, 241, 242, 245, 246, 247, 249, 250, 251, 305, 306, 350, 351, 353, 355, 356, 361, 362, 363, 364, 365, 370, 371, 422, 425, 426, 427, 429, 430, 433, 434, 440, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 457, 458, 462, 463, 477, 478, 483, 485, 488, 489, 497], "rand": [6, 104, 372, 402, 404, 405, 407], "randint": [6, 98, 320, 372, 403], "randn": [6, 139, 140, 141, 205, 206, 209, 211, 372, 455], "random": [98, 104, 139, 140, 141, 197, 203, 205, 206, 209, 211, 320, 455, 490, 501], "random_integ": [6, 372, 400], "random_sampl": [6, 372, 399, 402, 405, 407], "randomli": 396, "randomst": 400, "ranf": 6, "rang": [0, 95, 152, 163, 164, 219, 359, 366, 367, 391, 396, 422, 428, 455, 464, 467, 481, 501], "rank": [111, 113, 151, 200, 202, 459], "rate": [118, 132], "rather": 352, "ratio": [0, 96, 144, 200, 477, 505], "ration": 501, "ravel": [6, 98, 113, 138, 204, 318, 357, 497], "ravel_multi_index": [6, 480], "raveled_indic": 422, "raw": 206, "rayleigh": 6, "rcond": [200, 205], "re": [31, 32, 57, 89, 127, 435], "read": [89, 93, 98, 101, 149, 150, 152, 153, 213, 318, 421, 430], "readonli": 101, "real": [6, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 37, 46, 47, 50, 51, 52, 65, 66, 76, 84, 98, 116, 119, 121, 126, 127, 128, 129, 130, 131, 133, 135, 143, 145, 146, 147, 167, 170, 175, 182, 183, 192, 195, 196, 197, 198, 202, 205, 206, 207, 209, 218, 219, 225, 229, 235, 236, 240, 249, 251, 374, 391, 424, 425, 426, 427, 440, 450, 456, 478, 479, 483, 497, 501], "real_if_clos": [6, 20, 170, 423], "rearrang": [98, 328, 501], "reason": 129, "rebuild": 100, "recal": 101, "recent": [22, 454], "recfromcsv": 6, "recfromtxt": 6, "recip": [4, 10], "reciproc": [6, 440, 452], "recommend": [103, 352, 465], "reconstruct": [101, 209, 479], "recov": 10, "reduc": [16, 21, 31, 32, 56, 206, 209, 225, 228, 230, 232, 234, 241, 242, 245, 246, 247, 248, 249, 250, 251, 364, 426, 431, 456, 458, 483], "reduce_hypot": 167, "reduct": [16, 21], "redund": 130, "referreflect": 497, "reflector": 206, "regardless": [101, 196, 198, 485], "regular": 213, "rel": [17, 98, 174, 342, 435, 436], "relat": 101, "relev": [101, 157, 212, 224], "rem": 147, "remain": [16, 21, 56, 104, 131, 133, 163, 225, 230, 238, 246, 249, 251, 426, 430, 456, 483], "remaind": [6, 144, 147, 236, 362, 363], "remov": [31, 32, 87, 93, 98, 111, 127, 340, 364, 370, 454, 458, 501], "reorder": [103, 139, 211, 238], "rep": 465, "repeat": [6, 98, 117, 119, 123, 124, 128, 129, 131, 133, 134, 195, 196, 197, 198, 232, 360, 431, 465, 468, 479, 497], "repeatedli": 103, "repetit": [0, 428, 465], "replac": [3, 10, 44, 68, 113, 240, 243, 244, 360, 368, 377, 442, 497], "replic": 465, "repo": 4, "repr": 293, "repres": [10, 23, 36, 40, 41, 43, 44, 45, 56, 101, 104, 122, 130, 148, 151, 157, 159, 171, 207, 212, 224, 232, 251, 372, 431, 473, 479, 497], "represent": [58, 60, 61, 104, 135, 169, 171, 240, 351, 497], "request": 436, "requir": [4, 6, 36, 41, 42, 43, 45, 49, 98, 101, 103, 115, 171, 240, 305, 337, 431], "res_cpu": 89, "res_host": 89, "rese": 408, "reset": 497, "reshap": [0, 6, 15, 31, 32, 34, 53, 55, 56, 89, 90, 91, 93, 96, 97, 98, 99, 100, 103, 111, 113, 120, 125, 139, 147, 165, 171, 172, 186, 187, 204, 226, 227, 228, 234, 239, 313, 318, 337, 347, 360, 396, 421, 429, 431, 435, 437, 457, 464, 466, 468, 471, 472, 475, 476, 477, 479, 485, 497], "resid": [111, 115, 148], "residu": 200, "resiz": [6, 111, 497], "resolut": 135, "resolv": [84, 111, 225, 426], "resourc": 0, "respect": [15, 29, 51, 58, 60, 61, 96, 98, 107, 142, 144, 147, 159, 160, 161, 189, 190, 191, 218, 219, 220, 222, 223, 236, 239, 342, 353, 362, 363, 427, 433, 457, 477, 481], "rest": 39, "restor": 435, "result": [0, 4, 10, 16, 21, 29, 31, 32, 34, 51, 56, 58, 59, 60, 61, 64, 68, 70, 71, 76, 81, 84, 85, 86, 96, 97, 101, 104, 106, 107, 112, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 142, 144, 149, 150, 151, 152, 153, 155, 157, 160, 161, 163, 164, 171, 173, 177, 178, 179, 180, 181, 189, 190, 191, 192, 195, 204, 206, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 234, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 352, 353, 356, 357, 362, 363, 364, 367, 372, 374, 404, 426, 430, 432, 433, 434, 436, 438, 441, 444, 445, 451, 455, 456, 458, 460, 461, 464, 465, 468, 473, 477, 478, 479, 483, 487, 489, 497], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 64, 101, 501], "ret": 371, "retriev": [93, 101], "retstep": 212, "returnreturn_count": 479, "return_index": 479, "return_invers": 479, "reus": [148, 164, 430], "revers": [93, 98, 134, 139, 140, 141, 347, 359, 437, 467, 468, 482], "rewrit": 200, "rfft": [6, 10, 118, 121, 126, 127, 128, 129, 131, 132, 133], "rfft2": [6, 128], "rfftfreq": [6, 118], "rfftn": [6, 116, 119, 129, 130, 131], "right": [10, 28, 50, 68, 83, 93, 95, 140, 141, 167, 189, 195, 196, 197, 198, 203, 211, 226, 415, 426, 433, 441, 466, 468, 471, 475, 482], "right_shift": [6, 189], "rightmost": [163, 164, 211], "rint": [6, 35, 66, 136, 143, 438, 478], "roll": [6, 436], "rollaxi": [6, 435], "root": [6, 65, 167, 193, 425, 426, 440, 452, 453], "rot90": [6, 140, 141], "rotat": [140, 141, 437], "roughli": [101, 200], "round": [6, 23, 35, 66, 98, 121, 126, 136, 143, 144, 156, 195, 236, 427, 434, 478, 497, 501], "round_": 6, "routin": [2, 490, 497], "row": [45, 49, 69, 70, 71, 85, 86, 93, 98, 100, 114, 140, 141, 159, 166, 168, 171, 203, 209, 305, 352, 421, 422, 439, 451, 455, 469, 471, 479, 480, 485, 486], "row_stack": [6, 486], "rowvar": 82, "rsqrt": [425, 452], "rtol": [17, 174], "rule": [13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36, 40, 41, 43, 45, 46, 47, 50, 51, 52, 56, 58, 60, 61, 64, 65, 76, 77, 79, 80, 83, 86, 87, 88, 96, 109, 110, 112, 144, 145, 146, 147, 157, 167, 189, 212, 214, 215, 216, 217, 218, 219, 224, 225, 227, 229, 230, 235, 236, 239, 246, 249, 251, 351, 362, 363, 370, 371, 425, 426, 427, 432, 433, 440, 444, 446, 447, 452, 453, 456, 457, 458, 462, 463, 468, 477, 478, 483], "run": [0, 4], "runtim": 4, "runtimewarn": [245, 247], "s1": [98, 101, 187, 342], "s10": 101, "s16": 101, "s2": [98, 101, 342], "s25": 101, "s3": [98, 342], "safe": [49, 64, 70, 71, 77, 98, 103, 166, 227, 305, 439, 455, 486], "safe_ev": 6, "said": 211, "same": [4, 10, 11, 12, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 35, 37, 38, 43, 45, 48, 49, 51, 56, 58, 59, 60, 61, 63, 68, 69, 70, 71, 76, 84, 85, 86, 93, 94, 95, 96, 97, 98, 100, 106, 107, 111, 113, 122, 123, 124, 129, 134, 136, 142, 144, 145, 146, 147, 148, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 170, 172, 173, 174, 180, 181, 182, 187, 188, 189, 190, 191, 197, 201, 206, 218, 219, 220, 222, 223, 225, 228, 229, 230, 234, 235, 236, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 334, 347, 351, 353, 356, 360, 362, 363, 364, 368, 372, 394, 400, 416, 421, 423, 426, 427, 428, 433, 435, 436, 439, 441, 442, 449, 454, 455, 456, 457, 458, 460, 461, 464, 466, 470, 472, 474, 476, 477, 480, 483, 484, 486, 489, 505], "same_kind": [49, 64, 70, 71, 77, 98, 103, 166, 227, 305, 439, 455, 486], "sampl": [10, 118, 125, 127, 130, 132, 157, 159, 163, 212, 224, 368, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 461, 468, 471, 475, 490, 501], "sample_r": 132, "satisfi": [36, 41, 43, 45, 49, 98, 113, 199, 305, 360, 429, 442], "save": [6, 150, 505], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [15, 17, 22, 29, 36, 37, 38, 40, 41, 43, 44, 45, 51, 58, 60, 61, 64, 75, 76, 77, 83, 89, 92, 94, 96, 97, 98, 101, 103, 104, 107, 113, 118, 132, 134, 142, 144, 145, 146, 147, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 172, 174, 176, 183, 184, 187, 188, 189, 190, 191, 208, 212, 218, 219, 220, 222, 223, 224, 226, 227, 229, 232, 235, 236, 239, 315, 320, 349, 351, 353, 360, 362, 363, 367, 368, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 397, 398, 400, 403, 406, 408, 412, 414, 415, 416, 417, 418, 419, 420, 424, 427, 433, 441, 442, 457, 460, 464, 468, 477, 478, 482, 484, 487, 497], "scale": [10, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 157, 187, 206, 212, 224, 372, 379, 381, 383, 384, 385, 386, 394, 406, 411, 418], "scientif": 10, "scipi": 108, "scope": 4, "script": 4, "sctype2char": 6, "search": [104, 490, 501], "searchsort": [6, 95, 98, 163, 449, 497], "second": [15, 17, 29, 37, 38, 51, 56, 58, 60, 61, 76, 83, 93, 96, 97, 101, 104, 107, 110, 117, 118, 119, 120, 123, 124, 127, 130, 132, 142, 144, 145, 146, 147, 156, 159, 160, 161, 163, 164, 165, 166, 167, 172, 174, 187, 188, 189, 190, 191, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 234, 235, 236, 239, 353, 357, 362, 363, 427, 433, 437, 453, 457, 459, 464, 466, 477, 484], "section": [4, 39, 101, 119, 124, 129, 133, 497], "see": [3, 35, 101, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 148, 163, 200, 389, 438, 471, 472, 475, 476, 479, 497], "seed": [6, 98, 104, 320, 372], "seek": 150, "seldom": 142, "select": [6, 77, 113, 228, 234, 454, 460, 468, 490], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "self": [98, 101, 137, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 317, 372], "semant": 163, "sens": 211, "sep": [150, 153], "separ": [10, 98, 101, 103, 150, 153, 164, 240, 334, 431], "sequenc": [39, 44, 53, 54, 55, 69, 70, 71, 74, 78, 99, 100, 103, 104, 105, 106, 117, 119, 123, 124, 127, 128, 129, 131, 133, 154, 155, 157, 163, 164, 165, 166, 171, 186, 203, 212, 224, 238, 355, 356, 360, 396, 409, 428, 429, 432, 439, 451, 455, 464, 468, 485, 486, 488, 489], "sequenti": [78, 82, 108, 231, 237, 248], "seri": [10, 127, 388], "set": [10, 31, 32, 36, 49, 67, 81, 89, 90, 92, 95, 98, 101, 103, 105, 154, 163, 164, 168, 171, 202, 204, 205, 212, 228, 234, 241, 242, 250, 295, 305, 306, 317, 337, 355, 356, 364, 442, 444, 445, 458, 471, 475, 488, 489, 497], "set_numeric_op": 6, "set_printopt": 6, "set_stat": 6, "set_string_funct": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "seterrobj": 6, "setfield": [6, 101], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 199, "sh": [98, 334], "shape": [4, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 144, 145, 146, 147, 151, 154, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 194, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 326, 334, 338, 340, 347, 349, 350, 351, 353, 354, 355, 356, 359, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 381, 384, 389, 390, 395, 399, 400, 401, 402, 403, 404, 405, 407, 412, 413, 419, 421, 422, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 485, 486, 487, 488, 489, 490, 501], "share": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 469, 471, 475, 482, 488, 489], "shared_bin": 164, "shares_memori": 6, "shift": [10, 117, 119, 120, 124, 125, 189, 433, 435], "short": [478, 497], "shorter": [121, 127], "shorthand": [11, 12, 15, 58, 59, 60, 61, 96, 107, 144, 160, 161, 173, 189, 190, 191, 220, 222, 227, 236, 239, 350, 353, 361, 362, 363, 427, 433, 457, 477, 487], "should": [31, 32, 39, 49, 93, 95, 97, 98, 103, 104, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 147, 150, 158, 163, 186, 200, 201, 227, 238, 241, 242, 245, 247, 305, 336, 389, 422, 430, 431, 441, 460, 464, 466, 480, 481, 497], "show": [9, 38, 101, 134, 167, 223, 232, 240, 243, 244, 245, 247, 250, 410], "show_config": 6, "shown": 4, "shuffl": 6, "side": [98, 159, 197, 336, 441], "sigma": [387, 394], "sign": [6, 10, 17, 76, 101, 174, 194, 207, 236, 350, 361, 364, 427, 445, 458, 478], "signal": [10, 118, 121, 126, 127, 129, 132, 481], "signatur": [226, 227], "signbit": [6, 444], "signific": 103, "signum": 444, "similar": [3, 40, 41, 98, 101, 157, 212, 224, 226, 310, 337, 360, 372, 400, 471, 472, 475, 476], "simpl": [4, 223, 501], "simpli": [91, 98, 150, 163, 164, 347], "sin": [0, 6, 26, 27, 46, 47, 79, 197, 232, 447, 462, 468], "sinc": [6, 98, 127, 195, 197, 339, 352], "sine": [13, 14, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 446, 447, 462, 463], "singl": [9, 10, 33, 63, 69, 98, 103, 104, 159, 203, 228, 234, 340, 364, 372, 391, 400, 401, 402, 403, 404, 405, 407, 413, 458, 468, 497], "singleton": [16, 21, 56, 111, 225, 230, 245, 246, 247, 249, 251, 426, 454, 456, 483], "singular": [199, 200, 202, 205, 209], "sinh": [6, 14, 25, 27, 47, 80, 446, 463], "size": [0, 6, 23, 31, 32, 36, 39, 56, 70, 71, 78, 81, 82, 85, 86, 90, 95, 98, 99, 101, 104, 113, 116, 118, 122, 132, 150, 157, 159, 165, 166, 204, 206, 209, 212, 224, 226, 228, 230, 234, 241, 242, 243, 244, 246, 248, 250, 320, 321, 337, 355, 360, 364, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 431, 435, 439, 451, 454, 455, 458, 464, 475, 481, 485, 486, 488], "skip": 93, "slice": [113, 241, 242, 245, 246, 247, 249, 251, 367, 368, 442, 461, 468, 475, 476, 497], "slogdet": [6, 194], "slower": 464, "slowest": [98, 318, 421, 430], "small": [17, 112, 174, 200, 205, 216, 218, 219, 240, 475], "smaller": [94, 98, 116, 117, 119, 122, 123, 124, 126, 128, 129, 130, 131, 133, 135, 200, 236, 328, 360, 427, 481], "smallest": [135, 169, 479], "smallest_norm": 135, "smat": 209, "so": [10, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 56, 101, 107, 121, 126, 142, 163, 183, 212, 219, 225, 230, 232, 246, 249, 251, 410, 426, 456, 464, 465, 483], "softwar": 4, "solut": [200, 208, 431], "solv": [6, 200, 210, 211, 501], "some": [23, 101, 111, 113, 143, 172, 200, 360, 481, 487, 497], "sometim": [162, 497], "sometru": 6, "somewhat": 201, "sophist": 201, "sort": [6, 33, 39, 98, 99, 165, 209, 304, 328, 359, 441, 450, 451, 461, 467, 468, 479, 485, 490, 497, 501], "sort_complex": 6, "sorter": [98, 336, 441], "sought": 193, "sourc": [4, 6, 16, 17, 18, 19, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 56, 57, 62, 63, 64, 67, 68, 69, 71, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 166, 168, 169, 171, 172, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 224, 225, 226, 227, 228, 230, 231, 232, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 349, 352, 355, 356, 357, 358, 360, 364, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 428, 429, 430, 431, 432, 435, 436, 437, 441, 442, 443, 448, 449, 450, 451, 454, 455, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "space": [6, 23, 118, 120, 132, 150, 157, 159, 212, 224, 468, 505], "spars": [171, 232], "special": [2, 101, 108, 490, 501], "specif": [0, 4, 101, 151], "specifi": [16, 21, 22, 23, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 56, 63, 64, 70, 71, 75, 84, 85, 86, 89, 92, 93, 98, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 139, 142, 149, 150, 151, 152, 154, 155, 157, 159, 168, 196, 198, 204, 210, 211, 212, 213, 224, 225, 230, 231, 233, 243, 244, 246, 248, 249, 250, 251, 304, 313, 354, 355, 356, 359, 360, 364, 367, 368, 372, 385, 395, 413, 421, 422, 426, 429, 431, 435, 436, 437, 438, 442, 448, 455, 456, 458, 460, 461, 464, 466, 467, 468, 469, 479, 482, 483, 488, 489], "spectrum": [10, 120, 121, 125, 126], "speed": 103, "speedup": 104, "spell": 352, "split": [6, 39, 70, 71, 99, 100, 165, 166, 439, 455, 485, 486, 501], "spreadsheet": 143, "sqrt": [6, 10, 65, 98, 319, 332, 426, 440, 453], "squar": [6, 65, 167, 168, 192, 193, 195, 196, 197, 199, 200, 201, 207, 210, 211, 226, 249, 251, 376, 392, 425, 426, 440, 442, 452, 456, 472, 476, 482, 483], "squeez": [6, 98, 111, 497], "src": 77, "stabl": [33, 449], "stack": [6, 69, 70, 71, 100, 166, 194, 202, 205, 206, 207, 227, 352, 439, 451, 461, 486], "stai": 68, "stand": 159, "standard": [98, 135, 144, 147, 230, 236, 246, 249, 251, 320, 341, 372, 387, 394, 401, 410, 411, 412, 413, 414, 427, 456, 483, 497, 501], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 372, 401], "standard_t": 6, "start": [2, 3, 23, 43, 45, 104, 118, 122, 132, 149, 157, 212, 224, 226, 431, 436, 471, 475], "start_tim": 0, "state": 372, "statist": [490, 501], "std": [6, 98, 230, 246, 249, 251, 483, 497], "stdev": [372, 413], "step": [4, 23, 104, 157, 162, 212, 224], "sticki": 101, "still": [56, 165, 485], "stop": [23, 157, 212, 224], "store": [136, 157, 180, 181, 212, 219, 224, 227, 357], "str": [42, 44, 70, 71, 101, 103, 104, 150, 153, 166, 213, 296, 429, 439, 455, 473, 486], "str_": 101, "straightforward": 171, "stride": [48, 49, 98, 305], "string": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 101, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 473, 475, 482, 488, 489, 497], "string_repr": 104, "stringio": 213, "strongli": [4, 465], "struct": 101, "structur": [101, 213], "student": 414, "style": [49, 98, 305, 352, 421, 422, 480], "sub": [39, 70, 71, 93, 99, 101, 103, 165, 166, 211, 439, 451, 455, 466, 469, 485, 486], "subarrai": [101, 171, 479], "subclass": [41, 429], "subdivid": 101, "subdtyp": 101, "subject": 4, "subok": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 36, 46, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 72, 73, 75, 76, 79, 80, 87, 88, 96, 98, 106, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 155, 156, 160, 161, 162, 167, 170, 173, 177, 178, 179, 188, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 235, 236, 239, 305, 350, 351, 353, 356, 361, 362, 363, 365, 370, 371, 425, 427, 433, 434, 440, 444, 445, 446, 447, 452, 453, 457, 462, 463, 477, 478, 489], "subscript": [103, 104], "subset": [3, 159, 454, 501], "subtract": 6, "subtyp": 421, "succeed": 102, "success": [42, 374, 382, 391], "sugar": [91, 472, 476], "suggest": 93, "suit": 4, "suitabl": [34, 98, 347, 368, 431, 441, 461], "sum": [0, 3, 4, 6, 10, 15, 56, 84, 86, 89, 92, 93, 94, 97, 98, 103, 122, 163, 167, 172, 193, 200, 210, 218, 219, 225, 227, 243, 244, 250, 312, 346, 374, 389, 391, 426, 464, 466, 468, 497, 501], "sum_": 10, "sum_along_diagon": 466, "sum_of_weight": 56, "summari": 490, "summat": [97, 103, 104, 172, 211, 227, 357, 464], "suppli": [121, 126, 203, 372, 401], "support": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 72, 73, 75, 76, 78, 79, 80, 82, 87, 88, 96, 98, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 167, 168, 173, 177, 178, 179, 189, 190, 191, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 305, 337, 350, 351, 353, 355, 356, 358, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 427, 429, 430, 433, 440, 444, 445, 446, 449, 452, 453, 456, 457, 458, 462, 463, 477, 478, 483, 488, 489, 505], "sure": 429, "surnam": 101, "surpris": [122, 123, 124], "svd": [6, 193, 199, 202, 205], "swap": [101, 117, 120, 459], "swapax": [6, 98, 238, 497], "swapped_cod": 101, "swapped_dt": 101, "sy": 101, "sycl": [0, 3, 23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "sycl_context": 98, "sycl_devic": 98, "sycl_queu": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "sycldevic": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "syclqueu": [23, 36, 40, 41, 42, 43, 44, 45, 49, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 305, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 469, 471, 475, 482, 488, 489], "symmetr": [121, 127, 129, 130, 192, 195, 196, 197, 198, 202, 205, 209], "symmetri": [10, 116, 121, 126, 127, 130], "syntact": [91, 472, 476], "syntax": 497, "sys_is_l": 101, "system": [3, 4, 208], "t": [10, 70, 71, 82, 98, 101, 121, 192, 195, 197, 200, 347, 352, 414, 468], "t1": 505, "tabl": [2, 9, 490], "tack": 101, "take": [6, 69, 98, 113, 186, 226, 360, 368, 430, 441, 442, 461, 479, 481, 497, 505], "take_along_axi": [6, 31, 32, 33, 67, 368, 460], "taken": [56, 93, 94, 102, 104, 121, 127, 128, 129, 130, 131, 133, 162, 163, 227, 249, 251, 442, 456, 466, 469, 471, 475, 483, 484], "tall": 134, "tan": [6, 26, 28, 29, 30, 46, 50, 51, 52, 79, 446, 463], "tangent": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 446, 447, 462, 463], "tanh": [6, 14, 25, 30, 52, 80, 447, 462], "target": [49, 64, 98, 305, 367], "target_devic": 98, "tau": 206, "tbb": 4, "tempfil": 150, "temporari": [150, 505], "temporaryfil": 150, "ten": 382, "tensor": [44, 98, 103, 104, 148, 210, 211, 241, 242, 245, 247, 248, 366, 464], "tensordot": [6, 97, 103, 172, 210, 211, 227, 357], "tensorinv": [6, 211], "tensorsolv": [6, 210], "term": [10, 15, 96, 104, 116, 117, 119, 122, 123, 124, 127, 130, 239, 457, 477], "test": [0, 2, 16, 17, 21, 107, 160, 161, 175, 177, 178, 179, 180, 181, 190, 191, 248, 352, 353, 374, 497, 501], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [149, 150, 152, 153, 213], "th": [86, 89, 92, 94, 98, 102, 114, 159, 171, 231, 347, 354, 359, 442, 467, 470, 472, 474, 476], "than": [36, 85, 86, 98, 99, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 140, 141, 144, 151, 160, 161, 163, 164, 166, 189, 190, 191, 200, 202, 205, 206, 243, 244, 248, 250, 328, 352, 360, 364, 431, 433, 442, 444, 454, 455, 458, 464, 466, 478, 481, 497, 505], "thei": [17, 38, 101, 174, 197, 200, 439, 441, 464, 468, 471, 475, 481, 482, 486, 497], "them": [69, 497], "theor": 195, "theoret": 104, "therefor": [116, 130, 151, 196, 198, 431], "theta": 468, "thi": [10, 11, 12, 18, 19, 22, 23, 29, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 68, 70, 71, 75, 81, 84, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 140, 141, 142, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 164, 166, 176, 183, 186, 196, 198, 200, 203, 204, 207, 212, 213, 216, 218, 219, 224, 225, 226, 227, 228, 234, 236, 238, 240, 241, 242, 245, 247, 248, 250, 305, 310, 315, 318, 328, 334, 347, 352, 360, 364, 367, 368, 405, 407, 421, 426, 427, 429, 430, 431, 436, 437, 439, 455, 458, 460, 461, 465, 468, 472, 476, 479, 481, 482, 486, 487], "thing": 460, "third": [69, 70, 71, 99, 100, 117, 166, 439, 451, 455, 486], "those": [10, 68, 201, 368], "though": 122, "thousand": 382, "three": [53, 54, 55, 111, 201, 226, 372, 408, 464, 479], "threshold": 202, "through": [41, 101, 164, 186, 195, 197, 200, 226, 429, 497], "throw": 389, "thu": [10, 121, 127, 129, 465], "tile": [6, 428, 501], "time": [0, 10, 15, 17, 29, 37, 38, 51, 58, 60, 61, 76, 94, 96, 97, 107, 117, 119, 121, 123, 124, 126, 128, 129, 131, 133, 142, 144, 145, 146, 147, 156, 160, 161, 162, 167, 172, 174, 179, 187, 188, 189, 190, 191, 200, 218, 219, 220, 222, 223, 229, 235, 236, 239, 351, 353, 362, 363, 374, 389, 427, 433, 437, 457, 461, 464, 465, 477, 479, 484], "time_dpnp": 0, "time_numpi": 0, "timedelta": 101, "timeit": 103, "timestep": 118, "tini": 135, "titl": 101, "tm": 147, "to_begin": 102, "to_devic": 98, "to_end": 102, "tobyt": 6, "todo": 392, "tofil": [6, 150], "togeth": [17, 70, 71, 101, 122, 174, 186, 455, 487], "tol": [202, 390, 424], "toler": [17, 37, 174, 424], "tolist": 6, "too": [4, 117, 119, 123, 124, 128, 129, 131, 133, 487], "toolkit": 3, "tostr": 6, "total": [6, 81, 85, 98, 325, 431, 448, 456, 483], "toward": [35, 66, 136, 143, 144, 163, 164, 236, 351, 427, 434, 437, 438, 478], "trace": [6, 89, 92, 93, 98, 103, 497], "traceback": [22, 454], "trail": 473, "transfer": 98, "transform": [104, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 490], "transpos": [6, 34, 98, 103, 192, 197, 238, 253, 359, 497, 501], "trapezoid": [86, 458], "trapz": 6, "treat": [17, 121, 127, 129, 150, 159, 174, 196, 198, 200, 203, 213, 243, 244, 248, 250, 364, 368, 441, 461, 465, 479, 481, 497], "tri": 6, "trial": 374, "triangl": [89, 167, 226, 426, 469, 470, 471, 472, 474, 475, 476], "triangular": [6, 192, 196, 198, 206, 226, 471, 472, 475, 476], "trigonometr": [13, 14, 20, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 79, 80, 446, 447, 462, 463, 501], "tril": [6, 89, 226, 469, 471, 472, 475], "tril_indic": [6, 226, 472, 475], "tril_indices_from": [6, 476], "trili": 472, "trili1": 472, "trim": [117, 119, 123, 124, 128, 129, 131, 133, 473], "trim_zero": 6, "triu": [6, 89, 226, 469, 471, 475, 476], "triu_indic": [6, 226, 471, 476], "triu_indices_from": [6, 472], "triui": 476, "triuim1": 476, "trivial": [195, 461], "true": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 64, 65, 66, 72, 73, 75, 76, 77, 79, 80, 81, 82, 86, 87, 88, 95, 96, 98, 101, 103, 104, 107, 109, 110, 111, 112, 113, 115, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 156, 157, 160, 161, 162, 163, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 199, 202, 204, 205, 206, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 257, 300, 301, 305, 310, 322, 323, 324, 329, 341, 343, 348, 350, 351, 352, 353, 360, 361, 362, 363, 364, 365, 368, 370, 371, 377, 425, 426, 427, 429, 430, 433, 434, 440, 442, 444, 445, 446, 447, 452, 453, 456, 457, 458, 461, 462, 463, 464, 468, 477, 478, 479, 482, 483, 487], "true_divid": [6, 96], "trunc": [6, 35, 66, 136, 143, 434, 438], "truncat": [35, 66, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 143, 410, 434, 438, 478], "trust": [241, 242], "truth": [58, 59, 60, 61, 107, 160, 161, 173, 190, 191, 220, 221, 222, 223, 353, 497, 501], "try": [4, 42], "tukei": 10, "tup": [69, 100, 166, 439, 486], "tupl": [16, 21, 22, 31, 32, 36, 40, 41, 42, 43, 45, 56, 63, 75, 81, 84, 89, 90, 91, 92, 98, 101, 104, 111, 120, 125, 139, 148, 151, 154, 155, 157, 159, 163, 164, 171, 176, 183, 186, 187, 204, 206, 211, 212, 224, 225, 226, 227, 228, 230, 232, 233, 234, 245, 246, 247, 248, 249, 250, 251, 337, 347, 352, 354, 359, 364, 422, 426, 428, 430, 431, 435, 443, 454, 456, 458, 465, 467, 471, 472, 475, 476, 480, 482, 483, 497], "turn": 69, "twister": 372, "two": [10, 17, 37, 53, 54, 58, 59, 60, 61, 74, 78, 83, 92, 93, 94, 97, 98, 101, 103, 104, 111, 116, 117, 119, 122, 123, 124, 127, 128, 129, 131, 133, 145, 146, 159, 172, 173, 174, 187, 196, 200, 203, 208, 220, 222, 223, 227, 228, 229, 234, 235, 238, 245, 247, 328, 344, 357, 372, 401, 434, 437, 438, 442, 459, 464, 466, 471, 472, 475, 476, 484], "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 314, 318, 326, 334, 338, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 501], "type_nam": 0, "typeerror": [56, 77, 98, 148, 337], "typenam": 6, "typestr": 101, "typic": [17, 121, 174, 441, 497], "u": [101, 192, 196, 198, 209, 226, 248, 250, 479], "u1": [101, 149, 150], "u16": 101, "u4": 64, "u8": 101, "ufunc": [2, 490, 497], "uint64": 101, "uint8": [101, 149, 150], "uk": 10, "un": 101, "unari": 497, "unchang": 133, "undefin": [20, 98, 328], "underli": [58, 60, 61, 430], "undo": [10, 124], "undocu": 101, "unexpect": [248, 250], "unicod": 101, "uniform": [6, 101, 159, 163, 164, 224, 372, 399, 402, 404, 405, 407], "uniformli": [224, 372, 416], "uniniti": [36, 105, 106, 154, 355, 488], "union1d": 6, "uniqu": [6, 56, 57, 84, 95, 101, 225, 230, 238, 246, 249, 251, 426, 428, 456, 483], "unique_count": 479, "unique_indic": 479, "unique_invers": 479, "unit": [98, 118, 132, 186, 195, 201, 207, 342], "unitari": [10, 159, 206, 209], "uniti": 163, "univ": 10, "univers": [2, 490, 497], "unless": [16, 21, 49, 85, 86, 98, 103, 163, 195, 202, 204, 224, 243, 244, 248, 250, 305, 364, 458, 479], "unlik": [33, 98, 132, 334, 337, 449], "unmodifi": 164, "unpackbit": 6, "unravel": 480, "unravel_index": [6, 31, 32, 422], "unraveled_coord": 480, "unsaf": [49, 64, 70, 71, 77, 98, 103, 166, 227, 305, 439, 455, 486], "unscal": 10, "unsign": [101, 364, 458], "unspecifi": 430, "unsupport": [11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 68, 76, 79, 80, 87, 88, 96, 109, 110, 112, 142, 143, 144, 145, 146, 147, 148, 162, 167, 173, 189, 215, 216, 217, 218, 219, 229, 235, 236, 237, 239, 350, 351, 361, 362, 363, 365, 370, 371, 425, 427, 433, 434, 440, 444, 445, 446, 447, 457, 462, 463, 477, 478], "until": [104, 435, 436], "unwrap": [6, 87, 370], "up": [4, 10, 101, 103, 141, 461, 472, 479], "updat": 4, "uplo": [196, 198], "upon": [98, 342], "upper": [89, 114, 163, 164, 192, 196, 198, 206, 226, 469, 471, 472, 474, 475, 476], "us": [4, 10, 15, 22, 23, 29, 34, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61, 64, 68, 70, 71, 75, 83, 85, 86, 89, 90, 92, 93, 96, 98, 101, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 143, 144, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 168, 171, 172, 173, 186, 189, 190, 191, 192, 193, 196, 197, 198, 200, 202, 203, 204, 205, 212, 213, 219, 220, 222, 224, 226, 227, 228, 230, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 259, 305, 310, 318, 337, 350, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368, 372, 375, 377, 378, 388, 393, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 413, 416, 421, 424, 427, 428, 429, 430, 431, 433, 435, 441, 442, 444, 450, 456, 457, 458, 460, 461, 464, 465, 466, 468, 469, 471, 472, 475, 476, 477, 479, 480, 482, 483, 487, 488, 489, 497, 505], "usabl": 142, "usag": [3, 4, 118, 132], "use_getitem": 101, "use_setitem": 101, "user": [101, 240], "usm": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 454, 469, 471, 475, 482, 488, 489], "usm_ndarrai": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 349, 350, 351, 352, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489], "usm_typ": [23, 36, 40, 41, 42, 43, 44, 45, 75, 89, 90, 92, 98, 105, 106, 114, 118, 132, 149, 150, 151, 152, 153, 154, 155, 157, 168, 171, 212, 213, 224, 226, 233, 310, 354, 355, 356, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 469, 471, 475, 482, 488, 489], "usual": [90, 98, 101, 227, 337], "util": 490, "v": [74, 89, 92, 98, 101, 195, 196, 336, 367, 441], "v0": 6, "v1": 6, "v10": 101, "v9": 6, "val": [98, 134, 137, 295, 330, 360], "valid": [78, 111, 226, 459, 471, 472, 475, 476], "valu": [10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 94, 95, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 121, 122, 127, 129, 130, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 173, 174, 176, 177, 178, 179, 182, 183, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 255, 256, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 290, 292, 294, 295, 297, 298, 299, 302, 303, 305, 307, 310, 315, 317, 328, 330, 337, 350, 351, 352, 353, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 382, 399, 400, 416, 423, 425, 426, 427, 428, 429, 430, 433, 434, 435, 438, 440, 441, 442, 444, 445, 446, 449, 452, 453, 456, 457, 458, 460, 461, 462, 463, 466, 468, 471, 475, 477, 478, 479, 481, 483, 487, 488, 489, 497, 501], "value2": 101, "valueerror": [22, 36, 41, 42, 148, 241, 242, 430, 451, 454], "vander": 6, "vandermond": 482, "var": [6, 98, 230, 246, 249, 251, 456, 497], "vararg": 159, "vari": [10, 16, 20, 21, 93, 104, 117, 119, 121, 122, 123, 124, 126, 127, 130, 133, 151, 171, 193, 195, 196, 200, 204, 240, 246, 249, 251, 424], "variabl": [82, 200, 208], "varianc": [98, 230, 246, 249, 251, 348, 456, 483, 501], "variou": 505, "vdot": [6, 97, 227], "vector": [83, 103, 151, 171, 172, 186, 193, 202, 203, 204, 209, 227, 232, 357, 484, 501], "vendor": 4, "veri": [3, 10, 17, 174, 232, 240], "verif": 0, "verifi": 192, "version": [4, 81, 98, 101, 138, 317, 352, 422, 480], "vertic": [69, 70, 71, 93, 100, 134, 139, 140, 166, 437, 439, 451, 455, 485, 486], "vetterlin": 10, "vh": 209, "via": 127, "view": [6, 39, 53, 54, 55, 62, 89, 93, 98, 99, 111, 117, 119, 123, 124, 128, 129, 131, 133, 139, 140, 141, 165, 232, 238, 253, 334, 347, 359, 368, 422, 430, 437, 451, 454, 459, 467, 480, 485], "violat": 77, "void": 101, "void640": 101, "von": 417, "vonmis": 6, "vsplit": [6, 70, 71, 451], "vstack": [6, 69, 70, 71, 100, 166, 200, 439, 451, 455], "w": [10, 56, 195, 196, 197, 198, 201, 429], "wa": [10, 84, 101, 203, 225, 245, 247, 249, 251, 372, 413, 426, 456, 483], "wai": [3, 4, 10, 98, 104, 116, 122, 123, 124, 129, 150, 328, 464], "wald": 6, "walk": 101, "want": [4, 461], "warn": [101, 241, 242, 390, 431], "we": [75, 90, 93, 104, 134, 200, 226, 368, 461, 468], "weibul": [6, 420], "weight": [56, 57, 82, 163, 164, 230, 246, 458], "well": [101, 103, 150, 163, 164, 364, 374, 391, 410], "were": [70, 71, 151, 372, 401, 455, 481], "what": [10, 49, 64, 70, 71, 77, 98, 101, 103, 107, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 166, 175, 227, 305, 374, 391, 439, 455, 486, 497], "when": [10, 22, 23, 36, 37, 40, 41, 43, 45, 48, 49, 56, 75, 77, 95, 98, 101, 103, 116, 127, 129, 130, 145, 146, 157, 162, 195, 204, 206, 212, 219, 224, 226, 227, 236, 243, 244, 245, 247, 248, 250, 305, 427, 431, 434, 436, 438, 442, 460, 464, 468, 479, 487, 505], "whenev": [111, 359, 459, 467], "where": [0, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 65, 66, 68, 72, 73, 75, 76, 77, 79, 80, 84, 87, 88, 89, 90, 92, 94, 95, 96, 98, 99, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 118, 121, 127, 128, 129, 132, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 188, 189, 190, 191, 192, 200, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 239, 245, 246, 247, 248, 249, 250, 251, 300, 301, 305, 310, 322, 323, 324, 329, 336, 341, 343, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 370, 371, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 416, 425, 426, 427, 431, 433, 434, 436, 440, 441, 442, 444, 445, 446, 447, 451, 452, 453, 456, 457, 458, 462, 463, 466, 467, 469, 471, 475, 477, 478, 481, 482, 483, 485, 488, 489], "wherev": 77, "whether": [16, 17, 21, 37, 84, 95, 101, 148, 174, 175, 192, 206, 212, 240, 248, 250, 422, 430, 445, 479, 480], "which": [3, 4, 10, 16, 21, 22, 23, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 56, 62, 70, 71, 75, 77, 81, 84, 85, 86, 89, 90, 92, 93, 94, 95, 97, 98, 101, 103, 104, 105, 106, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 145, 146, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 164, 166, 168, 171, 177, 178, 179, 180, 181, 192, 195, 202, 204, 211, 213, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 310, 352, 354, 355, 356, 359, 364, 367, 372, 394, 399, 400, 401, 402, 403, 404, 405, 407, 413, 416, 422, 426, 428, 431, 435, 442, 448, 449, 451, 454, 455, 456, 458, 460, 466, 467, 468, 469, 470, 471, 474, 475, 478, 481, 482, 483, 487, 488, 489, 497, 505], "whichev": 172, "while": [10, 131, 133, 163, 164, 230, 246, 249, 251, 352, 360, 364, 435, 456, 458, 469, 483], "whitespac": [150, 153], "who": 6, "whole": [117, 119, 123, 124, 128, 129, 131, 133, 471, 475], "whose": [11, 12, 13, 14, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 93, 101, 113, 114, 134, 193, 196, 197, 198, 210, 226, 238, 435, 472, 476, 480], "why": 127, "wide": 134, "width": [101, 163, 164], "wild": [374, 391], "window": [4, 118, 132], "wise": [11, 12, 13, 14, 15, 17, 20, 24, 25, 26, 27, 28, 29, 30, 35, 37, 46, 47, 50, 51, 52, 58, 59, 60, 61, 65, 66, 69, 70, 71, 72, 73, 76, 79, 80, 84, 96, 98, 100, 107, 109, 110, 112, 115, 136, 142, 143, 144, 145, 146, 147, 160, 161, 162, 165, 166, 167, 170, 173, 174, 177, 178, 179, 180, 181, 189, 190, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 234, 235, 236, 237, 239, 245, 247, 248, 309, 350, 351, 353, 361, 362, 363, 365, 423, 425, 427, 433, 434, 438, 439, 440, 444, 445, 446, 447, 451, 452, 453, 455, 457, 462, 463, 477, 478, 485, 486, 497, 501, 505], "within": [17, 23, 37, 49, 98, 103, 121, 122, 123, 124, 126, 127, 129, 163, 164, 174, 305, 367, 372, 416], "without": [93, 98, 105, 134, 347, 421, 430, 431, 497], "won": 101, "word": [122, 123, 124, 127, 129, 143, 197, 372, 416], "work": [4, 35, 48, 461, 497], "world": [101, 374, 391], "would": [33, 70, 71, 98, 101, 151, 171, 203, 226, 227, 328, 359, 372, 422, 449, 451, 455, 461, 467, 481], "wrap": [87, 98, 134, 330, 345, 367, 370, 422, 441, 460, 461, 481], "wrapper": 98, "writabl": 429, "write": [89, 93, 98, 134, 150, 318, 430], "writeabl": 429, "written": [4, 81, 84, 134, 150, 225, 426, 487], "x": [0, 3, 4, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 59, 62, 63, 65, 66, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 87, 88, 89, 92, 94, 95, 98, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 123, 124, 125, 131, 132, 133, 136, 137, 138, 143, 149, 150, 151, 152, 154, 155, 156, 157, 159, 165, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 197, 200, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 232, 233, 237, 238, 240, 305, 310, 319, 320, 326, 332, 337, 338, 350, 352, 354, 355, 356, 361, 364, 365, 366, 370, 371, 390, 396, 421, 423, 425, 426, 428, 429, 434, 435, 436, 438, 440, 442, 444, 445, 446, 447, 451, 452, 453, 454, 459, 460, 462, 463, 468, 469, 478, 482, 485, 487, 488, 489], "x0": [43, 45, 75, 92, 356, 482, 489], "x00": 150, "x01": [149, 150], "x02": [149, 150], "x03": [149, 150], "x04": [149, 150], "x05": 149, "x1": [15, 17, 20, 26, 28, 29, 37, 38, 46, 49, 50, 51, 57, 58, 60, 61, 67, 76, 78, 96, 98, 107, 142, 144, 145, 146, 147, 156, 160, 161, 162, 167, 186, 188, 189, 190, 191, 218, 219, 220, 221, 222, 223, 227, 229, 231, 232, 235, 236, 237, 239, 305, 350, 351, 353, 358, 361, 362, 363, 369, 409, 427, 433, 435, 457, 477], "x1_i": [15, 29, 51, 58, 60, 61, 76, 96, 107, 142, 144, 147, 160, 161, 167, 189, 190, 191, 218, 219, 220, 222, 223, 236, 239, 353, 362, 363, 427, 433, 457, 477], "x2": [15, 16, 17, 20, 21, 26, 28, 29, 36, 37, 38, 46, 50, 51, 58, 60, 61, 76, 78, 96, 107, 142, 144, 145, 146, 147, 156, 160, 161, 162, 167, 186, 188, 189, 190, 191, 218, 219, 220, 221, 222, 223, 227, 229, 232, 235, 236, 239, 350, 351, 353, 361, 362, 363, 427, 433, 435, 452, 457, 477], "x2_i": [15, 29, 51, 58, 60, 61, 76, 96, 107, 142, 144, 147, 160, 161, 167, 189, 190, 191, 218, 219, 220, 222, 223, 236, 239, 353, 362, 363, 427, 433, 457, 477], "x3": [16, 21, 142], "x_i": [11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 46, 47, 50, 52, 59, 65, 66, 72, 73, 79, 80, 109, 110, 112, 143, 170, 173, 214, 215, 216, 217, 221, 350, 361, 365, 423, 425, 434, 438, 440, 444, 445, 446, 447, 452, 453, 462, 463, 478], "xi": [217, 232], "xn": [186, 232], "xor": [58, 59, 60, 61, 173, 220, 221, 222, 223], "xv": 232, "xx": 232, "xy": 232, "y": [0, 4, 13, 14, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 62, 75, 82, 83, 92, 98, 101, 102, 105, 106, 111, 114, 118, 132, 149, 150, 151, 152, 154, 155, 157, 159, 168, 180, 181, 193, 200, 212, 213, 224, 232, 233, 237, 240, 310, 326, 334, 337, 354, 355, 356, 429, 468, 469, 482, 487, 488, 489], "yet": [4, 6], "yield": [13, 14, 24, 25, 26, 27, 28, 30, 33, 46, 47, 50, 52, 248, 250, 352, 372, 487, 497], "you": [4, 93, 121, 126, 127, 226, 460, 461, 497, 505], "your": [4, 93, 505], "yv": 232, "yy": 232, "z": [13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 30, 36, 40, 41, 42, 43, 45, 46, 47, 50, 52, 75, 92, 105, 106, 114, 118, 132, 149, 150, 151, 152, 154, 155, 157, 168, 212, 213, 224, 232, 233, 354, 355, 356, 382, 469, 482, 488, 489], "zero": [6, 10, 16, 20, 21, 33, 34, 35, 36, 66, 81, 84, 90, 94, 98, 105, 106, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 143, 150, 154, 155, 168, 170, 175, 176, 180, 181, 182, 183, 189, 195, 196, 198, 200, 201, 202, 205, 209, 225, 226, 228, 230, 234, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 326, 327, 337, 338, 342, 349, 352, 355, 356, 364, 372, 374, 402, 404, 405, 407, 423, 424, 426, 431, 434, 438, 444, 449, 456, 458, 464, 469, 470, 473, 474, 478, 483, 487, 489], "zeros_lik": [6, 36, 88, 106, 155, 356, 371, 488], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Binary Operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "FFT Functions", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_to", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.det", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.diagonal", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.take", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear Algebra", "Logic Functions", "Array Manipulation Routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Padding", "Polynomials", "Random Sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, Searching, and Counting", "Special Functions", "Statistical Functions", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 254, "__add__": 255, "__and__": 256, "__bool__": 257, "__complex__": 258, "__copy__": 259, "__eq__": 260, "__float__": 261, "__floordiv__": 262, "__ge__": 263, "__getitem__": 264, "__gt__": 265, "__iadd__": 266, "__iand__": 267, "__ifloordiv__": 268, "__ilshift__": 269, "__imod__": 270, "__imul__": 271, "__int__": 272, "__invert__": 273, "__ior__": 274, "__ipow__": 275, "__irshift__": 276, "__isub__": 277, "__itruediv__": 278, "__ixor__": 279, "__le__": 280, "__len__": 281, "__lshift__": 282, "__lt__": 283, "__matmul__": 284, "__mod__": 285, "__mul__": 286, "__ne__": 287, "__neg__": 288, "__new__": 289, "__or__": 290, "__pos__": 291, "__pow__": 292, "__repr__": 293, "__rshift__": 294, "__setitem__": 295, "__str__": 296, "__sub__": 297, "__truediv__": 298, "__xor__": 299, "ab": 11, "absolut": 12, "aco": 13, "acosh": 14, "ad": 494, "add": 15, "algebra": [6, 492], "all": [16, 300], "allclos": 17, "amax": 18, "amin": 19, "angl": 20, "ani": [21, 301], "api": [1, 490], "append": 22, "arang": 23, "arcco": 24, "arccosh": 25, "arcsin": 26, "arcsinh": 27, "arctan": 28, "arctan2": 29, "arctanh": 30, "argmax": [31, 302], "argmin": [32, 303], "argsort": [33, 304], "argwher": 34, "arithmet": [495, 497, 499], "around": 35, "arrai": [6, 7, 9, 36, 491, 493, 494, 497], "array_equ": 37, "array_equiv": 38, "array_split": 39, "asanyarrai": 40, "asarrai": 41, "asarray_chkfinit": 42, "ascontiguousarrai": 43, "asfarrai": 44, "asfortranarrai": 45, "asin": 46, "asinh": 47, "asnumpi": 48, "astyp": [49, 305], "atan": 50, "atan2": 51, "atanh": 52, "atleast_1d": 53, "atleast_2d": 54, "atleast_3d": 55, "attribut": 497, "avail": [9, 505], "averag": [56, 504], "backend": 1, "background": 10, "basic": [494, 499], "beta": 373, "binari": 5, "bincount": 57, "binomi": 374, "bit": [5, 505], "bitwise_and": 58, "bitwise_not": 59, "bitwise_or": 60, "bitwise_xor": 61, "broadcast_arrai": 62, "broadcast_to": 63, "build": [4, 7], "byte": 375, "c": 1, "calcul": 497, "can_cast": 64, "cbrt": 65, "ceil": 66, "chang": 494, "channel": 4, "chisquar": 376, "choic": 377, "choleski": 192, "choos": [67, 306], "class": 7, "clip": [68, 307], "co": 79, "column_stack": 69, "comparison": [6, 493, 497, 505], "complex": 495, "concat": 70, "concaten": 71, "cond": 193, "conda": 4, "conj": [72, 308], "conjug": [73, 309], "construct": 497, "control": 0, "convers": 497, "convolv": 74, "copi": [75, 310], "copysign": 76, "copyto": 77, "correl": [78, 504], "cosh": 80, "count": 502, "count_nonzero": 81, "cov": 82, "creat": 8, "creation": 7, "cross": 83, "cumlogsumexp": 84, "cumprod": [85, 311], "cumsum": [86, 312], "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 491, 497, 500], "decomposit": 492, "deg2rad": 87, "degre": 88, "det": 194, "detail": 10, "develop": 2, "devic": 4, "diag": 89, "diag_indic": 90, "diag_indices_from": 91, "diagflat": 92, "diagon": [93, 313], "diff": 94, "differ": 495, "digit": 95, "dimens": [10, 494], "dimension": [6, 497], "dirichlet": 378, "discret": 6, "distribut": 500, "divid": 96, "dot": 97, "dpnp": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 500], "dpnp_arrai": 98, "driver": 4, "dsplit": 99, "dstack": 100, "dtype": [101, 314], "ediff1d": 102, "eig": 195, "eigenvalu": 492, "eigh": 196, "eigval": 197, "eigvalsh": 198, "einsum": 103, "einsum_path": 104, "element": [5, 494], "empti": 105, "empty_lik": 106, "equal": 107, "equat": 492, "erf": 108, "error": 503, "exampl": [0, 4], "exist": 7, "exp": 109, "exp2": 110, "expand_dim": 111, "expm1": 112, "expon": 495, "exponenti": 379, "extens": 2, "extract": 113, "extrema": 495, "ey": 114, "f": 380, "fab": 115, "fft": [10, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "fft2": 117, "fftfreq": 118, "fftn": 119, "fftshift": 120, "fill": 315, "fill_diagon": 134, "find": 495, "finfo": 135, "fix": 136, "flag": 316, "flat": 317, "flatit": 137, "flatnonzero": 138, "flatten": 318, "flip": 139, "fliplr": 140, "flipud": 141, "float": [495, 505], "float_pow": 142, "floor": 143, "floor_divid": 144, "fmax": 145, "fmin": 146, "fmod": 147, "format": 5, "fourier": 6, "from": [4, 7], "from_dlpack": 148, "frombuff": 149, "fromfil": 150, "fromfunct": 151, "fromit": 152, "fromstr": 153, "full": 154, "full_lik": 155, "function": [10, 493, 495, 503, 504, 505], "gamma": 381, "gcd": 156, "gener": [491, 500], "geometr": 382, "geomspac": 157, "get_includ": 158, "gradient": 159, "greater": 160, "greater_equ": 161, "guid": 4, "gumbel": 383, "handl": 495, "heavisid": 162, "helper": 10, "hermitian": 10, "hfft": 121, "higher": 10, "histogram": [163, 504], "histogram_bin_edg": 164, "hsplit": 165, "hstack": 166, "hyperbol": 495, "hypergeometr": 384, "hypot": 167, "ident": 168, "ifft": 122, "ifft2": 123, "ifftn": 124, "ifftshift": 125, "ihfft": 126, "iinfo": 169, "imag": [170, 319], "implement": 10, "index": [491, 497], "indic": 171, "infin": 493, "inform": [2, 8, 10], "inner": 172, "insert": 491, "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 199, "invert": 173, "irfft": 127, "irfft2": 128, "irfftn": 129, "isclos": 174, "iscomplex": 175, "iscomplexobj": 176, "isfinit": 177, "isinf": 178, "isnan": 179, "isneginf": 180, "isposinf": 181, "isreal": 182, "isrealobj": 183, "isscalar": 184, "issubdtyp": 185, "item": [320, 497], "items": 321, "iter": 491, "ix_": 186, "join": 494, "kind": 494, "kron": 187, "laplac": 385, "layout": 497, "lcm": 188, "left_shift": 189, "less": 190, "less_equ": 191, "level": 6, "librari": 0, "like": [491, 494], "linalg": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "linear": [6, 492], "linspac": 212, "loadtxt": 213, "log": 214, "log10": 215, "log1p": 216, "log2": 217, "logaddexp": 218, "logaddexp2": 219, "logarithm": 495, "logic": 493, "logical_and": 220, "logical_not": 221, "logical_or": 222, "logical_xor": 223, "logist": 386, "lognorm": 387, "logseri": 388, "logspac": 224, "logsumexp": 225, "lstsq": 200, "manipul": [494, 497], "mask_indic": 226, "math": 505, "mathemat": 495, "matmul": 227, "matric": 7, "matrix": [7, 492, 497], "matrix_pow": 201, "matrix_rank": 202, "max": [228, 322], "maximum": 229, "mean": [230, 323], "median": 231, "memori": 497, "meshgrid": 232, "method": 497, "mgrid": 233, "min": [234, 324], "minimum": 235, "miscellan": [8, 495, 496], "mod": 236, "modf": 237, "modul": [6, 499], "moveaxi": 238, "multi": [6, 497], "multi_dot": 203, "multinomi": 389, "multipl": 497, "multipli": 239, "multivariate_norm": 390, "nan": 493, "nan_to_num": 240, "nanargmax": 241, "nanargmin": 242, "nancumprod": 243, "nancumsum": 244, "nanmax": 245, "nanmean": 246, "nanmin": 247, "nanprod": 248, "nanstd": 249, "nansum": 250, "nanvar": 251, "nbyte": 325, "ndarrai": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 497], "ndim": [326, 349], "neg": 350, "negative_binomi": 391, "nextaft": 351, "noncentral_chisquar": 392, "noncentral_f": 393, "nonzero": [327, 352], "norm": [204, 492], "normal": [10, 394], "not_equ": 353, "number": [492, 494, 495], "numer": 7, "numpi": [2, 6], "ogrid": 354, "ones": 355, "ones_lik": 356, "oper": [5, 491, 493, 494, 495, 497, 505], "order": 504, "other": [492, 495, 497], "outer": 357, "output": 5, "over": 491, "overview": 3, "pack": 5, "packag": [4, 499], "pad": 498, "parallel": [0, 2], "pareto": 395, "partit": [328, 358], "permut": [396, 500], "permute_dim": 359, "pinv": 205, "place": 360, "point": 495, "poisson": 397, "poly1d": 499, "polynomi": 499, "polyutil": 499, "posit": 361, "pow": 362, "power": [363, 398], "prod": [329, 364], "product": [492, 495], "proj": 365, "ptp": 366, "put": [330, 367], "put_along_axi": 368, "putmask": 369, "python": 4, "qr": 206, "quick": 4, "r": 4, "rad2deg": 370, "radian": 371, "rand": 399, "randint": 400, "randn": 401, "random": [6, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 500], "random_integ": 403, "random_sampl": 404, "randomst": 372, "ranf": 405, "rang": 7, "ration": 495, "ravel": [331, 421], "ravel_multi_index": 422, "rayleigh": 406, "real": [10, 332, 423], "real_if_clos": 424, "rearrang": 494, "reciproc": 425, "reduce_hypot": 426, "refer": [1, 490], "remaind": 427, "remov": 494, "repeat": [333, 428], "requir": 429, "reshap": [334, 430], "resiz": 431, "result_typ": 432, "rfft": 130, "rfft2": 131, "rfftfreq": 132, "rfftn": 133, "right_shift": 433, "rint": 434, "roll": 435, "rollaxi": 436, "rot90": 437, "round": [335, 438, 495], "routin": [7, 8, 10, 491, 494, 495, 496, 501], "row_stack": 439, "rsqrt": 440, "sampl": [6, 407, 500], "scikit": 4, "search": 502, "searchsort": [336, 441], "seed": 408, "select": [442, 497], "shape": [7, 337, 443, 494, 497], "shuffl": 409, "sign": 444, "signbit": 445, "simpl": 500, "sin": 446, "sinh": 447, "size": [338, 448], "slogdet": 207, "solv": [208, 492], "sort": [339, 449, 502], "sort_complex": 450, "special": [495, 497, 503], "split": [451, 494], "sqrt": 452, "squar": 453, "squeez": [340, 454], "stack": 455, "standard": 10, "standard_cauchi": 410, "standard_exponenti": 411, "standard_gamma": 412, "standard_norm": 413, "standard_t": 414, "start": 4, "statist": 504, "std": [341, 456], "stride": 342, "subtract": 457, "sum": [343, 458, 495], "summari": 6, "svd": 209, "swapax": [344, 459], "sycl": 4, "t": 253, "tabl": 6, "take": [345, 460], "take_along_axi": 461, "tan": 462, "tanh": 463, "target": 4, "tensordot": 464, "tensorinv": 210, "tensorsolv": 211, "test": [4, 8, 493], "tile": [465, 494], "trace": [346, 466], "transform": [6, 10], "transpos": [347, 467, 494], "trapezoid": 468, "tri": 469, "triangular": 415, "trigonometr": [495, 505], "tril": 470, "tril_indic": 471, "tril_indices_from": 472, "trim_zero": 473, "triu": 474, "triu_indic": 475, "triu_indices_from": 476, "true_divid": 477, "trunc": 478, "truth": 493, "twiddl": 505, "type": [8, 9, 493, 497], "ufunc": 505, "uniform": 416, "uniqu": 479, "univers": 505, "unravel_index": 480, "unwrap": 481, "util": 496, "valu": [7, 493], "vander": 482, "var": [348, 483], "varianc": 504, "vdot": 484, "vector": 492, "vonmis": 417, "vsplit": 485, "vstack": 486, "wald": 418, "weibul": 419, "where": 487, "wise": 5, "zero": 488, "zeros_lik": 489, "zipf": 420}})