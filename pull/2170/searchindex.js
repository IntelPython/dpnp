Search.setIndex({"alltitles": {"API Reference": [[640, null]], "Adding and removing elements": [[644, "adding-and-removing-elements"]], "Arithmetic": [[648, "arithmetic"]], "Arithmetic operations": [[645, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[647, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array attributes": [[647, "array-attributes"]], "Array conversion": [[647, "array-conversion"]], "Array creation routines": [[7, null]], "Array manipulation routines": [[644, null]], "Array methods": [[647, "array-methods"]], "Array type testing": [[643, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[654, "available-ufuncs"]], "Averages and variances": [[653, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[644, "basic-operations"]], "Basics": [[648, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[654, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[647, "calculation"]], "Changing array shape": [[644, "changing-array-shape"]], "Changing kind of array": [[644, "changing-kind-of-array"]], "Changing number of dimensions": [[644, "changing-number-of-dimensions"]], "Comparison": [[643, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[654, "comparison-functions"]], "Constructing arrays": [[647, "constructing-arrays"]], "Correlations": [[653, "correlations"]], "Counting": [[651, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[647, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[642, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"], [10, null]], "Distributions": [[649, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[652, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[642, "exceptions"]], "Exponents and logarithms": [[645, "exponents-and-logarithms"]], "Extrema finding": [[645, "extrema-finding"]], "Floating functions": [[654, "floating-functions"]], "Floating point routines": [[645, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Functional programming": [[11, null]], "Generating index arrays": [[641, "generating-index-arrays"]], "Handling complex numbers": [[645, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[653, "histograms"]], "Hyperbolic functions": [[645, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[647, "indexing-arrays"]], "Indexing routines": [[641, null]], "Indexing-like operations": [[641, "indexing-like-operations"]], "Infinities and NaNs": [[643, "infinities-and-nans"]], "Inserting data into arrays": [[641, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[647, "item-selection-and-manipulation"]], "Iterating over arrays": [[641, "iterating-over-arrays"]], "Joining arrays": [[644, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"]], "Linear algebra": [[642, null]], "Logic functions": [[643, null]], "Logic operations": [[643, "logic-operations"]], "Math operations": [[654, "math-operations"]], "Mathematical functions": [[645, null]], "Matrix and vector products": [[642, "matrix-and-vector-products"]], "Matrix eigenvalues": [[642, "matrix-eigenvalues"]], "Memory layout": [[647, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [645, "miscellaneous"]], "Miscellaneous routines": [[646, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[647, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[642, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[653, "order-statistics"]], "Other attributes": [[647, "other-attributes"]], "Other matrix operations": [[642, "other-matrix-operations"]], "Other special functions": [[645, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[649, "permutations"]], "Poly1d": [[648, "poly1d"]], "Polynomial Module": [[648, "polynomial-module"]], "Polynomial Package": [[648, "polynomial-package"]], "Polynomials": [[648, null]], "Polyutils": [[648, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random generator": [[649, "random-generator"]], "Random sampling (dpnp.random)": [[649, null]], "Rational routines": [[645, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[644, "rearranging-elements"]], "Rounding": [[645, "rounding"]], "Routines": [[650, null]], "Searching": [[651, "searching"]], "Shape manipulation": [[647, "shape-manipulation"]], "Simple random data": [[649, "simple-random-data"]], "Solving linear equations": [[642, "solving-linear-equations"]], "Sorting": [[651, "sorting"]], "Sorting, searching, and counting": [[651, null]], "Special Functions": [[652, null]], "Special methods": [[647, "special-methods"]], "Splitting arrays": [[644, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistics": [[653, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[645, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[644, "tiling-arrays"]], "Transpose-like operations": [[644, "transpose-like-operations"]], "Trigonometric functions": [[645, "trigonometric-functions"], [654, "trigonometric-functions"]], "Truth value testing": [[643, "truth-value-testing"]], "Universal Functions (ufunc)": [[654, null]], "Utility": [[646, "utility"]], "dpnp.abs": [[12, null]], "dpnp.absolute": [[13, null]], "dpnp.acos": [[14, null]], "dpnp.acosh": [[15, null]], "dpnp.add": [[16, null]], "dpnp.all": [[17, null]], "dpnp.allclose": [[18, null]], "dpnp.amax": [[19, null]], "dpnp.amin": [[20, null]], "dpnp.angle": [[21, null]], "dpnp.any": [[22, null]], "dpnp.append": [[23, null]], "dpnp.apply_along_axis": [[24, null]], "dpnp.apply_over_axes": [[25, null]], "dpnp.arange": [[26, null]], "dpnp.arccos": [[27, null]], "dpnp.arccosh": [[28, null]], "dpnp.arcsin": [[29, null]], "dpnp.arcsinh": [[30, null]], "dpnp.arctan": [[31, null]], "dpnp.arctan2": [[32, null]], "dpnp.arctanh": [[33, null]], "dpnp.argmax": [[34, null]], "dpnp.argmin": [[35, null]], "dpnp.argsort": [[36, null]], "dpnp.argwhere": [[37, null]], "dpnp.around": [[38, null]], "dpnp.array": [[39, null]], "dpnp.array_equal": [[40, null]], "dpnp.array_equiv": [[41, null]], "dpnp.array_split": [[42, null]], "dpnp.asanyarray": [[43, null]], "dpnp.asarray": [[44, null]], "dpnp.asarray_chkfinite": [[45, null]], "dpnp.ascontiguousarray": [[46, null]], "dpnp.asfarray": [[47, null]], "dpnp.asfortranarray": [[48, null]], "dpnp.asin": [[49, null]], "dpnp.asinh": [[50, null]], "dpnp.asnumpy": [[51, null]], "dpnp.astype": [[52, null]], "dpnp.atan": [[53, null]], "dpnp.atan2": [[54, null]], "dpnp.atanh": [[55, null]], "dpnp.atleast_1d": [[56, null]], "dpnp.atleast_2d": [[57, null]], "dpnp.atleast_3d": [[58, null]], "dpnp.average": [[59, null]], "dpnp.binary_repr": [[60, null]], "dpnp.bincount": [[61, null]], "dpnp.bitwise_and": [[62, null]], "dpnp.bitwise_invert": [[63, null]], "dpnp.bitwise_left_shift": [[64, null]], "dpnp.bitwise_not": [[65, null]], "dpnp.bitwise_or": [[66, null]], "dpnp.bitwise_right_shift": [[67, null]], "dpnp.bitwise_xor": [[68, null]], "dpnp.broadcast_arrays": [[69, null]], "dpnp.broadcast_shapes": [[70, null]], "dpnp.broadcast_to": [[71, null]], "dpnp.byte_bounds": [[72, null]], "dpnp.can_cast": [[73, null]], "dpnp.cbrt": [[74, null]], "dpnp.ceil": [[75, null]], "dpnp.choose": [[76, null]], "dpnp.clip": [[77, null]], "dpnp.column_stack": [[78, null]], "dpnp.concat": [[79, null]], "dpnp.concatenate": [[80, null]], "dpnp.conj": [[81, null]], "dpnp.conjugate": [[82, null]], "dpnp.convolve": [[83, null]], "dpnp.copy": [[84, null]], "dpnp.copysign": [[85, null]], "dpnp.copyto": [[86, null]], "dpnp.corrcoef": [[87, null]], "dpnp.correlate": [[88, null]], "dpnp.cos": [[89, null]], "dpnp.cosh": [[90, null]], "dpnp.count_nonzero": [[91, null]], "dpnp.cov": [[92, null]], "dpnp.cross": [[93, null]], "dpnp.cumlogsumexp": [[94, null]], "dpnp.cumprod": [[95, null]], "dpnp.cumsum": [[96, null]], "dpnp.cumulative_prod": [[97, null]], "dpnp.cumulative_sum": [[98, null]], "dpnp.deg2rad": [[99, null]], "dpnp.degrees": [[100, null]], "dpnp.delete": [[101, null]], "dpnp.diag": [[102, null]], "dpnp.diag_indices": [[103, null]], "dpnp.diag_indices_from": [[104, null]], "dpnp.diagflat": [[105, null]], "dpnp.diagonal": [[106, null]], "dpnp.diff": [[107, null]], "dpnp.digitize": [[108, null]], "dpnp.divide": [[109, null]], "dpnp.dot": [[110, null]], "dpnp.dpnp_array.dpnp_array": [[111, null]], "dpnp.dpnp_array.dpnp_array.T": [[112, null]], "dpnp.dpnp_array.dpnp_array.all": [[113, null]], "dpnp.dpnp_array.dpnp_array.any": [[114, null]], "dpnp.dpnp_array.dpnp_array.argmax": [[115, null]], "dpnp.dpnp_array.dpnp_array.argmin": [[116, null]], "dpnp.dpnp_array.dpnp_array.argsort": [[117, null]], "dpnp.dpnp_array.dpnp_array.asnumpy": [[118, null]], "dpnp.dpnp_array.dpnp_array.astype": [[119, null]], "dpnp.dpnp_array.dpnp_array.choose": [[120, null]], "dpnp.dpnp_array.dpnp_array.clip": [[121, null]], "dpnp.dpnp_array.dpnp_array.conj": [[122, null]], "dpnp.dpnp_array.dpnp_array.conjugate": [[123, null]], "dpnp.dpnp_array.dpnp_array.copy": [[124, null]], "dpnp.dpnp_array.dpnp_array.cumprod": [[125, null]], "dpnp.dpnp_array.dpnp_array.cumsum": [[126, null]], "dpnp.dpnp_array.dpnp_array.device": [[127, null]], "dpnp.dpnp_array.dpnp_array.diagonal": [[128, null]], "dpnp.dpnp_array.dpnp_array.dot": [[129, null]], "dpnp.dpnp_array.dpnp_array.dtype": [[130, null]], "dpnp.dpnp_array.dpnp_array.fill": [[131, null]], "dpnp.dpnp_array.dpnp_array.flags": [[132, null]], "dpnp.dpnp_array.dpnp_array.flat": [[133, null]], "dpnp.dpnp_array.dpnp_array.flatten": [[134, null]], "dpnp.dpnp_array.dpnp_array.get_array": [[135, null]], "dpnp.dpnp_array.dpnp_array.imag": [[136, null]], "dpnp.dpnp_array.dpnp_array.item": [[137, null]], "dpnp.dpnp_array.dpnp_array.itemsize": [[138, null]], "dpnp.dpnp_array.dpnp_array.mT": [[139, null]], "dpnp.dpnp_array.dpnp_array.max": [[140, null]], "dpnp.dpnp_array.dpnp_array.mean": [[141, null]], "dpnp.dpnp_array.dpnp_array.min": [[142, null]], "dpnp.dpnp_array.dpnp_array.nbytes": [[143, null]], "dpnp.dpnp_array.dpnp_array.ndim": [[144, null]], "dpnp.dpnp_array.dpnp_array.nonzero": [[145, null]], "dpnp.dpnp_array.dpnp_array.partition": [[146, null]], "dpnp.dpnp_array.dpnp_array.prod": [[147, null]], "dpnp.dpnp_array.dpnp_array.put": [[148, null]], "dpnp.dpnp_array.dpnp_array.ravel": [[149, null]], "dpnp.dpnp_array.dpnp_array.real": [[150, null]], "dpnp.dpnp_array.dpnp_array.repeat": [[151, null]], "dpnp.dpnp_array.dpnp_array.reshape": [[152, null]], "dpnp.dpnp_array.dpnp_array.round": [[153, null]], "dpnp.dpnp_array.dpnp_array.searchsorted": [[154, null]], "dpnp.dpnp_array.dpnp_array.shape": [[155, null]], "dpnp.dpnp_array.dpnp_array.size": [[156, null]], "dpnp.dpnp_array.dpnp_array.sort": [[157, null]], "dpnp.dpnp_array.dpnp_array.squeeze": [[158, null]], "dpnp.dpnp_array.dpnp_array.std": [[159, null]], "dpnp.dpnp_array.dpnp_array.strides": [[160, null]], "dpnp.dpnp_array.dpnp_array.sum": [[161, null]], "dpnp.dpnp_array.dpnp_array.swapaxes": [[162, null]], "dpnp.dpnp_array.dpnp_array.sycl_context": [[163, null]], "dpnp.dpnp_array.dpnp_array.sycl_device": [[164, null]], "dpnp.dpnp_array.dpnp_array.sycl_queue": [[165, null]], "dpnp.dpnp_array.dpnp_array.take": [[166, null]], "dpnp.dpnp_array.dpnp_array.to_device": [[167, null]], "dpnp.dpnp_array.dpnp_array.trace": [[168, null]], "dpnp.dpnp_array.dpnp_array.transpose": [[169, null]], "dpnp.dpnp_array.dpnp_array.usm_type": [[170, null]], "dpnp.dpnp_array.dpnp_array.var": [[171, null]], "dpnp.dsplit": [[172, null]], "dpnp.dstack": [[173, null]], "dpnp.dtype": [[174, null]], "dpnp.dtype.alignment": [[175, null]], "dpnp.dtype.base": [[176, null]], "dpnp.dtype.byteorder": [[177, null]], "dpnp.dtype.char": [[178, null]], "dpnp.dtype.descr": [[179, null]], "dpnp.dtype.fields": [[180, null]], "dpnp.dtype.flags": [[181, null]], "dpnp.dtype.hasobject": [[182, null]], "dpnp.dtype.isalignedstruct": [[183, null]], "dpnp.dtype.isbuiltin": [[184, null]], "dpnp.dtype.isnative": [[185, null]], "dpnp.dtype.itemsize": [[186, null]], "dpnp.dtype.kind": [[187, null]], "dpnp.dtype.metadata": [[188, null]], "dpnp.dtype.name": [[189, null]], "dpnp.dtype.names": [[190, null]], "dpnp.dtype.ndim": [[191, null]], "dpnp.dtype.newbyteorder": [[192, null]], "dpnp.dtype.num": [[193, null]], "dpnp.dtype.shape": [[194, null]], "dpnp.dtype.str": [[195, null]], "dpnp.dtype.subdtype": [[196, null]], "dpnp.dtype.type": [[197, null]], "dpnp.ediff1d": [[198, null]], "dpnp.einsum": [[199, null]], "dpnp.einsum_path": [[200, null]], "dpnp.empty": [[201, null]], "dpnp.empty_like": [[202, null]], "dpnp.equal": [[203, null]], "dpnp.erf": [[204, null]], "dpnp.exp": [[205, null]], "dpnp.exp2": [[206, null]], "dpnp.expand_dims": [[207, null]], "dpnp.expm1": [[208, null]], "dpnp.extract": [[209, null]], "dpnp.eye": [[210, null]], "dpnp.fabs": [[211, null]], "dpnp.fft.fft": [[212, null]], "dpnp.fft.fft2": [[213, null]], "dpnp.fft.fftfreq": [[214, null]], "dpnp.fft.fftn": [[215, null]], "dpnp.fft.fftshift": [[216, null]], "dpnp.fft.hfft": [[217, null]], "dpnp.fft.ifft": [[218, null]], "dpnp.fft.ifft2": [[219, null]], "dpnp.fft.ifftn": [[220, null]], "dpnp.fft.ifftshift": [[221, null]], "dpnp.fft.ihfft": [[222, null]], "dpnp.fft.irfft": [[223, null]], "dpnp.fft.irfft2": [[224, null]], "dpnp.fft.irfftn": [[225, null]], "dpnp.fft.rfft": [[226, null]], "dpnp.fft.rfft2": [[227, null]], "dpnp.fft.rfftfreq": [[228, null]], "dpnp.fft.rfftn": [[229, null]], "dpnp.fill_diagonal": [[230, null]], "dpnp.finfo": [[231, null]], "dpnp.fix": [[232, null]], "dpnp.flatiter": [[233, null]], "dpnp.flatnonzero": [[234, null]], "dpnp.flip": [[235, null]], "dpnp.fliplr": [[236, null]], "dpnp.flipud": [[237, null]], "dpnp.float_power": [[238, null]], "dpnp.floor": [[239, null]], "dpnp.floor_divide": [[240, null]], "dpnp.fmax": [[241, null]], "dpnp.fmin": [[242, null]], "dpnp.fmod": [[243, null]], "dpnp.from_dlpack": [[244, null]], "dpnp.frombuffer": [[245, null]], "dpnp.fromfile": [[246, null]], "dpnp.fromfunction": [[247, null]], "dpnp.fromiter": [[248, null]], "dpnp.fromstring": [[249, null]], "dpnp.full": [[250, null]], "dpnp.full_like": [[251, null]], "dpnp.gcd": [[252, null]], "dpnp.geomspace": [[253, null]], "dpnp.get_include": [[254, null]], "dpnp.gradient": [[255, null]], "dpnp.greater": [[256, null]], "dpnp.greater_equal": [[257, null]], "dpnp.heaviside": [[258, null]], "dpnp.histogram": [[259, null]], "dpnp.histogram_bin_edges": [[260, null]], "dpnp.hsplit": [[261, null]], "dpnp.hstack": [[262, null]], "dpnp.hypot": [[263, null]], "dpnp.i0": [[264, null]], "dpnp.identity": [[265, null]], "dpnp.iinfo": [[266, null]], "dpnp.imag": [[267, null]], "dpnp.indices": [[268, null]], "dpnp.inner": [[269, null]], "dpnp.insert": [[270, null]], "dpnp.invert": [[271, null]], "dpnp.isclose": [[272, null]], "dpnp.iscomplex": [[273, null]], "dpnp.iscomplexobj": [[274, null]], "dpnp.isfinite": [[275, null]], "dpnp.isfortran": [[276, null]], "dpnp.isinf": [[277, null]], "dpnp.isnan": [[278, null]], "dpnp.isneginf": [[279, null]], "dpnp.isposinf": [[280, null]], "dpnp.isreal": [[281, null]], "dpnp.isrealobj": [[282, null]], "dpnp.isscalar": [[283, null]], "dpnp.issubdtype": [[284, null]], "dpnp.ix_": [[285, null]], "dpnp.kron": [[286, null]], "dpnp.lcm": [[287, null]], "dpnp.ldexp": [[288, null]], "dpnp.left_shift": [[289, null]], "dpnp.less": [[290, null]], "dpnp.less_equal": [[291, null]], "dpnp.linalg.cholesky": [[292, null]], "dpnp.linalg.cond": [[293, null]], "dpnp.linalg.cross": [[294, null]], "dpnp.linalg.det": [[295, null]], "dpnp.linalg.diagonal": [[296, null]], "dpnp.linalg.eig": [[297, null]], "dpnp.linalg.eigh": [[298, null]], "dpnp.linalg.eigvals": [[299, null]], "dpnp.linalg.eigvalsh": [[300, null]], "dpnp.linalg.inv": [[301, null]], "dpnp.linalg.lstsq": [[302, null]], "dpnp.linalg.matmul": [[303, null]], "dpnp.linalg.matrix_norm": [[304, null]], "dpnp.linalg.matrix_power": [[305, null]], "dpnp.linalg.matrix_rank": [[306, null]], "dpnp.linalg.multi_dot": [[307, null]], "dpnp.linalg.norm": [[308, null]], "dpnp.linalg.outer": [[309, null]], "dpnp.linalg.pinv": [[310, null]], "dpnp.linalg.qr": [[311, null]], "dpnp.linalg.slogdet": [[312, null]], "dpnp.linalg.solve": [[313, null]], "dpnp.linalg.svd": [[314, null]], "dpnp.linalg.svdvals": [[315, null]], "dpnp.linalg.tensordot": [[316, null]], "dpnp.linalg.tensorinv": [[317, null]], "dpnp.linalg.tensorsolve": [[318, null]], "dpnp.linalg.trace": [[319, null]], "dpnp.linalg.vecdot": [[320, null]], "dpnp.linalg.vector_norm": [[321, null]], "dpnp.linspace": [[322, null]], "dpnp.loadtxt": [[323, null]], "dpnp.log": [[324, null]], "dpnp.log10": [[325, null]], "dpnp.log1p": [[326, null]], "dpnp.log2": [[327, null]], "dpnp.logaddexp": [[328, null]], "dpnp.logaddexp2": [[329, null]], "dpnp.logical_and": [[330, null]], "dpnp.logical_not": [[331, null]], "dpnp.logical_or": [[332, null]], "dpnp.logical_xor": [[333, null]], "dpnp.logspace": [[334, null]], "dpnp.logsumexp": [[335, null]], "dpnp.mask_indices": [[336, null]], "dpnp.matmul": [[337, null]], "dpnp.matrix_transpose": [[338, null]], "dpnp.max": [[339, null]], "dpnp.maximum": [[340, null]], "dpnp.mean": [[341, null]], "dpnp.median": [[342, null]], "dpnp.meshgrid": [[343, null]], "dpnp.mgrid": [[344, null]], "dpnp.min": [[345, null]], "dpnp.minimum": [[346, null]], "dpnp.mod": [[347, null]], "dpnp.modf": [[348, null]], "dpnp.moveaxis": [[349, null]], "dpnp.multiply": [[350, null]], "dpnp.nan_to_num": [[351, null]], "dpnp.nanargmax": [[352, null]], "dpnp.nanargmin": [[353, null]], "dpnp.nancumprod": [[354, null]], "dpnp.nancumsum": [[355, null]], "dpnp.nanmax": [[356, null]], "dpnp.nanmean": [[357, null]], "dpnp.nanmin": [[358, null]], "dpnp.nanprod": [[359, null]], "dpnp.nanstd": [[360, null]], "dpnp.nansum": [[361, null]], "dpnp.nanvar": [[362, null]], "dpnp.ndarray": [[363, null]], "dpnp.ndarray.T": [[364, null]], "dpnp.ndarray.__abs__": [[365, null]], "dpnp.ndarray.__add__": [[366, null]], "dpnp.ndarray.__and__": [[367, null]], "dpnp.ndarray.__bool__": [[368, null]], "dpnp.ndarray.__complex__": [[369, null]], "dpnp.ndarray.__copy__": [[370, null]], "dpnp.ndarray.__eq__": [[371, null]], "dpnp.ndarray.__float__": [[372, null]], "dpnp.ndarray.__floordiv__": [[373, null]], "dpnp.ndarray.__ge__": [[374, null]], "dpnp.ndarray.__getitem__": [[375, null]], "dpnp.ndarray.__gt__": [[376, null]], "dpnp.ndarray.__iadd__": [[377, null]], "dpnp.ndarray.__iand__": [[378, null]], "dpnp.ndarray.__ifloordiv__": [[379, null]], "dpnp.ndarray.__ilshift__": [[380, null]], "dpnp.ndarray.__imatmul__": [[381, null]], "dpnp.ndarray.__imod__": [[382, null]], "dpnp.ndarray.__imul__": [[383, null]], "dpnp.ndarray.__int__": [[384, null]], "dpnp.ndarray.__invert__": [[385, null]], "dpnp.ndarray.__ior__": [[386, null]], "dpnp.ndarray.__ipow__": [[387, null]], "dpnp.ndarray.__irshift__": [[388, null]], "dpnp.ndarray.__isub__": [[389, null]], "dpnp.ndarray.__itruediv__": [[390, null]], "dpnp.ndarray.__ixor__": [[391, null]], "dpnp.ndarray.__le__": [[392, null]], "dpnp.ndarray.__len__": [[393, null]], "dpnp.ndarray.__lshift__": [[394, null]], "dpnp.ndarray.__lt__": [[395, null]], "dpnp.ndarray.__matmul__": [[396, null]], "dpnp.ndarray.__mod__": [[397, null]], "dpnp.ndarray.__mul__": [[398, null]], "dpnp.ndarray.__ne__": [[399, null]], "dpnp.ndarray.__neg__": [[400, null]], "dpnp.ndarray.__new__": [[401, null]], "dpnp.ndarray.__or__": [[402, null]], "dpnp.ndarray.__pos__": [[403, null]], "dpnp.ndarray.__pow__": [[404, null]], "dpnp.ndarray.__radd__": [[405, null]], "dpnp.ndarray.__rand__": [[406, null]], "dpnp.ndarray.__repr__": [[407, null]], "dpnp.ndarray.__rfloordiv__": [[408, null]], "dpnp.ndarray.__rlshift__": [[409, null]], "dpnp.ndarray.__rmatmul__": [[410, null]], "dpnp.ndarray.__rmod__": [[411, null]], "dpnp.ndarray.__rmul__": [[412, null]], "dpnp.ndarray.__ror__": [[413, null]], "dpnp.ndarray.__rpow__": [[414, null]], "dpnp.ndarray.__rrshift__": [[415, null]], "dpnp.ndarray.__rshift__": [[416, null]], "dpnp.ndarray.__rsub__": [[417, null]], "dpnp.ndarray.__rtruediv__": [[418, null]], "dpnp.ndarray.__rxor__": [[419, null]], "dpnp.ndarray.__setitem__": [[420, null]], "dpnp.ndarray.__str__": [[421, null]], "dpnp.ndarray.__sub__": [[422, null]], "dpnp.ndarray.__truediv__": [[423, null]], "dpnp.ndarray.__xor__": [[424, null]], "dpnp.ndarray.all": [[425, null]], "dpnp.ndarray.any": [[426, null]], "dpnp.ndarray.argmax": [[427, null]], "dpnp.ndarray.argmin": [[428, null]], "dpnp.ndarray.argsort": [[429, null]], "dpnp.ndarray.asnumpy": [[430, null]], "dpnp.ndarray.astype": [[431, null]], "dpnp.ndarray.choose": [[432, null]], "dpnp.ndarray.clip": [[433, null]], "dpnp.ndarray.conj": [[434, null]], "dpnp.ndarray.conjugate": [[435, null]], "dpnp.ndarray.copy": [[436, null]], "dpnp.ndarray.cumprod": [[437, null]], "dpnp.ndarray.cumsum": [[438, null]], "dpnp.ndarray.device": [[439, null]], "dpnp.ndarray.diagonal": [[440, null]], "dpnp.ndarray.dot": [[441, null]], "dpnp.ndarray.dtype": [[442, null]], "dpnp.ndarray.fill": [[443, null]], "dpnp.ndarray.flags": [[444, null]], "dpnp.ndarray.flat": [[445, null]], "dpnp.ndarray.flatten": [[446, null]], "dpnp.ndarray.get_array": [[447, null]], "dpnp.ndarray.imag": [[448, null]], "dpnp.ndarray.item": [[449, null]], "dpnp.ndarray.itemsize": [[450, null]], "dpnp.ndarray.mT": [[451, null]], "dpnp.ndarray.max": [[452, null]], "dpnp.ndarray.mean": [[453, null]], "dpnp.ndarray.min": [[454, null]], "dpnp.ndarray.nbytes": [[455, null]], "dpnp.ndarray.ndim": [[456, null]], "dpnp.ndarray.nonzero": [[457, null]], "dpnp.ndarray.partition": [[458, null]], "dpnp.ndarray.prod": [[459, null]], "dpnp.ndarray.put": [[460, null]], "dpnp.ndarray.ravel": [[461, null]], "dpnp.ndarray.real": [[462, null]], "dpnp.ndarray.repeat": [[463, null]], "dpnp.ndarray.reshape": [[464, null]], "dpnp.ndarray.round": [[465, null]], "dpnp.ndarray.searchsorted": [[466, null]], "dpnp.ndarray.shape": [[467, null]], "dpnp.ndarray.size": [[468, null]], "dpnp.ndarray.sort": [[469, null]], "dpnp.ndarray.squeeze": [[470, null]], "dpnp.ndarray.std": [[471, null]], "dpnp.ndarray.strides": [[472, null]], "dpnp.ndarray.sum": [[473, null]], "dpnp.ndarray.swapaxes": [[474, null]], "dpnp.ndarray.sycl_context": [[475, null]], "dpnp.ndarray.sycl_device": [[476, null]], "dpnp.ndarray.sycl_queue": [[477, null]], "dpnp.ndarray.take": [[478, null]], "dpnp.ndarray.to_device": [[479, null]], "dpnp.ndarray.trace": [[480, null]], "dpnp.ndarray.transpose": [[481, null]], "dpnp.ndarray.usm_type": [[482, null]], "dpnp.ndarray.var": [[483, null]], "dpnp.ndim": [[484, null]], "dpnp.negative": [[485, null]], "dpnp.nextafter": [[486, null]], "dpnp.nonzero": [[487, null]], "dpnp.not_equal": [[488, null]], "dpnp.ogrid": [[489, null]], "dpnp.ones": [[490, null]], "dpnp.ones_like": [[491, null]], "dpnp.outer": [[492, null]], "dpnp.pad": [[493, null]], "dpnp.partition": [[494, null]], "dpnp.permute_dims": [[495, null]], "dpnp.place": [[496, null]], "dpnp.positive": [[497, null]], "dpnp.pow": [[498, null]], "dpnp.power": [[499, null]], "dpnp.prod": [[500, null]], "dpnp.proj": [[501, null]], "dpnp.ptp": [[502, null]], "dpnp.put": [[503, null]], "dpnp.put_along_axis": [[504, null]], "dpnp.putmask": [[505, null]], "dpnp.rad2deg": [[506, null]], "dpnp.radians": [[507, null]], "dpnp.random.RandomState": [[508, null]], "dpnp.random.RandomState.get_state": [[509, null]], "dpnp.random.RandomState.get_sycl_device": [[510, null]], "dpnp.random.RandomState.get_sycl_queue": [[511, null]], "dpnp.random.RandomState.normal": [[512, null]], "dpnp.random.RandomState.rand": [[513, null]], "dpnp.random.RandomState.randint": [[514, null]], "dpnp.random.RandomState.randn": [[515, null]], "dpnp.random.RandomState.random_sample": [[516, null]], "dpnp.random.RandomState.standard_normal": [[517, null]], "dpnp.random.RandomState.uniform": [[518, null]], "dpnp.random.beta": [[519, null]], "dpnp.random.binomial": [[520, null]], "dpnp.random.bytes": [[521, null]], "dpnp.random.chisquare": [[522, null]], "dpnp.random.choice": [[523, null]], "dpnp.random.dirichlet": [[524, null]], "dpnp.random.exponential": [[525, null]], "dpnp.random.f": [[526, null]], "dpnp.random.gamma": [[527, null]], "dpnp.random.geometric": [[528, null]], "dpnp.random.gumbel": [[529, null]], "dpnp.random.hypergeometric": [[530, null]], "dpnp.random.laplace": [[531, null]], "dpnp.random.logistic": [[532, null]], "dpnp.random.lognormal": [[533, null]], "dpnp.random.logseries": [[534, null]], "dpnp.random.multinomial": [[535, null]], "dpnp.random.multivariate_normal": [[536, null]], "dpnp.random.negative_binomial": [[537, null]], "dpnp.random.noncentral_chisquare": [[538, null]], "dpnp.random.noncentral_f": [[539, null]], "dpnp.random.normal": [[540, null]], "dpnp.random.pareto": [[541, null]], "dpnp.random.permutation": [[542, null]], "dpnp.random.poisson": [[543, null]], "dpnp.random.power": [[544, null]], "dpnp.random.rand": [[545, null]], "dpnp.random.randint": [[546, null]], "dpnp.random.randn": [[547, null]], "dpnp.random.random": [[548, null]], "dpnp.random.random_integers": [[549, null]], "dpnp.random.random_sample": [[550, null]], "dpnp.random.ranf": [[551, null]], "dpnp.random.rayleigh": [[552, null]], "dpnp.random.sample": [[553, null]], "dpnp.random.seed": [[554, null]], "dpnp.random.shuffle": [[555, null]], "dpnp.random.standard_cauchy": [[556, null]], "dpnp.random.standard_exponential": [[557, null]], "dpnp.random.standard_gamma": [[558, null]], "dpnp.random.standard_normal": [[559, null]], "dpnp.random.standard_t": [[560, null]], "dpnp.random.triangular": [[561, null]], "dpnp.random.uniform": [[562, null]], "dpnp.random.vonmises": [[563, null]], "dpnp.random.wald": [[564, null]], "dpnp.random.weibull": [[565, null]], "dpnp.random.zipf": [[566, null]], "dpnp.ravel": [[567, null]], "dpnp.ravel_multi_index": [[568, null]], "dpnp.real": [[569, null]], "dpnp.real_if_close": [[570, null]], "dpnp.reciprocal": [[571, null]], "dpnp.reduce_hypot": [[572, null]], "dpnp.remainder": [[573, null]], "dpnp.repeat": [[574, null]], "dpnp.require": [[575, null]], "dpnp.reshape": [[576, null]], "dpnp.resize": [[577, null]], "dpnp.result_type": [[578, null]], "dpnp.right_shift": [[579, null]], "dpnp.rint": [[580, null]], "dpnp.roll": [[581, null]], "dpnp.rollaxis": [[582, null]], "dpnp.rot90": [[583, null]], "dpnp.round": [[584, null]], "dpnp.row_stack": [[585, null]], "dpnp.rsqrt": [[586, null]], "dpnp.searchsorted": [[587, null]], "dpnp.select": [[588, null]], "dpnp.shape": [[589, null]], "dpnp.sign": [[590, null]], "dpnp.signbit": [[591, null]], "dpnp.sin": [[592, null]], "dpnp.sinc": [[593, null]], "dpnp.sinh": [[594, null]], "dpnp.size": [[595, null]], "dpnp.sort": [[596, null]], "dpnp.sort_complex": [[597, null]], "dpnp.spacing": [[598, null]], "dpnp.split": [[599, null]], "dpnp.sqrt": [[600, null]], "dpnp.square": [[601, null]], "dpnp.squeeze": [[602, null]], "dpnp.stack": [[603, null]], "dpnp.std": [[604, null]], "dpnp.subtract": [[605, null]], "dpnp.sum": [[606, null]], "dpnp.swapaxes": [[607, null]], "dpnp.take": [[608, null]], "dpnp.take_along_axis": [[609, null]], "dpnp.tan": [[610, null]], "dpnp.tanh": [[611, null]], "dpnp.tensordot": [[612, null]], "dpnp.tile": [[613, null]], "dpnp.trace": [[614, null]], "dpnp.transpose": [[615, null]], "dpnp.trapezoid": [[616, null]], "dpnp.tri": [[617, null]], "dpnp.tril": [[618, null]], "dpnp.tril_indices": [[619, null]], "dpnp.tril_indices_from": [[620, null]], "dpnp.trim_zeros": [[621, null]], "dpnp.triu": [[622, null]], "dpnp.triu_indices": [[623, null]], "dpnp.triu_indices_from": [[624, null]], "dpnp.true_divide": [[625, null]], "dpnp.trunc": [[626, null]], "dpnp.unique": [[627, null]], "dpnp.unravel_index": [[628, null]], "dpnp.unstack": [[629, null]], "dpnp.unwrap": [[630, null]], "dpnp.vander": [[631, null]], "dpnp.var": [[632, null]], "dpnp.vdot": [[633, null]], "dpnp.vecdot": [[634, null]], "dpnp.vsplit": [[635, null]], "dpnp.vstack": [[636, null]], "dpnp.where": [[637, null]], "dpnp.zeros": [[638, null]], "dpnp.zeros_like": [[639, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.apply_over_axes", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.cumulative_prod", "reference/generated/dpnp.cumulative_sum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dpnp_array.dpnp_array.T", "reference/generated/dpnp.dpnp_array.dpnp_array.all", "reference/generated/dpnp.dpnp_array.dpnp_array.any", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy", "reference/generated/dpnp.dpnp_array.dpnp_array.astype", "reference/generated/dpnp.dpnp_array.dpnp_array.choose", "reference/generated/dpnp.dpnp_array.dpnp_array.clip", "reference/generated/dpnp.dpnp_array.dpnp_array.conj", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate", "reference/generated/dpnp.dpnp_array.dpnp_array.copy", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum", "reference/generated/dpnp.dpnp_array.dpnp_array.device", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal", "reference/generated/dpnp.dpnp_array.dpnp_array.dot", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype", "reference/generated/dpnp.dpnp_array.dpnp_array.fill", "reference/generated/dpnp.dpnp_array.dpnp_array.flags", "reference/generated/dpnp.dpnp_array.dpnp_array.flat", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array", "reference/generated/dpnp.dpnp_array.dpnp_array.imag", "reference/generated/dpnp.dpnp_array.dpnp_array.item", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize", "reference/generated/dpnp.dpnp_array.dpnp_array.mT", "reference/generated/dpnp.dpnp_array.dpnp_array.max", "reference/generated/dpnp.dpnp_array.dpnp_array.mean", "reference/generated/dpnp.dpnp_array.dpnp_array.min", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero", "reference/generated/dpnp.dpnp_array.dpnp_array.partition", "reference/generated/dpnp.dpnp_array.dpnp_array.prod", "reference/generated/dpnp.dpnp_array.dpnp_array.put", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel", "reference/generated/dpnp.dpnp_array.dpnp_array.real", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape", "reference/generated/dpnp.dpnp_array.dpnp_array.round", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted", "reference/generated/dpnp.dpnp_array.dpnp_array.shape", "reference/generated/dpnp.dpnp_array.dpnp_array.size", "reference/generated/dpnp.dpnp_array.dpnp_array.sort", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze", "reference/generated/dpnp.dpnp_array.dpnp_array.std", "reference/generated/dpnp.dpnp_array.dpnp_array.strides", "reference/generated/dpnp.dpnp_array.dpnp_array.sum", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue", "reference/generated/dpnp.dpnp_array.dpnp_array.take", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device", "reference/generated/dpnp.dpnp_array.dpnp_array.trace", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type", "reference/generated/dpnp.dpnp_array.dpnp_array.var", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.dtype.alignment", "reference/generated/dpnp.dtype.base", "reference/generated/dpnp.dtype.byteorder", "reference/generated/dpnp.dtype.char", "reference/generated/dpnp.dtype.descr", "reference/generated/dpnp.dtype.fields", "reference/generated/dpnp.dtype.flags", "reference/generated/dpnp.dtype.hasobject", "reference/generated/dpnp.dtype.isalignedstruct", "reference/generated/dpnp.dtype.isbuiltin", "reference/generated/dpnp.dtype.isnative", "reference/generated/dpnp.dtype.itemsize", "reference/generated/dpnp.dtype.kind", "reference/generated/dpnp.dtype.metadata", "reference/generated/dpnp.dtype.name", "reference/generated/dpnp.dtype.names", "reference/generated/dpnp.dtype.ndim", "reference/generated/dpnp.dtype.newbyteorder", "reference/generated/dpnp.dtype.num", "reference/generated/dpnp.dtype.shape", "reference/generated/dpnp.dtype.str", "reference/generated/dpnp.dtype.subdtype", "reference/generated/dpnp.dtype.type", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.i0", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.asnumpy", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.device", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dot", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.get_array", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.sycl_context", "reference/generated/dpnp.ndarray.sycl_device", "reference/generated/dpnp.ndarray.sycl_queue", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.to_device", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.usm_type", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.RandomState.get_state", "reference/generated/dpnp.random.RandomState.get_sycl_device", "reference/generated/dpnp.random.RandomState.get_sycl_queue", "reference/generated/dpnp.random.RandomState.normal", "reference/generated/dpnp.random.RandomState.rand", "reference/generated/dpnp.random.RandomState.randint", "reference/generated/dpnp.random.RandomState.randn", "reference/generated/dpnp.random.RandomState.random_sample", "reference/generated/dpnp.random.RandomState.standard_normal", "reference/generated/dpnp.random.RandomState.uniform", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.apply_over_axes.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.cumulative_prod.rst", "reference/generated/dpnp.cumulative_sum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.T.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.all.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.any.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.astype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.choose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.clip.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conj.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.copy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.fill.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flags.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.imag.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.item.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mT.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.max.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mean.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.min.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.partition.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.prod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.put.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.real.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.round.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.shape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.size.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.std.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.strides.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.take.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.trace.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.var.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.dtype.alignment.rst", "reference/generated/dpnp.dtype.base.rst", "reference/generated/dpnp.dtype.byteorder.rst", "reference/generated/dpnp.dtype.char.rst", "reference/generated/dpnp.dtype.descr.rst", "reference/generated/dpnp.dtype.fields.rst", "reference/generated/dpnp.dtype.flags.rst", "reference/generated/dpnp.dtype.hasobject.rst", "reference/generated/dpnp.dtype.isalignedstruct.rst", "reference/generated/dpnp.dtype.isbuiltin.rst", "reference/generated/dpnp.dtype.isnative.rst", "reference/generated/dpnp.dtype.itemsize.rst", "reference/generated/dpnp.dtype.kind.rst", "reference/generated/dpnp.dtype.metadata.rst", "reference/generated/dpnp.dtype.name.rst", "reference/generated/dpnp.dtype.names.rst", "reference/generated/dpnp.dtype.ndim.rst", "reference/generated/dpnp.dtype.newbyteorder.rst", "reference/generated/dpnp.dtype.num.rst", "reference/generated/dpnp.dtype.shape.rst", "reference/generated/dpnp.dtype.str.rst", "reference/generated/dpnp.dtype.subdtype.rst", "reference/generated/dpnp.dtype.type.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.i0.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.asnumpy.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.device.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dot.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.get_array.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.sycl_context.rst", "reference/generated/dpnp.ndarray.sycl_device.rst", "reference/generated/dpnp.ndarray.sycl_queue.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.to_device.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.usm_type.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.RandomState.get_state.rst", "reference/generated/dpnp.random.RandomState.get_sycl_device.rst", "reference/generated/dpnp.random.RandomState.get_sycl_queue.rst", "reference/generated/dpnp.random.RandomState.normal.rst", "reference/generated/dpnp.random.RandomState.rand.rst", "reference/generated/dpnp.random.RandomState.randint.rst", "reference/generated/dpnp.random.RandomState.randn.rst", "reference/generated/dpnp.random.RandomState.random_sample.rst", "reference/generated/dpnp.random.RandomState.standard_normal.rst", "reference/generated/dpnp.random.RandomState.uniform.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[365, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[366, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[367, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[368, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[369, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[370, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.ndarray method)": [[371, "dpnp.ndarray.__eq__", false]], "__float__() (dpnp.ndarray method)": [[372, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[373, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.ndarray method)": [[374, "dpnp.ndarray.__ge__", false]], "__getitem__() (dpnp.ndarray method)": [[375, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.ndarray method)": [[376, "dpnp.ndarray.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[377, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[378, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[379, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[380, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[381, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[382, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[383, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[384, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[385, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[386, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[387, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[388, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[389, "dpnp.ndarray.__isub__", false]], "__itruediv__() (dpnp.ndarray method)": [[390, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[391, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.ndarray method)": [[392, "dpnp.ndarray.__le__", false]], "__len__() (dpnp.ndarray method)": [[393, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[394, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.ndarray method)": [[395, "dpnp.ndarray.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[396, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[397, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[398, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.ndarray method)": [[399, "dpnp.ndarray.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[400, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[401, "dpnp.ndarray.__new__", false]], "__or__() (dpnp.ndarray method)": [[402, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[403, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[404, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[405, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[406, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[407, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[408, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[409, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[410, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[411, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[412, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[413, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[414, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[415, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[416, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[417, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[418, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[419, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.ndarray method)": [[420, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[421, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[422, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[423, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[424, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[12, "dpnp.abs", false]], "absolute() (in module dpnp)": [[13, "dpnp.absolute", false]], "acos() (in module dpnp)": [[14, "dpnp.acos", false]], "acosh() (in module dpnp)": [[15, "dpnp.acosh", false]], "add() (in module dpnp)": [[16, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[175, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[113, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[425, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[17, "dpnp.all", false]], "allclose() (in module dpnp)": [[18, "dpnp.allclose", false]], "amax() (in module dpnp)": [[19, "dpnp.amax", false]], "amin() (in module dpnp)": [[20, "dpnp.amin", false]], "angle() (in module dpnp)": [[21, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[114, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[426, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[22, "dpnp.any", false]], "append() (in module dpnp)": [[23, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[24, "dpnp.apply_along_axis", false]], "apply_over_axes() (in module dpnp)": [[25, "dpnp.apply_over_axes", false]], "arange() (in module dpnp)": [[26, "dpnp.arange", false]], "arccos() (in module dpnp)": [[27, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[28, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[29, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[30, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[31, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[32, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[33, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[115, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[427, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[34, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[116, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[428, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[35, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[117, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[429, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[36, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[37, "dpnp.argwhere", false]], "around() (in module dpnp)": [[38, "dpnp.around", false]], "array() (in module dpnp)": [[39, "dpnp.array", false]], "array_equal() (in module dpnp)": [[40, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[41, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[42, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[43, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[44, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[45, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[46, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[47, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[48, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[49, "dpnp.asin", false]], "asinh() (in module dpnp)": [[50, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[118, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (dpnp.ndarray method)": [[430, "dpnp.ndarray.asnumpy", false]], "asnumpy() (in module dpnp)": [[51, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[119, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[431, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[52, "dpnp.astype", false]], "atan() (in module dpnp)": [[53, "dpnp.atan", false]], "atan2() (in module dpnp)": [[54, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[55, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[56, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[57, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[58, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[59, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[176, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[519, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[60, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[61, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[520, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[62, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[63, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[64, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[65, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[66, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[67, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[68, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[69, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[70, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[71, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[72, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[177, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[521, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[73, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[74, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[75, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[178, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[522, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[523, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[292, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[120, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[432, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[76, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[121, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[433, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[77, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[78, "dpnp.column_stack", false]], "concat() (in module dpnp)": [[79, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[80, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[293, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[122, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[434, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[81, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[123, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[435, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[82, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[83, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[124, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[436, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[84, "dpnp.copy", false]], "copysign() (in module dpnp)": [[85, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[86, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[87, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[88, "dpnp.correlate", false]], "cos() (in module dpnp)": [[89, "dpnp.cos", false]], "cosh() (in module dpnp)": [[90, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[91, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[92, "dpnp.cov", false]], "cross() (in module dpnp)": [[93, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[294, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[94, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[125, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[437, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[95, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[126, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[438, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[96, "dpnp.cumsum", false]], "cumulative_prod() (in module dpnp)": [[97, "dpnp.cumulative_prod", false]], "cumulative_sum() (in module dpnp)": [[98, "dpnp.cumulative_sum", false]], "deg2rad() (in module dpnp)": [[99, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[100, "dpnp.degrees", false]], "delete() (in module dpnp)": [[101, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[179, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[295, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array property)": [[127, "dpnp.dpnp_array.dpnp_array.device", false]], "device (dpnp.ndarray property)": [[439, "dpnp.ndarray.device", false]], "diag() (in module dpnp)": [[102, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[103, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[104, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[105, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[128, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[440, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[106, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[296, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[107, "dpnp.diff", false]], "digitize() (in module dpnp)": [[108, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[524, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[109, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[129, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (dpnp.ndarray method)": [[441, "dpnp.ndarray.dot", false]], "dot() (in module dpnp)": [[110, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[111, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[172, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[173, "dpnp.dstack", false]], "dtype (class in dpnp)": [[174, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array property)": [[130, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[442, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[198, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[297, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[298, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[299, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[300, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[199, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[200, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[201, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[202, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[203, "dpnp.equal", false]], "erf() (in module dpnp)": [[204, "dpnp.erf", false]], "exp() (in module dpnp)": [[205, "dpnp.exp", false]], "exp2() (in module dpnp)": [[206, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[207, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[208, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[525, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[209, "dpnp.extract", false]], "eye() (in module dpnp)": [[210, "dpnp.eye", false]], "f() (in module dpnp.random)": [[526, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[211, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[212, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[213, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[214, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[215, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[216, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[180, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[131, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[443, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[230, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[231, "dpnp.finfo", false]], "fix() (in module dpnp)": [[232, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array property)": [[132, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[181, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[444, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array property)": [[133, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[445, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[233, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[234, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[134, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[446, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[235, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[236, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[237, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[238, "dpnp.float_power", false]], "floor() (in module dpnp)": [[239, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[240, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[241, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[242, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[243, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[244, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[245, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[246, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[247, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[248, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[249, "dpnp.fromstring", false]], "full() (in module dpnp)": [[250, "dpnp.full", false]], "full_like() (in module dpnp)": [[251, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[527, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[252, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[528, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[253, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[135, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_array() (dpnp.ndarray method)": [[447, "dpnp.ndarray.get_array", false]], "get_include() (in module dpnp)": [[254, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[509, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[510, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[511, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[255, "dpnp.gradient", false]], "greater() (in module dpnp)": [[256, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[257, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[529, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[182, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[258, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[217, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[259, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[260, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[261, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[262, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[530, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[263, "dpnp.hypot", false]], "i0() (in module dpnp)": [[264, "dpnp.i0", false]], "identity() (in module dpnp)": [[265, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[218, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[219, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[220, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[221, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[222, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[266, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array property)": [[136, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[448, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[267, "dpnp.imag", false]], "indices() (in module dpnp)": [[268, "dpnp.indices", false]], "inner() (in module dpnp)": [[269, "dpnp.inner", false]], "insert() (in module dpnp)": [[270, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[301, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[271, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[223, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[224, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[225, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[183, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[184, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[272, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[273, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[274, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[275, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[276, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[277, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[278, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[185, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[279, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[280, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[281, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[282, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[283, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[284, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[137, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[449, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array property)": [[138, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[186, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[450, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[285, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[187, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[286, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[531, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[287, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[288, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[289, "dpnp.left_shift", false]], "less() (in module dpnp)": [[290, "dpnp.less", false]], "less_equal() (in module dpnp)": [[291, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[322, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[323, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[324, "dpnp.log", false]], "log10() (in module dpnp)": [[325, "dpnp.log10", false]], "log1p() (in module dpnp)": [[326, "dpnp.log1p", false]], "log2() (in module dpnp)": [[327, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[328, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[329, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[330, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[331, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[332, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[333, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[532, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[533, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[534, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[334, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[335, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[302, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[336, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[337, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[303, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[304, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[305, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[306, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[338, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[140, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[452, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[339, "dpnp.max", false]], "maximum() (in module dpnp)": [[340, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[141, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[453, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[341, "dpnp.mean", false]], "median() (in module dpnp)": [[342, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[343, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[188, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[344, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[142, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[454, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[345, "dpnp.min", false]], "minimum() (in module dpnp)": [[346, "dpnp.minimum", false]], "mod() (in module dpnp)": [[347, "dpnp.mod", false]], "modf() (in module dpnp)": [[348, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[349, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array property)": [[139, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[451, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[307, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[535, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[350, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[536, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[189, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[190, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[351, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[352, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[353, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[354, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[355, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[356, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[357, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[358, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[359, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[360, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[361, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[362, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array property)": [[143, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[455, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[363, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array property)": [[144, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[191, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[456, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[484, "dpnp.ndim", false]], "negative() (in module dpnp)": [[485, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[537, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[192, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[486, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[538, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[539, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[145, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[457, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[487, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[308, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[512, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[540, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[488, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[193, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[489, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[490, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[491, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[492, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[309, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[493, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[541, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[146, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[458, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[494, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[542, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[495, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[310, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[496, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[543, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[497, "dpnp.positive", false]], "pow() (in module dpnp)": [[498, "dpnp.pow", false]], "power() (in module dpnp)": [[499, "dpnp.power", false]], "power() (in module dpnp.random)": [[544, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[147, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[459, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[500, "dpnp.prod", false]], "proj() (in module dpnp)": [[501, "dpnp.proj", false]], "ptp() (in module dpnp)": [[502, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[148, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[460, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[503, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[504, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[505, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[311, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[506, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[507, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[513, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[545, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[514, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[546, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[515, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[547, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[548, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[549, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[516, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[550, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[508, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[551, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[149, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[461, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[567, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[568, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[552, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array property)": [[150, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[462, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[569, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[570, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[571, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[572, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[573, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[151, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[463, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[574, "dpnp.repeat", false]], "require() (in module dpnp)": [[575, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[152, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[464, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[576, "dpnp.reshape", false]], "resize() (in module dpnp)": [[577, "dpnp.resize", false]], "result_type() (in module dpnp)": [[578, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[226, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[227, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[228, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[229, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[579, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[580, "dpnp.rint", false]], "roll() (in module dpnp)": [[581, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[582, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[583, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[153, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[465, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[584, "dpnp.round", false]], "row_stack() (in module dpnp)": [[585, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[586, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[553, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[154, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[466, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[587, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[554, "dpnp.random.seed", false]], "select() (in module dpnp)": [[588, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array property)": [[155, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[194, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[467, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[589, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[555, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[590, "dpnp.sign", false]], "signbit() (in module dpnp)": [[591, "dpnp.signbit", false]], "sin() (in module dpnp)": [[592, "dpnp.sin", false]], "sinc() (in module dpnp)": [[593, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[594, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array property)": [[156, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[468, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[595, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[312, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[313, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[157, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[469, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[596, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[597, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[598, "dpnp.spacing", false]], "split() (in module dpnp)": [[599, "dpnp.split", false]], "sqrt() (in module dpnp)": [[600, "dpnp.sqrt", false]], "square() (in module dpnp)": [[601, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[158, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[470, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[602, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[603, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[556, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[557, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[558, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[517, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[559, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[560, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[159, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[471, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[604, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[195, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array property)": [[160, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[472, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[196, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[605, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[161, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[473, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[606, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[314, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[315, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[162, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[474, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[607, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array property)": [[163, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_context (dpnp.ndarray property)": [[475, "dpnp.ndarray.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array property)": [[164, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_device (dpnp.ndarray property)": [[476, "dpnp.ndarray.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array property)": [[165, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "sycl_queue (dpnp.ndarray property)": [[477, "dpnp.ndarray.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array property)": [[112, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[364, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[166, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[478, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[608, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[609, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[610, "dpnp.tan", false]], "tanh() (in module dpnp)": [[611, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[612, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[316, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[317, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[318, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[613, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[167, "dpnp.dpnp_array.dpnp_array.to_device", false]], "to_device() (dpnp.ndarray method)": [[479, "dpnp.ndarray.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[168, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[480, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[614, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[319, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[169, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[481, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[615, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[616, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[617, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[561, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[618, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[619, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[620, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[621, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[622, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[623, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[624, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[625, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[626, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[197, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[518, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[562, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[627, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[628, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[629, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[630, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array property)": [[170, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "usm_type (dpnp.ndarray property)": [[482, "dpnp.ndarray.usm_type", false]], "vander() (in module dpnp)": [[631, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[171, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[483, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[632, "dpnp.var", false]], "vdot() (in module dpnp)": [[633, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[634, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[320, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[321, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[563, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[635, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[636, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[564, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[565, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[637, "dpnp.where", false]], "zeros() (in module dpnp)": [[638, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[639, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[566, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[12, 1, 1, "", "abs"], [13, 1, 1, "", "absolute"], [14, 1, 1, "", "acos"], [15, 1, 1, "", "acosh"], [16, 1, 1, "", "add"], [17, 1, 1, "", "all"], [18, 1, 1, "", "allclose"], [19, 1, 1, "", "amax"], [20, 1, 1, "", "amin"], [21, 1, 1, "", "angle"], [22, 1, 1, "", "any"], [23, 1, 1, "", "append"], [24, 1, 1, "", "apply_along_axis"], [25, 1, 1, "", "apply_over_axes"], [26, 1, 1, "", "arange"], [27, 1, 1, "", "arccos"], [28, 1, 1, "", "arccosh"], [29, 1, 1, "", "arcsin"], [30, 1, 1, "", "arcsinh"], [31, 1, 1, "", "arctan"], [32, 1, 1, "", "arctan2"], [33, 1, 1, "", "arctanh"], [34, 1, 1, "", "argmax"], [35, 1, 1, "", "argmin"], [36, 1, 1, "", "argsort"], [37, 1, 1, "", "argwhere"], [38, 1, 1, "", "around"], [39, 1, 1, "", "array"], [40, 1, 1, "", "array_equal"], [41, 1, 1, "", "array_equiv"], [42, 1, 1, "", "array_split"], [43, 1, 1, "", "asanyarray"], [44, 1, 1, "", "asarray"], [45, 1, 1, "", "asarray_chkfinite"], [46, 1, 1, "", "ascontiguousarray"], [47, 1, 1, "", "asfarray"], [48, 1, 1, "", "asfortranarray"], [49, 1, 1, "", "asin"], [50, 1, 1, "", "asinh"], [51, 1, 1, "", "asnumpy"], [52, 1, 1, "", "astype"], [53, 1, 1, "", "atan"], [54, 1, 1, "", "atan2"], [55, 1, 1, "", "atanh"], [56, 1, 1, "", "atleast_1d"], [57, 1, 1, "", "atleast_2d"], [58, 1, 1, "", "atleast_3d"], [59, 1, 1, "", "average"], [60, 1, 1, "", "binary_repr"], [61, 1, 1, "", "bincount"], [62, 1, 1, "", "bitwise_and"], [63, 1, 1, "", "bitwise_invert"], [64, 1, 1, "", "bitwise_left_shift"], [65, 1, 1, "", "bitwise_not"], [66, 1, 1, "", "bitwise_or"], [67, 1, 1, "", "bitwise_right_shift"], [68, 1, 1, "", "bitwise_xor"], [69, 1, 1, "", "broadcast_arrays"], [70, 1, 1, "", "broadcast_shapes"], [71, 1, 1, "", "broadcast_to"], [72, 1, 1, "", "byte_bounds"], [73, 1, 1, "", "can_cast"], [74, 1, 1, "", "cbrt"], [75, 1, 1, "", "ceil"], [76, 1, 1, "", "choose"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "column_stack"], [79, 1, 1, "", "concat"], [80, 1, 1, "", "concatenate"], [81, 1, 1, "", "conj"], [82, 1, 1, "", "conjugate"], [83, 1, 1, "", "convolve"], [84, 1, 1, "", "copy"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "copyto"], [87, 1, 1, "", "corrcoef"], [88, 1, 1, "", "correlate"], [89, 1, 1, "", "cos"], [90, 1, 1, "", "cosh"], [91, 1, 1, "", "count_nonzero"], [92, 1, 1, "", "cov"], [93, 1, 1, "", "cross"], [94, 1, 1, "", "cumlogsumexp"], [95, 1, 1, "", "cumprod"], [96, 1, 1, "", "cumsum"], [97, 1, 1, "", "cumulative_prod"], [98, 1, 1, "", "cumulative_sum"], [99, 1, 1, "", "deg2rad"], [100, 1, 1, "", "degrees"], [101, 1, 1, "", "delete"], [102, 1, 1, "", "diag"], [103, 1, 1, "", "diag_indices"], [104, 1, 1, "", "diag_indices_from"], [105, 1, 1, "", "diagflat"], [106, 1, 1, "", "diagonal"], [107, 1, 1, "", "diff"], [108, 1, 1, "", "digitize"], [109, 1, 1, "", "divide"], [110, 1, 1, "", "dot"], [172, 1, 1, "", "dsplit"], [173, 1, 1, "", "dstack"], [174, 2, 1, "", "dtype"], [198, 1, 1, "", "ediff1d"], [199, 1, 1, "", "einsum"], [200, 1, 1, "", "einsum_path"], [201, 1, 1, "", "empty"], [202, 1, 1, "", "empty_like"], [203, 1, 1, "", "equal"], [204, 1, 1, "", "erf"], [205, 1, 1, "", "exp"], [206, 1, 1, "", "exp2"], [207, 1, 1, "", "expand_dims"], [208, 1, 1, "", "expm1"], [209, 1, 1, "", "extract"], [210, 1, 1, "", "eye"], [211, 1, 1, "", "fabs"], [230, 1, 1, "", "fill_diagonal"], [231, 1, 1, "", "finfo"], [232, 1, 1, "", "fix"], [233, 2, 1, "", "flatiter"], [234, 1, 1, "", "flatnonzero"], [235, 1, 1, "", "flip"], [236, 1, 1, "", "fliplr"], [237, 1, 1, "", "flipud"], [238, 1, 1, "", "float_power"], [239, 1, 1, "", "floor"], [240, 1, 1, "", "floor_divide"], [241, 1, 1, "", "fmax"], [242, 1, 1, "", "fmin"], [243, 1, 1, "", "fmod"], [244, 1, 1, "", "from_dlpack"], [245, 1, 1, "", "frombuffer"], [246, 1, 1, "", "fromfile"], [247, 1, 1, "", "fromfunction"], [248, 1, 1, "", "fromiter"], [249, 1, 1, "", "fromstring"], [250, 1, 1, "", "full"], [251, 1, 1, "", "full_like"], [252, 1, 1, "", "gcd"], [253, 1, 1, "", "geomspace"], [254, 1, 1, "", "get_include"], [255, 1, 1, "", "gradient"], [256, 1, 1, "", "greater"], [257, 1, 1, "", "greater_equal"], [258, 1, 1, "", "heaviside"], [259, 1, 1, "", "histogram"], [260, 1, 1, "", "histogram_bin_edges"], [261, 1, 1, "", "hsplit"], [262, 1, 1, "", "hstack"], [263, 1, 1, "", "hypot"], [264, 1, 1, "", "i0"], [265, 1, 1, "", "identity"], [266, 1, 1, "", "iinfo"], [267, 1, 1, "", "imag"], [268, 1, 1, "", "indices"], [269, 1, 1, "", "inner"], [270, 1, 1, "", "insert"], [271, 1, 1, "", "invert"], [272, 1, 1, "", "isclose"], [273, 1, 1, "", "iscomplex"], [274, 1, 1, "", "iscomplexobj"], [275, 1, 1, "", "isfinite"], [276, 1, 1, "", "isfortran"], [277, 1, 1, "", "isinf"], [278, 1, 1, "", "isnan"], [279, 1, 1, "", "isneginf"], [280, 1, 1, "", "isposinf"], [281, 1, 1, "", "isreal"], [282, 1, 1, "", "isrealobj"], [283, 1, 1, "", "isscalar"], [284, 1, 1, "", "issubdtype"], [285, 1, 1, "", "ix_"], [286, 1, 1, "", "kron"], [287, 1, 1, "", "lcm"], [288, 1, 1, "", "ldexp"], [289, 1, 1, "", "left_shift"], [290, 1, 1, "", "less"], [291, 1, 1, "", "less_equal"], [322, 1, 1, "", "linspace"], [323, 1, 1, "", "loadtxt"], [324, 1, 1, "", "log"], [325, 1, 1, "", "log10"], [326, 1, 1, "", "log1p"], [327, 1, 1, "", "log2"], [328, 1, 1, "", "logaddexp"], [329, 1, 1, "", "logaddexp2"], [330, 1, 1, "", "logical_and"], [331, 1, 1, "", "logical_not"], [332, 1, 1, "", "logical_or"], [333, 1, 1, "", "logical_xor"], [334, 1, 1, "", "logspace"], [335, 1, 1, "", "logsumexp"], [336, 1, 1, "", "mask_indices"], [337, 1, 1, "", "matmul"], [338, 1, 1, "", "matrix_transpose"], [339, 1, 1, "", "max"], [340, 1, 1, "", "maximum"], [341, 1, 1, "", "mean"], [342, 1, 1, "", "median"], [343, 1, 1, "", "meshgrid"], [344, 6, 1, "", "mgrid"], [345, 1, 1, "", "min"], [346, 1, 1, "", "minimum"], [347, 1, 1, "", "mod"], [348, 1, 1, "", "modf"], [349, 1, 1, "", "moveaxis"], [350, 1, 1, "", "multiply"], [351, 1, 1, "", "nan_to_num"], [352, 1, 1, "", "nanargmax"], [353, 1, 1, "", "nanargmin"], [354, 1, 1, "", "nancumprod"], [355, 1, 1, "", "nancumsum"], [356, 1, 1, "", "nanmax"], [357, 1, 1, "", "nanmean"], [358, 1, 1, "", "nanmin"], [359, 1, 1, "", "nanprod"], [360, 1, 1, "", "nanstd"], [361, 1, 1, "", "nansum"], [362, 1, 1, "", "nanvar"], [363, 5, 1, "", "ndarray"], [484, 1, 1, "", "ndim"], [485, 1, 1, "", "negative"], [486, 1, 1, "", "nextafter"], [487, 1, 1, "", "nonzero"], [488, 1, 1, "", "not_equal"], [489, 6, 1, "", "ogrid"], [490, 1, 1, "", "ones"], [491, 1, 1, "", "ones_like"], [492, 1, 1, "", "outer"], [493, 1, 1, "", "pad"], [494, 1, 1, "", "partition"], [495, 1, 1, "", "permute_dims"], [496, 1, 1, "", "place"], [497, 1, 1, "", "positive"], [498, 1, 1, "", "pow"], [499, 1, 1, "", "power"], [500, 1, 1, "", "prod"], [501, 1, 1, "", "proj"], [502, 1, 1, "", "ptp"], [503, 1, 1, "", "put"], [504, 1, 1, "", "put_along_axis"], [505, 1, 1, "", "putmask"], [506, 1, 1, "", "rad2deg"], [507, 1, 1, "", "radians"], [567, 1, 1, "", "ravel"], [568, 1, 1, "", "ravel_multi_index"], [569, 1, 1, "", "real"], [570, 1, 1, "", "real_if_close"], [571, 1, 1, "", "reciprocal"], [572, 1, 1, "", "reduce_hypot"], [573, 1, 1, "", "remainder"], [574, 1, 1, "", "repeat"], [575, 1, 1, "", "require"], [576, 1, 1, "", "reshape"], [577, 1, 1, "", "resize"], [578, 1, 1, "", "result_type"], [579, 1, 1, "", "right_shift"], [580, 1, 1, "", "rint"], [581, 1, 1, "", "roll"], [582, 1, 1, "", "rollaxis"], [583, 1, 1, "", "rot90"], [584, 1, 1, "", "round"], [585, 1, 1, "", "row_stack"], [586, 1, 1, "", "rsqrt"], [587, 1, 1, "", "searchsorted"], [588, 1, 1, "", "select"], [589, 1, 1, "", "shape"], [590, 1, 1, "", "sign"], [591, 1, 1, "", "signbit"], [592, 1, 1, "", "sin"], [593, 1, 1, "", "sinc"], [594, 1, 1, "", "sinh"], [595, 1, 1, "", "size"], [596, 1, 1, "", "sort"], [597, 1, 1, "", "sort_complex"], [598, 1, 1, "", "spacing"], [599, 1, 1, "", "split"], [600, 1, 1, "", "sqrt"], [601, 1, 1, "", "square"], [602, 1, 1, "", "squeeze"], [603, 1, 1, "", "stack"], [604, 1, 1, "", "std"], [605, 1, 1, "", "subtract"], [606, 1, 1, "", "sum"], [607, 1, 1, "", "swapaxes"], [608, 1, 1, "", "take"], [609, 1, 1, "", "take_along_axis"], [610, 1, 1, "", "tan"], [611, 1, 1, "", "tanh"], [612, 1, 1, "", "tensordot"], [613, 1, 1, "", "tile"], [614, 1, 1, "", "trace"], [615, 1, 1, "", "transpose"], [616, 1, 1, "", "trapezoid"], [617, 1, 1, "", "tri"], [618, 1, 1, "", "tril"], [619, 1, 1, "", "tril_indices"], [620, 1, 1, "", "tril_indices_from"], [621, 1, 1, "", "trim_zeros"], [622, 1, 1, "", "triu"], [623, 1, 1, "", "triu_indices"], [624, 1, 1, "", "triu_indices_from"], [625, 1, 1, "", "true_divide"], [626, 1, 1, "", "trunc"], [627, 1, 1, "", "unique"], [628, 1, 1, "", "unravel_index"], [629, 1, 1, "", "unstack"], [630, 1, 1, "", "unwrap"], [631, 1, 1, "", "vander"], [632, 1, 1, "", "var"], [633, 1, 1, "", "vdot"], [634, 1, 1, "", "vecdot"], [635, 1, 1, "", "vsplit"], [636, 1, 1, "", "vstack"], [637, 1, 1, "", "where"], [638, 1, 1, "", "zeros"], [639, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[111, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[112, 3, 1, "", "T"], [113, 4, 1, "", "all"], [114, 4, 1, "", "any"], [115, 4, 1, "", "argmax"], [116, 4, 1, "", "argmin"], [117, 4, 1, "", "argsort"], [118, 4, 1, "", "asnumpy"], [119, 4, 1, "", "astype"], [120, 4, 1, "", "choose"], [121, 4, 1, "", "clip"], [122, 4, 1, "", "conj"], [123, 4, 1, "", "conjugate"], [124, 4, 1, "", "copy"], [125, 4, 1, "", "cumprod"], [126, 4, 1, "", "cumsum"], [127, 3, 1, "", "device"], [128, 4, 1, "", "diagonal"], [129, 4, 1, "", "dot"], [130, 3, 1, "", "dtype"], [131, 4, 1, "", "fill"], [132, 3, 1, "", "flags"], [133, 3, 1, "", "flat"], [134, 4, 1, "", "flatten"], [135, 4, 1, "", "get_array"], [136, 3, 1, "", "imag"], [137, 4, 1, "", "item"], [138, 3, 1, "", "itemsize"], [139, 3, 1, "", "mT"], [140, 4, 1, "", "max"], [141, 4, 1, "", "mean"], [142, 4, 1, "", "min"], [143, 3, 1, "", "nbytes"], [144, 3, 1, "", "ndim"], [145, 4, 1, "", "nonzero"], [146, 4, 1, "", "partition"], [147, 4, 1, "", "prod"], [148, 4, 1, "", "put"], [149, 4, 1, "", "ravel"], [150, 3, 1, "", "real"], [151, 4, 1, "", "repeat"], [152, 4, 1, "", "reshape"], [153, 4, 1, "", "round"], [154, 4, 1, "", "searchsorted"], [155, 3, 1, "", "shape"], [156, 3, 1, "", "size"], [157, 4, 1, "", "sort"], [158, 4, 1, "", "squeeze"], [159, 4, 1, "", "std"], [160, 3, 1, "", "strides"], [161, 4, 1, "", "sum"], [162, 4, 1, "", "swapaxes"], [163, 3, 1, "", "sycl_context"], [164, 3, 1, "", "sycl_device"], [165, 3, 1, "", "sycl_queue"], [166, 4, 1, "", "take"], [167, 4, 1, "", "to_device"], [168, 4, 1, "", "trace"], [169, 4, 1, "", "transpose"], [170, 3, 1, "", "usm_type"], [171, 4, 1, "", "var"]], "dpnp.dtype": [[175, 5, 1, "", "alignment"], [176, 5, 1, "", "base"], [177, 5, 1, "", "byteorder"], [178, 5, 1, "", "char"], [179, 5, 1, "", "descr"], [180, 5, 1, "", "fields"], [181, 5, 1, "", "flags"], [182, 5, 1, "", "hasobject"], [183, 5, 1, "", "isalignedstruct"], [184, 5, 1, "", "isbuiltin"], [185, 5, 1, "", "isnative"], [186, 5, 1, "", "itemsize"], [187, 5, 1, "", "kind"], [188, 5, 1, "", "metadata"], [189, 5, 1, "", "name"], [190, 5, 1, "", "names"], [191, 5, 1, "", "ndim"], [192, 4, 1, "", "newbyteorder"], [193, 5, 1, "", "num"], [194, 5, 1, "", "shape"], [195, 5, 1, "", "str"], [196, 5, 1, "", "subdtype"], [197, 5, 1, "", "type"]], "dpnp.fft": [[212, 1, 1, "", "fft"], [213, 1, 1, "", "fft2"], [214, 1, 1, "", "fftfreq"], [215, 1, 1, "", "fftn"], [216, 1, 1, "", "fftshift"], [217, 1, 1, "", "hfft"], [218, 1, 1, "", "ifft"], [219, 1, 1, "", "ifft2"], [220, 1, 1, "", "ifftn"], [221, 1, 1, "", "ifftshift"], [222, 1, 1, "", "ihfft"], [223, 1, 1, "", "irfft"], [224, 1, 1, "", "irfft2"], [225, 1, 1, "", "irfftn"], [226, 1, 1, "", "rfft"], [227, 1, 1, "", "rfft2"], [228, 1, 1, "", "rfftfreq"], [229, 1, 1, "", "rfftn"]], "dpnp.linalg": [[292, 1, 1, "", "cholesky"], [293, 1, 1, "", "cond"], [294, 1, 1, "", "cross"], [295, 1, 1, "", "det"], [296, 1, 1, "", "diagonal"], [297, 1, 1, "", "eig"], [298, 1, 1, "", "eigh"], [299, 1, 1, "", "eigvals"], [300, 1, 1, "", "eigvalsh"], [301, 1, 1, "", "inv"], [302, 1, 1, "", "lstsq"], [303, 1, 1, "", "matmul"], [304, 1, 1, "", "matrix_norm"], [305, 1, 1, "", "matrix_power"], [306, 1, 1, "", "matrix_rank"], [307, 1, 1, "", "multi_dot"], [308, 1, 1, "", "norm"], [309, 1, 1, "", "outer"], [310, 1, 1, "", "pinv"], [311, 1, 1, "", "qr"], [312, 1, 1, "", "slogdet"], [313, 1, 1, "", "solve"], [314, 1, 1, "", "svd"], [315, 1, 1, "", "svdvals"], [316, 1, 1, "", "tensordot"], [317, 1, 1, "", "tensorinv"], [318, 1, 1, "", "tensorsolve"], [319, 1, 1, "", "trace"], [320, 1, 1, "", "vecdot"], [321, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[364, 3, 1, "", "T"], [365, 4, 1, "", "__abs__"], [366, 4, 1, "", "__add__"], [367, 4, 1, "", "__and__"], [368, 4, 1, "", "__bool__"], [369, 4, 1, "", "__complex__"], [370, 4, 1, "", "__copy__"], [371, 4, 1, "", "__eq__"], [372, 4, 1, "", "__float__"], [373, 4, 1, "", "__floordiv__"], [374, 4, 1, "", "__ge__"], [375, 4, 1, "", "__getitem__"], [376, 4, 1, "", "__gt__"], [377, 4, 1, "", "__iadd__"], [378, 4, 1, "", "__iand__"], [379, 4, 1, "", "__ifloordiv__"], [380, 4, 1, "", "__ilshift__"], [381, 4, 1, "", "__imatmul__"], [382, 4, 1, "", "__imod__"], [383, 4, 1, "", "__imul__"], [384, 4, 1, "", "__int__"], [385, 4, 1, "", "__invert__"], [386, 4, 1, "", "__ior__"], [387, 4, 1, "", "__ipow__"], [388, 4, 1, "", "__irshift__"], [389, 4, 1, "", "__isub__"], [390, 4, 1, "", "__itruediv__"], [391, 4, 1, "", "__ixor__"], [392, 4, 1, "", "__le__"], [393, 4, 1, "", "__len__"], [394, 4, 1, "", "__lshift__"], [395, 4, 1, "", "__lt__"], [396, 4, 1, "", "__matmul__"], [397, 4, 1, "", "__mod__"], [398, 4, 1, "", "__mul__"], [399, 4, 1, "", "__ne__"], [400, 4, 1, "", "__neg__"], [401, 4, 1, "", "__new__"], [402, 4, 1, "", "__or__"], [403, 4, 1, "", "__pos__"], [404, 4, 1, "", "__pow__"], [405, 4, 1, "", "__radd__"], [406, 4, 1, "", "__rand__"], [407, 4, 1, "", "__repr__"], [408, 4, 1, "", "__rfloordiv__"], [409, 4, 1, "", "__rlshift__"], [410, 4, 1, "", "__rmatmul__"], [411, 4, 1, "", "__rmod__"], [412, 4, 1, "", "__rmul__"], [413, 4, 1, "", "__ror__"], [414, 4, 1, "", "__rpow__"], [415, 4, 1, "", "__rrshift__"], [416, 4, 1, "", "__rshift__"], [417, 4, 1, "", "__rsub__"], [418, 4, 1, "", "__rtruediv__"], [419, 4, 1, "", "__rxor__"], [420, 4, 1, "", "__setitem__"], [421, 4, 1, "", "__str__"], [422, 4, 1, "", "__sub__"], [423, 4, 1, "", "__truediv__"], [424, 4, 1, "", "__xor__"], [425, 4, 1, "", "all"], [426, 4, 1, "", "any"], [427, 4, 1, "", "argmax"], [428, 4, 1, "", "argmin"], [429, 4, 1, "", "argsort"], [430, 4, 1, "", "asnumpy"], [431, 4, 1, "", "astype"], [432, 4, 1, "", "choose"], [433, 4, 1, "", "clip"], [434, 4, 1, "", "conj"], [435, 4, 1, "", "conjugate"], [436, 4, 1, "", "copy"], [437, 4, 1, "", "cumprod"], [438, 4, 1, "", "cumsum"], [439, 3, 1, "", "device"], [440, 4, 1, "", "diagonal"], [441, 4, 1, "", "dot"], [442, 3, 1, "", "dtype"], [443, 4, 1, "", "fill"], [444, 3, 1, "", "flags"], [445, 3, 1, "", "flat"], [446, 4, 1, "", "flatten"], [447, 4, 1, "", "get_array"], [448, 3, 1, "", "imag"], [449, 4, 1, "", "item"], [450, 3, 1, "", "itemsize"], [451, 3, 1, "", "mT"], [452, 4, 1, "", "max"], [453, 4, 1, "", "mean"], [454, 4, 1, "", "min"], [455, 3, 1, "", "nbytes"], [456, 3, 1, "", "ndim"], [457, 4, 1, "", "nonzero"], [458, 4, 1, "", "partition"], [459, 4, 1, "", "prod"], [460, 4, 1, "", "put"], [461, 4, 1, "", "ravel"], [462, 3, 1, "", "real"], [463, 4, 1, "", "repeat"], [464, 4, 1, "", "reshape"], [465, 4, 1, "", "round"], [466, 4, 1, "", "searchsorted"], [467, 3, 1, "", "shape"], [468, 3, 1, "", "size"], [469, 4, 1, "", "sort"], [470, 4, 1, "", "squeeze"], [471, 4, 1, "", "std"], [472, 3, 1, "", "strides"], [473, 4, 1, "", "sum"], [474, 4, 1, "", "swapaxes"], [475, 3, 1, "", "sycl_context"], [476, 3, 1, "", "sycl_device"], [477, 3, 1, "", "sycl_queue"], [478, 4, 1, "", "take"], [479, 4, 1, "", "to_device"], [480, 4, 1, "", "trace"], [481, 4, 1, "", "transpose"], [482, 3, 1, "", "usm_type"], [483, 4, 1, "", "var"]], "dpnp.random": [[508, 2, 1, "", "RandomState"], [519, 1, 1, "", "beta"], [520, 1, 1, "", "binomial"], [521, 1, 1, "", "bytes"], [522, 1, 1, "", "chisquare"], [523, 1, 1, "", "choice"], [524, 1, 1, "", "dirichlet"], [525, 1, 1, "", "exponential"], [526, 1, 1, "", "f"], [527, 1, 1, "", "gamma"], [528, 1, 1, "", "geometric"], [529, 1, 1, "", "gumbel"], [530, 1, 1, "", "hypergeometric"], [531, 1, 1, "", "laplace"], [532, 1, 1, "", "logistic"], [533, 1, 1, "", "lognormal"], [534, 1, 1, "", "logseries"], [535, 1, 1, "", "multinomial"], [536, 1, 1, "", "multivariate_normal"], [537, 1, 1, "", "negative_binomial"], [538, 1, 1, "", "noncentral_chisquare"], [539, 1, 1, "", "noncentral_f"], [540, 1, 1, "", "normal"], [541, 1, 1, "", "pareto"], [542, 1, 1, "", "permutation"], [543, 1, 1, "", "poisson"], [544, 1, 1, "", "power"], [545, 1, 1, "", "rand"], [546, 1, 1, "", "randint"], [547, 1, 1, "", "randn"], [548, 1, 1, "", "random"], [549, 1, 1, "", "random_integers"], [550, 1, 1, "", "random_sample"], [551, 1, 1, "", "ranf"], [552, 1, 1, "", "rayleigh"], [553, 1, 1, "", "sample"], [554, 1, 1, "", "seed"], [555, 1, 1, "", "shuffle"], [556, 1, 1, "", "standard_cauchy"], [557, 1, 1, "", "standard_exponential"], [558, 1, 1, "", "standard_gamma"], [559, 1, 1, "", "standard_normal"], [560, 1, 1, "", "standard_t"], [561, 1, 1, "", "triangular"], [562, 1, 1, "", "uniform"], [563, 1, 1, "", "vonmises"], [564, 1, 1, "", "wald"], [565, 1, 1, "", "weibull"], [566, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[509, 4, 1, "", "get_state"], [510, 4, 1, "", "get_sycl_device"], [511, 4, 1, "", "get_sycl_queue"], [512, 4, 1, "", "normal"], [513, 4, 1, "", "rand"], [514, 4, 1, "", "randint"], [515, 4, 1, "", "randn"], [516, 4, 1, "", "random_sample"], [517, 4, 1, "", "standard_normal"], [518, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:attribute", "6": "py:data"}, "terms": {"": [0, 3, 4, 10, 23, 60, 93, 96, 130, 169, 174, 180, 187, 192, 198, 213, 215, 217, 219, 220, 222, 224, 225, 227, 229, 230, 245, 246, 302, 306, 308, 310, 314, 315, 316, 442, 481, 512, 513, 514, 515, 516, 517, 518, 519, 520, 525, 526, 527, 529, 530, 531, 532, 533, 535, 537, 540, 541, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 576, 612, 613, 647], "0": [0, 4, 6, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 128, 131, 136, 137, 139, 150, 153, 155, 157, 159, 168, 169, 171, 172, 174, 180, 184, 191, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 253, 255, 258, 259, 260, 261, 264, 265, 268, 269, 270, 272, 275, 277, 278, 279, 280, 285, 286, 287, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 312, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 436, 440, 443, 448, 449, 451, 462, 465, 467, 469, 471, 480, 481, 483, 484, 487, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 503, 504, 507, 512, 513, 514, 515, 516, 517, 518, 520, 525, 527, 528, 529, 531, 532, 533, 535, 536, 537, 540, 542, 543, 544, 545, 548, 550, 551, 552, 553, 556, 559, 561, 562, 563, 568, 571, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 637, 638, 639, 647], "00": [89, 200, 212, 592], "000": [351, 520], "00000000005e": 208, "000000001": 62, "00000000e": [212, 351], "000000082740371e": 208, "000000e": [89, 592], "00001101": [62, 63, 65, 66, 68, 271], "00001e10": [18, 272], "00010000": 66, "00010001": [62, 68], "00011100": 68, "00011101": 66, "0001e10": 272, "000e": 200, "000j": 351, "0011": 60, "002": 351, "00225109": 87, "00867716": 522, "01": [87, 200], "02": [87, 200, 351], "03": 351, "03047091": 87, "03088525e": 201, "0342579": 87, "0396842": 334, "04": 200, "04719755": 507, "04921661": 515, "04923628": 593, "05": [18, 200, 272], "05846808": 593, "0614962j": [213, 227], "06310682": 513, "06682066": 593, "07": 351, "07012729": 87, "0728188e": 87, "07944154": [94, 312], "08": [18, 89, 200, 238, 272, 536, 592], "08156915": 517, "08409186": 593, "08504448": 593, "08903844": 593, "09373496": 87, "0943951": 507, "09640474": 329, "09861229": [94, 312, 326], "0d": 37, "0dev2": 6, "0j": [21, 110, 136, 150, 273, 274, 281, 282, 303, 337, 448, 462, 590], "0th": [316, 612], "1": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 124, 128, 131, 134, 136, 137, 139, 144, 146, 150, 155, 157, 168, 169, 172, 173, 174, 184, 186, 188, 191, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 429, 431, 436, 440, 443, 446, 448, 449, 451, 456, 458, 462, 467, 469, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 512, 513, 514, 515, 516, 517, 518, 520, 522, 523, 525, 527, 529, 531, 532, 533, 535, 536, 537, 540, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 557, 559, 562, 567, 568, 569, 570, 571, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647], "10": [0, 4, 15, 16, 25, 28, 30, 34, 35, 50, 59, 64, 67, 77, 84, 94, 95, 96, 97, 98, 101, 103, 104, 107, 108, 152, 172, 174, 199, 200, 208, 209, 216, 228, 250, 253, 259, 260, 261, 267, 272, 285, 286, 288, 289, 319, 320, 324, 325, 326, 327, 334, 335, 342, 350, 464, 493, 502, 504, 514, 518, 520, 530, 542, 572, 578, 579, 581, 584, 587, 599, 603, 609, 618, 619, 620, 622, 623, 624, 629, 634, 635, 637], "100": [103, 228, 253, 272, 286, 307, 334, 493, 530, 556, 570, 630], "1000": [73, 253, 307, 334, 519, 520, 525, 527, 529, 530, 531, 532, 533, 540, 541, 544, 546, 548, 551, 553, 559, 563, 564, 565, 566, 570, 616], "10000": [307, 528, 543, 552, 562], "100000": [96, 98, 537], "1000000": [556, 558, 560, 561], "101": [60, 64, 67, 289, 579], "1010": [67, 579], "10100": [64, 289], "1024": 0, "10394325": 593, "105": 200, "11": [25, 34, 35, 59, 60, 90, 101, 103, 104, 152, 172, 209, 255, 261, 308, 319, 464, 537, 546, 584, 587, 594, 618, 619, 620, 622, 623, 624, 629, 635, 637], "110": [199, 269], "1100": 62, "11100": 68, "11101": [60, 66], "11110010": [63, 65, 271], "111111": 351, "113": 328, "11570901": 517, "11643488": 593, "1179187": 513, "118033988749895": 604, "119": 199, "1196081": 518, "12": [10, 25, 34, 35, 58, 62, 93, 100, 101, 103, 104, 108, 172, 193, 199, 209, 213, 227, 252, 261, 267, 287, 315, 334, 500, 502, 507, 542, 568, 587, 618, 619, 620, 622, 623, 624, 629, 635, 637], "120": [95, 97, 100], "123": [87, 137, 200, 449], "124": 25, "125": [238, 498, 499, 631], "12613779": 593, "127": 253, "128": [0, 253, 351], "12th": 199, "13": [10, 25, 34, 35, 62, 63, 65, 66, 68, 103, 104, 110, 172, 191, 199, 261, 270, 271, 303, 337, 568, 587, 619, 620, 623, 624, 628, 629, 635], "130": 199, "134": 269, "13436424": [513, 516], "135": [32, 54], "13710533": 522, "139884456208480": 17, "13j": 570, "14": [25, 34, 35, 62, 63, 65, 103, 104, 110, 172, 232, 261, 269, 271, 316, 587, 612, 619, 620, 623, 624, 629, 635], "140": 630, "140053638309840": 22, "14157194": 616, "14159265": [14, 27, 32, 54, 99, 507], "1424356": 87, "14243561": 87, "14423775e": 212, "14j": 570, "15": [25, 34, 35, 96, 98, 103, 104, 108, 172, 199, 217, 222, 261, 308, 325, 542, 587, 619, 620, 623, 624, 629, 635], "150": 100, "15591488": 593, "15716429": 87, "15888336": 334, "15j": 570, "16": [6, 25, 62, 66, 103, 104, 172, 179, 180, 181, 186, 190, 212, 238, 248, 253, 255, 261, 321, 350, 498, 499, 570, 588, 610, 619, 620, 623, 624, 629, 635], "1621": [568, 628], "16227766": [293, 572], "16394577": 512, "164": 329, "1643624": 87, "166": 329, "16j": 212, "17": [6, 25, 62, 68, 87, 212, 213, 227, 629], "17157288": [298, 300], "17281316e": 212, "17615308": 87, "177": [253, 334], "17j": 212, "18": [6, 25, 95, 97, 186, 198, 199, 215, 294, 304, 308, 334, 629], "180": [32, 54, 99, 100, 199, 506, 630, 654], "1805": 10, "18236388": 517, "18557831": 517, "1887902": 507, "18920668": 593, "19": [10, 25, 91, 193, 568, 629, 630], "19083664": 87, "19083665": 87, "1923875335537315": 547, "19245009": 586, "1924881e": 238, "1965": 10, "19722458": 94, "1985": 308, "1d": [24, 198, 503, 504, 609, 616], "1e": [18, 208, 272, 297, 325, 326, 328, 329, 536], "1e10": [18, 272], "1j": [12, 13, 21, 30, 31, 40, 50, 53, 81, 82, 136, 150, 223, 267, 273, 281, 297, 309, 314, 448, 462, 492, 569, 597, 601], "1th": [316, 612], "2": [0, 3, 4, 10, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 124, 128, 129, 131, 134, 137, 139, 144, 146, 155, 156, 169, 172, 173, 174, 179, 180, 184, 186, 188, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 273, 276, 281, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 431, 436, 440, 441, 443, 446, 449, 451, 456, 458, 467, 468, 481, 484, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 503, 506, 507, 512, 513, 514, 515, 518, 522, 526, 530, 536, 542, 545, 547, 558, 560, 561, 564, 566, 567, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 594, 595, 597, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639], "20": [25, 64, 95, 97, 108, 199, 228, 252, 268, 272, 286, 287, 288, 289, 308, 504, 520, 535, 587, 609, 629, 630], "20000": 520, "2007": 10, "200e": 200, "20477401j": [213, 227], "2048": 0, "2066992e": 87, "21": [25, 96, 98, 178, 186, 193, 629], "210": 100, "2123185": 87, "215": 334, "21623621": 593, "21941987": 517, "21968665": 517, "22": [25, 503, 568, 628, 629], "220": 630, "220446049250313e": 570, "222222": 351, "22460635e": 610, "22464680e": 212, "22497216": 308, "22776602": 334, "23": [25, 61, 518, 568, 629], "230": 199, "23387232": 593, "23598776": 507, "23606798": 308, "24": [25, 34, 35, 93, 95, 97, 155, 198, 199, 269, 286, 294, 316, 317, 319, 467, 500, 612, 614, 629], "240": 100, "24264069": 308, "24544512": 517, "247219128924647": 360, "25": [174, 199, 204, 214, 255, 259, 260, 301, 322, 350, 362, 547, 556, 588, 631, 632], "255": [62, 66], "25506903": 513, "256": [0, 253], "26": [68, 199], "260": 630, "26606588": 264, "26618007j": 327, "27": [74, 238, 334, 498, 499, 586, 631], "270": 100, "2795853": 264, "28": [68, 199], "28000000e": 351, "2800000e": 351, "283185307179586": 630, "28318531": 630, "28352814": 517, "2858386e": 87, "28904982": 329, "29": 66, "297": 10, "2d": [314, 337, 583, 627], "2e": [96, 98], "2f": 0, "2j": [81, 82, 110, 212, 267, 273, 281, 298, 300, 303, 337, 569, 590, 597, 633], "2k": 630, "3": [0, 3, 4, 6, 14, 16, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 124, 128, 134, 137, 139, 144, 146, 155, 156, 157, 169, 172, 173, 174, 186, 188, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 221, 222, 224, 225, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 253, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 276, 281, 282, 283, 285, 286, 289, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 436, 440, 446, 449, 451, 456, 458, 467, 468, 469, 481, 484, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 503, 507, 512, 515, 517, 522, 526, 533, 536, 542, 545, 546, 547, 557, 561, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 595, 596, 597, 599, 600, 602, 603, 604, 605, 607, 608, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "30": [93, 100, 156, 199, 228, 468, 504, 507, 609, 633], "300": [100, 630], "3003003": 571, "301": [6, 10], "30102999566": 325, "3012989": 594, "30258509": [94, 335], "308": 351, "308j": 351, "31": [6, 68, 253, 568, 628], "312": 201, "316": 334, "32": [180, 199, 253, 316, 359, 361, 612], "33": 571, "330": [6, 100], "333": 307, "33333333": 351, "3333333e": 351, "33340275": 616, "33486982e": 212, "33836967": 512, "340": 630, "34074171": 518, "34132519": 334, "34846923": [304, 308], "34960421": 334, "35": [199, 528], "35106603e": [304, 308], "35348576": 321, "35355338": 586, "36": 93, "360": 630, "37": [568, 584, 628], "371139e": 89, "38": [269, 520], "380": 630, "38268343": 298, "38268343j": 298, "38629436": 94, "38885": 520, "389": 6, "389056099": [205, 208], "39295758": 512, "39783284": 87, "3e": [0, 96, 98, 570], "3j": [110, 303, 337, 597], "3rd": [79, 80, 172, 599], "3x3": 336, "3x8000": 557, "4": [0, 16, 17, 23, 24, 25, 26, 34, 35, 37, 39, 40, 42, 56, 58, 59, 60, 62, 66, 69, 77, 78, 79, 80, 83, 86, 87, 89, 91, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 124, 128, 134, 139, 144, 146, 155, 157, 169, 172, 173, 175, 186, 191, 194, 198, 199, 200, 201, 203, 206, 209, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 230, 234, 235, 238, 240, 241, 242, 246, 247, 248, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 273, 276, 281, 285, 286, 288, 291, 294, 295, 296, 301, 303, 304, 305, 306, 308, 312, 315, 316, 317, 318, 319, 321, 322, 327, 330, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 352, 353, 355, 357, 360, 362, 436, 440, 446, 451, 456, 458, 467, 469, 481, 484, 487, 489, 491, 493, 495, 498, 499, 500, 502, 503, 507, 512, 515, 516, 519, 522, 542, 547, 563, 567, 568, 569, 570, 573, 574, 576, 577, 581, 582, 583, 584, 585, 588, 590, 593, 595, 596, 599, 600, 603, 604, 605, 607, 608, 612, 613, 615, 616, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 639], "40": [6, 64, 199, 228, 288, 289, 504, 609], "40882036": 512, "4096": 0, "41": [568, 593, 628], "41421356": [293, 308], "42": 588, "420": 630, "438": 6, "44": [496, 503], "4400": [199, 316, 612], "443469": 334, "44509285e": 212, "45": [21, 32, 54, 321], "45206687": 87, "4532": [199, 316, 612], "46": 199, "460": [6, 630], "46394577": 515, "464": 334, "46436927": 87, "4643693": 87, "4664": [199, 316, 612], "47": 6, "4730": [199, 316, 612], "4796": [199, 316, 612], "48": [6, 93], "48093112": 518, "48613152": 87, "48613155": 87, "4874": [199, 316, 612], "48927254": 512, "49": 6, "4928": [199, 316, 612], "49543509": 513, "49778714": 630, "499128": 110, "4d": 314, "4e": 570, "4j": [267, 569, 633], "4x4": [619, 623], "5": [0, 16, 17, 22, 23, 24, 25, 26, 33, 34, 37, 42, 55, 56, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 75, 77, 79, 80, 83, 86, 87, 88, 91, 93, 95, 96, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 110, 119, 124, 137, 139, 156, 172, 198, 199, 200, 204, 209, 213, 214, 216, 224, 227, 228, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 252, 253, 255, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 273, 276, 281, 285, 286, 288, 289, 292, 294, 296, 298, 300, 301, 307, 308, 309, 313, 316, 319, 320, 321, 322, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 360, 431, 436, 449, 451, 468, 484, 487, 489, 490, 491, 492, 493, 495, 498, 499, 502, 503, 507, 512, 513, 515, 517, 518, 519, 520, 522, 525, 537, 541, 542, 543, 544, 547, 550, 565, 567, 568, 569, 570, 571, 573, 576, 579, 580, 581, 582, 583, 584, 585, 587, 588, 590, 595, 597, 599, 603, 604, 606, 607, 608, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639], "50": [213, 227, 228, 253, 286, 316, 328, 329, 334, 504, 609, 612, 616, 637], "500": [286, 630], "5018": [199, 316, 612], "50455115": 593, "5091786": 90, "512": 0, "5147297e": 87, "5162": [199, 316, 612], "52069395e": 212, "52359878": 507, "52928804": 518, "53": 6, "5306": [199, 316, 612], "53702235": 87, "5399045e": 238, "54": [6, 518], "540": 630, "54288406": 515, "54465213": 517, "545": 6, "548739": 594, "54930614": [33, 55], "55": [496, 503, 588], "5555555555555554": 362, "562": 334, "5620499351813308": [12, 13], "56920387": [513, 516], "5707963267948966": [29, 49], "57079633": [21, 32, 54, 507, 630], "5790461": 87, "57904613": 87, "58997253": 512, "591953": 90, "5e": [328, 329], "5j": [344, 489, 597], "6": [0, 4, 16, 23, 24, 25, 26, 34, 35, 37, 42, 56, 59, 61, 66, 68, 70, 77, 79, 80, 86, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 124, 137, 139, 155, 172, 181, 189, 198, 199, 203, 208, 209, 214, 217, 228, 235, 238, 251, 252, 255, 261, 262, 267, 268, 269, 270, 276, 285, 286, 287, 294, 296, 304, 308, 310, 311, 314, 315, 316, 317, 319, 320, 321, 322, 334, 336, 338, 342, 354, 355, 359, 436, 449, 451, 467, 484, 487, 491, 493, 496, 498, 499, 502, 512, 515, 518, 535, 537, 542, 547, 567, 568, 569, 575, 576, 581, 582, 583, 584, 585, 588, 595, 597, 599, 603, 605, 606, 607, 608, 612, 614, 616, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 633, 634, 635, 636, 637, 639], "60": [25, 93, 100, 199, 287, 316, 504, 609, 612, 630, 637], "600": 286, "60943791": 94, "6173796": 87, "61799388": 507, "62": 269, "6227766": 253, "62318272": 522, "62341325": 253, "624": 200, "63": 253, "63317787e": 610, "63522211": 517, "63836967": 515, "64": [0, 4, 199, 238, 253, 359, 361, 498, 499, 584], "64000": 199, "65157276": 87, "6515728": 87, "65354985": 87, "65745445": [15, 28], "6580445": 87, "66519143": 507, "6666666666666665": 357, "67": 199, "67305985": 245, "673174": 517, "67718303": 517, "6883078": 87, "69295758": 515, "69314718": [94, 312, 326], "6990877": 518, "6j": [267, 569, 633], "7": [16, 18, 23, 24, 25, 26, 42, 56, 61, 70, 75, 77, 86, 87, 91, 93, 96, 98, 101, 102, 103, 104, 106, 107, 109, 137, 139, 172, 198, 205, 209, 235, 239, 253, 255, 261, 269, 270, 272, 285, 286, 296, 304, 308, 314, 316, 319, 321, 336, 338, 342, 347, 350, 449, 451, 487, 493, 501, 502, 512, 542, 568, 569, 573, 578, 580, 581, 583, 599, 605, 606, 607, 608, 612, 618, 619, 620, 622, 623, 624, 625, 626, 628, 629, 630, 633, 635, 637], "70": [286, 633, 637], "700": 286, "700e": 200, "70710677": [136, 150, 448, 462], "70710678": [293, 297], "70710678j": 297, "70882036": 515, "7110255": 87, "71102554": 87, "71238898": 507, "718281828": [205, 208], "72": 93, "720": [95, 97, 630], "72075441": 334, "72450536": 87, "72538256": [30, 50], "74165739": 308, "742278e": 592, "74596669": [304, 308], "7485727": 87, "74857277": 87, "74921661": 512, "75": [59, 204, 214, 255, 260, 301, 322], "754": 231, "75682673": 593, "75958653": 507, "76096244": 513, "76377462": 513, "77447665": 329, "78539816": [21, 31, 32, 53, 54, 630], "78927254": 515, "79175947": 94, "7937219": 87, "79727215": 87, "7972722": 87, "79769313e": 351, "7j": 501, "8": [4, 16, 18, 23, 24, 25, 42, 56, 63, 65, 74, 77, 86, 93, 101, 102, 103, 104, 106, 107, 129, 139, 155, 172, 175, 177, 181, 186, 189, 191, 196, 199, 200, 209, 212, 214, 228, 229, 235, 238, 253, 255, 261, 267, 270, 271, 272, 285, 295, 296, 308, 312, 314, 315, 316, 317, 319, 320, 321, 322, 334, 336, 338, 441, 451, 467, 487, 493, 498, 499, 500, 502, 518, 542, 561, 568, 569, 581, 583, 586, 592, 599, 608, 612, 614, 616, 618, 619, 620, 622, 623, 624, 628, 629, 630, 631, 634, 635, 637], "80": [186, 199, 637], "8000": 557, "8012391e": 87, "80226506": [513, 516], "8058837395885292": 321, "8104691": 87, "81715362": 517, "827941": [253, 334], "82842712": [298, 300], "8399546e": 87, "84086883": 87, "84288406": 512, "84401099": [515, 517], "84743374": [513, 516], "84803548": 308, "85": 199, "86": 269, "87649168": 328, "88": 198, "88079259": 264, "88178420e": 212, "881943016134134": 321, "88194302": 321, "88997253": 515, "8900264": 87, "89002645": 87, "89920014": 522, "8f": [176, 196], "8j": 633, "9": [4, 16, 23, 24, 25, 42, 56, 77, 86, 87, 93, 96, 98, 101, 102, 103, 104, 106, 109, 137, 172, 199, 201, 209, 212, 215, 216, 221, 232, 238, 240, 248, 253, 255, 261, 272, 285, 296, 297, 302, 304, 308, 310, 311, 314, 315, 316, 319, 321, 334, 336, 350, 351, 449, 487, 502, 518, 520, 522, 542, 568, 569, 581, 599, 600, 605, 612, 618, 619, 620, 622, 623, 624, 625, 628, 629, 630, 631, 635, 637], "90": [21, 100, 506, 583, 637], "9011005": 87, "917152": 611, "92": 25, "92387953": 298, "92387953j": 298, "9305482": 87, "93548928": 593, "9377134e": 87, "9387854e": 87, "9393724": 87, "9393725": 87, "94": 199, "94591015": 94, "95": 302, "9520904e": 87, "95799250e": 212, "968541": 87, "9685411": 87, "9724453": 87, "98": [303, 337], "98024613": 334, "9875833": 87, "99": [198, 326, 504], "9909503": 87, "99095035": 87, "99322285": [15, 28], "994938": 87, "9949381": 87, "9951523": 87, "99532227": 204, "996272": 611, "99822295": [30, 50], "99853728": 204, "999": [200, 270], "9990000e": 351, "99959305": 204, "99989938": 204, "9999": 351, "99997791": 204, "9999999": 87, "99999994": 87, "999999e": 272, "A": [10, 12, 13, 14, 15, 16, 18, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 78, 81, 82, 84, 85, 86, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 119, 124, 134, 137, 172, 174, 177, 178, 181, 184, 187, 189, 193, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 214, 215, 218, 219, 220, 224, 225, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 263, 264, 265, 267, 268, 270, 271, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 302, 306, 307, 308, 311, 312, 316, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 340, 342, 344, 346, 347, 350, 354, 355, 359, 361, 431, 436, 446, 449, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 501, 506, 507, 508, 510, 511, 515, 517, 520, 537, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 567, 568, 569, 571, 573, 576, 579, 580, 583, 586, 590, 591, 592, 593, 594, 598, 599, 600, 601, 605, 607, 608, 610, 611, 612, 613, 615, 617, 619, 621, 623, 625, 626, 631, 634, 635, 637, 638, 639, 654], "AND": [17, 62, 63, 65, 66, 68, 271, 330, 331, 332, 333], "And": [4, 51, 52, 103, 119, 431, 619, 623], "As": 627, "Be": 297, "Being": 3, "But": [4, 188], "By": [34, 35, 45, 52, 93, 119, 213, 217, 219, 223, 225, 229, 253, 302, 322, 334, 337, 339, 341, 345, 352, 353, 356, 357, 358, 359, 360, 361, 362, 431, 574, 581, 595, 604, 608, 617, 619, 621, 623, 632, 634], "For": [0, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 131, 134, 136, 137, 144, 150, 152, 155, 160, 169, 172, 173, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 443, 446, 448, 449, 456, 462, 464, 467, 472, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647, 654], "If": [4, 10, 12, 13, 17, 18, 22, 23, 25, 26, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 59, 60, 72, 77, 79, 80, 87, 91, 93, 94, 95, 96, 97, 98, 101, 102, 106, 107, 110, 119, 139, 157, 172, 174, 180, 196, 198, 199, 200, 207, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 241, 242, 244, 249, 253, 255, 259, 260, 261, 262, 264, 267, 268, 269, 270, 272, 276, 279, 280, 281, 292, 294, 302, 304, 305, 306, 307, 308, 310, 311, 314, 316, 318, 319, 321, 322, 323, 334, 335, 339, 340, 341, 342, 343, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 451, 469, 495, 496, 500, 503, 504, 512, 518, 540, 562, 569, 570, 572, 574, 575, 576, 577, 581, 584, 585, 587, 596, 599, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 627, 630, 631, 632, 633, 634, 635, 636, 637, 647, 654], "In": [4, 10, 34, 35, 60, 87, 93, 95, 96, 97, 98, 199, 200, 218, 219, 220, 223, 225, 255, 292, 299, 307, 311, 329, 334, 354, 355, 357, 359, 361, 500, 503, 518, 562, 567, 568, 576, 577, 606, 608, 626], "It": [4, 10, 17, 22, 23, 24, 34, 35, 77, 95, 96, 97, 98, 108, 110, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 255, 270, 298, 300, 329, 337, 341, 342, 352, 353, 354, 355, 356, 357, 358, 360, 362, 493, 500, 576, 577, 588, 598, 604, 606, 608, 632, 654], "Its": [77, 317, 504, 614], "NOT": [63, 65, 271, 330, 331, 332, 333], "No": [44, 45, 199, 292], "Not": [17, 22, 45, 275, 351, 354, 355, 356, 358, 359, 361, 500], "OR": [22, 62, 63, 65, 66, 68, 271, 330, 331, 332, 333], "On": 4, "One": [56, 57, 58, 93, 173, 177, 223, 309, 493, 576], "Ones": 39, "Or": [255, 616], "That": 336, "The": [3, 4, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 119, 124, 136, 139, 144, 146, 150, 155, 173, 174, 175, 179, 180, 181, 186, 188, 190, 192, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 271, 272, 274, 275, 276, 277, 278, 282, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 307, 308, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 339, 340, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 431, 436, 448, 451, 456, 458, 462, 467, 484, 485, 486, 487, 488, 489, 490, 491, 493, 495, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 521, 523, 524, 534, 539, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 585, 586, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 631, 632, 634, 636, 637, 638, 639, 647, 650, 654], "Then": [10, 46, 48, 336], "There": [10, 322, 627], "These": [4, 23, 193, 199, 200, 207, 336, 349, 504, 609, 619, 623, 647, 650], "To": [4, 217, 223, 225, 238, 487, 630], "With": [34, 35, 59, 91, 97, 98, 261, 304, 308, 321, 339, 345, 352, 353, 359, 361, 500, 606, 635], "_": [0, 260, 603, 616], "__array_interface__": 179, "__bool__": 647, "__dlpack__": 244, "__dlpack_device__": 244, "__main__": 0, "__name__": 0, "__sycl_usm_array_interface__": 47, "_core": 181, "_dtypes_list": 0, "_f": 308, "a1": [40, 41], "a2": [40, 41], "a_": [10, 308], "a_ax": [316, 612], "a_i": [320, 634], "a_k": 10, "a_m": 10, "a_resamp": 223, "ab": [6, 10, 13, 18, 272, 308], "abc": 199, "abcd": 200, "abl": 308, "about": [46, 48, 132, 231, 297, 444, 493, 575, 647], "abov": [3, 14, 15, 27, 28, 29, 30, 33, 49, 50, 55, 94, 102, 105, 215, 220, 225, 229, 268, 296, 311, 319, 335, 351, 572, 617, 618, 622], "absolut": [6, 12, 18, 21, 60, 211, 252, 272, 287, 312, 360, 362, 501, 570, 604, 630, 632, 654], "accept": [24, 199, 309, 518, 619, 623], "access": [10, 103, 104, 230, 336, 619, 623, 647], "accord": [17, 22, 59, 67, 73, 175, 190, 229, 231, 297, 298, 299, 300, 335, 341, 342, 357, 360, 362, 493, 572, 579, 604, 632], "accordingli": [93, 356, 358], "account": [567, 576], "accumul": [94, 95, 96, 97, 98, 199, 259, 319, 354, 355, 359, 361, 500, 606, 614], "accur": [179, 208, 255, 326, 328], "accuraci": [218, 219, 220, 223, 225], "achiev": 199, "aco": [6, 27], "acosh": [6, 28], "across": [106, 260, 354, 355, 359, 361], "activ": 4, "actual": [182, 259, 260, 292, 307], "ad": [18, 60, 188, 191, 200, 207, 223, 272, 295, 312, 329, 630, 650], "add": [6, 87, 174, 654], "addit": [24, 87, 94, 292, 357, 627], "address": 182, "adjac": [296, 319, 598, 630], "advanc": 199, "advers": 199, "advis": 4, "affect": [26, 106, 199, 230, 259, 260], "after": [173, 230, 486, 493, 537, 581], "after_1": 493, "after_n": 493, "ag": 174, "against": [18, 34, 35, 69, 70, 71, 77, 91, 254, 272, 304, 308, 310, 321, 339, 345, 352, 353, 359, 361, 500, 504, 606, 609], "ai": [3, 504, 609], "ai_max": 609, "ai_min": 609, "ainv": [301, 317], "al": 10, "algebra": [640, 650], "algorithm": [10, 36, 199, 200, 212, 218, 226, 596], "alia": [10, 14, 15, 19, 20, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 63, 64, 65, 67, 79, 80, 109, 202, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 231, 251, 271, 289, 347, 363, 491, 495, 498, 499, 518, 548, 551, 553, 567, 573, 576, 579, 585, 615, 625, 630, 636, 639], "alias": [9, 217, 218, 223, 225, 593], "align": [174, 183], "all": [4, 6, 9, 18, 21, 22, 23, 40, 41, 45, 52, 59, 78, 87, 91, 100, 107, 119, 122, 131, 146, 173, 177, 190, 192, 199, 200, 205, 206, 208, 210, 215, 216, 220, 221, 224, 225, 229, 230, 235, 236, 237, 245, 246, 248, 253, 255, 262, 265, 267, 285, 292, 294, 306, 310, 321, 322, 334, 339, 342, 345, 352, 353, 356, 358, 431, 434, 443, 458, 493, 500, 520, 569, 570, 581, 585, 588, 602, 606, 627, 629, 634, 636, 647, 654], "allclos": [6, 40, 272, 301, 310, 311, 313, 314, 318], "alloc": [3, 4, 23, 26, 39, 43, 44, 45, 46, 47, 48, 52, 59, 84, 94, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 232, 245, 246, 247, 248, 249, 250, 251, 253, 264, 265, 268, 279, 280, 322, 323, 334, 335, 336, 341, 342, 344, 357, 360, 362, 431, 436, 489, 490, 491, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 572, 602, 604, 617, 619, 623, 631, 632, 634, 638, 639], "allow": [42, 52, 97, 98, 101, 119, 152, 199, 259, 260, 276, 329, 336, 342, 431, 464, 608, 647], "almost": [37, 297, 619], "along": [3, 4, 17, 19, 20, 22, 23, 24, 25, 34, 35, 36, 42, 59, 78, 79, 80, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 115, 116, 117, 125, 126, 140, 142, 147, 148, 156, 159, 161, 166, 168, 171, 172, 173, 198, 209, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 235, 236, 237, 241, 242, 247, 253, 255, 261, 262, 268, 270, 308, 311, 316, 317, 318, 319, 320, 321, 322, 334, 335, 339, 340, 341, 342, 343, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 427, 428, 429, 437, 438, 452, 454, 459, 460, 468, 471, 473, 478, 480, 483, 493, 496, 500, 502, 503, 504, 567, 572, 574, 581, 582, 583, 585, 588, 595, 596, 599, 603, 604, 606, 608, 609, 612, 613, 614, 616, 619, 620, 623, 624, 627, 629, 630, 632, 634, 635, 636, 647], "alpha": [519, 524, 525, 541, 544], "alreadi": [4, 10, 44, 45, 56, 57, 58, 492, 493, 627], "also": [3, 4, 10, 14, 15, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 85, 87, 109, 155, 174, 180, 183, 192, 199, 203, 207, 215, 220, 224, 225, 226, 229, 238, 240, 241, 242, 243, 247, 249, 252, 255, 256, 257, 258, 259, 263, 272, 276, 287, 289, 290, 291, 292, 328, 329, 336, 340, 346, 347, 349, 350, 467, 487, 488, 498, 499, 556, 573, 579, 593, 605, 608, 625, 627, 647], "alter": 106, "altern": [3, 4, 17, 22, 95, 96, 97, 98, 110, 169, 337, 339, 341, 342, 345, 354, 355, 357, 359, 360, 361, 362, 481, 500, 604, 606, 632], "although": [21, 188, 219, 220, 221, 613], "alwai": [4, 10, 14, 15, 27, 28, 29, 30, 31, 33, 36, 43, 49, 50, 52, 53, 55, 106, 119, 172, 198, 211, 238, 244, 261, 298, 300, 360, 362, 431, 487, 576, 597, 604, 632, 635], "amax": [6, 61, 339], "ambigu": 647, "amin": [6, 345], "among": 198, "amplitud": 10, "an": [0, 3, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 89, 90, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 117, 118, 119, 120, 121, 124, 137, 140, 144, 146, 148, 151, 152, 155, 156, 157, 158, 162, 166, 169, 172, 173, 174, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 282, 285, 287, 288, 289, 290, 291, 294, 295, 296, 299, 302, 306, 307, 308, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 370, 429, 430, 431, 432, 433, 436, 449, 452, 456, 458, 460, 463, 464, 467, 468, 469, 470, 474, 478, 481, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 513, 520, 525, 526, 528, 537, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 647, 654], "anaconda": 3, "analog": [213, 215, 217, 219, 220, 222], "analysi": 10, "analyt": [3, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "angl": [6, 10, 14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 99, 100, 267, 506, 507, 569, 570, 630, 654], "ani": [3, 6, 17, 18, 23, 24, 39, 43, 44, 45, 46, 47, 48, 52, 69, 70, 71, 84, 102, 105, 107, 119, 144, 180, 182, 188, 192, 199, 200, 213, 215, 219, 220, 225, 229, 230, 250, 251, 253, 255, 260, 262, 274, 282, 283, 305, 318, 322, 334, 336, 356, 358, 431, 456, 493, 518, 562, 575, 593, 598, 631, 647], "anoth": [4, 86, 87, 124, 148, 209, 219, 220, 244, 436, 460, 496, 503, 582], "answer": 520, "anti": [106, 230, 296, 593], "anyth": 186, "ap": 302, "apart": 616, "api": [0, 2, 3, 6, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 93, 95, 96, 97, 98, 102, 103, 105, 106, 119, 124, 175, 181, 184, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 294, 296, 303, 304, 309, 310, 319, 320, 321, 322, 323, 334, 336, 337, 344, 431, 436, 489, 490, 491, 492, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 614, 617, 619, 623, 631, 633, 634, 638, 639], "appear": [207, 236, 237, 627], "append": [0, 6, 64, 101, 107, 198, 200, 207, 218, 219, 220, 270, 289, 296], "appli": [24, 25, 34, 35, 36, 59, 73, 101, 199, 316, 351, 568, 577, 578, 596, 612, 616], "applic": [10, 177, 593], "apply_along_axi": [6, 25, 650], "apply_over_ax": [6, 24, 650], "approach": [155, 188, 218, 219, 220, 467], "appropri": [4, 34, 35, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 254, 318, 352, 353, 356, 358, 514, 546, 549, 577, 608, 647], "approxim": [231, 616], "ar": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 110, 119, 145, 146, 155, 174, 180, 181, 183, 188, 190, 192, 193, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 252, 253, 255, 256, 257, 258, 259, 260, 263, 269, 271, 272, 275, 276, 277, 278, 287, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 314, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 457, 458, 467, 484, 485, 486, 487, 488, 493, 494, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 512, 514, 516, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 541, 543, 544, 546, 549, 550, 552, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 577, 579, 580, 581, 584, 585, 586, 587, 588, 590, 591, 592, 595, 596, 598, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 614, 616, 620, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 636, 637, 647, 654], "arang": [0, 6, 16, 25, 34, 35, 37, 42, 56, 57, 58, 59, 61, 77, 85, 100, 101, 102, 103, 104, 106, 109, 110, 128, 139, 172, 199, 203, 205, 206, 208, 209, 212, 234, 235, 238, 243, 251, 252, 253, 255, 259, 261, 268, 269, 270, 285, 286, 287, 288, 296, 303, 304, 308, 316, 319, 321, 322, 325, 326, 330, 331, 332, 333, 334, 336, 337, 339, 343, 345, 347, 350, 440, 451, 488, 491, 493, 496, 498, 499, 503, 507, 542, 573, 575, 576, 578, 581, 583, 588, 599, 605, 612, 614, 616, 619, 620, 623, 624, 625, 629, 635, 637, 639], "arbitrari": [51, 110, 182, 199, 269, 337, 578, 619, 623], "arbitrarili": 199, "arc": [21, 29, 31, 49, 53], "arcco": [6, 14, 15, 28, 29, 31, 32, 49, 53, 54, 89], "arccosh": [6, 14, 15, 27, 30, 33, 50, 55, 90], "arcsin": [6, 14, 27, 30, 31, 32, 49, 50, 53, 54, 592], "arcsinh": [6, 15, 28, 29, 33, 49, 50, 55, 594], "arctan": [6, 14, 21, 27, 29, 32, 33, 49, 53, 54, 55, 610], "arctan2": [6, 21, 29, 31, 49, 53, 54], "arctanh": [6, 15, 28, 30, 31, 32, 50, 53, 54, 55, 611], "area": 616, "arg": [24, 69, 70, 137, 285, 449, 513, 515], "arg1": 284, "arg2": 284, "argmax": [0, 6, 35, 352, 504, 609, 647], "argmin": [6, 34, 353, 609, 647], "argpartit": [6, 36, 504, 609, 647], "argsort": [6, 495, 504, 587, 596, 609, 615, 647], "argument": [0, 10, 12, 13, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 79, 80, 85, 89, 90, 99, 100, 109, 110, 137, 152, 169, 180, 200, 204, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 252, 258, 263, 264, 267, 271, 283, 284, 287, 288, 289, 294, 296, 303, 307, 308, 309, 316, 319, 320, 325, 326, 327, 328, 329, 336, 337, 340, 346, 347, 348, 350, 449, 464, 481, 485, 486, 493, 497, 498, 499, 501, 503, 506, 507, 569, 570, 571, 573, 576, 578, 579, 580, 586, 590, 591, 592, 593, 594, 598, 603, 605, 610, 611, 612, 616, 625, 626, 634, 647, 654], "argwher": [6, 487], "ari": [42, 56, 57, 58, 172, 198, 261, 599, 635], "arithmet": [59, 253, 341, 342, 357, 360, 362, 497, 604, 606, 632, 640, 650], "around": [6, 111, 253, 493, 503, 568, 584], "arr": [23, 24, 45, 101, 104, 186, 188, 260, 270, 505, 542, 567, 568, 620, 624, 629], "arr2": [188, 629], "arr_t": [52, 119, 431], "arrai": [0, 2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 173, 174, 184, 186, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 370, 427, 428, 429, 430, 431, 432, 433, 436, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 453, 455, 456, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 650, 654], "array2str": 6, "array_equ": [6, 270], "array_equiv": [6, 40], "array_lik": [23, 39, 43, 44, 45, 46, 47, 48, 51, 59, 84, 86, 102, 105, 198, 209, 250, 251, 253, 270, 274, 282, 316, 322, 334, 484, 493, 496, 503, 504, 508, 583, 589, 595, 608, 612, 631], "array_of_diagon": 106, "array_repr": 6, "array_split": [6, 79, 80, 599], "array_str": 6, "array_util": 72, "arrays_and_dtyp": 578, "art": 10, "asanyarrai": [6, 44, 45, 48, 575], "asarrai": [4, 6, 43, 45, 46, 48, 51, 484, 575, 595], "asarray_chkfinit": [6, 43, 44], "ascend": [298, 300, 587], "ascii": 177, "ascontiguousarrai": [6, 43, 44, 45, 48, 575], "asfarrai": [43, 44], "asfortranarrai": [6, 43, 44, 45, 46, 575], "asin": [6, 29], "asinh": [6, 30], "asmatrix": 6, "aspect": 188, "assembl": [79, 80, 173, 262, 585, 603, 629, 636], "assert": 342, "assign": [131, 155, 443, 467, 619, 623], "associ": [59, 259, 260, 647], "assum": [10, 59, 93, 200, 217, 223, 225, 296, 306, 310, 314, 336, 616], "astyp": [6, 87, 253, 487], "atan": [6, 31], "atan2": [6, 32], "atanh": [6, 33], "atleast_1d": [6, 57, 58, 207], "atleast_2d": [6, 56, 58, 207], "atleast_3d": [6, 56, 57, 207], "atol": [18, 272], "attain": 0, "attempt": [110, 307], "attribut": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 202, 231, 251, 266, 311, 491, 639, 640], "automat": [259, 260], "avail": [2, 3, 4, 10, 88, 92, 175, 204, 348, 352, 353, 356, 358, 359, 640, 647], "averag": [6, 24, 141, 341, 342, 357, 453, 606, 650], "avg": 59, "avoid": [39, 44, 57, 58, 217, 223, 225, 576], "aweight": 92, "ax": [17, 22, 24, 25, 34, 35, 59, 91, 93, 94, 107, 110, 162, 169, 199, 207, 213, 215, 216, 219, 220, 221, 224, 225, 227, 229, 235, 255, 269, 294, 304, 308, 313, 316, 317, 318, 319, 321, 335, 337, 338, 339, 341, 342, 345, 349, 352, 353, 356, 357, 358, 359, 360, 361, 362, 474, 481, 492, 493, 495, 500, 572, 577, 581, 582, 583, 602, 604, 606, 607, 612, 613, 614, 615, 627, 632, 634], "axi": [17, 19, 20, 22, 23, 24, 25, 34, 35, 36, 42, 59, 78, 79, 80, 91, 93, 94, 95, 96, 97, 98, 101, 106, 107, 113, 114, 115, 116, 117, 125, 126, 134, 140, 141, 142, 146, 147, 148, 151, 156, 157, 158, 159, 161, 166, 169, 171, 172, 173, 198, 199, 207, 209, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 241, 242, 247, 253, 255, 261, 262, 268, 270, 294, 302, 308, 316, 320, 321, 322, 334, 335, 337, 339, 340, 341, 342, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 429, 437, 438, 446, 452, 453, 454, 458, 459, 460, 463, 468, 469, 470, 471, 473, 478, 481, 483, 493, 494, 495, 496, 500, 502, 503, 504, 567, 572, 574, 576, 577, 581, 582, 583, 585, 588, 595, 596, 599, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 627, 629, 630, 632, 634, 635, 636, 647], "axis1": [106, 128, 162, 168, 440, 474, 480, 607, 614], "axis2": [106, 128, 162, 168, 440, 474, 480, 607, 614], "axisa": 93, "axisb": 93, "axisc": 93, "axiserror": [36, 596], "b": [10, 16, 18, 23, 24, 34, 35, 40, 41, 62, 68, 78, 79, 80, 86, 93, 96, 97, 98, 110, 129, 173, 174, 181, 187, 189, 192, 199, 200, 203, 245, 246, 256, 257, 262, 269, 270, 272, 276, 286, 290, 291, 294, 295, 302, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 330, 332, 337, 338, 339, 342, 345, 441, 486, 488, 492, 498, 499, 519, 578, 585, 598, 603, 612, 613, 621, 633, 634, 636, 654], "b_ax": [316, 612], "b_i": [320, 634], "back": [134, 247, 446, 567, 576, 577, 582, 621], "backend": [2, 254, 521, 523, 524, 534, 539, 555], "backward": [10, 52, 119, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 255, 431, 576, 581, 582], "bad": 530, "baltimor": 308, "bandlimit": 593, "bartlett": 6, "base": [0, 4, 60, 196, 199, 206, 209, 238, 253, 259, 260, 314, 324, 325, 326, 327, 328, 329, 334, 335, 337, 496, 498, 499, 503, 505, 634], "base_repr": [6, 60], "basic": [73, 199, 647, 650], "batch": 321, "bc": [295, 312], "bcde": 200, "becaus": [10, 17, 22, 217, 223, 225, 630, 647], "becom": [10, 169, 259, 481], "been": [173, 264, 504, 582, 609], "befor": [4, 23, 25, 36, 79, 80, 94, 146, 157, 198, 218, 219, 220, 236, 237, 270, 318, 335, 339, 345, 360, 362, 458, 469, 493, 500, 572, 581, 582, 596, 604, 606, 613, 632, 633], "before_1": 493, "before_n": 493, "begin": [198, 200, 253, 322, 334, 493, 588], "behav": [270, 323, 503], "behavior": [36, 124, 227, 319, 351, 436, 577, 596, 613], "behind": [146, 458], "being": [3, 87, 174, 241, 242, 340, 346, 493], "belong": [108, 259], "below": [0, 4, 9, 14, 27, 29, 30, 33, 49, 50, 55, 87, 102, 105, 192, 223, 296, 306, 308, 319, 617, 618, 622, 630, 647], "bessel": 264, "best": 200, "beta": [6, 529], "between": [18, 26, 42, 72, 73, 87, 107, 198, 231, 246, 249, 255, 269, 270, 272, 322, 334, 493, 535, 549, 598, 605, 616, 630], "beyond": [4, 581], "bia": 92, "big": [177, 192], "bin": [60, 61, 108, 212, 214, 228, 259, 260, 556], "bin_edg": [259, 260], "binari": [60, 62, 63, 64, 65, 66, 67, 68, 245, 246, 248, 249, 271, 289, 579], "binary_repr": [6, 62, 63, 64, 65, 66, 67, 68, 271, 289, 579], "bincount": [6, 108, 259], "binomi": [6, 537], "bins_0": 260, "bins_1": 260, "bit": [60, 62, 63, 64, 65, 66, 67, 68, 177, 180, 181, 189, 231, 266, 271, 289, 330, 332, 333, 359, 361, 579, 591, 640, 650], "bitwis": [62, 66, 68], "bitwise_and": [6, 63, 65, 66, 68, 271, 330], "bitwise_count": 6, "bitwise_invert": [6, 65, 271], "bitwise_left_shift": [6, 289], "bitwise_not": 6, "bitwise_or": [6, 62, 63, 65, 68, 271, 332], "bitwise_right_shift": [6, 579], "bitwise_xor": [6, 62, 63, 65, 66, 271, 333], "biufcmmosuv": 187, "blackman": 6, "block": [6, 79, 80, 173, 230, 262, 286, 585, 603, 629, 636], "bmat": 6, "bool": [9, 17, 18, 21, 22, 34, 35, 36, 39, 40, 41, 44, 47, 52, 59, 73, 86, 87, 91, 94, 97, 98, 101, 108, 119, 174, 200, 203, 230, 244, 253, 256, 257, 259, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 291, 292, 304, 306, 308, 310, 314, 321, 322, 334, 335, 339, 341, 342, 343, 345, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 431, 487, 488, 500, 572, 576, 588, 591, 596, 604, 606, 608, 627, 631, 632, 647], "bool_": 9, "boolean": [62, 63, 65, 66, 68, 86, 94, 97, 98, 101, 182, 183, 185, 187, 209, 238, 244, 264, 268, 271, 272, 275, 277, 278, 279, 280, 281, 285, 330, 332, 335, 336, 341, 342, 357, 359, 360, 362, 487, 496, 572, 604, 608, 632], "boolean_sequ": 285, "both": [10, 16, 18, 23, 32, 40, 41, 54, 59, 62, 64, 66, 67, 68, 77, 85, 93, 109, 110, 203, 219, 226, 238, 240, 241, 242, 243, 252, 256, 257, 258, 263, 269, 272, 286, 287, 288, 289, 290, 291, 303, 308, 316, 328, 329, 330, 332, 333, 337, 340, 346, 347, 350, 361, 486, 488, 498, 499, 573, 576, 579, 605, 612, 614, 619, 621, 623, 625, 633, 634, 637], "bound": [503, 504, 568, 587, 608, 609], "boundari": [255, 503, 568], "branch": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "briefli": 647, "broadcast": [16, 17, 22, 34, 35, 41, 59, 69, 70, 71, 77, 86, 91, 109, 199, 209, 238, 241, 242, 263, 279, 280, 303, 304, 308, 310, 321, 333, 335, 337, 339, 340, 341, 342, 345, 346, 350, 352, 353, 357, 359, 360, 361, 362, 498, 499, 500, 503, 504, 572, 574, 604, 605, 606, 609, 613, 625, 632, 634, 637], "broadcast_arrai": [6, 70, 71], "broadcast_shap": 6, "broadcast_to": [6, 69, 70, 613], "brought": 10, "buffer": [47, 95, 96, 97, 98, 111, 244, 245, 246, 248, 249, 323, 339, 345, 354, 355], "buffer_lik": 245, "buffererror": 244, "build": 650, "build_loc": 4, "built": [60, 174, 177, 178, 184, 193], "busday_count": 6, "busday_offset": 6, "byte": [6, 52, 72, 119, 138, 143, 174, 175, 177, 185, 187, 190, 192, 199, 245, 246, 323, 431, 450, 455], "byteord": 192, "byteswap": 6, "bz2": 323, "c": [2, 4, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 93, 98, 99, 100, 109, 110, 111, 119, 124, 134, 149, 152, 174, 175, 180, 181, 184, 187, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 250, 251, 252, 254, 256, 257, 258, 263, 264, 267, 269, 271, 275, 276, 277, 278, 286, 287, 288, 289, 290, 291, 295, 302, 307, 308, 312, 316, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 346, 347, 350, 431, 436, 446, 461, 464, 485, 486, 487, 488, 490, 491, 497, 498, 499, 501, 506, 507, 567, 568, 569, 571, 573, 575, 576, 577, 579, 580, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 612, 613, 625, 626, 627, 628, 634, 637, 638, 639, 654], "c_contigu": [46, 48, 124, 436, 575], "ca": 83, "calcul": [10, 12, 13, 16, 21, 32, 54, 59, 93, 94, 96, 98, 107, 109, 198, 199, 203, 205, 206, 208, 212, 221, 238, 239, 240, 243, 255, 260, 263, 297, 298, 299, 300, 302, 308, 310, 326, 328, 329, 335, 337, 341, 342, 347, 350, 357, 360, 362, 488, 493, 498, 499, 500, 572, 573, 604, 605, 625, 632, 633, 640, 654], "call": [10, 21, 23, 25, 32, 34, 35, 36, 46, 48, 54, 61, 174, 218, 219, 220, 223, 226, 247, 270, 297, 299, 307, 315, 336, 342, 370, 487, 602, 608, 613, 616, 654], "callabl": [247, 336], "cambridg": 10, "can": [0, 3, 4, 10, 16, 18, 23, 24, 25, 26, 32, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 84, 85, 87, 93, 102, 103, 105, 106, 109, 110, 119, 124, 129, 155, 157, 174, 180, 186, 188, 190, 192, 199, 200, 201, 202, 203, 210, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 228, 230, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 262, 263, 265, 268, 269, 271, 272, 274, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 296, 301, 302, 305, 306, 308, 310, 316, 318, 319, 322, 323, 328, 329, 330, 332, 333, 334, 336, 337, 340, 344, 346, 347, 350, 359, 361, 431, 436, 441, 467, 469, 485, 486, 487, 488, 489, 490, 491, 497, 498, 499, 504, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 567, 568, 573, 575, 576, 579, 598, 605, 608, 609, 612, 614, 616, 617, 619, 623, 624, 625, 627, 631, 633, 637, 638, 639, 647, 654], "can_cast": [6, 650], "cannot": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 79, 80, 352, 353, 576, 599, 602, 603], "capabl": [26, 39, 43, 44, 46, 48, 59, 211, 253, 322, 334, 337, 634], "cardin": 593, "cardinali": 593, "care": [26, 297], "cartesian": 343, "case": [4, 17, 22, 26, 34, 35, 39, 43, 44, 45, 46, 48, 59, 84, 93, 95, 96, 97, 98, 102, 105, 107, 137, 199, 200, 201, 202, 210, 214, 217, 222, 226, 228, 245, 246, 247, 248, 250, 251, 253, 255, 265, 297, 311, 314, 316, 322, 323, 329, 334, 344, 354, 355, 359, 361, 449, 489, 490, 491, 500, 567, 576, 577, 606, 612, 617, 630, 631, 638, 639, 647], "cast": [17, 22, 52, 73, 79, 80, 86, 94, 95, 96, 97, 98, 119, 199, 238, 262, 270, 297, 335, 337, 341, 342, 351, 354, 355, 357, 359, 360, 361, 362, 431, 500, 572, 585, 603, 604, 606, 632, 634, 636], "cat": [520, 537], "cauchi": 556, "cbrt": [6, 600], "cdef": 200, "cdot": [316, 320, 612, 634], "cdoubl": 9, "ceil": [6, 38, 232, 239, 240, 580, 584, 626], "center": [213, 214, 215, 216, 220, 221, 228], "central": [255, 538, 539], "certain": [188, 336], "ch": 10, "chain": [110, 129, 199, 200, 441], "chang": [25, 52, 84, 93, 119, 134, 160, 169, 188, 192, 199, 209, 354, 355, 431, 446, 472, 481, 485, 496, 497, 503, 504, 505, 567, 576, 577, 582, 630, 650], "charact": [177, 178, 187, 246], "check": [17, 22, 43, 44, 45, 73, 217, 274, 276, 282, 292, 310, 313, 647], "check_valid": 536, "chi": [522, 538], "chisquar": 6, "choic": [6, 76, 120, 212, 213, 215, 218, 219, 220, 224, 225, 227, 229, 298, 300, 432], "choicelist": 588, "choleski": 6, "choos": [6, 21, 29, 31, 49, 53, 200, 588, 637, 647], "chosen": [37, 259, 627, 637], "chunk": 61, "circ": 654, "circl": [312, 616], "clamp": [503, 504, 608, 609], "clariti": 230, "class": [3, 4, 111, 174, 233, 245, 246, 247, 249, 268, 323, 508, 514, 546, 617, 650], "classic": 199, "clear": [188, 288, 647], "clip": [6, 503, 504, 568, 608, 609, 647], "close": [14, 15, 21, 27, 28, 29, 31, 49, 51, 52, 53, 119, 199, 207, 267, 322, 431, 514, 518, 546, 569, 570, 580, 584, 616], "closer": 626, "cloud": 3, "cmake": 4, "co": [6, 14, 15, 27, 28, 29, 49, 90, 299, 592, 610, 616], "coars": [309, 492], "code": [47, 177, 178, 187, 192, 284, 575], "codeplai": 4, "coeffici": [87, 302, 313, 318], "coerc": [47, 245, 246, 247, 248, 249, 323], "coin": 520, "col": 268, "collaps": [134, 446, 627], "column": [6, 43, 44, 45, 46, 48, 51, 52, 78, 79, 80, 87, 95, 96, 97, 98, 106, 119, 173, 210, 230, 236, 237, 255, 261, 262, 265, 297, 298, 302, 307, 311, 314, 431, 567, 568, 575, 585, 599, 603, 617, 619, 623, 628, 631, 636], "column_stack": [6, 79, 80, 173, 262, 585, 603, 636], "com": 4, "combin": [0, 174, 183, 207, 215, 220, 225, 229, 255], "combinatori": 200, "come": 627, "comma": [174, 199], "command": 4, "common": [218, 219, 220, 252, 287, 316, 487, 612], "common_typ": 6, "compani": [520, 537], "compar": [18, 36, 40, 203, 241, 242, 260, 272, 309, 340, 346, 596], "comparison": [2, 203, 256, 257, 290, 291, 488, 640, 650], "compat": [3, 4, 10, 17, 22, 52, 59, 93, 95, 96, 97, 98, 106, 119, 294, 296, 303, 304, 309, 310, 319, 320, 321, 335, 337, 341, 342, 356, 357, 358, 360, 362, 431, 492, 572, 576, 604, 614, 632, 633, 634, 650], "compil": [4, 174, 175, 184, 254, 575], "complement": [60, 630], "complementari": [240, 630], "complet": [3, 4, 200, 246, 247, 311, 582, 647], "complex": [10, 12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 39, 40, 49, 50, 53, 54, 55, 73, 94, 110, 122, 123, 187, 200, 204, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 231, 238, 241, 242, 267, 273, 274, 281, 282, 288, 297, 298, 299, 300, 303, 311, 312, 314, 320, 335, 337, 340, 346, 351, 360, 362, 434, 435, 501, 569, 570, 572, 597, 604, 627, 632, 633, 634, 647, 650], "complex128": [9, 59, 578], "complex64": [9, 59, 72, 156, 238, 468], "compliant": 111, "complic": [199, 654], "compon": [10, 40, 93, 216, 221, 228, 231, 267, 306, 316, 351, 569, 612], "compos": 85, "composit": [96, 98, 286, 606, 616], "compress": [6, 209, 588, 608, 647], "comput": [4, 10, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 59, 61, 62, 63, 65, 66, 68, 74, 81, 82, 87, 89, 90, 94, 95, 96, 97, 98, 107, 108, 199, 205, 206, 207, 208, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 239, 255, 256, 257, 258, 259, 260, 267, 268, 271, 286, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 330, 331, 332, 333, 335, 337, 341, 342, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 485, 492, 497, 501, 569, 571, 572, 573, 580, 584, 586, 590, 591, 592, 594, 600, 604, 606, 610, 611, 612, 616, 619, 623, 632, 634], "compute_uv": [293, 314, 315], "concat": [6, 80], "concaten": [6, 78, 79, 173, 262, 270, 585, 599, 603, 609, 629, 636], "concept": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639, 647], "cond": [6, 301], "condit": [37, 52, 110, 119, 209, 293, 301, 307, 431, 487, 496, 503, 505, 588, 637], "condlist": 588, "confus": 243, "conj": [6, 82, 217, 267, 292, 297, 501], "conjug": [6, 10, 81, 110, 122, 223, 226, 267, 292, 297, 298, 299, 300, 303, 320, 337, 434, 501, 633, 634], "consecut": [107, 198, 255], "conserv": 343, "consid": [18, 26, 39, 40, 43, 44, 46, 48, 200, 228, 253, 272, 275, 298, 300, 306, 322, 334, 337, 514, 546, 577, 598, 627, 634], "consist": [40, 41, 198, 212, 213, 215, 218, 219, 220, 224, 225, 227, 229, 246, 260, 316, 318, 322, 609, 612], "constant": [9, 181, 255, 493], "constant_valu": 493, "constraint": 59, "construct": [43, 44, 45, 76, 102, 105, 106, 120, 174, 210, 245, 246, 247, 248, 249, 265, 285, 288, 323, 344, 432, 489, 588, 593, 613, 614, 637, 640], "constructor": 647, "consum": [143, 455], "contain": [10, 12, 13, 14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 45, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 85, 86, 87, 89, 90, 93, 94, 106, 109, 152, 174, 182, 203, 205, 206, 208, 213, 214, 215, 218, 223, 226, 228, 234, 238, 239, 240, 241, 242, 243, 244, 249, 254, 255, 256, 257, 259, 260, 263, 267, 268, 271, 289, 290, 291, 294, 296, 298, 311, 314, 316, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 338, 340, 341, 346, 347, 350, 352, 353, 356, 357, 358, 360, 362, 464, 485, 487, 488, 495, 497, 498, 499, 501, 508, 569, 571, 572, 573, 579, 580, 584, 586, 590, 591, 592, 593, 594, 600, 601, 604, 605, 610, 611, 612, 615, 619, 620, 623, 624, 625, 626, 632, 647], "content": [46, 118, 342, 430, 555], "context": 10, "contigu": [43, 44, 45, 46, 48, 72, 110, 149, 199, 276, 307, 461, 567, 575, 576], "continu": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 516, 550, 593], "contourf": 343, "contract": [199, 200, 316, 612], "contrari": [294, 296, 303, 319, 320], "contrast": [199, 503], "contribut": [10, 59, 259, 260], "control": [4, 52, 73, 79, 80, 86, 119, 199, 262, 337, 431, 585, 603, 634, 636], "conveni": [129, 169, 441, 481, 518], "convent": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 110, 199, 200, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 269, 303, 316, 318, 337, 492, 612, 634], "convers": [52, 119, 199, 431, 640], "convert": [23, 34, 35, 39, 43, 44, 45, 46, 47, 48, 51, 56, 57, 58, 84, 99, 100, 102, 105, 174, 199, 200, 207, 250, 251, 253, 270, 274, 282, 322, 334, 506, 507, 568, 575, 628, 630, 631], "convolut": [10, 83, 88], "convolv": [6, 88], "coolei": 10, "coordin": [91, 247, 255, 268, 285, 343, 568, 628], "copi": [6, 23, 26, 36, 39, 40, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 86, 101, 102, 103, 105, 106, 118, 119, 134, 137, 146, 152, 155, 174, 201, 202, 209, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 270, 322, 323, 334, 336, 342, 343, 344, 351, 370, 430, 431, 446, 449, 458, 464, 467, 489, 490, 491, 494, 496, 497, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 567, 575, 576, 577, 587, 596, 602, 617, 618, 619, 622, 623, 631, 638, 639, 647], "copysign": [6, 485, 497], "copyto": [6, 124, 209, 436, 496], "core": [3, 199, 634, 647], "corner": [213, 215, 219, 220, 493], "corrcoef": [6, 92], "correct": [12, 13, 14, 15, 16, 21, 23, 27, 28, 29, 30, 31, 32, 33, 37, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 79, 80, 81, 82, 85, 89, 90, 99, 100, 109, 203, 205, 206, 208, 211, 217, 223, 225, 232, 238, 239, 240, 241, 242, 243, 252, 256, 257, 258, 263, 264, 267, 271, 275, 277, 278, 287, 288, 289, 290, 291, 313, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340, 346, 347, 350, 485, 486, 488, 497, 498, 499, 501, 506, 507, 569, 571, 573, 575, 579, 580, 584, 586, 590, 591, 592, 593, 594, 598, 600, 601, 603, 605, 610, 611, 625, 626], "correctli": [21, 29, 31, 34, 35, 49, 53, 91, 304, 308, 321, 339, 345, 352, 353, 359, 361, 487, 500, 606], "correl": [6, 87, 650], "correspond": [6, 10, 26, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 52, 77, 79, 80, 84, 99, 100, 102, 103, 105, 106, 119, 124, 130, 172, 201, 202, 210, 213, 214, 215, 217, 219, 220, 223, 224, 225, 226, 227, 228, 229, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 261, 265, 268, 285, 294, 297, 298, 316, 320, 322, 323, 334, 336, 337, 344, 431, 436, 442, 489, 490, 491, 495, 506, 507, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 581, 588, 589, 599, 604, 612, 615, 616, 617, 619, 623, 631, 632, 634, 635, 638, 639, 647], "correspondingli": [10, 599], "cosh": [6, 15, 28, 89, 594, 611], "cosin": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 592, 594, 610, 611], "cost": [199, 200], "costli": 200, "could": [157, 217, 223, 225, 469], "count": [17, 22, 61, 91, 108, 182, 200, 235, 245, 246, 248, 249, 255, 259, 260, 487, 500, 520, 595, 606, 627, 640, 650], "count_nonzero": [6, 487], "counterclockwis": [236, 237, 583], "counterpart": [10, 217, 223, 225, 647], "cov": [6, 87, 536], "covari": [87, 92], "cover": [619, 623, 650], "cpu": [4, 26, 39, 43, 44, 45, 46, 48, 84, 88, 92, 102, 105, 201, 202, 204, 210, 214, 228, 245, 246, 247, 248, 250, 251, 253, 265, 322, 323, 334, 344, 348, 359, 489, 490, 491, 617, 631, 638, 639], "creat": [3, 4, 26, 39, 41, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 104, 105, 106, 119, 124, 174, 200, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 351, 431, 436, 489, 490, 491, 493, 504, 508, 513, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 614, 617, 619, 620, 623, 624, 631, 638, 639, 647, 650], "creation": [188, 200, 640, 647, 650, 654], "crop": [212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229], "cross": [6, 88, 285], "csingl": 9, "ct": 10, "ctype": 575, "cube": [74, 238, 600], "cubic": 200, "cuda": 4, "cumprod": [6, 97, 354, 647], "cumsum": [6, 98, 107, 355, 606, 616, 647], "cumul": [94, 95, 96, 97, 98, 107, 125, 126, 354, 355, 437, 438, 606, 616], "cumulative_prod": [6, 95], "cumulative_sum": [6, 96], "cupi": [2, 640], "current": [10, 12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 85, 89, 90, 99, 100, 109, 155, 188, 192, 200, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 246, 252, 258, 260, 263, 265, 271, 287, 288, 289, 325, 326, 327, 328, 329, 340, 346, 347, 348, 350, 467, 485, 486, 493, 497, 498, 499, 501, 506, 507, 571, 573, 575, 579, 580, 586, 590, 591, 592, 594, 598, 605, 610, 611, 625, 626], "curv": 616, "custom": 647, "customarili": 10, "cut": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 302, 634], "cutoff": 310, "cycl": [214, 228, 285, 577], "cyclic": 503, "cython": 4, "d": [0, 17, 22, 24, 25, 26, 59, 78, 79, 80, 87, 95, 96, 102, 103, 104, 105, 106, 110, 134, 173, 178, 210, 214, 216, 221, 228, 230, 234, 236, 237, 249, 261, 262, 265, 269, 285, 295, 296, 298, 299, 303, 307, 308, 312, 316, 319, 337, 343, 354, 355, 361, 446, 487, 498, 499, 500, 503, 523, 567, 576, 585, 587, 589, 603, 606, 608, 612, 613, 614, 621, 627, 631, 634, 636, 647], "d0": [515, 545, 547], "d1": [515, 547], "d3": 103, "data": [1, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99, 100, 102, 105, 108, 109, 110, 118, 119, 152, 169, 174, 175, 177, 179, 180, 181, 182, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 217, 223, 225, 231, 232, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 275, 277, 278, 279, 280, 282, 287, 288, 289, 290, 291, 296, 302, 309, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 346, 347, 348, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 430, 431, 464, 481, 484, 485, 486, 488, 490, 491, 496, 497, 498, 499, 501, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 598, 600, 601, 602, 603, 604, 605, 609, 610, 611, 614, 617, 625, 626, 632, 634, 636, 637, 638, 639, 640, 650], "datatyp": [188, 306], "date": 4, "datetim": 187, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [92, 159, 171, 360, 362, 471, 483, 604, 632], "decai": 531, "decim": [38, 60, 153, 231, 232, 465, 580, 584], "decomposit": [292, 301, 306, 310, 314, 315, 650], "decompress": 323, "decreas": [108, 616], "decreasingli": [10, 213, 215, 219, 220], "deem": 244, "def": [0, 24, 493], "default": [3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 119, 124, 134, 192, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 304, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 446, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 512, 518, 522, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 559, 562, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 647], "default_rng": 6, "defg": 200, "defici": 306, "defin": [10, 32, 54, 93, 101, 180, 181, 184, 202, 212, 241, 242, 251, 258, 259, 260, 270, 294, 296, 308, 320, 340, 346, 351, 491, 497, 570, 583, 634, 639, 647], "definit": [93, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 239, 292, 616], "deg": [21, 507], "deg2rad": [6, 506, 507, 630], "degre": [6, 21, 99, 360, 362, 506, 507, 560, 583, 604, 630, 632, 654], "del": 654, "delet": [6, 23, 270], "delta": [10, 360, 362, 604, 630, 632], "demonstr": [0, 4, 181], "denot": [264, 320, 634], "dens": [268, 285, 344], "densiti": 259, "depend": [4, 25, 37, 106, 211, 217, 223, 225, 296, 298, 302, 308, 311, 313, 314, 322, 359, 361, 588, 637], "depth": [78, 79, 80, 172, 173, 262, 585, 599, 603, 636], "deriv": 255, "descend": 314, "describ": [94, 174, 180, 181, 191, 194, 196, 308, 319, 335, 572, 650], "descript": [94, 179, 218, 220, 259, 335, 572, 647], "design": [10, 60], "desir": [26, 39, 43, 44, 46, 48, 51, 71, 201, 202, 210, 218, 219, 220, 250, 251, 253, 265, 322, 334, 490, 491, 567, 613, 617, 638, 639], "destin": [79, 80, 262, 349, 503, 504, 585, 603, 609, 636], "destruct": 654, "det": [6, 312], "detail": [38, 213, 215, 219, 220, 224, 225, 227, 229, 244, 304, 321, 584, 619, 620, 623, 624, 627, 647], "determin": [14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 74, 85, 89, 90, 99, 100, 109, 205, 206, 208, 240, 241, 242, 243, 246, 247, 249, 263, 289, 295, 296, 302, 311, 312, 319, 324, 325, 326, 327, 328, 329, 337, 340, 346, 347, 350, 486, 498, 499, 506, 507, 568, 571, 573, 579, 586, 588, 590, 592, 593, 594, 598, 600, 601, 605, 610, 611, 614, 625, 626, 628, 634], "devel": 4, "develop": [3, 4], "deviat": [159, 341, 357, 360, 362, 471, 515, 533, 540, 604, 632], "devic": [0, 2, 3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 59, 84, 94, 102, 103, 105, 111, 119, 124, 167, 199, 201, 202, 210, 211, 214, 228, 232, 244, 245, 246, 247, 248, 249, 250, 251, 253, 264, 265, 268, 322, 323, 334, 335, 336, 337, 341, 342, 344, 357, 360, 362, 431, 436, 479, 489, 490, 491, 508, 510, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 572, 602, 604, 617, 619, 623, 631, 632, 634, 638, 639], "df": [522, 538, 560, 561], "dfden": [526, 539], "dfnum": [526, 539], "dft": [10, 212, 217, 218, 222, 223, 226], "di": [103, 104], "diag": [6, 24, 105, 106, 199, 210, 236, 237, 265, 297, 299, 314, 588, 614], "diag_indic": [6, 104, 230], "diag_indices_from": [6, 103, 230], "diagflat": [6, 102, 106, 614], "diagon": [6, 102, 103, 104, 105, 168, 199, 210, 230, 265, 292, 298, 299, 300, 319, 336, 480, 588, 614, 617, 618, 619, 620, 622, 623, 624, 647], "dice": 535, "dict": [174, 493], "dictionari": [174, 180, 188], "diff": [6, 96, 98, 198, 255, 259], "differ": [3, 10, 18, 25, 26, 39, 42, 43, 44, 45, 46, 48, 59, 84, 94, 96, 97, 98, 102, 105, 107, 124, 174, 178, 188, 192, 193, 198, 201, 202, 210, 213, 214, 218, 219, 221, 224, 227, 228, 231, 236, 237, 238, 245, 246, 247, 248, 250, 251, 253, 255, 265, 270, 272, 300, 308, 319, 322, 323, 334, 335, 337, 344, 436, 489, 490, 491, 496, 498, 499, 504, 572, 577, 583, 605, 609, 617, 619, 623, 630, 631, 638, 639, 650], "differenti": 593, "digit": [6, 10, 61, 231, 259], "dim": [18, 568], "dimens": [17, 22, 23, 24, 25, 34, 35, 39, 56, 57, 58, 59, 78, 79, 80, 86, 91, 92, 93, 97, 98, 103, 106, 107, 134, 139, 144, 155, 172, 176, 191, 196, 207, 219, 220, 232, 236, 237, 255, 262, 268, 269, 285, 294, 296, 304, 306, 308, 311, 315, 316, 319, 320, 321, 335, 338, 339, 341, 342, 343, 344, 345, 349, 352, 353, 356, 357, 358, 359, 360, 361, 362, 446, 451, 456, 467, 484, 487, 489, 500, 504, 516, 518, 548, 550, 551, 553, 567, 568, 572, 576, 583, 589, 599, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 619, 620, 623, 624, 627, 628, 629, 632, 634, 635, 647, 650], "dimension": [2, 4, 24, 36, 61, 83, 88, 91, 94, 97, 98, 101, 103, 104, 105, 106, 107, 108, 111, 158, 198, 199, 212, 213, 215, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 245, 246, 248, 255, 261, 268, 270, 285, 294, 302, 309, 311, 317, 318, 335, 339, 343, 344, 345, 352, 353, 356, 358, 360, 362, 470, 484, 489, 492, 500, 572, 596, 604, 606, 608, 613, 616, 627, 632, 633, 635, 640], "direct": [10, 93, 107, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 236, 237, 255, 294, 486, 583], "directli": [179, 180, 247, 268, 334, 487, 609], "directori": 254, "dirichlet": 6, "discard": 626, "discont": 630, "discontinu": 630, "discret": [3, 83, 88, 96, 98, 107, 198, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 255, 514, 518, 593, 640, 650], "dispers": 563, "displac": [160, 472], "disregard": 577, "distanc": [255, 598], "distinct": [241, 242, 340, 346, 577], "distinguish": 182, "distribut": [3, 4, 334, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 650], "divid": [6, 42, 172, 173, 240, 243, 261, 347, 573, 599, 625, 635], "divis": [109, 240, 243, 347, 498, 499, 573, 599, 625, 626], "divisor": [252, 287, 360, 362, 604, 632], "divmod": [6, 647], "dlpack": 244, "dmlc": 244, "dn": [515, 545, 547], "do": [3, 4, 189, 336, 342, 520, 582, 616], "docstr": 647, "document": [0, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 166, 168, 169, 171, 172, 173, 181, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 446, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647], "doe": [23, 26, 42, 73, 101, 137, 199, 209, 211, 226, 241, 242, 244, 270, 311, 351, 354, 355, 449, 496, 577, 599, 608], "domain": [10, 217, 222], "done": [3, 52, 119, 199, 318, 431, 627, 630], "dot": [6, 199, 200, 269, 292, 299, 301, 307, 310, 311, 313, 314, 316, 317, 318, 320, 337, 612, 633, 634], "doubl": [9, 316, 531, 612], "down": 237, "dp": [109, 295, 298, 312, 313, 498, 499, 605, 625], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 111, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 352, 353, 356, 358, 359, 431, 436, 489, 490, 491, 502, 508, 510, 511, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "dpnp": [0, 2, 3, 4, 10, 640, 647, 650, 651, 654], "dpnp_arrai": [26, 39, 43, 44, 45, 46, 48, 52, 84, 102, 103, 105, 201, 202, 210, 214, 228, 231, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 266, 268, 322, 323, 334, 336, 344, 363, 431, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639, 640], "dpnp_iface_arraycr": [344, 489], "draw": [512, 513, 514, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 546, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565], "drawn": [512, 514, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 541, 543, 544, 546, 549, 552, 558, 559, 560, 561, 562, 563, 564, 565, 566, 588], "drill": [520, 537], "driver": 2, "drop": [3, 188], "dsplit": [6, 79, 80, 173, 599], "dst": 86, "dstack": [6, 78, 79, 80, 262, 585, 599, 603, 636], "dt": [177, 179, 180, 184, 186, 187, 188, 190, 193, 194, 616], "dt2": 188, "dtype": [0, 9, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 80, 81, 82, 85, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 109, 111, 119, 125, 126, 141, 147, 156, 159, 161, 168, 171, 199, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 262, 263, 265, 266, 268, 270, 271, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 307, 310, 314, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 437, 438, 453, 459, 468, 471, 473, 480, 483, 485, 486, 488, 490, 491, 497, 498, 499, 500, 501, 506, 507, 512, 514, 518, 540, 546, 562, 571, 572, 573, 575, 578, 579, 580, 584, 585, 586, 590, 591, 592, 593, 594, 597, 598, 600, 601, 603, 604, 605, 606, 608, 610, 611, 614, 617, 618, 622, 625, 626, 632, 634, 635, 636, 638, 639, 647], "due": [226, 654], "dump": 6, "dx": [255, 616], "dy": 255, "dz": 255, "e": [9, 10, 15, 28, 30, 50, 64, 94, 95, 97, 106, 179, 201, 202, 207, 210, 213, 217, 218, 219, 220, 223, 225, 226, 238, 246, 250, 251, 255, 265, 289, 297, 312, 317, 321, 324, 342, 490, 491, 518, 570, 574, 577, 607, 617, 629, 638, 639], "ea": 200, "each": [0, 12, 13, 14, 15, 16, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 42, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 81, 82, 85, 87, 89, 90, 95, 96, 97, 98, 103, 106, 108, 109, 153, 172, 178, 180, 193, 200, 203, 205, 206, 208, 213, 215, 217, 219, 220, 223, 224, 225, 227, 229, 236, 237, 238, 239, 240, 243, 247, 255, 256, 257, 259, 260, 261, 264, 267, 271, 275, 277, 278, 285, 289, 290, 291, 294, 297, 298, 299, 300, 302, 315, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 347, 349, 350, 351, 465, 485, 487, 488, 493, 497, 498, 499, 501, 504, 520, 537, 568, 569, 571, 573, 574, 577, 579, 580, 581, 584, 586, 590, 591, 592, 594, 599, 600, 601, 603, 605, 609, 610, 611, 613, 616, 619, 620, 623, 624, 625, 626, 627, 628, 634, 635, 647], "easier": 608, "easiest": [4, 493], "easili": [0, 260], "edg": [77, 108, 259, 260, 493], "edge_ord": 255, "ediff1d": [6, 107, 255], "effect": [200, 238, 241, 242, 340, 346, 498, 499, 630], "effici": [10, 212, 226, 246, 306, 310, 314], "efgh": 200, "eig": [6, 298, 299, 300], "eigenvalu": [297, 298, 299, 300, 650], "eigenvector": [297, 298, 299, 300], "eigh": [6, 297, 299, 300], "eight": 308, "eigval": [6, 297, 298, 300], "eigvalsh": [6, 297, 298, 299], "einstein": [110, 199, 200, 269, 316, 318, 337, 492, 612, 634], "einsum": [6, 110, 200, 269, 316, 318, 337, 492, 612, 634], "einsum_path": [6, 199], "either": [25, 40, 41, 48, 59, 93, 94, 106, 177, 188, 213, 215, 217, 219, 220, 223, 225, 227, 229, 230, 255, 264, 269, 296, 298, 300, 308, 311, 335, 352, 353, 356, 358, 359, 361, 568, 572, 577, 587, 588, 609, 616], "element": [4, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 45, 49, 50, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 85, 86, 89, 90, 94, 95, 96, 97, 98, 101, 104, 106, 107, 108, 109, 113, 114, 122, 123, 125, 126, 130, 131, 134, 137, 138, 141, 143, 145, 146, 151, 152, 153, 154, 156, 159, 160, 166, 171, 174, 176, 180, 186, 198, 200, 203, 205, 206, 208, 209, 210, 211, 213, 215, 219, 220, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 291, 292, 294, 296, 299, 305, 316, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 343, 345, 346, 347, 348, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 425, 426, 434, 435, 437, 438, 442, 443, 446, 449, 450, 453, 455, 457, 458, 463, 464, 465, 466, 468, 471, 472, 478, 483, 485, 486, 487, 488, 496, 497, 498, 499, 500, 501, 503, 505, 567, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 604, 605, 606, 608, 610, 611, 612, 613, 614, 616, 618, 620, 622, 624, 625, 626, 627, 628, 630, 632, 634, 637, 647, 650, 654], "element_count": [156, 468, 595], "elimin": 24, "ellipsi": 199, "els": [0, 177, 192, 312, 368], "elsewher": [210, 265, 617, 637], "empti": [4, 6, 39, 131, 202, 213, 215, 219, 220, 224, 225, 227, 229, 246, 250, 251, 302, 443, 490, 491, 493, 496, 599, 638, 639, 647], "empty_lik": [6, 39, 201, 251, 491, 639], "enabl": [230, 306, 310, 314], "encount": [354, 355, 356, 358, 588], "end": [23, 26, 72, 101, 106, 196, 198, 200, 218, 253, 270, 322, 334, 493], "end_tim": 0, "end_valu": 493, "endian": [177, 192], "endpoint": [26, 253, 322, 334, 616], "engin": 554, "enlarg": 577, "enough": 259, "ensur": 575, "entir": [59, 94, 217, 259, 260, 335, 341, 356, 357, 358, 360, 362, 493, 572, 604, 632], "entiti": 577, "entri": [42, 101, 158, 172, 180, 201, 209, 217, 223, 225, 230, 235, 236, 237, 261, 470, 599, 602, 634, 635], "enumer": 244, "env": 4, "environ": 4, "ep": [231, 306, 310, 486, 570, 598], "epsilon": [306, 570], "epsneg": 231, "equal": [6, 17, 18, 22, 24, 36, 40, 41, 42, 59, 61, 64, 67, 79, 80, 88, 92, 96, 98, 146, 172, 210, 253, 255, 256, 257, 259, 260, 261, 262, 272, 274, 282, 284, 289, 290, 291, 296, 305, 310, 311, 318, 322, 334, 347, 458, 488, 493, 518, 528, 562, 573, 579, 580, 584, 585, 590, 593, 596, 599, 602, 603, 617, 619, 623, 629, 635, 636], "equal_nan": [18, 40, 272, 627], "equat": [302, 313, 317, 318, 650], "equiv": [52, 73, 79, 80, 86, 119, 199, 262, 305, 337, 431, 585, 603, 634, 636], "equival": [10, 16, 17, 19, 20, 22, 24, 25, 34, 35, 36, 38, 41, 59, 60, 84, 93, 94, 99, 100, 101, 109, 110, 113, 114, 128, 144, 152, 155, 169, 172, 173, 200, 207, 209, 234, 241, 242, 243, 261, 285, 315, 316, 317, 321, 335, 338, 347, 350, 370, 425, 426, 440, 456, 464, 467, 481, 484, 487, 492, 495, 497, 506, 507, 514, 546, 572, 573, 576, 583, 584, 589, 596, 605, 606, 608, 612, 615, 625, 627, 629, 634, 635, 647, 654], "error": [60, 94, 172, 199, 204, 217, 222, 261, 297, 335, 568, 572, 599, 602, 635, 640, 647], "essenti": 4, "estim": [92, 260, 520, 537, 616], "et": 10, "etc": [10, 39, 44, 184, 213, 215, 219, 220, 224, 225, 227, 229, 537], "euclidean": 302, "euler_gamma": 9, "evalu": [17, 18, 22, 113, 114, 199, 200, 203, 264, 274, 276, 282, 316, 318, 343, 425, 426, 492, 588, 612], "even": [10, 139, 177, 214, 216, 217, 218, 221, 222, 223, 225, 226, 228, 274, 276, 282, 342, 451, 493, 580, 584], "evenli": [26, 253, 322, 334, 580, 616], "event": 329, "everi": [60, 72, 225, 504, 609], "everywher": [223, 593], "exact": [209, 307, 496], "exactli": [10, 51, 249, 514, 546, 588], "examin": 302, "exampl": [2, 3, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 124, 128, 129, 131, 134, 136, 137, 139, 144, 146, 150, 152, 155, 156, 157, 160, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 440, 441, 443, 446, 448, 449, 451, 456, 458, 462, 464, 467, 468, 469, 472, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647, 654], "exce": [329, 599], "except": [4, 12, 13, 14, 15, 16, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 89, 90, 99, 100, 107, 108, 109, 110, 119, 137, 201, 202, 203, 205, 206, 208, 210, 211, 224, 225, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 261, 262, 263, 265, 271, 275, 277, 278, 287, 288, 289, 290, 291, 307, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 345, 346, 347, 350, 356, 357, 358, 359, 360, 361, 362, 431, 449, 485, 486, 488, 490, 491, 497, 498, 499, 500, 501, 506, 507, 567, 571, 573, 574, 575, 579, 580, 586, 590, 591, 592, 594, 596, 598, 599, 600, 601, 604, 605, 606, 610, 611, 625, 626, 632, 634, 638, 639, 650], "exclud": [12, 13, 23, 322, 518, 562], "exclus": [514, 546], "execut": [3, 4, 24, 43, 44, 45, 88, 92, 204, 247, 348, 359, 521, 523, 524, 534, 539, 555, 654], "executor": 0, "exist": [10, 78, 79, 80, 173, 179, 207, 244, 262, 270, 585, 599, 603, 629, 636, 650], "exp": [6, 10, 206, 208, 212, 312, 326, 328, 335], "exp2": [6, 205, 208], "expand": [107, 207], "expand_dim": [6, 34, 35], "expect": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 81, 82, 85, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 109, 110, 188, 203, 205, 206, 208, 211, 223, 232, 238, 239, 240, 241, 242, 243, 252, 256, 257, 258, 263, 264, 267, 271, 272, 275, 277, 278, 287, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 340, 341, 342, 345, 346, 347, 350, 354, 355, 357, 359, 360, 361, 362, 485, 486, 488, 497, 498, 499, 500, 501, 506, 507, 569, 571, 572, 573, 579, 580, 584, 586, 590, 591, 592, 593, 594, 598, 600, 601, 604, 605, 606, 610, 611, 625, 626, 632, 637], "explain": [215, 220, 225, 229, 647], "explan": 181, "explicit": 199, "explicitli": [106, 213, 215, 219, 220, 224, 225, 227, 229], "exploit": [10, 226], "explor": [200, 520, 537], "expm1": [6, 205, 206, 326], "expon": [10, 205, 206, 208, 238, 288, 305, 328, 329, 335, 498, 499, 544, 650], "exponenti": [6, 10, 200, 328, 329, 335, 531, 557], "expos": [245, 647], "express": [10, 14, 15, 24, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 199, 200, 288, 323, 654], "extend": [10, 184, 286, 493, 647], "extens": [0, 1, 3, 4, 9, 254, 323, 640], "extra": [196, 223, 249], "extract": [6, 102, 105, 106, 199, 210, 234, 265, 268, 336, 496, 588, 608, 614], "extrapol": 577, "extrema": 650, "ey": [6, 72, 81, 82, 91, 129, 219, 220, 241, 242, 265, 269, 286, 301, 305, 306, 317, 318, 319, 333, 340, 346, 441, 589, 614], "f": [0, 6, 10, 12, 13, 14, 15, 16, 21, 24, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 119, 124, 134, 187, 199, 201, 202, 203, 205, 206, 208, 210, 211, 214, 226, 228, 232, 238, 239, 240, 241, 242, 243, 250, 251, 252, 255, 256, 257, 258, 263, 264, 267, 271, 275, 276, 277, 278, 287, 288, 289, 290, 291, 305, 308, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 346, 347, 350, 431, 436, 446, 485, 486, 488, 490, 491, 497, 498, 499, 501, 506, 507, 539, 567, 568, 569, 571, 573, 575, 576, 579, 580, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 621, 625, 626, 628, 634, 637, 638, 639], "f0": 174, "f1": 174, "f2": 174, "f4": 73, "f8": [73, 174, 179, 184, 187], "f_contigu": [46, 48, 276, 575], "f_k": 10, "fab": [6, 12, 13], "fact": 299, "factor": [10, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 292, 311], "fail": [155, 467, 520], "fallback": [297, 299, 521, 523, 524, 534, 539, 555], "fals": [17, 18, 19, 20, 21, 22, 34, 35, 36, 39, 40, 41, 44, 46, 48, 52, 59, 62, 63, 65, 68, 69, 71, 73, 84, 87, 91, 92, 94, 96, 97, 98, 101, 108, 113, 114, 115, 116, 119, 140, 141, 142, 147, 159, 161, 171, 174, 199, 200, 202, 203, 209, 230, 244, 247, 251, 253, 256, 257, 259, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 290, 291, 292, 293, 304, 306, 308, 310, 314, 315, 321, 322, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 345, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 368, 425, 426, 427, 428, 431, 452, 453, 454, 459, 471, 473, 483, 487, 488, 491, 500, 502, 572, 575, 576, 588, 591, 596, 604, 606, 627, 631, 632, 637, 639], "famili": 10, "fanci": 608, "fashion": [329, 647], "fast": [10, 212, 213, 215, 219, 220, 225, 226, 229], "faster": [10, 24, 60, 241, 242], "fastest": [134, 276, 446, 567, 576], "fb": [200, 621], "featur": 188, "fetch": 576, "few": 230, "fft": [6, 650], "fft2": [6, 212, 215, 219], "fftfreq": [6, 10, 212, 216, 221, 228], "fftn": [6, 212, 213, 220, 226, 229], "fftshift": [6, 10, 213, 215, 220, 221], "fh": 246, "field": [174, 182, 183, 184, 188, 190, 192, 196, 343], "field1": [184, 187], "file": [245, 246, 248, 249, 254, 323], "filenam": [246, 323], "fill": [6, 23, 39, 124, 201, 202, 230, 250, 251, 259, 260, 343, 351, 436, 490, 491, 577, 617, 638, 639], "fill_diagon": 6, "fill_valu": [250, 251], "filt": 621, "filter": [10, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 593, 617, 619, 623, 631, 638, 639], "final": [4, 10, 87, 225, 226, 227, 229, 253, 334], "find": [37, 61, 87, 108, 154, 211, 259, 306, 310, 314, 466, 486, 487, 574, 587, 596, 598, 627, 650], "fine": 4, "finfo": [310, 486, 570, 598], "finfo_object": 231, "finit": [45, 275, 277, 278, 279, 280, 351, 598], "first": [16, 17, 18, 22, 24, 25, 32, 34, 35, 36, 40, 41, 54, 59, 62, 64, 66, 67, 68, 72, 78, 79, 80, 85, 87, 93, 94, 97, 98, 106, 109, 110, 134, 174, 180, 200, 203, 206, 213, 215, 217, 219, 220, 235, 238, 240, 241, 242, 243, 252, 255, 256, 257, 259, 260, 261, 263, 264, 269, 270, 272, 276, 284, 286, 287, 289, 290, 291, 294, 296, 303, 307, 316, 317, 319, 320, 323, 328, 329, 330, 332, 333, 336, 337, 339, 340, 342, 343, 345, 346, 347, 350, 352, 353, 446, 488, 492, 493, 496, 498, 499, 500, 567, 573, 576, 579, 581, 583, 585, 587, 588, 596, 597, 601, 605, 606, 607, 609, 612, 614, 625, 627, 629, 633, 634, 635, 636], "fit": [302, 574], "fix": [6, 38, 75, 106, 174, 186, 196, 239, 503, 580, 584, 626], "flag": [46, 48, 124, 174, 183, 276, 436, 575], "flanneri": 10, "flat": [34, 35, 134, 137, 198, 233, 446, 449, 567, 568, 574, 628], "flatnonzero": [6, 487], "flatten": [6, 23, 34, 35, 36, 79, 80, 91, 95, 96, 101, 102, 105, 106, 133, 149, 157, 198, 230, 234, 259, 260, 270, 321, 339, 342, 345, 352, 353, 354, 355, 359, 361, 445, 461, 469, 487, 492, 504, 567, 568, 574, 581, 596, 608, 609, 614, 627, 628, 633], "flexibl": [110, 174, 186, 189, 246, 307], "flip": [6, 63, 65, 106, 230, 236, 237, 271, 296, 520, 583], "fliplr": [6, 106, 230, 235, 237, 296, 583], "flipud": [6, 106, 230, 235, 236, 296, 583], "float": [12, 13, 21, 26, 32, 43, 44, 47, 54, 59, 73, 85, 94, 175, 178, 179, 184, 187, 188, 189, 191, 193, 201, 202, 206, 210, 211, 214, 228, 231, 232, 238, 245, 246, 247, 248, 249, 250, 251, 252, 255, 259, 260, 264, 265, 267, 288, 302, 305, 306, 308, 310, 321, 322, 323, 328, 329, 334, 335, 339, 341, 342, 345, 351, 357, 360, 362, 486, 490, 491, 498, 499, 515, 516, 517, 518, 522, 547, 548, 550, 551, 553, 556, 557, 559, 562, 569, 570, 571, 572, 586, 593, 604, 617, 630, 632, 638, 639, 647, 650], "float16": [9, 238], "float32": [0, 9, 45, 47, 52, 61, 73, 87, 95, 96, 97, 98, 119, 176, 196, 199, 238, 431, 486, 512, 513, 515, 516, 517, 518, 540, 545, 547, 548, 550, 551, 553, 559, 562, 575, 578], "float64": [0, 9, 47, 52, 59, 73, 119, 179, 180, 181, 186, 189, 190, 199, 431, 512, 513, 515, 516, 517, 518, 519, 525, 526, 527, 529, 531, 532, 533, 540, 541, 544, 545, 547, 548, 550, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 578, 593, 598, 635], "float_pow": [6, 498, 499], "floor": [6, 38, 75, 232, 240, 347, 573, 580, 584, 626], "floor_divid": [6, 347, 573], "flop": 200, "flush": 246, "fmax": [6, 242, 339, 340, 346, 356, 498, 499], "fmin": [6, 241, 340, 345, 346, 358, 498, 499], "fmod": [6, 347, 498, 499, 573], "fn": 247, "fname": 323, "follow": [4, 10, 24, 59, 181, 207, 223, 231, 244, 266, 298, 300, 308, 310, 316, 493, 575, 612, 647, 650], "forc": [192, 199], "forg": 4, "form": [10, 23, 39, 43, 44, 45, 46, 47, 48, 60, 78, 84, 102, 105, 169, 173, 199, 200, 219, 220, 223, 250, 251, 253, 274, 282, 285, 296, 304, 315, 319, 322, 334, 338, 481, 493, 577, 585, 631, 636], "format": [174, 179, 244, 246, 249, 650], "format_float_posit": 6, "format_float_scientif": 6, "former": [14, 27, 29, 30, 31, 33, 49, 50, 53, 55, 504, 609], "forth": [316, 612], "fortran": [48, 52, 119, 134, 276, 431, 446, 567, 568, 575, 576, 628], "forward": [10, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 255], "found": [4, 587, 647], "four": [515, 547], "fourier": [212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 640, 650], "fourth": 213, "frac": [10, 616], "fraction": [348, 626], "free": [152, 464], "freedom": [360, 362, 560, 604, 632], "freq": [214, 216, 221, 228], "freq_spectrum": 217, "frequenc": [10, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228], "freshli": [279, 280, 634], "frexp": [6, 288], "fro": [293, 304, 308, 321], "frobeniu": [293, 308], "from": [3, 10, 14, 15, 17, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 69, 73, 76, 79, 80, 84, 86, 94, 99, 100, 102, 103, 105, 106, 120, 124, 158, 166, 173, 174, 192, 193, 199, 201, 202, 206, 209, 210, 214, 218, 227, 228, 229, 235, 238, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 262, 265, 268, 270, 285, 288, 297, 299, 300, 306, 307, 319, 323, 335, 336, 343, 344, 432, 436, 470, 478, 489, 490, 491, 493, 496, 500, 504, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 572, 576, 577, 578, 583, 585, 587, 588, 601, 602, 603, 606, 608, 609, 614, 617, 619, 621, 623, 624, 627, 629, 630, 631, 636, 637, 638, 639, 650], "from_": 73, "from_dlpack": 6, "frombuff": [6, 246, 248, 249, 323], "fromfil": [6, 245, 248, 249], "fromfunct": [6, 43, 44, 45], "fromit": [6, 43, 44, 45, 245, 246, 249], "frompyfunc": 6, "fromregex": [6, 323], "fromstr": [6, 245, 246, 248, 323], "front": [60, 621], "full": [6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 166, 168, 169, 171, 172, 173, 181, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 446, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "full_lik": [6, 39, 202, 250, 491, 639], "full_matric": 314, "fulli": [180, 342], "func": 25, "func1d": 24, "function": [0, 2, 3, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 84, 88, 92, 94, 97, 98, 99, 100, 106, 109, 113, 114, 124, 128, 137, 152, 155, 169, 199, 201, 202, 204, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 225, 226, 229, 230, 238, 243, 245, 246, 247, 248, 249, 250, 251, 254, 255, 258, 259, 260, 264, 265, 276, 285, 294, 296, 297, 299, 303, 304, 307, 308, 309, 315, 316, 319, 320, 321, 323, 326, 328, 329, 335, 336, 338, 343, 347, 348, 359, 425, 426, 436, 440, 449, 464, 467, 481, 490, 491, 493, 498, 499, 504, 506, 507, 518, 521, 523, 524, 534, 539, 555, 567, 572, 573, 575, 577, 584, 585, 590, 593, 604, 608, 609, 612, 613, 619, 620, 623, 624, 625, 629, 632, 636, 637, 638, 639, 640, 647, 650], "fundament": [10, 174], "further": [101, 619, 623], "futur": [188, 260], "fweight": 92, "g": [4, 10, 179, 201, 202, 210, 250, 251, 265, 308, 490, 491, 518, 617, 638, 639, 654], "gamma": [6, 558], "gauss": 10, "gaussian": [512, 540, 564], "gc": 200, "gcd": [6, 287], "gdc490eda049": 6, "gen": 199, "gender": 174, "gener": [4, 10, 36, 59, 60, 87, 187, 218, 223, 226, 229, 253, 269, 297, 298, 299, 300, 304, 310, 311, 321, 323, 334, 508, 509, 510, 511, 518, 520, 523, 554, 567, 598, 616, 619, 623, 631, 647, 650], "genfromtxt": [6, 323], "geometr": [6, 253, 322], "geomspac": [6, 322, 334], "get": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 104, 105, 124, 135, 155, 201, 202, 210, 214, 217, 223, 225, 228, 238, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 315, 320, 322, 323, 334, 336, 344, 436, 447, 467, 489, 490, 491, 493, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 609, 617, 619, 620, 623, 624, 631, 634, 638, 639, 647], "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 180], "getter": [155, 467], "gid": 260, "github": 244, "give": [10, 105, 169, 238, 260, 481, 576, 589, 595, 627], "given": [17, 18, 22, 23, 24, 25, 26, 34, 35, 38, 39, 40, 43, 44, 46, 48, 52, 59, 60, 78, 84, 91, 92, 95, 96, 97, 98, 107, 110, 115, 116, 119, 125, 126, 142, 147, 148, 153, 156, 159, 161, 171, 173, 177, 192, 198, 200, 201, 202, 209, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 241, 242, 250, 251, 253, 255, 259, 260, 270, 272, 301, 308, 316, 320, 322, 334, 336, 339, 340, 342, 343, 345, 346, 354, 355, 356, 358, 359, 360, 361, 362, 427, 428, 431, 437, 438, 454, 459, 460, 465, 468, 471, 473, 483, 487, 490, 491, 496, 500, 502, 503, 513, 518, 523, 545, 562, 572, 574, 575, 576, 580, 581, 582, 583, 585, 587, 588, 595, 599, 604, 606, 608, 612, 613, 616, 617, 627, 629, 632, 634, 636, 638, 639, 647], "global": 0, "golub": 308, "good": 530, "gpu": [0, 3, 4, 26, 39, 43, 44, 45, 46, 48, 84, 102, 105, 201, 202, 210, 214, 228, 245, 246, 247, 248, 250, 251, 253, 265, 322, 323, 334, 344, 489, 490, 491, 617, 631, 638, 639], "grade": [179, 180, 186, 190], "gradient": [6, 107, 198, 302], "graphic": 4, "great": 10, "greater": [6, 64, 67, 146, 172, 203, 240, 257, 289, 290, 291, 306, 311, 458, 488, 493, 579, 588, 590, 602, 630], "greater_equ": [6, 203, 256, 290, 291, 488], "greatest": [240, 252, 287], "greedi": [199, 200], "grid": [43, 44, 45, 247, 268, 309, 343, 344, 489, 492], "group": [37, 487], "guarante": [188, 575, 576], "guid": [2, 3], "gumbel": 6, "gz": 323, "h": [254, 292, 308, 311, 343], "ha": [4, 10, 12, 13, 14, 15, 17, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 49, 50, 53, 55, 59, 66, 87, 94, 95, 96, 97, 98, 108, 188, 196, 203, 207, 217, 222, 223, 247, 255, 256, 257, 262, 264, 267, 273, 274, 281, 282, 290, 291, 299, 312, 314, 319, 335, 341, 342, 347, 354, 355, 357, 359, 360, 361, 362, 488, 493, 500, 569, 570, 571, 572, 573, 574, 582, 586, 588, 602, 603, 604, 606, 607, 608, 613, 614, 628, 632, 647], "had": [504, 609], "hadamard": 200, "half": [15, 28, 213, 215, 216, 217, 219, 220, 322, 514, 516, 518, 548, 550, 551, 553, 562, 607], "ham": 6, "han": 6, "hand": [93, 294, 318], "handl": [26, 182, 184, 211, 323, 487, 504, 568, 608, 609, 650], "happen": [52, 59, 119, 431, 520, 616], "hardwar": 4, "has_aspect_fp64": 0, "have": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 49, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 78, 79, 80, 81, 82, 85, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 109, 110, 173, 177, 188, 189, 203, 205, 206, 208, 211, 219, 220, 229, 231, 232, 238, 239, 240, 241, 242, 243, 252, 256, 257, 258, 262, 263, 264, 267, 271, 272, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 296, 302, 304, 307, 309, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 340, 341, 342, 346, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 485, 486, 488, 496, 497, 498, 499, 500, 501, 506, 507, 537, 569, 571, 572, 573, 574, 575, 576, 579, 580, 584, 585, 586, 590, 591, 592, 593, 594, 598, 600, 601, 603, 604, 605, 606, 610, 611, 613, 625, 626, 630, 632, 634, 636, 647], "hd": 200, "header": 254, "heapsort": [36, 596], "heavisid": 6, "hello": 174, "help": 654, "helper": 650, "henc": [207, 255], "here": [6, 174, 199, 217, 222, 223, 619, 623], "hermit": [298, 300], "hermitian": [217, 222, 223, 225, 226, 292, 297, 298, 299, 300, 306, 310, 314, 315, 650], "hfft": [6, 10, 222], "hierarchi": 284, "high": [72, 223, 514, 518, 546, 549, 562], "higher": [24, 139, 199, 261, 270, 451, 633, 635], "highest": 212, "highli": 246, "hist": [259, 556], "hist_0": 260, "hist_1": 260, "histogram": [6, 61, 108, 260, 587, 650], "histogram2d": 6, "histogram_bin_edg": [6, 259], "histogramdd": [6, 259], "hold": [77, 95, 96, 97, 98, 259, 308, 342, 354, 355, 359, 361, 567, 614], "homogen": 174, "hopkin": 308, "horizont": [78, 79, 80, 106, 173, 230, 235, 261, 262, 296, 583, 585, 599, 603, 636], "host": [3, 4, 26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 124, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 436, 489, 490, 491, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 617, 619, 623, 631, 638, 639], "household": 311, "how": [0, 4, 181, 184, 223, 226, 255, 503, 504, 568, 608, 609, 619, 623], "howev": [157, 469, 608], "hsplit": [6, 79, 80, 599], "hstack": [6, 78, 79, 80, 173, 585, 599, 603, 636], "http": [4, 244], "hyperbol": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 592, 594, 610, 611, 650], "hypergeometr": 6, "hypot": [6, 572], "hypotenus": [263, 572], "i": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 124, 137, 139, 146, 152, 155, 157, 160, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 370, 431, 436, 449, 451, 458, 464, 467, 469, 472, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647, 654], "i0": 6, "i1": [160, 174, 177, 472], "i2": [160, 174, 176, 177, 184, 192, 196, 472], "i3": [160, 472], "i4": [73, 174, 175, 187, 191, 194], "i7": 199, "i8": [73, 174], "i_0": 264, "iaxi": 493, "iaxis_pad_width": 493, "icpx": 4, "icx": 4, "id": [17, 22], "ideal": 593, "ident": [3, 6, 17, 22, 24, 45, 94, 188, 210, 221, 230, 313, 320, 557, 634], "identifi": 187, "idx": 270, "ieee": 231, "ifft": [6, 212, 219, 220, 222, 223, 228], "ifft2": [6, 213, 218, 220], "ifftn": [6, 215, 218, 219], "ifftshift": [6, 10, 216, 220], "ignor": [34, 35, 93, 192, 241, 242, 249, 259, 260, 339, 340, 341, 345, 346, 352, 353, 356, 357, 358, 360, 362, 604, 632], "ihfft": [6, 217], "ii": [24, 199, 541], "iinfo": 535, "iinfo_object": 266, "ij": [199, 200, 343], "ijk": 199, "il": 200, "il1": 619, "il2": 619, "illustr": 299, "ilm": 199, "im": [309, 492], "imag": [6, 10, 21, 40, 569, 570, 577, 647], "imaginari": [21, 40, 136, 223, 241, 242, 267, 273, 274, 281, 282, 297, 298, 300, 305, 340, 346, 351, 448, 569, 570, 597, 627], "implement": [3, 4, 6, 47, 212, 244], "impli": [196, 567], "implicit": 199, "import": [0, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 124, 128, 129, 131, 134, 136, 137, 139, 144, 146, 150, 155, 156, 157, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 440, 441, 443, 446, 448, 449, 451, 456, 458, 462, 467, 468, 469, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 543, 552, 556, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "improv": 199, "in1d": 6, "in_array1": 204, "includ": [4, 10, 17, 22, 23, 26, 39, 43, 44, 45, 46, 47, 48, 59, 84, 94, 97, 98, 102, 105, 108, 199, 200, 211, 250, 251, 253, 254, 259, 260, 274, 282, 310, 322, 334, 335, 341, 342, 356, 357, 358, 360, 362, 518, 562, 572, 593, 604, 631, 632], "include_initi": [94, 97, 98], "inclus": [514, 546, 549, 588], "increas": [108, 190, 207, 218, 223, 259, 493, 577, 631], "ind": [36, 108, 317, 503, 504, 619, 620, 623, 624], "independ": 294, "index": [4, 23, 34, 35, 36, 37, 76, 120, 134, 137, 160, 180, 200, 210, 213, 219, 227, 234, 244, 268, 270, 276, 285, 343, 352, 353, 432, 446, 449, 472, 487, 503, 504, 567, 568, 576, 577, 587, 588, 599, 608, 609, 619, 623, 627, 628, 637, 640, 650], "index_arrai": [34, 35, 36], "indic": [6, 10, 24, 34, 35, 36, 37, 42, 61, 94, 97, 98, 101, 103, 104, 108, 115, 116, 117, 145, 148, 154, 166, 172, 177, 182, 183, 184, 185, 199, 200, 209, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 234, 244, 247, 259, 261, 270, 317, 318, 336, 337, 344, 352, 353, 427, 428, 429, 457, 460, 466, 478, 487, 495, 503, 504, 568, 587, 590, 591, 596, 599, 608, 609, 615, 619, 620, 623, 624, 627, 628, 634, 635, 637], "indices_or_sect": [42, 172, 261, 599, 635], "indirect": [36, 596], "individu": 528, "inequ": 488, "inexact": [238, 351, 359, 361], "inf": [9, 14, 15, 18, 27, 28, 29, 32, 33, 43, 44, 45, 49, 54, 55, 85, 109, 272, 275, 277, 278, 279, 280, 293, 304, 308, 321, 324, 325, 327, 340, 346, 351, 352, 353, 356, 358, 361, 501, 598, 600, 625], "infer": [45, 94, 335, 572, 576], "infin": [14, 15, 17, 22, 27, 28, 29, 30, 31, 33, 45, 49, 50, 53, 55, 240, 275, 277, 278, 279, 280, 347, 351, 356, 358, 361, 573, 626, 650], "infinit": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 293, 308, 593], "infj": [30, 31, 50, 53], "info": 6, "inform": [0, 46, 48, 132, 175, 217, 223, 225, 231, 444, 575, 647, 650], "initi": [19, 20, 94, 97, 98, 140, 142, 147, 161, 201, 249, 339, 345, 356, 358, 359, 361, 452, 454, 459, 473, 500, 508, 606], "inner": [6, 24, 93, 199, 200, 303, 307, 337, 492], "innermost": [296, 304, 319, 338], "input": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 77, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 119, 134, 144, 172, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 298, 303, 304, 306, 308, 309, 311, 312, 314, 315, 316, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 446, 456, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 512, 514, 518, 540, 546, 562, 567, 569, 570, 571, 572, 573, 574, 575, 579, 580, 581, 582, 584, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 625, 626, 627, 630, 631, 632, 633, 634, 635, 638, 639], "insert": [6, 23, 24, 25, 34, 35, 101, 106, 108, 154, 199, 207, 253, 259, 322, 334, 352, 353, 356, 358, 466, 504, 576, 587, 588, 650], "instal": 2, "instanc": [3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 118, 119, 124, 201, 202, 210, 214, 217, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 265, 268, 322, 323, 334, 336, 337, 344, 430, 431, 436, 489, 490, 491, 508, 510, 511, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 634, 638, 639], "instead": [37, 52, 106, 110, 119, 199, 207, 239, 253, 259, 260, 268, 276, 307, 322, 329, 334, 339, 345, 431, 487, 500, 568, 577, 606, 647], "instruct": 4, "insuffici": 60, "int": [9, 17, 22, 23, 24, 25, 26, 34, 35, 36, 38, 39, 42, 47, 59, 60, 61, 70, 71, 79, 80, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 119, 137, 144, 156, 169, 172, 174, 180, 184, 201, 202, 203, 207, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 260, 261, 265, 266, 268, 270, 294, 296, 302, 305, 308, 316, 317, 318, 319, 320, 321, 322, 334, 335, 336, 339, 341, 342, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 449, 456, 468, 481, 484, 490, 491, 493, 494, 495, 500, 503, 504, 508, 514, 546, 549, 568, 572, 574, 576, 577, 581, 582, 583, 584, 595, 596, 599, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 627, 628, 629, 630, 631, 632, 634, 635, 638, 639, 647], "int16": [174, 176], "int32": [0, 9, 47, 73, 174, 181, 189, 201, 202, 210, 245, 248, 250, 251, 265, 323, 359, 361, 490, 491, 514, 518, 520, 528, 530, 535, 537, 543, 546, 562, 578, 606, 617, 638, 639], "int64": [0, 9, 73, 174, 186, 359, 361, 578], "int8": [174, 500], "int_": 9, "int_0": 616, "int_t": 616, "intc": 9, "integ": [26, 38, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 94, 95, 96, 97, 98, 108, 157, 169, 172, 184, 187, 232, 235, 238, 239, 240, 244, 252, 259, 261, 264, 266, 271, 285, 287, 288, 289, 305, 308, 316, 317, 319, 321, 335, 339, 341, 345, 347, 354, 355, 356, 357, 358, 359, 360, 361, 362, 469, 481, 498, 499, 500, 503, 508, 514, 518, 546, 549, 554, 568, 572, 573, 574, 576, 579, 580, 581, 583, 584, 587, 588, 589, 599, 601, 604, 606, 608, 612, 614, 626, 627, 628, 630, 632, 635, 647], "integer_lik": [316, 612], "integr": [3, 4, 59, 94, 96, 98, 238, 259, 335, 341, 342, 348, 357, 360, 362, 498, 499, 572, 604, 606, 616, 632], "intel": [3, 199], "intend": [169, 481], "intent": 238, "interchang": [162, 349, 474, 607], "interfac": [0, 245], "interior": 255, "intermedi": [95, 97, 199, 200], "intern": [36, 509, 596], "interp": 6, "interpol": [223, 577, 593], "interpret": [2, 43, 44, 45, 51, 71, 84, 137, 181, 217, 223, 225, 245, 285, 336, 449, 487, 503, 647], "intersect1d": 6, "interv": [10, 14, 15, 26, 27, 28, 29, 31, 49, 53, 108, 207, 253, 322, 334, 514, 516, 518, 546, 548, 550, 551, 553, 561, 562, 607], "intp": [359, 361], "intrins": 647, "introduc": 581, "introduct": 10, "introselect": [146, 458, 494], "inv": [6, 293, 310], "invers": [10, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 288, 301, 310, 317, 318, 326, 564, 592, 594, 610, 611, 627], "invert": [6, 63, 65, 301, 310, 317], "invok": 647, "involv": 317, "io": [244, 323], "irfft": [6, 214, 217, 222, 224, 225, 226, 228], "irfft2": [6, 223, 225, 227], "irfftn": [6, 223, 224, 229], "irrespect": 36, "is_busdai": 6, "isalignedstruct": 174, "isclos": [6, 18], "iscomplex": [6, 274, 281], "iscomplexobj": [6, 273, 282], "isdtyp": 6, "isfinit": [6, 277, 278, 279, 280, 351, 356, 358, 361], "isfortran": 6, "isin": 6, "isinf": [6, 275, 278, 279, 280, 351], "isnan": [6, 275, 277, 279, 280, 351, 354, 355, 356, 358, 359, 361], "isnat": [6, 278], "isneginf": [6, 275, 277, 278, 280, 351], "isposinf": [6, 275, 277, 278, 279, 351], "isreal": [6, 273, 282], "isrealobj": [6, 274, 281], "isscalar": 6, "issu": 219, "issubdtyp": 6, "item": [6, 37, 245, 246, 248, 627, 640], "item_dtyp": 196, "item_hasobject": 181, "item_is_point": 181, "items": 72, "iter": [6, 43, 44, 45, 133, 134, 200, 233, 245, 246, 248, 249, 445, 446, 504, 567, 577, 609, 629, 650], "its": [4, 6, 10, 12, 13, 17, 22, 25, 36, 59, 102, 169, 217, 223, 225, 231, 259, 260, 265, 297, 298, 299, 300, 307, 310, 318, 341, 357, 360, 362, 481, 495, 555, 567, 572, 576, 596, 604, 615, 616, 617, 632, 647], "itself": [52, 119, 174, 177, 288, 351, 431, 647], "iu": 336, "iu1": [336, 623], "iu2": 623, "ix_": 6, "ixgrid": 285, "j": [39, 81, 82, 169, 199, 213, 215, 217, 218, 219, 220, 222, 223, 226, 227, 229, 238, 247, 267, 268, 286, 292, 297, 298, 308, 309, 316, 319, 327, 337, 351, 481, 492, 501, 504, 569, 597, 601, 609, 612], "j1": 286, "jame": 10, "ji": 199, "jil": 199, "jj": 24, "jk": [199, 200], "jl": 200, "john": [10, 308], "join": [78, 79, 80, 173, 262, 270, 585, 599, 603, 629, 636, 650], "jump": [99, 506], "just": [72, 78, 106, 174, 213, 219, 224, 226, 227, 270], "k": [10, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 102, 105, 109, 119, 124, 199, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 251, 252, 256, 257, 258, 263, 264, 267, 271, 275, 277, 278, 286, 287, 288, 289, 290, 291, 302, 311, 313, 314, 315, 316, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 346, 347, 350, 370, 431, 436, 485, 486, 488, 491, 497, 498, 499, 501, 506, 507, 567, 569, 571, 573, 579, 580, 583, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 612, 617, 618, 619, 620, 622, 623, 624, 625, 626, 630, 634, 637, 639, 654], "kaiser": 6, "kappa": 563, "keep": [51, 52, 119, 431, 627], "keepdim": [17, 19, 20, 22, 25, 34, 35, 59, 91, 113, 114, 115, 116, 140, 141, 142, 147, 159, 161, 171, 304, 308, 321, 335, 339, 341, 342, 345, 352, 353, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 452, 453, 454, 459, 471, 473, 483, 500, 502, 504, 572, 604, 606, 609, 632], "kei": [3, 36, 179, 180, 188, 375, 420, 596], "kernel": 593, "key2": 188, "keyword": [10, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 84, 85, 89, 90, 93, 99, 100, 102, 103, 105, 109, 124, 201, 202, 205, 206, 208, 210, 211, 214, 228, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 263, 265, 268, 271, 287, 288, 289, 294, 296, 303, 309, 319, 320, 323, 325, 326, 327, 328, 329, 336, 337, 340, 344, 346, 347, 348, 350, 351, 436, 485, 486, 489, 490, 491, 493, 497, 498, 499, 501, 506, 507, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 571, 573, 576, 579, 580, 586, 590, 591, 592, 594, 598, 605, 610, 611, 617, 619, 623, 625, 626, 631, 634, 637, 638, 639, 647], "ki": 199, "kind": [36, 52, 73, 79, 80, 86, 94, 117, 119, 146, 157, 199, 231, 262, 264, 307, 335, 337, 429, 431, 458, 469, 494, 572, 576, 585, 596, 603, 634, 636, 650], "kk": 24, "kl": [10, 199, 200], "known": [10, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 246, 556], "kron": 6, "kroneck": 286, "kth": [146, 458, 494], "kwarg": [12, 13, 14, 15, 16, 24, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 85, 89, 90, 99, 100, 109, 121, 203, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 247, 252, 256, 257, 258, 263, 271, 275, 277, 278, 287, 288, 289, 290, 291, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340, 346, 347, 348, 350, 401, 433, 485, 486, 488, 493, 497, 498, 499, 501, 506, 507, 571, 573, 579, 580, 586, 590, 591, 592, 594, 598, 600, 601, 605, 610, 611, 625, 626], "l": [10, 42, 192, 292, 298, 300, 319], "la": [297, 299, 300], "label": 199, "laid": 48, "lam": 543, "lambda": 247, "lanczo": 593, "lapack": [297, 299], "laplac": 6, "laptop": 4, "larg": [10, 99, 181, 259, 310, 351, 506, 630, 654], "larger": [199, 212, 213, 215, 218, 219, 220, 222, 224, 225, 226, 227, 229, 231, 577, 614, 630], "largest": [10, 200, 226, 231, 239, 266, 302, 308, 347, 351, 573], "largest_singular_valu": 310, "last": [17, 22, 23, 24, 36, 61, 72, 93, 106, 107, 134, 139, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 235, 253, 255, 269, 276, 296, 307, 315, 316, 319, 322, 334, 337, 446, 451, 493, 500, 567, 576, 581, 587, 596, 602, 606, 612, 629, 630, 634], "later": [493, 654], "latest": [4, 244], "latter": [14, 27, 29, 30, 31, 33, 49, 50, 53, 55, 241, 242, 340, 346, 504, 609], "layout": [4, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 124, 132, 199, 201, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 250, 251, 252, 256, 257, 258, 263, 264, 267, 271, 275, 277, 278, 287, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 346, 347, 350, 436, 444, 485, 486, 488, 490, 491, 497, 498, 499, 501, 506, 507, 567, 569, 571, 573, 575, 576, 579, 580, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 625, 626, 634, 637, 638, 639, 640], "lcm": [6, 252], "ldexp": 6, "ldot": 10, "lead": [218, 219, 220, 354, 355, 621], "learn": [3, 4, 329], "least": [56, 57, 58, 59, 60, 104, 173, 193, 200, 207, 230, 236, 241, 242, 246, 274, 302, 311, 340, 346, 585, 636], "left": [10, 31, 34, 35, 38, 53, 64, 67, 91, 106, 108, 154, 236, 237, 289, 299, 304, 308, 321, 339, 345, 352, 353, 359, 361, 466, 500, 561, 579, 584, 587, 606, 616, 631], "left_shift": [6, 64, 67, 579], "leg": [263, 572], "legaci": 554, "legal": 270, "len": [101, 215, 216, 217, 220, 222, 223, 224, 225, 229, 268, 302, 339, 343, 344, 345, 393, 589, 631], "length": [26, 42, 59, 60, 61, 95, 96, 97, 98, 107, 203, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 249, 253, 255, 259, 262, 297, 314, 315, 316, 334, 339, 342, 343, 345, 354, 355, 493, 504, 521, 576, 578, 585, 587, 588, 589, 602, 609, 612, 613, 636], "less": [6, 25, 95, 96, 97, 98, 139, 203, 256, 257, 259, 260, 291, 302, 310, 319, 354, 355, 359, 361, 451, 488, 500, 588, 590, 606, 614], "less_equ": [6, 203, 256, 257, 290, 488], "let": [320, 520, 576, 634], "level": [640, 647], "level_zero": [26, 39, 43, 44, 45, 46, 48, 84, 102, 105, 201, 202, 210, 214, 228, 245, 246, 247, 248, 250, 251, 253, 265, 322, 323, 334, 344, 489, 490, 491, 617, 631, 638, 639], "lexicograph": 627, "lexsort": [6, 36, 596], "li": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 581, 582], "lib": 72, "librari": [3, 4, 647], "light": 10, "like": [26, 39, 43, 44, 46, 48, 52, 56, 57, 58, 78, 101, 119, 134, 144, 173, 199, 201, 210, 225, 245, 246, 247, 248, 249, 250, 253, 265, 270, 322, 323, 334, 336, 431, 446, 456, 484, 490, 504, 518, 562, 567, 575, 576, 609, 638, 650], "likewis": [62, 66, 68], "limit": [3, 4, 12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 81, 82, 84, 85, 88, 89, 90, 92, 99, 100, 109, 119, 121, 180, 201, 202, 203, 204, 205, 206, 208, 210, 211, 231, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 263, 265, 266, 271, 275, 277, 278, 287, 288, 289, 290, 291, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 345, 346, 347, 348, 350, 352, 353, 356, 357, 358, 359, 360, 361, 362, 431, 433, 485, 486, 488, 490, 491, 494, 497, 498, 499, 500, 501, 502, 505, 506, 507, 512, 514, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 541, 543, 544, 546, 549, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 571, 573, 575, 579, 580, 586, 590, 591, 592, 593, 594, 596, 598, 600, 601, 604, 605, 606, 610, 611, 625, 626, 632, 634, 638, 639], "linalg": [6, 93, 106, 110, 199, 200, 337, 338, 492, 601, 612, 614, 633, 634], "line": [302, 323], "linear": [10, 83, 88, 302, 313, 334, 493, 640, 650], "linear_ramp": 493, "linspac": [0, 6, 26, 204, 253, 309, 334, 343, 492, 593, 616, 630], "linux": 4, "list": [3, 6, 9, 23, 39, 42, 43, 44, 45, 46, 48, 56, 57, 58, 69, 79, 80, 84, 102, 105, 169, 172, 173, 190, 199, 200, 216, 221, 230, 250, 251, 253, 255, 261, 262, 274, 282, 316, 322, 323, 334, 337, 342, 481, 495, 568, 574, 575, 577, 578, 585, 588, 599, 603, 612, 615, 628, 629, 631, 634, 635, 636, 637], "list_pickl": 181, "littl": [177, 192], "ln": 334, "load": [6, 246, 323], "loadtxt": [6, 246], "loan": 308, "loc": [512, 529, 531, 532, 540, 564], "local": 4, "locat": [0, 4, 254, 279, 280, 336, 492, 529, 531, 587, 634], "log": [6, 208, 253, 312, 322, 325, 326, 327, 328, 334, 335, 533], "log10": [6, 324, 326, 327], "log1p": [6, 206, 208, 324, 325, 327], "log2": [6, 324, 325, 326, 329], "log_bas": 334, "logabsdet": 312, "logaddexp": [6, 94, 329, 335], "logaddexp2": [6, 328, 335], "logarithm": [94, 295, 312, 322, 324, 325, 326, 327, 328, 329, 335, 534, 650], "logic": [17, 22, 330, 331, 332, 333, 640, 650], "logical_and": [6, 62, 331, 332, 333], "logical_not": [6, 63, 65, 271, 330, 332, 333], "logical_or": [6, 66, 330, 331, 333], "logical_xor": [6, 68, 330, 331, 332], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 253, 322], "logsumexp": [94, 328, 329], "lomax": 541, "long": [188, 305], "longer": [217, 223, 654], "look": [486, 609], "loop": [24, 199], "loos": 198, "lorentz": 556, "lose": [217, 223, 225], "low": [72, 213, 215, 219, 220, 514, 518, 546, 549, 562, 647], "lower": [102, 210, 259, 260, 284, 292, 298, 300, 336, 617, 618, 619, 620, 623, 624], "lowest": [59, 199, 200, 252, 287, 514, 546], "lstsq": 6, "m": [4, 10, 24, 92, 173, 187, 199, 210, 213, 215, 217, 219, 220, 223, 224, 225, 229, 235, 236, 237, 292, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 319, 336, 337, 338, 342, 504, 583, 588, 608, 609, 617, 618, 619, 620, 622, 623, 624], "machin": [4, 10, 231, 266, 302, 329, 570], "machineri": 184, "made": [39, 44, 56, 192, 244, 286, 351, 576, 599], "magnitud": [12, 13, 85, 211, 501], "mai": [17, 21, 22, 52, 73, 77, 79, 80, 86, 96, 98, 119, 155, 174, 182, 188, 199, 200, 207, 213, 215, 217, 218, 219, 220, 222, 223, 226, 229, 255, 260, 262, 293, 297, 298, 302, 304, 308, 311, 329, 334, 337, 351, 357, 360, 362, 431, 467, 504, 567, 570, 577, 585, 593, 603, 613, 634, 636, 647], "main": [102, 103, 104, 105, 106, 210, 230, 265, 296, 300, 319, 336, 614, 617, 618, 619, 622, 623], "mainstai": 10, "maintain": [36, 108, 154, 183, 259, 466, 587, 596, 609], "major": [4, 43, 44, 45, 46, 48, 51, 52, 119, 431, 487, 567, 568, 575, 628], "make": [46, 48, 78, 174, 309, 343, 492, 575, 593, 627, 630], "manag": 0, "mandelbrot": [309, 492], "mani": [10, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 567, 647], "manipul": [3, 103, 640, 650], "mantissa": 288, "manual": [4, 175, 184, 613], "mappingproxi": 188, "mask": [101, 181, 285, 336, 487, 496, 505, 608, 619, 623], "mask_func": 336, "mask_indic": [6, 619, 623], "mass": 259, "match": [12, 13, 44, 79, 80, 86, 91, 94, 107, 174, 244, 246, 255, 269, 316, 335, 337, 503, 504, 572, 603, 608, 609, 612, 637], "math": [10, 204], "mathbf": [320, 634], "mathemat": [308, 640, 650], "matlab": 243, "matmul": [6, 110, 311, 314, 633], "matplotlib": [343, 556], "matric": [230, 247, 268, 285, 295, 296, 297, 299, 301, 304, 306, 308, 310, 311, 312, 314, 315, 319, 337, 338, 343, 650], "matrix": [87, 92, 110, 139, 199, 269, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 319, 337, 338, 343, 451, 601, 622, 631, 633, 634, 640, 650], "matrix_norm": [6, 308], "matrix_pow": [6, 601], "matrix_rank": 6, "matrix_transpos": 6, "matter": 627, "max": [0, 6, 19, 34, 61, 77, 121, 231, 241, 242, 259, 260, 266, 302, 306, 308, 310, 340, 345, 346, 356, 433, 535, 609, 613, 630, 647], "max_arg": 0, "max_val": 0, "maxima": [241, 339, 340], "maximum": [0, 6, 19, 34, 35, 77, 115, 140, 200, 241, 242, 339, 345, 346, 352, 353, 356, 358, 427, 452, 493, 498, 499, 502, 504, 630], "may_share_memori": 6, "md": 308, "mean": [3, 6, 10, 26, 39, 41, 43, 44, 45, 46, 47, 48, 52, 59, 84, 91, 102, 103, 105, 119, 124, 134, 169, 199, 201, 202, 210, 213, 214, 215, 219, 220, 224, 225, 226, 227, 228, 229, 245, 246, 247, 248, 249, 250, 251, 255, 265, 268, 293, 308, 323, 336, 342, 344, 357, 360, 362, 431, 436, 446, 481, 489, 490, 491, 493, 508, 515, 517, 531, 533, 536, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 563, 564, 567, 576, 583, 604, 606, 617, 619, 623, 631, 632, 638, 639, 647], "meaningfulli": 647, "meant": 647, "median": [0, 6, 493], "meet": [39, 588], "memori": [3, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 124, 132, 160, 182, 199, 201, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 256, 257, 258, 263, 264, 267, 271, 275, 276, 277, 278, 287, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 342, 343, 346, 347, 350, 436, 444, 472, 485, 486, 488, 490, 491, 497, 498, 499, 501, 506, 507, 567, 569, 571, 573, 575, 576, 579, 580, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 625, 626, 634, 637, 638, 639, 640, 654], "mergesort": [36, 596], "mersenn": 508, "mesh": 285, "meshgrid": [6, 247, 268, 285, 344, 489], "met": [110, 307], "meta": 180, "metadata": 174, "method": [10, 17, 19, 20, 22, 36, 52, 84, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 135, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 166, 167, 168, 169, 171, 180, 192, 244, 246, 306, 310, 314, 338, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 446, 447, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 478, 479, 480, 481, 483, 484, 487, 495, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 576, 589, 606, 608, 615, 640], "mgrid": [213, 215, 224, 227, 268, 285], "mgridclass": 344, "middl": [10, 106, 213, 215, 219, 220, 299, 342], "might": [199, 218, 219, 220], "min": [6, 20, 35, 77, 121, 231, 241, 242, 259, 260, 266, 293, 296, 302, 308, 311, 314, 315, 339, 340, 346, 358, 433, 609, 647], "min_scalar_typ": 6, "minima": [242, 345, 346], "minimum": [6, 20, 34, 35, 39, 61, 77, 116, 142, 238, 241, 242, 339, 340, 345, 352, 353, 356, 358, 428, 454, 493, 498, 499, 502], "minlength": 61, "mintypecod": 6, "minu": [60, 208, 240, 347, 573, 626], "mirror": 493, "miscellan": [2, 640, 650], "mise": 563, "miss": 323, "mix": [303, 337], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 209, 573, 630], "mode": [76, 83, 88, 120, 148, 166, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 311, 432, 460, 478, 493, 503, 504, 556, 561, 568, 587, 608, 609], "model": [4, 520], "modf": 6, "modifi": [84, 106, 230, 264, 342, 493, 555], "modul": [212, 254, 640], "modulu": [243, 347, 573], "moment": 87, "monoton": [108, 259], "moor": 310, "more": [0, 3, 4, 36, 39, 56, 57, 58, 97, 98, 173, 175, 199, 200, 208, 224, 227, 236, 237, 244, 246, 260, 262, 268, 288, 294, 296, 302, 303, 305, 306, 307, 309, 310, 314, 316, 319, 320, 326, 328, 577, 583, 603, 612, 616, 627, 630, 647, 654], "most": [3, 4, 23, 61, 106, 107, 193, 200, 212, 218, 351, 508, 554, 577, 602], "move": [146, 349, 458, 495, 581, 582, 615, 627], "moveaxi": [6, 495, 581, 582, 615, 629], "msg": 0, "mt": 338, "mt19937": 554, "mu": [529, 533, 540, 563], "multi": [2, 111, 160, 268, 285, 294, 344, 472, 489, 568, 627, 640], "multi_dot": [6, 110, 199, 200], "multi_index": 568, "multiarrai": 181, "multidimension": [259, 269, 637], "multinomi": 6, "multipl": [4, 10, 24, 25, 34, 35, 36, 42, 59, 79, 80, 87, 93, 94, 172, 183, 199, 213, 215, 219, 220, 224, 225, 227, 229, 252, 260, 261, 262, 270, 285, 287, 294, 297, 298, 299, 300, 301, 307, 335, 339, 341, 345, 356, 357, 358, 360, 362, 567, 572, 585, 588, 596, 599, 603, 604, 616, 627, 629, 632, 635, 636, 640], "multipli": [6, 95, 199, 288, 299, 359, 500], "multivalu": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "multivari": 536, "multivariate_norm": 6, "must": [12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 107, 109, 110, 173, 205, 206, 207, 208, 211, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 232, 236, 238, 239, 240, 241, 242, 243, 246, 249, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 271, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 292, 294, 296, 307, 308, 309, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 485, 486, 488, 495, 496, 497, 498, 499, 500, 501, 503, 504, 506, 507, 569, 571, 572, 573, 574, 579, 580, 581, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 598, 600, 601, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 625, 626, 632, 634, 636, 637], "mx": 302, "mxn": [296, 304, 319, 338], "my_func": 24, "n": [0, 4, 10, 37, 42, 60, 96, 98, 103, 104, 107, 108, 169, 172, 173, 192, 198, 207, 210, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 247, 255, 261, 265, 285, 296, 302, 304, 305, 306, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 336, 337, 338, 342, 343, 360, 362, 481, 493, 495, 496, 503, 504, 520, 535, 537, 547, 557, 587, 589, 599, 601, 604, 607, 608, 609, 612, 615, 616, 617, 618, 619, 620, 622, 623, 624, 631, 632, 634, 635, 647], "n1": 343, "n2": [323, 343], "n3": 343, "naiv": 200, "name": [0, 6, 24, 174, 179, 180, 186, 310, 593], "namedtupl": 311, "nan": [9, 14, 15, 17, 18, 22, 27, 28, 29, 30, 31, 33, 34, 35, 40, 43, 44, 45, 49, 50, 53, 55, 109, 238, 241, 242, 272, 275, 277, 278, 279, 280, 325, 339, 340, 341, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 498, 499, 500, 598, 600, 604, 625, 627, 632, 650], "nan_to_num": 6, "nanargmax": [6, 34, 353], "nanargmin": [6, 35, 352], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 241, 242, 339, 340, 346, 358], "nanmean": [6, 341, 360, 362, 604, 632], "nanmedian": 6, "nanmin": [6, 241, 242, 340, 345, 346, 356], "nanpercentil": 6, "nanprod": [6, 500], "nanquantil": 6, "nanstd": [6, 341, 357, 362, 604, 632], "nansum": 6, "nanvar": [6, 341, 357, 360, 604, 632], "nat": 278, "nativ": [177, 185, 192], "native_cod": [177, 192], "native_dt": 192, "natur": [312, 324, 325, 326, 327, 328, 329, 335], "nbad": 530, "nd": [137, 449], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 124, 131, 134, 136, 137, 144, 150, 152, 155, 156, 157, 169, 172, 173, 180, 182, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 651], "ndim": [6, 37, 39, 46, 48, 56, 57, 58, 92, 103, 106, 230, 286, 308, 314, 315, 338, 339, 345, 490, 495, 613, 615, 638], "ndindex": 24, "ndmin": 39, "ne": 593, "nearest": [38, 75, 232, 239, 240, 347, 573, 580, 584, 598, 626], "necessari": [4, 17, 22, 26, 39, 43, 44, 46, 48, 56, 86, 95, 96, 97, 98, 198, 209, 217, 223, 225, 230, 244, 253, 322, 334, 337, 341, 342, 354, 355, 357, 359, 360, 361, 362, 500, 577, 604, 606, 632, 654], "necessarili": [297, 299], "need": [4, 39, 44, 61, 106, 199, 254, 342, 575, 608, 609, 637], "needs_init": 181, "needs_pyapi": 181, "neg": [6, 10, 17, 22, 38, 60, 61, 85, 105, 106, 108, 155, 207, 210, 213, 215, 218, 219, 220, 223, 226, 235, 238, 249, 255, 259, 275, 277, 278, 279, 280, 305, 316, 351, 356, 358, 360, 361, 362, 467, 497, 498, 499, 500, 503, 504, 537, 568, 584, 604, 606, 608, 609, 612, 614, 632], "negat": 588, "negative_binomi": 6, "neginf": 351, "neither": [110, 241, 242, 303, 314, 337, 356, 358], "nest": [47, 173, 262, 585, 603, 629, 636], "nested_it": 6, "net": [241, 242, 340, 346], "never": 630, "new": [23, 24, 39, 52, 69, 70, 71, 78, 79, 80, 91, 94, 95, 96, 97, 98, 101, 106, 119, 152, 155, 169, 173, 174, 183, 184, 192, 198, 201, 202, 207, 241, 242, 244, 248, 249, 250, 251, 253, 262, 265, 270, 322, 334, 335, 336, 340, 342, 346, 349, 354, 355, 359, 361, 431, 464, 467, 481, 490, 491, 495, 572, 576, 577, 581, 582, 585, 599, 603, 613, 615, 629, 636, 637, 638, 639, 647], "new_dtyp": 192, "new_ord": 192, "new_shap": 577, "newaxi": 207, "newli": [12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 49, 50, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 119, 124, 201, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 250, 251, 252, 256, 257, 258, 263, 264, 267, 271, 275, 277, 278, 287, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 346, 347, 350, 431, 436, 485, 486, 488, 490, 491, 497, 498, 499, 501, 506, 507, 569, 571, 573, 579, 580, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 625, 626, 634, 638, 639], "newshap": 576, "next": [4, 231, 486], "nextaft": 6, "ngood": 530, "ni": [24, 343, 504, 608, 609], "nine": 520, "ninja": 4, "nj": [24, 504, 608, 609], "njm": 199, "nk": [24, 504, 608, 609], "nl": 10, "nlk": 199, "nn": 343, "noisi": 302, "non": [26, 37, 39, 43, 44, 45, 46, 47, 48, 52, 59, 61, 84, 91, 102, 103, 105, 108, 119, 124, 145, 155, 201, 202, 209, 210, 214, 223, 226, 228, 234, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 260, 265, 268, 273, 275, 285, 294, 316, 322, 323, 334, 336, 344, 351, 352, 353, 356, 358, 360, 362, 431, 436, 457, 467, 487, 489, 490, 491, 496, 498, 499, 508, 538, 539, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 604, 612, 617, 619, 623, 631, 632, 637, 638, 639], "nonc": [538, 539], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 129, 137, 140, 141, 142, 146, 147, 148, 151, 152, 153, 154, 157, 158, 159, 161, 166, 168, 169, 171, 180, 188, 190, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 293, 302, 304, 306, 307, 308, 310, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 429, 431, 432, 433, 436, 437, 438, 441, 449, 452, 453, 454, 458, 459, 460, 463, 464, 465, 466, 469, 470, 471, 473, 478, 480, 481, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 512, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 579, 580, 581, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 616, 617, 619, 623, 625, 626, 627, 628, 630, 631, 632, 634, 636, 637, 638, 639, 647], "nonneg": 61, "nonzero": [6, 37, 91, 234, 285, 637, 647], "nor": [241, 242, 299, 356, 358], "norm": [6, 10, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 293, 299, 302, 304, 321, 650], "normal": [6, 92, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 259, 297, 298, 311, 320, 329, 515, 517, 533, 536, 547, 559, 568, 593, 634], "not_equ": [6, 203, 256, 257, 290, 291], "note": [12, 13, 14, 15, 16, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 51, 53, 54, 55, 60, 63, 64, 65, 67, 79, 80, 84, 93, 99, 101, 106, 108, 109, 124, 152, 192, 199, 200, 207, 209, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 239, 241, 242, 245, 246, 247, 248, 249, 259, 268, 270, 271, 275, 288, 289, 294, 296, 297, 304, 308, 316, 321, 323, 334, 342, 347, 350, 360, 361, 362, 436, 464, 487, 493, 495, 496, 498, 499, 503, 506, 521, 523, 524, 534, 539, 567, 573, 575, 576, 577, 579, 583, 593, 596, 598, 604, 605, 607, 612, 613, 615, 616, 625, 627, 629, 630, 632, 633], "notic": [180, 223, 226], "notimplementederror": [12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 109, 119, 201, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 263, 265, 271, 275, 277, 278, 287, 288, 289, 290, 291, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 345, 346, 347, 350, 356, 357, 358, 360, 361, 362, 431, 485, 486, 488, 490, 491, 497, 498, 499, 500, 501, 506, 507, 567, 571, 573, 575, 579, 580, 586, 590, 591, 592, 594, 596, 598, 600, 601, 604, 605, 606, 610, 611, 625, 626, 632, 634, 638, 639], "now": [17, 22, 46, 48, 87, 103, 299, 302, 336], "np": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 124, 128, 129, 131, 134, 136, 137, 139, 144, 146, 150, 155, 156, 157, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 440, 441, 443, 446, 448, 449, 451, 456, 458, 462, 467, 468, 469, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 500, 501, 502, 503, 504, 506, 507, 543, 552, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "nr": 10, "nsamp": 530, "nsampl": 530, "nth": [316, 612], "nuc": [304, 308, 321], "nuclear": 308, "num": [0, 60, 204, 253, 322, 334, 616, 630], "number": [10, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 45, 49, 50, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 91, 103, 105, 107, 108, 144, 153, 156, 177, 186, 191, 193, 198, 199, 200, 207, 210, 211, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 231, 232, 240, 245, 246, 248, 249, 253, 255, 259, 260, 265, 266, 271, 272, 273, 274, 275, 282, 285, 288, 289, 293, 301, 306, 308, 311, 312, 314, 317, 318, 322, 329, 334, 347, 351, 354, 355, 356, 358, 359, 360, 361, 362, 456, 465, 468, 484, 487, 493, 495, 496, 500, 501, 508, 520, 530, 554, 573, 574, 577, 579, 580, 581, 582, 583, 584, 591, 595, 598, 604, 607, 613, 615, 617, 626, 627, 631, 632, 647, 650], "number_of_dimens": [144, 456, 484], "numer": [3, 4, 10, 12, 13, 14, 15, 16, 18, 27, 28, 29, 30, 31, 33, 38, 49, 50, 53, 55, 81, 82, 85, 89, 90, 109, 174, 203, 205, 208, 218, 219, 220, 223, 225, 240, 241, 242, 256, 257, 267, 272, 275, 277, 278, 290, 291, 308, 309, 324, 325, 326, 327, 340, 346, 350, 485, 488, 497, 498, 499, 501, 569, 580, 584, 590, 591, 592, 594, 605, 610, 611, 625, 650], "numpi": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 130, 131, 134, 136, 137, 144, 150, 155, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 430, 442, 443, 446, 448, 449, 456, 462, 467, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 647, 650], "nvidia": 4, "nx": 343, "ny": 343, "nyquist": [10, 213, 215, 216, 217, 218, 219, 220, 223, 225, 226, 228], "o": [4, 17, 22, 187], "obj": [34, 35, 36, 101, 174, 244, 259, 270], "object": [26, 39, 43, 44, 45, 46, 47, 48, 51, 52, 84, 102, 103, 105, 111, 119, 124, 135, 137, 152, 174, 177, 180, 182, 186, 187, 189, 192, 195, 196, 201, 202, 207, 210, 214, 228, 231, 233, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 266, 268, 270, 293, 298, 308, 316, 322, 323, 334, 336, 344, 431, 436, 447, 449, 464, 489, 490, 491, 508, 509, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 576, 612, 617, 619, 623, 631, 638, 639, 647], "observ": 87, "obsolet": 276, "obtain": [10, 106, 292, 296, 319, 487], "obviou": 10, "occupi": [231, 266], "occur": [23, 52, 73, 79, 80, 86, 101, 119, 199, 262, 270, 297, 337, 351, 431, 585, 603, 634, 636], "occurr": [34, 35, 61, 108, 259, 352, 353, 627], "odd": [10, 214, 217, 221, 222, 223, 225, 226, 228, 342, 493], "off": [26, 217, 222, 296, 297, 302, 319], "offset": [106, 111, 128, 168, 174, 180, 190, 245, 246, 296, 319, 336, 440, 480, 614, 619, 620, 623, 624], "often": [101, 258], "ogrid": [268, 285, 637], "ogridclass": 489, "oil": [520, 537], "old": 577, "omit": [514, 546], "onc": 301, "one": [3, 4, 25, 34, 35, 36, 39, 41, 47, 56, 57, 58, 59, 83, 86, 88, 91, 97, 98, 101, 124, 134, 137, 138, 174, 187, 201, 203, 207, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 236, 237, 238, 241, 242, 246, 250, 255, 260, 262, 265, 268, 270, 274, 285, 299, 304, 305, 308, 316, 321, 324, 325, 327, 336, 339, 340, 343, 344, 345, 346, 352, 353, 359, 361, 436, 446, 449, 450, 487, 489, 491, 496, 500, 537, 568, 582, 588, 596, 602, 603, 606, 608, 612, 616, 619, 620, 623, 624, 627, 638, 647], "oneapi": [4, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "onedpl": 4, "onemkl": [4, 297, 299], "ones": [6, 39, 46, 48, 59, 94, 97, 98, 101, 109, 129, 199, 201, 202, 203, 207, 210, 229, 250, 251, 263, 265, 286, 302, 306, 309, 335, 336, 354, 359, 441, 491, 492, 495, 500, 572, 578, 582, 615, 617, 625, 638, 639], "ones_lik": [6, 39, 202, 251, 490, 639], "onli": [10, 17, 22, 26, 34, 35, 36, 39, 42, 43, 44, 46, 48, 52, 56, 59, 60, 84, 88, 92, 97, 98, 119, 137, 155, 157, 174, 184, 199, 200, 201, 202, 210, 216, 226, 230, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 260, 268, 276, 292, 298, 300, 303, 306, 308, 309, 310, 311, 314, 322, 323, 334, 336, 337, 339, 341, 345, 351, 352, 353, 356, 357, 358, 359, 360, 362, 431, 449, 467, 469, 490, 491, 494, 496, 497, 500, 512, 514, 518, 540, 546, 562, 567, 575, 576, 593, 596, 604, 606, 609, 623, 627, 630, 632, 634, 637, 638, 639, 647], "open": [246, 268, 285, 322, 489, 514, 516, 518, 548, 550, 551, 553, 562, 607], "opencl": [26, 39, 43, 44, 45, 46, 48, 84, 102, 105, 201, 202, 210, 214, 228, 245, 246, 247, 248, 250, 251, 253, 265, 322, 323, 334, 344, 489, 490, 491, 617, 631, 638, 639], "oper": [10, 16, 24, 62, 63, 64, 65, 66, 67, 68, 109, 181, 188, 199, 200, 203, 207, 230, 240, 243, 256, 257, 271, 289, 290, 291, 292, 330, 332, 337, 339, 345, 347, 350, 351, 352, 353, 485, 488, 497, 498, 499, 503, 573, 579, 605, 613, 625, 627, 629, 630, 634, 640, 650], "operand": [199, 200, 316, 318, 492, 612], "opposit": [10, 192, 209, 217, 222, 496, 567], "optim": [4, 199, 200, 259, 260], "option": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 119, 124, 134, 169, 174, 180, 192, 198, 199, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 275, 277, 278, 279, 280, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 304, 306, 307, 308, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 446, 481, 485, 486, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 654], "ord": [304, 308, 321], "order": [10, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 99, 100, 106, 108, 109, 111, 117, 119, 124, 134, 146, 149, 152, 154, 157, 169, 177, 185, 190, 192, 193, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 213, 215, 218, 219, 220, 223, 225, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 250, 251, 252, 255, 256, 257, 258, 259, 263, 264, 267, 271, 275, 276, 277, 278, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 300, 304, 308, 314, 316, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 343, 346, 347, 349, 350, 370, 429, 431, 436, 446, 458, 461, 464, 466, 469, 481, 485, 486, 487, 488, 490, 491, 494, 495, 497, 498, 499, 501, 506, 507, 567, 568, 569, 571, 573, 575, 576, 577, 579, 580, 583, 586, 587, 590, 591, 592, 593, 594, 596, 598, 600, 601, 605, 610, 611, 612, 615, 625, 626, 627, 628, 631, 634, 637, 638, 639, 650], "ordin": [302, 313], "ordinari": [223, 269, 292], "orient": [93, 504, 609], "origin": [25, 69, 106, 111, 217, 223, 225, 304, 308, 321, 343, 349, 359, 361, 576, 577, 581, 627], "ortho": [10, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229], "orthogon": [299, 311], "orthonorm": 311, "other": [41, 52, 69, 70, 71, 107, 119, 188, 218, 219, 220, 223, 225, 239, 247, 265, 297, 299, 307, 308, 349, 366, 367, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 431, 518, 562, 577, 582, 627, 634, 640, 650], "otherwis": [3, 12, 13, 14, 15, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 99, 100, 102, 107, 109, 119, 152, 180, 191, 194, 196, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 263, 264, 265, 269, 271, 275, 277, 278, 287, 288, 289, 290, 291, 302, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 345, 346, 347, 348, 350, 352, 353, 356, 357, 358, 359, 360, 361, 362, 431, 464, 485, 486, 488, 490, 491, 497, 498, 499, 500, 501, 506, 507, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571, 572, 573, 574, 575, 576, 579, 580, 586, 587, 590, 591, 592, 594, 596, 598, 600, 601, 602, 604, 605, 606, 610, 611, 614, 625, 626, 632, 634, 637, 638, 639], "otim": [316, 612], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 114, 115, 116, 120, 121, 124, 125, 126, 129, 134, 137, 140, 141, 142, 147, 153, 159, 161, 166, 168, 169, 171, 173, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 301, 303, 304, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 432, 433, 436, 437, 438, 441, 446, 449, 452, 453, 454, 459, 465, 471, 473, 478, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 625, 626, 630, 631, 632, 633, 634, 636, 637, 638, 639], "outer": [6, 93, 106, 199, 200, 286], "output": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 109, 110, 119, 124, 174, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 232, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 263, 264, 265, 267, 268, 271, 272, 273, 275, 277, 278, 285, 287, 288, 289, 290, 291, 307, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 353, 354, 355, 357, 359, 360, 361, 362, 431, 436, 485, 486, 488, 489, 490, 491, 497, 498, 499, 500, 501, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 573, 574, 576, 579, 580, 584, 586, 588, 590, 591, 592, 593, 594, 596, 598, 600, 601, 602, 604, 605, 606, 608, 610, 611, 613, 614, 617, 619, 623, 625, 626, 627, 630, 631, 632, 634, 637, 638, 639, 650, 654], "outsid": [259, 260], "over": [10, 17, 22, 24, 25, 59, 61, 94, 95, 96, 97, 98, 110, 134, 199, 200, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233, 235, 247, 253, 259, 260, 269, 294, 304, 308, 316, 320, 321, 322, 334, 335, 337, 339, 341, 343, 345, 354, 355, 356, 357, 358, 359, 360, 361, 362, 446, 500, 504, 513, 516, 518, 545, 550, 561, 562, 567, 572, 577, 604, 606, 608, 609, 612, 616, 630, 632, 634, 650], "overal": [213, 215, 219, 220, 224, 225, 227, 229], "overflow": 238, "overlin": [320, 634], "overrid": [93, 202, 251, 491, 639], "overview": 2, "overwrite_input": 342, "p": [10, 293, 302, 305, 520, 523, 528, 534, 537, 630], "pack": [106, 567, 650], "packag": [0, 3], "packbit": 6, "pad": [6, 174, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 577], "pad_valu": 493, "pad_width": 493, "padder": 493, "padding_func": 493, "page": [3, 650], "pair": [10, 200, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 294, 297], "parallel": [1, 3, 4, 9, 640], "paramet": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 124, 131, 134, 137, 152, 169, 172, 173, 174, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 443, 446, 449, 464, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "parameter": [512, 518, 540, 562], "parametr": 616, "pareto": 6, "pars": [246, 323], "part": [3, 10, 14, 15, 21, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 136, 150, 223, 241, 242, 267, 273, 274, 281, 282, 297, 298, 300, 336, 340, 346, 348, 448, 462, 493, 569, 570, 597, 619, 623, 626, 627, 647], "partial": [36, 342, 596], "particular": [181, 307], "particularli": 199, "partit": [6, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 596, 617, 619, 623, 631, 638, 639, 647], "pass": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 124, 152, 179, 180, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 260, 265, 268, 285, 302, 323, 336, 344, 351, 436, 464, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 575, 617, 619, 620, 623, 624, 631, 634, 638, 639], "past": 72, "path": [4, 199, 200, 246, 323], "path_info": 200, "pathlib": 323, "pattern": 59, "pearson": 87, "penros": 310, "per": [199, 214, 228, 568], "percentil": [6, 342], "perf_count": 0, "perform": [17, 22, 44, 45, 61, 77, 107, 199, 213, 215, 218, 219, 220, 224, 225, 227, 229, 235, 292, 315, 500, 606], "perhap": 575, "period": [10, 630], "permit": 246, "permut": [6, 169, 199, 349, 481, 495, 615, 650], "permute_dim": [6, 615], "perpendicular": 93, "pg": 308, "phase": [10, 21, 630], "phase_deg": 630, "pi": [0, 9, 10, 14, 27, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 99, 100, 212, 506, 592, 593, 594, 610, 611, 616, 630, 654], "pickl": [246, 323], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 17, 18, 22, 23, 24, 38, 77, 79, 80, 95, 96, 97, 98, 101, 110, 134, 155, 157, 169, 207, 209, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 244, 268, 270, 272, 337, 339, 341, 342, 345, 351, 354, 355, 357, 359, 360, 361, 362, 446, 467, 469, 481, 489, 493, 500, 503, 504, 555, 576, 577, 581, 584, 596, 603, 604, 606, 608, 614, 632, 647], "plane": 583, "platform": [95, 96, 97, 98, 185, 354, 355, 359, 361, 500, 606], "pleas": [0, 3, 42, 172, 199, 259, 261, 635, 647], "plot": 556, "plt": [343, 556], "plu": [324, 325, 327], "plugin": 4, "point": [10, 12, 13, 21, 26, 32, 38, 43, 44, 54, 59, 72, 85, 94, 187, 201, 202, 206, 210, 211, 212, 217, 218, 222, 223, 224, 225, 226, 231, 232, 238, 245, 246, 247, 249, 250, 251, 255, 264, 265, 267, 288, 302, 305, 322, 323, 328, 329, 335, 341, 342, 351, 357, 360, 362, 486, 490, 491, 515, 517, 547, 559, 569, 571, 572, 584, 586, 587, 593, 604, 616, 617, 632, 638, 639, 650], "pointer": [72, 182], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 81, 82, 85, 89, 90, 99, 100, 109, 118, 203, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 252, 256, 257, 258, 263, 264, 267, 271, 275, 277, 278, 287, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340, 346, 347, 350, 430, 485, 486, 488, 497, 498, 499, 501, 506, 507, 513, 545, 569, 571, 573, 579, 580, 584, 586, 590, 591, 592, 593, 594, 598, 600, 601, 605, 610, 611, 625, 626], "portion": [259, 260], "posinf": 351, "posit": [6, 10, 17, 18, 22, 26, 38, 43, 44, 45, 60, 74, 85, 105, 106, 146, 160, 207, 210, 211, 213, 215, 218, 219, 220, 223, 226, 228, 231, 238, 246, 272, 275, 277, 278, 279, 280, 292, 305, 317, 349, 351, 356, 358, 361, 458, 472, 485, 495, 520, 544, 581, 582, 584, 586, 588, 600, 601, 614, 615], "possess": 297, "possibl": [10, 51, 52, 57, 58, 61, 119, 152, 172, 199, 200, 207, 241, 242, 255, 259, 261, 336, 431, 464, 495, 504, 567, 576, 599, 602, 607, 608, 609, 615, 635], "possibli": 47, "pow": [6, 499, 647], "power": [6, 10, 206, 212, 238, 305, 498, 601, 631], "pre": 260, "precis": [12, 13, 59, 95, 96, 97, 98, 193, 199, 231, 238, 267, 302, 319, 336, 354, 355, 359, 361, 500, 569, 606, 614], "predecessor": 630, "prefer": [76, 84, 101, 124, 155, 436, 467, 487, 567], "prepend": [39, 107, 198, 613], "present": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 124, 180, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 265, 268, 323, 336, 344, 356, 358, 361, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 617, 619, 623, 631, 638, 639], "preserv": [52, 56, 57, 58, 77, 119, 183, 188, 199, 235, 236, 237, 238, 298, 299, 300, 342, 431, 567, 575, 614, 627], "press": [10, 308], "prevent": 199, "previou": [59, 493], "print": [0, 4, 45, 59, 83, 108, 180, 200, 512, 513, 514, 515, 516, 517, 518, 537, 542], "print_device_info": 0, "printabl": 200, "printopt": 6, "prior": 107, "prob1": [328, 329], "prob12": [328, 329], "prob2": [328, 329], "probabl": [259, 329, 342, 520, 528, 537], "proce": 647, "process": [10, 593], "processor": 199, "prod": [6, 95, 97, 317, 318, 359, 647], "produc": [10, 37, 183, 323, 504, 587, 609], "product": [87, 93, 95, 97, 110, 125, 129, 199, 200, 269, 285, 286, 294, 303, 307, 309, 313, 316, 317, 318, 320, 337, 350, 354, 359, 437, 441, 492, 500, 612, 633, 634, 650], "program": [4, 239, 640, 650], "progress": [253, 322], "project": [4, 188, 320, 501, 634], "promot": [14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 73, 74, 85, 89, 90, 99, 100, 109, 205, 206, 208, 238, 240, 241, 242, 243, 253, 263, 289, 322, 324, 325, 326, 327, 328, 329, 334, 337, 340, 346, 347, 350, 486, 498, 499, 506, 507, 571, 573, 578, 579, 586, 590, 592, 593, 594, 598, 600, 601, 605, 610, 611, 613, 625, 626, 634], "promote_typ": 6, "propag": [188, 241, 242, 339, 340, 345, 346, 354, 355, 356, 358, 359, 361], "proper": [241, 242, 297, 299], "properti": [10, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 112, 119, 124, 127, 130, 132, 133, 136, 138, 139, 143, 144, 150, 155, 156, 160, 163, 164, 165, 169, 170, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 298, 300, 311, 322, 323, 334, 336, 344, 364, 431, 436, 439, 442, 444, 445, 448, 450, 451, 455, 456, 462, 467, 468, 472, 475, 476, 477, 481, 482, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639, 647], "proport": 593, "protocol": [47, 174, 195, 244], "prototyp": 202, "provid": [0, 6, 10, 34, 35, 39, 60, 79, 80, 86, 94, 111, 172, 199, 200, 207, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 248, 259, 260, 262, 279, 280, 306, 310, 335, 352, 353, 356, 358, 359, 361, 514, 546, 549, 572, 575, 585, 603, 608, 616, 627, 634, 636, 637, 654], "pseudo": [310, 508], "ptp": 6, "pure": [10, 217, 223, 225, 226], "purpos": [37, 302, 308], "put": [6, 10, 209, 217, 223, 225, 496, 504, 609, 647], "put_along_axi": [6, 503, 609], "putmask": [6, 503], "pval": 535, "py": 4, "pypi": 4, "pyplot": [343, 556], "pytest": 4, "python": [0, 2, 3, 47, 60, 137, 181, 182, 243, 244, 347, 449, 573, 574, 647], "q": [299, 305, 311, 318, 342], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [21, 29, 31, 49, 53, 213], "quantil": 6, "quaternion": 305, "question": 102, "queue": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 124, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 436, 489, 490, 491, 508, 511, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "quick": [2, 3], "quickest": 567, "quickli": [285, 654], "quicksort": [36, 596], "quotient": [32, 54], "r": [87, 93, 100, 311], "r1": 87, "r2": [87, 311], "r3": 87, "rad": 100, "rad2deg": [6, 99, 100, 630], "radian": [6, 14, 15, 21, 27, 28, 29, 31, 32, 49, 53, 54, 99, 100, 506, 630, 654], "radixsort": [36, 596], "rais": [12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 81, 82, 84, 85, 86, 89, 90, 94, 99, 100, 108, 109, 110, 119, 120, 139, 172, 201, 202, 203, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 261, 263, 265, 271, 275, 277, 278, 287, 288, 289, 290, 291, 305, 307, 308, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 345, 346, 347, 350, 352, 353, 356, 357, 358, 360, 361, 362, 431, 432, 451, 485, 486, 488, 490, 491, 497, 498, 499, 500, 501, 506, 507, 567, 568, 571, 572, 573, 575, 576, 579, 580, 586, 590, 591, 592, 594, 596, 598, 599, 600, 601, 602, 604, 605, 606, 610, 611, 625, 626, 632, 634, 635, 638, 639, 647], "ramp": 493, "rand": [6, 87, 200, 516, 518, 548, 550, 551, 553], "randint": [6, 137, 449, 518, 549], "randn": [6, 235, 236, 237, 310, 311, 314, 318, 512, 517, 603], "random": [87, 137, 200, 235, 236, 237, 299, 307, 310, 311, 314, 318, 449, 603, 640, 650], "random_integ": [6, 514, 518, 546], "random_sampl": [6, 513, 518, 545, 548, 551, 553], "randomli": 542, "randomst": 546, "ranf": 6, "rang": [0, 60, 108, 248, 259, 260, 316, 329, 495, 502, 503, 537, 542, 568, 574, 603, 612, 615, 630, 650], "rank": [207, 209, 247, 302, 306, 319, 493, 607], "rate": [214, 228], "rather": 487, "ratio": [0, 109, 240, 302, 625, 654], "ration": 650, "ravel": [6, 134, 209, 234, 308, 446, 492, 576, 647], "ravel_multi_index": [6, 628], "raveled_indic": 568, "raw": 311, "rayleigh": 6, "rcond": [302, 310], "re": [25, 34, 35, 102, 223, 581], "read": [102, 106, 134, 184, 245, 246, 248, 249, 323, 446, 567, 576], "readonli": 188, "real": [6, 12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 33, 40, 49, 50, 53, 54, 55, 74, 75, 85, 94, 212, 215, 217, 222, 223, 224, 225, 226, 227, 229, 231, 239, 241, 242, 243, 263, 267, 273, 281, 282, 292, 297, 298, 299, 300, 306, 310, 311, 312, 314, 328, 329, 335, 340, 346, 347, 351, 360, 362, 520, 537, 570, 571, 572, 573, 586, 597, 598, 604, 626, 627, 632, 647, 650], "real_if_clos": [6, 21, 267, 569], "rearrang": [146, 458, 650], "reason": 225, "rebuild": 173, "recal": 182, "recent": [23, 61, 602], "recip": [4, 10], "reciproc": [6, 586, 600], "recommend": [199, 487, 613], "reconstruct": [179, 314, 627], "recov": 10, "reduc": [17, 22, 34, 35, 59, 311, 314, 335, 339, 341, 342, 343, 345, 352, 353, 356, 357, 358, 359, 360, 361, 362, 500, 572, 577, 604, 606, 632], "reduce_hypot": 263, "reduct": [17, 22], "redund": 226, "refer": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 166, 168, 169, 171, 172, 173, 174, 182, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 446, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647], "reflect": [493, 647], "reflect_typ": 493, "reflector": 311, "regardless": [176, 298, 300, 635], "regular": 323, "rel": [18, 36, 160, 272, 296, 306, 319, 472, 581, 582, 596], "relat": 184, "relationship": 87, "relev": [177, 253, 322, 334], "rem": 243, "remain": [17, 22, 59, 200, 227, 229, 259, 335, 341, 342, 349, 357, 360, 362, 572, 576, 604, 632], "remaind": [6, 240, 243, 347, 498, 499], "remov": [24, 34, 35, 99, 101, 106, 158, 207, 223, 296, 319, 470, 500, 506, 602, 606, 634, 650], "reorder": [199, 235, 318, 349], "rep": 613, "repeat": [6, 25, 213, 215, 219, 220, 224, 225, 227, 229, 230, 297, 298, 299, 300, 343, 496, 577, 613, 616, 627, 647], "repeatedli": [24, 25, 199], "repetit": [0, 574, 613], "replac": [3, 10, 24, 47, 77, 209, 351, 354, 355, 496, 504, 523, 576, 588, 647], "replic": 613, "repo": 4, "repr": 407, "repres": [10, 26, 39, 43, 44, 46, 47, 48, 59, 60, 62, 63, 65, 66, 68, 87, 182, 200, 218, 226, 244, 247, 253, 255, 268, 271, 312, 322, 334, 343, 362, 493, 509, 577, 621, 627, 647], "represent": [60, 62, 63, 64, 65, 66, 67, 68, 200, 231, 266, 268, 271, 289, 351, 486, 579, 598, 647], "request": 582, "requir": [4, 6, 39, 44, 45, 46, 48, 52, 97, 98, 119, 155, 175, 179, 181, 182, 199, 211, 268, 351, 431, 467, 493, 576, 577], "res_cpu": 102, "res_host": 102, "resampl": 593, "rese": 554, "reset": 647, "reshap": [0, 6, 16, 25, 34, 35, 37, 56, 58, 59, 102, 103, 104, 106, 109, 110, 128, 134, 139, 155, 169, 172, 173, 199, 207, 209, 216, 221, 235, 243, 261, 268, 269, 270, 285, 286, 296, 303, 304, 308, 316, 319, 321, 336, 337, 339, 345, 350, 440, 446, 451, 467, 481, 493, 496, 542, 567, 575, 577, 581, 583, 605, 612, 614, 616, 619, 620, 623, 624, 625, 627, 629, 635, 647], "resid": [207, 211, 244], "residu": 302, "resiz": [6, 207, 647], "resolut": 231, "resolv": [94, 207, 335, 572], "resourc": 0, "respect": [16, 25, 32, 54, 60, 62, 64, 66, 67, 68, 109, 160, 203, 238, 240, 243, 255, 256, 257, 289, 290, 291, 294, 328, 329, 330, 332, 333, 347, 350, 472, 488, 498, 499, 573, 579, 605, 625, 630], "rest": 42, "restor": 581, "restrict": 320, "result": [0, 4, 10, 17, 22, 25, 32, 34, 35, 37, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 77, 79, 80, 85, 87, 91, 94, 95, 96, 97, 98, 101, 109, 110, 174, 192, 200, 202, 203, 208, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 232, 238, 240, 245, 246, 247, 248, 249, 251, 253, 256, 257, 259, 260, 268, 271, 275, 277, 278, 279, 280, 288, 289, 290, 291, 292, 296, 297, 303, 304, 308, 311, 316, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 345, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 487, 488, 491, 492, 498, 499, 500, 503, 516, 520, 550, 572, 576, 578, 579, 580, 582, 584, 587, 590, 591, 593, 599, 603, 604, 606, 608, 609, 612, 613, 616, 621, 625, 626, 627, 629, 632, 634, 637, 639, 647], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 73, 174, 650], "ret": 507, "retain": 576, "retriev": [106, 196, 296], "retstep": 322, "return": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 130, 132, 133, 134, 137, 140, 141, 142, 144, 145, 146, 147, 149, 152, 153, 156, 159, 160, 161, 168, 169, 171, 172, 173, 176, 188, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 440, 442, 444, 445, 446, 449, 452, 453, 454, 456, 457, 458, 459, 461, 464, 465, 468, 471, 472, 473, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 540, 542, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 647], "return_count": 627, "return_index": 627, "return_invers": 627, "reus": [244, 260], "revers": [106, 169, 230, 235, 236, 237, 296, 481, 495, 583, 615, 616, 629, 631], "rewrit": 302, "rfft": [6, 10, 214, 217, 222, 223, 224, 225, 227, 228, 229], "rfft2": [6, 224], "rfftfreq": [6, 214], "rfftn": [6, 212, 215, 225, 226, 227], "right": [10, 31, 53, 64, 67, 77, 93, 106, 108, 236, 237, 263, 289, 294, 297, 298, 299, 300, 307, 318, 336, 561, 572, 579, 587, 614, 616, 619, 623, 631], "right_shift": [6, 64, 67, 289], "rightmost": [259, 260, 318], "rint": [6, 38, 75, 232, 239, 584, 626], "rl": [309, 492], "roll": [6, 582], "rollaxi": [6, 581], "root": [6, 74, 263, 293, 571, 572, 586, 600, 601], "rot90": [6, 236, 237], "rotat": [236, 237, 583], "roughli": [193, 302], "round": [6, 26, 38, 75, 217, 222, 232, 239, 240, 252, 297, 347, 573, 580, 626, 647, 650], "routin": [2, 640, 647], "row": [48, 52, 78, 79, 80, 87, 95, 96, 97, 98, 106, 119, 173, 210, 236, 237, 255, 262, 265, 268, 307, 314, 431, 487, 567, 568, 585, 599, 603, 617, 619, 627, 628, 635, 636], "row_stack": [6, 636], "rowvar": [87, 92], "rsqrt": [571, 600], "rtol": [18, 272, 306, 310], "rule": [14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 59, 62, 64, 66, 67, 68, 73, 74, 85, 86, 89, 90, 93, 96, 98, 99, 100, 109, 205, 206, 208, 240, 241, 242, 243, 253, 263, 289, 294, 322, 324, 325, 326, 327, 328, 329, 334, 335, 337, 340, 341, 342, 346, 347, 350, 357, 360, 362, 486, 498, 499, 506, 507, 571, 572, 573, 578, 579, 586, 590, 592, 593, 594, 598, 600, 601, 604, 605, 606, 610, 611, 616, 625, 626, 632, 634], "run": [0, 4], "runtim": 4, "runtimewarn": [356, 358], "s1": [160, 174, 286, 472], "s10": 174, "s16": 180, "s2": [160, 177, 472], "s25": 174, "s3": [160, 472], "s_": 24, "safe": [52, 73, 79, 80, 86, 119, 199, 262, 337, 431, 585, 603, 634, 636], "sai": 576, "said": 318, "same": [4, 10, 12, 13, 16, 17, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 38, 40, 41, 46, 48, 51, 52, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 77, 78, 79, 80, 85, 87, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 118, 119, 152, 169, 173, 202, 203, 207, 209, 218, 219, 220, 225, 230, 232, 238, 240, 241, 242, 243, 244, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 269, 271, 272, 279, 280, 281, 286, 287, 288, 289, 290, 291, 294, 296, 299, 305, 310, 311, 315, 316, 319, 328, 329, 330, 332, 333, 335, 339, 340, 341, 342, 345, 346, 347, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 430, 431, 464, 481, 486, 488, 491, 493, 496, 498, 499, 500, 504, 512, 514, 518, 540, 546, 562, 567, 569, 572, 573, 574, 576, 579, 581, 582, 585, 587, 588, 596, 602, 603, 604, 605, 606, 608, 609, 612, 614, 618, 620, 622, 624, 625, 628, 632, 633, 636, 639, 654], "same_kind": [52, 73, 79, 80, 86, 119, 199, 262, 337, 431, 585, 603, 634, 636], "sampl": [10, 214, 221, 223, 226, 228, 253, 255, 259, 322, 334, 504, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 609, 616, 619, 623, 640, 650], "sample_r": 228, "satisfi": [39, 44, 46, 48, 52, 119, 209, 301, 431, 496, 575, 588], "save": [6, 246, 342, 654], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [16, 18, 23, 32, 39, 40, 41, 43, 44, 46, 47, 48, 54, 62, 64, 66, 67, 68, 73, 84, 85, 86, 93, 102, 105, 107, 109, 110, 131, 137, 174, 179, 199, 200, 203, 209, 214, 228, 230, 238, 240, 241, 242, 243, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 269, 270, 272, 274, 282, 283, 286, 287, 288, 289, 290, 291, 303, 313, 316, 322, 328, 329, 330, 332, 333, 334, 336, 337, 340, 343, 346, 347, 350, 443, 449, 484, 486, 488, 493, 496, 498, 499, 503, 504, 508, 512, 514, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 543, 544, 546, 549, 552, 554, 558, 560, 561, 562, 563, 564, 565, 566, 570, 573, 579, 587, 588, 605, 608, 612, 616, 625, 626, 631, 633, 637, 647], "scale": [10, 200, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 253, 286, 311, 322, 334, 512, 525, 527, 529, 530, 531, 532, 540, 552, 557, 564], "scientif": 10, "scipi": 204, "scope": 4, "script": 4, "search": [200, 640, 650], "searchsort": [6, 108, 259, 596, 647], "second": [16, 18, 32, 40, 41, 54, 59, 62, 64, 66, 67, 68, 72, 85, 93, 106, 109, 110, 174, 200, 203, 206, 213, 214, 215, 216, 219, 220, 223, 226, 228, 238, 240, 241, 242, 243, 252, 255, 256, 257, 259, 260, 261, 262, 263, 269, 272, 286, 287, 289, 290, 291, 294, 296, 303, 316, 319, 320, 328, 329, 330, 332, 333, 336, 337, 339, 340, 343, 345, 346, 347, 350, 488, 492, 498, 499, 573, 579, 583, 601, 605, 607, 612, 614, 625, 633, 634], "section": [4, 42, 175, 215, 220, 225, 229, 304, 321, 647], "see": [3, 38, 87, 184, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 244, 259, 302, 304, 321, 493, 535, 584, 619, 620, 623, 624, 627, 647], "seed": [6, 87, 137, 200, 449, 508], "seek": 246, "seldom": 238, "select": [6, 36, 86, 209, 339, 345, 596, 602, 608, 616, 640], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "self": [133, 365, 366, 367, 368, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 445], "semant": 259, "sens": 318, "sep": [246, 249], "separ": [10, 152, 174, 199, 246, 249, 260, 351, 464, 577], "sequenc": [25, 42, 47, 56, 57, 58, 78, 79, 80, 83, 88, 172, 173, 199, 200, 201, 202, 213, 215, 219, 220, 223, 224, 225, 227, 229, 250, 251, 253, 259, 260, 261, 262, 268, 270, 285, 307, 316, 322, 334, 342, 349, 490, 491, 493, 496, 542, 555, 574, 575, 578, 585, 599, 603, 612, 616, 629, 635, 636, 638, 639], "sequenti": [88, 92, 204, 348, 359], "seri": [10, 223, 534], "serv": 629, "set": [10, 24, 34, 35, 36, 39, 52, 61, 76, 87, 91, 102, 103, 105, 108, 119, 120, 133, 155, 174, 188, 199, 201, 250, 259, 260, 265, 268, 304, 306, 308, 309, 310, 321, 322, 339, 345, 352, 353, 361, 420, 431, 432, 445, 467, 490, 491, 492, 493, 500, 588, 590, 591, 596, 606, 619, 623, 638, 639, 647], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 180], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 301, "shape": [4, 6, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 46, 49, 50, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 109, 110, 111, 118, 119, 144, 152, 156, 158, 169, 173, 174, 176, 196, 201, 202, 203, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 235, 238, 239, 240, 241, 242, 243, 247, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 275, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 301, 302, 303, 304, 305, 307, 311, 312, 313, 314, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 430, 431, 456, 464, 468, 470, 481, 484, 485, 486, 488, 489, 490, 491, 493, 495, 497, 498, 499, 500, 501, 503, 504, 506, 507, 513, 514, 515, 516, 517, 527, 530, 535, 536, 541, 545, 546, 547, 548, 549, 550, 551, 553, 558, 559, 565, 567, 568, 569, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 614, 615, 617, 618, 620, 622, 623, 624, 625, 626, 628, 629, 632, 634, 635, 636, 637, 638, 639, 640, 650], "share": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 124, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 436, 489, 490, 491, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 617, 619, 623, 631, 638, 639], "shared_bin": 260, "shares_memori": 6, "shift": [10, 64, 67, 213, 215, 216, 220, 221, 289, 579, 581], "short": [593, 626, 634, 647], "shortcut": 493, "shorter": [217, 223], "shorthand": [12, 13, 16, 62, 63, 64, 65, 66, 67, 68, 109, 203, 240, 256, 257, 271, 289, 290, 291, 330, 332, 337, 347, 350, 485, 488, 497, 498, 499, 573, 579, 605, 625, 637], "should": [24, 34, 35, 39, 42, 52, 106, 108, 110, 119, 154, 199, 200, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 243, 246, 254, 259, 270, 285, 302, 305, 316, 337, 349, 352, 353, 356, 358, 431, 466, 493, 535, 568, 576, 577, 587, 598, 608, 612, 614, 628, 630, 634, 647], "show": [9, 41, 177, 230, 263, 333, 343, 351, 354, 355, 356, 358, 361, 556], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [154, 255, 299, 466, 587], "sigma": [533, 540], "sign": [6, 10, 18, 60, 85, 180, 187, 272, 295, 312, 347, 485, 497, 500, 573, 591, 606, 626], "signal": [10, 214, 217, 222, 223, 225, 228, 593, 630], "signatur": [336, 337, 493, 634], "signbit": [6, 590], "signific": 199, "significantli": 60, "signum": 590, "similar": [3, 43, 44, 124, 155, 174, 253, 270, 294, 296, 303, 309, 319, 320, 322, 334, 336, 436, 467, 496, 514, 546, 619, 620, 623, 624], "simpl": [4, 333, 650], "simpli": [104, 169, 246, 259, 260, 288, 481], "sin": [0, 6, 29, 30, 49, 50, 89, 299, 343, 593, 594, 610, 616], "sinc": [6, 87, 157, 223, 297, 299, 469, 487, 629], "sine": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 592, 593, 594, 610, 611], "sing": 308, "singl": [9, 10, 36, 70, 71, 78, 87, 137, 158, 199, 200, 255, 270, 307, 316, 339, 345, 449, 470, 500, 514, 515, 516, 517, 537, 546, 547, 548, 549, 550, 551, 553, 559, 606, 612, 616, 634, 647], "singleton": [17, 22, 59, 207, 335, 341, 342, 356, 357, 358, 360, 362, 572, 602, 604, 632], "singular": [301, 302, 306, 308, 310, 314, 315], "sinh": [6, 15, 28, 30, 50, 90, 592, 611], "sinu": 593, "size": [0, 6, 26, 34, 35, 39, 42, 59, 61, 72, 79, 80, 88, 91, 92, 95, 96, 103, 108, 137, 138, 155, 172, 174, 186, 189, 200, 209, 212, 214, 218, 228, 246, 253, 255, 261, 262, 294, 296, 304, 308, 309, 311, 314, 316, 320, 321, 322, 334, 336, 339, 341, 345, 352, 353, 354, 355, 357, 359, 361, 449, 450, 467, 490, 496, 500, 512, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 546, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 577, 581, 585, 599, 602, 603, 606, 612, 623, 629, 630, 634, 635, 636, 638, 647], "skip": 106, "slice": [24, 25, 101, 209, 270, 352, 353, 356, 357, 358, 360, 362, 503, 504, 588, 609, 616, 623, 624, 647], "slogdet": [6, 295], "slower": [316, 612], "slowest": [134, 446, 567, 576], "small": [18, 208, 272, 302, 310, 326, 328, 329, 351, 623], "smaller": [107, 146, 212, 213, 215, 218, 219, 220, 222, 224, 225, 226, 227, 229, 231, 302, 347, 458, 496, 573, 630], "smallest": [231, 266, 308, 627], "smallest_norm": 231, "smat": 314, "so": [10, 14, 15, 17, 22, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 59, 183, 188, 203, 217, 222, 238, 259, 270, 282, 316, 322, 329, 335, 341, 342, 343, 357, 360, 362, 556, 572, 604, 612, 613, 632], "softwar": 4, "solut": [302, 313, 577], "solv": [6, 302, 317, 318, 650], "some": [26, 179, 188, 207, 209, 239, 269, 302, 493, 496, 630, 637, 647], "sometim": [258, 647], "somewhat": 305, "sophist": 305, "sort": [6, 24, 36, 42, 117, 146, 172, 261, 314, 342, 429, 458, 495, 587, 597, 599, 609, 615, 616, 627, 635, 640, 647, 650], "sort_complex": 6, "sorter": [154, 466, 587], "sought": 293, "sourc": [4, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 76, 77, 78, 80, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 135, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 157, 158, 159, 161, 162, 166, 167, 168, 169, 171, 172, 173, 198, 199, 200, 201, 202, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 259, 260, 261, 262, 265, 266, 268, 269, 270, 272, 273, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 484, 487, 490, 491, 492, 493, 494, 496, 500, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 572, 574, 575, 576, 577, 578, 581, 582, 583, 587, 588, 589, 595, 596, 597, 599, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "space": [6, 26, 214, 216, 228, 246, 253, 255, 322, 334, 616, 654], "spars": [268, 343], "speak": 308, "special": [2, 182, 204, 640, 650], "specif": [0, 4, 177, 179, 192, 247], "specifi": [17, 22, 23, 24, 26, 34, 35, 36, 38, 39, 43, 44, 45, 46, 48, 59, 60, 71, 73, 79, 80, 84, 94, 95, 96, 97, 98, 101, 102, 105, 106, 117, 128, 137, 199, 200, 201, 202, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 235, 238, 245, 246, 247, 248, 250, 251, 253, 255, 265, 276, 296, 298, 300, 308, 316, 317, 318, 319, 320, 321, 322, 323, 334, 335, 341, 342, 344, 354, 355, 357, 359, 360, 361, 362, 429, 440, 449, 489, 490, 491, 495, 496, 500, 503, 504, 514, 517, 531, 541, 559, 567, 568, 572, 575, 577, 581, 582, 583, 584, 588, 595, 603, 604, 606, 608, 609, 612, 614, 615, 616, 617, 627, 629, 631, 632, 634, 638, 639], "spectrum": [10, 216, 217, 221, 222], "speed": 199, "speedup": 200, "spell": 487, "split": [6, 42, 79, 80, 172, 173, 261, 262, 585, 603, 629, 635, 636, 650], "spreadsheet": 239, "sqrt": [6, 10, 74, 136, 150, 448, 462, 572, 586, 601], "squar": [6, 74, 263, 265, 292, 293, 297, 298, 299, 301, 302, 305, 312, 317, 318, 336, 360, 362, 522, 538, 571, 572, 586, 588, 600, 604, 620, 624, 631, 632], "squeez": [6, 207, 647], "src": 86, "stabil": [36, 596], "stabl": [36, 596], "stack": [6, 78, 79, 80, 173, 262, 295, 296, 303, 304, 306, 310, 311, 312, 315, 319, 337, 338, 487, 585, 599, 609, 629, 636], "stai": 77, "stand": 255, "standard": [137, 159, 231, 240, 243, 341, 347, 357, 360, 362, 449, 471, 515, 517, 533, 540, 547, 556, 557, 558, 559, 560, 573, 604, 632, 647, 650], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 512, 515, 547], "standard_t": 6, "start": [2, 3, 26, 46, 48, 200, 214, 218, 228, 245, 253, 322, 334, 336, 577, 582, 619, 623], "start_tim": 0, "stat_length": 493, "state": 509, "statist": [493, 640, 650], "std": [6, 341, 357, 360, 362, 632, 647], "stdev": [517, 559], "step": [4, 26, 200, 253, 258, 322, 334], "sticki": [174, 183], "still": [59, 261, 308, 635], "stop": [26, 253, 322, 334], "store": [232, 253, 279, 280, 319, 322, 329, 334, 337, 492, 634], "str": [45, 47, 60, 79, 80, 193, 199, 200, 246, 249, 262, 323, 421, 493, 575, 585, 603, 621, 636], "str_": [179, 180, 186, 190], "straightforward": 268, "strictli": 308, "stride": [51, 52, 111, 119, 431], "string": [26, 39, 43, 44, 45, 46, 47, 48, 52, 60, 62, 63, 64, 65, 66, 67, 68, 84, 102, 103, 105, 119, 124, 174, 177, 180, 187, 192, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 271, 289, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 493, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 579, 617, 619, 621, 623, 631, 638, 639, 647], "string_repr": 200, "stringio": 323, "strongli": [4, 613], "struct": [174, 183], "structur": [174, 184, 323], "student": 560, "style": [52, 119, 431, 487, 493, 567, 568, 628], "sub": [42, 79, 80, 101, 106, 172, 182, 191, 192, 194, 196, 199, 261, 262, 318, 319, 585, 599, 603, 614, 617, 629, 635, 636], "subarrai": [101, 176, 179, 268, 627], "subclass": [44, 575], "subdiagon": [296, 319], "subdivid": 174, "subdtyp": 176, "subject": 4, "subok": [12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 39, 49, 50, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 81, 82, 84, 85, 89, 90, 99, 100, 109, 119, 202, 203, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 251, 252, 256, 257, 258, 263, 271, 275, 277, 278, 287, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 340, 346, 347, 350, 431, 485, 486, 488, 491, 497, 498, 499, 501, 506, 507, 571, 573, 579, 580, 586, 590, 591, 592, 594, 598, 600, 601, 605, 610, 611, 625, 626, 634, 639], "subscript": [199, 200], "subset": [3, 255, 602, 650], "subtract": [6, 493], "subtyp": 567, "succeed": 198, "success": [45, 520, 528, 537], "suffici": 60, "sugar": [104, 620, 624], "suggest": 106, "suit": 4, "suitabl": [37, 137, 169, 449, 481, 504, 577, 587, 609], "sum": [0, 3, 4, 6, 10, 16, 25, 59, 61, 94, 96, 97, 98, 102, 105, 106, 107, 110, 126, 168, 199, 218, 259, 263, 269, 293, 302, 303, 308, 316, 317, 319, 328, 329, 335, 337, 354, 355, 361, 438, 480, 520, 535, 537, 572, 612, 614, 616, 634, 647, 650], "sum_": [10, 308, 320, 634], "sum_along_diagon": 614, "sum_of_weight": 59, "summari": 640, "summat": [110, 199, 200, 269, 316, 318, 337, 492, 612, 634], "superdiagon": [296, 319], "suppli": [217, 222, 307, 493, 515, 547], "support": [3, 4, 9, 12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 47, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 81, 82, 84, 85, 88, 89, 90, 92, 99, 100, 109, 119, 155, 188, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 263, 265, 270, 271, 275, 277, 278, 287, 288, 289, 290, 291, 294, 296, 303, 309, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 345, 346, 347, 348, 350, 352, 353, 356, 357, 358, 359, 360, 361, 362, 431, 467, 485, 486, 488, 490, 491, 494, 497, 498, 499, 500, 501, 502, 505, 506, 507, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571, 573, 575, 579, 580, 586, 590, 591, 592, 596, 598, 600, 601, 604, 605, 606, 610, 611, 625, 626, 632, 634, 638, 639, 654], "sure": 575, "surnam": 174, "surpris": [218, 219, 220], "svd": [6, 293, 301, 306, 310, 315], "svdval": 6, "swap": [177, 192, 213, 216, 607], "swapax": [6, 349, 647], "swapped_cod": [177, 192], "swapped_dt": 192, "sy": [177, 192], "sycl": [0, 3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "sycl_queu": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 124, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 436, 489, 490, 491, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "sycldevic": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 510, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "syclqueu": [26, 39, 43, 44, 45, 46, 47, 48, 52, 84, 102, 103, 105, 119, 124, 201, 202, 210, 214, 228, 244, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 431, 436, 489, 490, 491, 508, 511, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 617, 619, 623, 631, 638, 639], "symmetr": [217, 223, 225, 226, 292, 297, 298, 299, 300, 306, 310, 314, 493], "symmetri": [10, 212, 217, 222, 223, 226], "syntact": [104, 620, 624], "syntax": 647, "sys_is_l": [177, 192], "system": [3, 4, 60, 313], "t": [10, 79, 80, 92, 169, 182, 217, 276, 292, 297, 299, 302, 481, 487, 560, 567, 616], "t1": 654, "tabl": [2, 9, 304, 321, 640], "tack": 196, "take": [6, 25, 78, 209, 285, 336, 496, 504, 567, 576, 587, 588, 593, 609, 627, 630, 647, 654], "take_along_axi": [6, 34, 35, 36, 76, 504, 608], "taken": [59, 106, 107, 198, 200, 217, 223, 224, 225, 226, 227, 229, 258, 259, 337, 360, 362, 588, 604, 614, 617, 619, 623, 632, 633, 634], "tall": 230, "tan": [6, 29, 31, 32, 33, 49, 53, 54, 55, 89, 592, 611], "tangent": [14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 592, 594, 610, 611], "tanh": [6, 15, 28, 33, 55, 90, 594, 610], "target": [52, 73, 119, 167, 431, 479, 503], "target_devic": [167, 479], "tau": 311, "tbb": 4, "tempfil": 246, "temporari": [246, 654], "temporaryfil": 246, "ten": 528, "tensor": [47, 111, 199, 200, 244, 316, 317, 318, 352, 353, 356, 358, 359, 502, 612], "tensordot": [6, 110, 199, 269, 317, 318, 337, 492], "tensorinv": [6, 318], "tensorsolv": [6, 317], "term": [10, 16, 109, 200, 212, 213, 215, 218, 219, 220, 223, 226, 350, 605, 625], "test": [0, 2, 17, 18, 22, 203, 256, 257, 273, 275, 277, 278, 279, 280, 290, 291, 359, 487, 488, 520, 647, 650], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [245, 246, 248, 249, 323], "th": [96, 98, 102, 105, 107, 169, 198, 210, 255, 268, 342, 481, 489, 495, 588, 615, 618, 620, 622, 624], "than": [24, 25, 39, 64, 67, 95, 96, 97, 98, 139, 146, 172, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 231, 236, 237, 240, 247, 256, 257, 259, 260, 262, 289, 290, 291, 302, 306, 310, 311, 316, 319, 354, 355, 359, 361, 451, 458, 487, 493, 496, 500, 577, 579, 588, 590, 602, 603, 606, 612, 614, 626, 630, 654], "thei": [18, 41, 181, 272, 276, 288, 299, 302, 316, 585, 587, 612, 616, 619, 623, 630, 631, 636, 647], "them": [78, 306, 310, 647], "theor": 297, "theoret": 200, "therefor": [62, 68, 212, 226, 247, 298, 300, 577], "theta": 616, "thi": [10, 12, 13, 19, 20, 23, 24, 25, 26, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 51, 52, 54, 77, 79, 80, 84, 87, 91, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 119, 124, 129, 131, 134, 137, 146, 152, 169, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 236, 237, 238, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 260, 262, 274, 276, 282, 285, 294, 296, 298, 300, 302, 303, 304, 307, 308, 309, 312, 315, 319, 320, 321, 322, 323, 326, 328, 329, 334, 335, 336, 337, 339, 342, 345, 347, 349, 351, 352, 353, 356, 358, 359, 361, 431, 436, 441, 443, 446, 449, 458, 464, 481, 487, 493, 496, 500, 503, 504, 551, 553, 567, 572, 573, 575, 576, 577, 582, 583, 585, 596, 603, 606, 608, 609, 613, 616, 620, 624, 627, 629, 630, 631, 634, 636, 637], "thing": 608, "think": [493, 576], "third": [78, 79, 80, 93, 172, 173, 213, 262, 316, 585, 599, 603, 612, 636], "those": [10, 24, 77, 87, 101, 305, 504], "though": 218, "thousand": 528, "three": [56, 57, 58, 207, 305, 316, 336, 508, 554, 612, 627], "threshold": 306, "through": [44, 190, 260, 285, 297, 299, 302, 336, 575, 647], "throw": 535, "thu": [10, 217, 223, 225, 613], "tile": [6, 574, 650], "time": [0, 10, 16, 18, 32, 40, 41, 54, 62, 64, 66, 67, 68, 85, 107, 109, 110, 203, 213, 215, 217, 219, 220, 222, 224, 225, 227, 229, 238, 240, 241, 242, 243, 252, 256, 257, 258, 263, 269, 270, 272, 278, 286, 287, 288, 289, 290, 291, 302, 306, 310, 316, 328, 329, 330, 332, 333, 340, 346, 347, 350, 486, 488, 493, 498, 499, 520, 535, 573, 579, 583, 593, 605, 609, 612, 613, 625, 627, 633], "time_dpnp": 0, "time_numpi": 0, "timedelta": 187, "timeit": 199, "timestep": 214, "tini": 231, "titl": 180, "tm": 243, "to_begin": 198, "to_devic": 6, "to_end": 198, "tobyt": 6, "todo": 538, "tofil": [6, 246], "togeth": [18, 79, 80, 183, 218, 272, 285, 603, 637], "tol": [306, 536, 570], "toler": [18, 40, 272, 306, 570], "tolist": 6, "too": [4, 213, 215, 219, 220, 224, 225, 227, 229, 637], "toolkit": 3, "tostr": 6, "total": [6, 91, 95, 97, 143, 455, 577, 595, 604, 632], "toward": [38, 75, 232, 239, 240, 259, 260, 347, 486, 573, 580, 583, 584, 626], "trace": [6, 102, 105, 106, 199, 647], "traceback": [23, 61, 602], "trail": 621, "transfer": [167, 479], "transform": [200, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 640, 650], "transpos": [6, 37, 87, 112, 139, 199, 276, 292, 299, 338, 349, 364, 451, 495, 647, 650], "trapezoid": [6, 96, 98, 606], "trapz": 6, "treat": [18, 87, 101, 217, 223, 225, 246, 255, 272, 298, 300, 302, 307, 323, 342, 354, 355, 359, 361, 500, 504, 587, 609, 613, 627, 630, 647], "tri": 6, "trial": 520, "triangl": [102, 263, 336, 572, 617, 618, 619, 620, 622, 623, 624], "triangular": [6, 292, 298, 300, 311, 336, 619, 620, 623, 624], "trigonometr": [14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 89, 90, 592, 594, 610, 611, 650], "tril": [6, 102, 336, 617, 619, 620, 623], "tril_indic": [6, 336, 620, 623], "tril_indices_from": [6, 624], "trili": 620, "trili1": 620, "trim": [213, 215, 219, 220, 224, 225, 227, 229, 621], "trim_zero": 6, "triu": [6, 102, 336, 617, 619, 623, 624], "triu_indic": [6, 336, 619, 624], "triu_indices_from": [6, 620], "triui": 624, "triuim1": 624, "trivial": [297, 609], "true": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 96, 97, 98, 99, 100, 108, 109, 113, 114, 119, 124, 140, 141, 142, 147, 159, 161, 171, 174, 177, 188, 192, 199, 200, 203, 205, 206, 207, 208, 209, 211, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 252, 253, 256, 257, 258, 259, 263, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 301, 304, 306, 308, 310, 311, 313, 314, 316, 318, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 368, 425, 426, 431, 436, 452, 453, 454, 459, 471, 473, 483, 485, 486, 487, 488, 496, 497, 498, 499, 500, 501, 504, 506, 507, 523, 571, 572, 573, 575, 576, 579, 580, 586, 588, 590, 591, 592, 594, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 616, 625, 626, 627, 629, 631, 632, 634, 637], "true_divid": [6, 109], "trunc": [6, 38, 75, 232, 239, 580, 584], "truncat": [38, 75, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 232, 239, 556, 580, 584, 626], "trust": [352, 353], "truth": [62, 63, 65, 66, 68, 203, 256, 257, 271, 290, 291, 330, 331, 332, 333, 488, 647, 650], "try": [4, 45], "tukei": 10, "tup": [78, 173, 262, 585, 636], "tupl": [17, 22, 23, 24, 25, 34, 35, 39, 43, 44, 45, 46, 48, 59, 70, 71, 72, 84, 91, 94, 102, 103, 104, 105, 137, 155, 169, 174, 180, 194, 196, 200, 207, 216, 221, 235, 244, 247, 250, 251, 253, 255, 259, 260, 262, 268, 274, 282, 285, 286, 308, 311, 318, 321, 322, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 356, 357, 358, 359, 360, 361, 362, 449, 467, 481, 487, 489, 493, 495, 500, 568, 572, 574, 576, 577, 581, 585, 589, 602, 603, 604, 606, 613, 615, 619, 620, 623, 624, 628, 629, 631, 632, 634, 636, 647], "turn": 78, "twister": 508, "two": [10, 18, 25, 40, 56, 57, 60, 62, 63, 65, 66, 68, 83, 87, 88, 93, 105, 106, 107, 110, 129, 139, 146, 162, 174, 180, 199, 200, 207, 212, 213, 215, 218, 219, 220, 223, 224, 225, 227, 229, 241, 242, 255, 269, 271, 272, 286, 288, 296, 298, 302, 304, 307, 309, 313, 315, 316, 319, 330, 332, 333, 337, 338, 339, 340, 342, 345, 346, 349, 356, 358, 441, 451, 458, 474, 492, 493, 515, 547, 567, 580, 583, 584, 588, 607, 612, 614, 619, 620, 623, 624, 633], "type": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 124, 130, 134, 137, 144, 152, 156, 169, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 430, 431, 436, 442, 446, 449, 456, 464, 468, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 650], "type_nam": 0, "typeerror": [59, 61, 86, 155, 244, 288, 467], "typenam": 6, "typestr": 195, "typic": [18, 217, 272, 587, 647], "u": [187, 292, 298, 300, 314, 336, 359, 361, 627], "u1": [174, 245, 246], "u16": 179, "u4": 73, "u8": 174, "ufunc": [2, 25, 640, 647], "uint64": 174, "uint8": [174, 245, 246], "uk": 10, "un": 189, "unalt": 493, "unari": 647, "unchang": 229, "undefin": [21, 146, 342, 458, 493], "under": [304, 321], "underli": [62, 66, 68, 567, 576], "undo": [10, 220], "undocu": 188, "unexpect": [359, 361], "unicod": [180, 187], "uniform": [6, 188, 255, 259, 260, 334, 513, 514, 516, 545, 548, 550, 551, 553], "uniformli": [334, 518, 562], "uniniti": [39, 201, 202, 250, 490, 638], "union1d": 6, "uniqu": [6, 59, 61, 94, 108, 178, 193, 335, 341, 349, 357, 360, 362, 493, 572, 574, 604, 632], "unique_al": 6, "unique_count": [6, 627], "unique_indic": 627, "unique_invers": [6, 627], "unique_valu": 6, "unit": [160, 214, 228, 285, 297, 305, 312, 472], "unitari": [10, 255, 311, 314], "uniti": 259, "univ": 10, "univers": [2, 308, 640, 647], "unless": [17, 22, 52, 95, 96, 97, 98, 119, 199, 259, 297, 306, 308, 334, 354, 355, 359, 361, 431, 500, 606, 627, 634], "unlik": [152, 155, 228, 464, 467], "unmodifi": 260, "unpackbit": 6, "unravel": 628, "unravel_index": [6, 34, 35, 568], "unraveled_coord": 628, "unsaf": [52, 73, 79, 80, 86, 119, 199, 262, 337, 431, 585, 603, 634, 636], "unscal": 10, "unsign": [174, 187, 500, 606], "unspecifi": 576, "unstack": [6, 262, 585, 603, 636], "unsupport": [12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 85, 89, 90, 99, 100, 109, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 244, 252, 258, 263, 271, 287, 288, 289, 325, 326, 327, 328, 329, 340, 346, 347, 348, 350, 485, 486, 497, 498, 499, 501, 506, 507, 571, 573, 579, 580, 586, 590, 591, 592, 594, 598, 605, 610, 611, 625, 626], "until": [200, 581, 582], "unwrap": [6, 99, 506], "up": [4, 10, 177, 199, 237, 609, 620, 627], "upcast": 39, "updat": 4, "uplo": [298, 300], "upon": [160, 472], "upper": [102, 210, 259, 260, 292, 298, 300, 311, 336, 617, 619, 620, 622, 623, 624], "url": 4, "us": [4, 10, 16, 23, 24, 26, 32, 37, 39, 43, 44, 45, 46, 47, 48, 51, 52, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 77, 79, 80, 84, 87, 93, 95, 96, 97, 98, 101, 102, 103, 105, 106, 109, 119, 124, 134, 155, 174, 181, 182, 184, 188, 190, 199, 200, 201, 202, 203, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 239, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 265, 268, 269, 271, 276, 285, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 302, 306, 307, 308, 310, 316, 319, 322, 323, 329, 330, 332, 334, 336, 337, 339, 341, 342, 343, 344, 345, 347, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 370, 431, 436, 446, 467, 485, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 500, 504, 508, 510, 511, 512, 518, 521, 523, 524, 534, 539, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 559, 562, 567, 570, 573, 574, 575, 576, 577, 579, 581, 587, 588, 590, 593, 597, 604, 605, 606, 608, 609, 612, 613, 614, 616, 617, 619, 620, 623, 624, 625, 627, 628, 631, 632, 634, 637, 638, 639, 647, 654], "usabl": 238, "usag": [3, 4, 214, 228], "use_getitem": 181, "use_setitem": 181, "user": [181, 184, 351, 493], "usm": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 124, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 436, 489, 490, 491, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 602, 617, 619, 623, 631, 638, 639], "usm_ndarrai": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 119, 131, 135, 172, 173, 198, 199, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 443, 447, 484, 485, 486, 487, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 639], "usm_typ": [26, 39, 43, 44, 45, 46, 47, 48, 84, 102, 103, 105, 111, 124, 201, 202, 210, 214, 228, 245, 246, 247, 248, 249, 250, 251, 253, 265, 268, 322, 323, 334, 336, 344, 436, 489, 490, 491, 512, 513, 514, 515, 516, 517, 518, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 617, 619, 623, 631, 638, 639], "usual": [103, 155, 180, 264, 303, 337, 467], "util": 640, "v": [83, 102, 105, 154, 187, 297, 298, 320, 342, 466, 503, 587, 634], "v0": 6, "v10": 174, "v13": 6, "v2": 6, "v_sort": 342, "val": [148, 230, 420, 460, 496], "valid": [88, 207, 336, 607, 619, 620, 623, 624], "valu": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 107, 108, 109, 115, 116, 119, 121, 124, 131, 133, 146, 148, 155, 188, 192, 199, 201, 202, 203, 205, 206, 208, 209, 210, 211, 217, 218, 223, 225, 226, 230, 231, 232, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 270, 271, 272, 274, 275, 277, 278, 281, 282, 285, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 305, 306, 308, 310, 312, 313, 314, 315, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 366, 367, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 431, 433, 436, 443, 445, 458, 460, 467, 485, 486, 487, 488, 490, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 513, 514, 518, 528, 545, 546, 562, 569, 571, 572, 573, 574, 575, 576, 579, 580, 581, 584, 586, 587, 588, 590, 591, 592, 593, 596, 598, 600, 601, 604, 605, 606, 608, 609, 610, 611, 614, 616, 619, 623, 625, 626, 627, 630, 632, 634, 637, 638, 639, 647, 650], "value2": 188, "valueerror": [23, 39, 44, 45, 139, 244, 308, 352, 353, 451, 576, 599, 602], "van": 308, "vander": 6, "vandermond": 631, "var": [6, 341, 357, 360, 362, 604, 647], "vararg": 255, "vari": [10, 17, 21, 22, 106, 200, 213, 215, 217, 218, 219, 220, 222, 223, 226, 229, 247, 268, 276, 293, 296, 297, 298, 302, 304, 308, 351, 357, 360, 362, 567, 570, 593], "variabl": [61, 87, 92, 302, 313], "varianc": [171, 341, 357, 360, 362, 483, 604, 632, 650], "variou": [308, 593, 654], "vdot": [6, 110, 320, 337, 634], "vecdot": [6, 633], "vector": [93, 199, 247, 268, 269, 285, 293, 294, 303, 306, 307, 308, 309, 314, 315, 320, 321, 337, 342, 343, 492, 493, 633, 634, 650], "vector_norm": [6, 308], "vendor": 4, "veri": [3, 10, 18, 270, 272, 309, 343, 351, 492], "verif": 0, "verifi": 292, "version": [4, 91, 93, 106, 133, 191, 234, 337, 342, 445, 487, 492, 568, 614, 628, 633, 634], "vertic": [78, 79, 80, 106, 173, 230, 235, 236, 262, 296, 583, 585, 599, 603, 635, 636], "vetterlin": 10, "vh": 314, "via": 223, "view": [6, 42, 56, 57, 58, 69, 102, 106, 112, 139, 152, 169, 172, 207, 213, 215, 219, 220, 224, 225, 227, 229, 235, 236, 237, 261, 343, 349, 364, 451, 464, 481, 495, 504, 567, 568, 576, 583, 599, 602, 607, 615, 628, 635], "violat": 86, "void": [174, 187], "void640": 189, "von": 563, "vonmis": 6, "vsplit": [6, 79, 80, 599], "vstack": [6, 78, 79, 80, 173, 262, 302, 585, 599, 603], "w": [10, 59, 61, 297, 298, 299, 300, 305, 575], "wa": [10, 94, 188, 307, 335, 356, 358, 360, 362, 517, 559, 572, 576, 604, 632], "wai": [3, 4, 10, 146, 200, 212, 218, 219, 220, 225, 246, 316, 458, 612], "wald": 6, "walk": 190, "want": [4, 276, 609], "warn": [179, 352, 353, 536, 577], "we": [84, 87, 103, 106, 200, 230, 302, 336, 504, 609, 616], "weibul": [6, 566], "weight": [59, 61, 92, 259, 260, 341, 357, 606], "well": [188, 199, 246, 259, 260, 500, 520, 537, 556], "were": [79, 80, 247, 515, 547, 603, 630], "what": [10, 52, 73, 79, 80, 86, 119, 174, 182, 199, 203, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 262, 273, 337, 431, 520, 537, 585, 603, 634, 636, 647], "when": [10, 23, 26, 36, 39, 40, 43, 44, 46, 48, 51, 52, 59, 60, 84, 86, 108, 119, 183, 199, 212, 223, 225, 226, 241, 242, 253, 258, 270, 297, 303, 308, 311, 315, 316, 322, 329, 334, 336, 337, 342, 347, 354, 355, 356, 358, 359, 361, 431, 567, 573, 577, 580, 582, 584, 588, 596, 608, 612, 616, 627, 634, 637, 654], "whenev": [207, 495, 607, 615], "where": [0, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 81, 82, 84, 85, 86, 89, 90, 93, 94, 99, 100, 102, 103, 105, 107, 108, 109, 113, 114, 119, 124, 140, 141, 142, 147, 154, 159, 161, 171, 172, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 217, 223, 224, 225, 228, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 261, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 277, 278, 281, 282, 287, 288, 289, 290, 291, 292, 296, 302, 306, 311, 314, 315, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 344, 345, 346, 347, 350, 356, 357, 358, 359, 360, 361, 362, 425, 426, 431, 436, 452, 453, 454, 459, 466, 471, 473, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 506, 507, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 554, 559, 562, 567, 571, 572, 573, 577, 579, 580, 582, 586, 587, 588, 590, 591, 592, 594, 598, 599, 600, 601, 604, 605, 606, 610, 611, 614, 615, 617, 619, 623, 625, 626, 630, 631, 632, 634, 635, 638, 639], "wherev": 86, "whether": [17, 18, 22, 25, 40, 94, 97, 98, 108, 182, 183, 185, 244, 272, 273, 276, 292, 311, 322, 351, 359, 361, 568, 591, 627, 628, 647], "which": [3, 4, 10, 17, 22, 23, 24, 25, 26, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 52, 59, 61, 69, 79, 80, 84, 86, 91, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 110, 119, 124, 137, 180, 183, 199, 200, 201, 202, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 241, 242, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 260, 262, 265, 268, 270, 275, 277, 278, 279, 280, 292, 294, 296, 297, 304, 306, 308, 315, 318, 319, 320, 321, 323, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 431, 436, 449, 487, 489, 490, 491, 495, 500, 503, 508, 540, 545, 546, 547, 548, 549, 550, 551, 553, 559, 562, 568, 572, 574, 577, 581, 588, 595, 596, 599, 602, 603, 604, 606, 608, 614, 615, 616, 617, 618, 619, 622, 623, 626, 629, 630, 631, 632, 634, 637, 638, 639, 647, 654], "whichev": 269, "while": [10, 87, 227, 229, 259, 260, 341, 357, 360, 362, 487, 496, 500, 581, 604, 606, 617, 632], "whitespac": [246, 249], "whole": [213, 215, 219, 220, 224, 225, 227, 229, 619, 623], "whose": [12, 13, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 106, 196, 209, 210, 230, 293, 296, 298, 299, 300, 304, 315, 317, 319, 336, 338, 349, 581, 620, 624, 628], "why": 223, "wide": 230, "width": [60, 63, 65, 189, 259, 260, 271, 493], "wild": [520, 537], "window": [4, 214, 228], "wise": [12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 38, 40, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 78, 79, 80, 81, 82, 85, 87, 89, 90, 94, 109, 123, 173, 203, 205, 206, 208, 211, 232, 238, 239, 240, 241, 242, 243, 256, 257, 258, 261, 262, 263, 267, 271, 272, 275, 277, 278, 279, 280, 288, 289, 290, 291, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 340, 345, 346, 347, 348, 350, 356, 358, 359, 435, 485, 486, 488, 497, 498, 499, 501, 569, 571, 573, 579, 580, 584, 585, 586, 590, 591, 592, 593, 594, 599, 600, 601, 603, 605, 610, 611, 625, 626, 635, 636, 640, 647, 650, 654], "wish": 647, "within": [18, 26, 40, 52, 119, 199, 217, 218, 219, 220, 222, 223, 225, 259, 260, 272, 431, 503, 510, 511, 518, 562], "without": [106, 169, 201, 230, 481, 567, 576, 577, 647], "won": 182, "word": [218, 219, 220, 223, 225, 239, 299, 518, 562], "work": [4, 38, 51, 137, 449, 609, 647], "world": [174, 520, 537], "would": [36, 79, 80, 146, 174, 247, 268, 307, 336, 337, 458, 495, 518, 568, 596, 599, 603, 609, 615, 630, 634], "wrap": [99, 148, 166, 230, 460, 478, 493, 503, 504, 506, 568, 587, 608, 609, 630], "wrapper": 111, "writabl": 575, "write": [102, 106, 134, 230, 246, 446, 576], "writeabl": 575, "written": [4, 91, 94, 230, 246, 276, 335, 572, 637], "x": [0, 3, 4, 12, 13, 14, 15, 17, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 57, 58, 61, 63, 65, 69, 71, 74, 75, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 97, 98, 99, 100, 102, 105, 107, 108, 119, 124, 136, 137, 144, 150, 155, 156, 172, 174, 175, 176, 178, 179, 181, 189, 191, 196, 198, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 219, 220, 221, 227, 228, 229, 232, 233, 234, 239, 245, 246, 247, 248, 250, 251, 252, 253, 255, 261, 264, 265, 267, 268, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 288, 293, 294, 296, 299, 302, 304, 308, 311, 313, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 343, 344, 348, 349, 351, 431, 436, 448, 449, 456, 462, 467, 468, 485, 487, 489, 490, 491, 497, 500, 501, 502, 506, 507, 536, 542, 567, 569, 571, 572, 574, 575, 580, 581, 582, 584, 586, 588, 590, 591, 592, 593, 594, 598, 599, 600, 601, 602, 607, 608, 610, 611, 616, 617, 626, 629, 631, 635, 637, 638, 639], "x0": [46, 48, 84, 105, 491, 631, 639], "x00": 246, "x01": [245, 246], "x02": [245, 246], "x03": [245, 246], "x04": [245, 246], "x05": 245, "x1": [16, 18, 21, 29, 31, 32, 40, 41, 49, 52, 53, 54, 62, 64, 66, 67, 68, 76, 85, 88, 109, 119, 203, 238, 240, 241, 242, 243, 252, 256, 257, 258, 263, 285, 287, 288, 289, 290, 291, 294, 303, 309, 320, 328, 329, 330, 331, 332, 333, 337, 340, 343, 346, 347, 348, 350, 431, 485, 486, 488, 494, 497, 498, 499, 505, 555, 573, 579, 581, 605, 625, 634], "x1_i": [16, 32, 54, 62, 64, 66, 67, 68, 85, 109, 203, 238, 240, 243, 256, 257, 263, 289, 290, 291, 328, 329, 330, 332, 333, 347, 350, 488, 498, 499, 573, 579, 605, 625], "x2": [16, 17, 18, 21, 22, 29, 31, 32, 39, 40, 41, 49, 53, 54, 62, 64, 66, 67, 68, 85, 88, 109, 203, 238, 240, 241, 242, 243, 252, 256, 257, 258, 263, 285, 287, 288, 289, 290, 291, 294, 303, 309, 320, 328, 329, 330, 331, 332, 333, 337, 340, 343, 346, 347, 350, 485, 486, 488, 497, 498, 499, 573, 579, 581, 600, 605, 625, 634], "x2_i": [16, 32, 54, 62, 64, 66, 67, 68, 85, 109, 203, 238, 240, 243, 256, 257, 263, 289, 290, 291, 328, 329, 330, 332, 333, 347, 350, 488, 498, 499, 573, 579, 605, 625], "x3": [17, 22, 238], "x_i": [12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 63, 65, 74, 75, 81, 82, 89, 90, 205, 206, 208, 239, 267, 271, 324, 325, 326, 327, 331, 485, 497, 501, 569, 571, 580, 584, 586, 590, 591, 592, 594, 600, 601, 610, 611, 626], "xarr": 87, "xi": [327, 343], "xn": [285, 343], "xor": [62, 63, 65, 66, 68, 271, 330, 331, 332, 333], "xv": 343, "xx": 343, "xy": 343, "y": [0, 4, 14, 15, 26, 27, 28, 29, 30, 31, 33, 39, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 69, 84, 87, 92, 93, 105, 124, 144, 152, 155, 174, 198, 201, 202, 207, 210, 214, 228, 245, 246, 247, 248, 250, 251, 253, 255, 265, 279, 280, 293, 294, 302, 322, 323, 334, 343, 344, 348, 351, 436, 456, 464, 467, 489, 490, 491, 575, 616, 617, 631, 637, 638, 639], "y1": 288, "y2": 288, "yarr": 87, "yet": [4, 6], "yield": [14, 15, 27, 28, 29, 30, 31, 33, 36, 49, 50, 53, 55, 359, 361, 487, 493, 518, 637, 647], "you": [4, 106, 217, 222, 223, 276, 336, 342, 576, 608, 609, 647, 654], "your": [4, 106, 654], "yv": 343, "yy": 343, "z": [14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 33, 39, 43, 44, 45, 46, 48, 49, 50, 53, 55, 84, 93, 105, 201, 202, 210, 214, 228, 245, 246, 247, 248, 250, 251, 253, 265, 322, 323, 334, 343, 344, 489, 490, 491, 528, 617, 631, 638, 639], "zero": [6, 10, 17, 21, 22, 36, 37, 38, 39, 64, 75, 91, 93, 94, 103, 107, 144, 145, 155, 156, 160, 201, 202, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 239, 246, 250, 251, 265, 267, 273, 274, 279, 280, 281, 282, 289, 297, 298, 300, 302, 305, 306, 310, 314, 316, 335, 336, 339, 341, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 456, 457, 467, 468, 472, 484, 487, 490, 491, 493, 500, 516, 520, 548, 550, 551, 553, 569, 570, 572, 577, 580, 584, 590, 596, 604, 606, 612, 617, 618, 621, 622, 626, 632, 637, 639], "zeros_lik": [6, 39, 100, 202, 251, 342, 491, 507, 638], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.apply_over_axes", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.cumulative_prod", "dpnp.cumulative_sum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dpnp_array.dpnp_array.T", "dpnp.dpnp_array.dpnp_array.all", "dpnp.dpnp_array.dpnp_array.any", "dpnp.dpnp_array.dpnp_array.argmax", "dpnp.dpnp_array.dpnp_array.argmin", "dpnp.dpnp_array.dpnp_array.argsort", "dpnp.dpnp_array.dpnp_array.asnumpy", "dpnp.dpnp_array.dpnp_array.astype", "dpnp.dpnp_array.dpnp_array.choose", "dpnp.dpnp_array.dpnp_array.clip", "dpnp.dpnp_array.dpnp_array.conj", "dpnp.dpnp_array.dpnp_array.conjugate", "dpnp.dpnp_array.dpnp_array.copy", "dpnp.dpnp_array.dpnp_array.cumprod", "dpnp.dpnp_array.dpnp_array.cumsum", "dpnp.dpnp_array.dpnp_array.device", "dpnp.dpnp_array.dpnp_array.diagonal", "dpnp.dpnp_array.dpnp_array.dot", "dpnp.dpnp_array.dpnp_array.dtype", "dpnp.dpnp_array.dpnp_array.fill", "dpnp.dpnp_array.dpnp_array.flags", "dpnp.dpnp_array.dpnp_array.flat", "dpnp.dpnp_array.dpnp_array.flatten", "dpnp.dpnp_array.dpnp_array.get_array", "dpnp.dpnp_array.dpnp_array.imag", "dpnp.dpnp_array.dpnp_array.item", "dpnp.dpnp_array.dpnp_array.itemsize", "dpnp.dpnp_array.dpnp_array.mT", "dpnp.dpnp_array.dpnp_array.max", "dpnp.dpnp_array.dpnp_array.mean", "dpnp.dpnp_array.dpnp_array.min", "dpnp.dpnp_array.dpnp_array.nbytes", "dpnp.dpnp_array.dpnp_array.ndim", "dpnp.dpnp_array.dpnp_array.nonzero", "dpnp.dpnp_array.dpnp_array.partition", "dpnp.dpnp_array.dpnp_array.prod", "dpnp.dpnp_array.dpnp_array.put", "dpnp.dpnp_array.dpnp_array.ravel", "dpnp.dpnp_array.dpnp_array.real", "dpnp.dpnp_array.dpnp_array.repeat", "dpnp.dpnp_array.dpnp_array.reshape", "dpnp.dpnp_array.dpnp_array.round", "dpnp.dpnp_array.dpnp_array.searchsorted", "dpnp.dpnp_array.dpnp_array.shape", "dpnp.dpnp_array.dpnp_array.size", "dpnp.dpnp_array.dpnp_array.sort", "dpnp.dpnp_array.dpnp_array.squeeze", "dpnp.dpnp_array.dpnp_array.std", "dpnp.dpnp_array.dpnp_array.strides", "dpnp.dpnp_array.dpnp_array.sum", "dpnp.dpnp_array.dpnp_array.swapaxes", "dpnp.dpnp_array.dpnp_array.sycl_context", "dpnp.dpnp_array.dpnp_array.sycl_device", "dpnp.dpnp_array.dpnp_array.sycl_queue", "dpnp.dpnp_array.dpnp_array.take", "dpnp.dpnp_array.dpnp_array.to_device", "dpnp.dpnp_array.dpnp_array.trace", "dpnp.dpnp_array.dpnp_array.transpose", "dpnp.dpnp_array.dpnp_array.usm_type", "dpnp.dpnp_array.dpnp_array.var", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.dtype.alignment", "dpnp.dtype.base", "dpnp.dtype.byteorder", "dpnp.dtype.char", "dpnp.dtype.descr", "dpnp.dtype.fields", "dpnp.dtype.flags", "dpnp.dtype.hasobject", "dpnp.dtype.isalignedstruct", "dpnp.dtype.isbuiltin", "dpnp.dtype.isnative", "dpnp.dtype.itemsize", "dpnp.dtype.kind", "dpnp.dtype.metadata", "dpnp.dtype.name", "dpnp.dtype.names", "dpnp.dtype.ndim", "dpnp.dtype.newbyteorder", "dpnp.dtype.num", "dpnp.dtype.shape", "dpnp.dtype.str", "dpnp.dtype.subdtype", "dpnp.dtype.type", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.i0", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.asnumpy", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.device", "dpnp.ndarray.diagonal", "dpnp.ndarray.dot", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.get_array", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.sycl_context", "dpnp.ndarray.sycl_device", "dpnp.ndarray.sycl_queue", "dpnp.ndarray.take", "dpnp.ndarray.to_device", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.usm_type", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.RandomState.get_state", "dpnp.random.RandomState.get_sycl_device", "dpnp.random.RandomState.get_sycl_queue", "dpnp.random.RandomState.normal", "dpnp.random.RandomState.rand", "dpnp.random.RandomState.randint", "dpnp.random.RandomState.randn", "dpnp.random.RandomState.random_sample", "dpnp.random.RandomState.standard_normal", "dpnp.random.RandomState.uniform", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 365, "__add__": 366, "__and__": 367, "__bool__": 368, "__complex__": 369, "__copy__": 370, "__eq__": 371, "__float__": 372, "__floordiv__": 373, "__ge__": 374, "__getitem__": 375, "__gt__": 376, "__iadd__": 377, "__iand__": 378, "__ifloordiv__": 379, "__ilshift__": 380, "__imatmul__": 381, "__imod__": 382, "__imul__": 383, "__int__": 384, "__invert__": 385, "__ior__": 386, "__ipow__": 387, "__irshift__": 388, "__isub__": 389, "__itruediv__": 390, "__ixor__": 391, "__le__": 392, "__len__": 393, "__lshift__": 394, "__lt__": 395, "__matmul__": 396, "__mod__": 397, "__mul__": 398, "__ne__": 399, "__neg__": 400, "__new__": 401, "__or__": 402, "__pos__": 403, "__pow__": 404, "__radd__": 405, "__rand__": 406, "__repr__": 407, "__rfloordiv__": 408, "__rlshift__": 409, "__rmatmul__": 410, "__rmod__": 411, "__rmul__": 412, "__ror__": 413, "__rpow__": 414, "__rrshift__": 415, "__rshift__": 416, "__rsub__": 417, "__rtruediv__": 418, "__rxor__": 419, "__setitem__": 420, "__str__": 421, "__sub__": 422, "__truediv__": 423, "__xor__": 424, "ab": 12, "absolut": 13, "aco": 14, "acosh": 15, "ad": 644, "add": 16, "algebra": [6, 642], "align": 175, "all": [17, 113, 425], "allclos": 18, "amax": 19, "amin": 20, "angl": 21, "ani": [22, 114, 426], "api": [1, 640], "append": 23, "apply_along_axi": 24, "apply_over_ax": 25, "arang": 26, "arcco": 27, "arccosh": 28, "arcsin": 29, "arcsinh": 30, "arctan": 31, "arctan2": 32, "arctanh": 33, "argmax": [34, 115, 427], "argmin": [35, 116, 428], "argsort": [36, 117, 429], "argwher": 37, "arithmet": [645, 647, 648], "around": 38, "arrai": [6, 7, 9, 39, 641, 643, 644, 647], "array_equ": 40, "array_equiv": 41, "array_split": 42, "asanyarrai": 43, "asarrai": 44, "asarray_chkfinit": 45, "ascontiguousarrai": 46, "asfarrai": 47, "asfortranarrai": 48, "asin": 49, "asinh": 50, "asnumpi": [51, 118, 430], "astyp": [52, 119, 431], "atan": 53, "atan2": 54, "atanh": 55, "atleast_1d": 56, "atleast_2d": 57, "atleast_3d": 58, "attribut": 647, "avail": [9, 654], "averag": [59, 653], "backend": 1, "background": 10, "base": 176, "basic": [644, 648], "beta": 519, "binary_repr": 60, "bincount": 61, "binomi": 520, "bit": [5, 654], "bitwise_and": 62, "bitwise_invert": 63, "bitwise_left_shift": 64, "bitwise_not": 65, "bitwise_or": 66, "bitwise_right_shift": 67, "bitwise_xor": 68, "broadcast_arrai": 69, "broadcast_shap": 70, "broadcast_to": 71, "build": [4, 7], "byte": 521, "byte_bound": 72, "byteord": 177, "c": 1, "calcul": 647, "can_cast": 73, "cbrt": 74, "ceil": 75, "chang": 644, "channel": 4, "char": 178, "chisquar": 522, "choic": 523, "choleski": 292, "choos": [76, 120, 432], "class": 7, "clip": [77, 121, 433], "co": 89, "column_stack": 78, "comparison": [6, 643, 647, 654], "complex": 645, "concat": 79, "concaten": 80, "cond": 293, "conda": 4, "conj": [81, 122, 434], "conjug": [82, 123, 435], "construct": 647, "control": 0, "convers": 647, "convolv": 83, "copi": [84, 124, 436], "copysign": 85, "copyto": 86, "corrcoef": 87, "correl": [88, 653], "cosh": 90, "count": 651, "count_nonzero": 91, "cov": 92, "creat": 8, "creation": 7, "cross": [93, 294], "cumlogsumexp": 94, "cumprod": [95, 125, 437], "cumsum": [96, 126, 438], "cumulative_prod": 97, "cumulative_sum": 98, "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 641, 647, 649], "decomposit": 642, "deg2rad": 99, "degre": 100, "delet": 101, "descr": 179, "det": 295, "detail": 10, "develop": 2, "devic": [4, 127, 439], "diag": 102, "diag_indic": 103, "diag_indices_from": 104, "diagflat": 105, "diagon": [106, 128, 296, 440], "diff": 107, "differ": 645, "digit": 108, "dimens": [10, 644], "dimension": [6, 647], "dirichlet": 524, "discret": [6, 10], "distribut": 649, "divid": 109, "dot": [110, 129, 441], "dpnp": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 649], "dpnp_arrai": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "driver": 4, "dsplit": 172, "dstack": 173, "dtype": [130, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 442], "ediff1d": 198, "eig": 297, "eigenvalu": 642, "eigh": 298, "eigval": 299, "eigvalsh": 300, "einsum": 199, "einsum_path": 200, "element": [5, 644], "empti": 201, "empty_lik": 202, "equal": 203, "equat": 642, "erf": 204, "error": 652, "exampl": [0, 4], "except": 642, "exist": 7, "exp": 205, "exp2": 206, "expand_dim": 207, "expm1": 208, "expon": 645, "exponenti": 525, "extens": 2, "extract": 209, "extrema": 645, "ey": 210, "f": 526, "fab": 211, "fft": [10, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "fft2": 213, "fftfreq": 214, "fftn": 215, "fftshift": 216, "field": 180, "fill": [131, 443], "fill_diagon": 230, "find": 645, "finfo": 231, "fix": 232, "flag": [132, 181, 444], "flat": [133, 445], "flatit": 233, "flatnonzero": 234, "flatten": [134, 446], "flip": 235, "fliplr": 236, "flipud": 237, "float": [645, 654], "float_pow": 238, "floor": 239, "floor_divid": 240, "fmax": 241, "fmin": 242, "fmod": 243, "format": 5, "fourier": [6, 10], "from": [4, 7], "from_dlpack": 244, "frombuff": 245, "fromfil": 246, "fromfunct": 247, "fromit": 248, "fromstr": 249, "full": 250, "full_lik": 251, "function": [11, 643, 645, 652, 654], "gamma": 527, "gcd": 252, "gener": [641, 649], "geometr": 528, "geomspac": 253, "get_arrai": [135, 447], "get_includ": 254, "get_stat": 509, "get_sycl_devic": 510, "get_sycl_queu": 511, "gradient": 255, "greater": 256, "greater_equ": 257, "guid": 4, "gumbel": 529, "handl": 645, "hasobject": 182, "heavisid": 258, "helper": 10, "hermitian": 10, "hfft": 217, "higher": 10, "histogram": [259, 653], "histogram_bin_edg": 260, "hsplit": 261, "hstack": 262, "hyperbol": 645, "hypergeometr": 530, "hypot": 263, "i0": 264, "ident": 265, "ifft": 218, "ifft2": 219, "ifftn": 220, "ifftshift": 221, "ihfft": 222, "iinfo": 266, "imag": [136, 267, 448], "implement": 10, "index": [641, 647], "indic": 268, "infin": 643, "inform": [2, 8, 10], "inner": 269, "insert": [270, 641], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 301, "invert": 271, "irfft": 223, "irfft2": 224, "irfftn": 225, "isalignedstruct": 183, "isbuiltin": 184, "isclos": 272, "iscomplex": 273, "iscomplexobj": 274, "isfinit": 275, "isfortran": 276, "isinf": 277, "isn": 185, "isnan": 278, "isneginf": 279, "isposinf": 280, "isreal": 281, "isrealobj": 282, "isscalar": 283, "issubdtyp": 284, "item": [137, 449, 647], "items": [138, 186, 450], "iter": 641, "ix_": 285, "join": 644, "kind": [187, 644], "kron": 286, "laplac": 531, "layout": 647, "lcm": 287, "ldexp": 288, "left_shift": 289, "less": 290, "less_equ": 291, "level": 6, "librari": 0, "like": [641, 644], "linalg": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "linear": [6, 642], "linspac": 322, "loadtxt": 323, "log": 324, "log10": 325, "log1p": 326, "log2": 327, "logaddexp": 328, "logaddexp2": 329, "logarithm": 645, "logic": 643, "logical_and": 330, "logical_not": 331, "logical_or": 332, "logical_xor": 333, "logist": 532, "lognorm": 533, "logseri": 534, "logspac": 334, "logsumexp": 335, "lstsq": 302, "manipul": [644, 647], "mask_indic": 336, "math": 654, "mathemat": 645, "matmul": [303, 337], "matric": 7, "matrix": [7, 642, 647], "matrix_norm": 304, "matrix_pow": 305, "matrix_rank": 306, "matrix_transpos": 338, "max": [140, 339, 452], "maximum": 340, "mean": [141, 341, 453], "median": 342, "memori": 647, "meshgrid": 343, "metadata": 188, "method": 647, "mgrid": 344, "min": [142, 345, 454], "minimum": 346, "miscellan": [8, 645, 646], "mod": 347, "modf": 348, "modul": [6, 648], "moveaxi": 349, "mt": [139, 451], "multi": [6, 647], "multi_dot": 307, "multinomi": 535, "multipl": 647, "multipli": 350, "multivariate_norm": 536, "name": [189, 190], "nan": 643, "nan_to_num": 351, "nanargmax": 352, "nanargmin": 353, "nancumprod": 354, "nancumsum": 355, "nanmax": 356, "nanmean": 357, "nanmin": 358, "nanprod": 359, "nanstd": 360, "nansum": 361, "nanvar": 362, "nbyte": [143, 455], "ndarrai": [363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 647], "ndim": [144, 191, 456, 484], "neg": 485, "negative_binomi": 537, "newbyteord": 192, "nextaft": 486, "noncentral_chisquar": 538, "noncentral_f": 539, "nonzero": [145, 457, 487], "norm": [308, 642], "normal": [10, 512, 540], "not_equ": 488, "num": 193, "number": [642, 644, 645], "numer": 7, "numpi": [2, 6], "ogrid": 489, "ones": 490, "ones_lik": 491, "oper": [5, 641, 642, 643, 644, 645, 647, 654], "order": 653, "other": [642, 645, 647], "outer": [309, 492], "output": 5, "over": 641, "overview": 3, "pack": 5, "packag": [4, 648], "pad": 493, "parallel": [0, 2], "pareto": 541, "partit": [146, 458, 494], "permut": [542, 649], "permute_dim": 495, "pinv": 310, "place": 496, "point": 645, "poisson": 543, "poly1d": 648, "polynomi": 648, "polyutil": 648, "posit": 497, "pow": 498, "power": [499, 544], "prod": [147, 459, 500], "product": [642, 645], "program": 11, "proj": 501, "ptp": 502, "put": [148, 460, 503], "put_along_axi": 504, "putmask": 505, "python": 4, "qr": 311, "quick": 4, "r": 4, "rad2deg": 506, "radian": 507, "rand": [513, 545], "randint": [514, 546], "randn": [515, 547], "random": [6, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 649], "random_integ": 549, "random_sampl": [516, 550], "randomst": [508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "ranf": 551, "rang": 7, "ration": 645, "ravel": [149, 461, 567], "ravel_multi_index": 568, "rayleigh": 552, "real": [10, 150, 462, 569], "real_if_clos": 570, "rearrang": 644, "reciproc": 571, "reduce_hypot": 572, "refer": [1, 640], "remaind": 573, "remov": 644, "repeat": [151, 463, 574], "requir": 575, "reshap": [152, 464, 576], "resiz": 577, "result_typ": 578, "rfft": 226, "rfft2": 227, "rfftfreq": 228, "rfftn": 229, "right_shift": 579, "rint": 580, "roll": 581, "rollaxi": 582, "rot90": 583, "round": [153, 465, 584, 645], "routin": [7, 8, 10, 641, 644, 645, 646, 650], "row_stack": 585, "rsqrt": 586, "sampl": [6, 553, 649], "scikit": 4, "search": 651, "searchsort": [154, 466, 587], "seed": 554, "select": [588, 647], "shape": [7, 155, 194, 467, 589, 644, 647], "shuffl": 555, "sign": 590, "signbit": 591, "simpl": 649, "sin": 592, "sinc": 593, "sinh": 594, "size": [156, 468, 595], "slogdet": 312, "solv": [313, 642], "sort": [157, 469, 596, 651], "sort_complex": 597, "space": 598, "special": [645, 647, 652], "split": [599, 644], "sqrt": 600, "squar": 601, "squeez": [158, 470, 602], "stack": 603, "standard": 10, "standard_cauchi": 556, "standard_exponenti": 557, "standard_gamma": 558, "standard_norm": [517, 559], "standard_t": 560, "start": 4, "statist": 653, "std": [159, 471, 604], "str": 195, "stride": [160, 472], "subdtyp": 196, "subtract": 605, "sum": [161, 473, 606, 645], "summari": 6, "svd": 314, "svdval": 315, "swapax": [162, 474, 607], "sycl": 4, "sycl_context": [163, 475], "sycl_devic": [164, 476], "sycl_queu": [165, 477], "t": [112, 364], "tabl": 6, "take": [166, 478, 608], "take_along_axi": 609, "tan": 610, "tanh": 611, "target": 4, "tensordot": [316, 612], "tensorinv": 317, "tensorsolv": 318, "test": [4, 8, 643], "tile": [613, 644], "to_devic": [167, 479], "trace": [168, 319, 480, 614], "transform": [6, 10], "transpos": [169, 481, 615, 644], "trapezoid": 616, "tri": 617, "triangular": 561, "trigonometr": [645, 654], "tril": 618, "tril_indic": 619, "tril_indices_from": 620, "trim_zero": 621, "triu": 622, "triu_indic": 623, "triu_indices_from": 624, "true_divid": 625, "trunc": 626, "truth": 643, "twiddl": 654, "type": [8, 9, 197, 643, 647], "ufunc": 654, "uniform": [518, 562], "uniqu": 627, "univers": 654, "unravel_index": 628, "unstack": 629, "unwrap": 630, "usm_typ": [170, 482], "util": 646, "valu": [7, 643], "vander": 631, "var": [171, 483, 632], "varianc": 653, "vdot": 633, "vecdot": [320, 634], "vector": 642, "vector_norm": 321, "vonmis": 563, "vsplit": 635, "vstack": 636, "wald": 564, "weibul": 565, "where": 637, "wise": 5, "zero": 638, "zeros_lik": 639, "zipf": 566}})