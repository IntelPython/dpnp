Search.setIndex({"alltitles": {"API Reference": [[644, null]], "Adding and removing elements": [[648, "adding-and-removing-elements"]], "Arithmetic": [[652, "arithmetic"]], "Arithmetic operations": [[649, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[651, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array attributes": [[651, "array-attributes"]], "Array conversion": [[651, "array-conversion"]], "Array creation routines": [[7, null]], "Array manipulation routines": [[648, null]], "Array methods": [[651, "array-methods"]], "Array type testing": [[647, "array-type-testing"]], "Available array data types": [[9, null]], "Available ufuncs": [[658, "available-ufuncs"]], "Averages and variances": [[657, "averages-and-variances"]], "Background information": [[10, "background-information"]], "Basic operations": [[648, "basic-operations"]], "Basics": [[652, "basics"]], "Bit packing": [[5, "bit-packing"]], "Bit-twiddling functions": [[658, "bit-twiddling-functions"]], "Bit-wise operations": [[5, null]], "Build and Install Conda Package": [[4, "build-and-install-conda-package"]], "Build and Install with scikit-build": [[4, "build-and-install-with-scikit-build"]], "Building for custom SYCL targets": [[4, "building-for-custom-sycl-targets"]], "Building matrices": [[7, "building-matrices"]], "C++ backend API Reference": [[1, null]], "Calculation": [[651, "calculation"]], "Changing array shape": [[648, "changing-array-shape"]], "Changing kind of array": [[648, "changing-kind-of-array"]], "Changing number of dimensions": [[648, "changing-number-of-dimensions"]], "Comparison": [[647, "comparison"]], "Comparison Table NumPy/ DPNP/ CuPy": [[6, null]], "Comparison functions": [[658, "comparison-functions"]], "Constructing arrays": [[651, "constructing-arrays"]], "Correlations": [[657, "correlations"]], "Counting": [[655, "counting"]], "Creating data types": [[8, "creating-data-types"]], "Data Parallel Extension for NumPy*": [[2, null]], "Data type": [[651, "data-type"]], "Data type information": [[8, "data-type-information"]], "Data type routines": [[8, null]], "Data type testing": [[8, "data-type-testing"]], "Decompositions": [[646, "decompositions"]], "Development information": [[2, null]], "Device Drivers": [[4, "device-drivers"]], "Discrete Fourier Transform": [[6, "discrete-fourier-transform"], [10, null]], "Distributions": [[653, "distributions"]], "Element-wise bit operations": [[5, "element-wise-bit-operations"]], "Error Function": [[656, "error-function"]], "Example": [[0, "example"]], "Examples": [[4, "examples"]], "Exceptions": [[646, "exceptions"]], "Exponents and logarithms": [[649, "exponents-and-logarithms"]], "Extrema finding": [[649, "extrema-finding"]], "Floating functions": [[658, "floating-functions"]], "Floating point routines": [[649, "floating-point-routines"]], "From existing data": [[7, "from-existing-data"]], "From shape or value": [[7, "from-shape-or-value"]], "Functional programming": [[11, null]], "Generating index arrays": [[645, "generating-index-arrays"]], "Handling complex numbers": [[649, "handling-complex-numbers"]], "Helper routines": [[10, "helper-routines"]], "Hermitian FFTs": [[10, "hermitian-ffts"]], "Higher dimensions": [[10, "higher-dimensions"]], "Histograms": [[657, "histograms"]], "Hyperbolic functions": [[649, "hyperbolic-functions"]], "Implementation details": [[10, "implementation-details"]], "Indexing arrays": [[651, "indexing-arrays"]], "Indexing routines": [[645, null]], "Indexing-like operations": [[645, "indexing-like-operations"]], "Infinities and NaNs": [[647, "infinities-and-nans"]], "Inserting data into arrays": [[645, "inserting-data-into-arrays"]], "Install Package from Intel(R) channel": [[4, "install-package-from-intel-r-channel"]], "Installation": [[4, "installation"]], "Interplay with the Data Parallel Control Library": [[0, null]], "Item selection and manipulation": [[651, "item-selection-and-manipulation"]], "Iterating over arrays": [[645, "iterating-over-arrays"]], "Joining arrays": [[648, "joining-arrays"]], "Linear Algebra": [[6, "linear-algebra"]], "Linear algebra": [[646, null]], "Logic functions": [[647, null]], "Logic operations": [[647, "logic-operations"]], "Math operations": [[658, "math-operations"]], "Mathematical functions": [[649, null]], "Matrix and vector products": [[646, "matrix-and-vector-products"]], "Matrix eigenvalues": [[646, "matrix-eigenvalues"]], "Memory layout": [[651, "memory-layout"]], "Miscellaneous": [[8, "miscellaneous"], [649, "miscellaneous"]], "Miscellaneous routines": [[650, null]], "Module-Level": [[6, "module-level"]], "Multi-Dimensional Array": [[6, "multi-dimensional-array"]], "Multi-Dimensional Array (ndarray)": [[651, null]], "Normalization": [[10, "normalization"]], "Norms and other numbers": [[646, "norms-and-other-numbers"]], "Numerical ranges": [[7, "numerical-ranges"]], "Order statistics": [[657, "order-statistics"]], "Other attributes": [[651, "other-attributes"]], "Other matrix operations": [[646, "other-matrix-operations"]], "Other special functions": [[649, "other-special-functions"]], "Output formatting": [[5, "output-formatting"]], "Overview": [[3, null]], "Permutations": [[653, "permutations"]], "Poly1d": [[652, "poly1d"]], "Polynomial Module": [[652, "polynomial-module"]], "Polynomial Package": [[652, "polynomial-package"]], "Polynomials": [[652, null]], "Polyutils": [[652, "polyutils"]], "Python Interpreter": [[4, "python-interpreter"]], "Quick Start Guide": [[4, null]], "Random Sampling": [[6, "random-sampling"]], "Random generator": [[653, "random-generator"]], "Random sampling (dpnp.random)": [[653, null]], "Rational routines": [[649, "rational-routines"]], "Real FFTs": [[10, "real-ffts"]], "Real and Hermitian transforms": [[10, "real-and-hermitian-transforms"]], "Rearranging elements": [[648, "rearranging-elements"]], "Rounding": [[649, "rounding"]], "Routines": [[654, null]], "Searching": [[655, "searching"]], "Shape manipulation": [[651, "shape-manipulation"]], "Simple random data": [[653, "simple-random-data"]], "Solving linear equations": [[646, "solving-linear-equations"]], "Sorting": [[655, "sorting"]], "Sorting, searching, and counting": [[655, null]], "Special Functions": [[656, null]], "Special methods": [[651, "special-methods"]], "Splitting arrays": [[648, "splitting-arrays"]], "Standard FFTs": [[10, "standard-ffts"]], "Statistics": [[657, null]], "Summary": [[6, "summary"]], "Sums, products, differences": [[649, "sums-products-differences"]], "Testing": [[4, "testing"]], "The Matrix class": [[7, "the-matrix-class"]], "Tiling arrays": [[648, "tiling-arrays"]], "Transpose-like operations": [[648, "transpose-like-operations"]], "Trigonometric functions": [[649, "trigonometric-functions"], [658, "trigonometric-functions"]], "Truth value testing": [[647, "truth-value-testing"]], "Universal Functions (ufunc)": [[658, null]], "Utility": [[650, "utility"]], "dpnp.abs": [[12, null]], "dpnp.absolute": [[13, null]], "dpnp.acos": [[14, null]], "dpnp.acosh": [[15, null]], "dpnp.add": [[16, null]], "dpnp.all": [[17, null]], "dpnp.allclose": [[18, null]], "dpnp.amax": [[19, null]], "dpnp.amin": [[20, null]], "dpnp.angle": [[21, null]], "dpnp.any": [[22, null]], "dpnp.append": [[23, null]], "dpnp.apply_along_axis": [[24, null]], "dpnp.apply_over_axes": [[25, null]], "dpnp.arange": [[26, null]], "dpnp.arccos": [[27, null]], "dpnp.arccosh": [[28, null]], "dpnp.arcsin": [[29, null]], "dpnp.arcsinh": [[30, null]], "dpnp.arctan": [[31, null]], "dpnp.arctan2": [[32, null]], "dpnp.arctanh": [[33, null]], "dpnp.argmax": [[34, null]], "dpnp.argmin": [[35, null]], "dpnp.argsort": [[36, null]], "dpnp.argwhere": [[37, null]], "dpnp.around": [[38, null]], "dpnp.array": [[39, null]], "dpnp.array_equal": [[40, null]], "dpnp.array_equiv": [[41, null]], "dpnp.array_split": [[42, null]], "dpnp.asanyarray": [[43, null]], "dpnp.asarray": [[44, null]], "dpnp.asarray_chkfinite": [[45, null]], "dpnp.ascontiguousarray": [[46, null]], "dpnp.asfarray": [[47, null]], "dpnp.asfortranarray": [[48, null]], "dpnp.asin": [[49, null]], "dpnp.asinh": [[50, null]], "dpnp.asnumpy": [[51, null]], "dpnp.astype": [[52, null]], "dpnp.atan": [[53, null]], "dpnp.atan2": [[54, null]], "dpnp.atanh": [[55, null]], "dpnp.atleast_1d": [[56, null]], "dpnp.atleast_2d": [[57, null]], "dpnp.atleast_3d": [[58, null]], "dpnp.average": [[59, null]], "dpnp.binary_repr": [[60, null]], "dpnp.bincount": [[61, null]], "dpnp.bitwise_and": [[62, null]], "dpnp.bitwise_invert": [[63, null]], "dpnp.bitwise_left_shift": [[64, null]], "dpnp.bitwise_not": [[65, null]], "dpnp.bitwise_or": [[66, null]], "dpnp.bitwise_right_shift": [[67, null]], "dpnp.bitwise_xor": [[68, null]], "dpnp.broadcast_arrays": [[69, null]], "dpnp.broadcast_shapes": [[70, null]], "dpnp.broadcast_to": [[71, null]], "dpnp.byte_bounds": [[72, null]], "dpnp.can_cast": [[73, null]], "dpnp.cbrt": [[74, null]], "dpnp.ceil": [[75, null]], "dpnp.choose": [[76, null]], "dpnp.clip": [[77, null]], "dpnp.column_stack": [[78, null]], "dpnp.compress": [[79, null]], "dpnp.concat": [[80, null]], "dpnp.concatenate": [[81, null]], "dpnp.conj": [[82, null]], "dpnp.conjugate": [[83, null]], "dpnp.convolve": [[84, null]], "dpnp.copy": [[85, null]], "dpnp.copysign": [[86, null]], "dpnp.copyto": [[87, null]], "dpnp.corrcoef": [[88, null]], "dpnp.correlate": [[89, null]], "dpnp.cos": [[90, null]], "dpnp.cosh": [[91, null]], "dpnp.count_nonzero": [[92, null]], "dpnp.cov": [[93, null]], "dpnp.cross": [[94, null]], "dpnp.cumlogsumexp": [[95, null]], "dpnp.cumprod": [[96, null]], "dpnp.cumsum": [[97, null]], "dpnp.cumulative_prod": [[98, null]], "dpnp.cumulative_sum": [[99, null]], "dpnp.deg2rad": [[100, null]], "dpnp.degrees": [[101, null]], "dpnp.delete": [[102, null]], "dpnp.diag": [[103, null]], "dpnp.diag_indices": [[104, null]], "dpnp.diag_indices_from": [[105, null]], "dpnp.diagflat": [[106, null]], "dpnp.diagonal": [[107, null]], "dpnp.diff": [[108, null]], "dpnp.digitize": [[109, null]], "dpnp.divide": [[110, null]], "dpnp.dot": [[111, null]], "dpnp.dpnp_array.dpnp_array": [[112, null]], "dpnp.dpnp_array.dpnp_array.T": [[113, null]], "dpnp.dpnp_array.dpnp_array.all": [[114, null]], "dpnp.dpnp_array.dpnp_array.any": [[115, null]], "dpnp.dpnp_array.dpnp_array.argmax": [[116, null]], "dpnp.dpnp_array.dpnp_array.argmin": [[117, null]], "dpnp.dpnp_array.dpnp_array.argsort": [[118, null]], "dpnp.dpnp_array.dpnp_array.asnumpy": [[119, null]], "dpnp.dpnp_array.dpnp_array.astype": [[120, null]], "dpnp.dpnp_array.dpnp_array.choose": [[121, null]], "dpnp.dpnp_array.dpnp_array.clip": [[122, null]], "dpnp.dpnp_array.dpnp_array.compress": [[123, null]], "dpnp.dpnp_array.dpnp_array.conj": [[124, null]], "dpnp.dpnp_array.dpnp_array.conjugate": [[125, null]], "dpnp.dpnp_array.dpnp_array.copy": [[126, null]], "dpnp.dpnp_array.dpnp_array.cumprod": [[127, null]], "dpnp.dpnp_array.dpnp_array.cumsum": [[128, null]], "dpnp.dpnp_array.dpnp_array.device": [[129, null]], "dpnp.dpnp_array.dpnp_array.diagonal": [[130, null]], "dpnp.dpnp_array.dpnp_array.dot": [[131, null]], "dpnp.dpnp_array.dpnp_array.dtype": [[132, null]], "dpnp.dpnp_array.dpnp_array.fill": [[133, null]], "dpnp.dpnp_array.dpnp_array.flags": [[134, null]], "dpnp.dpnp_array.dpnp_array.flat": [[135, null]], "dpnp.dpnp_array.dpnp_array.flatten": [[136, null]], "dpnp.dpnp_array.dpnp_array.get_array": [[137, null]], "dpnp.dpnp_array.dpnp_array.imag": [[138, null]], "dpnp.dpnp_array.dpnp_array.item": [[139, null]], "dpnp.dpnp_array.dpnp_array.itemsize": [[140, null]], "dpnp.dpnp_array.dpnp_array.mT": [[141, null]], "dpnp.dpnp_array.dpnp_array.max": [[142, null]], "dpnp.dpnp_array.dpnp_array.mean": [[143, null]], "dpnp.dpnp_array.dpnp_array.min": [[144, null]], "dpnp.dpnp_array.dpnp_array.nbytes": [[145, null]], "dpnp.dpnp_array.dpnp_array.ndim": [[146, null]], "dpnp.dpnp_array.dpnp_array.nonzero": [[147, null]], "dpnp.dpnp_array.dpnp_array.partition": [[148, null]], "dpnp.dpnp_array.dpnp_array.prod": [[149, null]], "dpnp.dpnp_array.dpnp_array.put": [[150, null]], "dpnp.dpnp_array.dpnp_array.ravel": [[151, null]], "dpnp.dpnp_array.dpnp_array.real": [[152, null]], "dpnp.dpnp_array.dpnp_array.repeat": [[153, null]], "dpnp.dpnp_array.dpnp_array.reshape": [[154, null]], "dpnp.dpnp_array.dpnp_array.round": [[155, null]], "dpnp.dpnp_array.dpnp_array.searchsorted": [[156, null]], "dpnp.dpnp_array.dpnp_array.shape": [[157, null]], "dpnp.dpnp_array.dpnp_array.size": [[158, null]], "dpnp.dpnp_array.dpnp_array.sort": [[159, null]], "dpnp.dpnp_array.dpnp_array.squeeze": [[160, null]], "dpnp.dpnp_array.dpnp_array.std": [[161, null]], "dpnp.dpnp_array.dpnp_array.strides": [[162, null]], "dpnp.dpnp_array.dpnp_array.sum": [[163, null]], "dpnp.dpnp_array.dpnp_array.swapaxes": [[164, null]], "dpnp.dpnp_array.dpnp_array.sycl_context": [[165, null]], "dpnp.dpnp_array.dpnp_array.sycl_device": [[166, null]], "dpnp.dpnp_array.dpnp_array.sycl_queue": [[167, null]], "dpnp.dpnp_array.dpnp_array.take": [[168, null]], "dpnp.dpnp_array.dpnp_array.to_device": [[169, null]], "dpnp.dpnp_array.dpnp_array.trace": [[170, null]], "dpnp.dpnp_array.dpnp_array.transpose": [[171, null]], "dpnp.dpnp_array.dpnp_array.usm_type": [[172, null]], "dpnp.dpnp_array.dpnp_array.var": [[173, null]], "dpnp.dsplit": [[174, null]], "dpnp.dstack": [[175, null]], "dpnp.dtype": [[176, null]], "dpnp.dtype.alignment": [[177, null]], "dpnp.dtype.base": [[178, null]], "dpnp.dtype.byteorder": [[179, null]], "dpnp.dtype.char": [[180, null]], "dpnp.dtype.descr": [[181, null]], "dpnp.dtype.fields": [[182, null]], "dpnp.dtype.flags": [[183, null]], "dpnp.dtype.hasobject": [[184, null]], "dpnp.dtype.isalignedstruct": [[185, null]], "dpnp.dtype.isbuiltin": [[186, null]], "dpnp.dtype.isnative": [[187, null]], "dpnp.dtype.itemsize": [[188, null]], "dpnp.dtype.kind": [[189, null]], "dpnp.dtype.metadata": [[190, null]], "dpnp.dtype.name": [[191, null]], "dpnp.dtype.names": [[192, null]], "dpnp.dtype.ndim": [[193, null]], "dpnp.dtype.newbyteorder": [[194, null]], "dpnp.dtype.num": [[195, null]], "dpnp.dtype.shape": [[196, null]], "dpnp.dtype.str": [[197, null]], "dpnp.dtype.subdtype": [[198, null]], "dpnp.dtype.type": [[199, null]], "dpnp.ediff1d": [[200, null]], "dpnp.einsum": [[201, null]], "dpnp.einsum_path": [[202, null]], "dpnp.empty": [[203, null]], "dpnp.empty_like": [[204, null]], "dpnp.equal": [[205, null]], "dpnp.erf": [[206, null]], "dpnp.exp": [[207, null]], "dpnp.exp2": [[208, null]], "dpnp.expand_dims": [[209, null]], "dpnp.expm1": [[210, null]], "dpnp.extract": [[211, null]], "dpnp.eye": [[212, null]], "dpnp.fabs": [[213, null]], "dpnp.fft.fft": [[214, null]], "dpnp.fft.fft2": [[215, null]], "dpnp.fft.fftfreq": [[216, null]], "dpnp.fft.fftn": [[217, null]], "dpnp.fft.fftshift": [[218, null]], "dpnp.fft.hfft": [[219, null]], "dpnp.fft.ifft": [[220, null]], "dpnp.fft.ifft2": [[221, null]], "dpnp.fft.ifftn": [[222, null]], "dpnp.fft.ifftshift": [[223, null]], "dpnp.fft.ihfft": [[224, null]], "dpnp.fft.irfft": [[225, null]], "dpnp.fft.irfft2": [[226, null]], "dpnp.fft.irfftn": [[227, null]], "dpnp.fft.rfft": [[228, null]], "dpnp.fft.rfft2": [[229, null]], "dpnp.fft.rfftfreq": [[230, null]], "dpnp.fft.rfftn": [[231, null]], "dpnp.fill_diagonal": [[232, null]], "dpnp.finfo": [[233, null]], "dpnp.fix": [[234, null]], "dpnp.flatiter": [[235, null]], "dpnp.flatnonzero": [[236, null]], "dpnp.flip": [[237, null]], "dpnp.fliplr": [[238, null]], "dpnp.flipud": [[239, null]], "dpnp.float_power": [[240, null]], "dpnp.floor": [[241, null]], "dpnp.floor_divide": [[242, null]], "dpnp.fmax": [[243, null]], "dpnp.fmin": [[244, null]], "dpnp.fmod": [[245, null]], "dpnp.from_dlpack": [[246, null]], "dpnp.frombuffer": [[247, null]], "dpnp.fromfile": [[248, null]], "dpnp.fromfunction": [[249, null]], "dpnp.fromiter": [[250, null]], "dpnp.fromstring": [[251, null]], "dpnp.full": [[252, null]], "dpnp.full_like": [[253, null]], "dpnp.gcd": [[254, null]], "dpnp.geomspace": [[255, null]], "dpnp.get_include": [[256, null]], "dpnp.gradient": [[257, null]], "dpnp.greater": [[258, null]], "dpnp.greater_equal": [[259, null]], "dpnp.heaviside": [[260, null]], "dpnp.histogram": [[261, null]], "dpnp.histogram_bin_edges": [[262, null]], "dpnp.hsplit": [[263, null]], "dpnp.hstack": [[264, null]], "dpnp.hypot": [[265, null]], "dpnp.i0": [[266, null]], "dpnp.identity": [[267, null]], "dpnp.iinfo": [[268, null]], "dpnp.imag": [[269, null]], "dpnp.indices": [[270, null]], "dpnp.inner": [[271, null]], "dpnp.insert": [[272, null]], "dpnp.invert": [[273, null]], "dpnp.isclose": [[274, null]], "dpnp.iscomplex": [[275, null]], "dpnp.iscomplexobj": [[276, null]], "dpnp.isfinite": [[277, null]], "dpnp.isfortran": [[278, null]], "dpnp.isinf": [[279, null]], "dpnp.isnan": [[280, null]], "dpnp.isneginf": [[281, null]], "dpnp.isposinf": [[282, null]], "dpnp.isreal": [[283, null]], "dpnp.isrealobj": [[284, null]], "dpnp.isscalar": [[285, null]], "dpnp.issubdtype": [[286, null]], "dpnp.ix_": [[287, null]], "dpnp.kron": [[288, null]], "dpnp.lcm": [[289, null]], "dpnp.ldexp": [[290, null]], "dpnp.left_shift": [[291, null]], "dpnp.less": [[292, null]], "dpnp.less_equal": [[293, null]], "dpnp.linalg.cholesky": [[294, null]], "dpnp.linalg.cond": [[295, null]], "dpnp.linalg.cross": [[296, null]], "dpnp.linalg.det": [[297, null]], "dpnp.linalg.diagonal": [[298, null]], "dpnp.linalg.eig": [[299, null]], "dpnp.linalg.eigh": [[300, null]], "dpnp.linalg.eigvals": [[301, null]], "dpnp.linalg.eigvalsh": [[302, null]], "dpnp.linalg.inv": [[303, null]], "dpnp.linalg.lstsq": [[304, null]], "dpnp.linalg.matmul": [[305, null]], "dpnp.linalg.matrix_norm": [[306, null]], "dpnp.linalg.matrix_power": [[307, null]], "dpnp.linalg.matrix_rank": [[308, null]], "dpnp.linalg.multi_dot": [[309, null]], "dpnp.linalg.norm": [[310, null]], "dpnp.linalg.outer": [[311, null]], "dpnp.linalg.pinv": [[312, null]], "dpnp.linalg.qr": [[313, null]], "dpnp.linalg.slogdet": [[314, null]], "dpnp.linalg.solve": [[315, null]], "dpnp.linalg.svd": [[316, null]], "dpnp.linalg.svdvals": [[317, null]], "dpnp.linalg.tensordot": [[318, null]], "dpnp.linalg.tensorinv": [[319, null]], "dpnp.linalg.tensorsolve": [[320, null]], "dpnp.linalg.trace": [[321, null]], "dpnp.linalg.vecdot": [[322, null]], "dpnp.linalg.vector_norm": [[323, null]], "dpnp.linspace": [[324, null]], "dpnp.loadtxt": [[325, null]], "dpnp.log": [[326, null]], "dpnp.log10": [[327, null]], "dpnp.log1p": [[328, null]], "dpnp.log2": [[329, null]], "dpnp.logaddexp": [[330, null]], "dpnp.logaddexp2": [[331, null]], "dpnp.logical_and": [[332, null]], "dpnp.logical_not": [[333, null]], "dpnp.logical_or": [[334, null]], "dpnp.logical_xor": [[335, null]], "dpnp.logspace": [[336, null]], "dpnp.logsumexp": [[337, null]], "dpnp.mask_indices": [[338, null]], "dpnp.matmul": [[339, null]], "dpnp.matrix_transpose": [[340, null]], "dpnp.max": [[341, null]], "dpnp.maximum": [[342, null]], "dpnp.mean": [[343, null]], "dpnp.median": [[344, null]], "dpnp.meshgrid": [[345, null]], "dpnp.mgrid": [[346, null]], "dpnp.min": [[347, null]], "dpnp.minimum": [[348, null]], "dpnp.mod": [[349, null]], "dpnp.modf": [[350, null]], "dpnp.moveaxis": [[351, null]], "dpnp.multiply": [[352, null]], "dpnp.nan_to_num": [[353, null]], "dpnp.nanargmax": [[354, null]], "dpnp.nanargmin": [[355, null]], "dpnp.nancumprod": [[356, null]], "dpnp.nancumsum": [[357, null]], "dpnp.nanmax": [[358, null]], "dpnp.nanmean": [[359, null]], "dpnp.nanmin": [[360, null]], "dpnp.nanprod": [[361, null]], "dpnp.nanstd": [[362, null]], "dpnp.nansum": [[363, null]], "dpnp.nanvar": [[364, null]], "dpnp.ndarray": [[365, null]], "dpnp.ndarray.T": [[366, null]], "dpnp.ndarray.__abs__": [[367, null]], "dpnp.ndarray.__add__": [[368, null]], "dpnp.ndarray.__and__": [[369, null]], "dpnp.ndarray.__bool__": [[370, null]], "dpnp.ndarray.__complex__": [[371, null]], "dpnp.ndarray.__copy__": [[372, null]], "dpnp.ndarray.__eq__": [[373, null]], "dpnp.ndarray.__float__": [[374, null]], "dpnp.ndarray.__floordiv__": [[375, null]], "dpnp.ndarray.__ge__": [[376, null]], "dpnp.ndarray.__getitem__": [[377, null]], "dpnp.ndarray.__gt__": [[378, null]], "dpnp.ndarray.__iadd__": [[379, null]], "dpnp.ndarray.__iand__": [[380, null]], "dpnp.ndarray.__ifloordiv__": [[381, null]], "dpnp.ndarray.__ilshift__": [[382, null]], "dpnp.ndarray.__imatmul__": [[383, null]], "dpnp.ndarray.__imod__": [[384, null]], "dpnp.ndarray.__imul__": [[385, null]], "dpnp.ndarray.__int__": [[386, null]], "dpnp.ndarray.__invert__": [[387, null]], "dpnp.ndarray.__ior__": [[388, null]], "dpnp.ndarray.__ipow__": [[389, null]], "dpnp.ndarray.__irshift__": [[390, null]], "dpnp.ndarray.__isub__": [[391, null]], "dpnp.ndarray.__itruediv__": [[392, null]], "dpnp.ndarray.__ixor__": [[393, null]], "dpnp.ndarray.__le__": [[394, null]], "dpnp.ndarray.__len__": [[395, null]], "dpnp.ndarray.__lshift__": [[396, null]], "dpnp.ndarray.__lt__": [[397, null]], "dpnp.ndarray.__matmul__": [[398, null]], "dpnp.ndarray.__mod__": [[399, null]], "dpnp.ndarray.__mul__": [[400, null]], "dpnp.ndarray.__ne__": [[401, null]], "dpnp.ndarray.__neg__": [[402, null]], "dpnp.ndarray.__new__": [[403, null]], "dpnp.ndarray.__or__": [[404, null]], "dpnp.ndarray.__pos__": [[405, null]], "dpnp.ndarray.__pow__": [[406, null]], "dpnp.ndarray.__radd__": [[407, null]], "dpnp.ndarray.__rand__": [[408, null]], "dpnp.ndarray.__repr__": [[409, null]], "dpnp.ndarray.__rfloordiv__": [[410, null]], "dpnp.ndarray.__rlshift__": [[411, null]], "dpnp.ndarray.__rmatmul__": [[412, null]], "dpnp.ndarray.__rmod__": [[413, null]], "dpnp.ndarray.__rmul__": [[414, null]], "dpnp.ndarray.__ror__": [[415, null]], "dpnp.ndarray.__rpow__": [[416, null]], "dpnp.ndarray.__rrshift__": [[417, null]], "dpnp.ndarray.__rshift__": [[418, null]], "dpnp.ndarray.__rsub__": [[419, null]], "dpnp.ndarray.__rtruediv__": [[420, null]], "dpnp.ndarray.__rxor__": [[421, null]], "dpnp.ndarray.__setitem__": [[422, null]], "dpnp.ndarray.__str__": [[423, null]], "dpnp.ndarray.__sub__": [[424, null]], "dpnp.ndarray.__truediv__": [[425, null]], "dpnp.ndarray.__xor__": [[426, null]], "dpnp.ndarray.all": [[427, null]], "dpnp.ndarray.any": [[428, null]], "dpnp.ndarray.argmax": [[429, null]], "dpnp.ndarray.argmin": [[430, null]], "dpnp.ndarray.argsort": [[431, null]], "dpnp.ndarray.asnumpy": [[432, null]], "dpnp.ndarray.astype": [[433, null]], "dpnp.ndarray.choose": [[434, null]], "dpnp.ndarray.clip": [[435, null]], "dpnp.ndarray.compress": [[436, null]], "dpnp.ndarray.conj": [[437, null]], "dpnp.ndarray.conjugate": [[438, null]], "dpnp.ndarray.copy": [[439, null]], "dpnp.ndarray.cumprod": [[440, null]], "dpnp.ndarray.cumsum": [[441, null]], "dpnp.ndarray.device": [[442, null]], "dpnp.ndarray.diagonal": [[443, null]], "dpnp.ndarray.dot": [[444, null]], "dpnp.ndarray.dtype": [[445, null]], "dpnp.ndarray.fill": [[446, null]], "dpnp.ndarray.flags": [[447, null]], "dpnp.ndarray.flat": [[448, null]], "dpnp.ndarray.flatten": [[449, null]], "dpnp.ndarray.get_array": [[450, null]], "dpnp.ndarray.imag": [[451, null]], "dpnp.ndarray.item": [[452, null]], "dpnp.ndarray.itemsize": [[453, null]], "dpnp.ndarray.mT": [[454, null]], "dpnp.ndarray.max": [[455, null]], "dpnp.ndarray.mean": [[456, null]], "dpnp.ndarray.min": [[457, null]], "dpnp.ndarray.nbytes": [[458, null]], "dpnp.ndarray.ndim": [[459, null]], "dpnp.ndarray.nonzero": [[460, null]], "dpnp.ndarray.partition": [[461, null]], "dpnp.ndarray.prod": [[462, null]], "dpnp.ndarray.put": [[463, null]], "dpnp.ndarray.ravel": [[464, null]], "dpnp.ndarray.real": [[465, null]], "dpnp.ndarray.repeat": [[466, null]], "dpnp.ndarray.reshape": [[467, null]], "dpnp.ndarray.round": [[468, null]], "dpnp.ndarray.searchsorted": [[469, null]], "dpnp.ndarray.shape": [[470, null]], "dpnp.ndarray.size": [[471, null]], "dpnp.ndarray.sort": [[472, null]], "dpnp.ndarray.squeeze": [[473, null]], "dpnp.ndarray.std": [[474, null]], "dpnp.ndarray.strides": [[475, null]], "dpnp.ndarray.sum": [[476, null]], "dpnp.ndarray.swapaxes": [[477, null]], "dpnp.ndarray.sycl_context": [[478, null]], "dpnp.ndarray.sycl_device": [[479, null]], "dpnp.ndarray.sycl_queue": [[480, null]], "dpnp.ndarray.take": [[481, null]], "dpnp.ndarray.to_device": [[482, null]], "dpnp.ndarray.trace": [[483, null]], "dpnp.ndarray.transpose": [[484, null]], "dpnp.ndarray.usm_type": [[485, null]], "dpnp.ndarray.var": [[486, null]], "dpnp.ndim": [[487, null]], "dpnp.ndindex": [[488, null]], "dpnp.negative": [[489, null]], "dpnp.nextafter": [[490, null]], "dpnp.nonzero": [[491, null]], "dpnp.not_equal": [[492, null]], "dpnp.ogrid": [[493, null]], "dpnp.ones": [[494, null]], "dpnp.ones_like": [[495, null]], "dpnp.outer": [[496, null]], "dpnp.pad": [[497, null]], "dpnp.partition": [[498, null]], "dpnp.permute_dims": [[499, null]], "dpnp.place": [[500, null]], "dpnp.positive": [[501, null]], "dpnp.pow": [[502, null]], "dpnp.power": [[503, null]], "dpnp.prod": [[504, null]], "dpnp.proj": [[505, null]], "dpnp.ptp": [[506, null]], "dpnp.put": [[507, null]], "dpnp.put_along_axis": [[508, null]], "dpnp.putmask": [[509, null]], "dpnp.rad2deg": [[510, null]], "dpnp.radians": [[511, null]], "dpnp.random.RandomState": [[512, null]], "dpnp.random.RandomState.get_state": [[513, null]], "dpnp.random.RandomState.get_sycl_device": [[514, null]], "dpnp.random.RandomState.get_sycl_queue": [[515, null]], "dpnp.random.RandomState.normal": [[516, null]], "dpnp.random.RandomState.rand": [[517, null]], "dpnp.random.RandomState.randint": [[518, null]], "dpnp.random.RandomState.randn": [[519, null]], "dpnp.random.RandomState.random_sample": [[520, null]], "dpnp.random.RandomState.standard_normal": [[521, null]], "dpnp.random.RandomState.uniform": [[522, null]], "dpnp.random.beta": [[523, null]], "dpnp.random.binomial": [[524, null]], "dpnp.random.bytes": [[525, null]], "dpnp.random.chisquare": [[526, null]], "dpnp.random.choice": [[527, null]], "dpnp.random.dirichlet": [[528, null]], "dpnp.random.exponential": [[529, null]], "dpnp.random.f": [[530, null]], "dpnp.random.gamma": [[531, null]], "dpnp.random.geometric": [[532, null]], "dpnp.random.gumbel": [[533, null]], "dpnp.random.hypergeometric": [[534, null]], "dpnp.random.laplace": [[535, null]], "dpnp.random.logistic": [[536, null]], "dpnp.random.lognormal": [[537, null]], "dpnp.random.logseries": [[538, null]], "dpnp.random.multinomial": [[539, null]], "dpnp.random.multivariate_normal": [[540, null]], "dpnp.random.negative_binomial": [[541, null]], "dpnp.random.noncentral_chisquare": [[542, null]], "dpnp.random.noncentral_f": [[543, null]], "dpnp.random.normal": [[544, null]], "dpnp.random.pareto": [[545, null]], "dpnp.random.permutation": [[546, null]], "dpnp.random.poisson": [[547, null]], "dpnp.random.power": [[548, null]], "dpnp.random.rand": [[549, null]], "dpnp.random.randint": [[550, null]], "dpnp.random.randn": [[551, null]], "dpnp.random.random": [[552, null]], "dpnp.random.random_integers": [[553, null]], "dpnp.random.random_sample": [[554, null]], "dpnp.random.ranf": [[555, null]], "dpnp.random.rayleigh": [[556, null]], "dpnp.random.sample": [[557, null]], "dpnp.random.seed": [[558, null]], "dpnp.random.shuffle": [[559, null]], "dpnp.random.standard_cauchy": [[560, null]], "dpnp.random.standard_exponential": [[561, null]], "dpnp.random.standard_gamma": [[562, null]], "dpnp.random.standard_normal": [[563, null]], "dpnp.random.standard_t": [[564, null]], "dpnp.random.triangular": [[565, null]], "dpnp.random.uniform": [[566, null]], "dpnp.random.vonmises": [[567, null]], "dpnp.random.wald": [[568, null]], "dpnp.random.weibull": [[569, null]], "dpnp.random.zipf": [[570, null]], "dpnp.ravel": [[571, null]], "dpnp.ravel_multi_index": [[572, null]], "dpnp.real": [[573, null]], "dpnp.real_if_close": [[574, null]], "dpnp.reciprocal": [[575, null]], "dpnp.reduce_hypot": [[576, null]], "dpnp.remainder": [[577, null]], "dpnp.repeat": [[578, null]], "dpnp.require": [[579, null]], "dpnp.reshape": [[580, null]], "dpnp.resize": [[581, null]], "dpnp.result_type": [[582, null]], "dpnp.right_shift": [[583, null]], "dpnp.rint": [[584, null]], "dpnp.roll": [[585, null]], "dpnp.rollaxis": [[586, null]], "dpnp.rot90": [[587, null]], "dpnp.round": [[588, null]], "dpnp.row_stack": [[589, null]], "dpnp.rsqrt": [[590, null]], "dpnp.searchsorted": [[591, null]], "dpnp.select": [[592, null]], "dpnp.shape": [[593, null]], "dpnp.sign": [[594, null]], "dpnp.signbit": [[595, null]], "dpnp.sin": [[596, null]], "dpnp.sinc": [[597, null]], "dpnp.sinh": [[598, null]], "dpnp.size": [[599, null]], "dpnp.sort": [[600, null]], "dpnp.sort_complex": [[601, null]], "dpnp.spacing": [[602, null]], "dpnp.split": [[603, null]], "dpnp.sqrt": [[604, null]], "dpnp.square": [[605, null]], "dpnp.squeeze": [[606, null]], "dpnp.stack": [[607, null]], "dpnp.std": [[608, null]], "dpnp.subtract": [[609, null]], "dpnp.sum": [[610, null]], "dpnp.swapaxes": [[611, null]], "dpnp.take": [[612, null]], "dpnp.take_along_axis": [[613, null]], "dpnp.tan": [[614, null]], "dpnp.tanh": [[615, null]], "dpnp.tensordot": [[616, null]], "dpnp.tile": [[617, null]], "dpnp.trace": [[618, null]], "dpnp.transpose": [[619, null]], "dpnp.trapezoid": [[620, null]], "dpnp.tri": [[621, null]], "dpnp.tril": [[622, null]], "dpnp.tril_indices": [[623, null]], "dpnp.tril_indices_from": [[624, null]], "dpnp.trim_zeros": [[625, null]], "dpnp.triu": [[626, null]], "dpnp.triu_indices": [[627, null]], "dpnp.triu_indices_from": [[628, null]], "dpnp.true_divide": [[629, null]], "dpnp.trunc": [[630, null]], "dpnp.unique": [[631, null]], "dpnp.unravel_index": [[632, null]], "dpnp.unstack": [[633, null]], "dpnp.unwrap": [[634, null]], "dpnp.vander": [[635, null]], "dpnp.var": [[636, null]], "dpnp.vdot": [[637, null]], "dpnp.vecdot": [[638, null]], "dpnp.vsplit": [[639, null]], "dpnp.vstack": [[640, null]], "dpnp.where": [[641, null]], "dpnp.zeros": [[642, null]], "dpnp.zeros_like": [[643, null]]}, "docnames": ["dpctl", "dpnp_backend_api", "index", "overview", "quick_start_guide", "reference/binary", "reference/comparison", "reference/creation", "reference/dtype", "reference/dtypes_table", "reference/fft", "reference/functional", "reference/generated/dpnp.abs", "reference/generated/dpnp.absolute", "reference/generated/dpnp.acos", "reference/generated/dpnp.acosh", "reference/generated/dpnp.add", "reference/generated/dpnp.all", "reference/generated/dpnp.allclose", "reference/generated/dpnp.amax", "reference/generated/dpnp.amin", "reference/generated/dpnp.angle", "reference/generated/dpnp.any", "reference/generated/dpnp.append", "reference/generated/dpnp.apply_along_axis", "reference/generated/dpnp.apply_over_axes", "reference/generated/dpnp.arange", "reference/generated/dpnp.arccos", "reference/generated/dpnp.arccosh", "reference/generated/dpnp.arcsin", "reference/generated/dpnp.arcsinh", "reference/generated/dpnp.arctan", "reference/generated/dpnp.arctan2", "reference/generated/dpnp.arctanh", "reference/generated/dpnp.argmax", "reference/generated/dpnp.argmin", "reference/generated/dpnp.argsort", "reference/generated/dpnp.argwhere", "reference/generated/dpnp.around", "reference/generated/dpnp.array", "reference/generated/dpnp.array_equal", "reference/generated/dpnp.array_equiv", "reference/generated/dpnp.array_split", "reference/generated/dpnp.asanyarray", "reference/generated/dpnp.asarray", "reference/generated/dpnp.asarray_chkfinite", "reference/generated/dpnp.ascontiguousarray", "reference/generated/dpnp.asfarray", "reference/generated/dpnp.asfortranarray", "reference/generated/dpnp.asin", "reference/generated/dpnp.asinh", "reference/generated/dpnp.asnumpy", "reference/generated/dpnp.astype", "reference/generated/dpnp.atan", "reference/generated/dpnp.atan2", "reference/generated/dpnp.atanh", "reference/generated/dpnp.atleast_1d", "reference/generated/dpnp.atleast_2d", "reference/generated/dpnp.atleast_3d", "reference/generated/dpnp.average", "reference/generated/dpnp.binary_repr", "reference/generated/dpnp.bincount", "reference/generated/dpnp.bitwise_and", "reference/generated/dpnp.bitwise_invert", "reference/generated/dpnp.bitwise_left_shift", "reference/generated/dpnp.bitwise_not", "reference/generated/dpnp.bitwise_or", "reference/generated/dpnp.bitwise_right_shift", "reference/generated/dpnp.bitwise_xor", "reference/generated/dpnp.broadcast_arrays", "reference/generated/dpnp.broadcast_shapes", "reference/generated/dpnp.broadcast_to", "reference/generated/dpnp.byte_bounds", "reference/generated/dpnp.can_cast", "reference/generated/dpnp.cbrt", "reference/generated/dpnp.ceil", "reference/generated/dpnp.choose", "reference/generated/dpnp.clip", "reference/generated/dpnp.column_stack", "reference/generated/dpnp.compress", "reference/generated/dpnp.concat", "reference/generated/dpnp.concatenate", "reference/generated/dpnp.conj", "reference/generated/dpnp.conjugate", "reference/generated/dpnp.convolve", "reference/generated/dpnp.copy", "reference/generated/dpnp.copysign", "reference/generated/dpnp.copyto", "reference/generated/dpnp.corrcoef", "reference/generated/dpnp.correlate", "reference/generated/dpnp.cos", "reference/generated/dpnp.cosh", "reference/generated/dpnp.count_nonzero", "reference/generated/dpnp.cov", "reference/generated/dpnp.cross", "reference/generated/dpnp.cumlogsumexp", "reference/generated/dpnp.cumprod", "reference/generated/dpnp.cumsum", "reference/generated/dpnp.cumulative_prod", "reference/generated/dpnp.cumulative_sum", "reference/generated/dpnp.deg2rad", "reference/generated/dpnp.degrees", "reference/generated/dpnp.delete", "reference/generated/dpnp.diag", "reference/generated/dpnp.diag_indices", "reference/generated/dpnp.diag_indices_from", "reference/generated/dpnp.diagflat", "reference/generated/dpnp.diagonal", "reference/generated/dpnp.diff", "reference/generated/dpnp.digitize", "reference/generated/dpnp.divide", "reference/generated/dpnp.dot", "reference/generated/dpnp.dpnp_array.dpnp_array", "reference/generated/dpnp.dpnp_array.dpnp_array.T", "reference/generated/dpnp.dpnp_array.dpnp_array.all", "reference/generated/dpnp.dpnp_array.dpnp_array.any", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy", "reference/generated/dpnp.dpnp_array.dpnp_array.astype", "reference/generated/dpnp.dpnp_array.dpnp_array.choose", "reference/generated/dpnp.dpnp_array.dpnp_array.clip", "reference/generated/dpnp.dpnp_array.dpnp_array.compress", "reference/generated/dpnp.dpnp_array.dpnp_array.conj", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate", "reference/generated/dpnp.dpnp_array.dpnp_array.copy", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum", "reference/generated/dpnp.dpnp_array.dpnp_array.device", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal", "reference/generated/dpnp.dpnp_array.dpnp_array.dot", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype", "reference/generated/dpnp.dpnp_array.dpnp_array.fill", "reference/generated/dpnp.dpnp_array.dpnp_array.flags", "reference/generated/dpnp.dpnp_array.dpnp_array.flat", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array", "reference/generated/dpnp.dpnp_array.dpnp_array.imag", "reference/generated/dpnp.dpnp_array.dpnp_array.item", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize", "reference/generated/dpnp.dpnp_array.dpnp_array.mT", "reference/generated/dpnp.dpnp_array.dpnp_array.max", "reference/generated/dpnp.dpnp_array.dpnp_array.mean", "reference/generated/dpnp.dpnp_array.dpnp_array.min", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero", "reference/generated/dpnp.dpnp_array.dpnp_array.partition", "reference/generated/dpnp.dpnp_array.dpnp_array.prod", "reference/generated/dpnp.dpnp_array.dpnp_array.put", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel", "reference/generated/dpnp.dpnp_array.dpnp_array.real", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape", "reference/generated/dpnp.dpnp_array.dpnp_array.round", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted", "reference/generated/dpnp.dpnp_array.dpnp_array.shape", "reference/generated/dpnp.dpnp_array.dpnp_array.size", "reference/generated/dpnp.dpnp_array.dpnp_array.sort", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze", "reference/generated/dpnp.dpnp_array.dpnp_array.std", "reference/generated/dpnp.dpnp_array.dpnp_array.strides", "reference/generated/dpnp.dpnp_array.dpnp_array.sum", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue", "reference/generated/dpnp.dpnp_array.dpnp_array.take", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device", "reference/generated/dpnp.dpnp_array.dpnp_array.trace", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type", "reference/generated/dpnp.dpnp_array.dpnp_array.var", "reference/generated/dpnp.dsplit", "reference/generated/dpnp.dstack", "reference/generated/dpnp.dtype", "reference/generated/dpnp.dtype.alignment", "reference/generated/dpnp.dtype.base", "reference/generated/dpnp.dtype.byteorder", "reference/generated/dpnp.dtype.char", "reference/generated/dpnp.dtype.descr", "reference/generated/dpnp.dtype.fields", "reference/generated/dpnp.dtype.flags", "reference/generated/dpnp.dtype.hasobject", "reference/generated/dpnp.dtype.isalignedstruct", "reference/generated/dpnp.dtype.isbuiltin", "reference/generated/dpnp.dtype.isnative", "reference/generated/dpnp.dtype.itemsize", "reference/generated/dpnp.dtype.kind", "reference/generated/dpnp.dtype.metadata", "reference/generated/dpnp.dtype.name", "reference/generated/dpnp.dtype.names", "reference/generated/dpnp.dtype.ndim", "reference/generated/dpnp.dtype.newbyteorder", "reference/generated/dpnp.dtype.num", "reference/generated/dpnp.dtype.shape", "reference/generated/dpnp.dtype.str", "reference/generated/dpnp.dtype.subdtype", "reference/generated/dpnp.dtype.type", "reference/generated/dpnp.ediff1d", "reference/generated/dpnp.einsum", "reference/generated/dpnp.einsum_path", "reference/generated/dpnp.empty", "reference/generated/dpnp.empty_like", "reference/generated/dpnp.equal", "reference/generated/dpnp.erf", "reference/generated/dpnp.exp", "reference/generated/dpnp.exp2", "reference/generated/dpnp.expand_dims", "reference/generated/dpnp.expm1", "reference/generated/dpnp.extract", "reference/generated/dpnp.eye", "reference/generated/dpnp.fabs", "reference/generated/dpnp.fft.fft", "reference/generated/dpnp.fft.fft2", "reference/generated/dpnp.fft.fftfreq", "reference/generated/dpnp.fft.fftn", "reference/generated/dpnp.fft.fftshift", "reference/generated/dpnp.fft.hfft", "reference/generated/dpnp.fft.ifft", "reference/generated/dpnp.fft.ifft2", "reference/generated/dpnp.fft.ifftn", "reference/generated/dpnp.fft.ifftshift", "reference/generated/dpnp.fft.ihfft", "reference/generated/dpnp.fft.irfft", "reference/generated/dpnp.fft.irfft2", "reference/generated/dpnp.fft.irfftn", "reference/generated/dpnp.fft.rfft", "reference/generated/dpnp.fft.rfft2", "reference/generated/dpnp.fft.rfftfreq", "reference/generated/dpnp.fft.rfftn", "reference/generated/dpnp.fill_diagonal", "reference/generated/dpnp.finfo", "reference/generated/dpnp.fix", "reference/generated/dpnp.flatiter", "reference/generated/dpnp.flatnonzero", "reference/generated/dpnp.flip", "reference/generated/dpnp.fliplr", "reference/generated/dpnp.flipud", "reference/generated/dpnp.float_power", "reference/generated/dpnp.floor", "reference/generated/dpnp.floor_divide", "reference/generated/dpnp.fmax", "reference/generated/dpnp.fmin", "reference/generated/dpnp.fmod", "reference/generated/dpnp.from_dlpack", "reference/generated/dpnp.frombuffer", "reference/generated/dpnp.fromfile", "reference/generated/dpnp.fromfunction", "reference/generated/dpnp.fromiter", "reference/generated/dpnp.fromstring", "reference/generated/dpnp.full", "reference/generated/dpnp.full_like", "reference/generated/dpnp.gcd", "reference/generated/dpnp.geomspace", "reference/generated/dpnp.get_include", "reference/generated/dpnp.gradient", "reference/generated/dpnp.greater", "reference/generated/dpnp.greater_equal", "reference/generated/dpnp.heaviside", "reference/generated/dpnp.histogram", "reference/generated/dpnp.histogram_bin_edges", "reference/generated/dpnp.hsplit", "reference/generated/dpnp.hstack", "reference/generated/dpnp.hypot", "reference/generated/dpnp.i0", "reference/generated/dpnp.identity", "reference/generated/dpnp.iinfo", "reference/generated/dpnp.imag", "reference/generated/dpnp.indices", "reference/generated/dpnp.inner", "reference/generated/dpnp.insert", "reference/generated/dpnp.invert", "reference/generated/dpnp.isclose", "reference/generated/dpnp.iscomplex", "reference/generated/dpnp.iscomplexobj", "reference/generated/dpnp.isfinite", "reference/generated/dpnp.isfortran", "reference/generated/dpnp.isinf", "reference/generated/dpnp.isnan", "reference/generated/dpnp.isneginf", "reference/generated/dpnp.isposinf", "reference/generated/dpnp.isreal", "reference/generated/dpnp.isrealobj", "reference/generated/dpnp.isscalar", "reference/generated/dpnp.issubdtype", "reference/generated/dpnp.ix_", "reference/generated/dpnp.kron", "reference/generated/dpnp.lcm", "reference/generated/dpnp.ldexp", "reference/generated/dpnp.left_shift", "reference/generated/dpnp.less", "reference/generated/dpnp.less_equal", "reference/generated/dpnp.linalg.cholesky", "reference/generated/dpnp.linalg.cond", "reference/generated/dpnp.linalg.cross", "reference/generated/dpnp.linalg.det", "reference/generated/dpnp.linalg.diagonal", "reference/generated/dpnp.linalg.eig", "reference/generated/dpnp.linalg.eigh", "reference/generated/dpnp.linalg.eigvals", "reference/generated/dpnp.linalg.eigvalsh", "reference/generated/dpnp.linalg.inv", "reference/generated/dpnp.linalg.lstsq", "reference/generated/dpnp.linalg.matmul", "reference/generated/dpnp.linalg.matrix_norm", "reference/generated/dpnp.linalg.matrix_power", "reference/generated/dpnp.linalg.matrix_rank", "reference/generated/dpnp.linalg.multi_dot", "reference/generated/dpnp.linalg.norm", "reference/generated/dpnp.linalg.outer", "reference/generated/dpnp.linalg.pinv", "reference/generated/dpnp.linalg.qr", "reference/generated/dpnp.linalg.slogdet", "reference/generated/dpnp.linalg.solve", "reference/generated/dpnp.linalg.svd", "reference/generated/dpnp.linalg.svdvals", "reference/generated/dpnp.linalg.tensordot", "reference/generated/dpnp.linalg.tensorinv", "reference/generated/dpnp.linalg.tensorsolve", "reference/generated/dpnp.linalg.trace", "reference/generated/dpnp.linalg.vecdot", "reference/generated/dpnp.linalg.vector_norm", "reference/generated/dpnp.linspace", "reference/generated/dpnp.loadtxt", "reference/generated/dpnp.log", "reference/generated/dpnp.log10", "reference/generated/dpnp.log1p", "reference/generated/dpnp.log2", "reference/generated/dpnp.logaddexp", "reference/generated/dpnp.logaddexp2", "reference/generated/dpnp.logical_and", "reference/generated/dpnp.logical_not", "reference/generated/dpnp.logical_or", "reference/generated/dpnp.logical_xor", "reference/generated/dpnp.logspace", "reference/generated/dpnp.logsumexp", "reference/generated/dpnp.mask_indices", "reference/generated/dpnp.matmul", "reference/generated/dpnp.matrix_transpose", "reference/generated/dpnp.max", "reference/generated/dpnp.maximum", "reference/generated/dpnp.mean", "reference/generated/dpnp.median", "reference/generated/dpnp.meshgrid", "reference/generated/dpnp.mgrid", "reference/generated/dpnp.min", "reference/generated/dpnp.minimum", "reference/generated/dpnp.mod", "reference/generated/dpnp.modf", "reference/generated/dpnp.moveaxis", "reference/generated/dpnp.multiply", "reference/generated/dpnp.nan_to_num", "reference/generated/dpnp.nanargmax", "reference/generated/dpnp.nanargmin", "reference/generated/dpnp.nancumprod", "reference/generated/dpnp.nancumsum", "reference/generated/dpnp.nanmax", "reference/generated/dpnp.nanmean", "reference/generated/dpnp.nanmin", "reference/generated/dpnp.nanprod", "reference/generated/dpnp.nanstd", "reference/generated/dpnp.nansum", "reference/generated/dpnp.nanvar", "reference/generated/dpnp.ndarray", "reference/generated/dpnp.ndarray.T", "reference/generated/dpnp.ndarray.__abs__", "reference/generated/dpnp.ndarray.__add__", "reference/generated/dpnp.ndarray.__and__", "reference/generated/dpnp.ndarray.__bool__", "reference/generated/dpnp.ndarray.__complex__", "reference/generated/dpnp.ndarray.__copy__", "reference/generated/dpnp.ndarray.__eq__", "reference/generated/dpnp.ndarray.__float__", "reference/generated/dpnp.ndarray.__floordiv__", "reference/generated/dpnp.ndarray.__ge__", "reference/generated/dpnp.ndarray.__getitem__", "reference/generated/dpnp.ndarray.__gt__", "reference/generated/dpnp.ndarray.__iadd__", "reference/generated/dpnp.ndarray.__iand__", "reference/generated/dpnp.ndarray.__ifloordiv__", "reference/generated/dpnp.ndarray.__ilshift__", "reference/generated/dpnp.ndarray.__imatmul__", "reference/generated/dpnp.ndarray.__imod__", "reference/generated/dpnp.ndarray.__imul__", "reference/generated/dpnp.ndarray.__int__", "reference/generated/dpnp.ndarray.__invert__", "reference/generated/dpnp.ndarray.__ior__", "reference/generated/dpnp.ndarray.__ipow__", "reference/generated/dpnp.ndarray.__irshift__", "reference/generated/dpnp.ndarray.__isub__", "reference/generated/dpnp.ndarray.__itruediv__", "reference/generated/dpnp.ndarray.__ixor__", "reference/generated/dpnp.ndarray.__le__", "reference/generated/dpnp.ndarray.__len__", "reference/generated/dpnp.ndarray.__lshift__", "reference/generated/dpnp.ndarray.__lt__", "reference/generated/dpnp.ndarray.__matmul__", "reference/generated/dpnp.ndarray.__mod__", "reference/generated/dpnp.ndarray.__mul__", "reference/generated/dpnp.ndarray.__ne__", "reference/generated/dpnp.ndarray.__neg__", "reference/generated/dpnp.ndarray.__new__", "reference/generated/dpnp.ndarray.__or__", "reference/generated/dpnp.ndarray.__pos__", "reference/generated/dpnp.ndarray.__pow__", "reference/generated/dpnp.ndarray.__radd__", "reference/generated/dpnp.ndarray.__rand__", "reference/generated/dpnp.ndarray.__repr__", "reference/generated/dpnp.ndarray.__rfloordiv__", "reference/generated/dpnp.ndarray.__rlshift__", "reference/generated/dpnp.ndarray.__rmatmul__", "reference/generated/dpnp.ndarray.__rmod__", "reference/generated/dpnp.ndarray.__rmul__", "reference/generated/dpnp.ndarray.__ror__", "reference/generated/dpnp.ndarray.__rpow__", "reference/generated/dpnp.ndarray.__rrshift__", "reference/generated/dpnp.ndarray.__rshift__", "reference/generated/dpnp.ndarray.__rsub__", "reference/generated/dpnp.ndarray.__rtruediv__", "reference/generated/dpnp.ndarray.__rxor__", "reference/generated/dpnp.ndarray.__setitem__", "reference/generated/dpnp.ndarray.__str__", "reference/generated/dpnp.ndarray.__sub__", "reference/generated/dpnp.ndarray.__truediv__", "reference/generated/dpnp.ndarray.__xor__", "reference/generated/dpnp.ndarray.all", "reference/generated/dpnp.ndarray.any", "reference/generated/dpnp.ndarray.argmax", "reference/generated/dpnp.ndarray.argmin", "reference/generated/dpnp.ndarray.argsort", "reference/generated/dpnp.ndarray.asnumpy", "reference/generated/dpnp.ndarray.astype", "reference/generated/dpnp.ndarray.choose", "reference/generated/dpnp.ndarray.clip", "reference/generated/dpnp.ndarray.compress", "reference/generated/dpnp.ndarray.conj", "reference/generated/dpnp.ndarray.conjugate", "reference/generated/dpnp.ndarray.copy", "reference/generated/dpnp.ndarray.cumprod", "reference/generated/dpnp.ndarray.cumsum", "reference/generated/dpnp.ndarray.device", "reference/generated/dpnp.ndarray.diagonal", "reference/generated/dpnp.ndarray.dot", "reference/generated/dpnp.ndarray.dtype", "reference/generated/dpnp.ndarray.fill", "reference/generated/dpnp.ndarray.flags", "reference/generated/dpnp.ndarray.flat", "reference/generated/dpnp.ndarray.flatten", "reference/generated/dpnp.ndarray.get_array", "reference/generated/dpnp.ndarray.imag", "reference/generated/dpnp.ndarray.item", "reference/generated/dpnp.ndarray.itemsize", "reference/generated/dpnp.ndarray.mT", "reference/generated/dpnp.ndarray.max", "reference/generated/dpnp.ndarray.mean", "reference/generated/dpnp.ndarray.min", "reference/generated/dpnp.ndarray.nbytes", "reference/generated/dpnp.ndarray.ndim", "reference/generated/dpnp.ndarray.nonzero", "reference/generated/dpnp.ndarray.partition", "reference/generated/dpnp.ndarray.prod", "reference/generated/dpnp.ndarray.put", "reference/generated/dpnp.ndarray.ravel", "reference/generated/dpnp.ndarray.real", "reference/generated/dpnp.ndarray.repeat", "reference/generated/dpnp.ndarray.reshape", "reference/generated/dpnp.ndarray.round", "reference/generated/dpnp.ndarray.searchsorted", "reference/generated/dpnp.ndarray.shape", "reference/generated/dpnp.ndarray.size", "reference/generated/dpnp.ndarray.sort", "reference/generated/dpnp.ndarray.squeeze", "reference/generated/dpnp.ndarray.std", "reference/generated/dpnp.ndarray.strides", "reference/generated/dpnp.ndarray.sum", "reference/generated/dpnp.ndarray.swapaxes", "reference/generated/dpnp.ndarray.sycl_context", "reference/generated/dpnp.ndarray.sycl_device", "reference/generated/dpnp.ndarray.sycl_queue", "reference/generated/dpnp.ndarray.take", "reference/generated/dpnp.ndarray.to_device", "reference/generated/dpnp.ndarray.trace", "reference/generated/dpnp.ndarray.transpose", "reference/generated/dpnp.ndarray.usm_type", "reference/generated/dpnp.ndarray.var", "reference/generated/dpnp.ndim", "reference/generated/dpnp.ndindex", "reference/generated/dpnp.negative", "reference/generated/dpnp.nextafter", "reference/generated/dpnp.nonzero", "reference/generated/dpnp.not_equal", "reference/generated/dpnp.ogrid", "reference/generated/dpnp.ones", "reference/generated/dpnp.ones_like", "reference/generated/dpnp.outer", "reference/generated/dpnp.pad", "reference/generated/dpnp.partition", "reference/generated/dpnp.permute_dims", "reference/generated/dpnp.place", "reference/generated/dpnp.positive", "reference/generated/dpnp.pow", "reference/generated/dpnp.power", "reference/generated/dpnp.prod", "reference/generated/dpnp.proj", "reference/generated/dpnp.ptp", "reference/generated/dpnp.put", "reference/generated/dpnp.put_along_axis", "reference/generated/dpnp.putmask", "reference/generated/dpnp.rad2deg", "reference/generated/dpnp.radians", "reference/generated/dpnp.random.RandomState", "reference/generated/dpnp.random.RandomState.get_state", "reference/generated/dpnp.random.RandomState.get_sycl_device", "reference/generated/dpnp.random.RandomState.get_sycl_queue", "reference/generated/dpnp.random.RandomState.normal", "reference/generated/dpnp.random.RandomState.rand", "reference/generated/dpnp.random.RandomState.randint", "reference/generated/dpnp.random.RandomState.randn", "reference/generated/dpnp.random.RandomState.random_sample", "reference/generated/dpnp.random.RandomState.standard_normal", "reference/generated/dpnp.random.RandomState.uniform", "reference/generated/dpnp.random.beta", "reference/generated/dpnp.random.binomial", "reference/generated/dpnp.random.bytes", "reference/generated/dpnp.random.chisquare", "reference/generated/dpnp.random.choice", "reference/generated/dpnp.random.dirichlet", "reference/generated/dpnp.random.exponential", "reference/generated/dpnp.random.f", "reference/generated/dpnp.random.gamma", "reference/generated/dpnp.random.geometric", "reference/generated/dpnp.random.gumbel", "reference/generated/dpnp.random.hypergeometric", "reference/generated/dpnp.random.laplace", "reference/generated/dpnp.random.logistic", "reference/generated/dpnp.random.lognormal", "reference/generated/dpnp.random.logseries", "reference/generated/dpnp.random.multinomial", "reference/generated/dpnp.random.multivariate_normal", "reference/generated/dpnp.random.negative_binomial", "reference/generated/dpnp.random.noncentral_chisquare", "reference/generated/dpnp.random.noncentral_f", "reference/generated/dpnp.random.normal", "reference/generated/dpnp.random.pareto", "reference/generated/dpnp.random.permutation", "reference/generated/dpnp.random.poisson", "reference/generated/dpnp.random.power", "reference/generated/dpnp.random.rand", "reference/generated/dpnp.random.randint", "reference/generated/dpnp.random.randn", "reference/generated/dpnp.random.random", "reference/generated/dpnp.random.random_integers", "reference/generated/dpnp.random.random_sample", "reference/generated/dpnp.random.ranf", "reference/generated/dpnp.random.rayleigh", "reference/generated/dpnp.random.sample", "reference/generated/dpnp.random.seed", "reference/generated/dpnp.random.shuffle", "reference/generated/dpnp.random.standard_cauchy", "reference/generated/dpnp.random.standard_exponential", "reference/generated/dpnp.random.standard_gamma", "reference/generated/dpnp.random.standard_normal", "reference/generated/dpnp.random.standard_t", "reference/generated/dpnp.random.triangular", "reference/generated/dpnp.random.uniform", "reference/generated/dpnp.random.vonmises", "reference/generated/dpnp.random.wald", "reference/generated/dpnp.random.weibull", "reference/generated/dpnp.random.zipf", "reference/generated/dpnp.ravel", "reference/generated/dpnp.ravel_multi_index", "reference/generated/dpnp.real", "reference/generated/dpnp.real_if_close", "reference/generated/dpnp.reciprocal", "reference/generated/dpnp.reduce_hypot", "reference/generated/dpnp.remainder", "reference/generated/dpnp.repeat", "reference/generated/dpnp.require", "reference/generated/dpnp.reshape", "reference/generated/dpnp.resize", "reference/generated/dpnp.result_type", "reference/generated/dpnp.right_shift", "reference/generated/dpnp.rint", "reference/generated/dpnp.roll", "reference/generated/dpnp.rollaxis", "reference/generated/dpnp.rot90", "reference/generated/dpnp.round", "reference/generated/dpnp.row_stack", "reference/generated/dpnp.rsqrt", "reference/generated/dpnp.searchsorted", "reference/generated/dpnp.select", "reference/generated/dpnp.shape", "reference/generated/dpnp.sign", "reference/generated/dpnp.signbit", "reference/generated/dpnp.sin", "reference/generated/dpnp.sinc", "reference/generated/dpnp.sinh", "reference/generated/dpnp.size", "reference/generated/dpnp.sort", "reference/generated/dpnp.sort_complex", "reference/generated/dpnp.spacing", "reference/generated/dpnp.split", "reference/generated/dpnp.sqrt", "reference/generated/dpnp.square", "reference/generated/dpnp.squeeze", "reference/generated/dpnp.stack", "reference/generated/dpnp.std", "reference/generated/dpnp.subtract", "reference/generated/dpnp.sum", "reference/generated/dpnp.swapaxes", "reference/generated/dpnp.take", "reference/generated/dpnp.take_along_axis", "reference/generated/dpnp.tan", "reference/generated/dpnp.tanh", "reference/generated/dpnp.tensordot", "reference/generated/dpnp.tile", "reference/generated/dpnp.trace", "reference/generated/dpnp.transpose", "reference/generated/dpnp.trapezoid", "reference/generated/dpnp.tri", "reference/generated/dpnp.tril", "reference/generated/dpnp.tril_indices", "reference/generated/dpnp.tril_indices_from", "reference/generated/dpnp.trim_zeros", "reference/generated/dpnp.triu", "reference/generated/dpnp.triu_indices", "reference/generated/dpnp.triu_indices_from", "reference/generated/dpnp.true_divide", "reference/generated/dpnp.trunc", "reference/generated/dpnp.unique", "reference/generated/dpnp.unravel_index", "reference/generated/dpnp.unstack", "reference/generated/dpnp.unwrap", "reference/generated/dpnp.vander", "reference/generated/dpnp.var", "reference/generated/dpnp.vdot", "reference/generated/dpnp.vecdot", "reference/generated/dpnp.vsplit", "reference/generated/dpnp.vstack", "reference/generated/dpnp.where", "reference/generated/dpnp.zeros", "reference/generated/dpnp.zeros_like", "reference/index", "reference/indexing", "reference/linalg", "reference/logic", "reference/manipulation", "reference/math", "reference/misc", "reference/ndarray", "reference/polynomials", "reference/random", "reference/routines", "reference/sorting", "reference/special", "reference/statistics", "reference/ufunc"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["dpctl.rst", "dpnp_backend_api.rst", "index.rst", "overview.rst", "quick_start_guide.rst", "reference/binary.rst", "reference/comparison.rst", "reference/creation.rst", "reference/dtype.rst", "reference/dtypes_table.rst", "reference/fft.rst", "reference/functional.rst", "reference/generated/dpnp.abs.rst", "reference/generated/dpnp.absolute.rst", "reference/generated/dpnp.acos.rst", "reference/generated/dpnp.acosh.rst", "reference/generated/dpnp.add.rst", "reference/generated/dpnp.all.rst", "reference/generated/dpnp.allclose.rst", "reference/generated/dpnp.amax.rst", "reference/generated/dpnp.amin.rst", "reference/generated/dpnp.angle.rst", "reference/generated/dpnp.any.rst", "reference/generated/dpnp.append.rst", "reference/generated/dpnp.apply_along_axis.rst", "reference/generated/dpnp.apply_over_axes.rst", "reference/generated/dpnp.arange.rst", "reference/generated/dpnp.arccos.rst", "reference/generated/dpnp.arccosh.rst", "reference/generated/dpnp.arcsin.rst", "reference/generated/dpnp.arcsinh.rst", "reference/generated/dpnp.arctan.rst", "reference/generated/dpnp.arctan2.rst", "reference/generated/dpnp.arctanh.rst", "reference/generated/dpnp.argmax.rst", "reference/generated/dpnp.argmin.rst", "reference/generated/dpnp.argsort.rst", "reference/generated/dpnp.argwhere.rst", "reference/generated/dpnp.around.rst", "reference/generated/dpnp.array.rst", "reference/generated/dpnp.array_equal.rst", "reference/generated/dpnp.array_equiv.rst", "reference/generated/dpnp.array_split.rst", "reference/generated/dpnp.asanyarray.rst", "reference/generated/dpnp.asarray.rst", "reference/generated/dpnp.asarray_chkfinite.rst", "reference/generated/dpnp.ascontiguousarray.rst", "reference/generated/dpnp.asfarray.rst", "reference/generated/dpnp.asfortranarray.rst", "reference/generated/dpnp.asin.rst", "reference/generated/dpnp.asinh.rst", "reference/generated/dpnp.asnumpy.rst", "reference/generated/dpnp.astype.rst", "reference/generated/dpnp.atan.rst", "reference/generated/dpnp.atan2.rst", "reference/generated/dpnp.atanh.rst", "reference/generated/dpnp.atleast_1d.rst", "reference/generated/dpnp.atleast_2d.rst", "reference/generated/dpnp.atleast_3d.rst", "reference/generated/dpnp.average.rst", "reference/generated/dpnp.binary_repr.rst", "reference/generated/dpnp.bincount.rst", "reference/generated/dpnp.bitwise_and.rst", "reference/generated/dpnp.bitwise_invert.rst", "reference/generated/dpnp.bitwise_left_shift.rst", "reference/generated/dpnp.bitwise_not.rst", "reference/generated/dpnp.bitwise_or.rst", "reference/generated/dpnp.bitwise_right_shift.rst", "reference/generated/dpnp.bitwise_xor.rst", "reference/generated/dpnp.broadcast_arrays.rst", "reference/generated/dpnp.broadcast_shapes.rst", "reference/generated/dpnp.broadcast_to.rst", "reference/generated/dpnp.byte_bounds.rst", "reference/generated/dpnp.can_cast.rst", "reference/generated/dpnp.cbrt.rst", "reference/generated/dpnp.ceil.rst", "reference/generated/dpnp.choose.rst", "reference/generated/dpnp.clip.rst", "reference/generated/dpnp.column_stack.rst", "reference/generated/dpnp.compress.rst", "reference/generated/dpnp.concat.rst", "reference/generated/dpnp.concatenate.rst", "reference/generated/dpnp.conj.rst", "reference/generated/dpnp.conjugate.rst", "reference/generated/dpnp.convolve.rst", "reference/generated/dpnp.copy.rst", "reference/generated/dpnp.copysign.rst", "reference/generated/dpnp.copyto.rst", "reference/generated/dpnp.corrcoef.rst", "reference/generated/dpnp.correlate.rst", "reference/generated/dpnp.cos.rst", "reference/generated/dpnp.cosh.rst", "reference/generated/dpnp.count_nonzero.rst", "reference/generated/dpnp.cov.rst", "reference/generated/dpnp.cross.rst", "reference/generated/dpnp.cumlogsumexp.rst", "reference/generated/dpnp.cumprod.rst", "reference/generated/dpnp.cumsum.rst", "reference/generated/dpnp.cumulative_prod.rst", "reference/generated/dpnp.cumulative_sum.rst", "reference/generated/dpnp.deg2rad.rst", "reference/generated/dpnp.degrees.rst", "reference/generated/dpnp.delete.rst", "reference/generated/dpnp.diag.rst", "reference/generated/dpnp.diag_indices.rst", "reference/generated/dpnp.diag_indices_from.rst", "reference/generated/dpnp.diagflat.rst", "reference/generated/dpnp.diagonal.rst", "reference/generated/dpnp.diff.rst", "reference/generated/dpnp.digitize.rst", "reference/generated/dpnp.divide.rst", "reference/generated/dpnp.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.T.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.all.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.any.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmax.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argmin.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.argsort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.asnumpy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.astype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.choose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.clip.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.compress.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conj.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.conjugate.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.copy.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumprod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.cumsum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.diagonal.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dot.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.dtype.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.fill.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flags.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.flatten.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.get_array.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.imag.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.item.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.itemsize.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mT.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.max.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.mean.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.min.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nbytes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ndim.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.nonzero.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.partition.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.prod.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.put.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.ravel.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.real.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.repeat.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.reshape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.round.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.searchsorted.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.shape.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.size.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sort.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.squeeze.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.std.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.strides.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sum.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.swapaxes.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_context.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.sycl_queue.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.take.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.to_device.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.trace.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.transpose.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.usm_type.rst", "reference/generated/dpnp.dpnp_array.dpnp_array.var.rst", "reference/generated/dpnp.dsplit.rst", "reference/generated/dpnp.dstack.rst", "reference/generated/dpnp.dtype.rst", "reference/generated/dpnp.dtype.alignment.rst", "reference/generated/dpnp.dtype.base.rst", "reference/generated/dpnp.dtype.byteorder.rst", "reference/generated/dpnp.dtype.char.rst", "reference/generated/dpnp.dtype.descr.rst", "reference/generated/dpnp.dtype.fields.rst", "reference/generated/dpnp.dtype.flags.rst", "reference/generated/dpnp.dtype.hasobject.rst", "reference/generated/dpnp.dtype.isalignedstruct.rst", "reference/generated/dpnp.dtype.isbuiltin.rst", "reference/generated/dpnp.dtype.isnative.rst", "reference/generated/dpnp.dtype.itemsize.rst", "reference/generated/dpnp.dtype.kind.rst", "reference/generated/dpnp.dtype.metadata.rst", "reference/generated/dpnp.dtype.name.rst", "reference/generated/dpnp.dtype.names.rst", "reference/generated/dpnp.dtype.ndim.rst", "reference/generated/dpnp.dtype.newbyteorder.rst", "reference/generated/dpnp.dtype.num.rst", "reference/generated/dpnp.dtype.shape.rst", "reference/generated/dpnp.dtype.str.rst", "reference/generated/dpnp.dtype.subdtype.rst", "reference/generated/dpnp.dtype.type.rst", "reference/generated/dpnp.ediff1d.rst", "reference/generated/dpnp.einsum.rst", "reference/generated/dpnp.einsum_path.rst", "reference/generated/dpnp.empty.rst", "reference/generated/dpnp.empty_like.rst", "reference/generated/dpnp.equal.rst", "reference/generated/dpnp.erf.rst", "reference/generated/dpnp.exp.rst", "reference/generated/dpnp.exp2.rst", "reference/generated/dpnp.expand_dims.rst", "reference/generated/dpnp.expm1.rst", "reference/generated/dpnp.extract.rst", "reference/generated/dpnp.eye.rst", "reference/generated/dpnp.fabs.rst", "reference/generated/dpnp.fft.fft.rst", "reference/generated/dpnp.fft.fft2.rst", "reference/generated/dpnp.fft.fftfreq.rst", "reference/generated/dpnp.fft.fftn.rst", "reference/generated/dpnp.fft.fftshift.rst", "reference/generated/dpnp.fft.hfft.rst", "reference/generated/dpnp.fft.ifft.rst", "reference/generated/dpnp.fft.ifft2.rst", "reference/generated/dpnp.fft.ifftn.rst", "reference/generated/dpnp.fft.ifftshift.rst", "reference/generated/dpnp.fft.ihfft.rst", "reference/generated/dpnp.fft.irfft.rst", "reference/generated/dpnp.fft.irfft2.rst", "reference/generated/dpnp.fft.irfftn.rst", "reference/generated/dpnp.fft.rfft.rst", "reference/generated/dpnp.fft.rfft2.rst", "reference/generated/dpnp.fft.rfftfreq.rst", "reference/generated/dpnp.fft.rfftn.rst", "reference/generated/dpnp.fill_diagonal.rst", "reference/generated/dpnp.finfo.rst", "reference/generated/dpnp.fix.rst", "reference/generated/dpnp.flatiter.rst", "reference/generated/dpnp.flatnonzero.rst", "reference/generated/dpnp.flip.rst", "reference/generated/dpnp.fliplr.rst", "reference/generated/dpnp.flipud.rst", "reference/generated/dpnp.float_power.rst", "reference/generated/dpnp.floor.rst", "reference/generated/dpnp.floor_divide.rst", "reference/generated/dpnp.fmax.rst", "reference/generated/dpnp.fmin.rst", "reference/generated/dpnp.fmod.rst", "reference/generated/dpnp.from_dlpack.rst", "reference/generated/dpnp.frombuffer.rst", "reference/generated/dpnp.fromfile.rst", "reference/generated/dpnp.fromfunction.rst", "reference/generated/dpnp.fromiter.rst", "reference/generated/dpnp.fromstring.rst", "reference/generated/dpnp.full.rst", "reference/generated/dpnp.full_like.rst", "reference/generated/dpnp.gcd.rst", "reference/generated/dpnp.geomspace.rst", "reference/generated/dpnp.get_include.rst", "reference/generated/dpnp.gradient.rst", "reference/generated/dpnp.greater.rst", "reference/generated/dpnp.greater_equal.rst", "reference/generated/dpnp.heaviside.rst", "reference/generated/dpnp.histogram.rst", "reference/generated/dpnp.histogram_bin_edges.rst", "reference/generated/dpnp.hsplit.rst", "reference/generated/dpnp.hstack.rst", "reference/generated/dpnp.hypot.rst", "reference/generated/dpnp.i0.rst", "reference/generated/dpnp.identity.rst", "reference/generated/dpnp.iinfo.rst", "reference/generated/dpnp.imag.rst", "reference/generated/dpnp.indices.rst", "reference/generated/dpnp.inner.rst", "reference/generated/dpnp.insert.rst", "reference/generated/dpnp.invert.rst", "reference/generated/dpnp.isclose.rst", "reference/generated/dpnp.iscomplex.rst", "reference/generated/dpnp.iscomplexobj.rst", "reference/generated/dpnp.isfinite.rst", "reference/generated/dpnp.isfortran.rst", "reference/generated/dpnp.isinf.rst", "reference/generated/dpnp.isnan.rst", "reference/generated/dpnp.isneginf.rst", "reference/generated/dpnp.isposinf.rst", "reference/generated/dpnp.isreal.rst", "reference/generated/dpnp.isrealobj.rst", "reference/generated/dpnp.isscalar.rst", "reference/generated/dpnp.issubdtype.rst", "reference/generated/dpnp.ix_.rst", "reference/generated/dpnp.kron.rst", "reference/generated/dpnp.lcm.rst", "reference/generated/dpnp.ldexp.rst", "reference/generated/dpnp.left_shift.rst", "reference/generated/dpnp.less.rst", "reference/generated/dpnp.less_equal.rst", "reference/generated/dpnp.linalg.cholesky.rst", "reference/generated/dpnp.linalg.cond.rst", "reference/generated/dpnp.linalg.cross.rst", "reference/generated/dpnp.linalg.det.rst", "reference/generated/dpnp.linalg.diagonal.rst", "reference/generated/dpnp.linalg.eig.rst", "reference/generated/dpnp.linalg.eigh.rst", "reference/generated/dpnp.linalg.eigvals.rst", "reference/generated/dpnp.linalg.eigvalsh.rst", "reference/generated/dpnp.linalg.inv.rst", "reference/generated/dpnp.linalg.lstsq.rst", "reference/generated/dpnp.linalg.matmul.rst", "reference/generated/dpnp.linalg.matrix_norm.rst", "reference/generated/dpnp.linalg.matrix_power.rst", "reference/generated/dpnp.linalg.matrix_rank.rst", "reference/generated/dpnp.linalg.multi_dot.rst", "reference/generated/dpnp.linalg.norm.rst", "reference/generated/dpnp.linalg.outer.rst", "reference/generated/dpnp.linalg.pinv.rst", "reference/generated/dpnp.linalg.qr.rst", "reference/generated/dpnp.linalg.slogdet.rst", "reference/generated/dpnp.linalg.solve.rst", "reference/generated/dpnp.linalg.svd.rst", "reference/generated/dpnp.linalg.svdvals.rst", "reference/generated/dpnp.linalg.tensordot.rst", "reference/generated/dpnp.linalg.tensorinv.rst", "reference/generated/dpnp.linalg.tensorsolve.rst", "reference/generated/dpnp.linalg.trace.rst", "reference/generated/dpnp.linalg.vecdot.rst", "reference/generated/dpnp.linalg.vector_norm.rst", "reference/generated/dpnp.linspace.rst", "reference/generated/dpnp.loadtxt.rst", "reference/generated/dpnp.log.rst", "reference/generated/dpnp.log10.rst", "reference/generated/dpnp.log1p.rst", "reference/generated/dpnp.log2.rst", "reference/generated/dpnp.logaddexp.rst", "reference/generated/dpnp.logaddexp2.rst", "reference/generated/dpnp.logical_and.rst", "reference/generated/dpnp.logical_not.rst", "reference/generated/dpnp.logical_or.rst", "reference/generated/dpnp.logical_xor.rst", "reference/generated/dpnp.logspace.rst", "reference/generated/dpnp.logsumexp.rst", "reference/generated/dpnp.mask_indices.rst", "reference/generated/dpnp.matmul.rst", "reference/generated/dpnp.matrix_transpose.rst", "reference/generated/dpnp.max.rst", "reference/generated/dpnp.maximum.rst", "reference/generated/dpnp.mean.rst", "reference/generated/dpnp.median.rst", "reference/generated/dpnp.meshgrid.rst", "reference/generated/dpnp.mgrid.rst", "reference/generated/dpnp.min.rst", "reference/generated/dpnp.minimum.rst", "reference/generated/dpnp.mod.rst", "reference/generated/dpnp.modf.rst", "reference/generated/dpnp.moveaxis.rst", "reference/generated/dpnp.multiply.rst", "reference/generated/dpnp.nan_to_num.rst", "reference/generated/dpnp.nanargmax.rst", "reference/generated/dpnp.nanargmin.rst", "reference/generated/dpnp.nancumprod.rst", "reference/generated/dpnp.nancumsum.rst", "reference/generated/dpnp.nanmax.rst", "reference/generated/dpnp.nanmean.rst", "reference/generated/dpnp.nanmin.rst", "reference/generated/dpnp.nanprod.rst", "reference/generated/dpnp.nanstd.rst", "reference/generated/dpnp.nansum.rst", "reference/generated/dpnp.nanvar.rst", "reference/generated/dpnp.ndarray.rst", "reference/generated/dpnp.ndarray.T.rst", "reference/generated/dpnp.ndarray.__abs__.rst", "reference/generated/dpnp.ndarray.__add__.rst", "reference/generated/dpnp.ndarray.__and__.rst", "reference/generated/dpnp.ndarray.__bool__.rst", "reference/generated/dpnp.ndarray.__complex__.rst", "reference/generated/dpnp.ndarray.__copy__.rst", "reference/generated/dpnp.ndarray.__eq__.rst", "reference/generated/dpnp.ndarray.__float__.rst", "reference/generated/dpnp.ndarray.__floordiv__.rst", "reference/generated/dpnp.ndarray.__ge__.rst", "reference/generated/dpnp.ndarray.__getitem__.rst", "reference/generated/dpnp.ndarray.__gt__.rst", "reference/generated/dpnp.ndarray.__iadd__.rst", "reference/generated/dpnp.ndarray.__iand__.rst", "reference/generated/dpnp.ndarray.__ifloordiv__.rst", "reference/generated/dpnp.ndarray.__ilshift__.rst", "reference/generated/dpnp.ndarray.__imatmul__.rst", "reference/generated/dpnp.ndarray.__imod__.rst", "reference/generated/dpnp.ndarray.__imul__.rst", "reference/generated/dpnp.ndarray.__int__.rst", "reference/generated/dpnp.ndarray.__invert__.rst", "reference/generated/dpnp.ndarray.__ior__.rst", "reference/generated/dpnp.ndarray.__ipow__.rst", "reference/generated/dpnp.ndarray.__irshift__.rst", "reference/generated/dpnp.ndarray.__isub__.rst", "reference/generated/dpnp.ndarray.__itruediv__.rst", "reference/generated/dpnp.ndarray.__ixor__.rst", "reference/generated/dpnp.ndarray.__le__.rst", "reference/generated/dpnp.ndarray.__len__.rst", "reference/generated/dpnp.ndarray.__lshift__.rst", "reference/generated/dpnp.ndarray.__lt__.rst", "reference/generated/dpnp.ndarray.__matmul__.rst", "reference/generated/dpnp.ndarray.__mod__.rst", "reference/generated/dpnp.ndarray.__mul__.rst", "reference/generated/dpnp.ndarray.__ne__.rst", "reference/generated/dpnp.ndarray.__neg__.rst", "reference/generated/dpnp.ndarray.__new__.rst", "reference/generated/dpnp.ndarray.__or__.rst", "reference/generated/dpnp.ndarray.__pos__.rst", "reference/generated/dpnp.ndarray.__pow__.rst", "reference/generated/dpnp.ndarray.__radd__.rst", "reference/generated/dpnp.ndarray.__rand__.rst", "reference/generated/dpnp.ndarray.__repr__.rst", "reference/generated/dpnp.ndarray.__rfloordiv__.rst", "reference/generated/dpnp.ndarray.__rlshift__.rst", "reference/generated/dpnp.ndarray.__rmatmul__.rst", "reference/generated/dpnp.ndarray.__rmod__.rst", "reference/generated/dpnp.ndarray.__rmul__.rst", "reference/generated/dpnp.ndarray.__ror__.rst", "reference/generated/dpnp.ndarray.__rpow__.rst", "reference/generated/dpnp.ndarray.__rrshift__.rst", "reference/generated/dpnp.ndarray.__rshift__.rst", "reference/generated/dpnp.ndarray.__rsub__.rst", "reference/generated/dpnp.ndarray.__rtruediv__.rst", "reference/generated/dpnp.ndarray.__rxor__.rst", "reference/generated/dpnp.ndarray.__setitem__.rst", "reference/generated/dpnp.ndarray.__str__.rst", "reference/generated/dpnp.ndarray.__sub__.rst", "reference/generated/dpnp.ndarray.__truediv__.rst", "reference/generated/dpnp.ndarray.__xor__.rst", "reference/generated/dpnp.ndarray.all.rst", "reference/generated/dpnp.ndarray.any.rst", "reference/generated/dpnp.ndarray.argmax.rst", "reference/generated/dpnp.ndarray.argmin.rst", "reference/generated/dpnp.ndarray.argsort.rst", "reference/generated/dpnp.ndarray.asnumpy.rst", "reference/generated/dpnp.ndarray.astype.rst", "reference/generated/dpnp.ndarray.choose.rst", "reference/generated/dpnp.ndarray.clip.rst", "reference/generated/dpnp.ndarray.compress.rst", "reference/generated/dpnp.ndarray.conj.rst", "reference/generated/dpnp.ndarray.conjugate.rst", "reference/generated/dpnp.ndarray.copy.rst", "reference/generated/dpnp.ndarray.cumprod.rst", "reference/generated/dpnp.ndarray.cumsum.rst", "reference/generated/dpnp.ndarray.device.rst", "reference/generated/dpnp.ndarray.diagonal.rst", "reference/generated/dpnp.ndarray.dot.rst", "reference/generated/dpnp.ndarray.dtype.rst", "reference/generated/dpnp.ndarray.fill.rst", "reference/generated/dpnp.ndarray.flags.rst", "reference/generated/dpnp.ndarray.flat.rst", "reference/generated/dpnp.ndarray.flatten.rst", "reference/generated/dpnp.ndarray.get_array.rst", "reference/generated/dpnp.ndarray.imag.rst", "reference/generated/dpnp.ndarray.item.rst", "reference/generated/dpnp.ndarray.itemsize.rst", "reference/generated/dpnp.ndarray.mT.rst", "reference/generated/dpnp.ndarray.max.rst", "reference/generated/dpnp.ndarray.mean.rst", "reference/generated/dpnp.ndarray.min.rst", "reference/generated/dpnp.ndarray.nbytes.rst", "reference/generated/dpnp.ndarray.ndim.rst", "reference/generated/dpnp.ndarray.nonzero.rst", "reference/generated/dpnp.ndarray.partition.rst", "reference/generated/dpnp.ndarray.prod.rst", "reference/generated/dpnp.ndarray.put.rst", "reference/generated/dpnp.ndarray.ravel.rst", "reference/generated/dpnp.ndarray.real.rst", "reference/generated/dpnp.ndarray.repeat.rst", "reference/generated/dpnp.ndarray.reshape.rst", "reference/generated/dpnp.ndarray.round.rst", "reference/generated/dpnp.ndarray.searchsorted.rst", "reference/generated/dpnp.ndarray.shape.rst", "reference/generated/dpnp.ndarray.size.rst", "reference/generated/dpnp.ndarray.sort.rst", "reference/generated/dpnp.ndarray.squeeze.rst", "reference/generated/dpnp.ndarray.std.rst", "reference/generated/dpnp.ndarray.strides.rst", "reference/generated/dpnp.ndarray.sum.rst", "reference/generated/dpnp.ndarray.swapaxes.rst", "reference/generated/dpnp.ndarray.sycl_context.rst", "reference/generated/dpnp.ndarray.sycl_device.rst", "reference/generated/dpnp.ndarray.sycl_queue.rst", "reference/generated/dpnp.ndarray.take.rst", "reference/generated/dpnp.ndarray.to_device.rst", "reference/generated/dpnp.ndarray.trace.rst", "reference/generated/dpnp.ndarray.transpose.rst", "reference/generated/dpnp.ndarray.usm_type.rst", "reference/generated/dpnp.ndarray.var.rst", "reference/generated/dpnp.ndim.rst", "reference/generated/dpnp.ndindex.rst", "reference/generated/dpnp.negative.rst", "reference/generated/dpnp.nextafter.rst", "reference/generated/dpnp.nonzero.rst", "reference/generated/dpnp.not_equal.rst", "reference/generated/dpnp.ogrid.rst", "reference/generated/dpnp.ones.rst", "reference/generated/dpnp.ones_like.rst", "reference/generated/dpnp.outer.rst", "reference/generated/dpnp.pad.rst", "reference/generated/dpnp.partition.rst", "reference/generated/dpnp.permute_dims.rst", "reference/generated/dpnp.place.rst", "reference/generated/dpnp.positive.rst", "reference/generated/dpnp.pow.rst", "reference/generated/dpnp.power.rst", "reference/generated/dpnp.prod.rst", "reference/generated/dpnp.proj.rst", "reference/generated/dpnp.ptp.rst", "reference/generated/dpnp.put.rst", "reference/generated/dpnp.put_along_axis.rst", "reference/generated/dpnp.putmask.rst", "reference/generated/dpnp.rad2deg.rst", "reference/generated/dpnp.radians.rst", "reference/generated/dpnp.random.RandomState.rst", "reference/generated/dpnp.random.RandomState.get_state.rst", "reference/generated/dpnp.random.RandomState.get_sycl_device.rst", "reference/generated/dpnp.random.RandomState.get_sycl_queue.rst", "reference/generated/dpnp.random.RandomState.normal.rst", "reference/generated/dpnp.random.RandomState.rand.rst", "reference/generated/dpnp.random.RandomState.randint.rst", "reference/generated/dpnp.random.RandomState.randn.rst", "reference/generated/dpnp.random.RandomState.random_sample.rst", "reference/generated/dpnp.random.RandomState.standard_normal.rst", "reference/generated/dpnp.random.RandomState.uniform.rst", "reference/generated/dpnp.random.beta.rst", "reference/generated/dpnp.random.binomial.rst", "reference/generated/dpnp.random.bytes.rst", "reference/generated/dpnp.random.chisquare.rst", "reference/generated/dpnp.random.choice.rst", "reference/generated/dpnp.random.dirichlet.rst", "reference/generated/dpnp.random.exponential.rst", "reference/generated/dpnp.random.f.rst", "reference/generated/dpnp.random.gamma.rst", "reference/generated/dpnp.random.geometric.rst", "reference/generated/dpnp.random.gumbel.rst", "reference/generated/dpnp.random.hypergeometric.rst", "reference/generated/dpnp.random.laplace.rst", "reference/generated/dpnp.random.logistic.rst", "reference/generated/dpnp.random.lognormal.rst", "reference/generated/dpnp.random.logseries.rst", "reference/generated/dpnp.random.multinomial.rst", "reference/generated/dpnp.random.multivariate_normal.rst", "reference/generated/dpnp.random.negative_binomial.rst", "reference/generated/dpnp.random.noncentral_chisquare.rst", "reference/generated/dpnp.random.noncentral_f.rst", "reference/generated/dpnp.random.normal.rst", "reference/generated/dpnp.random.pareto.rst", "reference/generated/dpnp.random.permutation.rst", "reference/generated/dpnp.random.poisson.rst", "reference/generated/dpnp.random.power.rst", "reference/generated/dpnp.random.rand.rst", "reference/generated/dpnp.random.randint.rst", "reference/generated/dpnp.random.randn.rst", "reference/generated/dpnp.random.random.rst", "reference/generated/dpnp.random.random_integers.rst", "reference/generated/dpnp.random.random_sample.rst", "reference/generated/dpnp.random.ranf.rst", "reference/generated/dpnp.random.rayleigh.rst", "reference/generated/dpnp.random.sample.rst", "reference/generated/dpnp.random.seed.rst", "reference/generated/dpnp.random.shuffle.rst", "reference/generated/dpnp.random.standard_cauchy.rst", "reference/generated/dpnp.random.standard_exponential.rst", "reference/generated/dpnp.random.standard_gamma.rst", "reference/generated/dpnp.random.standard_normal.rst", "reference/generated/dpnp.random.standard_t.rst", "reference/generated/dpnp.random.triangular.rst", "reference/generated/dpnp.random.uniform.rst", "reference/generated/dpnp.random.vonmises.rst", "reference/generated/dpnp.random.wald.rst", "reference/generated/dpnp.random.weibull.rst", "reference/generated/dpnp.random.zipf.rst", "reference/generated/dpnp.ravel.rst", "reference/generated/dpnp.ravel_multi_index.rst", "reference/generated/dpnp.real.rst", "reference/generated/dpnp.real_if_close.rst", "reference/generated/dpnp.reciprocal.rst", "reference/generated/dpnp.reduce_hypot.rst", "reference/generated/dpnp.remainder.rst", "reference/generated/dpnp.repeat.rst", "reference/generated/dpnp.require.rst", "reference/generated/dpnp.reshape.rst", "reference/generated/dpnp.resize.rst", "reference/generated/dpnp.result_type.rst", "reference/generated/dpnp.right_shift.rst", "reference/generated/dpnp.rint.rst", "reference/generated/dpnp.roll.rst", "reference/generated/dpnp.rollaxis.rst", "reference/generated/dpnp.rot90.rst", "reference/generated/dpnp.round.rst", "reference/generated/dpnp.row_stack.rst", "reference/generated/dpnp.rsqrt.rst", "reference/generated/dpnp.searchsorted.rst", "reference/generated/dpnp.select.rst", "reference/generated/dpnp.shape.rst", "reference/generated/dpnp.sign.rst", "reference/generated/dpnp.signbit.rst", "reference/generated/dpnp.sin.rst", "reference/generated/dpnp.sinc.rst", "reference/generated/dpnp.sinh.rst", "reference/generated/dpnp.size.rst", "reference/generated/dpnp.sort.rst", "reference/generated/dpnp.sort_complex.rst", "reference/generated/dpnp.spacing.rst", "reference/generated/dpnp.split.rst", "reference/generated/dpnp.sqrt.rst", "reference/generated/dpnp.square.rst", "reference/generated/dpnp.squeeze.rst", "reference/generated/dpnp.stack.rst", "reference/generated/dpnp.std.rst", "reference/generated/dpnp.subtract.rst", "reference/generated/dpnp.sum.rst", "reference/generated/dpnp.swapaxes.rst", "reference/generated/dpnp.take.rst", "reference/generated/dpnp.take_along_axis.rst", "reference/generated/dpnp.tan.rst", "reference/generated/dpnp.tanh.rst", "reference/generated/dpnp.tensordot.rst", "reference/generated/dpnp.tile.rst", "reference/generated/dpnp.trace.rst", "reference/generated/dpnp.transpose.rst", "reference/generated/dpnp.trapezoid.rst", "reference/generated/dpnp.tri.rst", "reference/generated/dpnp.tril.rst", "reference/generated/dpnp.tril_indices.rst", "reference/generated/dpnp.tril_indices_from.rst", "reference/generated/dpnp.trim_zeros.rst", "reference/generated/dpnp.triu.rst", "reference/generated/dpnp.triu_indices.rst", "reference/generated/dpnp.triu_indices_from.rst", "reference/generated/dpnp.true_divide.rst", "reference/generated/dpnp.trunc.rst", "reference/generated/dpnp.unique.rst", "reference/generated/dpnp.unravel_index.rst", "reference/generated/dpnp.unstack.rst", "reference/generated/dpnp.unwrap.rst", "reference/generated/dpnp.vander.rst", "reference/generated/dpnp.var.rst", "reference/generated/dpnp.vdot.rst", "reference/generated/dpnp.vecdot.rst", "reference/generated/dpnp.vsplit.rst", "reference/generated/dpnp.vstack.rst", "reference/generated/dpnp.where.rst", "reference/generated/dpnp.zeros.rst", "reference/generated/dpnp.zeros_like.rst", "reference/index.rst", "reference/indexing.rst", "reference/linalg.rst", "reference/logic.rst", "reference/manipulation.rst", "reference/math.rst", "reference/misc.rst", "reference/ndarray.rst", "reference/polynomials.rst", "reference/random.rst", "reference/routines.rst", "reference/sorting.rst", "reference/special.rst", "reference/statistics.rst", "reference/ufunc.rst"], "indexentries": {"__abs__() (dpnp.ndarray method)": [[367, "dpnp.ndarray.__abs__", false]], "__add__() (dpnp.ndarray method)": [[368, "dpnp.ndarray.__add__", false]], "__and__() (dpnp.ndarray method)": [[369, "dpnp.ndarray.__and__", false]], "__bool__() (dpnp.ndarray method)": [[370, "dpnp.ndarray.__bool__", false]], "__complex__() (dpnp.ndarray method)": [[371, "dpnp.ndarray.__complex__", false]], "__copy__() (dpnp.ndarray method)": [[372, "dpnp.ndarray.__copy__", false]], "__eq__() (dpnp.ndarray method)": [[373, "dpnp.ndarray.__eq__", false]], "__float__() (dpnp.ndarray method)": [[374, "dpnp.ndarray.__float__", false]], "__floordiv__() (dpnp.ndarray method)": [[375, "dpnp.ndarray.__floordiv__", false]], "__ge__() (dpnp.ndarray method)": [[376, "dpnp.ndarray.__ge__", false]], "__getitem__() (dpnp.ndarray method)": [[377, "dpnp.ndarray.__getitem__", false]], "__gt__() (dpnp.ndarray method)": [[378, "dpnp.ndarray.__gt__", false]], "__iadd__() (dpnp.ndarray method)": [[379, "dpnp.ndarray.__iadd__", false]], "__iand__() (dpnp.ndarray method)": [[380, "dpnp.ndarray.__iand__", false]], "__ifloordiv__() (dpnp.ndarray method)": [[381, "dpnp.ndarray.__ifloordiv__", false]], "__ilshift__() (dpnp.ndarray method)": [[382, "dpnp.ndarray.__ilshift__", false]], "__imatmul__() (dpnp.ndarray method)": [[383, "dpnp.ndarray.__imatmul__", false]], "__imod__() (dpnp.ndarray method)": [[384, "dpnp.ndarray.__imod__", false]], "__imul__() (dpnp.ndarray method)": [[385, "dpnp.ndarray.__imul__", false]], "__int__() (dpnp.ndarray method)": [[386, "dpnp.ndarray.__int__", false]], "__invert__() (dpnp.ndarray method)": [[387, "dpnp.ndarray.__invert__", false]], "__ior__() (dpnp.ndarray method)": [[388, "dpnp.ndarray.__ior__", false]], "__ipow__() (dpnp.ndarray method)": [[389, "dpnp.ndarray.__ipow__", false]], "__irshift__() (dpnp.ndarray method)": [[390, "dpnp.ndarray.__irshift__", false]], "__isub__() (dpnp.ndarray method)": [[391, "dpnp.ndarray.__isub__", false]], "__itruediv__() (dpnp.ndarray method)": [[392, "dpnp.ndarray.__itruediv__", false]], "__ixor__() (dpnp.ndarray method)": [[393, "dpnp.ndarray.__ixor__", false]], "__le__() (dpnp.ndarray method)": [[394, "dpnp.ndarray.__le__", false]], "__len__() (dpnp.ndarray method)": [[395, "dpnp.ndarray.__len__", false]], "__lshift__() (dpnp.ndarray method)": [[396, "dpnp.ndarray.__lshift__", false]], "__lt__() (dpnp.ndarray method)": [[397, "dpnp.ndarray.__lt__", false]], "__matmul__() (dpnp.ndarray method)": [[398, "dpnp.ndarray.__matmul__", false]], "__mod__() (dpnp.ndarray method)": [[399, "dpnp.ndarray.__mod__", false]], "__mul__() (dpnp.ndarray method)": [[400, "dpnp.ndarray.__mul__", false]], "__ne__() (dpnp.ndarray method)": [[401, "dpnp.ndarray.__ne__", false]], "__neg__() (dpnp.ndarray method)": [[402, "dpnp.ndarray.__neg__", false]], "__new__() (dpnp.ndarray method)": [[403, "dpnp.ndarray.__new__", false]], "__or__() (dpnp.ndarray method)": [[404, "dpnp.ndarray.__or__", false]], "__pos__() (dpnp.ndarray method)": [[405, "dpnp.ndarray.__pos__", false]], "__pow__() (dpnp.ndarray method)": [[406, "dpnp.ndarray.__pow__", false]], "__radd__() (dpnp.ndarray method)": [[407, "dpnp.ndarray.__radd__", false]], "__rand__() (dpnp.ndarray method)": [[408, "dpnp.ndarray.__rand__", false]], "__repr__() (dpnp.ndarray method)": [[409, "dpnp.ndarray.__repr__", false]], "__rfloordiv__() (dpnp.ndarray method)": [[410, "dpnp.ndarray.__rfloordiv__", false]], "__rlshift__() (dpnp.ndarray method)": [[411, "dpnp.ndarray.__rlshift__", false]], "__rmatmul__() (dpnp.ndarray method)": [[412, "dpnp.ndarray.__rmatmul__", false]], "__rmod__() (dpnp.ndarray method)": [[413, "dpnp.ndarray.__rmod__", false]], "__rmul__() (dpnp.ndarray method)": [[414, "dpnp.ndarray.__rmul__", false]], "__ror__() (dpnp.ndarray method)": [[415, "dpnp.ndarray.__ror__", false]], "__rpow__() (dpnp.ndarray method)": [[416, "dpnp.ndarray.__rpow__", false]], "__rrshift__() (dpnp.ndarray method)": [[417, "dpnp.ndarray.__rrshift__", false]], "__rshift__() (dpnp.ndarray method)": [[418, "dpnp.ndarray.__rshift__", false]], "__rsub__() (dpnp.ndarray method)": [[419, "dpnp.ndarray.__rsub__", false]], "__rtruediv__() (dpnp.ndarray method)": [[420, "dpnp.ndarray.__rtruediv__", false]], "__rxor__() (dpnp.ndarray method)": [[421, "dpnp.ndarray.__rxor__", false]], "__setitem__() (dpnp.ndarray method)": [[422, "dpnp.ndarray.__setitem__", false]], "__str__() (dpnp.ndarray method)": [[423, "dpnp.ndarray.__str__", false]], "__sub__() (dpnp.ndarray method)": [[424, "dpnp.ndarray.__sub__", false]], "__truediv__() (dpnp.ndarray method)": [[425, "dpnp.ndarray.__truediv__", false]], "__xor__() (dpnp.ndarray method)": [[426, "dpnp.ndarray.__xor__", false]], "abs() (in module dpnp)": [[12, "dpnp.abs", false]], "absolute() (in module dpnp)": [[13, "dpnp.absolute", false]], "acos() (in module dpnp)": [[14, "dpnp.acos", false]], "acosh() (in module dpnp)": [[15, "dpnp.acosh", false]], "add() (in module dpnp)": [[16, "dpnp.add", false]], "alignment (dpnp.dtype attribute)": [[177, "dpnp.dtype.alignment", false]], "all() (dpnp.dpnp_array.dpnp_array method)": [[114, "dpnp.dpnp_array.dpnp_array.all", false]], "all() (dpnp.ndarray method)": [[427, "dpnp.ndarray.all", false]], "all() (in module dpnp)": [[17, "dpnp.all", false]], "allclose() (in module dpnp)": [[18, "dpnp.allclose", false]], "amax() (in module dpnp)": [[19, "dpnp.amax", false]], "amin() (in module dpnp)": [[20, "dpnp.amin", false]], "angle() (in module dpnp)": [[21, "dpnp.angle", false]], "any() (dpnp.dpnp_array.dpnp_array method)": [[115, "dpnp.dpnp_array.dpnp_array.any", false]], "any() (dpnp.ndarray method)": [[428, "dpnp.ndarray.any", false]], "any() (in module dpnp)": [[22, "dpnp.any", false]], "append() (in module dpnp)": [[23, "dpnp.append", false]], "apply_along_axis() (in module dpnp)": [[24, "dpnp.apply_along_axis", false]], "apply_over_axes() (in module dpnp)": [[25, "dpnp.apply_over_axes", false]], "arange() (in module dpnp)": [[26, "dpnp.arange", false]], "arccos() (in module dpnp)": [[27, "dpnp.arccos", false]], "arccosh() (in module dpnp)": [[28, "dpnp.arccosh", false]], "arcsin() (in module dpnp)": [[29, "dpnp.arcsin", false]], "arcsinh() (in module dpnp)": [[30, "dpnp.arcsinh", false]], "arctan() (in module dpnp)": [[31, "dpnp.arctan", false]], "arctan2() (in module dpnp)": [[32, "dpnp.arctan2", false]], "arctanh() (in module dpnp)": [[33, "dpnp.arctanh", false]], "argmax() (dpnp.dpnp_array.dpnp_array method)": [[116, "dpnp.dpnp_array.dpnp_array.argmax", false]], "argmax() (dpnp.ndarray method)": [[429, "dpnp.ndarray.argmax", false]], "argmax() (in module dpnp)": [[34, "dpnp.argmax", false]], "argmin() (dpnp.dpnp_array.dpnp_array method)": [[117, "dpnp.dpnp_array.dpnp_array.argmin", false]], "argmin() (dpnp.ndarray method)": [[430, "dpnp.ndarray.argmin", false]], "argmin() (in module dpnp)": [[35, "dpnp.argmin", false]], "argsort() (dpnp.dpnp_array.dpnp_array method)": [[118, "dpnp.dpnp_array.dpnp_array.argsort", false]], "argsort() (dpnp.ndarray method)": [[431, "dpnp.ndarray.argsort", false]], "argsort() (in module dpnp)": [[36, "dpnp.argsort", false]], "argwhere() (in module dpnp)": [[37, "dpnp.argwhere", false]], "around() (in module dpnp)": [[38, "dpnp.around", false]], "array() (in module dpnp)": [[39, "dpnp.array", false]], "array_equal() (in module dpnp)": [[40, "dpnp.array_equal", false]], "array_equiv() (in module dpnp)": [[41, "dpnp.array_equiv", false]], "array_split() (in module dpnp)": [[42, "dpnp.array_split", false]], "asanyarray() (in module dpnp)": [[43, "dpnp.asanyarray", false]], "asarray() (in module dpnp)": [[44, "dpnp.asarray", false]], "asarray_chkfinite() (in module dpnp)": [[45, "dpnp.asarray_chkfinite", false]], "ascontiguousarray() (in module dpnp)": [[46, "dpnp.ascontiguousarray", false]], "asfarray() (in module dpnp)": [[47, "dpnp.asfarray", false]], "asfortranarray() (in module dpnp)": [[48, "dpnp.asfortranarray", false]], "asin() (in module dpnp)": [[49, "dpnp.asin", false]], "asinh() (in module dpnp)": [[50, "dpnp.asinh", false]], "asnumpy() (dpnp.dpnp_array.dpnp_array method)": [[119, "dpnp.dpnp_array.dpnp_array.asnumpy", false]], "asnumpy() (dpnp.ndarray method)": [[432, "dpnp.ndarray.asnumpy", false]], "asnumpy() (in module dpnp)": [[51, "dpnp.asnumpy", false]], "astype() (dpnp.dpnp_array.dpnp_array method)": [[120, "dpnp.dpnp_array.dpnp_array.astype", false]], "astype() (dpnp.ndarray method)": [[433, "dpnp.ndarray.astype", false]], "astype() (in module dpnp)": [[52, "dpnp.astype", false]], "atan() (in module dpnp)": [[53, "dpnp.atan", false]], "atan2() (in module dpnp)": [[54, "dpnp.atan2", false]], "atanh() (in module dpnp)": [[55, "dpnp.atanh", false]], "atleast_1d() (in module dpnp)": [[56, "dpnp.atleast_1d", false]], "atleast_2d() (in module dpnp)": [[57, "dpnp.atleast_2d", false]], "atleast_3d() (in module dpnp)": [[58, "dpnp.atleast_3d", false]], "average() (in module dpnp)": [[59, "dpnp.average", false]], "base (dpnp.dtype attribute)": [[178, "dpnp.dtype.base", false]], "beta() (in module dpnp.random)": [[523, "dpnp.random.beta", false]], "binary_repr() (in module dpnp)": [[60, "dpnp.binary_repr", false]], "bincount() (in module dpnp)": [[61, "dpnp.bincount", false]], "binomial() (in module dpnp.random)": [[524, "dpnp.random.binomial", false]], "bitwise_and() (in module dpnp)": [[62, "dpnp.bitwise_and", false]], "bitwise_invert() (in module dpnp)": [[63, "dpnp.bitwise_invert", false]], "bitwise_left_shift() (in module dpnp)": [[64, "dpnp.bitwise_left_shift", false]], "bitwise_not() (in module dpnp)": [[65, "dpnp.bitwise_not", false]], "bitwise_or() (in module dpnp)": [[66, "dpnp.bitwise_or", false]], "bitwise_right_shift() (in module dpnp)": [[67, "dpnp.bitwise_right_shift", false]], "bitwise_xor() (in module dpnp)": [[68, "dpnp.bitwise_xor", false]], "broadcast_arrays() (in module dpnp)": [[69, "dpnp.broadcast_arrays", false]], "broadcast_shapes() (in module dpnp)": [[70, "dpnp.broadcast_shapes", false]], "broadcast_to() (in module dpnp)": [[71, "dpnp.broadcast_to", false]], "byte_bounds() (in module dpnp)": [[72, "dpnp.byte_bounds", false]], "byteorder (dpnp.dtype attribute)": [[179, "dpnp.dtype.byteorder", false]], "bytes() (in module dpnp.random)": [[525, "dpnp.random.bytes", false]], "can_cast() (in module dpnp)": [[73, "dpnp.can_cast", false]], "cbrt() (in module dpnp)": [[74, "dpnp.cbrt", false]], "ceil() (in module dpnp)": [[75, "dpnp.ceil", false]], "char (dpnp.dtype attribute)": [[180, "dpnp.dtype.char", false]], "chisquare() (in module dpnp.random)": [[526, "dpnp.random.chisquare", false]], "choice() (in module dpnp.random)": [[527, "dpnp.random.choice", false]], "cholesky() (in module dpnp.linalg)": [[294, "dpnp.linalg.cholesky", false]], "choose() (dpnp.dpnp_array.dpnp_array method)": [[121, "dpnp.dpnp_array.dpnp_array.choose", false]], "choose() (dpnp.ndarray method)": [[434, "dpnp.ndarray.choose", false]], "choose() (in module dpnp)": [[76, "dpnp.choose", false]], "clip() (dpnp.dpnp_array.dpnp_array method)": [[122, "dpnp.dpnp_array.dpnp_array.clip", false]], "clip() (dpnp.ndarray method)": [[435, "dpnp.ndarray.clip", false]], "clip() (in module dpnp)": [[77, "dpnp.clip", false]], "column_stack() (in module dpnp)": [[78, "dpnp.column_stack", false]], "compress() (dpnp.dpnp_array.dpnp_array method)": [[123, "dpnp.dpnp_array.dpnp_array.compress", false]], "compress() (dpnp.ndarray method)": [[436, "dpnp.ndarray.compress", false]], "compress() (in module dpnp)": [[79, "dpnp.compress", false]], "concat() (in module dpnp)": [[80, "dpnp.concat", false]], "concatenate() (in module dpnp)": [[81, "dpnp.concatenate", false]], "cond() (in module dpnp.linalg)": [[295, "dpnp.linalg.cond", false]], "conj() (dpnp.dpnp_array.dpnp_array method)": [[124, "dpnp.dpnp_array.dpnp_array.conj", false]], "conj() (dpnp.ndarray method)": [[437, "dpnp.ndarray.conj", false]], "conj() (in module dpnp)": [[82, "dpnp.conj", false]], "conjugate() (dpnp.dpnp_array.dpnp_array method)": [[125, "dpnp.dpnp_array.dpnp_array.conjugate", false]], "conjugate() (dpnp.ndarray method)": [[438, "dpnp.ndarray.conjugate", false]], "conjugate() (in module dpnp)": [[83, "dpnp.conjugate", false]], "convolve() (in module dpnp)": [[84, "dpnp.convolve", false]], "copy() (dpnp.dpnp_array.dpnp_array method)": [[126, "dpnp.dpnp_array.dpnp_array.copy", false]], "copy() (dpnp.ndarray method)": [[439, "dpnp.ndarray.copy", false]], "copy() (in module dpnp)": [[85, "dpnp.copy", false]], "copysign() (in module dpnp)": [[86, "dpnp.copysign", false]], "copyto() (in module dpnp)": [[87, "dpnp.copyto", false]], "corrcoef() (in module dpnp)": [[88, "dpnp.corrcoef", false]], "correlate() (in module dpnp)": [[89, "dpnp.correlate", false]], "cos() (in module dpnp)": [[90, "dpnp.cos", false]], "cosh() (in module dpnp)": [[91, "dpnp.cosh", false]], "count_nonzero() (in module dpnp)": [[92, "dpnp.count_nonzero", false]], "cov() (in module dpnp)": [[93, "dpnp.cov", false]], "cross() (in module dpnp)": [[94, "dpnp.cross", false]], "cross() (in module dpnp.linalg)": [[296, "dpnp.linalg.cross", false]], "cumlogsumexp() (in module dpnp)": [[95, "dpnp.cumlogsumexp", false]], "cumprod() (dpnp.dpnp_array.dpnp_array method)": [[127, "dpnp.dpnp_array.dpnp_array.cumprod", false]], "cumprod() (dpnp.ndarray method)": [[440, "dpnp.ndarray.cumprod", false]], "cumprod() (in module dpnp)": [[96, "dpnp.cumprod", false]], "cumsum() (dpnp.dpnp_array.dpnp_array method)": [[128, "dpnp.dpnp_array.dpnp_array.cumsum", false]], "cumsum() (dpnp.ndarray method)": [[441, "dpnp.ndarray.cumsum", false]], "cumsum() (in module dpnp)": [[97, "dpnp.cumsum", false]], "cumulative_prod() (in module dpnp)": [[98, "dpnp.cumulative_prod", false]], "cumulative_sum() (in module dpnp)": [[99, "dpnp.cumulative_sum", false]], "deg2rad() (in module dpnp)": [[100, "dpnp.deg2rad", false]], "degrees() (in module dpnp)": [[101, "dpnp.degrees", false]], "delete() (in module dpnp)": [[102, "dpnp.delete", false]], "descr (dpnp.dtype attribute)": [[181, "dpnp.dtype.descr", false]], "det() (in module dpnp.linalg)": [[297, "dpnp.linalg.det", false]], "device (dpnp.dpnp_array.dpnp_array property)": [[129, "dpnp.dpnp_array.dpnp_array.device", false]], "device (dpnp.ndarray property)": [[442, "dpnp.ndarray.device", false]], "diag() (in module dpnp)": [[103, "dpnp.diag", false]], "diag_indices() (in module dpnp)": [[104, "dpnp.diag_indices", false]], "diag_indices_from() (in module dpnp)": [[105, "dpnp.diag_indices_from", false]], "diagflat() (in module dpnp)": [[106, "dpnp.diagflat", false]], "diagonal() (dpnp.dpnp_array.dpnp_array method)": [[130, "dpnp.dpnp_array.dpnp_array.diagonal", false]], "diagonal() (dpnp.ndarray method)": [[443, "dpnp.ndarray.diagonal", false]], "diagonal() (in module dpnp)": [[107, "dpnp.diagonal", false]], "diagonal() (in module dpnp.linalg)": [[298, "dpnp.linalg.diagonal", false]], "diff() (in module dpnp)": [[108, "dpnp.diff", false]], "digitize() (in module dpnp)": [[109, "dpnp.digitize", false]], "dirichlet() (in module dpnp.random)": [[528, "dpnp.random.dirichlet", false]], "divide() (in module dpnp)": [[110, "dpnp.divide", false]], "dot() (dpnp.dpnp_array.dpnp_array method)": [[131, "dpnp.dpnp_array.dpnp_array.dot", false]], "dot() (dpnp.ndarray method)": [[444, "dpnp.ndarray.dot", false]], "dot() (in module dpnp)": [[111, "dpnp.dot", false]], "dpnp": [[3, "module-dpnp", false]], "dpnp_array (class in dpnp.dpnp_array)": [[112, "dpnp.dpnp_array.dpnp_array", false]], "dsplit() (in module dpnp)": [[174, "dpnp.dsplit", false]], "dstack() (in module dpnp)": [[175, "dpnp.dstack", false]], "dtype (class in dpnp)": [[176, "dpnp.dtype", false]], "dtype (dpnp.dpnp_array.dpnp_array property)": [[132, "dpnp.dpnp_array.dpnp_array.dtype", false]], "dtype (dpnp.ndarray property)": [[445, "dpnp.ndarray.dtype", false]], "ediff1d() (in module dpnp)": [[200, "dpnp.ediff1d", false]], "eig() (in module dpnp.linalg)": [[299, "dpnp.linalg.eig", false]], "eigh() (in module dpnp.linalg)": [[300, "dpnp.linalg.eigh", false]], "eigvals() (in module dpnp.linalg)": [[301, "dpnp.linalg.eigvals", false]], "eigvalsh() (in module dpnp.linalg)": [[302, "dpnp.linalg.eigvalsh", false]], "einsum() (in module dpnp)": [[201, "dpnp.einsum", false]], "einsum_path() (in module dpnp)": [[202, "dpnp.einsum_path", false]], "empty() (in module dpnp)": [[203, "dpnp.empty", false]], "empty_like() (in module dpnp)": [[204, "dpnp.empty_like", false]], "equal() (in module dpnp)": [[205, "dpnp.equal", false]], "erf() (in module dpnp)": [[206, "dpnp.erf", false]], "exp() (in module dpnp)": [[207, "dpnp.exp", false]], "exp2() (in module dpnp)": [[208, "dpnp.exp2", false]], "expand_dims() (in module dpnp)": [[209, "dpnp.expand_dims", false]], "expm1() (in module dpnp)": [[210, "dpnp.expm1", false]], "exponential() (in module dpnp.random)": [[529, "dpnp.random.exponential", false]], "extract() (in module dpnp)": [[211, "dpnp.extract", false]], "eye() (in module dpnp)": [[212, "dpnp.eye", false]], "f() (in module dpnp.random)": [[530, "dpnp.random.f", false]], "fabs() (in module dpnp)": [[213, "dpnp.fabs", false]], "fft() (in module dpnp.fft)": [[214, "dpnp.fft.fft", false]], "fft2() (in module dpnp.fft)": [[215, "dpnp.fft.fft2", false]], "fftfreq() (in module dpnp.fft)": [[216, "dpnp.fft.fftfreq", false]], "fftn() (in module dpnp.fft)": [[217, "dpnp.fft.fftn", false]], "fftshift() (in module dpnp.fft)": [[218, "dpnp.fft.fftshift", false]], "fields (dpnp.dtype attribute)": [[182, "dpnp.dtype.fields", false]], "fill() (dpnp.dpnp_array.dpnp_array method)": [[133, "dpnp.dpnp_array.dpnp_array.fill", false]], "fill() (dpnp.ndarray method)": [[446, "dpnp.ndarray.fill", false]], "fill_diagonal() (in module dpnp)": [[232, "dpnp.fill_diagonal", false]], "finfo() (in module dpnp)": [[233, "dpnp.finfo", false]], "fix() (in module dpnp)": [[234, "dpnp.fix", false]], "flags (dpnp.dpnp_array.dpnp_array property)": [[134, "dpnp.dpnp_array.dpnp_array.flags", false]], "flags (dpnp.dtype attribute)": [[183, "dpnp.dtype.flags", false]], "flags (dpnp.ndarray property)": [[447, "dpnp.ndarray.flags", false]], "flat (dpnp.dpnp_array.dpnp_array property)": [[135, "dpnp.dpnp_array.dpnp_array.flat", false]], "flat (dpnp.ndarray property)": [[448, "dpnp.ndarray.flat", false]], "flatiter (class in dpnp)": [[235, "dpnp.flatiter", false]], "flatnonzero() (in module dpnp)": [[236, "dpnp.flatnonzero", false]], "flatten() (dpnp.dpnp_array.dpnp_array method)": [[136, "dpnp.dpnp_array.dpnp_array.flatten", false]], "flatten() (dpnp.ndarray method)": [[449, "dpnp.ndarray.flatten", false]], "flip() (in module dpnp)": [[237, "dpnp.flip", false]], "fliplr() (in module dpnp)": [[238, "dpnp.fliplr", false]], "flipud() (in module dpnp)": [[239, "dpnp.flipud", false]], "float_power() (in module dpnp)": [[240, "dpnp.float_power", false]], "floor() (in module dpnp)": [[241, "dpnp.floor", false]], "floor_divide() (in module dpnp)": [[242, "dpnp.floor_divide", false]], "fmax() (in module dpnp)": [[243, "dpnp.fmax", false]], "fmin() (in module dpnp)": [[244, "dpnp.fmin", false]], "fmod() (in module dpnp)": [[245, "dpnp.fmod", false]], "from_dlpack() (in module dpnp)": [[246, "dpnp.from_dlpack", false]], "frombuffer() (in module dpnp)": [[247, "dpnp.frombuffer", false]], "fromfile() (in module dpnp)": [[248, "dpnp.fromfile", false]], "fromfunction() (in module dpnp)": [[249, "dpnp.fromfunction", false]], "fromiter() (in module dpnp)": [[250, "dpnp.fromiter", false]], "fromstring() (in module dpnp)": [[251, "dpnp.fromstring", false]], "full() (in module dpnp)": [[252, "dpnp.full", false]], "full_like() (in module dpnp)": [[253, "dpnp.full_like", false]], "gamma() (in module dpnp.random)": [[531, "dpnp.random.gamma", false]], "gcd() (in module dpnp)": [[254, "dpnp.gcd", false]], "geometric() (in module dpnp.random)": [[532, "dpnp.random.geometric", false]], "geomspace() (in module dpnp)": [[255, "dpnp.geomspace", false]], "get_array() (dpnp.dpnp_array.dpnp_array method)": [[137, "dpnp.dpnp_array.dpnp_array.get_array", false]], "get_array() (dpnp.ndarray method)": [[450, "dpnp.ndarray.get_array", false]], "get_include() (in module dpnp)": [[256, "dpnp.get_include", false]], "get_state() (dpnp.random.randomstate method)": [[513, "dpnp.random.RandomState.get_state", false]], "get_sycl_device() (dpnp.random.randomstate method)": [[514, "dpnp.random.RandomState.get_sycl_device", false]], "get_sycl_queue() (dpnp.random.randomstate method)": [[515, "dpnp.random.RandomState.get_sycl_queue", false]], "gradient() (in module dpnp)": [[257, "dpnp.gradient", false]], "greater() (in module dpnp)": [[258, "dpnp.greater", false]], "greater_equal() (in module dpnp)": [[259, "dpnp.greater_equal", false]], "gumbel() (in module dpnp.random)": [[533, "dpnp.random.gumbel", false]], "hasobject (dpnp.dtype attribute)": [[184, "dpnp.dtype.hasobject", false]], "heaviside() (in module dpnp)": [[260, "dpnp.heaviside", false]], "hfft() (in module dpnp.fft)": [[219, "dpnp.fft.hfft", false]], "histogram() (in module dpnp)": [[261, "dpnp.histogram", false]], "histogram_bin_edges() (in module dpnp)": [[262, "dpnp.histogram_bin_edges", false]], "hsplit() (in module dpnp)": [[263, "dpnp.hsplit", false]], "hstack() (in module dpnp)": [[264, "dpnp.hstack", false]], "hypergeometric() (in module dpnp.random)": [[534, "dpnp.random.hypergeometric", false]], "hypot() (in module dpnp)": [[265, "dpnp.hypot", false]], "i0() (in module dpnp)": [[266, "dpnp.i0", false]], "identity() (in module dpnp)": [[267, "dpnp.identity", false]], "ifft() (in module dpnp.fft)": [[220, "dpnp.fft.ifft", false]], "ifft2() (in module dpnp.fft)": [[221, "dpnp.fft.ifft2", false]], "ifftn() (in module dpnp.fft)": [[222, "dpnp.fft.ifftn", false]], "ifftshift() (in module dpnp.fft)": [[223, "dpnp.fft.ifftshift", false]], "ihfft() (in module dpnp.fft)": [[224, "dpnp.fft.ihfft", false]], "iinfo() (in module dpnp)": [[268, "dpnp.iinfo", false]], "imag (dpnp.dpnp_array.dpnp_array property)": [[138, "dpnp.dpnp_array.dpnp_array.imag", false]], "imag (dpnp.ndarray property)": [[451, "dpnp.ndarray.imag", false]], "imag() (in module dpnp)": [[269, "dpnp.imag", false]], "indices() (in module dpnp)": [[270, "dpnp.indices", false]], "inner() (in module dpnp)": [[271, "dpnp.inner", false]], "insert() (in module dpnp)": [[272, "dpnp.insert", false]], "inv() (in module dpnp.linalg)": [[303, "dpnp.linalg.inv", false]], "invert() (in module dpnp)": [[273, "dpnp.invert", false]], "irfft() (in module dpnp.fft)": [[225, "dpnp.fft.irfft", false]], "irfft2() (in module dpnp.fft)": [[226, "dpnp.fft.irfft2", false]], "irfftn() (in module dpnp.fft)": [[227, "dpnp.fft.irfftn", false]], "isalignedstruct (dpnp.dtype attribute)": [[185, "dpnp.dtype.isalignedstruct", false]], "isbuiltin (dpnp.dtype attribute)": [[186, "dpnp.dtype.isbuiltin", false]], "isclose() (in module dpnp)": [[274, "dpnp.isclose", false]], "iscomplex() (in module dpnp)": [[275, "dpnp.iscomplex", false]], "iscomplexobj() (in module dpnp)": [[276, "dpnp.iscomplexobj", false]], "isfinite() (in module dpnp)": [[277, "dpnp.isfinite", false]], "isfortran() (in module dpnp)": [[278, "dpnp.isfortran", false]], "isinf() (in module dpnp)": [[279, "dpnp.isinf", false]], "isnan() (in module dpnp)": [[280, "dpnp.isnan", false]], "isnative (dpnp.dtype attribute)": [[187, "dpnp.dtype.isnative", false]], "isneginf() (in module dpnp)": [[281, "dpnp.isneginf", false]], "isposinf() (in module dpnp)": [[282, "dpnp.isposinf", false]], "isreal() (in module dpnp)": [[283, "dpnp.isreal", false]], "isrealobj() (in module dpnp)": [[284, "dpnp.isrealobj", false]], "isscalar() (in module dpnp)": [[285, "dpnp.isscalar", false]], "issubdtype() (in module dpnp)": [[286, "dpnp.issubdtype", false]], "item() (dpnp.dpnp_array.dpnp_array method)": [[139, "dpnp.dpnp_array.dpnp_array.item", false]], "item() (dpnp.ndarray method)": [[452, "dpnp.ndarray.item", false]], "itemsize (dpnp.dpnp_array.dpnp_array property)": [[140, "dpnp.dpnp_array.dpnp_array.itemsize", false]], "itemsize (dpnp.dtype attribute)": [[188, "dpnp.dtype.itemsize", false]], "itemsize (dpnp.ndarray property)": [[453, "dpnp.ndarray.itemsize", false]], "ix_() (in module dpnp)": [[287, "dpnp.ix_", false]], "kind (dpnp.dtype attribute)": [[189, "dpnp.dtype.kind", false]], "kron() (in module dpnp)": [[288, "dpnp.kron", false]], "laplace() (in module dpnp.random)": [[535, "dpnp.random.laplace", false]], "lcm() (in module dpnp)": [[289, "dpnp.lcm", false]], "ldexp() (in module dpnp)": [[290, "dpnp.ldexp", false]], "left_shift() (in module dpnp)": [[291, "dpnp.left_shift", false]], "less() (in module dpnp)": [[292, "dpnp.less", false]], "less_equal() (in module dpnp)": [[293, "dpnp.less_equal", false]], "linspace() (in module dpnp)": [[324, "dpnp.linspace", false]], "loadtxt() (in module dpnp)": [[325, "dpnp.loadtxt", false]], "log() (in module dpnp)": [[326, "dpnp.log", false]], "log10() (in module dpnp)": [[327, "dpnp.log10", false]], "log1p() (in module dpnp)": [[328, "dpnp.log1p", false]], "log2() (in module dpnp)": [[329, "dpnp.log2", false]], "logaddexp() (in module dpnp)": [[330, "dpnp.logaddexp", false]], "logaddexp2() (in module dpnp)": [[331, "dpnp.logaddexp2", false]], "logical_and() (in module dpnp)": [[332, "dpnp.logical_and", false]], "logical_not() (in module dpnp)": [[333, "dpnp.logical_not", false]], "logical_or() (in module dpnp)": [[334, "dpnp.logical_or", false]], "logical_xor() (in module dpnp)": [[335, "dpnp.logical_xor", false]], "logistic() (in module dpnp.random)": [[536, "dpnp.random.logistic", false]], "lognormal() (in module dpnp.random)": [[537, "dpnp.random.lognormal", false]], "logseries() (in module dpnp.random)": [[538, "dpnp.random.logseries", false]], "logspace() (in module dpnp)": [[336, "dpnp.logspace", false]], "logsumexp() (in module dpnp)": [[337, "dpnp.logsumexp", false]], "lstsq() (in module dpnp.linalg)": [[304, "dpnp.linalg.lstsq", false]], "mask_indices() (in module dpnp)": [[338, "dpnp.mask_indices", false]], "matmul() (in module dpnp)": [[339, "dpnp.matmul", false]], "matmul() (in module dpnp.linalg)": [[305, "dpnp.linalg.matmul", false]], "matrix_norm() (in module dpnp.linalg)": [[306, "dpnp.linalg.matrix_norm", false]], "matrix_power() (in module dpnp.linalg)": [[307, "dpnp.linalg.matrix_power", false]], "matrix_rank() (in module dpnp.linalg)": [[308, "dpnp.linalg.matrix_rank", false]], "matrix_transpose() (in module dpnp)": [[340, "dpnp.matrix_transpose", false]], "max() (dpnp.dpnp_array.dpnp_array method)": [[142, "dpnp.dpnp_array.dpnp_array.max", false]], "max() (dpnp.ndarray method)": [[455, "dpnp.ndarray.max", false]], "max() (in module dpnp)": [[341, "dpnp.max", false]], "maximum() (in module dpnp)": [[342, "dpnp.maximum", false]], "mean() (dpnp.dpnp_array.dpnp_array method)": [[143, "dpnp.dpnp_array.dpnp_array.mean", false]], "mean() (dpnp.ndarray method)": [[456, "dpnp.ndarray.mean", false]], "mean() (in module dpnp)": [[343, "dpnp.mean", false]], "median() (in module dpnp)": [[344, "dpnp.median", false]], "meshgrid() (in module dpnp)": [[345, "dpnp.meshgrid", false]], "metadata (dpnp.dtype attribute)": [[190, "dpnp.dtype.metadata", false]], "mgrid (in module dpnp)": [[346, "dpnp.mgrid", false]], "min() (dpnp.dpnp_array.dpnp_array method)": [[144, "dpnp.dpnp_array.dpnp_array.min", false]], "min() (dpnp.ndarray method)": [[457, "dpnp.ndarray.min", false]], "min() (in module dpnp)": [[347, "dpnp.min", false]], "minimum() (in module dpnp)": [[348, "dpnp.minimum", false]], "mod() (in module dpnp)": [[349, "dpnp.mod", false]], "modf() (in module dpnp)": [[350, "dpnp.modf", false]], "module": [[3, "module-dpnp", false]], "moveaxis() (in module dpnp)": [[351, "dpnp.moveaxis", false]], "mt (dpnp.dpnp_array.dpnp_array property)": [[141, "dpnp.dpnp_array.dpnp_array.mT", false]], "mt (dpnp.ndarray property)": [[454, "dpnp.ndarray.mT", false]], "multi_dot() (in module dpnp.linalg)": [[309, "dpnp.linalg.multi_dot", false]], "multinomial() (in module dpnp.random)": [[539, "dpnp.random.multinomial", false]], "multiply() (in module dpnp)": [[352, "dpnp.multiply", false]], "multivariate_normal() (in module dpnp.random)": [[540, "dpnp.random.multivariate_normal", false]], "name (dpnp.dtype attribute)": [[191, "dpnp.dtype.name", false]], "names (dpnp.dtype attribute)": [[192, "dpnp.dtype.names", false]], "nan_to_num() (in module dpnp)": [[353, "dpnp.nan_to_num", false]], "nanargmax() (in module dpnp)": [[354, "dpnp.nanargmax", false]], "nanargmin() (in module dpnp)": [[355, "dpnp.nanargmin", false]], "nancumprod() (in module dpnp)": [[356, "dpnp.nancumprod", false]], "nancumsum() (in module dpnp)": [[357, "dpnp.nancumsum", false]], "nanmax() (in module dpnp)": [[358, "dpnp.nanmax", false]], "nanmean() (in module dpnp)": [[359, "dpnp.nanmean", false]], "nanmin() (in module dpnp)": [[360, "dpnp.nanmin", false]], "nanprod() (in module dpnp)": [[361, "dpnp.nanprod", false]], "nanstd() (in module dpnp)": [[362, "dpnp.nanstd", false]], "nansum() (in module dpnp)": [[363, "dpnp.nansum", false]], "nanvar() (in module dpnp)": [[364, "dpnp.nanvar", false]], "nbytes (dpnp.dpnp_array.dpnp_array property)": [[145, "dpnp.dpnp_array.dpnp_array.nbytes", false]], "nbytes (dpnp.ndarray property)": [[458, "dpnp.ndarray.nbytes", false]], "ndarray (in module dpnp)": [[365, "dpnp.ndarray", false]], "ndim (dpnp.dpnp_array.dpnp_array property)": [[146, "dpnp.dpnp_array.dpnp_array.ndim", false]], "ndim (dpnp.dtype attribute)": [[193, "dpnp.dtype.ndim", false]], "ndim (dpnp.ndarray property)": [[459, "dpnp.ndarray.ndim", false]], "ndim() (in module dpnp)": [[487, "dpnp.ndim", false]], "ndindex (class in dpnp)": [[488, "dpnp.ndindex", false]], "negative() (in module dpnp)": [[489, "dpnp.negative", false]], "negative_binomial() (in module dpnp.random)": [[541, "dpnp.random.negative_binomial", false]], "newbyteorder() (dpnp.dtype method)": [[194, "dpnp.dtype.newbyteorder", false]], "nextafter() (in module dpnp)": [[490, "dpnp.nextafter", false]], "noncentral_chisquare() (in module dpnp.random)": [[542, "dpnp.random.noncentral_chisquare", false]], "noncentral_f() (in module dpnp.random)": [[543, "dpnp.random.noncentral_f", false]], "nonzero() (dpnp.dpnp_array.dpnp_array method)": [[147, "dpnp.dpnp_array.dpnp_array.nonzero", false]], "nonzero() (dpnp.ndarray method)": [[460, "dpnp.ndarray.nonzero", false]], "nonzero() (in module dpnp)": [[491, "dpnp.nonzero", false]], "norm() (in module dpnp.linalg)": [[310, "dpnp.linalg.norm", false]], "normal() (dpnp.random.randomstate method)": [[516, "dpnp.random.RandomState.normal", false]], "normal() (in module dpnp.random)": [[544, "dpnp.random.normal", false]], "not_equal() (in module dpnp)": [[492, "dpnp.not_equal", false]], "num (dpnp.dtype attribute)": [[195, "dpnp.dtype.num", false]], "ogrid (in module dpnp)": [[493, "dpnp.ogrid", false]], "ones() (in module dpnp)": [[494, "dpnp.ones", false]], "ones_like() (in module dpnp)": [[495, "dpnp.ones_like", false]], "outer() (in module dpnp)": [[496, "dpnp.outer", false]], "outer() (in module dpnp.linalg)": [[311, "dpnp.linalg.outer", false]], "pad() (in module dpnp)": [[497, "dpnp.pad", false]], "pareto() (in module dpnp.random)": [[545, "dpnp.random.pareto", false]], "partition() (dpnp.dpnp_array.dpnp_array method)": [[148, "dpnp.dpnp_array.dpnp_array.partition", false]], "partition() (dpnp.ndarray method)": [[461, "dpnp.ndarray.partition", false]], "partition() (in module dpnp)": [[498, "dpnp.partition", false]], "permutation() (in module dpnp.random)": [[546, "dpnp.random.permutation", false]], "permute_dims() (in module dpnp)": [[499, "dpnp.permute_dims", false]], "pinv() (in module dpnp.linalg)": [[312, "dpnp.linalg.pinv", false]], "place() (in module dpnp)": [[500, "dpnp.place", false]], "poisson() (in module dpnp.random)": [[547, "dpnp.random.poisson", false]], "positive() (in module dpnp)": [[501, "dpnp.positive", false]], "pow() (in module dpnp)": [[502, "dpnp.pow", false]], "power() (in module dpnp)": [[503, "dpnp.power", false]], "power() (in module dpnp.random)": [[548, "dpnp.random.power", false]], "prod() (dpnp.dpnp_array.dpnp_array method)": [[149, "dpnp.dpnp_array.dpnp_array.prod", false]], "prod() (dpnp.ndarray method)": [[462, "dpnp.ndarray.prod", false]], "prod() (in module dpnp)": [[504, "dpnp.prod", false]], "proj() (in module dpnp)": [[505, "dpnp.proj", false]], "ptp() (in module dpnp)": [[506, "dpnp.ptp", false]], "put() (dpnp.dpnp_array.dpnp_array method)": [[150, "dpnp.dpnp_array.dpnp_array.put", false]], "put() (dpnp.ndarray method)": [[463, "dpnp.ndarray.put", false]], "put() (in module dpnp)": [[507, "dpnp.put", false]], "put_along_axis() (in module dpnp)": [[508, "dpnp.put_along_axis", false]], "putmask() (in module dpnp)": [[509, "dpnp.putmask", false]], "qr() (in module dpnp.linalg)": [[313, "dpnp.linalg.qr", false]], "rad2deg() (in module dpnp)": [[510, "dpnp.rad2deg", false]], "radians() (in module dpnp)": [[511, "dpnp.radians", false]], "rand() (dpnp.random.randomstate method)": [[517, "dpnp.random.RandomState.rand", false]], "rand() (in module dpnp.random)": [[549, "dpnp.random.rand", false]], "randint() (dpnp.random.randomstate method)": [[518, "dpnp.random.RandomState.randint", false]], "randint() (in module dpnp.random)": [[550, "dpnp.random.randint", false]], "randn() (dpnp.random.randomstate method)": [[519, "dpnp.random.RandomState.randn", false]], "randn() (in module dpnp.random)": [[551, "dpnp.random.randn", false]], "random() (in module dpnp.random)": [[552, "dpnp.random.random", false]], "random_integers() (in module dpnp.random)": [[553, "dpnp.random.random_integers", false]], "random_sample() (dpnp.random.randomstate method)": [[520, "dpnp.random.RandomState.random_sample", false]], "random_sample() (in module dpnp.random)": [[554, "dpnp.random.random_sample", false]], "randomstate (class in dpnp.random)": [[512, "dpnp.random.RandomState", false]], "ranf() (in module dpnp.random)": [[555, "dpnp.random.ranf", false]], "ravel() (dpnp.dpnp_array.dpnp_array method)": [[151, "dpnp.dpnp_array.dpnp_array.ravel", false]], "ravel() (dpnp.ndarray method)": [[464, "dpnp.ndarray.ravel", false]], "ravel() (in module dpnp)": [[571, "dpnp.ravel", false]], "ravel_multi_index() (in module dpnp)": [[572, "dpnp.ravel_multi_index", false]], "rayleigh() (in module dpnp.random)": [[556, "dpnp.random.rayleigh", false]], "real (dpnp.dpnp_array.dpnp_array property)": [[152, "dpnp.dpnp_array.dpnp_array.real", false]], "real (dpnp.ndarray property)": [[465, "dpnp.ndarray.real", false]], "real() (in module dpnp)": [[573, "dpnp.real", false]], "real_if_close() (in module dpnp)": [[574, "dpnp.real_if_close", false]], "reciprocal() (in module dpnp)": [[575, "dpnp.reciprocal", false]], "reduce_hypot() (in module dpnp)": [[576, "dpnp.reduce_hypot", false]], "remainder() (in module dpnp)": [[577, "dpnp.remainder", false]], "repeat() (dpnp.dpnp_array.dpnp_array method)": [[153, "dpnp.dpnp_array.dpnp_array.repeat", false]], "repeat() (dpnp.ndarray method)": [[466, "dpnp.ndarray.repeat", false]], "repeat() (in module dpnp)": [[578, "dpnp.repeat", false]], "require() (in module dpnp)": [[579, "dpnp.require", false]], "reshape() (dpnp.dpnp_array.dpnp_array method)": [[154, "dpnp.dpnp_array.dpnp_array.reshape", false]], "reshape() (dpnp.ndarray method)": [[467, "dpnp.ndarray.reshape", false]], "reshape() (in module dpnp)": [[580, "dpnp.reshape", false]], "resize() (in module dpnp)": [[581, "dpnp.resize", false]], "result_type() (in module dpnp)": [[582, "dpnp.result_type", false]], "rfft() (in module dpnp.fft)": [[228, "dpnp.fft.rfft", false]], "rfft2() (in module dpnp.fft)": [[229, "dpnp.fft.rfft2", false]], "rfftfreq() (in module dpnp.fft)": [[230, "dpnp.fft.rfftfreq", false]], "rfftn() (in module dpnp.fft)": [[231, "dpnp.fft.rfftn", false]], "right_shift() (in module dpnp)": [[583, "dpnp.right_shift", false]], "rint() (in module dpnp)": [[584, "dpnp.rint", false]], "roll() (in module dpnp)": [[585, "dpnp.roll", false]], "rollaxis() (in module dpnp)": [[586, "dpnp.rollaxis", false]], "rot90() (in module dpnp)": [[587, "dpnp.rot90", false]], "round() (dpnp.dpnp_array.dpnp_array method)": [[155, "dpnp.dpnp_array.dpnp_array.round", false]], "round() (dpnp.ndarray method)": [[468, "dpnp.ndarray.round", false]], "round() (in module dpnp)": [[588, "dpnp.round", false]], "row_stack() (in module dpnp)": [[589, "dpnp.row_stack", false]], "rsqrt() (in module dpnp)": [[590, "dpnp.rsqrt", false]], "sample() (in module dpnp.random)": [[557, "dpnp.random.sample", false]], "searchsorted() (dpnp.dpnp_array.dpnp_array method)": [[156, "dpnp.dpnp_array.dpnp_array.searchsorted", false]], "searchsorted() (dpnp.ndarray method)": [[469, "dpnp.ndarray.searchsorted", false]], "searchsorted() (in module dpnp)": [[591, "dpnp.searchsorted", false]], "seed() (in module dpnp.random)": [[558, "dpnp.random.seed", false]], "select() (in module dpnp)": [[592, "dpnp.select", false]], "shape (dpnp.dpnp_array.dpnp_array property)": [[157, "dpnp.dpnp_array.dpnp_array.shape", false]], "shape (dpnp.dtype attribute)": [[196, "dpnp.dtype.shape", false]], "shape (dpnp.ndarray property)": [[470, "dpnp.ndarray.shape", false]], "shape() (in module dpnp)": [[593, "dpnp.shape", false]], "shuffle() (in module dpnp.random)": [[559, "dpnp.random.shuffle", false]], "sign() (in module dpnp)": [[594, "dpnp.sign", false]], "signbit() (in module dpnp)": [[595, "dpnp.signbit", false]], "sin() (in module dpnp)": [[596, "dpnp.sin", false]], "sinc() (in module dpnp)": [[597, "dpnp.sinc", false]], "sinh() (in module dpnp)": [[598, "dpnp.sinh", false]], "size (dpnp.dpnp_array.dpnp_array property)": [[158, "dpnp.dpnp_array.dpnp_array.size", false]], "size (dpnp.ndarray property)": [[471, "dpnp.ndarray.size", false]], "size() (in module dpnp)": [[599, "dpnp.size", false]], "slogdet() (in module dpnp.linalg)": [[314, "dpnp.linalg.slogdet", false]], "solve() (in module dpnp.linalg)": [[315, "dpnp.linalg.solve", false]], "sort() (dpnp.dpnp_array.dpnp_array method)": [[159, "dpnp.dpnp_array.dpnp_array.sort", false]], "sort() (dpnp.ndarray method)": [[472, "dpnp.ndarray.sort", false]], "sort() (in module dpnp)": [[600, "dpnp.sort", false]], "sort_complex() (in module dpnp)": [[601, "dpnp.sort_complex", false]], "spacing() (in module dpnp)": [[602, "dpnp.spacing", false]], "split() (in module dpnp)": [[603, "dpnp.split", false]], "sqrt() (in module dpnp)": [[604, "dpnp.sqrt", false]], "square() (in module dpnp)": [[605, "dpnp.square", false]], "squeeze() (dpnp.dpnp_array.dpnp_array method)": [[160, "dpnp.dpnp_array.dpnp_array.squeeze", false]], "squeeze() (dpnp.ndarray method)": [[473, "dpnp.ndarray.squeeze", false]], "squeeze() (in module dpnp)": [[606, "dpnp.squeeze", false]], "stack() (in module dpnp)": [[607, "dpnp.stack", false]], "standard_cauchy() (in module dpnp.random)": [[560, "dpnp.random.standard_cauchy", false]], "standard_exponential() (in module dpnp.random)": [[561, "dpnp.random.standard_exponential", false]], "standard_gamma() (in module dpnp.random)": [[562, "dpnp.random.standard_gamma", false]], "standard_normal() (dpnp.random.randomstate method)": [[521, "dpnp.random.RandomState.standard_normal", false]], "standard_normal() (in module dpnp.random)": [[563, "dpnp.random.standard_normal", false]], "standard_t() (in module dpnp.random)": [[564, "dpnp.random.standard_t", false]], "std() (dpnp.dpnp_array.dpnp_array method)": [[161, "dpnp.dpnp_array.dpnp_array.std", false]], "std() (dpnp.ndarray method)": [[474, "dpnp.ndarray.std", false]], "std() (in module dpnp)": [[608, "dpnp.std", false]], "str (dpnp.dtype attribute)": [[197, "dpnp.dtype.str", false]], "strides (dpnp.dpnp_array.dpnp_array property)": [[162, "dpnp.dpnp_array.dpnp_array.strides", false]], "strides (dpnp.ndarray property)": [[475, "dpnp.ndarray.strides", false]], "subdtype (dpnp.dtype attribute)": [[198, "dpnp.dtype.subdtype", false]], "subtract() (in module dpnp)": [[609, "dpnp.subtract", false]], "sum() (dpnp.dpnp_array.dpnp_array method)": [[163, "dpnp.dpnp_array.dpnp_array.sum", false]], "sum() (dpnp.ndarray method)": [[476, "dpnp.ndarray.sum", false]], "sum() (in module dpnp)": [[610, "dpnp.sum", false]], "svd() (in module dpnp.linalg)": [[316, "dpnp.linalg.svd", false]], "svdvals() (in module dpnp.linalg)": [[317, "dpnp.linalg.svdvals", false]], "swapaxes() (dpnp.dpnp_array.dpnp_array method)": [[164, "dpnp.dpnp_array.dpnp_array.swapaxes", false]], "swapaxes() (dpnp.ndarray method)": [[477, "dpnp.ndarray.swapaxes", false]], "swapaxes() (in module dpnp)": [[611, "dpnp.swapaxes", false]], "sycl_context (dpnp.dpnp_array.dpnp_array property)": [[165, "dpnp.dpnp_array.dpnp_array.sycl_context", false]], "sycl_context (dpnp.ndarray property)": [[478, "dpnp.ndarray.sycl_context", false]], "sycl_device (dpnp.dpnp_array.dpnp_array property)": [[166, "dpnp.dpnp_array.dpnp_array.sycl_device", false]], "sycl_device (dpnp.ndarray property)": [[479, "dpnp.ndarray.sycl_device", false]], "sycl_queue (dpnp.dpnp_array.dpnp_array property)": [[167, "dpnp.dpnp_array.dpnp_array.sycl_queue", false]], "sycl_queue (dpnp.ndarray property)": [[480, "dpnp.ndarray.sycl_queue", false]], "t (dpnp.dpnp_array.dpnp_array property)": [[113, "dpnp.dpnp_array.dpnp_array.T", false]], "t (dpnp.ndarray property)": [[366, "dpnp.ndarray.T", false]], "take() (dpnp.dpnp_array.dpnp_array method)": [[168, "dpnp.dpnp_array.dpnp_array.take", false]], "take() (dpnp.ndarray method)": [[481, "dpnp.ndarray.take", false]], "take() (in module dpnp)": [[612, "dpnp.take", false]], "take_along_axis() (in module dpnp)": [[613, "dpnp.take_along_axis", false]], "tan() (in module dpnp)": [[614, "dpnp.tan", false]], "tanh() (in module dpnp)": [[615, "dpnp.tanh", false]], "tensordot() (in module dpnp)": [[616, "dpnp.tensordot", false]], "tensordot() (in module dpnp.linalg)": [[318, "dpnp.linalg.tensordot", false]], "tensorinv() (in module dpnp.linalg)": [[319, "dpnp.linalg.tensorinv", false]], "tensorsolve() (in module dpnp.linalg)": [[320, "dpnp.linalg.tensorsolve", false]], "tile() (in module dpnp)": [[617, "dpnp.tile", false]], "to_device() (dpnp.dpnp_array.dpnp_array method)": [[169, "dpnp.dpnp_array.dpnp_array.to_device", false]], "to_device() (dpnp.ndarray method)": [[482, "dpnp.ndarray.to_device", false]], "trace() (dpnp.dpnp_array.dpnp_array method)": [[170, "dpnp.dpnp_array.dpnp_array.trace", false]], "trace() (dpnp.ndarray method)": [[483, "dpnp.ndarray.trace", false]], "trace() (in module dpnp)": [[618, "dpnp.trace", false]], "trace() (in module dpnp.linalg)": [[321, "dpnp.linalg.trace", false]], "transpose() (dpnp.dpnp_array.dpnp_array method)": [[171, "dpnp.dpnp_array.dpnp_array.transpose", false]], "transpose() (dpnp.ndarray method)": [[484, "dpnp.ndarray.transpose", false]], "transpose() (in module dpnp)": [[619, "dpnp.transpose", false]], "trapezoid() (in module dpnp)": [[620, "dpnp.trapezoid", false]], "tri() (in module dpnp)": [[621, "dpnp.tri", false]], "triangular() (in module dpnp.random)": [[565, "dpnp.random.triangular", false]], "tril() (in module dpnp)": [[622, "dpnp.tril", false]], "tril_indices() (in module dpnp)": [[623, "dpnp.tril_indices", false]], "tril_indices_from() (in module dpnp)": [[624, "dpnp.tril_indices_from", false]], "trim_zeros() (in module dpnp)": [[625, "dpnp.trim_zeros", false]], "triu() (in module dpnp)": [[626, "dpnp.triu", false]], "triu_indices() (in module dpnp)": [[627, "dpnp.triu_indices", false]], "triu_indices_from() (in module dpnp)": [[628, "dpnp.triu_indices_from", false]], "true_divide() (in module dpnp)": [[629, "dpnp.true_divide", false]], "trunc() (in module dpnp)": [[630, "dpnp.trunc", false]], "type (dpnp.dtype attribute)": [[199, "dpnp.dtype.type", false]], "uniform() (dpnp.random.randomstate method)": [[522, "dpnp.random.RandomState.uniform", false]], "uniform() (in module dpnp.random)": [[566, "dpnp.random.uniform", false]], "unique() (in module dpnp)": [[631, "dpnp.unique", false]], "unravel_index() (in module dpnp)": [[632, "dpnp.unravel_index", false]], "unstack() (in module dpnp)": [[633, "dpnp.unstack", false]], "unwrap() (in module dpnp)": [[634, "dpnp.unwrap", false]], "usm_type (dpnp.dpnp_array.dpnp_array property)": [[172, "dpnp.dpnp_array.dpnp_array.usm_type", false]], "usm_type (dpnp.ndarray property)": [[485, "dpnp.ndarray.usm_type", false]], "vander() (in module dpnp)": [[635, "dpnp.vander", false]], "var() (dpnp.dpnp_array.dpnp_array method)": [[173, "dpnp.dpnp_array.dpnp_array.var", false]], "var() (dpnp.ndarray method)": [[486, "dpnp.ndarray.var", false]], "var() (in module dpnp)": [[636, "dpnp.var", false]], "vdot() (in module dpnp)": [[637, "dpnp.vdot", false]], "vecdot() (in module dpnp)": [[638, "dpnp.vecdot", false]], "vecdot() (in module dpnp.linalg)": [[322, "dpnp.linalg.vecdot", false]], "vector_norm() (in module dpnp.linalg)": [[323, "dpnp.linalg.vector_norm", false]], "vonmises() (in module dpnp.random)": [[567, "dpnp.random.vonmises", false]], "vsplit() (in module dpnp)": [[639, "dpnp.vsplit", false]], "vstack() (in module dpnp)": [[640, "dpnp.vstack", false]], "wald() (in module dpnp.random)": [[568, "dpnp.random.wald", false]], "weibull() (in module dpnp.random)": [[569, "dpnp.random.weibull", false]], "where() (in module dpnp)": [[641, "dpnp.where", false]], "zeros() (in module dpnp)": [[642, "dpnp.zeros", false]], "zeros_like() (in module dpnp)": [[643, "dpnp.zeros_like", false]], "zipf() (in module dpnp.random)": [[570, "dpnp.random.zipf", false]]}, "objects": {"": [[3, 0, 0, "-", "dpnp"]], "dpnp": [[12, 1, 1, "", "abs"], [13, 1, 1, "", "absolute"], [14, 1, 1, "", "acos"], [15, 1, 1, "", "acosh"], [16, 1, 1, "", "add"], [17, 1, 1, "", "all"], [18, 1, 1, "", "allclose"], [19, 1, 1, "", "amax"], [20, 1, 1, "", "amin"], [21, 1, 1, "", "angle"], [22, 1, 1, "", "any"], [23, 1, 1, "", "append"], [24, 1, 1, "", "apply_along_axis"], [25, 1, 1, "", "apply_over_axes"], [26, 1, 1, "", "arange"], [27, 1, 1, "", "arccos"], [28, 1, 1, "", "arccosh"], [29, 1, 1, "", "arcsin"], [30, 1, 1, "", "arcsinh"], [31, 1, 1, "", "arctan"], [32, 1, 1, "", "arctan2"], [33, 1, 1, "", "arctanh"], [34, 1, 1, "", "argmax"], [35, 1, 1, "", "argmin"], [36, 1, 1, "", "argsort"], [37, 1, 1, "", "argwhere"], [38, 1, 1, "", "around"], [39, 1, 1, "", "array"], [40, 1, 1, "", "array_equal"], [41, 1, 1, "", "array_equiv"], [42, 1, 1, "", "array_split"], [43, 1, 1, "", "asanyarray"], [44, 1, 1, "", "asarray"], [45, 1, 1, "", "asarray_chkfinite"], [46, 1, 1, "", "ascontiguousarray"], [47, 1, 1, "", "asfarray"], [48, 1, 1, "", "asfortranarray"], [49, 1, 1, "", "asin"], [50, 1, 1, "", "asinh"], [51, 1, 1, "", "asnumpy"], [52, 1, 1, "", "astype"], [53, 1, 1, "", "atan"], [54, 1, 1, "", "atan2"], [55, 1, 1, "", "atanh"], [56, 1, 1, "", "atleast_1d"], [57, 1, 1, "", "atleast_2d"], [58, 1, 1, "", "atleast_3d"], [59, 1, 1, "", "average"], [60, 1, 1, "", "binary_repr"], [61, 1, 1, "", "bincount"], [62, 1, 1, "", "bitwise_and"], [63, 1, 1, "", "bitwise_invert"], [64, 1, 1, "", "bitwise_left_shift"], [65, 1, 1, "", "bitwise_not"], [66, 1, 1, "", "bitwise_or"], [67, 1, 1, "", "bitwise_right_shift"], [68, 1, 1, "", "bitwise_xor"], [69, 1, 1, "", "broadcast_arrays"], [70, 1, 1, "", "broadcast_shapes"], [71, 1, 1, "", "broadcast_to"], [72, 1, 1, "", "byte_bounds"], [73, 1, 1, "", "can_cast"], [74, 1, 1, "", "cbrt"], [75, 1, 1, "", "ceil"], [76, 1, 1, "", "choose"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "column_stack"], [79, 1, 1, "", "compress"], [80, 1, 1, "", "concat"], [81, 1, 1, "", "concatenate"], [82, 1, 1, "", "conj"], [83, 1, 1, "", "conjugate"], [84, 1, 1, "", "convolve"], [85, 1, 1, "", "copy"], [86, 1, 1, "", "copysign"], [87, 1, 1, "", "copyto"], [88, 1, 1, "", "corrcoef"], [89, 1, 1, "", "correlate"], [90, 1, 1, "", "cos"], [91, 1, 1, "", "cosh"], [92, 1, 1, "", "count_nonzero"], [93, 1, 1, "", "cov"], [94, 1, 1, "", "cross"], [95, 1, 1, "", "cumlogsumexp"], [96, 1, 1, "", "cumprod"], [97, 1, 1, "", "cumsum"], [98, 1, 1, "", "cumulative_prod"], [99, 1, 1, "", "cumulative_sum"], [100, 1, 1, "", "deg2rad"], [101, 1, 1, "", "degrees"], [102, 1, 1, "", "delete"], [103, 1, 1, "", "diag"], [104, 1, 1, "", "diag_indices"], [105, 1, 1, "", "diag_indices_from"], [106, 1, 1, "", "diagflat"], [107, 1, 1, "", "diagonal"], [108, 1, 1, "", "diff"], [109, 1, 1, "", "digitize"], [110, 1, 1, "", "divide"], [111, 1, 1, "", "dot"], [174, 1, 1, "", "dsplit"], [175, 1, 1, "", "dstack"], [176, 2, 1, "", "dtype"], [200, 1, 1, "", "ediff1d"], [201, 1, 1, "", "einsum"], [202, 1, 1, "", "einsum_path"], [203, 1, 1, "", "empty"], [204, 1, 1, "", "empty_like"], [205, 1, 1, "", "equal"], [206, 1, 1, "", "erf"], [207, 1, 1, "", "exp"], [208, 1, 1, "", "exp2"], [209, 1, 1, "", "expand_dims"], [210, 1, 1, "", "expm1"], [211, 1, 1, "", "extract"], [212, 1, 1, "", "eye"], [213, 1, 1, "", "fabs"], [232, 1, 1, "", "fill_diagonal"], [233, 1, 1, "", "finfo"], [234, 1, 1, "", "fix"], [235, 2, 1, "", "flatiter"], [236, 1, 1, "", "flatnonzero"], [237, 1, 1, "", "flip"], [238, 1, 1, "", "fliplr"], [239, 1, 1, "", "flipud"], [240, 1, 1, "", "float_power"], [241, 1, 1, "", "floor"], [242, 1, 1, "", "floor_divide"], [243, 1, 1, "", "fmax"], [244, 1, 1, "", "fmin"], [245, 1, 1, "", "fmod"], [246, 1, 1, "", "from_dlpack"], [247, 1, 1, "", "frombuffer"], [248, 1, 1, "", "fromfile"], [249, 1, 1, "", "fromfunction"], [250, 1, 1, "", "fromiter"], [251, 1, 1, "", "fromstring"], [252, 1, 1, "", "full"], [253, 1, 1, "", "full_like"], [254, 1, 1, "", "gcd"], [255, 1, 1, "", "geomspace"], [256, 1, 1, "", "get_include"], [257, 1, 1, "", "gradient"], [258, 1, 1, "", "greater"], [259, 1, 1, "", "greater_equal"], [260, 1, 1, "", "heaviside"], [261, 1, 1, "", "histogram"], [262, 1, 1, "", "histogram_bin_edges"], [263, 1, 1, "", "hsplit"], [264, 1, 1, "", "hstack"], [265, 1, 1, "", "hypot"], [266, 1, 1, "", "i0"], [267, 1, 1, "", "identity"], [268, 1, 1, "", "iinfo"], [269, 1, 1, "", "imag"], [270, 1, 1, "", "indices"], [271, 1, 1, "", "inner"], [272, 1, 1, "", "insert"], [273, 1, 1, "", "invert"], [274, 1, 1, "", "isclose"], [275, 1, 1, "", "iscomplex"], [276, 1, 1, "", "iscomplexobj"], [277, 1, 1, "", "isfinite"], [278, 1, 1, "", "isfortran"], [279, 1, 1, "", "isinf"], [280, 1, 1, "", "isnan"], [281, 1, 1, "", "isneginf"], [282, 1, 1, "", "isposinf"], [283, 1, 1, "", "isreal"], [284, 1, 1, "", "isrealobj"], [285, 1, 1, "", "isscalar"], [286, 1, 1, "", "issubdtype"], [287, 1, 1, "", "ix_"], [288, 1, 1, "", "kron"], [289, 1, 1, "", "lcm"], [290, 1, 1, "", "ldexp"], [291, 1, 1, "", "left_shift"], [292, 1, 1, "", "less"], [293, 1, 1, "", "less_equal"], [324, 1, 1, "", "linspace"], [325, 1, 1, "", "loadtxt"], [326, 1, 1, "", "log"], [327, 1, 1, "", "log10"], [328, 1, 1, "", "log1p"], [329, 1, 1, "", "log2"], [330, 1, 1, "", "logaddexp"], [331, 1, 1, "", "logaddexp2"], [332, 1, 1, "", "logical_and"], [333, 1, 1, "", "logical_not"], [334, 1, 1, "", "logical_or"], [335, 1, 1, "", "logical_xor"], [336, 1, 1, "", "logspace"], [337, 1, 1, "", "logsumexp"], [338, 1, 1, "", "mask_indices"], [339, 1, 1, "", "matmul"], [340, 1, 1, "", "matrix_transpose"], [341, 1, 1, "", "max"], [342, 1, 1, "", "maximum"], [343, 1, 1, "", "mean"], [344, 1, 1, "", "median"], [345, 1, 1, "", "meshgrid"], [346, 6, 1, "", "mgrid"], [347, 1, 1, "", "min"], [348, 1, 1, "", "minimum"], [349, 1, 1, "", "mod"], [350, 1, 1, "", "modf"], [351, 1, 1, "", "moveaxis"], [352, 1, 1, "", "multiply"], [353, 1, 1, "", "nan_to_num"], [354, 1, 1, "", "nanargmax"], [355, 1, 1, "", "nanargmin"], [356, 1, 1, "", "nancumprod"], [357, 1, 1, "", "nancumsum"], [358, 1, 1, "", "nanmax"], [359, 1, 1, "", "nanmean"], [360, 1, 1, "", "nanmin"], [361, 1, 1, "", "nanprod"], [362, 1, 1, "", "nanstd"], [363, 1, 1, "", "nansum"], [364, 1, 1, "", "nanvar"], [365, 5, 1, "", "ndarray"], [487, 1, 1, "", "ndim"], [488, 2, 1, "", "ndindex"], [489, 1, 1, "", "negative"], [490, 1, 1, "", "nextafter"], [491, 1, 1, "", "nonzero"], [492, 1, 1, "", "not_equal"], [493, 6, 1, "", "ogrid"], [494, 1, 1, "", "ones"], [495, 1, 1, "", "ones_like"], [496, 1, 1, "", "outer"], [497, 1, 1, "", "pad"], [498, 1, 1, "", "partition"], [499, 1, 1, "", "permute_dims"], [500, 1, 1, "", "place"], [501, 1, 1, "", "positive"], [502, 1, 1, "", "pow"], [503, 1, 1, "", "power"], [504, 1, 1, "", "prod"], [505, 1, 1, "", "proj"], [506, 1, 1, "", "ptp"], [507, 1, 1, "", "put"], [508, 1, 1, "", "put_along_axis"], [509, 1, 1, "", "putmask"], [510, 1, 1, "", "rad2deg"], [511, 1, 1, "", "radians"], [571, 1, 1, "", "ravel"], [572, 1, 1, "", "ravel_multi_index"], [573, 1, 1, "", "real"], [574, 1, 1, "", "real_if_close"], [575, 1, 1, "", "reciprocal"], [576, 1, 1, "", "reduce_hypot"], [577, 1, 1, "", "remainder"], [578, 1, 1, "", "repeat"], [579, 1, 1, "", "require"], [580, 1, 1, "", "reshape"], [581, 1, 1, "", "resize"], [582, 1, 1, "", "result_type"], [583, 1, 1, "", "right_shift"], [584, 1, 1, "", "rint"], [585, 1, 1, "", "roll"], [586, 1, 1, "", "rollaxis"], [587, 1, 1, "", "rot90"], [588, 1, 1, "", "round"], [589, 1, 1, "", "row_stack"], [590, 1, 1, "", "rsqrt"], [591, 1, 1, "", "searchsorted"], [592, 1, 1, "", "select"], [593, 1, 1, "", "shape"], [594, 1, 1, "", "sign"], [595, 1, 1, "", "signbit"], [596, 1, 1, "", "sin"], [597, 1, 1, "", "sinc"], [598, 1, 1, "", "sinh"], [599, 1, 1, "", "size"], [600, 1, 1, "", "sort"], [601, 1, 1, "", "sort_complex"], [602, 1, 1, "", "spacing"], [603, 1, 1, "", "split"], [604, 1, 1, "", "sqrt"], [605, 1, 1, "", "square"], [606, 1, 1, "", "squeeze"], [607, 1, 1, "", "stack"], [608, 1, 1, "", "std"], [609, 1, 1, "", "subtract"], [610, 1, 1, "", "sum"], [611, 1, 1, "", "swapaxes"], [612, 1, 1, "", "take"], [613, 1, 1, "", "take_along_axis"], [614, 1, 1, "", "tan"], [615, 1, 1, "", "tanh"], [616, 1, 1, "", "tensordot"], [617, 1, 1, "", "tile"], [618, 1, 1, "", "trace"], [619, 1, 1, "", "transpose"], [620, 1, 1, "", "trapezoid"], [621, 1, 1, "", "tri"], [622, 1, 1, "", "tril"], [623, 1, 1, "", "tril_indices"], [624, 1, 1, "", "tril_indices_from"], [625, 1, 1, "", "trim_zeros"], [626, 1, 1, "", "triu"], [627, 1, 1, "", "triu_indices"], [628, 1, 1, "", "triu_indices_from"], [629, 1, 1, "", "true_divide"], [630, 1, 1, "", "trunc"], [631, 1, 1, "", "unique"], [632, 1, 1, "", "unravel_index"], [633, 1, 1, "", "unstack"], [634, 1, 1, "", "unwrap"], [635, 1, 1, "", "vander"], [636, 1, 1, "", "var"], [637, 1, 1, "", "vdot"], [638, 1, 1, "", "vecdot"], [639, 1, 1, "", "vsplit"], [640, 1, 1, "", "vstack"], [641, 1, 1, "", "where"], [642, 1, 1, "", "zeros"], [643, 1, 1, "", "zeros_like"]], "dpnp.dpnp_array": [[112, 2, 1, "", "dpnp_array"]], "dpnp.dpnp_array.dpnp_array": [[113, 3, 1, "", "T"], [114, 4, 1, "", "all"], [115, 4, 1, "", "any"], [116, 4, 1, "", "argmax"], [117, 4, 1, "", "argmin"], [118, 4, 1, "", "argsort"], [119, 4, 1, "", "asnumpy"], [120, 4, 1, "", "astype"], [121, 4, 1, "", "choose"], [122, 4, 1, "", "clip"], [123, 4, 1, "", "compress"], [124, 4, 1, "", "conj"], [125, 4, 1, "", "conjugate"], [126, 4, 1, "", "copy"], [127, 4, 1, "", "cumprod"], [128, 4, 1, "", "cumsum"], [129, 3, 1, "", "device"], [130, 4, 1, "", "diagonal"], [131, 4, 1, "", "dot"], [132, 3, 1, "", "dtype"], [133, 4, 1, "", "fill"], [134, 3, 1, "", "flags"], [135, 3, 1, "", "flat"], [136, 4, 1, "", "flatten"], [137, 4, 1, "", "get_array"], [138, 3, 1, "", "imag"], [139, 4, 1, "", "item"], [140, 3, 1, "", "itemsize"], [141, 3, 1, "", "mT"], [142, 4, 1, "", "max"], [143, 4, 1, "", "mean"], [144, 4, 1, "", "min"], [145, 3, 1, "", "nbytes"], [146, 3, 1, "", "ndim"], [147, 4, 1, "", "nonzero"], [148, 4, 1, "", "partition"], [149, 4, 1, "", "prod"], [150, 4, 1, "", "put"], [151, 4, 1, "", "ravel"], [152, 3, 1, "", "real"], [153, 4, 1, "", "repeat"], [154, 4, 1, "", "reshape"], [155, 4, 1, "", "round"], [156, 4, 1, "", "searchsorted"], [157, 3, 1, "", "shape"], [158, 3, 1, "", "size"], [159, 4, 1, "", "sort"], [160, 4, 1, "", "squeeze"], [161, 4, 1, "", "std"], [162, 3, 1, "", "strides"], [163, 4, 1, "", "sum"], [164, 4, 1, "", "swapaxes"], [165, 3, 1, "", "sycl_context"], [166, 3, 1, "", "sycl_device"], [167, 3, 1, "", "sycl_queue"], [168, 4, 1, "", "take"], [169, 4, 1, "", "to_device"], [170, 4, 1, "", "trace"], [171, 4, 1, "", "transpose"], [172, 3, 1, "", "usm_type"], [173, 4, 1, "", "var"]], "dpnp.dtype": [[177, 5, 1, "", "alignment"], [178, 5, 1, "", "base"], [179, 5, 1, "", "byteorder"], [180, 5, 1, "", "char"], [181, 5, 1, "", "descr"], [182, 5, 1, "", "fields"], [183, 5, 1, "", "flags"], [184, 5, 1, "", "hasobject"], [185, 5, 1, "", "isalignedstruct"], [186, 5, 1, "", "isbuiltin"], [187, 5, 1, "", "isnative"], [188, 5, 1, "", "itemsize"], [189, 5, 1, "", "kind"], [190, 5, 1, "", "metadata"], [191, 5, 1, "", "name"], [192, 5, 1, "", "names"], [193, 5, 1, "", "ndim"], [194, 4, 1, "", "newbyteorder"], [195, 5, 1, "", "num"], [196, 5, 1, "", "shape"], [197, 5, 1, "", "str"], [198, 5, 1, "", "subdtype"], [199, 5, 1, "", "type"]], "dpnp.fft": [[214, 1, 1, "", "fft"], [215, 1, 1, "", "fft2"], [216, 1, 1, "", "fftfreq"], [217, 1, 1, "", "fftn"], [218, 1, 1, "", "fftshift"], [219, 1, 1, "", "hfft"], [220, 1, 1, "", "ifft"], [221, 1, 1, "", "ifft2"], [222, 1, 1, "", "ifftn"], [223, 1, 1, "", "ifftshift"], [224, 1, 1, "", "ihfft"], [225, 1, 1, "", "irfft"], [226, 1, 1, "", "irfft2"], [227, 1, 1, "", "irfftn"], [228, 1, 1, "", "rfft"], [229, 1, 1, "", "rfft2"], [230, 1, 1, "", "rfftfreq"], [231, 1, 1, "", "rfftn"]], "dpnp.linalg": [[294, 1, 1, "", "cholesky"], [295, 1, 1, "", "cond"], [296, 1, 1, "", "cross"], [297, 1, 1, "", "det"], [298, 1, 1, "", "diagonal"], [299, 1, 1, "", "eig"], [300, 1, 1, "", "eigh"], [301, 1, 1, "", "eigvals"], [302, 1, 1, "", "eigvalsh"], [303, 1, 1, "", "inv"], [304, 1, 1, "", "lstsq"], [305, 1, 1, "", "matmul"], [306, 1, 1, "", "matrix_norm"], [307, 1, 1, "", "matrix_power"], [308, 1, 1, "", "matrix_rank"], [309, 1, 1, "", "multi_dot"], [310, 1, 1, "", "norm"], [311, 1, 1, "", "outer"], [312, 1, 1, "", "pinv"], [313, 1, 1, "", "qr"], [314, 1, 1, "", "slogdet"], [315, 1, 1, "", "solve"], [316, 1, 1, "", "svd"], [317, 1, 1, "", "svdvals"], [318, 1, 1, "", "tensordot"], [319, 1, 1, "", "tensorinv"], [320, 1, 1, "", "tensorsolve"], [321, 1, 1, "", "trace"], [322, 1, 1, "", "vecdot"], [323, 1, 1, "", "vector_norm"]], "dpnp.ndarray": [[366, 3, 1, "", "T"], [367, 4, 1, "", "__abs__"], [368, 4, 1, "", "__add__"], [369, 4, 1, "", "__and__"], [370, 4, 1, "", "__bool__"], [371, 4, 1, "", "__complex__"], [372, 4, 1, "", "__copy__"], [373, 4, 1, "", "__eq__"], [374, 4, 1, "", "__float__"], [375, 4, 1, "", "__floordiv__"], [376, 4, 1, "", "__ge__"], [377, 4, 1, "", "__getitem__"], [378, 4, 1, "", "__gt__"], [379, 4, 1, "", "__iadd__"], [380, 4, 1, "", "__iand__"], [381, 4, 1, "", "__ifloordiv__"], [382, 4, 1, "", "__ilshift__"], [383, 4, 1, "", "__imatmul__"], [384, 4, 1, "", "__imod__"], [385, 4, 1, "", "__imul__"], [386, 4, 1, "", "__int__"], [387, 4, 1, "", "__invert__"], [388, 4, 1, "", "__ior__"], [389, 4, 1, "", "__ipow__"], [390, 4, 1, "", "__irshift__"], [391, 4, 1, "", "__isub__"], [392, 4, 1, "", "__itruediv__"], [393, 4, 1, "", "__ixor__"], [394, 4, 1, "", "__le__"], [395, 4, 1, "", "__len__"], [396, 4, 1, "", "__lshift__"], [397, 4, 1, "", "__lt__"], [398, 4, 1, "", "__matmul__"], [399, 4, 1, "", "__mod__"], [400, 4, 1, "", "__mul__"], [401, 4, 1, "", "__ne__"], [402, 4, 1, "", "__neg__"], [403, 4, 1, "", "__new__"], [404, 4, 1, "", "__or__"], [405, 4, 1, "", "__pos__"], [406, 4, 1, "", "__pow__"], [407, 4, 1, "", "__radd__"], [408, 4, 1, "", "__rand__"], [409, 4, 1, "", "__repr__"], [410, 4, 1, "", "__rfloordiv__"], [411, 4, 1, "", "__rlshift__"], [412, 4, 1, "", "__rmatmul__"], [413, 4, 1, "", "__rmod__"], [414, 4, 1, "", "__rmul__"], [415, 4, 1, "", "__ror__"], [416, 4, 1, "", "__rpow__"], [417, 4, 1, "", "__rrshift__"], [418, 4, 1, "", "__rshift__"], [419, 4, 1, "", "__rsub__"], [420, 4, 1, "", "__rtruediv__"], [421, 4, 1, "", "__rxor__"], [422, 4, 1, "", "__setitem__"], [423, 4, 1, "", "__str__"], [424, 4, 1, "", "__sub__"], [425, 4, 1, "", "__truediv__"], [426, 4, 1, "", "__xor__"], [427, 4, 1, "", "all"], [428, 4, 1, "", "any"], [429, 4, 1, "", "argmax"], [430, 4, 1, "", "argmin"], [431, 4, 1, "", "argsort"], [432, 4, 1, "", "asnumpy"], [433, 4, 1, "", "astype"], [434, 4, 1, "", "choose"], [435, 4, 1, "", "clip"], [436, 4, 1, "", "compress"], [437, 4, 1, "", "conj"], [438, 4, 1, "", "conjugate"], [439, 4, 1, "", "copy"], [440, 4, 1, "", "cumprod"], [441, 4, 1, "", "cumsum"], [442, 3, 1, "", "device"], [443, 4, 1, "", "diagonal"], [444, 4, 1, "", "dot"], [445, 3, 1, "", "dtype"], [446, 4, 1, "", "fill"], [447, 3, 1, "", "flags"], [448, 3, 1, "", "flat"], [449, 4, 1, "", "flatten"], [450, 4, 1, "", "get_array"], [451, 3, 1, "", "imag"], [452, 4, 1, "", "item"], [453, 3, 1, "", "itemsize"], [454, 3, 1, "", "mT"], [455, 4, 1, "", "max"], [456, 4, 1, "", "mean"], [457, 4, 1, "", "min"], [458, 3, 1, "", "nbytes"], [459, 3, 1, "", "ndim"], [460, 4, 1, "", "nonzero"], [461, 4, 1, "", "partition"], [462, 4, 1, "", "prod"], [463, 4, 1, "", "put"], [464, 4, 1, "", "ravel"], [465, 3, 1, "", "real"], [466, 4, 1, "", "repeat"], [467, 4, 1, "", "reshape"], [468, 4, 1, "", "round"], [469, 4, 1, "", "searchsorted"], [470, 3, 1, "", "shape"], [471, 3, 1, "", "size"], [472, 4, 1, "", "sort"], [473, 4, 1, "", "squeeze"], [474, 4, 1, "", "std"], [475, 3, 1, "", "strides"], [476, 4, 1, "", "sum"], [477, 4, 1, "", "swapaxes"], [478, 3, 1, "", "sycl_context"], [479, 3, 1, "", "sycl_device"], [480, 3, 1, "", "sycl_queue"], [481, 4, 1, "", "take"], [482, 4, 1, "", "to_device"], [483, 4, 1, "", "trace"], [484, 4, 1, "", "transpose"], [485, 3, 1, "", "usm_type"], [486, 4, 1, "", "var"]], "dpnp.random": [[512, 2, 1, "", "RandomState"], [523, 1, 1, "", "beta"], [524, 1, 1, "", "binomial"], [525, 1, 1, "", "bytes"], [526, 1, 1, "", "chisquare"], [527, 1, 1, "", "choice"], [528, 1, 1, "", "dirichlet"], [529, 1, 1, "", "exponential"], [530, 1, 1, "", "f"], [531, 1, 1, "", "gamma"], [532, 1, 1, "", "geometric"], [533, 1, 1, "", "gumbel"], [534, 1, 1, "", "hypergeometric"], [535, 1, 1, "", "laplace"], [536, 1, 1, "", "logistic"], [537, 1, 1, "", "lognormal"], [538, 1, 1, "", "logseries"], [539, 1, 1, "", "multinomial"], [540, 1, 1, "", "multivariate_normal"], [541, 1, 1, "", "negative_binomial"], [542, 1, 1, "", "noncentral_chisquare"], [543, 1, 1, "", "noncentral_f"], [544, 1, 1, "", "normal"], [545, 1, 1, "", "pareto"], [546, 1, 1, "", "permutation"], [547, 1, 1, "", "poisson"], [548, 1, 1, "", "power"], [549, 1, 1, "", "rand"], [550, 1, 1, "", "randint"], [551, 1, 1, "", "randn"], [552, 1, 1, "", "random"], [553, 1, 1, "", "random_integers"], [554, 1, 1, "", "random_sample"], [555, 1, 1, "", "ranf"], [556, 1, 1, "", "rayleigh"], [557, 1, 1, "", "sample"], [558, 1, 1, "", "seed"], [559, 1, 1, "", "shuffle"], [560, 1, 1, "", "standard_cauchy"], [561, 1, 1, "", "standard_exponential"], [562, 1, 1, "", "standard_gamma"], [563, 1, 1, "", "standard_normal"], [564, 1, 1, "", "standard_t"], [565, 1, 1, "", "triangular"], [566, 1, 1, "", "uniform"], [567, 1, 1, "", "vonmises"], [568, 1, 1, "", "wald"], [569, 1, 1, "", "weibull"], [570, 1, 1, "", "zipf"]], "dpnp.random.RandomState": [[513, 4, 1, "", "get_state"], [514, 4, 1, "", "get_sycl_device"], [515, 4, 1, "", "get_sycl_queue"], [516, 4, 1, "", "normal"], [517, 4, 1, "", "rand"], [518, 4, 1, "", "randint"], [519, 4, 1, "", "randn"], [520, 4, 1, "", "random_sample"], [521, 4, 1, "", "standard_normal"], [522, 4, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:attribute", "6": "py:data"}, "terms": {"": [0, 3, 4, 10, 23, 60, 94, 97, 132, 171, 176, 182, 189, 194, 200, 215, 217, 219, 221, 222, 224, 226, 227, 229, 231, 232, 247, 248, 304, 308, 310, 312, 316, 317, 318, 348, 445, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 533, 534, 535, 536, 537, 539, 541, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 580, 616, 617, 651], "0": [0, 4, 6, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 126, 130, 133, 138, 139, 141, 152, 155, 157, 159, 161, 170, 171, 173, 174, 176, 182, 186, 193, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 257, 260, 261, 262, 263, 266, 267, 270, 271, 272, 274, 277, 279, 280, 281, 282, 287, 288, 289, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 314, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 439, 443, 446, 451, 452, 454, 465, 468, 470, 472, 474, 483, 484, 486, 487, 488, 491, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 511, 516, 517, 518, 519, 520, 521, 522, 524, 529, 531, 532, 533, 535, 536, 537, 539, 540, 541, 544, 546, 547, 548, 549, 552, 554, 555, 556, 557, 560, 563, 565, 566, 567, 572, 575, 577, 578, 580, 581, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 641, 642, 643, 651], "00": [90, 202, 214, 596], "000": [353, 524], "00000000005e": 210, "000000001": 62, "00000000e": [214, 353], "000000082740371e": 210, "000000e": [90, 596], "00001101": [62, 63, 65, 66, 68, 273], "00001e10": [18, 274], "00010000": 66, "00010001": [62, 68], "00011100": 68, "00011101": 66, "0001e10": 274, "000e": 202, "000j": 353, "0011": 60, "002": 353, "00225109": 88, "00867716": 526, "01": [88, 202], "02": [88, 202, 353], "03": 353, "03047091": 88, "03088525e": 203, "0342579": 88, "0396842": 336, "04": 202, "04719755": 511, "04921661": 519, "04923628": 597, "05": [18, 202, 274], "05846808": 597, "0614962j": [215, 229], "06310682": 517, "06682066": 597, "07": 353, "07012729": 88, "0728188e": 88, "07944154": [95, 314], "08": [18, 90, 202, 240, 274, 540, 596], "08156915": 521, "08409186": 597, "08504448": 597, "08903844": 597, "09373496": 88, "0943951": 511, "09640474": 331, "09861229": [95, 314, 328], "0d": 37, "0dev2": 6, "0j": [21, 111, 138, 152, 275, 276, 283, 284, 305, 339, 451, 465, 594], "0th": [318, 616], "1": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 126, 130, 133, 136, 138, 139, 141, 146, 148, 152, 157, 159, 170, 171, 174, 175, 176, 186, 188, 190, 193, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 274, 275, 276, 278, 283, 284, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 431, 433, 439, 443, 446, 449, 451, 452, 454, 459, 461, 465, 470, 472, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 529, 531, 533, 535, 536, 537, 539, 540, 541, 544, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 561, 563, 566, 571, 572, 573, 574, 575, 577, 578, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651], "10": [0, 4, 15, 16, 25, 28, 30, 34, 35, 50, 59, 64, 67, 77, 85, 95, 96, 97, 98, 99, 102, 104, 105, 108, 109, 154, 174, 176, 201, 202, 210, 211, 218, 230, 252, 255, 261, 262, 263, 269, 274, 287, 288, 290, 291, 321, 322, 326, 327, 328, 329, 336, 337, 344, 352, 467, 497, 506, 508, 518, 522, 524, 534, 546, 576, 582, 583, 585, 588, 591, 603, 607, 613, 622, 623, 624, 626, 627, 628, 633, 638, 639, 641], "100": [104, 230, 255, 274, 288, 309, 336, 497, 534, 560, 574, 634], "1000": [73, 255, 309, 336, 523, 524, 529, 531, 533, 534, 535, 536, 537, 544, 545, 548, 550, 552, 555, 557, 563, 567, 568, 569, 570, 574, 620], "10000": [309, 532, 547, 556, 566], "100000": [97, 99, 541], "1000000": [560, 562, 564, 565], "101": [60, 64, 67, 291, 583], "1010": [67, 583], "10100": [64, 291], "1024": 0, "10394325": 597, "105": 202, "11": [25, 34, 35, 59, 60, 91, 102, 104, 105, 154, 174, 211, 257, 263, 310, 321, 467, 541, 550, 588, 591, 598, 622, 623, 624, 626, 627, 628, 633, 639, 641], "110": [201, 271], "1100": 62, "11100": 68, "11101": [60, 66], "11110010": [63, 65, 273], "111111": 353, "113": 330, "11570901": 521, "11643488": 597, "1179187": 517, "118033988749895": 608, "119": 201, "1196081": 522, "12": [10, 25, 34, 35, 58, 62, 94, 101, 102, 104, 105, 109, 174, 195, 201, 211, 215, 229, 254, 263, 269, 289, 317, 336, 504, 506, 511, 546, 572, 591, 622, 623, 624, 626, 627, 628, 633, 639, 641], "120": [96, 98, 101], "123": [88, 139, 202, 452], "124": 25, "125": [240, 502, 503, 635], "12613779": 597, "127": 255, "128": [0, 255, 353], "12th": 201, "13": [10, 25, 34, 35, 62, 63, 65, 66, 68, 104, 105, 111, 174, 193, 201, 263, 272, 273, 305, 339, 572, 591, 623, 624, 627, 628, 632, 633, 639], "130": 201, "134": 271, "13436424": [517, 520], "135": [32, 54], "13710533": 526, "139884456208480": 17, "13j": 574, "14": [25, 34, 35, 62, 63, 65, 104, 105, 111, 174, 234, 263, 271, 273, 318, 591, 616, 623, 624, 627, 628, 633, 639], "140": 634, "140053638309840": 22, "14157194": 620, "14159265": [14, 27, 32, 54, 100, 511], "1424356": 88, "14243561": 88, "14423775e": 214, "14j": 574, "15": [25, 34, 35, 97, 99, 104, 105, 109, 174, 201, 219, 224, 263, 310, 327, 546, 591, 623, 624, 627, 628, 633, 639], "150": 101, "15591488": 597, "15716429": 88, "15888336": 336, "15j": 574, "16": [6, 25, 62, 66, 104, 105, 174, 181, 182, 183, 188, 192, 214, 240, 250, 255, 257, 263, 323, 352, 502, 503, 574, 592, 614, 623, 624, 627, 628, 633, 639], "1621": [572, 632], "16227766": [295, 576], "16394577": 516, "164": 331, "1643624": 88, "166": 331, "16j": 214, "17": [6, 25, 62, 68, 88, 214, 215, 229, 633], "17157288": [300, 302], "17281316e": 214, "17615308": 88, "177": [255, 336], "17j": 214, "18": [6, 25, 96, 98, 188, 200, 201, 217, 296, 306, 310, 336, 633], "180": [32, 54, 100, 101, 201, 510, 634, 658], "1805": 10, "18236388": 521, "18557831": 521, "1887902": 511, "18920668": 597, "19": [10, 25, 92, 195, 572, 633, 634], "19083664": 88, "19083665": 88, "1923875335537315": 551, "19245009": 590, "1924881e": 240, "1965": 10, "19722458": 95, "1985": 310, "1d": [24, 200, 507, 508, 613, 620], "1e": [18, 210, 274, 299, 327, 328, 330, 331, 540], "1e10": [18, 274], "1j": [12, 13, 21, 30, 31, 40, 50, 53, 82, 83, 138, 152, 225, 269, 275, 283, 299, 311, 316, 451, 465, 496, 573, 601, 605], "1th": [318, 616], "2": [0, 3, 4, 10, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 126, 130, 131, 133, 136, 139, 141, 146, 148, 157, 158, 171, 174, 175, 176, 181, 182, 186, 188, 190, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 275, 278, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 433, 439, 443, 444, 446, 449, 452, 454, 459, 461, 470, 471, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 510, 511, 516, 517, 518, 519, 522, 526, 530, 534, 540, 546, 549, 551, 562, 564, 565, 568, 570, 571, 573, 574, 575, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 598, 599, 601, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643], "20": [25, 64, 96, 98, 109, 201, 230, 254, 270, 274, 288, 289, 290, 291, 310, 508, 524, 539, 591, 613, 633, 634], "20000": 524, "2007": 10, "200e": 202, "20477401j": [215, 229], "2048": 0, "2066992e": 88, "21": [25, 97, 99, 180, 188, 195, 633], "210": 101, "2123185": 88, "215": 336, "21623621": 597, "21941987": 521, "21968665": 521, "22": [25, 507, 572, 632, 633], "220": 634, "220446049250313e": 574, "222222": 353, "22460635e": 614, "22464680e": 214, "22497216": 310, "22776602": 336, "23": [25, 61, 522, 572, 633], "230": 201, "23387232": 597, "23598776": 511, "23606798": 310, "24": [25, 34, 35, 94, 96, 98, 157, 200, 201, 271, 288, 296, 318, 319, 321, 470, 504, 616, 618, 633], "240": 101, "24264069": 310, "24544512": 521, "247219128924647": 362, "25": [176, 201, 206, 216, 257, 261, 262, 303, 324, 352, 364, 551, 560, 592, 635, 636], "255": [62, 66], "25506903": 517, "256": [0, 255], "26": [68, 201], "260": 634, "26606588": 266, "26618007j": 329, "27": [74, 240, 336, 502, 503, 590, 635], "270": 101, "2795853": 266, "28": [68, 201], "28000000e": 353, "2800000e": 353, "283185307179586": 634, "28318531": 634, "28352814": 521, "2858386e": 88, "28904982": 331, "29": 66, "297": 10, "2d": [316, 339, 587, 631], "2e": [97, 99], "2f": 0, "2j": [82, 83, 111, 214, 269, 275, 283, 300, 302, 305, 339, 573, 594, 601, 637], "2k": 634, "3": [0, 3, 4, 6, 14, 16, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 126, 130, 136, 139, 141, 146, 148, 157, 158, 159, 171, 174, 175, 176, 188, 190, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 219, 223, 224, 226, 227, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 255, 257, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 278, 283, 284, 285, 287, 288, 291, 295, 296, 297, 298, 299, 303, 304, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 439, 443, 449, 452, 454, 459, 461, 470, 471, 472, 484, 487, 488, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 511, 516, 519, 521, 526, 530, 537, 540, 546, 549, 550, 551, 561, 565, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 591, 592, 593, 595, 599, 600, 601, 603, 604, 606, 607, 608, 609, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "30": [94, 101, 158, 201, 230, 471, 508, 511, 613, 637], "300": [101, 634], "3003003": 575, "301": 10, "30102999566": 327, "3012989": 598, "302": 6, "30258509": [95, 337], "308": 353, "308j": 353, "31": [6, 68, 255, 572, 632], "312": 203, "316": 336, "32": [182, 201, 255, 318, 361, 363, 616], "33": 575, "330": [6, 101], "333": 309, "33333333": 353, "3333333e": 353, "33340275": 620, "33486982e": 214, "33836967": 516, "340": 634, "34074171": 522, "34132519": 336, "34846923": [306, 310], "34960421": 336, "35": [201, 532], "35106603e": [306, 310], "35348576": 323, "35355338": 590, "36": 94, "360": 634, "37": [572, 588, 632], "371139e": 90, "38": [271, 524], "380": 634, "38268343": 300, "38268343j": 300, "38629436": 95, "38885": 524, "389": 6, "389056099": [207, 210], "39295758": 516, "39783284": 88, "3e": [0, 97, 99, 574], "3j": [111, 305, 339, 601], "3rd": [80, 81, 174, 603], "3x3": 338, "3x8000": 561, "4": [0, 16, 17, 23, 24, 25, 26, 34, 35, 37, 39, 40, 42, 56, 58, 59, 60, 62, 66, 69, 77, 78, 79, 80, 81, 84, 87, 88, 90, 92, 94, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 126, 130, 136, 141, 146, 148, 157, 159, 171, 174, 175, 177, 188, 193, 196, 200, 201, 202, 203, 205, 208, 211, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 236, 237, 240, 242, 243, 244, 248, 249, 250, 252, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 275, 278, 283, 287, 288, 290, 293, 296, 297, 298, 303, 305, 306, 307, 308, 310, 314, 317, 318, 319, 320, 321, 323, 324, 329, 332, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 354, 355, 357, 359, 362, 364, 439, 443, 449, 454, 459, 461, 470, 472, 484, 487, 491, 493, 495, 497, 499, 502, 503, 504, 506, 507, 511, 516, 519, 520, 523, 526, 546, 551, 567, 571, 572, 573, 574, 577, 578, 580, 581, 585, 586, 587, 588, 589, 592, 594, 597, 599, 600, 603, 604, 607, 608, 609, 611, 612, 616, 617, 619, 620, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 643], "40": [64, 201, 230, 290, 291, 508, 613], "40882036": 516, "4096": 0, "41": [6, 572, 597, 632], "41421356": [295, 310], "42": 592, "420": 634, "44": [500, 507], "440": 6, "4400": [201, 318, 616], "443469": 336, "44509285e": 214, "45": [21, 32, 54, 323], "45206687": 88, "4532": [201, 318, 616], "46": 201, "460": [6, 634], "46394577": 519, "464": 336, "46436927": 88, "4643693": 88, "4664": [201, 318, 616], "47": 6, "4730": [201, 318, 616], "4796": [201, 318, 616], "48": [6, 94], "48093112": 522, "48613152": 88, "48613155": 88, "4874": [201, 318, 616], "48927254": 516, "49": 6, "4928": [201, 318, 616], "49543509": 517, "49778714": 634, "499128": 111, "4d": 316, "4e": 574, "4j": [269, 573, 637], "4x4": [623, 627], "5": [0, 16, 17, 22, 23, 24, 25, 26, 33, 34, 37, 42, 55, 56, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 75, 77, 79, 80, 81, 84, 87, 88, 89, 92, 94, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 120, 126, 139, 141, 158, 174, 200, 201, 202, 206, 211, 215, 216, 218, 226, 229, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 254, 255, 257, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 275, 278, 283, 287, 288, 290, 291, 294, 296, 298, 300, 302, 303, 309, 310, 311, 315, 318, 321, 322, 323, 324, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 362, 433, 439, 452, 454, 471, 487, 491, 493, 494, 495, 496, 497, 499, 502, 503, 506, 507, 511, 516, 517, 519, 521, 522, 523, 524, 526, 529, 541, 545, 546, 547, 548, 551, 554, 569, 571, 572, 573, 574, 575, 577, 580, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 599, 601, 603, 607, 608, 610, 611, 612, 616, 617, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643], "50": [215, 229, 230, 255, 288, 318, 330, 331, 336, 508, 613, 616, 620, 641], "500": [288, 634], "5018": [201, 318, 616], "50455115": 597, "5091786": 91, "512": 0, "5147297e": 88, "5162": [201, 318, 616], "52069395e": 214, "52359878": 511, "52928804": 522, "53": 6, "5306": [201, 318, 616], "53702235": 88, "5399045e": 240, "54": [6, 522], "540": 634, "54288406": 519, "54465213": 521, "545": 6, "548739": 598, "54930614": [33, 55], "55": [500, 507, 592], "5555555555555554": 364, "562": 336, "5620499351813308": [12, 13], "56920387": [517, 520], "5707963267948966": [29, 49], "57079633": [21, 32, 54, 511, 634], "5790461": 88, "57904613": 88, "58997253": 516, "591953": 91, "5e": [330, 331], "5j": [346, 493, 601], "6": [0, 4, 16, 23, 24, 25, 26, 34, 35, 37, 42, 56, 59, 61, 66, 68, 70, 77, 79, 80, 81, 87, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 126, 139, 141, 157, 174, 183, 191, 200, 201, 205, 210, 211, 216, 219, 230, 237, 240, 253, 254, 257, 263, 264, 269, 270, 271, 272, 278, 287, 288, 289, 296, 298, 306, 310, 312, 313, 316, 317, 318, 319, 321, 322, 323, 324, 336, 338, 340, 344, 356, 357, 361, 439, 452, 454, 470, 487, 491, 495, 497, 500, 502, 503, 506, 516, 519, 522, 539, 541, 546, 551, 571, 572, 573, 579, 580, 585, 586, 587, 588, 589, 592, 599, 601, 603, 607, 609, 610, 611, 612, 616, 618, 620, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 637, 638, 639, 640, 641, 643], "60": [25, 94, 101, 201, 289, 318, 508, 613, 616, 634, 641], "600": 288, "60943791": 95, "6173796": 88, "61799388": 511, "62": 271, "6227766": 255, "62318272": 526, "62341325": 255, "624": 202, "63": 255, "63317787e": 614, "63522211": 521, "63836967": 519, "64": [0, 4, 201, 240, 255, 361, 363, 502, 503, 588], "64000": 201, "65157276": 88, "6515728": 88, "65354985": 88, "65745445": [15, 28], "6580445": 88, "66519143": 511, "6666666666666665": 359, "67": 201, "67305985": 247, "673174": 521, "67718303": 521, "6883078": 88, "69295758": 519, "69314718": [95, 314, 328], "6990877": 522, "6j": [269, 573, 637], "7": [16, 18, 23, 24, 25, 26, 42, 56, 61, 70, 75, 77, 87, 88, 92, 94, 97, 99, 102, 103, 104, 105, 107, 108, 110, 139, 141, 174, 200, 207, 211, 237, 241, 255, 257, 263, 271, 272, 274, 287, 288, 298, 306, 310, 316, 318, 321, 323, 338, 340, 344, 349, 352, 452, 454, 491, 497, 505, 506, 516, 546, 572, 573, 577, 582, 584, 585, 587, 603, 609, 610, 611, 612, 616, 622, 623, 624, 626, 627, 628, 629, 630, 632, 633, 634, 637, 639, 641], "70": [288, 637, 641], "700": 288, "700e": 202, "70710677": [138, 152, 451, 465], "70710678": [295, 299], "70710678j": 299, "70882036": 519, "7110255": 88, "71102554": 88, "71238898": 511, "718281828": [207, 210], "72": 94, "720": [96, 98, 634], "72075441": 336, "72450536": 88, "72538256": [30, 50], "74165739": 310, "742278e": 596, "74596669": [306, 310], "7485727": 88, "74857277": 88, "74921661": 516, "75": [59, 206, 216, 257, 262, 303, 324], "754": 233, "75682673": 597, "75958653": 511, "76096244": 517, "76377462": 517, "77447665": 331, "78539816": [21, 31, 32, 53, 54, 634], "78927254": 519, "79175947": 95, "7937219": 88, "79727215": 88, "7972722": 88, "79769313e": 353, "7j": 505, "8": [4, 16, 18, 23, 24, 25, 42, 56, 63, 65, 74, 77, 87, 94, 102, 103, 104, 105, 107, 108, 131, 141, 157, 174, 177, 179, 183, 188, 191, 193, 198, 201, 202, 211, 214, 216, 230, 231, 237, 240, 255, 257, 263, 269, 272, 273, 274, 287, 297, 298, 310, 314, 316, 317, 318, 319, 321, 322, 323, 324, 336, 338, 340, 444, 454, 470, 491, 497, 502, 503, 504, 506, 522, 546, 565, 572, 573, 585, 587, 590, 596, 603, 612, 616, 618, 620, 622, 623, 624, 626, 627, 628, 632, 633, 634, 635, 638, 639, 641], "80": [188, 201, 641], "8000": 561, "8012391e": 88, "80226506": [517, 520], "8058837395885292": 323, "81": 6, "8104691": 88, "81715362": 521, "827941": [255, 336], "82842712": [300, 302], "8399546e": 88, "84086883": 88, "84288406": 516, "84401099": [519, 521], "84743374": [517, 520], "84803548": 310, "85": 201, "86": 271, "87649168": 330, "88": 200, "88079259": 266, "88178420e": 214, "881943016134134": 323, "88194302": 323, "88997253": 519, "8900264": 88, "89002645": 88, "89920014": 526, "8f": [178, 198], "8j": 637, "9": [4, 16, 23, 24, 25, 42, 56, 77, 87, 88, 94, 97, 99, 102, 103, 104, 105, 107, 110, 139, 174, 201, 203, 211, 214, 217, 218, 223, 234, 240, 242, 250, 255, 257, 263, 274, 287, 298, 299, 304, 306, 310, 312, 313, 316, 317, 318, 321, 323, 336, 338, 352, 353, 452, 491, 506, 522, 524, 526, 546, 572, 573, 585, 603, 604, 609, 616, 622, 623, 624, 626, 627, 628, 629, 632, 633, 634, 635, 639, 641], "90": [21, 101, 510, 587, 641], "9011005": 88, "917152": 615, "92": 25, "92387953": 300, "92387953j": 300, "9305482": 88, "93548928": 597, "9377134e": 88, "9387854e": 88, "9393724": 88, "9393725": 88, "94": 201, "94591015": 95, "95": 304, "9520904e": 88, "95799250e": 214, "968541": 88, "9685411": 88, "9724453": 88, "98": [305, 339], "98024613": 336, "9875833": 88, "99": [200, 328, 508], "9909503": 88, "99095035": 88, "99322285": [15, 28], "994938": 88, "9949381": 88, "9951523": 88, "99532227": 206, "996272": 615, "99822295": [30, 50], "99853728": 206, "999": [202, 272], "9990000e": 353, "99959305": 206, "99989938": 206, "9999": 353, "99997791": 206, "9999999": 88, "99999994": 88, "999999e": 274, "A": [10, 12, 13, 14, 15, 16, 18, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 78, 79, 82, 83, 85, 86, 87, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 120, 126, 136, 139, 174, 176, 179, 180, 183, 186, 189, 191, 195, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 215, 216, 217, 220, 221, 222, 226, 227, 228, 229, 230, 231, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 263, 265, 266, 267, 269, 270, 272, 273, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 304, 308, 309, 310, 313, 314, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 344, 346, 348, 349, 352, 356, 357, 361, 363, 433, 439, 449, 452, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 505, 510, 511, 512, 514, 515, 519, 521, 524, 541, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 571, 572, 573, 575, 577, 580, 583, 584, 587, 590, 594, 595, 596, 597, 598, 602, 603, 604, 605, 609, 611, 612, 614, 615, 616, 617, 619, 621, 623, 625, 627, 629, 630, 635, 638, 639, 641, 642, 643, 658], "AND": [17, 62, 63, 65, 66, 68, 273, 332, 333, 334, 335], "And": [4, 51, 52, 104, 120, 433, 623, 627], "As": 631, "At": 488, "Be": 299, "Being": 3, "But": [4, 190], "By": [34, 35, 45, 52, 94, 120, 215, 219, 221, 225, 227, 231, 255, 304, 324, 336, 339, 341, 343, 347, 354, 355, 358, 359, 360, 361, 362, 363, 364, 433, 578, 585, 599, 608, 612, 621, 623, 625, 627, 636, 638], "For": [0, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 136, 138, 139, 146, 152, 154, 157, 162, 171, 174, 175, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 446, 449, 451, 452, 459, 465, 467, 470, 475, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 658], "If": [4, 10, 12, 13, 16, 17, 18, 22, 23, 25, 26, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 54, 59, 60, 62, 64, 66, 67, 68, 72, 77, 79, 80, 81, 86, 88, 92, 94, 95, 96, 97, 98, 99, 102, 103, 107, 108, 110, 111, 120, 141, 159, 174, 176, 182, 198, 200, 201, 202, 205, 209, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 240, 242, 243, 244, 245, 246, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 274, 278, 281, 282, 283, 289, 290, 291, 292, 293, 294, 296, 304, 306, 307, 308, 309, 310, 312, 313, 316, 318, 320, 321, 323, 324, 325, 330, 331, 332, 334, 335, 336, 337, 341, 342, 343, 344, 345, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 454, 472, 490, 492, 499, 500, 502, 503, 504, 507, 508, 516, 522, 544, 549, 566, 573, 574, 576, 577, 578, 579, 580, 581, 583, 585, 588, 589, 591, 600, 603, 606, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 620, 629, 631, 634, 635, 636, 637, 638, 639, 640, 641, 651, 658], "In": [4, 10, 34, 35, 60, 88, 94, 96, 97, 98, 99, 201, 202, 220, 221, 222, 225, 227, 257, 294, 301, 309, 313, 315, 331, 336, 356, 357, 359, 361, 363, 504, 507, 522, 566, 571, 572, 580, 581, 610, 612, 630], "It": [4, 10, 17, 22, 23, 24, 34, 35, 77, 79, 96, 97, 98, 99, 109, 111, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 257, 272, 300, 302, 331, 339, 343, 344, 354, 355, 356, 357, 358, 359, 360, 362, 364, 497, 504, 580, 581, 592, 602, 608, 610, 612, 636, 658], "Its": [77, 319, 508, 618], "NOT": [63, 65, 273, 332, 333, 334, 335], "No": [44, 45, 201, 294], "Not": [17, 22, 45, 277, 353, 356, 357, 358, 360, 361, 363, 504], "OR": [22, 62, 63, 65, 66, 68, 273, 332, 333, 334, 335], "On": 4, "One": [56, 57, 58, 94, 175, 179, 225, 311, 497, 580], "Ones": 39, "Or": [257, 620], "That": 338, "The": [3, 4, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 78, 80, 81, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 120, 126, 138, 141, 146, 148, 152, 157, 175, 176, 177, 181, 182, 183, 188, 190, 192, 194, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 273, 274, 276, 277, 278, 279, 280, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 433, 439, 451, 454, 459, 461, 465, 470, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 501, 502, 503, 504, 506, 507, 508, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 525, 527, 528, 538, 543, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 589, 590, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 635, 636, 638, 640, 641, 642, 643, 651, 654, 658], "Then": [10, 46, 48, 338], "There": [10, 324, 631], "These": [4, 23, 195, 201, 202, 209, 338, 351, 508, 613, 623, 627, 651, 654], "To": [4, 219, 225, 227, 240, 491, 634], "With": [34, 35, 59, 92, 98, 99, 263, 306, 310, 323, 341, 347, 354, 355, 361, 363, 504, 610, 639], "_": [0, 262, 607, 620], "__array_interface__": 181, "__bool__": 651, "__dlpack__": 246, "__dlpack_device__": 246, "__main__": 0, "__name__": 0, "__sycl_usm_array_interface__": 47, "_core": 183, "_dtypes_list": 0, "_f": 310, "a1": [40, 41], "a2": [40, 41], "a_": [10, 310], "a_ax": [318, 616], "a_i": [322, 638], "a_k": 10, "a_m": 10, "a_resamp": 225, "ab": [6, 10, 13, 18, 274, 310], "abc": 201, "abcd": 202, "abl": 310, "about": [46, 48, 134, 233, 299, 447, 497, 579, 651], "abov": [3, 14, 15, 27, 28, 29, 30, 33, 49, 50, 55, 95, 103, 106, 217, 222, 227, 231, 270, 298, 313, 321, 337, 353, 576, 621, 622, 626], "absolut": [6, 12, 18, 21, 60, 213, 254, 274, 289, 314, 362, 364, 505, 574, 608, 634, 636, 658], "accept": [24, 201, 311, 522, 623, 627], "access": [10, 104, 105, 232, 338, 623, 627, 651], "accord": [17, 22, 59, 67, 73, 177, 192, 231, 233, 299, 300, 301, 302, 337, 343, 344, 359, 362, 364, 497, 576, 583, 608, 636], "accordingli": [94, 358, 360], "account": [571, 580], "accumul": [95, 96, 97, 98, 99, 201, 261, 321, 356, 357, 361, 363, 504, 610, 618], "accur": [181, 210, 257, 328, 330], "accuraci": [220, 221, 222, 225, 227], "achiev": 201, "aco": [6, 27], "acosh": [6, 28], "across": [107, 262, 356, 357, 361, 363], "activ": 4, "actual": [184, 261, 262, 294, 309], "ad": [18, 60, 190, 193, 202, 209, 225, 274, 297, 314, 331, 634, 654], "add": [6, 88, 176, 658], "addit": [24, 88, 95, 294, 359, 631], "address": 184, "adjac": [298, 321, 602, 634], "advanc": 201, "advers": 201, "advis": 4, "affect": [26, 107, 201, 232, 261, 262], "after": [175, 232, 490, 497, 541, 585], "after_1": 497, "after_n": 497, "ag": 176, "against": [18, 34, 35, 69, 70, 71, 77, 92, 256, 274, 306, 310, 312, 323, 341, 347, 354, 355, 361, 363, 504, 508, 610, 613], "ai": [3, 508, 613], "ai_max": 613, "ai_min": 613, "ainv": [303, 319], "al": 10, "algebra": [644, 654], "algorithm": [10, 36, 201, 202, 214, 220, 228, 600], "alia": [10, 14, 15, 19, 20, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 63, 64, 65, 67, 80, 81, 110, 204, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 253, 273, 291, 349, 365, 495, 499, 502, 503, 522, 552, 555, 557, 571, 577, 580, 583, 589, 619, 629, 634, 640, 643], "alias": [9, 219, 220, 225, 227, 597], "align": [176, 185], "all": [4, 6, 9, 18, 21, 22, 23, 40, 41, 45, 52, 59, 78, 88, 92, 101, 108, 120, 124, 133, 148, 175, 179, 192, 194, 201, 202, 207, 208, 210, 212, 217, 218, 222, 223, 226, 227, 231, 232, 237, 238, 239, 247, 248, 250, 255, 257, 264, 267, 269, 287, 294, 296, 308, 312, 315, 323, 324, 336, 341, 344, 347, 354, 355, 358, 360, 433, 437, 446, 461, 497, 504, 524, 573, 574, 585, 589, 592, 606, 610, 631, 633, 638, 640, 651, 658], "allclos": [6, 40, 274, 303, 312, 313, 315, 316, 320], "alloc": [3, 4, 23, 26, 39, 43, 44, 45, 46, 47, 48, 52, 59, 85, 95, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 234, 247, 248, 249, 250, 251, 252, 253, 255, 266, 267, 270, 281, 282, 324, 325, 336, 337, 338, 343, 344, 346, 359, 362, 364, 433, 439, 493, 494, 495, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 576, 606, 608, 621, 623, 627, 635, 636, 638, 642, 643], "allow": [42, 52, 98, 99, 102, 120, 154, 201, 261, 262, 278, 331, 338, 344, 433, 467, 612, 651], "almost": [37, 299, 623], "along": [3, 4, 17, 19, 20, 22, 23, 24, 25, 34, 35, 36, 42, 59, 78, 79, 80, 81, 92, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 116, 117, 118, 123, 127, 128, 142, 144, 149, 150, 158, 161, 163, 168, 170, 173, 174, 175, 200, 211, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 237, 238, 239, 243, 244, 249, 255, 257, 263, 264, 270, 272, 310, 313, 318, 319, 320, 321, 322, 323, 324, 336, 337, 341, 342, 343, 344, 345, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 429, 430, 431, 436, 440, 441, 455, 457, 462, 463, 471, 474, 476, 481, 483, 486, 497, 500, 504, 506, 507, 508, 571, 576, 578, 585, 586, 587, 589, 592, 599, 600, 603, 607, 608, 610, 612, 613, 616, 617, 618, 620, 623, 624, 627, 628, 631, 633, 634, 636, 638, 639, 640, 651], "alpha": [523, 528, 529, 545, 548], "alreadi": [4, 10, 44, 45, 56, 57, 58, 496, 497, 631], "also": [3, 4, 10, 14, 15, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 86, 88, 110, 157, 176, 182, 185, 194, 201, 205, 209, 217, 222, 226, 227, 228, 231, 240, 242, 243, 244, 245, 249, 251, 254, 257, 258, 259, 260, 261, 265, 274, 278, 289, 291, 292, 293, 294, 330, 331, 338, 342, 348, 349, 351, 352, 470, 491, 492, 502, 503, 560, 577, 583, 597, 609, 612, 629, 631, 651], "alter": 107, "altern": [3, 4, 17, 22, 96, 97, 98, 99, 111, 171, 339, 341, 343, 344, 347, 356, 357, 359, 361, 362, 363, 364, 484, 504, 608, 610, 636], "although": [21, 190, 221, 222, 223, 617], "alwai": [4, 10, 14, 15, 27, 28, 29, 30, 31, 33, 36, 43, 49, 50, 52, 53, 55, 107, 120, 174, 200, 213, 240, 246, 263, 300, 302, 362, 364, 433, 491, 580, 601, 608, 636, 639], "amax": [6, 61, 341], "ambigu": 651, "amin": [6, 347], "among": 200, "amplitud": 10, "an": [0, 3, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 118, 119, 120, 121, 122, 123, 126, 139, 142, 146, 148, 150, 153, 154, 157, 158, 159, 160, 164, 168, 171, 174, 175, 176, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 287, 289, 290, 291, 292, 293, 296, 297, 298, 301, 304, 308, 309, 310, 312, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 372, 431, 432, 433, 434, 435, 436, 439, 452, 455, 459, 461, 463, 466, 467, 470, 471, 472, 473, 477, 481, 484, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 517, 524, 529, 530, 532, 541, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 651, 658], "anaconda": 3, "analog": [215, 217, 219, 221, 222, 224], "analysi": 10, "analyt": [3, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "angl": [6, 10, 14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 100, 101, 269, 510, 511, 573, 574, 634, 658], "ani": [3, 6, 17, 18, 23, 24, 39, 43, 44, 45, 46, 47, 48, 52, 69, 70, 71, 85, 103, 106, 108, 120, 146, 182, 184, 190, 194, 201, 202, 215, 217, 221, 222, 227, 231, 232, 252, 253, 255, 257, 262, 264, 276, 284, 285, 307, 320, 324, 336, 338, 358, 360, 433, 459, 497, 522, 566, 579, 597, 602, 635, 651], "anoth": [4, 87, 88, 126, 150, 211, 221, 222, 246, 439, 463, 500, 507, 586], "answer": 524, "anti": [107, 232, 298, 597], "anyth": 188, "ap": 304, "apart": 620, "api": [0, 2, 3, 6, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 94, 96, 97, 98, 99, 103, 104, 106, 107, 120, 126, 177, 183, 186, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 296, 298, 305, 306, 311, 312, 321, 322, 323, 324, 325, 336, 338, 339, 346, 433, 439, 493, 494, 495, 496, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 618, 621, 623, 627, 635, 637, 638, 642, 643], "appear": [209, 238, 239, 631], "append": [0, 6, 64, 102, 108, 200, 202, 209, 220, 221, 222, 272, 291, 298], "appli": [24, 25, 34, 35, 36, 59, 73, 102, 201, 318, 353, 572, 581, 582, 600, 616, 620], "applic": [10, 179, 597], "apply_along_axi": [6, 25, 654], "apply_over_ax": [6, 24, 654], "approach": [157, 190, 220, 221, 222, 470], "appropri": [4, 34, 35, 79, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 256, 320, 354, 355, 358, 360, 518, 550, 553, 581, 612, 651], "approxim": [233, 620], "ar": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 110, 111, 120, 147, 148, 157, 176, 182, 183, 185, 190, 192, 194, 195, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 254, 255, 257, 258, 259, 260, 261, 262, 265, 271, 273, 274, 277, 278, 279, 280, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 316, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 460, 461, 470, 487, 489, 490, 491, 492, 497, 498, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 516, 518, 520, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 544, 545, 547, 548, 550, 553, 554, 556, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 581, 583, 584, 585, 588, 589, 590, 591, 592, 594, 595, 596, 599, 600, 602, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 616, 618, 620, 624, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 651, 658], "arang": [0, 6, 16, 25, 34, 35, 37, 42, 56, 57, 58, 59, 61, 77, 86, 101, 102, 103, 104, 105, 107, 110, 111, 130, 141, 174, 201, 205, 207, 208, 210, 211, 214, 236, 237, 240, 245, 253, 254, 255, 257, 261, 263, 270, 271, 272, 287, 288, 289, 290, 298, 305, 306, 310, 318, 321, 323, 324, 327, 328, 332, 333, 334, 335, 336, 338, 339, 341, 345, 347, 349, 352, 443, 454, 492, 495, 497, 500, 502, 503, 507, 511, 546, 577, 579, 580, 582, 585, 587, 592, 603, 609, 616, 618, 620, 623, 624, 627, 628, 629, 633, 639, 641, 643], "arbitrari": [51, 111, 184, 201, 271, 339, 582, 623, 627], "arbitrarili": 201, "arc": [21, 29, 31, 49, 53], "arcco": [6, 14, 15, 28, 29, 31, 32, 49, 53, 54, 90], "arccosh": [6, 14, 15, 27, 30, 33, 50, 55, 91], "arcsin": [6, 14, 27, 30, 31, 32, 49, 50, 53, 54, 596], "arcsinh": [6, 15, 28, 29, 33, 49, 50, 55, 598], "arctan": [6, 14, 21, 27, 29, 32, 33, 49, 53, 54, 55, 614], "arctan2": [6, 21, 29, 31, 49, 53, 54], "arctanh": [6, 15, 28, 30, 31, 32, 50, 53, 54, 55, 615], "area": 620, "arg": [24, 69, 70, 139, 287, 452, 517, 519, 549], "arg1": 286, "arg2": 286, "argmax": [0, 6, 35, 354, 508, 613, 651], "argmin": [6, 34, 355, 613, 651], "argpartit": [6, 36, 508, 613, 651], "argsort": [6, 499, 508, 591, 600, 613, 619, 651], "argument": [0, 10, 12, 13, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 80, 81, 86, 90, 91, 100, 101, 110, 111, 139, 154, 171, 182, 202, 206, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 254, 260, 265, 266, 269, 273, 285, 286, 289, 290, 291, 296, 298, 305, 309, 310, 311, 318, 321, 322, 327, 328, 329, 330, 331, 338, 339, 342, 348, 349, 350, 352, 452, 467, 484, 488, 489, 490, 497, 501, 502, 503, 505, 507, 510, 511, 549, 573, 574, 575, 577, 580, 582, 583, 584, 590, 594, 595, 596, 597, 598, 602, 607, 609, 614, 615, 616, 620, 629, 630, 638, 651, 658], "argwher": [6, 491], "ari": [42, 56, 57, 58, 174, 200, 263, 603, 639], "arithmet": [59, 255, 343, 344, 359, 362, 364, 501, 608, 610, 636, 644, 654], "around": [6, 112, 255, 497, 507, 572, 588], "arr": [23, 24, 45, 102, 105, 188, 190, 262, 272, 509, 546, 571, 572, 624, 628, 633], "arr2": [190, 633], "arr_t": [52, 120, 433], "arrai": [0, 2, 3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 168, 169, 170, 171, 173, 174, 175, 176, 186, 188, 190, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 372, 429, 430, 431, 432, 433, 434, 435, 436, 439, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 654, 658], "array2str": 6, "array_equ": [6, 18, 272], "array_equiv": [6, 40], "array_lik": [23, 39, 43, 44, 45, 46, 47, 48, 51, 59, 79, 85, 87, 103, 106, 200, 211, 252, 253, 255, 272, 276, 284, 318, 324, 336, 487, 497, 500, 507, 508, 512, 587, 593, 599, 612, 616, 635], "array_of_diagon": 107, "array_repr": 6, "array_split": [6, 80, 81, 603], "array_str": 6, "array_util": 72, "arrays_and_dtyp": 582, "art": 10, "asanyarrai": [6, 44, 45, 48, 579], "asarrai": [4, 6, 43, 45, 46, 48, 51, 487, 579, 599], "asarray_chkfinit": [6, 43, 44], "ascend": [300, 302, 591], "ascii": 179, "ascontiguousarrai": [6, 43, 44, 45, 48, 579], "asfarrai": [43, 44], "asfortranarrai": [6, 43, 44, 45, 46, 579], "asin": [6, 29], "asinh": [6, 30], "asmatrix": 6, "aspect": 190, "assembl": [80, 81, 175, 264, 589, 607, 633, 640], "assert": 344, "assign": [133, 157, 446, 470, 623, 627], "associ": [59, 261, 262, 651], "assum": [10, 59, 94, 202, 219, 225, 227, 298, 308, 312, 316, 338, 620], "astyp": [6, 88, 255, 491], "atan": [6, 31], "atan2": [6, 32], "atanh": [6, 33], "atleast_1d": [6, 57, 58, 209], "atleast_2d": [6, 56, 58, 209], "atleast_3d": [6, 56, 57, 209], "atol": [18, 274], "attain": 0, "attempt": [111, 309], "attribut": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 233, 253, 268, 313, 495, 643, 644], "automat": [261, 262], "avail": [2, 3, 4, 10, 89, 93, 177, 206, 350, 354, 355, 358, 360, 361, 644, 651], "averag": [6, 24, 143, 343, 344, 359, 456, 610, 654], "avg": 59, "avoid": [39, 44, 57, 58, 219, 225, 227, 580], "aweight": 93, "ax": [17, 22, 24, 25, 34, 35, 59, 92, 94, 95, 108, 111, 164, 171, 201, 209, 215, 217, 218, 221, 222, 223, 226, 227, 229, 231, 237, 257, 271, 296, 306, 310, 315, 318, 319, 320, 321, 323, 337, 339, 340, 341, 343, 344, 347, 351, 354, 355, 358, 359, 360, 361, 362, 363, 364, 477, 484, 496, 497, 499, 504, 576, 581, 585, 586, 587, 606, 608, 610, 611, 616, 617, 618, 619, 631, 636, 638], "axi": [17, 19, 20, 22, 23, 24, 25, 34, 35, 36, 42, 59, 78, 79, 80, 81, 92, 94, 95, 96, 97, 98, 99, 102, 107, 108, 114, 115, 116, 117, 118, 123, 127, 128, 136, 142, 143, 144, 148, 149, 150, 153, 158, 159, 160, 161, 163, 168, 171, 173, 174, 175, 200, 201, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 237, 238, 239, 243, 244, 249, 255, 257, 263, 264, 270, 272, 296, 304, 310, 318, 322, 323, 324, 336, 337, 339, 341, 342, 343, 344, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 431, 436, 440, 441, 449, 455, 456, 457, 461, 462, 463, 466, 471, 472, 473, 474, 476, 481, 484, 486, 497, 498, 499, 500, 504, 506, 507, 508, 571, 576, 578, 580, 581, 585, 586, 587, 589, 592, 599, 600, 603, 606, 607, 608, 610, 611, 612, 613, 616, 617, 618, 619, 620, 631, 633, 634, 636, 638, 639, 640, 651], "axis1": [107, 130, 164, 170, 443, 477, 483, 611, 618], "axis2": [107, 130, 164, 170, 443, 477, 483, 611, 618], "axisa": 94, "axisb": 94, "axisc": 94, "axiserror": [36, 600], "b": [10, 16, 18, 23, 24, 34, 35, 40, 41, 62, 68, 78, 80, 81, 87, 94, 97, 98, 99, 111, 131, 175, 176, 183, 189, 191, 194, 201, 202, 205, 247, 248, 258, 259, 264, 271, 272, 274, 278, 288, 292, 293, 296, 297, 304, 305, 306, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 332, 334, 339, 340, 341, 344, 347, 444, 490, 492, 496, 502, 503, 523, 582, 589, 602, 607, 616, 617, 625, 637, 638, 640, 658], "b_ax": [318, 616], "b_i": [322, 638], "back": [136, 249, 449, 571, 580, 581, 586, 625], "backend": [2, 256, 525, 527, 528, 538, 543, 559], "backward": [10, 52, 120, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 257, 433, 580, 585, 586], "bad": 534, "baltimor": 310, "bandlimit": 597, "bartlett": 6, "base": [0, 4, 60, 198, 201, 208, 211, 240, 255, 261, 262, 316, 326, 327, 328, 329, 330, 331, 336, 337, 339, 500, 502, 503, 507, 509, 638], "base_repr": [6, 60], "basic": [73, 201, 651, 654], "batch": 323, "bc": [297, 314], "bcde": 202, "becaus": [10, 17, 22, 219, 225, 227, 634, 651], "becom": [10, 16, 32, 54, 62, 64, 66, 67, 68, 86, 110, 171, 205, 240, 242, 243, 244, 245, 254, 258, 259, 260, 261, 265, 289, 290, 291, 292, 293, 330, 331, 332, 334, 335, 342, 348, 349, 352, 484, 490, 492, 502, 503, 577, 583, 609, 629], "been": [175, 266, 508, 586, 613], "befor": [4, 23, 25, 36, 80, 81, 95, 148, 159, 200, 220, 221, 222, 238, 239, 272, 320, 337, 341, 347, 362, 364, 461, 472, 497, 504, 576, 585, 586, 600, 608, 610, 617, 636, 637], "before_1": 497, "before_n": 497, "begin": [200, 202, 255, 324, 336, 497, 592], "behav": [272, 325, 507], "behavior": [36, 126, 229, 321, 353, 439, 581, 600, 617], "behind": [148, 461], "being": [3, 88, 176, 243, 244, 342, 348, 497], "belong": [109, 261], "below": [0, 4, 9, 14, 27, 29, 30, 33, 49, 50, 55, 88, 103, 106, 194, 225, 298, 308, 310, 321, 621, 622, 626, 634, 651], "bessel": 266, "best": 202, "beta": [6, 533], "between": [18, 26, 42, 72, 73, 88, 108, 200, 233, 248, 251, 257, 271, 272, 274, 324, 336, 497, 539, 553, 602, 609, 620, 634], "beyond": [4, 585], "bia": 93, "big": [179, 194], "bin": [60, 61, 109, 214, 216, 230, 261, 262, 560], "bin_edg": [261, 262], "binari": [60, 62, 63, 64, 65, 66, 67, 68, 247, 248, 250, 251, 273, 291, 583], "binary_repr": [6, 62, 63, 64, 65, 66, 67, 68, 273, 291, 583], "bincount": [6, 109, 261], "binomi": [6, 541], "bins_0": 262, "bins_1": 262, "bit": [60, 62, 63, 64, 65, 66, 67, 68, 179, 182, 183, 191, 233, 268, 273, 291, 332, 334, 335, 361, 363, 583, 595, 644, 654], "bitwis": [62, 66, 68], "bitwise_and": [6, 63, 65, 66, 68, 273, 332], "bitwise_count": 6, "bitwise_invert": [6, 65, 273], "bitwise_left_shift": [6, 291], "bitwise_not": 6, "bitwise_or": [6, 62, 63, 65, 68, 273, 334], "bitwise_right_shift": [6, 583], "bitwise_xor": [6, 62, 63, 65, 66, 273, 335], "biufcmmosuv": 189, "blackman": 6, "block": [6, 80, 81, 175, 232, 264, 288, 589, 607, 633, 640], "bmat": 6, "bool": [9, 17, 18, 21, 22, 34, 35, 36, 39, 40, 41, 44, 47, 52, 59, 73, 87, 88, 92, 95, 98, 99, 102, 109, 120, 176, 202, 205, 232, 246, 255, 258, 259, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 293, 294, 306, 308, 310, 312, 316, 323, 324, 336, 337, 341, 343, 344, 345, 347, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 433, 491, 492, 504, 576, 580, 592, 595, 600, 608, 610, 612, 631, 635, 636, 651], "bool_": 9, "boolean": [62, 63, 65, 66, 68, 87, 95, 98, 99, 102, 184, 185, 187, 189, 211, 240, 246, 266, 270, 273, 274, 277, 279, 280, 281, 282, 283, 287, 332, 334, 337, 338, 343, 344, 359, 361, 362, 364, 491, 500, 576, 608, 612, 636], "boolean_sequ": 287, "both": [10, 16, 18, 23, 32, 40, 41, 54, 59, 62, 64, 66, 67, 68, 77, 86, 94, 110, 111, 205, 221, 228, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 271, 274, 288, 289, 290, 291, 292, 293, 305, 310, 318, 330, 331, 332, 334, 335, 339, 342, 348, 349, 352, 363, 490, 492, 502, 503, 577, 580, 583, 609, 616, 618, 623, 625, 627, 629, 637, 638, 641], "bound": [507, 508, 572, 591, 612, 613], "boundari": [257, 507, 572], "branch": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "briefli": 651, "broadcast": [16, 17, 18, 22, 32, 34, 35, 41, 54, 59, 62, 64, 66, 67, 68, 69, 70, 71, 77, 86, 87, 92, 110, 201, 205, 211, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 281, 282, 289, 290, 291, 292, 293, 305, 306, 310, 312, 323, 330, 331, 332, 334, 335, 337, 339, 341, 342, 343, 344, 347, 348, 349, 352, 354, 355, 359, 361, 362, 363, 364, 490, 492, 502, 503, 504, 507, 508, 576, 577, 578, 583, 608, 609, 610, 613, 617, 629, 636, 638, 641], "broadcast_arrai": [6, 70, 71], "broadcast_shap": 6, "broadcast_to": [6, 69, 70, 617], "brought": 10, "buffer": [47, 96, 97, 98, 99, 112, 246, 247, 248, 250, 251, 325, 341, 347, 356, 357], "buffer_lik": 247, "buffererror": 246, "build": 654, "build_loc": 4, "built": [60, 176, 179, 180, 186, 195], "busday_count": 6, "busday_offset": 6, "byte": [6, 52, 72, 120, 140, 145, 176, 177, 179, 187, 189, 192, 194, 201, 247, 248, 325, 433, 453, 458], "byteord": 194, "byteswap": 6, "bz2": 325, "c": [2, 4, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 94, 99, 100, 101, 110, 111, 112, 120, 126, 136, 151, 154, 176, 177, 182, 183, 186, 189, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 252, 253, 254, 256, 258, 259, 260, 265, 266, 269, 271, 273, 277, 278, 279, 280, 288, 289, 290, 291, 292, 293, 297, 304, 309, 310, 314, 318, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 348, 349, 352, 433, 439, 449, 464, 467, 489, 490, 491, 492, 494, 495, 501, 502, 503, 505, 510, 511, 571, 572, 573, 575, 577, 579, 580, 581, 583, 584, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 616, 617, 629, 630, 631, 632, 638, 641, 642, 643, 658], "c_contigu": [46, 48, 126, 439, 579], "ca": 84, "calcul": [10, 12, 13, 16, 21, 32, 54, 59, 94, 95, 97, 99, 108, 110, 200, 201, 205, 207, 208, 210, 214, 223, 240, 241, 242, 245, 257, 262, 265, 299, 300, 301, 302, 304, 310, 312, 328, 330, 331, 337, 339, 343, 344, 349, 352, 359, 362, 364, 492, 497, 502, 503, 504, 576, 577, 608, 609, 629, 636, 637, 644, 658], "call": [10, 21, 23, 25, 32, 34, 35, 36, 46, 48, 54, 61, 176, 220, 221, 222, 225, 228, 249, 272, 299, 301, 309, 317, 338, 344, 372, 491, 606, 612, 617, 620, 658], "callabl": [249, 338], "cambridg": 10, "can": [0, 3, 4, 10, 16, 18, 23, 24, 25, 26, 32, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 85, 86, 88, 94, 103, 104, 106, 107, 110, 111, 120, 126, 131, 157, 159, 176, 182, 188, 190, 192, 194, 201, 202, 203, 204, 205, 212, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 230, 232, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 264, 265, 267, 270, 271, 273, 274, 276, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 304, 307, 308, 310, 312, 318, 320, 321, 324, 325, 330, 331, 332, 334, 335, 336, 338, 339, 342, 346, 348, 349, 352, 361, 363, 433, 439, 444, 470, 472, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 508, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 571, 572, 577, 579, 580, 583, 602, 609, 612, 613, 616, 618, 620, 621, 623, 627, 628, 629, 631, 635, 637, 641, 642, 643, 651, 658], "can_cast": [6, 654], "cannot": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 80, 81, 354, 355, 580, 603, 606, 607], "capabl": [26, 39, 43, 44, 46, 48, 59, 213, 255, 324, 336, 339, 638], "cardin": 597, "cardinali": 597, "care": [26, 299], "cartesian": 345, "case": [4, 17, 22, 26, 34, 35, 39, 43, 44, 45, 46, 48, 59, 85, 94, 96, 97, 98, 99, 103, 106, 108, 139, 201, 202, 203, 204, 212, 216, 219, 224, 228, 230, 247, 248, 249, 250, 252, 253, 255, 257, 267, 299, 313, 316, 318, 324, 325, 331, 336, 346, 356, 357, 361, 363, 452, 493, 494, 495, 504, 571, 580, 581, 610, 616, 621, 634, 635, 642, 643, 651], "cast": [17, 22, 52, 73, 80, 81, 87, 95, 96, 97, 98, 99, 120, 201, 240, 264, 272, 299, 337, 339, 343, 344, 353, 356, 357, 359, 361, 362, 363, 364, 433, 504, 576, 589, 607, 608, 610, 636, 638, 640], "cat": [524, 541], "cauchi": 560, "cbrt": [6, 604], "cdef": 202, "cdot": [318, 322, 616, 638], "cdoubl": 9, "ceil": [6, 38, 234, 241, 242, 584, 588, 630], "center": [215, 216, 217, 218, 222, 223, 230], "central": [257, 542, 543], "certain": [190, 338], "ch": 10, "chain": [111, 131, 201, 202, 444], "chang": [25, 52, 85, 94, 120, 136, 162, 171, 190, 194, 201, 211, 356, 357, 433, 449, 475, 484, 489, 500, 501, 507, 508, 509, 571, 580, 581, 586, 634, 654], "charact": [179, 180, 189, 248], "check": [17, 22, 43, 44, 45, 73, 219, 276, 278, 284, 294, 312, 315, 651], "check_valid": 540, "chi": [526, 542], "chisquar": 6, "choic": [6, 76, 121, 214, 215, 217, 220, 221, 222, 226, 227, 229, 231, 300, 302, 434], "choicelist": [79, 592], "choleski": 6, "choos": [6, 21, 29, 31, 49, 53, 79, 202, 592, 641, 651], "chosen": [37, 261, 631, 641], "chunk": 61, "circ": 658, "circl": [314, 620], "clamp": [507, 508, 612, 613], "clariti": 232, "class": [3, 4, 112, 176, 235, 247, 248, 249, 251, 270, 325, 488, 512, 518, 550, 621, 654], "classic": 201, "clear": [190, 290, 651], "clip": [6, 507, 508, 572, 612, 613, 651], "close": [14, 15, 21, 27, 28, 29, 31, 49, 51, 52, 53, 120, 201, 209, 269, 324, 433, 518, 522, 550, 573, 574, 584, 588, 620], "closer": 630, "cloud": 3, "cmake": 4, "co": [6, 14, 15, 27, 28, 29, 49, 91, 301, 596, 614, 620], "coars": [311, 496], "code": [47, 179, 180, 189, 194, 286, 579], "codeplai": 4, "coeffici": [88, 304, 315, 320], "coerc": [47, 247, 248, 249, 250, 251, 325], "coin": 524, "col": 270, "collaps": [136, 449, 631], "column": [6, 43, 44, 45, 46, 48, 51, 52, 78, 80, 81, 88, 96, 97, 98, 99, 107, 120, 175, 212, 232, 238, 239, 257, 263, 264, 267, 299, 300, 304, 309, 313, 315, 316, 433, 571, 572, 579, 589, 603, 607, 621, 623, 627, 632, 635, 640], "column_stack": [6, 80, 81, 175, 264, 589, 607, 640], "com": 4, "combin": [0, 176, 185, 209, 217, 222, 227, 231, 257], "combinatori": 202, "come": 631, "comma": [176, 201], "command": 4, "common": [16, 32, 54, 62, 64, 66, 67, 68, 86, 110, 205, 220, 221, 222, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 289, 290, 291, 292, 293, 318, 330, 331, 332, 334, 335, 342, 348, 349, 352, 490, 491, 492, 502, 503, 577, 583, 609, 616, 629], "common_typ": 6, "compani": [524, 541], "compar": [18, 36, 40, 205, 243, 244, 262, 274, 311, 342, 348, 600], "comparison": [2, 18, 205, 258, 259, 292, 293, 492, 644, 654], "compat": [3, 4, 10, 17, 22, 52, 59, 94, 96, 97, 98, 99, 107, 120, 296, 298, 305, 306, 311, 312, 321, 322, 323, 337, 339, 343, 344, 358, 359, 360, 362, 364, 433, 496, 576, 580, 608, 618, 636, 637, 638, 654], "compil": [4, 176, 177, 186, 256, 579], "complement": [60, 634], "complementari": [242, 634], "complet": [3, 4, 202, 248, 249, 313, 586, 651], "complex": [10, 12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 39, 40, 49, 50, 53, 54, 55, 73, 95, 111, 124, 125, 189, 202, 206, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 240, 243, 244, 269, 275, 276, 283, 284, 290, 299, 300, 301, 302, 305, 313, 314, 316, 322, 337, 339, 342, 348, 353, 362, 364, 437, 438, 505, 573, 574, 576, 601, 608, 631, 636, 637, 638, 651, 654], "complex128": [9, 59, 582], "complex64": [9, 59, 72, 158, 240, 471], "compliant": 112, "complic": [201, 658], "compon": [10, 40, 94, 218, 223, 230, 233, 269, 308, 318, 353, 573, 616], "compos": 86, "composit": [97, 99, 288, 610, 620], "compress": [6, 211, 592, 612, 651], "comput": [4, 10, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 59, 61, 62, 63, 65, 66, 68, 74, 82, 83, 88, 90, 91, 95, 96, 97, 98, 99, 108, 109, 201, 207, 208, 209, 210, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 241, 257, 258, 259, 260, 261, 262, 269, 270, 273, 288, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 339, 343, 344, 349, 356, 357, 358, 359, 360, 361, 362, 363, 364, 489, 496, 501, 505, 573, 575, 576, 577, 584, 588, 590, 594, 595, 596, 598, 604, 608, 610, 614, 615, 616, 620, 623, 627, 636, 638], "compute_uv": [295, 316, 317], "concat": [6, 81], "concaten": [6, 78, 80, 175, 264, 272, 589, 603, 607, 613, 633, 640], "concept": [26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643, 651], "cond": [6, 303], "condit": [37, 52, 79, 111, 120, 123, 211, 295, 303, 309, 433, 436, 491, 500, 507, 509, 592, 641], "condlist": 592, "confus": 245, "conj": [6, 83, 219, 269, 294, 299, 505], "conjug": [6, 10, 82, 111, 124, 225, 228, 269, 294, 299, 300, 301, 302, 305, 322, 339, 437, 505, 637, 638], "consecut": [108, 200, 257], "conserv": 345, "consid": [18, 26, 39, 40, 43, 44, 46, 48, 202, 230, 255, 274, 277, 300, 302, 308, 324, 336, 339, 518, 550, 581, 602, 631, 638], "consist": [40, 41, 200, 214, 215, 217, 220, 221, 222, 226, 227, 229, 231, 248, 262, 318, 320, 324, 613, 616], "constant": [9, 183, 257, 497], "constant_valu": 497, "constraint": 59, "construct": [43, 44, 45, 76, 79, 103, 106, 107, 121, 176, 212, 247, 248, 249, 250, 251, 267, 287, 290, 325, 346, 434, 493, 592, 597, 617, 618, 641, 644], "constructor": 651, "consum": [145, 458], "contain": [10, 12, 13, 14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 45, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 86, 87, 88, 90, 91, 94, 95, 107, 110, 154, 176, 184, 205, 207, 208, 210, 215, 216, 217, 220, 225, 228, 230, 236, 240, 241, 242, 243, 244, 245, 246, 251, 256, 257, 258, 259, 261, 262, 265, 269, 270, 273, 291, 292, 293, 296, 298, 300, 313, 316, 318, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 342, 343, 348, 349, 352, 354, 355, 358, 359, 360, 362, 364, 467, 489, 491, 492, 499, 501, 502, 503, 505, 512, 573, 575, 576, 577, 583, 584, 588, 590, 594, 595, 596, 597, 598, 604, 605, 608, 609, 614, 615, 616, 619, 623, 624, 627, 628, 629, 630, 636, 651], "content": [46, 119, 344, 432, 559], "context": 10, "contigu": [43, 44, 45, 46, 48, 72, 111, 151, 201, 278, 309, 464, 571, 579, 580], "continu": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 520, 554, 597], "contourf": 345, "contract": [201, 202, 318, 616], "contrari": [296, 298, 305, 321, 322], "contrast": [201, 507], "contribut": [10, 59, 261, 262], "control": [4, 52, 73, 80, 81, 87, 120, 201, 264, 339, 433, 589, 607, 638, 640], "conveni": [131, 171, 444, 484, 522], "convent": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 111, 201, 202, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 271, 305, 318, 320, 339, 496, 616, 638], "convers": [52, 120, 201, 433, 644], "convert": [23, 34, 35, 39, 43, 44, 45, 46, 47, 48, 51, 56, 57, 58, 85, 100, 101, 103, 106, 176, 201, 202, 209, 252, 253, 255, 272, 276, 284, 324, 336, 510, 511, 572, 579, 632, 634, 635], "convolut": [10, 84, 89], "convolv": [6, 89], "coolei": 10, "coordin": [92, 249, 257, 270, 287, 345, 572, 632], "copi": [6, 23, 26, 36, 39, 40, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 79, 87, 102, 103, 104, 106, 107, 119, 120, 136, 139, 148, 154, 157, 176, 203, 204, 211, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 272, 324, 325, 336, 338, 344, 345, 346, 353, 372, 432, 433, 449, 452, 461, 467, 470, 493, 494, 495, 498, 500, 501, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 571, 579, 580, 581, 591, 600, 606, 621, 622, 623, 626, 627, 635, 642, 643, 651], "copysign": [6, 489, 501], "copyto": [6, 126, 211, 439, 500], "core": [3, 201, 638, 651], "corner": [215, 217, 221, 222, 497], "corrcoef": [6, 93], "correct": [12, 13, 14, 15, 16, 21, 23, 27, 28, 29, 30, 31, 32, 33, 37, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 80, 81, 82, 83, 86, 90, 91, 100, 101, 110, 205, 207, 208, 210, 213, 219, 225, 227, 234, 240, 241, 242, 243, 244, 245, 254, 258, 259, 260, 265, 266, 269, 273, 277, 279, 280, 289, 290, 291, 292, 293, 315, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 348, 349, 352, 489, 490, 492, 501, 502, 503, 505, 510, 511, 573, 575, 577, 579, 583, 584, 588, 590, 594, 595, 596, 597, 598, 602, 604, 605, 607, 609, 614, 615, 629, 630], "correctli": [21, 29, 31, 34, 35, 49, 53, 92, 306, 310, 323, 341, 347, 354, 355, 361, 363, 491, 504, 610], "correl": [6, 88, 654], "correspond": [6, 10, 26, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 52, 77, 80, 81, 85, 100, 101, 103, 104, 106, 107, 120, 126, 132, 174, 203, 204, 212, 215, 216, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 263, 267, 270, 287, 296, 299, 300, 318, 322, 324, 325, 336, 338, 339, 346, 433, 439, 445, 493, 494, 495, 499, 510, 511, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 585, 592, 593, 603, 608, 616, 619, 620, 621, 623, 627, 635, 636, 638, 639, 642, 643, 651], "correspondingli": [10, 603], "cosh": [6, 15, 28, 90, 598, 615], "cosin": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 596, 598, 614, 615], "cost": [201, 202], "costli": 202, "could": [159, 219, 225, 227, 472], "count": [17, 22, 61, 92, 109, 184, 202, 237, 247, 248, 250, 251, 257, 261, 262, 491, 504, 524, 599, 610, 631, 644, 654], "count_nonzero": [6, 491], "counterclockwis": [238, 239, 587], "counterpart": [10, 219, 225, 227, 651], "cov": [6, 88, 540], "covari": [88, 93], "cover": [623, 627, 654], "cpu": [4, 26, 39, 43, 44, 45, 46, 48, 85, 89, 93, 103, 106, 203, 204, 206, 212, 216, 230, 247, 248, 249, 250, 252, 253, 255, 267, 324, 325, 336, 346, 350, 361, 493, 494, 495, 621, 635, 642, 643], "creat": [3, 4, 26, 39, 41, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 105, 106, 107, 120, 126, 176, 202, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 353, 433, 439, 493, 494, 495, 497, 508, 512, 517, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 618, 621, 623, 624, 627, 628, 635, 642, 643, 651, 654], "creation": [190, 202, 644, 651, 654, 658], "crop": [214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231], "cross": [6, 89, 287], "csingl": 9, "ct": 10, "ctype": 579, "cube": [74, 240, 604], "cubic": 202, "cuda": 4, "cumprod": [6, 98, 356, 651], "cumsum": [6, 99, 108, 357, 610, 620, 651], "cumul": [95, 96, 97, 98, 99, 108, 127, 128, 356, 357, 440, 441, 610, 620], "cumulative_prod": [6, 96], "cumulative_sum": [6, 97], "cupi": [2, 644], "current": [10, 12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 86, 90, 91, 100, 101, 110, 157, 190, 194, 202, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 248, 254, 260, 262, 265, 267, 273, 289, 290, 291, 327, 328, 329, 330, 331, 342, 348, 349, 350, 352, 470, 489, 490, 497, 501, 502, 503, 505, 510, 511, 575, 577, 579, 583, 584, 590, 594, 595, 596, 598, 602, 609, 614, 615, 629, 630], "curv": 620, "custom": 651, "customarili": 10, "cut": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 304, 638], "cutoff": 312, "cycl": [216, 230, 287, 581], "cyclic": 507, "cython": 4, "d": [0, 17, 22, 24, 25, 26, 59, 78, 79, 80, 81, 88, 96, 97, 103, 104, 105, 106, 107, 111, 136, 175, 180, 212, 216, 218, 223, 230, 232, 236, 238, 239, 251, 263, 264, 267, 271, 287, 297, 298, 300, 301, 305, 309, 310, 314, 318, 321, 339, 345, 356, 357, 363, 449, 491, 502, 503, 504, 507, 527, 571, 580, 589, 591, 593, 607, 610, 612, 616, 617, 618, 625, 631, 635, 638, 640, 651], "d0": [519, 549, 551], "d1": [519, 549, 551], "d3": 104, "data": [1, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 154, 171, 176, 177, 179, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 219, 225, 227, 233, 234, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 279, 280, 281, 282, 284, 289, 290, 291, 292, 293, 298, 304, 311, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 344, 348, 349, 350, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 432, 433, 467, 484, 487, 489, 490, 492, 494, 495, 500, 501, 502, 503, 505, 507, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 602, 604, 605, 606, 607, 608, 609, 613, 614, 615, 618, 621, 629, 630, 636, 638, 640, 641, 642, 643, 644, 654], "datatyp": [190, 308], "date": 4, "datetim": 189, "datetime_as_str": 6, "datetime_data": 6, "dcmake_c_compil": 4, "dcmake_cxx_compil": 4, "ddof": [93, 161, 173, 362, 364, 474, 486, 608, 636], "decai": 535, "decim": [38, 60, 155, 233, 234, 468, 584, 588], "decomposit": [294, 303, 308, 312, 316, 317, 654], "decompress": 325, "decreas": [109, 620], "decreasingli": [10, 215, 217, 221, 222], "deem": 246, "def": [0, 24, 497], "default": [3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 120, 126, 136, 194, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 272, 273, 274, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 302, 304, 306, 308, 309, 310, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 449, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 516, 522, 526, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 561, 563, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 651], "default_rng": 6, "defg": 202, "defici": 308, "defin": [10, 32, 54, 94, 102, 182, 183, 186, 204, 214, 243, 244, 253, 260, 261, 262, 272, 296, 298, 310, 322, 342, 348, 353, 495, 501, 574, 587, 638, 643, 651], "definit": [94, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 241, 294, 620], "deg": [21, 511], "deg2rad": [6, 510, 511, 634], "degre": [6, 21, 100, 362, 364, 510, 511, 564, 587, 608, 634, 636, 658], "del": 658, "delet": [6, 23, 272], "delta": [10, 362, 364, 608, 634, 636], "demonstr": [0, 4, 183], "denot": [266, 322, 638], "dens": [270, 287, 346], "densiti": 261, "depend": [4, 25, 37, 79, 107, 213, 219, 225, 227, 298, 300, 304, 310, 313, 315, 316, 324, 361, 363, 592, 641], "depth": [78, 80, 81, 174, 175, 264, 589, 603, 607, 640], "deriv": 257, "descend": 316, "describ": [95, 176, 182, 183, 193, 196, 198, 310, 321, 337, 576, 654], "descript": [95, 181, 220, 222, 261, 337, 576, 651], "design": [10, 60], "desir": [26, 39, 43, 44, 46, 48, 51, 71, 203, 204, 212, 220, 221, 222, 252, 253, 255, 267, 324, 336, 494, 495, 571, 617, 621, 642, 643], "destin": [80, 81, 264, 351, 507, 508, 589, 607, 613, 640], "destruct": 658, "det": [6, 314], "detail": [38, 215, 217, 221, 222, 226, 227, 229, 231, 246, 306, 323, 588, 623, 624, 627, 628, 631, 651], "determin": [14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 74, 86, 90, 91, 100, 101, 110, 207, 208, 210, 242, 243, 244, 245, 248, 249, 251, 265, 291, 297, 298, 304, 313, 314, 321, 326, 327, 328, 329, 330, 331, 332, 334, 335, 339, 342, 348, 349, 352, 490, 502, 503, 510, 511, 572, 575, 577, 583, 590, 592, 594, 596, 597, 598, 602, 604, 605, 609, 614, 615, 618, 629, 630, 632, 638], "devel": 4, "develop": [3, 4], "deviat": [161, 343, 359, 362, 364, 474, 519, 537, 544, 608, 636], "devic": [0, 2, 3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 59, 85, 95, 103, 104, 106, 112, 120, 126, 169, 201, 203, 204, 212, 213, 216, 230, 234, 246, 247, 248, 249, 250, 251, 252, 253, 255, 266, 267, 270, 324, 325, 336, 337, 338, 339, 343, 344, 346, 359, 362, 364, 433, 439, 482, 493, 494, 495, 512, 514, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 576, 606, 608, 621, 623, 627, 635, 636, 638, 642, 643], "df": [526, 542, 564, 565], "dfden": [530, 543], "dfnum": [530, 543], "dft": [10, 214, 219, 220, 224, 225, 228], "di": [104, 105], "diag": [6, 24, 79, 106, 107, 201, 212, 238, 239, 267, 299, 301, 316, 592, 618], "diag_indic": [6, 105, 232], "diag_indices_from": [6, 104, 232], "diagflat": [6, 103, 107, 618], "diagon": [6, 79, 103, 104, 105, 106, 170, 201, 212, 232, 267, 294, 300, 301, 302, 321, 338, 483, 592, 618, 621, 622, 623, 624, 626, 627, 628, 651], "dice": 539, "dict": [176, 497], "dictionari": [176, 182, 190], "diff": [6, 97, 99, 200, 257, 261], "differ": [3, 10, 18, 25, 26, 39, 42, 43, 44, 45, 46, 48, 59, 85, 95, 97, 98, 99, 103, 106, 108, 126, 176, 180, 190, 194, 195, 200, 203, 204, 212, 215, 216, 220, 221, 223, 226, 229, 230, 233, 238, 239, 240, 247, 248, 249, 250, 252, 253, 255, 257, 267, 272, 274, 302, 310, 321, 324, 325, 336, 337, 339, 346, 439, 493, 494, 495, 500, 502, 503, 508, 576, 581, 587, 609, 613, 621, 623, 627, 634, 635, 642, 643, 654], "differenti": 597, "digit": [6, 10, 61, 233, 261], "dim": [18, 572], "dimens": [17, 22, 23, 24, 25, 34, 35, 39, 56, 57, 58, 59, 78, 80, 81, 87, 92, 93, 94, 98, 99, 104, 107, 108, 136, 141, 146, 157, 174, 178, 193, 198, 209, 221, 222, 234, 238, 239, 257, 264, 270, 271, 287, 296, 298, 306, 308, 310, 313, 317, 318, 321, 322, 323, 337, 340, 341, 343, 344, 345, 346, 347, 351, 354, 355, 358, 359, 360, 361, 362, 363, 364, 449, 454, 459, 470, 487, 488, 491, 493, 504, 508, 520, 522, 549, 552, 554, 555, 557, 571, 572, 576, 580, 587, 593, 603, 606, 607, 608, 610, 611, 612, 613, 616, 617, 618, 623, 624, 627, 628, 631, 632, 633, 636, 638, 639, 651, 654], "dimension": [2, 4, 24, 36, 61, 84, 89, 92, 95, 98, 99, 102, 104, 105, 106, 107, 108, 109, 112, 160, 200, 201, 214, 215, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 247, 248, 250, 257, 263, 270, 272, 287, 296, 304, 311, 313, 315, 319, 320, 337, 341, 345, 346, 347, 354, 355, 358, 360, 362, 364, 473, 487, 488, 493, 496, 504, 576, 600, 608, 610, 612, 617, 620, 631, 636, 637, 639, 644], "direct": [10, 94, 108, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 238, 239, 257, 296, 490, 587], "directli": [181, 182, 249, 270, 336, 491, 613], "directori": 256, "dirichlet": 6, "discard": 630, "discont": 634, "discontinu": 634, "discret": [3, 84, 89, 97, 99, 108, 200, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 257, 518, 522, 597, 644, 654], "dispers": 567, "displac": [162, 475], "disregard": 581, "distanc": [257, 602], "distinct": [243, 244, 342, 348, 581], "distinguish": 184, "distribut": [3, 4, 336, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 553, 554, 556, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 654], "divid": [6, 42, 174, 175, 242, 245, 263, 349, 577, 603, 629, 639], "divis": [110, 242, 245, 349, 502, 503, 577, 603, 629, 630], "divisor": [254, 289, 362, 364, 608, 636], "divmod": [6, 651], "dlpack": 246, "dmlc": 246, "dn": [519, 549, 551], "do": [3, 4, 191, 338, 344, 524, 586, 620], "docstr": 651, "document": [0, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 136, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 168, 170, 171, 173, 174, 175, 183, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 449, 451, 452, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651], "doe": [23, 26, 42, 73, 79, 102, 139, 201, 211, 213, 228, 243, 244, 246, 272, 313, 353, 356, 357, 452, 500, 581, 603, 612], "domain": [10, 219, 224], "done": [3, 52, 120, 201, 320, 433, 631, 634], "dot": [6, 201, 202, 271, 294, 301, 303, 309, 312, 313, 315, 316, 318, 319, 320, 322, 339, 616, 637, 638], "doubl": [9, 318, 535, 616], "down": 239, "dp": [110, 297, 300, 314, 315, 502, 503, 609, 629], "dpc": 4, "dpcpp": 4, "dpcpp_linux": 4, "dpcpp_win": 4, "dpctl": [0, 4, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 112, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 354, 355, 358, 360, 361, 433, 439, 493, 494, 495, 506, 512, 514, 515, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "dpnp": [0, 2, 3, 4, 10, 644, 651, 654, 655, 658], "dpnp_arrai": [26, 39, 43, 44, 45, 46, 48, 52, 85, 103, 104, 106, 203, 204, 212, 216, 230, 233, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 268, 270, 324, 325, 336, 338, 346, 365, 433, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643, 644], "dpnp_iface_arraycr": [346, 493], "draw": [516, 517, 518, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 556, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569], "drawn": [79, 516, 518, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 544, 545, 547, 548, 550, 553, 556, 562, 563, 564, 565, 566, 567, 568, 569, 570, 592], "drill": [524, 541], "driver": 2, "drop": [3, 190], "dsplit": [6, 80, 81, 175, 603], "dst": 87, "dstack": [6, 78, 80, 81, 264, 589, 603, 607, 640], "dt": [179, 181, 182, 186, 188, 189, 190, 192, 195, 196, 620], "dt2": 190, "dtype": [0, 9, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 110, 112, 120, 127, 128, 143, 149, 158, 161, 163, 170, 173, 201, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 264, 265, 267, 268, 270, 272, 273, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 309, 312, 316, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 440, 441, 456, 462, 471, 474, 476, 483, 486, 489, 490, 492, 494, 495, 501, 502, 503, 504, 505, 510, 511, 516, 518, 522, 544, 550, 566, 575, 576, 577, 579, 582, 583, 584, 588, 589, 590, 594, 595, 596, 597, 598, 601, 602, 604, 605, 607, 608, 609, 610, 612, 614, 615, 618, 621, 622, 626, 629, 630, 636, 638, 639, 640, 642, 643, 651], "due": [228, 658], "dump": 6, "dx": [257, 620], "dy": 257, "dz": 257, "e": [9, 10, 15, 28, 30, 50, 64, 95, 96, 98, 107, 181, 203, 204, 209, 212, 215, 219, 220, 221, 222, 225, 227, 228, 240, 248, 252, 253, 257, 267, 291, 299, 314, 319, 323, 326, 344, 494, 495, 522, 574, 578, 581, 611, 621, 633, 642, 643], "ea": 202, "each": [0, 12, 13, 14, 15, 16, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 42, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 82, 83, 86, 88, 90, 91, 96, 97, 98, 99, 104, 107, 109, 110, 155, 174, 180, 182, 195, 202, 205, 207, 208, 210, 215, 217, 219, 221, 222, 225, 226, 227, 229, 231, 238, 239, 240, 241, 242, 245, 249, 257, 258, 259, 261, 262, 263, 266, 269, 273, 277, 279, 280, 287, 291, 292, 293, 296, 299, 300, 301, 302, 304, 317, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 349, 351, 352, 353, 468, 488, 489, 491, 492, 497, 501, 502, 503, 505, 508, 524, 541, 572, 573, 575, 577, 578, 581, 583, 584, 585, 588, 590, 594, 595, 596, 598, 603, 604, 605, 607, 609, 613, 614, 615, 617, 620, 623, 624, 627, 628, 629, 630, 631, 632, 638, 639, 651], "easier": 612, "easiest": [4, 497], "easili": [0, 262], "edg": [77, 109, 261, 262, 497], "edge_ord": 257, "ediff1d": [6, 108, 257], "effect": [202, 240, 243, 244, 342, 348, 502, 503, 634], "effici": [10, 214, 228, 248, 308, 312, 316], "efgh": 202, "eig": [6, 300, 301, 302], "eigenvalu": [299, 300, 301, 302, 654], "eigenvector": [299, 300, 301, 302], "eigh": [6, 299, 301, 302], "eight": 310, "eigval": [6, 299, 300, 302], "eigvalsh": [6, 299, 300, 301], "einstein": [111, 201, 202, 271, 318, 320, 339, 496, 616, 638], "einsum": [6, 111, 202, 271, 318, 320, 339, 496, 616, 638], "einsum_path": [6, 201], "either": [25, 40, 41, 48, 59, 94, 95, 107, 179, 190, 215, 217, 219, 221, 222, 225, 227, 229, 231, 232, 257, 266, 271, 298, 300, 302, 310, 313, 337, 354, 355, 358, 360, 361, 363, 572, 576, 581, 591, 592, 613, 620], "element": [4, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 45, 49, 50, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 79, 82, 83, 86, 87, 90, 91, 95, 96, 97, 98, 99, 102, 105, 107, 108, 109, 110, 114, 115, 124, 125, 127, 128, 132, 133, 136, 139, 140, 143, 145, 147, 148, 153, 154, 155, 156, 158, 161, 162, 168, 173, 176, 178, 182, 188, 200, 202, 205, 207, 208, 210, 211, 212, 213, 215, 217, 221, 222, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 257, 258, 259, 260, 261, 262, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 296, 298, 301, 307, 318, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 347, 348, 349, 350, 352, 353, 356, 357, 358, 360, 361, 362, 363, 364, 427, 428, 437, 438, 440, 441, 445, 446, 449, 452, 453, 456, 458, 460, 461, 466, 467, 468, 469, 471, 474, 475, 481, 486, 488, 489, 490, 491, 492, 500, 501, 502, 503, 504, 505, 507, 509, 571, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 605, 608, 609, 610, 612, 614, 615, 616, 617, 618, 620, 622, 624, 626, 628, 629, 630, 631, 632, 634, 636, 638, 641, 651, 654, 658], "element_count": [158, 471, 599], "elimin": 24, "ellipsi": 201, "els": [0, 179, 194, 314, 370], "elsewher": [212, 267, 621, 641], "empti": [4, 6, 39, 133, 204, 215, 217, 221, 222, 226, 227, 229, 231, 248, 252, 253, 304, 446, 494, 495, 497, 500, 603, 642, 643, 651], "empty_lik": [6, 39, 203, 253, 495, 643], "enabl": [232, 308, 312, 316], "encount": [356, 357, 358, 360, 592], "end": [23, 26, 72, 102, 107, 198, 200, 202, 220, 255, 272, 324, 336, 497], "end_tim": 0, "end_valu": 497, "endian": [179, 194], "endpoint": [26, 255, 324, 336, 620], "engin": 558, "enlarg": 581, "enough": 261, "ensur": 579, "entir": [59, 95, 219, 261, 262, 337, 343, 358, 359, 360, 362, 364, 497, 576, 608, 636], "entiti": 581, "entri": [42, 79, 102, 160, 174, 182, 203, 211, 219, 225, 227, 232, 237, 238, 239, 263, 473, 603, 606, 638, 639], "enumer": 246, "env": 4, "environ": 4, "ep": [233, 308, 312, 490, 574, 602], "epsilon": [308, 574], "epsneg": 233, "equal": [6, 17, 18, 22, 24, 36, 40, 41, 42, 59, 61, 64, 67, 80, 81, 89, 93, 97, 99, 148, 174, 212, 255, 257, 258, 259, 261, 262, 263, 264, 274, 276, 284, 286, 291, 292, 293, 298, 307, 312, 313, 320, 324, 336, 349, 461, 492, 497, 522, 532, 566, 577, 583, 584, 588, 589, 594, 597, 600, 603, 606, 607, 621, 623, 627, 633, 639, 640], "equal_nan": [18, 40, 274, 631], "equat": [304, 315, 319, 320, 654], "equiv": [52, 73, 80, 81, 87, 120, 201, 264, 307, 339, 433, 589, 607, 638, 640], "equival": [10, 16, 17, 19, 20, 22, 24, 25, 34, 35, 36, 38, 41, 59, 60, 79, 85, 94, 95, 100, 101, 102, 110, 111, 114, 115, 130, 146, 154, 157, 171, 174, 175, 202, 209, 211, 236, 243, 244, 245, 263, 287, 317, 318, 319, 323, 337, 340, 349, 352, 372, 427, 428, 443, 459, 467, 470, 484, 487, 491, 496, 499, 501, 510, 511, 518, 550, 576, 577, 580, 587, 588, 593, 600, 609, 610, 612, 616, 619, 629, 631, 633, 638, 639, 651, 658], "error": [60, 95, 174, 201, 206, 219, 224, 263, 299, 337, 572, 576, 603, 606, 639, 644, 651], "essenti": 4, "estim": [93, 262, 524, 541, 620], "et": 10, "etc": [10, 39, 44, 186, 215, 217, 221, 222, 226, 227, 229, 231, 541], "euclidean": 304, "euler_gamma": 9, "evalu": [17, 18, 22, 114, 115, 201, 202, 205, 266, 276, 278, 284, 318, 320, 345, 427, 428, 496, 592, 616], "even": [10, 141, 179, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 276, 278, 284, 344, 454, 497, 584, 588], "evenli": [26, 255, 324, 336, 584, 620], "event": 331, "everi": [60, 72, 227, 508, 613], "everywher": [225, 597], "exact": [211, 309, 500], "exactli": [10, 51, 251, 315, 518, 550, 592], "examin": 304, "exampl": [2, 3, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 126, 130, 131, 133, 136, 138, 139, 141, 146, 148, 152, 154, 157, 158, 159, 162, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 443, 444, 446, 449, 451, 452, 454, 459, 461, 465, 467, 470, 471, 472, 475, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 658], "exce": [331, 603], "except": [4, 12, 13, 14, 15, 16, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 80, 81, 82, 83, 85, 86, 90, 91, 100, 101, 108, 109, 110, 111, 120, 139, 203, 204, 205, 207, 208, 210, 212, 213, 226, 227, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 263, 264, 265, 267, 273, 277, 279, 280, 289, 290, 291, 292, 293, 309, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 347, 348, 349, 352, 358, 359, 360, 361, 362, 363, 364, 433, 452, 489, 490, 492, 494, 495, 501, 502, 503, 504, 505, 510, 511, 571, 575, 577, 578, 579, 583, 584, 590, 594, 595, 596, 598, 600, 602, 603, 604, 605, 608, 609, 610, 614, 615, 629, 630, 636, 638, 642, 643, 654], "exclud": [12, 13, 23, 324, 522, 566], "exclus": [518, 550], "execut": [3, 4, 24, 43, 44, 45, 89, 93, 206, 249, 350, 361, 525, 527, 528, 538, 543, 559, 658], "executor": 0, "exist": [10, 78, 80, 81, 175, 181, 209, 246, 264, 272, 589, 603, 607, 633, 640, 654], "exp": [6, 10, 208, 210, 214, 314, 328, 330, 337], "exp2": [6, 207, 210], "expand": [108, 209], "expand_dim": [6, 34, 35], "expect": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 82, 83, 86, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 110, 111, 190, 205, 207, 208, 210, 213, 225, 234, 240, 241, 242, 243, 244, 245, 254, 258, 259, 260, 265, 266, 269, 273, 274, 277, 279, 280, 289, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 342, 343, 344, 347, 348, 349, 352, 356, 357, 359, 361, 362, 363, 364, 489, 490, 492, 501, 502, 503, 504, 505, 510, 511, 573, 575, 576, 577, 583, 584, 588, 590, 594, 595, 596, 597, 598, 602, 604, 605, 608, 609, 610, 614, 615, 629, 630, 636, 641], "explain": [217, 222, 227, 231, 651], "explan": 183, "explicit": 201, "explicitli": [107, 215, 217, 221, 222, 226, 227, 229, 231], "exploit": [10, 228], "explor": [202, 524, 541], "expm1": [6, 207, 208, 328], "expon": [10, 207, 208, 210, 240, 290, 307, 330, 331, 337, 502, 503, 548, 654], "exponenti": [6, 10, 202, 330, 331, 337, 535, 561], "expos": [247, 651], "express": [10, 14, 15, 24, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 201, 202, 290, 325, 658], "extend": [10, 186, 288, 497, 651], "extens": [0, 1, 3, 4, 9, 256, 325, 644], "extra": [198, 225, 251], "extract": [6, 79, 103, 106, 107, 201, 212, 236, 267, 270, 338, 500, 592, 612, 618], "extrapol": 581, "extrema": 654, "ey": [6, 72, 82, 83, 92, 131, 221, 222, 243, 244, 267, 271, 288, 303, 307, 308, 319, 320, 321, 335, 342, 348, 444, 593, 618], "f": [0, 6, 10, 12, 13, 14, 15, 16, 21, 24, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 110, 120, 126, 136, 189, 201, 203, 204, 205, 207, 208, 210, 212, 213, 216, 228, 230, 234, 240, 241, 242, 243, 244, 245, 252, 253, 254, 257, 258, 259, 260, 265, 266, 269, 273, 277, 278, 279, 280, 289, 290, 291, 292, 293, 307, 310, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 348, 349, 352, 433, 439, 449, 489, 490, 492, 494, 495, 501, 502, 503, 505, 510, 511, 543, 571, 572, 573, 575, 577, 579, 580, 583, 584, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 625, 629, 630, 632, 638, 641, 642, 643], "f0": 176, "f1": 176, "f2": 176, "f4": 73, "f8": [73, 176, 181, 186, 189], "f_contigu": [46, 48, 278, 579], "f_k": 10, "fab": [6, 12, 13], "fact": 301, "factor": [10, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 294, 313], "fail": [157, 470, 524], "fallback": [299, 301, 525, 527, 528, 538, 543, 559], "fals": [17, 18, 19, 20, 21, 22, 34, 35, 36, 39, 40, 41, 44, 46, 48, 52, 59, 62, 63, 65, 68, 69, 71, 73, 79, 85, 88, 92, 93, 95, 97, 98, 99, 102, 109, 114, 115, 116, 117, 120, 142, 143, 144, 149, 161, 163, 173, 176, 201, 202, 204, 205, 211, 232, 246, 249, 253, 255, 258, 259, 261, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 292, 293, 294, 295, 306, 308, 310, 312, 316, 317, 323, 324, 332, 333, 334, 335, 336, 337, 341, 343, 344, 345, 347, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 370, 427, 428, 429, 430, 433, 455, 456, 457, 462, 474, 476, 486, 491, 492, 495, 504, 506, 576, 579, 580, 592, 595, 600, 608, 610, 631, 635, 636, 641, 643], "famili": 10, "fanci": 612, "fashion": [331, 651], "fast": [10, 214, 215, 217, 221, 222, 227, 228, 231], "faster": [10, 24, 60, 243, 244], "fastest": [136, 278, 449, 571, 580], "fb": [202, 625], "featur": 190, "fetch": 580, "few": 232, "fft": [6, 654], "fft2": [6, 214, 217, 221], "fftfreq": [6, 10, 214, 218, 223, 230], "fftn": [6, 214, 215, 222, 228, 231], "fftshift": [6, 10, 215, 217, 222, 223], "fh": 248, "field": [176, 184, 185, 186, 190, 192, 194, 198, 345], "field1": [186, 189], "file": [247, 248, 250, 251, 256, 325], "filenam": [248, 325], "fill": [6, 23, 39, 126, 203, 204, 232, 252, 253, 261, 262, 345, 353, 439, 494, 495, 581, 621, 642, 643], "fill_diagon": 6, "fill_valu": [252, 253], "filt": 625, "filter": [10, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 597, 621, 623, 627, 635, 642, 643], "final": [4, 10, 88, 227, 228, 229, 231, 255, 336], "find": [37, 61, 88, 109, 156, 213, 261, 308, 312, 316, 469, 490, 491, 578, 591, 600, 602, 631, 654], "fine": 4, "finfo": [312, 490, 574, 602], "finfo_object": 233, "finit": [45, 277, 279, 280, 281, 282, 353, 602], "first": [16, 17, 18, 22, 24, 25, 32, 34, 35, 36, 40, 41, 54, 59, 62, 64, 66, 67, 68, 72, 78, 80, 81, 86, 88, 94, 95, 98, 99, 107, 110, 111, 136, 176, 182, 202, 205, 208, 215, 217, 219, 221, 222, 237, 240, 242, 243, 244, 245, 254, 257, 258, 259, 261, 262, 263, 265, 266, 271, 272, 274, 278, 286, 288, 289, 291, 292, 293, 296, 298, 305, 309, 318, 319, 321, 322, 325, 330, 331, 332, 334, 335, 338, 339, 341, 342, 344, 345, 347, 348, 349, 352, 354, 355, 449, 488, 492, 496, 497, 500, 502, 503, 504, 571, 577, 580, 583, 585, 587, 589, 591, 592, 600, 601, 605, 609, 610, 611, 613, 616, 618, 629, 631, 633, 637, 638, 639, 640], "fit": [304, 578], "fix": [6, 38, 75, 107, 176, 188, 198, 241, 507, 584, 588, 630], "flag": [46, 48, 126, 176, 185, 278, 439, 579], "flanneri": 10, "flat": [34, 35, 136, 139, 200, 235, 449, 452, 488, 571, 572, 578, 632], "flatit": 488, "flatnonzero": [6, 491], "flatten": [6, 23, 34, 35, 36, 79, 80, 81, 92, 96, 97, 102, 103, 106, 107, 135, 151, 159, 200, 232, 236, 261, 262, 272, 323, 341, 344, 347, 354, 355, 356, 357, 361, 363, 448, 464, 472, 491, 496, 508, 571, 572, 578, 585, 600, 612, 613, 618, 631, 632, 637], "flexibl": [111, 176, 188, 191, 248, 309], "flip": [6, 63, 65, 107, 232, 238, 239, 273, 298, 524, 587], "fliplr": [6, 107, 232, 237, 239, 298, 587], "flipud": [6, 107, 232, 237, 238, 298, 587], "float": [12, 13, 21, 26, 32, 43, 44, 47, 54, 59, 73, 86, 95, 177, 180, 181, 186, 189, 190, 191, 193, 195, 203, 204, 208, 212, 213, 216, 230, 233, 234, 240, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 266, 267, 269, 290, 304, 307, 308, 310, 312, 323, 324, 325, 330, 331, 336, 337, 341, 343, 344, 347, 353, 359, 362, 364, 490, 494, 495, 502, 503, 519, 520, 521, 522, 526, 549, 551, 552, 554, 555, 557, 560, 561, 563, 566, 573, 574, 575, 576, 590, 597, 608, 621, 634, 636, 642, 643, 651, 654], "float16": [9, 240], "float32": [0, 9, 45, 47, 52, 61, 73, 88, 96, 97, 98, 99, 120, 178, 198, 201, 240, 433, 490, 516, 517, 519, 520, 521, 522, 544, 549, 551, 552, 554, 555, 557, 563, 566, 579, 582], "float64": [0, 9, 47, 52, 59, 73, 120, 181, 182, 183, 188, 191, 192, 201, 433, 516, 517, 519, 520, 521, 522, 523, 529, 530, 531, 533, 535, 536, 537, 544, 545, 548, 549, 551, 552, 554, 555, 556, 557, 562, 563, 564, 565, 566, 567, 568, 569, 570, 574, 582, 597, 602, 639], "float_pow": [6, 502, 503], "floor": [6, 38, 75, 234, 242, 349, 577, 584, 588, 630], "floor_divid": [6, 349, 577], "flop": 202, "flush": 248, "fmax": [6, 244, 341, 342, 348, 358, 502, 503], "fmin": [6, 243, 342, 347, 348, 360, 502, 503], "fmod": [6, 349, 502, 503, 577], "fn": 249, "fname": 325, "follow": [4, 10, 24, 59, 183, 209, 225, 233, 246, 268, 300, 302, 310, 312, 318, 497, 579, 616, 651, 654], "forc": [194, 201], "forg": 4, "form": [10, 23, 39, 43, 44, 45, 46, 47, 48, 60, 78, 85, 103, 106, 171, 175, 201, 202, 221, 222, 225, 252, 253, 255, 276, 284, 287, 298, 306, 317, 321, 324, 336, 340, 484, 497, 581, 589, 635, 640], "format": [176, 181, 246, 248, 251, 654], "format_float_posit": 6, "format_float_scientif": 6, "former": [14, 27, 29, 30, 31, 33, 49, 50, 53, 55, 508, 613], "forth": [318, 616], "fortran": [48, 52, 120, 136, 278, 433, 449, 571, 572, 579, 580, 632], "forward": [10, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 257], "found": [4, 591, 651], "four": [519, 551], "fourier": [214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 644, 654], "fourth": 215, "frac": [10, 620], "fraction": [350, 630], "free": [154, 467], "freedom": [362, 364, 564, 608, 636], "freq": [216, 218, 223, 230], "freq_spectrum": 219, "frequenc": [10, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230], "freshli": [281, 282, 638], "frexp": [6, 290], "fro": [295, 306, 310, 323], "frobeniu": [295, 310], "from": [3, 10, 14, 15, 17, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 69, 73, 76, 79, 80, 81, 85, 87, 95, 100, 101, 103, 104, 106, 107, 121, 126, 160, 168, 175, 176, 194, 195, 201, 203, 204, 208, 211, 212, 216, 220, 229, 230, 231, 237, 240, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 264, 267, 270, 272, 287, 290, 299, 301, 302, 308, 309, 321, 325, 337, 338, 345, 346, 434, 439, 473, 481, 493, 494, 495, 497, 500, 504, 508, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 576, 580, 581, 582, 587, 589, 591, 592, 605, 606, 607, 610, 612, 613, 618, 621, 623, 625, 627, 628, 631, 633, 634, 635, 640, 641, 642, 643, 654], "from_": 73, "from_dlpack": 6, "frombuff": [6, 248, 250, 251, 325], "fromfil": [6, 247, 250, 251], "fromfunct": [6, 43, 44, 45], "fromit": [6, 43, 44, 45, 247, 248, 251], "frompyfunc": 6, "fromregex": [6, 325], "fromstr": [6, 247, 248, 250, 325], "front": [60, 625], "full": [6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 136, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 168, 170, 171, 173, 174, 175, 183, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 449, 451, 452, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "full_lik": [6, 39, 204, 252, 495, 643], "full_matric": 316, "fulli": [182, 344], "func": 25, "func1d": 24, "function": [0, 2, 3, 10, 12, 13, 14, 15, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 79, 85, 89, 93, 95, 98, 99, 100, 101, 107, 110, 114, 115, 126, 130, 139, 154, 157, 171, 201, 203, 204, 206, 210, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 227, 228, 231, 232, 240, 245, 247, 248, 249, 250, 251, 252, 253, 256, 257, 260, 261, 262, 266, 267, 278, 287, 296, 298, 299, 301, 305, 306, 309, 310, 311, 317, 318, 321, 322, 323, 325, 328, 330, 331, 337, 338, 340, 345, 349, 350, 361, 427, 428, 439, 443, 452, 467, 470, 484, 494, 495, 497, 502, 503, 508, 510, 511, 522, 525, 527, 528, 538, 543, 559, 571, 576, 577, 579, 581, 588, 589, 594, 597, 608, 612, 613, 616, 617, 623, 624, 627, 628, 629, 633, 636, 640, 641, 642, 643, 644, 651, 654], "fundament": [10, 176], "further": [102, 623, 627], "futur": [190, 262], "fweight": 93, "g": [4, 10, 181, 203, 204, 212, 252, 253, 267, 310, 494, 495, 522, 621, 642, 643, 658], "g5a92a2220f4": 6, "gamma": [6, 562], "gauss": 10, "gaussian": [516, 544, 568], "gc": 202, "gcd": [6, 289], "gen": 201, "gender": 176, "gener": [4, 10, 36, 59, 60, 88, 189, 220, 225, 228, 231, 255, 271, 299, 300, 301, 302, 306, 312, 313, 323, 325, 336, 512, 513, 514, 515, 522, 524, 527, 558, 571, 602, 620, 623, 627, 635, 651, 654], "genfromtxt": [6, 325], "geometr": [6, 255, 324], "geomspac": [6, 324, 336], "get": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 105, 106, 126, 137, 157, 203, 204, 212, 216, 219, 225, 227, 230, 240, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 317, 322, 324, 325, 336, 338, 346, 439, 450, 470, 493, 494, 495, 497, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 613, 621, 623, 624, 627, 628, 635, 638, 642, 643, 651], "get_bit_gener": 6, "get_dtyp": 0, "get_includ": 6, "get_printopt": 6, "get_stat": 6, "getbufs": 6, "geterr": 6, "geterrcal": 6, "getfield": [6, 182], "getter": [157, 470], "gid": 262, "github": 246, "give": [10, 106, 171, 240, 262, 484, 580, 593, 599, 631], "given": [17, 18, 22, 23, 24, 25, 26, 34, 35, 38, 39, 40, 43, 44, 46, 48, 52, 59, 60, 78, 79, 85, 92, 93, 96, 97, 98, 99, 108, 111, 116, 117, 120, 123, 127, 128, 144, 149, 150, 155, 158, 161, 163, 173, 175, 179, 194, 200, 202, 203, 204, 211, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 243, 244, 252, 253, 255, 257, 261, 262, 272, 274, 303, 310, 318, 322, 324, 336, 338, 341, 342, 344, 345, 347, 348, 356, 357, 358, 360, 361, 362, 363, 364, 429, 430, 433, 436, 440, 441, 457, 462, 463, 468, 471, 474, 476, 486, 488, 491, 494, 495, 500, 504, 506, 507, 517, 522, 527, 549, 566, 576, 578, 579, 580, 584, 585, 586, 587, 589, 591, 592, 599, 603, 608, 610, 612, 616, 617, 620, 621, 631, 633, 636, 638, 640, 642, 643, 651], "global": 0, "golub": 310, "good": 534, "gpu": [0, 3, 4, 26, 39, 43, 44, 45, 46, 48, 85, 103, 106, 203, 204, 212, 216, 230, 247, 248, 249, 250, 252, 253, 255, 267, 324, 325, 336, 346, 493, 494, 495, 621, 635, 642, 643], "grade": [181, 182, 188, 192], "gradient": [6, 108, 200, 304], "graphic": 4, "great": 10, "greater": [6, 64, 67, 148, 174, 205, 242, 259, 291, 292, 293, 308, 313, 461, 492, 497, 583, 592, 594, 606, 634], "greater_equ": [6, 205, 258, 292, 293, 492], "greatest": [242, 254, 289], "greedi": [201, 202], "grid": [43, 44, 45, 249, 270, 311, 345, 346, 493, 496], "group": [37, 491], "guarante": [190, 579, 580], "guid": [2, 3], "gumbel": 6, "gz": 325, "h": [256, 294, 310, 313, 345], "ha": [4, 10, 12, 13, 14, 15, 17, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 49, 50, 53, 55, 59, 66, 88, 95, 96, 97, 98, 99, 109, 190, 198, 205, 209, 219, 224, 225, 249, 257, 258, 259, 264, 266, 269, 275, 276, 283, 284, 292, 293, 301, 314, 316, 321, 337, 343, 344, 349, 356, 357, 359, 361, 362, 363, 364, 492, 497, 504, 573, 574, 575, 576, 577, 578, 586, 590, 592, 606, 607, 608, 610, 611, 612, 617, 618, 632, 636, 651], "had": [508, 613], "hadamard": 202, "half": [15, 28, 215, 217, 218, 219, 221, 222, 324, 518, 520, 522, 549, 552, 554, 555, 557, 566, 611], "ham": 6, "han": 6, "hand": [94, 296, 320], "handl": [26, 184, 186, 213, 325, 491, 508, 572, 612, 613, 654], "happen": [52, 59, 120, 433, 524, 620], "hardwar": 4, "has_aspect_fp64": 0, "have": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 49, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 78, 80, 81, 82, 83, 86, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 110, 111, 175, 179, 190, 191, 205, 207, 208, 210, 213, 221, 222, 231, 233, 234, 240, 241, 242, 243, 244, 245, 254, 258, 259, 260, 264, 265, 266, 269, 273, 274, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 298, 304, 306, 309, 311, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 343, 344, 348, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 489, 490, 492, 500, 501, 502, 503, 504, 505, 510, 511, 541, 573, 575, 576, 577, 578, 579, 580, 583, 584, 588, 589, 590, 594, 595, 596, 597, 598, 602, 604, 605, 607, 608, 609, 610, 614, 615, 617, 629, 630, 634, 636, 638, 640, 651], "hd": 202, "header": 256, "heapsort": [36, 600], "heavisid": 6, "hello": 176, "help": 658, "helper": 654, "henc": [209, 257], "here": [6, 176, 201, 219, 224, 225, 623, 627], "hermit": [300, 302], "hermitian": [219, 224, 225, 227, 228, 294, 299, 300, 301, 302, 308, 312, 316, 317, 654], "hfft": [6, 10, 224], "hierarchi": 286, "high": [72, 225, 518, 522, 550, 553, 566], "higher": [24, 141, 201, 263, 272, 454, 637, 639], "highest": 214, "highli": 248, "hist": [261, 560], "hist_0": 262, "hist_1": 262, "histogram": [6, 61, 109, 262, 591, 654], "histogram2d": 6, "histogram_bin_edg": [6, 261], "histogramdd": [6, 261], "hold": [77, 96, 97, 98, 99, 261, 310, 344, 356, 357, 361, 363, 571, 618], "homogen": 176, "hopkin": 310, "horizont": [78, 80, 81, 107, 175, 232, 237, 263, 264, 298, 587, 589, 603, 607, 640], "host": [3, 4, 26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 126, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 439, 493, 494, 495, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 621, 623, 627, 635, 642, 643], "household": 313, "how": [0, 4, 183, 186, 225, 228, 257, 507, 508, 572, 612, 613, 623, 627], "howev": [159, 472, 612], "hsplit": [6, 80, 81, 603], "hstack": [6, 78, 80, 81, 175, 589, 603, 607, 640], "http": [4, 246], "hyperbol": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 596, 598, 614, 615, 654], "hypergeometr": 6, "hypot": [6, 576], "hypotenus": [265, 576], "i": [0, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 126, 139, 141, 148, 154, 157, 159, 162, 171, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 372, 433, 439, 452, 454, 461, 467, 470, 472, 475, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 658], "i0": 6, "i1": [162, 176, 179, 475], "i2": [162, 176, 178, 179, 186, 194, 198, 475], "i3": [162, 475], "i4": [73, 176, 177, 189, 193, 196], "i7": 201, "i8": [73, 176], "i_0": 266, "iaxi": 497, "iaxis_pad_width": 497, "icpx": 4, "icx": 4, "id": [17, 22], "ideal": 597, "ident": [3, 6, 17, 22, 24, 45, 95, 190, 212, 223, 232, 315, 322, 561, 638], "identifi": 189, "idx": 272, "ieee": 233, "ifft": [6, 214, 221, 222, 224, 225, 230], "ifft2": [6, 215, 220, 222], "ifftn": [6, 217, 220, 221], "ifftshift": [6, 10, 218, 222], "ignor": [34, 35, 94, 194, 243, 244, 251, 261, 262, 341, 342, 343, 347, 348, 354, 355, 358, 359, 360, 362, 364, 608, 636], "ihfft": [6, 219], "ii": [24, 201, 545], "iinfo": 539, "iinfo_object": 268, "ij": [201, 202, 345], "ijk": 201, "il": 202, "il1": 623, "il2": 623, "illustr": 301, "ilm": 201, "im": [311, 496], "imag": [6, 10, 21, 40, 573, 574, 581, 651], "imaginari": [21, 40, 138, 225, 243, 244, 269, 275, 276, 283, 284, 299, 300, 302, 307, 342, 348, 353, 451, 573, 574, 601, 631], "implement": [3, 4, 6, 47, 214, 246], "impli": [198, 571], "implicit": 201, "import": [0, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 126, 130, 131, 133, 136, 138, 139, 141, 146, 148, 152, 157, 158, 159, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 443, 444, 446, 449, 451, 452, 454, 459, 461, 465, 470, 471, 472, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 547, 549, 556, 560, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "improv": 201, "in1d": 6, "in_array1": 206, "includ": [4, 10, 17, 22, 23, 26, 39, 43, 44, 45, 46, 47, 48, 59, 85, 95, 98, 99, 103, 106, 109, 201, 202, 213, 252, 253, 255, 256, 261, 262, 276, 284, 312, 324, 336, 337, 343, 344, 358, 359, 360, 362, 364, 522, 566, 576, 597, 608, 635, 636], "include_initi": [95, 98, 99], "inclus": [518, 550, 553, 592], "increas": [109, 192, 209, 220, 225, 261, 497, 581, 635], "ind": [36, 109, 319, 507, 508, 623, 624, 627, 628], "independ": 296, "index": [4, 23, 34, 35, 36, 37, 76, 79, 121, 136, 139, 162, 182, 202, 212, 215, 221, 229, 236, 246, 270, 272, 278, 287, 345, 354, 355, 434, 449, 452, 475, 488, 491, 507, 508, 571, 572, 580, 581, 591, 592, 603, 612, 613, 623, 627, 631, 632, 641, 644, 654], "index_arrai": [34, 35, 36], "indic": [6, 10, 24, 34, 35, 36, 37, 42, 61, 95, 98, 99, 102, 104, 105, 109, 116, 117, 118, 147, 150, 156, 168, 174, 179, 184, 185, 186, 187, 201, 202, 211, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 236, 246, 249, 261, 263, 272, 319, 320, 338, 339, 346, 354, 355, 429, 430, 431, 460, 463, 469, 481, 488, 491, 499, 507, 508, 572, 591, 594, 595, 600, 603, 612, 613, 619, 623, 624, 627, 628, 631, 632, 638, 639, 641], "indices_or_sect": [42, 174, 263, 603, 639], "indirect": [36, 600], "individu": [488, 532], "inequ": 492, "inexact": [240, 353, 361, 363], "inf": [9, 14, 15, 18, 27, 28, 29, 32, 33, 43, 44, 45, 49, 54, 55, 86, 110, 274, 277, 279, 280, 281, 282, 295, 306, 310, 323, 326, 327, 329, 342, 348, 353, 354, 355, 358, 360, 363, 505, 602, 604, 629], "infer": [45, 95, 337, 576, 580], "infin": [14, 15, 17, 22, 27, 28, 29, 30, 31, 33, 45, 49, 50, 53, 55, 242, 277, 279, 280, 281, 282, 349, 353, 358, 360, 363, 577, 630, 654], "infinit": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 295, 310, 597], "infj": [30, 31, 50, 53], "info": 6, "inform": [0, 46, 48, 134, 177, 219, 225, 227, 233, 447, 579, 651, 654], "initi": [19, 20, 95, 98, 99, 142, 144, 149, 163, 203, 251, 341, 347, 358, 360, 361, 363, 455, 457, 462, 476, 504, 512, 610], "inner": [6, 24, 94, 201, 202, 305, 309, 339, 496], "innermost": [298, 306, 321, 340], "input": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 77, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 120, 136, 146, 174, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 305, 306, 308, 310, 311, 313, 314, 316, 317, 318, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 449, 459, 487, 489, 490, 491, 492, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 516, 518, 522, 544, 550, 566, 571, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 629, 630, 631, 634, 635, 636, 637, 638, 639, 642, 643], "insert": [6, 23, 24, 25, 34, 35, 102, 107, 109, 156, 201, 209, 255, 261, 324, 336, 354, 355, 358, 360, 469, 508, 580, 591, 592, 654], "instal": 2, "instanc": [3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 119, 120, 126, 203, 204, 212, 216, 219, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 267, 270, 315, 324, 325, 336, 338, 339, 346, 432, 433, 439, 488, 493, 494, 495, 512, 514, 515, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 638, 642, 643], "instead": [37, 52, 107, 111, 120, 201, 209, 241, 255, 261, 262, 270, 278, 309, 324, 331, 336, 341, 347, 433, 491, 504, 572, 581, 610, 651], "instruct": 4, "insuffici": 60, "int": [9, 17, 22, 23, 24, 25, 26, 34, 35, 36, 38, 39, 42, 47, 59, 60, 61, 70, 71, 79, 80, 81, 92, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 120, 139, 146, 158, 171, 174, 176, 182, 186, 203, 204, 205, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 247, 248, 249, 250, 251, 252, 253, 255, 257, 261, 262, 263, 267, 268, 270, 272, 296, 298, 304, 307, 310, 318, 319, 320, 321, 322, 323, 324, 336, 337, 338, 341, 343, 344, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 452, 459, 471, 484, 487, 488, 494, 495, 497, 498, 499, 504, 507, 508, 512, 518, 549, 550, 553, 572, 576, 578, 580, 581, 585, 586, 587, 588, 599, 600, 603, 606, 607, 608, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 631, 632, 633, 634, 635, 636, 638, 639, 642, 643, 651], "int16": [176, 178], "int32": [0, 9, 47, 73, 176, 183, 191, 203, 204, 212, 247, 250, 252, 253, 267, 325, 361, 363, 494, 495, 518, 522, 524, 532, 534, 539, 541, 547, 550, 566, 582, 610, 621, 642, 643], "int64": [0, 9, 73, 176, 188, 361, 363, 582], "int8": [176, 504], "int_": 9, "int_0": 620, "int_t": 620, "intc": 9, "integ": [26, 38, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 95, 96, 97, 98, 99, 109, 159, 171, 174, 186, 189, 234, 237, 240, 241, 242, 246, 254, 261, 263, 266, 268, 273, 287, 289, 290, 291, 307, 310, 318, 319, 321, 323, 337, 341, 343, 347, 349, 356, 357, 358, 359, 360, 361, 362, 363, 364, 472, 484, 502, 503, 504, 507, 512, 518, 522, 550, 553, 558, 572, 576, 577, 578, 580, 583, 584, 585, 587, 588, 591, 592, 593, 603, 605, 608, 610, 612, 616, 618, 630, 631, 632, 634, 636, 639, 651], "integer_lik": [318, 616], "integr": [3, 4, 59, 95, 97, 99, 240, 261, 337, 343, 344, 350, 359, 362, 364, 502, 503, 576, 608, 610, 620, 636], "intel": [3, 201], "intend": [171, 484], "intent": 240, "interchang": [164, 351, 477, 611], "interfac": [0, 247], "interior": 257, "intermedi": [96, 98, 201, 202], "intern": [36, 513, 600], "interp": 6, "interpol": [225, 581, 597], "interpret": [2, 43, 44, 45, 51, 71, 85, 139, 183, 219, 225, 227, 247, 287, 338, 452, 491, 507, 651], "intersect1d": 6, "interv": [10, 14, 15, 26, 27, 28, 29, 31, 49, 53, 109, 209, 255, 324, 336, 518, 520, 522, 549, 550, 552, 554, 555, 557, 565, 566, 611], "intp": [361, 363], "intrins": 651, "introduc": 585, "introduct": 10, "introselect": [148, 461, 498], "inv": [6, 295, 312], "invers": [10, 14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 290, 303, 312, 319, 320, 328, 568, 596, 598, 614, 615, 631], "invert": [6, 63, 65, 303, 312, 319], "invok": 651, "involv": 319, "io": [246, 325], "irfft": [6, 216, 219, 224, 226, 227, 228, 230], "irfft2": [6, 225, 227, 229], "irfftn": [6, 225, 226, 231], "irrespect": 36, "is_busdai": 6, "isalignedstruct": 176, "isclos": [6, 18], "iscomplex": [6, 276, 283], "iscomplexobj": [6, 275, 284], "isdtyp": 6, "isfinit": [6, 279, 280, 281, 282, 353, 358, 360, 363], "isfortran": 6, "isin": 6, "isinf": [6, 277, 280, 281, 282, 353], "isnan": [6, 277, 279, 281, 282, 353, 356, 357, 358, 360, 361, 363], "isnat": [6, 280], "isneginf": [6, 277, 279, 280, 282, 353], "isposinf": [6, 277, 279, 280, 281, 353], "isreal": [6, 275, 284], "isrealobj": [6, 276, 283], "isscalar": 6, "issu": 221, "issubdtyp": 6, "item": [6, 37, 247, 248, 250, 631, 644], "item_dtyp": 198, "item_hasobject": 183, "item_is_point": 183, "items": 72, "iter": [6, 43, 44, 45, 135, 136, 202, 235, 247, 248, 250, 251, 448, 449, 488, 508, 571, 581, 613, 633, 654], "its": [4, 6, 10, 12, 13, 17, 22, 25, 36, 59, 103, 171, 219, 225, 227, 233, 261, 262, 267, 299, 300, 301, 302, 309, 312, 320, 343, 359, 362, 364, 484, 499, 559, 571, 576, 580, 600, 608, 619, 620, 621, 636, 651], "itself": [52, 120, 176, 179, 290, 353, 433, 651], "iu": 338, "iu1": [338, 627], "iu2": 627, "ix_": 6, "ixgrid": 287, "j": [39, 82, 83, 171, 201, 215, 217, 219, 220, 221, 222, 224, 225, 228, 229, 231, 240, 249, 269, 270, 288, 294, 299, 300, 310, 311, 318, 321, 329, 339, 353, 484, 496, 505, 508, 573, 601, 605, 613, 616], "j1": 288, "jame": 10, "ji": 201, "jil": 201, "jj": 24, "jk": [201, 202], "jl": 202, "john": [10, 310], "join": [78, 80, 81, 175, 264, 272, 589, 603, 607, 633, 640, 654], "jump": [100, 510], "just": [72, 78, 107, 176, 215, 221, 226, 228, 229, 272], "k": [10, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 103, 106, 110, 120, 126, 201, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 253, 254, 258, 259, 260, 265, 266, 269, 273, 277, 279, 280, 288, 289, 290, 291, 292, 293, 304, 313, 315, 316, 317, 318, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 342, 348, 349, 352, 372, 433, 439, 489, 490, 492, 495, 501, 502, 503, 505, 510, 511, 571, 573, 575, 577, 583, 584, 587, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 616, 621, 622, 623, 624, 626, 627, 628, 629, 630, 634, 638, 641, 643, 658], "kaiser": 6, "kappa": 567, "keep": [51, 52, 120, 433, 631], "keepdim": [17, 19, 20, 22, 25, 34, 35, 59, 92, 114, 115, 116, 117, 142, 143, 144, 149, 161, 163, 173, 306, 310, 323, 337, 341, 343, 344, 347, 354, 355, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 455, 456, 457, 462, 474, 476, 486, 504, 506, 508, 576, 608, 610, 613, 636], "kei": [3, 36, 181, 182, 190, 377, 422, 600], "kernel": 597, "key2": 190, "keyword": [10, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 85, 86, 90, 91, 94, 100, 101, 103, 104, 106, 110, 126, 203, 204, 207, 208, 210, 212, 213, 216, 230, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 260, 265, 267, 270, 273, 289, 290, 291, 296, 298, 305, 311, 321, 322, 325, 327, 328, 329, 330, 331, 338, 339, 342, 346, 348, 349, 350, 352, 353, 439, 489, 490, 493, 494, 495, 497, 501, 502, 503, 505, 510, 511, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 575, 577, 580, 583, 584, 590, 594, 595, 596, 598, 602, 609, 614, 615, 621, 623, 627, 629, 630, 635, 638, 641, 642, 643, 651], "ki": 201, "kind": [36, 52, 73, 80, 81, 87, 95, 118, 120, 148, 159, 201, 233, 264, 266, 309, 337, 339, 431, 433, 461, 472, 498, 576, 580, 589, 600, 607, 638, 640, 654], "kk": 24, "kl": [10, 201, 202], "known": [10, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 248, 560], "kron": 6, "kroneck": 288, "kth": [148, 461, 498], "kwarg": [12, 13, 14, 15, 16, 24, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 86, 90, 91, 100, 101, 110, 122, 205, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 249, 254, 258, 259, 260, 265, 273, 277, 279, 280, 289, 290, 291, 292, 293, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 348, 349, 350, 352, 403, 435, 489, 490, 492, 497, 501, 502, 503, 505, 510, 511, 575, 577, 583, 584, 590, 594, 595, 596, 598, 602, 604, 605, 609, 614, 615, 629, 630], "l": [10, 42, 194, 294, 300, 302, 321], "la": [299, 301, 302], "label": 201, "laid": 48, "lam": 547, "lambda": 249, "lanczo": 597, "lapack": [299, 301], "laplac": 6, "laptop": 4, "larg": [10, 100, 183, 261, 312, 353, 510, 634, 658], "larger": [201, 214, 215, 217, 220, 221, 222, 224, 226, 227, 228, 229, 231, 233, 581, 618, 634], "largest": [10, 202, 228, 233, 241, 268, 304, 310, 349, 353, 577], "largest_singular_valu": 312, "last": [17, 22, 23, 24, 36, 61, 72, 94, 107, 108, 136, 141, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 237, 255, 257, 271, 278, 298, 309, 317, 318, 321, 324, 336, 339, 449, 454, 488, 497, 504, 571, 580, 585, 591, 600, 606, 610, 616, 633, 634, 638], "later": [497, 658], "latest": [4, 246], "latter": [14, 27, 29, 30, 31, 33, 49, 50, 53, 55, 243, 244, 342, 348, 508, 613], "layout": [4, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 110, 126, 134, 201, 203, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 252, 253, 254, 258, 259, 260, 265, 266, 269, 273, 277, 279, 280, 289, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 348, 349, 352, 439, 447, 489, 490, 492, 494, 495, 501, 502, 503, 505, 510, 511, 571, 573, 575, 577, 579, 580, 583, 584, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 629, 630, 638, 641, 642, 643, 644], "lcm": [6, 254], "ldexp": 6, "ldot": 10, "lead": [220, 221, 222, 356, 357, 625], "learn": [3, 4, 331], "least": [56, 57, 58, 59, 60, 105, 175, 195, 202, 209, 232, 238, 243, 244, 248, 276, 304, 313, 342, 348, 589, 640], "left": [10, 31, 34, 35, 38, 53, 64, 67, 92, 107, 109, 156, 238, 239, 291, 301, 306, 310, 323, 341, 347, 354, 355, 361, 363, 469, 504, 565, 583, 588, 591, 610, 620, 635], "left_shift": [6, 64, 67, 583], "leg": [265, 576], "legaci": 558, "legal": 272, "len": [102, 217, 218, 219, 222, 224, 225, 226, 227, 231, 270, 304, 341, 345, 346, 347, 395, 593, 635], "length": [26, 42, 59, 60, 61, 79, 96, 97, 98, 99, 108, 205, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 251, 255, 257, 261, 264, 299, 316, 317, 318, 336, 341, 344, 345, 347, 356, 357, 497, 508, 525, 580, 582, 589, 591, 592, 593, 606, 613, 616, 617, 640], "less": [6, 25, 79, 96, 97, 98, 99, 141, 205, 258, 259, 261, 262, 293, 304, 312, 321, 356, 357, 361, 363, 454, 492, 504, 592, 594, 610, 618], "less_equ": [6, 205, 258, 259, 292, 492], "let": [322, 524, 580, 638], "level": [644, 651], "level_zero": [26, 39, 43, 44, 45, 46, 48, 85, 103, 106, 203, 204, 212, 216, 230, 247, 248, 249, 250, 252, 253, 255, 267, 324, 325, 336, 346, 493, 494, 495, 621, 635, 642, 643], "lexicograph": 631, "lexsort": [6, 36, 600], "li": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 585, 586], "lib": 72, "librari": [3, 4, 651], "light": 10, "like": [26, 39, 43, 44, 46, 48, 52, 56, 57, 58, 78, 102, 120, 136, 146, 175, 201, 203, 212, 227, 247, 248, 249, 250, 251, 252, 255, 267, 272, 324, 325, 336, 338, 433, 449, 459, 487, 494, 508, 522, 566, 571, 579, 580, 613, 642, 654], "likewis": [62, 66, 68], "limit": [3, 4, 12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 82, 83, 85, 86, 89, 90, 91, 93, 100, 101, 110, 120, 122, 182, 203, 204, 205, 206, 207, 208, 210, 212, 213, 233, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 265, 267, 268, 273, 277, 279, 280, 289, 290, 291, 292, 293, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 347, 348, 349, 350, 352, 354, 355, 358, 359, 360, 361, 362, 363, 364, 433, 435, 489, 490, 492, 494, 495, 498, 501, 502, 503, 504, 505, 506, 509, 510, 511, 516, 518, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 544, 545, 547, 548, 550, 553, 556, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 575, 577, 579, 583, 584, 590, 594, 595, 596, 597, 598, 600, 602, 604, 605, 608, 609, 610, 614, 615, 629, 630, 636, 638, 642, 643], "linalg": [6, 94, 107, 111, 201, 202, 339, 340, 496, 605, 616, 618, 637, 638], "line": [304, 325], "linear": [10, 84, 89, 304, 315, 336, 497, 644, 654], "linear_ramp": 497, "linspac": [0, 6, 26, 206, 255, 311, 336, 345, 496, 597, 620, 634], "linux": 4, "list": [3, 6, 9, 23, 39, 42, 43, 44, 45, 46, 48, 56, 57, 58, 69, 80, 81, 85, 103, 106, 171, 174, 175, 192, 201, 202, 218, 223, 232, 252, 253, 255, 257, 263, 264, 276, 284, 318, 324, 325, 336, 339, 344, 484, 499, 572, 578, 579, 581, 582, 589, 592, 603, 607, 616, 619, 632, 633, 635, 638, 639, 640, 641], "list_pickl": 183, "littl": [179, 194], "ln": 336, "load": [6, 248, 325], "loadtxt": [6, 248], "loan": 310, "loc": [516, 533, 535, 536, 544, 568], "local": 4, "locat": [0, 4, 256, 281, 282, 338, 496, 533, 535, 591, 638], "log": [6, 210, 255, 314, 324, 327, 328, 329, 330, 336, 337, 537], "log10": [6, 326, 328, 329], "log1p": [6, 208, 210, 326, 327, 329], "log2": [6, 326, 327, 328, 331], "log_bas": 336, "logabsdet": 314, "logaddexp": [6, 95, 331, 337], "logaddexp2": [6, 330, 337], "logarithm": [95, 297, 314, 324, 326, 327, 328, 329, 330, 331, 337, 538, 654], "logic": [17, 22, 332, 333, 334, 335, 644, 654], "logical_and": [6, 62, 333, 334, 335], "logical_not": [6, 63, 65, 273, 332, 334, 335], "logical_or": [6, 66, 332, 333, 335], "logical_xor": [6, 68, 332, 333, 334], "logist": 6, "lognorm": 6, "logseri": 6, "logspac": [6, 255, 324], "logsumexp": [95, 330, 331], "lomax": 545, "long": [190, 307], "longer": [219, 225, 658], "look": [490, 613], "loop": [24, 201], "loos": 200, "lorentz": 560, "lose": [219, 225, 227], "low": [72, 215, 217, 221, 222, 518, 522, 550, 553, 566, 651], "lower": [103, 212, 261, 262, 286, 294, 300, 302, 338, 621, 622, 623, 624, 627, 628], "lowest": [59, 201, 202, 254, 289, 518, 550], "lstsq": 6, "m": [4, 10, 24, 93, 175, 189, 201, 212, 215, 217, 219, 221, 222, 225, 226, 227, 231, 237, 238, 239, 294, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 321, 338, 339, 340, 344, 508, 587, 592, 612, 613, 621, 622, 623, 624, 626, 627, 628], "machin": [4, 10, 233, 268, 304, 331, 574], "machineri": 186, "made": [39, 44, 56, 194, 246, 288, 353, 580, 603], "magnitud": [12, 13, 86, 213, 505], "mai": [17, 21, 22, 52, 73, 77, 80, 81, 87, 97, 99, 120, 157, 176, 184, 190, 201, 202, 209, 215, 217, 219, 220, 221, 222, 224, 225, 228, 231, 257, 262, 264, 295, 299, 300, 304, 306, 310, 313, 331, 336, 339, 353, 359, 362, 364, 433, 470, 508, 571, 574, 581, 589, 597, 607, 617, 638, 640, 651], "main": [103, 104, 105, 106, 107, 212, 232, 267, 298, 302, 321, 338, 618, 621, 622, 623, 626, 627], "mainstai": 10, "maintain": [36, 109, 156, 185, 261, 469, 591, 600, 613], "major": [4, 43, 44, 45, 46, 48, 51, 52, 120, 433, 491, 571, 572, 579, 632], "make": [46, 48, 78, 176, 311, 345, 496, 579, 597, 631, 634], "manag": 0, "mandelbrot": [311, 496], "mani": [10, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 571, 651], "manipul": [3, 104, 644, 654], "mantissa": 290, "manual": [4, 177, 186, 617], "mappingproxi": 190, "mask": [102, 183, 287, 338, 491, 500, 509, 612, 623, 627], "mask_func": 338, "mask_indic": [6, 623, 627], "mass": 261, "match": [12, 13, 44, 80, 81, 87, 92, 95, 108, 176, 246, 248, 257, 271, 318, 337, 339, 507, 508, 576, 607, 612, 613, 616, 641], "math": [10, 206], "mathbf": [322, 638], "mathemat": [310, 644, 654], "matlab": 245, "matmul": [6, 111, 313, 316, 637], "matplotlib": [345, 560], "matric": [232, 249, 270, 287, 297, 298, 299, 301, 303, 306, 308, 310, 312, 313, 314, 315, 316, 317, 321, 339, 340, 345, 654], "matrix": [88, 93, 111, 141, 201, 271, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 321, 339, 340, 345, 454, 605, 626, 635, 637, 638, 644, 654], "matrix_norm": [6, 310], "matrix_pow": [6, 605], "matrix_rank": 6, "matrix_transpos": 6, "matter": 631, "max": [0, 6, 19, 34, 61, 77, 122, 233, 243, 244, 261, 262, 268, 304, 308, 310, 312, 342, 347, 348, 358, 435, 539, 613, 617, 634, 651], "max_arg": 0, "max_val": 0, "maxima": [243, 341, 342], "maximum": [0, 6, 19, 34, 35, 77, 116, 142, 202, 243, 244, 341, 347, 348, 354, 355, 358, 360, 429, 455, 497, 502, 503, 506, 508, 634], "may_share_memori": 6, "md": 310, "mean": [3, 6, 10, 18, 26, 39, 41, 43, 44, 45, 46, 47, 48, 52, 59, 85, 92, 103, 104, 106, 120, 126, 136, 171, 201, 203, 204, 212, 215, 216, 217, 221, 222, 226, 227, 228, 229, 230, 231, 247, 248, 249, 250, 251, 252, 253, 257, 267, 270, 295, 310, 325, 338, 344, 346, 359, 362, 364, 433, 439, 449, 484, 493, 494, 495, 497, 512, 519, 521, 535, 537, 540, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 567, 568, 571, 580, 587, 608, 610, 621, 623, 627, 635, 636, 642, 643, 651], "meaningfulli": 651, "meant": 651, "median": [0, 6, 497], "meet": [39, 592], "memori": [3, 12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 110, 126, 134, 162, 184, 201, 203, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 246, 252, 253, 254, 258, 259, 260, 265, 266, 269, 273, 277, 278, 279, 280, 289, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 344, 345, 348, 349, 352, 439, 447, 475, 489, 490, 492, 494, 495, 501, 502, 503, 505, 510, 511, 571, 573, 575, 577, 579, 580, 583, 584, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 629, 630, 638, 641, 642, 643, 644, 658], "mergesort": [36, 600], "mersenn": 512, "mesh": 287, "meshgrid": [6, 249, 270, 287, 346, 493], "met": [111, 309], "meta": 182, "metadata": 176, "method": [10, 17, 19, 20, 22, 36, 52, 79, 85, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 136, 137, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 168, 169, 170, 171, 173, 182, 194, 246, 248, 308, 312, 316, 340, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 449, 450, 452, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 481, 482, 483, 484, 486, 487, 491, 499, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 580, 593, 610, 612, 619, 644], "mgrid": [215, 217, 226, 229, 270, 287], "mgridclass": 346, "middl": [10, 107, 215, 217, 221, 222, 301, 344], "might": [201, 220, 221, 222], "min": [6, 20, 35, 77, 122, 233, 243, 244, 261, 262, 268, 295, 298, 304, 310, 313, 316, 317, 341, 342, 348, 360, 435, 613, 651], "min_scalar_typ": 6, "minima": [244, 347, 348], "minimum": [6, 20, 34, 35, 39, 61, 77, 117, 144, 240, 243, 244, 341, 342, 347, 354, 355, 358, 360, 430, 457, 497, 502, 503, 506], "minlength": 61, "mintypecod": 6, "minu": [60, 210, 242, 349, 577, 630], "mirror": 497, "miscellan": [2, 644, 654], "mise": 567, "miss": 325, "mix": [305, 339], "mk": 10, "mkl": 4, "mn": 10, "mod": [6, 211, 577, 634], "mode": [76, 84, 89, 121, 150, 168, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 313, 434, 463, 481, 497, 507, 508, 560, 565, 572, 591, 612, 613], "model": [4, 524], "modf": 6, "modifi": [85, 107, 232, 266, 344, 497, 559], "modul": [214, 256, 644], "modulu": [245, 349, 577], "moment": 88, "monoton": [109, 261], "moor": 312, "more": [0, 3, 4, 36, 39, 56, 57, 58, 98, 99, 175, 177, 201, 202, 210, 226, 229, 238, 239, 246, 248, 262, 264, 270, 290, 296, 298, 304, 305, 307, 308, 309, 311, 312, 316, 318, 321, 322, 328, 330, 581, 587, 607, 616, 620, 631, 634, 651, 658], "most": [3, 4, 23, 61, 107, 108, 195, 202, 214, 220, 353, 512, 558, 581, 606], "move": [148, 351, 461, 499, 585, 586, 619, 631], "moveaxi": [6, 499, 585, 586, 619, 633], "msg": 0, "mt": 340, "mt19937": 558, "mu": [533, 537, 544, 567], "multi": [2, 112, 162, 270, 287, 296, 346, 475, 493, 572, 631, 644], "multi_dot": [6, 111, 201, 202], "multi_index": 572, "multiarrai": 183, "multidimension": [261, 271, 488, 641], "multinomi": 6, "multipl": [4, 10, 24, 25, 34, 35, 36, 42, 59, 80, 81, 88, 94, 95, 174, 185, 201, 215, 217, 221, 222, 226, 227, 229, 231, 254, 262, 263, 264, 272, 287, 289, 296, 299, 300, 301, 302, 303, 309, 337, 341, 343, 347, 358, 359, 360, 362, 364, 571, 576, 589, 592, 600, 603, 607, 608, 620, 631, 633, 636, 639, 640, 644], "multipli": [6, 96, 201, 290, 301, 361, 504], "multivalu": [14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55], "multivari": 540, "multivariate_norm": 6, "must": [12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 77, 78, 80, 81, 82, 83, 86, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 108, 110, 111, 175, 205, 207, 208, 209, 210, 213, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 240, 241, 242, 243, 244, 245, 248, 251, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 273, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 296, 298, 309, 310, 311, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 489, 490, 492, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 549, 573, 575, 576, 577, 578, 583, 584, 585, 587, 588, 589, 590, 591, 594, 595, 596, 597, 598, 602, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 629, 630, 636, 638, 640, 641], "mx": 304, "mxn": [298, 306, 321, 340], "my_func": 24, "n": [0, 4, 10, 37, 42, 60, 97, 99, 104, 105, 108, 109, 171, 174, 175, 194, 200, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 249, 257, 263, 267, 287, 298, 304, 306, 307, 308, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 338, 339, 340, 344, 345, 362, 364, 484, 488, 497, 499, 500, 507, 508, 524, 539, 541, 551, 561, 591, 593, 603, 605, 608, 611, 612, 613, 616, 619, 620, 621, 622, 623, 624, 626, 627, 628, 635, 636, 638, 639, 651], "n1": 345, "n2": [325, 345], "n3": 345, "naiv": 202, "name": [0, 6, 24, 176, 181, 182, 188, 312, 597], "namedtupl": 313, "nan": [9, 14, 15, 17, 18, 22, 27, 28, 29, 30, 31, 33, 34, 35, 40, 43, 44, 45, 49, 50, 53, 55, 110, 240, 243, 244, 274, 277, 279, 280, 281, 282, 327, 341, 342, 343, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 502, 503, 504, 602, 604, 608, 629, 631, 636, 654], "nan_to_num": 6, "nanargmax": [6, 34, 355], "nanargmin": [6, 35, 354], "nancumprod": 6, "nancumsum": 6, "nanmax": [6, 243, 244, 341, 342, 348, 360], "nanmean": [6, 343, 362, 364, 608, 636], "nanmedian": 6, "nanmin": [6, 243, 244, 342, 347, 348, 358], "nanpercentil": 6, "nanprod": [6, 504], "nanquantil": 6, "nanstd": [6, 343, 359, 364, 608, 636], "nansum": 6, "nanvar": [6, 343, 359, 362, 608, 636], "nat": 280, "nativ": [179, 187, 194], "native_cod": [179, 194], "native_dt": 194, "natur": [314, 326, 327, 328, 329, 330, 331, 337], "nbad": 534, "nd": [139, 452], "ndarrai": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 126, 133, 136, 138, 139, 146, 152, 154, 157, 158, 159, 171, 174, 175, 182, 184, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 655], "ndenumer": 488, "ndim": [6, 37, 39, 46, 48, 56, 57, 58, 93, 104, 107, 232, 288, 310, 316, 317, 340, 341, 347, 494, 499, 617, 619, 642], "ndindex": 24, "ndmin": 39, "ne": 597, "nearest": [38, 75, 234, 241, 242, 349, 577, 584, 588, 602, 630], "necessari": [4, 17, 22, 26, 39, 43, 44, 46, 48, 56, 87, 96, 97, 98, 99, 200, 211, 219, 225, 227, 232, 246, 255, 324, 336, 339, 343, 344, 356, 357, 359, 361, 362, 363, 364, 504, 581, 608, 610, 636, 658], "necessarili": [299, 301], "need": [4, 18, 39, 44, 61, 107, 201, 256, 344, 579, 612, 613, 641], "needs_init": 183, "needs_pyapi": 183, "neg": [6, 10, 17, 22, 38, 60, 61, 86, 106, 107, 109, 157, 209, 212, 215, 217, 220, 221, 222, 225, 228, 237, 240, 251, 257, 261, 277, 279, 280, 281, 282, 307, 318, 353, 358, 360, 362, 363, 364, 470, 501, 502, 503, 504, 507, 508, 541, 549, 572, 588, 608, 610, 612, 613, 616, 618, 636], "negat": 592, "negative_binomi": 6, "neginf": 353, "neither": [111, 243, 244, 305, 316, 339, 358, 360], "nest": [47, 175, 264, 589, 607, 633, 640], "nested_it": 6, "net": [243, 244, 342, 348], "never": 634, "new": [23, 24, 39, 52, 69, 70, 71, 78, 80, 81, 92, 95, 96, 97, 98, 99, 102, 107, 120, 154, 157, 171, 175, 176, 185, 186, 194, 200, 203, 204, 209, 243, 244, 246, 250, 251, 252, 253, 255, 264, 267, 272, 324, 336, 337, 338, 342, 344, 348, 351, 356, 357, 361, 363, 433, 467, 470, 484, 494, 495, 499, 576, 580, 581, 585, 586, 589, 603, 607, 617, 619, 633, 640, 641, 642, 643, 651], "new_dtyp": 194, "new_ord": 194, "new_shap": 581, "newaxi": 209, "newli": [12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 45, 49, 50, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 110, 120, 126, 203, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 252, 253, 254, 258, 259, 260, 265, 266, 269, 273, 277, 279, 280, 289, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 348, 349, 352, 433, 439, 489, 490, 492, 494, 495, 501, 502, 503, 505, 510, 511, 573, 575, 577, 583, 584, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 629, 630, 638, 642, 643], "newshap": 580, "next": [4, 233, 490], "nextaft": 6, "ngood": 534, "ni": [24, 345, 508, 612, 613], "nine": 524, "ninja": 4, "nj": [24, 508, 612, 613], "njm": 201, "nk": [24, 508, 612, 613], "nl": 10, "nlk": 201, "nn": 345, "noisi": 304, "non": [26, 37, 39, 43, 44, 45, 46, 47, 48, 52, 59, 61, 85, 92, 103, 104, 106, 109, 120, 126, 147, 157, 203, 204, 211, 212, 216, 225, 228, 230, 236, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 261, 262, 267, 270, 275, 277, 287, 296, 318, 324, 325, 336, 338, 346, 353, 354, 355, 358, 360, 362, 364, 433, 439, 460, 470, 491, 493, 494, 495, 500, 502, 503, 512, 542, 543, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 608, 616, 621, 623, 627, 635, 636, 641, 642, 643], "nonc": [542, 543], "noncentral_chisquar": 6, "noncentral_f": 6, "none": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 139, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 163, 168, 170, 171, 173, 182, 190, 192, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 272, 273, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 295, 304, 306, 308, 309, 310, 312, 316, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 440, 441, 444, 452, 455, 456, 457, 461, 462, 463, 466, 467, 468, 469, 472, 473, 474, 476, 481, 483, 484, 486, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 516, 518, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 583, 584, 585, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 621, 623, 627, 629, 630, 631, 632, 634, 635, 636, 638, 640, 641, 642, 643, 651], "nonneg": 61, "nonzero": [6, 37, 92, 236, 287, 641, 651], "nor": [243, 244, 301, 358, 360], "norm": [6, 10, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 295, 301, 304, 306, 323, 654], "normal": [6, 93, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 261, 299, 300, 313, 322, 331, 519, 521, 537, 540, 551, 563, 572, 597, 638], "not_equ": [6, 205, 258, 259, 292, 293], "note": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 51, 53, 54, 55, 60, 63, 64, 65, 67, 80, 81, 85, 94, 100, 102, 107, 109, 110, 126, 154, 194, 201, 202, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 241, 243, 244, 247, 248, 249, 250, 251, 261, 270, 272, 273, 277, 290, 291, 296, 298, 299, 306, 310, 315, 318, 323, 325, 336, 344, 349, 352, 362, 363, 364, 439, 467, 491, 497, 499, 500, 502, 503, 507, 510, 525, 527, 528, 538, 543, 571, 577, 579, 580, 581, 583, 587, 597, 600, 602, 608, 609, 611, 616, 617, 619, 620, 629, 631, 633, 634, 636, 637], "notic": [182, 225, 228], "notimplementederror": [12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 110, 120, 203, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 265, 267, 273, 277, 279, 280, 289, 290, 291, 292, 293, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 347, 348, 349, 352, 358, 359, 360, 362, 363, 364, 433, 489, 490, 492, 494, 495, 501, 502, 503, 504, 505, 510, 511, 571, 575, 577, 579, 583, 584, 590, 594, 595, 596, 598, 600, 602, 604, 605, 608, 609, 610, 614, 615, 629, 630, 636, 638, 642, 643], "now": [17, 22, 46, 48, 88, 104, 301, 304, 338], "np": [3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 126, 130, 131, 133, 136, 138, 139, 141, 146, 148, 152, 157, 158, 159, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 443, 444, 446, 449, 451, 452, 454, 459, 461, 465, 470, 471, 472, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 505, 506, 507, 508, 510, 511, 547, 549, 556, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "nr": 10, "nsamp": 534, "nsampl": 534, "nth": [318, 616], "nuc": [306, 310, 323], "nuclear": 310, "num": [0, 60, 206, 255, 324, 336, 620, 634], "number": [10, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 45, 49, 50, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 92, 104, 106, 108, 109, 146, 155, 158, 179, 188, 193, 195, 200, 201, 202, 209, 212, 213, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 231, 233, 234, 242, 247, 248, 250, 251, 255, 257, 261, 262, 267, 268, 273, 274, 275, 276, 277, 284, 287, 290, 291, 295, 303, 308, 310, 313, 314, 316, 319, 320, 324, 331, 336, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 459, 468, 471, 487, 491, 497, 499, 500, 504, 505, 512, 524, 534, 558, 577, 578, 581, 583, 584, 585, 586, 587, 588, 595, 599, 602, 608, 611, 617, 619, 621, 630, 631, 635, 636, 651, 654], "number_of_dimens": [146, 459, 487], "numer": [3, 4, 10, 12, 13, 14, 15, 16, 18, 27, 28, 29, 30, 31, 33, 38, 49, 50, 53, 55, 82, 83, 86, 90, 91, 110, 176, 205, 207, 210, 220, 221, 222, 225, 227, 242, 243, 244, 258, 259, 269, 274, 277, 279, 280, 292, 293, 310, 311, 326, 327, 328, 329, 342, 348, 352, 489, 492, 501, 502, 503, 505, 573, 584, 588, 594, 595, 596, 598, 609, 614, 615, 629, 654], "numpi": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 132, 133, 136, 138, 139, 146, 152, 157, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 432, 445, 446, 449, 451, 452, 459, 465, 470, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 651, 654], "nvidia": 4, "nx": 345, "ny": 345, "nyquist": [10, 215, 217, 218, 219, 220, 221, 222, 225, 227, 228, 230], "o": [4, 17, 22, 189], "obj": [34, 35, 36, 102, 176, 246, 261, 272], "object": [26, 39, 43, 44, 45, 46, 47, 48, 51, 52, 85, 103, 104, 106, 112, 120, 126, 137, 139, 154, 176, 179, 182, 184, 188, 189, 191, 194, 197, 198, 203, 204, 209, 212, 216, 230, 233, 235, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 268, 270, 272, 295, 300, 310, 318, 324, 325, 336, 338, 346, 433, 439, 450, 452, 467, 488, 493, 494, 495, 512, 513, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 580, 616, 621, 623, 627, 635, 642, 643, 651], "observ": 88, "obsolet": 278, "obtain": [10, 107, 294, 298, 321, 491], "obviou": 10, "occupi": [233, 268], "occur": [23, 52, 73, 80, 81, 87, 102, 120, 201, 264, 272, 299, 339, 353, 433, 589, 607, 638, 640], "occurr": [34, 35, 61, 109, 261, 354, 355, 631], "odd": [10, 216, 219, 223, 224, 225, 227, 228, 230, 344, 497], "off": [26, 219, 224, 298, 299, 304, 321], "offset": [107, 112, 130, 170, 176, 182, 192, 247, 248, 298, 321, 338, 443, 483, 618, 623, 624, 627, 628], "often": [102, 260], "ogrid": [270, 287, 641], "ogridclass": 493, "oil": [524, 541], "old": 581, "omit": [518, 550], "onc": 303, "one": [3, 4, 25, 34, 35, 36, 39, 41, 47, 56, 57, 58, 59, 84, 87, 89, 92, 98, 99, 102, 126, 136, 139, 140, 176, 189, 203, 205, 209, 211, 212, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 238, 239, 240, 243, 244, 248, 252, 257, 262, 264, 267, 270, 272, 276, 287, 301, 306, 307, 310, 318, 323, 326, 327, 329, 338, 341, 342, 345, 346, 347, 348, 354, 355, 361, 363, 439, 449, 452, 453, 491, 493, 495, 500, 504, 541, 572, 586, 592, 600, 606, 607, 610, 612, 616, 620, 623, 624, 627, 628, 631, 642, 651], "oneapi": [4, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "onedpl": 4, "onemkl": [4, 299, 301], "ones": [6, 39, 46, 48, 59, 95, 98, 99, 102, 110, 131, 201, 203, 204, 205, 209, 212, 231, 252, 253, 265, 267, 288, 304, 308, 311, 337, 338, 356, 361, 444, 495, 496, 499, 504, 576, 582, 586, 619, 621, 629, 642, 643], "ones_lik": [6, 39, 204, 253, 494, 643], "onli": [10, 17, 22, 26, 34, 35, 36, 39, 42, 43, 44, 46, 48, 52, 56, 59, 60, 85, 89, 93, 98, 99, 120, 139, 157, 159, 176, 186, 201, 202, 203, 204, 212, 218, 228, 232, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 261, 262, 270, 278, 294, 300, 302, 305, 308, 310, 311, 312, 313, 315, 316, 324, 325, 336, 338, 339, 341, 343, 347, 353, 354, 355, 358, 359, 360, 361, 362, 364, 433, 452, 470, 472, 494, 495, 498, 500, 501, 504, 516, 518, 522, 544, 550, 566, 571, 579, 580, 597, 600, 608, 610, 613, 627, 631, 634, 636, 638, 641, 642, 643, 651], "open": [248, 270, 287, 324, 493, 518, 520, 522, 549, 552, 554, 555, 557, 566, 611], "opencl": [26, 39, 43, 44, 45, 46, 48, 85, 103, 106, 203, 204, 212, 216, 230, 247, 248, 249, 250, 252, 253, 255, 267, 324, 325, 336, 346, 493, 494, 495, 621, 635, 642, 643], "oper": [10, 16, 24, 62, 63, 64, 65, 66, 67, 68, 110, 183, 190, 201, 202, 205, 209, 232, 242, 245, 258, 259, 273, 291, 292, 293, 294, 332, 334, 339, 341, 347, 349, 352, 353, 354, 355, 489, 492, 501, 502, 503, 507, 577, 583, 609, 617, 629, 631, 633, 634, 638, 644, 654], "operand": [201, 202, 318, 320, 496, 616], "opposit": [10, 194, 211, 219, 224, 500, 571], "optim": [4, 201, 202, 261, 262], "option": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 120, 126, 136, 171, 176, 182, 194, 200, 201, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 272, 273, 274, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 302, 304, 306, 308, 309, 310, 312, 313, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 449, 484, 489, 490, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 658], "ord": [306, 310, 323], "order": [10, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 83, 85, 86, 90, 91, 100, 101, 107, 109, 110, 112, 118, 120, 126, 136, 148, 151, 154, 156, 159, 171, 179, 187, 192, 194, 195, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 215, 217, 220, 221, 222, 225, 227, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 257, 258, 259, 260, 261, 265, 266, 269, 273, 277, 278, 279, 280, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 306, 310, 316, 318, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 345, 348, 349, 351, 352, 372, 431, 433, 439, 449, 461, 464, 467, 469, 472, 484, 489, 490, 491, 492, 494, 495, 498, 499, 501, 502, 503, 505, 510, 511, 571, 572, 573, 575, 577, 579, 580, 581, 583, 584, 587, 590, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 609, 614, 615, 616, 619, 629, 630, 631, 632, 635, 638, 641, 642, 643, 654], "ordin": [304, 315], "ordinari": [225, 271, 294], "orient": [94, 508, 613], "origin": [25, 69, 107, 112, 219, 225, 227, 306, 310, 323, 345, 351, 361, 363, 580, 581, 585, 631], "ortho": [10, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231], "orthogon": [301, 313], "orthonorm": 313, "other": [41, 52, 69, 70, 71, 108, 120, 190, 220, 221, 222, 225, 227, 241, 249, 267, 299, 301, 309, 310, 315, 351, 368, 369, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 433, 522, 566, 581, 586, 631, 638, 644, 654], "otherwis": [3, 12, 13, 14, 15, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 100, 101, 103, 108, 110, 120, 154, 182, 193, 196, 198, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 265, 266, 267, 271, 273, 277, 279, 280, 289, 290, 291, 292, 293, 304, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 347, 348, 349, 350, 352, 354, 355, 358, 359, 360, 361, 362, 363, 364, 433, 467, 489, 490, 492, 494, 495, 501, 502, 503, 504, 505, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 579, 580, 583, 584, 590, 591, 594, 595, 596, 598, 600, 602, 604, 605, 606, 608, 609, 610, 614, 615, 618, 629, 630, 636, 638, 641, 642, 643], "otim": [318, 616], "out": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 121, 122, 123, 126, 127, 128, 131, 136, 139, 142, 143, 144, 149, 155, 161, 163, 168, 170, 171, 173, 175, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 303, 305, 306, 309, 310, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 434, 435, 436, 439, 440, 441, 444, 449, 452, 455, 456, 457, 462, 468, 474, 476, 481, 483, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 513, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 629, 630, 634, 635, 636, 637, 638, 640, 641, 642, 643], "outer": [6, 94, 107, 201, 202, 288], "output": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 79, 82, 83, 85, 86, 90, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 108, 110, 111, 120, 126, 176, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 234, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 265, 266, 267, 269, 270, 273, 274, 275, 277, 279, 280, 287, 289, 290, 291, 292, 293, 309, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 355, 356, 357, 359, 361, 362, 363, 364, 433, 439, 489, 490, 492, 493, 494, 495, 501, 502, 503, 504, 505, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 577, 578, 580, 583, 584, 588, 590, 592, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 608, 609, 610, 612, 614, 615, 617, 618, 621, 623, 627, 629, 630, 631, 634, 635, 636, 638, 641, 642, 643, 654, 658], "outsid": [261, 262], "over": [10, 17, 22, 24, 25, 59, 61, 79, 95, 96, 97, 98, 99, 111, 136, 201, 202, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 237, 249, 255, 261, 262, 271, 296, 306, 310, 318, 322, 323, 324, 336, 337, 339, 341, 343, 345, 347, 356, 357, 358, 359, 360, 361, 362, 363, 364, 449, 488, 504, 508, 517, 520, 522, 549, 554, 565, 566, 571, 576, 581, 608, 610, 612, 613, 616, 620, 634, 636, 638, 654], "overal": [215, 217, 221, 222, 226, 227, 229, 231], "overflow": 240, "overlin": [322, 638], "overrid": [94, 204, 253, 495, 643], "overview": 2, "overwrite_input": 344, "p": [10, 295, 304, 307, 524, 527, 532, 538, 541, 634], "pack": [107, 571, 654], "packag": [0, 3], "packbit": 6, "pad": [6, 176, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 581], "pad_valu": 497, "pad_width": 497, "padder": 497, "padding_func": 497, "page": [3, 654], "pair": [10, 202, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 296, 299], "parallel": [1, 3, 4, 9, 644], "paramet": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 126, 133, 136, 139, 154, 171, 174, 175, 176, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 446, 449, 452, 467, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "parameter": [516, 522, 544, 566], "parametr": 620, "pareto": 6, "pars": [248, 325], "part": [3, 10, 14, 15, 21, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 138, 152, 225, 243, 244, 269, 275, 276, 283, 284, 299, 300, 302, 338, 342, 348, 350, 451, 465, 497, 573, 574, 601, 623, 627, 630, 631, 651], "partial": [36, 344, 600], "particular": [183, 309], "particularli": 201, "partit": [6, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 600, 621, 623, 627, 635, 642, 643, 651], "pass": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 126, 154, 181, 182, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 262, 267, 270, 287, 304, 325, 338, 346, 353, 439, 467, 488, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 579, 621, 623, 624, 627, 628, 635, 638, 642, 643], "past": 72, "path": [4, 201, 202, 248, 325], "path_info": 202, "pathlib": 325, "pattern": 59, "pearson": 88, "penros": 312, "per": [201, 216, 230, 572], "percentil": [6, 344], "perf_count": 0, "perform": [17, 22, 44, 45, 61, 77, 108, 201, 215, 217, 220, 221, 222, 226, 227, 229, 231, 237, 294, 317, 504, 610], "perhap": 579, "period": [10, 634], "permit": 248, "permut": [6, 171, 201, 351, 484, 499, 619, 654], "permute_dim": [6, 619], "perpendicular": 94, "pg": 310, "phase": [10, 21, 634], "phase_deg": 634, "pi": [0, 9, 10, 14, 27, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 100, 101, 214, 510, 596, 597, 598, 614, 615, 620, 634, 658], "pickl": [248, 325], "piecewis": 6, "pinv": 6, "pip": 4, "place": [6, 17, 18, 22, 23, 24, 38, 77, 79, 80, 81, 96, 97, 98, 99, 102, 111, 136, 157, 159, 171, 209, 211, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 246, 270, 272, 274, 339, 341, 343, 344, 347, 353, 356, 357, 359, 361, 362, 363, 364, 449, 470, 472, 484, 493, 497, 504, 507, 508, 559, 580, 581, 585, 588, 600, 607, 608, 610, 612, 618, 636, 651], "plane": 587, "platform": [96, 97, 98, 99, 187, 356, 357, 361, 363, 504, 610], "pleas": [0, 3, 42, 174, 201, 261, 263, 639, 651], "plot": 560, "plt": [345, 560], "plu": [326, 327, 329], "plugin": 4, "point": [10, 12, 13, 21, 26, 32, 38, 43, 44, 54, 59, 72, 86, 95, 189, 203, 204, 208, 212, 213, 214, 219, 220, 224, 225, 226, 227, 228, 233, 234, 240, 247, 248, 249, 251, 252, 253, 257, 266, 267, 269, 290, 304, 307, 324, 325, 330, 331, 337, 343, 344, 353, 359, 362, 364, 490, 494, 495, 519, 521, 551, 563, 573, 575, 576, 588, 590, 591, 597, 608, 620, 621, 636, 642, 643, 654], "pointer": [72, 184], "poisson": 6, "poli": 6, "polyadd": 6, "polyd": 6, "polydiv": 6, "polyfit": 6, "polyint": 6, "polymul": 6, "polysub": 6, "polyv": 6, "popul": [12, 13, 14, 15, 16, 21, 27, 28, 29, 30, 31, 32, 33, 38, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 82, 83, 86, 90, 91, 100, 101, 110, 119, 205, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 254, 258, 259, 260, 265, 266, 269, 273, 277, 279, 280, 289, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 348, 349, 352, 432, 489, 490, 492, 501, 502, 503, 505, 510, 511, 517, 549, 573, 575, 577, 583, 584, 588, 590, 594, 595, 596, 597, 598, 602, 604, 605, 609, 614, 615, 629, 630], "portion": [261, 262], "posinf": 353, "posit": [6, 10, 17, 18, 22, 26, 38, 43, 44, 45, 60, 74, 86, 106, 107, 148, 162, 209, 212, 213, 215, 217, 220, 221, 222, 225, 228, 230, 233, 240, 248, 274, 277, 279, 280, 281, 282, 294, 307, 319, 351, 353, 358, 360, 363, 461, 475, 489, 499, 524, 548, 585, 586, 588, 590, 592, 604, 605, 618, 619], "possess": 299, "possibl": [10, 51, 52, 57, 58, 61, 120, 154, 174, 201, 202, 209, 243, 244, 257, 261, 263, 338, 433, 467, 499, 508, 571, 580, 603, 606, 611, 612, 613, 619, 639], "possibli": 47, "pow": [6, 503, 651], "power": [6, 10, 208, 214, 240, 307, 502, 605, 635], "pre": 262, "precis": [12, 13, 59, 96, 97, 98, 99, 195, 201, 233, 240, 269, 304, 321, 338, 356, 357, 361, 363, 504, 573, 610, 618], "predecessor": 634, "prefer": [76, 85, 102, 126, 157, 439, 470, 491, 571], "prepend": [39, 108, 200, 617], "present": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 126, 182, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 267, 270, 325, 338, 346, 358, 360, 363, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 621, 623, 627, 635, 642, 643], "preserv": [52, 56, 57, 58, 77, 120, 185, 190, 201, 237, 238, 239, 240, 300, 301, 302, 344, 433, 571, 579, 618, 631], "press": [10, 310], "prevent": 201, "previou": [59, 497], "print": [0, 4, 45, 59, 84, 109, 182, 202, 488, 516, 517, 518, 519, 520, 521, 522, 541, 546], "print_device_info": 0, "printabl": 202, "printopt": 6, "prior": 108, "prob1": [330, 331], "prob12": [330, 331], "prob2": [330, 331], "probabl": [261, 331, 344, 524, 532, 541], "proce": 651, "process": [10, 597], "processor": 201, "prod": [6, 96, 98, 319, 320, 361, 651], "produc": [10, 37, 185, 325, 508, 591, 613], "product": [88, 94, 96, 98, 111, 127, 131, 201, 202, 271, 287, 288, 296, 305, 309, 311, 315, 318, 319, 320, 322, 339, 352, 356, 361, 440, 444, 496, 504, 616, 637, 638, 654], "program": [4, 241, 644, 654], "progress": [255, 324], "project": [4, 190, 322, 505, 638], "promot": [14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 62, 64, 66, 67, 68, 73, 74, 86, 90, 91, 100, 101, 110, 207, 208, 210, 240, 242, 243, 244, 245, 255, 265, 291, 324, 326, 327, 328, 329, 330, 331, 336, 339, 342, 348, 349, 352, 490, 502, 503, 510, 511, 575, 577, 582, 583, 590, 594, 596, 597, 598, 602, 604, 605, 609, 614, 615, 617, 629, 630, 638], "promote_typ": 6, "propag": [190, 243, 244, 341, 342, 347, 348, 356, 357, 358, 360, 361, 363], "proper": [243, 244, 299, 301], "properti": [10, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 113, 120, 126, 129, 132, 134, 135, 138, 140, 141, 145, 146, 152, 157, 158, 162, 165, 166, 167, 171, 172, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 300, 302, 313, 324, 325, 336, 338, 346, 366, 433, 439, 442, 445, 447, 448, 451, 453, 454, 458, 459, 465, 470, 471, 475, 478, 479, 480, 484, 485, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643, 651], "proport": 597, "protocol": [47, 176, 197, 246], "prototyp": 204, "provid": [0, 6, 10, 34, 35, 39, 60, 79, 80, 81, 87, 95, 112, 174, 201, 202, 209, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 250, 261, 262, 264, 281, 282, 308, 312, 337, 354, 355, 358, 360, 361, 363, 518, 550, 553, 576, 579, 589, 607, 612, 620, 631, 638, 640, 641, 658], "pseudo": [312, 512], "ptp": 6, "pure": [10, 219, 225, 227, 228], "purpos": [37, 304, 310], "put": [6, 10, 211, 219, 225, 227, 500, 508, 613, 651], "put_along_axi": [6, 507, 613], "putmask": [6, 507], "pval": 539, "py": 4, "pypi": 4, "pyplot": [345, 560], "pytest": 4, "python": [0, 2, 3, 47, 60, 139, 183, 184, 245, 246, 349, 452, 549, 577, 578, 651], "q": [301, 307, 313, 320, 344], "qquad": 10, "qr": 6, "quad": 10, "quadrant": [21, 29, 31, 49, 53, 215], "quantil": 6, "quaternion": 307, "question": 103, "queue": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 126, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 439, 493, 494, 495, 512, 515, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "quick": [2, 3], "quickest": 571, "quickli": [287, 658], "quicksort": [36, 600], "quotient": [32, 54], "r": [88, 94, 101, 313], "r1": 88, "r2": [88, 313], "r3": 88, "rad": 101, "rad2deg": [6, 100, 101, 634], "radian": [6, 14, 15, 21, 27, 28, 29, 31, 32, 49, 53, 54, 100, 101, 510, 634, 658], "radixsort": [36, 600], "rais": [12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 82, 83, 85, 86, 87, 90, 91, 95, 100, 101, 109, 110, 111, 120, 121, 141, 174, 203, 204, 205, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 263, 265, 267, 273, 277, 279, 280, 289, 290, 291, 292, 293, 307, 309, 310, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 343, 347, 348, 349, 352, 354, 355, 358, 359, 360, 362, 363, 364, 433, 434, 454, 489, 490, 492, 494, 495, 501, 502, 503, 504, 505, 510, 511, 571, 572, 575, 576, 577, 579, 580, 583, 584, 590, 594, 595, 596, 598, 600, 602, 603, 604, 605, 606, 608, 609, 610, 614, 615, 629, 630, 636, 638, 639, 642, 643, 651], "ramp": 497, "rand": [6, 88, 202, 520, 522, 552, 554, 555, 557], "randint": [6, 139, 452, 522, 553], "randn": [6, 237, 238, 239, 312, 313, 316, 320, 516, 521, 607], "random": [88, 139, 202, 237, 238, 239, 301, 309, 312, 313, 316, 320, 452, 607, 644, 654], "random_integ": [6, 518, 522, 550], "random_sampl": [6, 517, 522, 549, 552, 555, 557], "randomli": 546, "randomst": 550, "ranf": 6, "rang": [0, 60, 109, 250, 261, 262, 318, 331, 499, 506, 507, 541, 546, 572, 578, 607, 616, 619, 634, 654], "rank": [209, 211, 249, 304, 308, 321, 497, 611], "rate": [216, 230], "rather": 491, "ratio": [0, 110, 242, 304, 629, 658], "ration": 654, "ravel": [6, 136, 211, 236, 310, 449, 496, 580, 651], "ravel_multi_index": [6, 632], "raveled_indic": 572, "raw": 313, "rayleigh": 6, "rcond": [304, 312], "re": [25, 34, 35, 103, 225, 585], "read": [103, 107, 136, 186, 247, 248, 250, 251, 325, 449, 571, 580], "readonli": 190, "real": [6, 12, 13, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 33, 40, 49, 50, 53, 54, 55, 74, 75, 86, 95, 214, 217, 219, 224, 225, 226, 227, 228, 229, 231, 233, 241, 243, 244, 245, 265, 269, 275, 283, 284, 294, 299, 300, 301, 302, 308, 312, 313, 314, 316, 330, 331, 337, 342, 348, 349, 353, 362, 364, 524, 541, 574, 575, 576, 577, 590, 601, 602, 608, 630, 631, 636, 651, 654], "real_if_clos": [6, 21, 269, 573], "rearrang": [148, 461, 654], "reason": 227, "rebuild": 175, "recal": 184, "recent": [23, 61, 606], "recip": [4, 10], "reciproc": [6, 590, 604], "recommend": [201, 491, 617], "reconstruct": [181, 316, 631], "recov": 10, "reduc": [17, 22, 34, 35, 59, 313, 316, 337, 341, 343, 344, 345, 347, 354, 355, 358, 359, 360, 361, 362, 363, 364, 504, 576, 581, 608, 610, 636], "reduce_hypot": 265, "reduct": [17, 22], "redund": 228, "refer": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 136, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 168, 170, 171, 173, 174, 175, 176, 184, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 449, 451, 452, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651], "reflect": [497, 651], "reflect_typ": 497, "reflector": 313, "regardless": [178, 300, 302, 639], "regular": 325, "rel": [18, 36, 162, 274, 298, 308, 321, 475, 585, 586, 600], "relat": 186, "relationship": 88, "relev": [179, 255, 324, 336], "rem": 245, "remain": [17, 22, 59, 202, 229, 231, 261, 337, 343, 344, 351, 359, 362, 364, 576, 580, 608, 636], "remaind": [6, 242, 245, 349, 502, 503], "remov": [24, 34, 35, 100, 102, 107, 160, 209, 225, 298, 321, 473, 504, 510, 606, 610, 638, 654], "reorder": [201, 237, 320, 351], "rep": 617, "repeat": [6, 25, 215, 217, 221, 222, 226, 227, 229, 231, 232, 299, 300, 301, 302, 345, 500, 581, 617, 620, 631, 651], "repeatedli": [24, 25, 201], "repetit": [0, 578, 617], "replac": [3, 10, 24, 47, 77, 211, 353, 356, 357, 500, 508, 527, 580, 592, 651], "replic": 617, "repo": 4, "repr": 409, "repres": [10, 26, 39, 43, 44, 46, 47, 48, 59, 60, 62, 63, 65, 66, 68, 88, 184, 202, 220, 228, 246, 249, 255, 257, 270, 273, 314, 324, 336, 345, 364, 497, 513, 581, 625, 631, 651], "represent": [60, 62, 63, 64, 65, 66, 67, 68, 202, 233, 268, 270, 273, 291, 353, 490, 583, 602, 651], "request": 586, "requir": [4, 6, 39, 44, 45, 46, 48, 52, 98, 99, 120, 157, 177, 181, 183, 184, 201, 213, 270, 353, 433, 470, 497, 580, 581], "res_cpu": 103, "res_host": 103, "resampl": 597, "rese": 558, "reset": 651, "reshap": [0, 6, 16, 25, 34, 35, 37, 56, 58, 59, 103, 104, 105, 107, 110, 111, 130, 136, 141, 157, 171, 174, 175, 201, 209, 211, 218, 223, 237, 245, 263, 270, 271, 272, 287, 288, 298, 305, 306, 310, 318, 321, 323, 338, 339, 341, 347, 352, 443, 449, 454, 470, 484, 497, 500, 546, 571, 579, 581, 585, 587, 609, 616, 618, 620, 623, 624, 627, 628, 629, 631, 633, 639, 651], "resid": [209, 213, 246], "residu": 304, "resiz": [6, 209, 651], "resolut": 233, "resolv": [95, 209, 337, 576], "resourc": 0, "respect": [16, 25, 32, 54, 60, 62, 64, 66, 67, 68, 110, 162, 205, 240, 242, 245, 257, 258, 259, 291, 292, 293, 296, 330, 331, 332, 334, 335, 349, 352, 475, 492, 502, 503, 577, 583, 609, 629, 634], "rest": 42, "restor": 585, "restrict": 322, "result": [0, 4, 10, 17, 22, 25, 32, 34, 35, 37, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 77, 79, 80, 81, 86, 88, 92, 95, 96, 97, 98, 99, 102, 110, 111, 176, 194, 202, 204, 205, 210, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 240, 242, 247, 248, 249, 250, 251, 253, 255, 258, 259, 261, 262, 270, 273, 277, 279, 280, 281, 282, 290, 291, 292, 293, 294, 298, 299, 305, 306, 310, 313, 318, 323, 324, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 344, 347, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 491, 492, 495, 496, 502, 503, 504, 507, 520, 524, 554, 576, 580, 582, 583, 584, 586, 588, 591, 594, 595, 597, 603, 607, 608, 610, 612, 613, 616, 617, 620, 625, 629, 630, 631, 633, 636, 638, 641, 643, 651], "result_dpnp": 0, "result_numpi": 0, "result_typ": [6, 73, 176, 654], "ret": 511, "retain": 580, "retriev": [107, 198, 298], "retstep": 324, "return": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 130, 132, 134, 135, 136, 139, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 158, 161, 162, 163, 170, 171, 173, 174, 175, 178, 190, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441, 443, 445, 447, 448, 449, 452, 455, 456, 457, 459, 460, 461, 462, 464, 467, 468, 471, 474, 475, 476, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 544, 546, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651], "return_count": 631, "return_index": 631, "return_invers": 631, "reus": [246, 262], "revers": [107, 171, 232, 237, 238, 239, 298, 484, 499, 587, 619, 620, 633, 635], "rewrit": 304, "rfft": [6, 10, 216, 219, 224, 225, 226, 227, 229, 230, 231], "rfft2": [6, 226], "rfftfreq": [6, 216], "rfftn": [6, 214, 217, 227, 228, 229], "right": [10, 31, 53, 64, 67, 77, 94, 107, 109, 238, 239, 265, 291, 296, 299, 300, 301, 302, 309, 320, 338, 565, 576, 583, 591, 618, 620, 623, 627, 635], "right_shift": [6, 64, 67, 291], "rightmost": [261, 262, 320], "rint": [6, 38, 75, 234, 241, 588, 630], "rl": [311, 496], "roll": [6, 586], "rollaxi": [6, 585], "root": [6, 74, 265, 295, 575, 576, 590, 604, 605], "rot90": [6, 238, 239], "rotat": [238, 239, 587], "roughli": [195, 304], "round": [6, 26, 38, 75, 219, 224, 234, 241, 242, 299, 349, 577, 584, 630, 651, 654], "routin": [2, 644, 651], "row": [48, 52, 78, 80, 81, 88, 96, 97, 98, 99, 107, 120, 175, 212, 238, 239, 257, 264, 267, 270, 309, 316, 433, 491, 571, 572, 589, 603, 607, 621, 623, 631, 632, 639, 640], "row_stack": [6, 640], "rowvar": [88, 93], "rsqrt": [575, 604], "rtol": [18, 274, 308, 312], "rule": [14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 39, 43, 44, 46, 48, 49, 50, 53, 54, 55, 59, 62, 64, 66, 67, 68, 73, 74, 86, 87, 90, 91, 94, 97, 99, 100, 101, 110, 207, 208, 210, 242, 243, 244, 245, 255, 265, 291, 296, 324, 326, 327, 328, 329, 330, 331, 336, 337, 339, 342, 343, 344, 348, 349, 352, 359, 362, 364, 490, 502, 503, 510, 511, 575, 576, 577, 582, 583, 590, 594, 596, 597, 598, 602, 604, 605, 608, 609, 610, 614, 615, 620, 629, 630, 636, 638], "run": [0, 4], "runtim": 4, "runtimewarn": [358, 360], "s1": [162, 176, 288, 475], "s10": 176, "s16": 182, "s2": [162, 179, 475], "s25": 176, "s3": [162, 475], "s_": 24, "safe": [52, 73, 80, 81, 87, 120, 201, 264, 339, 433, 589, 607, 638, 640], "sai": 580, "said": 320, "same": [4, 10, 12, 13, 16, 17, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 38, 40, 41, 46, 48, 51, 52, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 77, 78, 80, 81, 86, 88, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 119, 120, 154, 171, 175, 204, 205, 209, 211, 220, 221, 222, 227, 232, 234, 240, 242, 243, 244, 245, 246, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 271, 273, 274, 281, 282, 283, 288, 289, 290, 291, 292, 293, 296, 298, 301, 307, 312, 313, 317, 318, 321, 330, 331, 332, 334, 335, 337, 341, 342, 343, 344, 347, 348, 349, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 432, 433, 467, 484, 488, 490, 492, 495, 497, 500, 502, 503, 504, 508, 516, 518, 522, 544, 550, 566, 571, 573, 576, 577, 578, 580, 583, 585, 586, 589, 591, 592, 600, 606, 607, 608, 609, 610, 612, 613, 616, 618, 622, 624, 626, 628, 629, 632, 636, 637, 640, 643, 658], "same_kind": [52, 73, 80, 81, 87, 120, 201, 264, 339, 433, 589, 607, 638, 640], "sampl": [10, 216, 223, 225, 228, 230, 255, 257, 261, 324, 336, 508, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 553, 556, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 613, 620, 623, 627, 644, 654], "sample_r": 230, "satisfi": [39, 44, 46, 48, 52, 120, 211, 303, 433, 500, 579, 592], "save": [6, 248, 344, 658], "savetxt": 6, "savez": 6, "savez_compress": 6, "scalar": [16, 18, 23, 32, 39, 40, 41, 43, 44, 46, 47, 48, 54, 62, 64, 66, 67, 68, 73, 85, 86, 87, 94, 103, 106, 108, 110, 111, 133, 139, 176, 181, 201, 202, 205, 211, 216, 230, 232, 240, 242, 243, 244, 245, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 271, 272, 274, 276, 284, 285, 288, 289, 290, 291, 292, 293, 305, 315, 318, 324, 330, 331, 332, 334, 335, 336, 338, 339, 342, 345, 348, 349, 352, 446, 452, 487, 490, 492, 497, 500, 502, 503, 507, 508, 512, 516, 518, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 544, 545, 547, 548, 550, 553, 556, 558, 562, 564, 565, 566, 567, 568, 569, 570, 574, 577, 583, 591, 592, 609, 612, 616, 620, 629, 630, 635, 637, 641, 651], "scale": [10, 202, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 255, 288, 313, 324, 336, 516, 529, 531, 533, 534, 535, 536, 544, 556, 561, 568], "scientif": 10, "scipi": 206, "scope": 4, "script": 4, "search": [202, 644, 654], "searchsort": [6, 109, 261, 600, 651], "second": [16, 18, 32, 40, 41, 54, 59, 62, 64, 66, 67, 68, 72, 86, 94, 107, 110, 111, 176, 202, 205, 208, 215, 216, 217, 218, 221, 222, 225, 228, 230, 240, 242, 243, 244, 245, 254, 257, 258, 259, 261, 262, 263, 264, 265, 271, 274, 288, 289, 291, 292, 293, 296, 298, 305, 318, 321, 322, 330, 331, 332, 334, 335, 338, 339, 341, 342, 345, 347, 348, 349, 352, 492, 496, 502, 503, 577, 583, 587, 605, 609, 611, 616, 618, 629, 637, 638], "section": [4, 42, 177, 217, 222, 227, 231, 306, 323, 651], "see": [3, 38, 88, 186, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 246, 261, 304, 306, 323, 497, 539, 588, 623, 624, 627, 628, 631, 651], "seed": [6, 88, 139, 202, 452, 512], "seek": 248, "seldom": 240, "select": [6, 36, 79, 87, 123, 211, 341, 347, 436, 600, 606, 612, 620, 644], "select_cpu_devic": 0, "select_default_devic": 0, "selector": [26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "self": [135, 367, 368, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 448], "semant": 261, "sens": 320, "sep": [248, 251], "separ": [10, 154, 176, 201, 248, 251, 262, 353, 467, 581], "sequenc": [25, 42, 47, 56, 57, 58, 78, 80, 81, 84, 89, 174, 175, 201, 202, 203, 204, 215, 217, 221, 222, 225, 226, 227, 229, 231, 252, 253, 255, 261, 262, 263, 264, 270, 272, 287, 309, 318, 324, 336, 344, 351, 494, 495, 497, 500, 546, 559, 578, 579, 582, 589, 603, 607, 616, 620, 633, 639, 640, 642, 643], "sequenti": [89, 93, 206, 350, 361], "seri": [10, 225, 538], "serv": 633, "set": [10, 24, 34, 35, 36, 39, 52, 61, 76, 79, 88, 92, 103, 104, 106, 109, 120, 121, 135, 157, 176, 190, 201, 203, 252, 261, 262, 267, 270, 306, 308, 310, 311, 312, 323, 324, 341, 347, 354, 355, 363, 422, 433, 434, 448, 470, 494, 495, 496, 497, 504, 592, 594, 595, 600, 610, 623, 627, 642, 643, 651], "set_bit_gener": 6, "set_printopt": 6, "set_stat": 6, "setbufs": 6, "setdiff1d": 6, "seterr": 6, "seterrcal": 6, "setfield": [6, 182], "setflag": 6, "setup": 4, "setuptool": 4, "setxor1d": 6, "sever": 303, "shape": [4, 6, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 46, 49, 50, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 119, 120, 146, 154, 158, 160, 171, 175, 176, 178, 198, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 237, 240, 241, 242, 243, 244, 245, 249, 252, 253, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 272, 273, 277, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 297, 298, 303, 304, 305, 306, 307, 309, 313, 314, 315, 316, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 432, 433, 459, 467, 471, 473, 484, 487, 488, 489, 490, 492, 493, 494, 495, 497, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 517, 518, 519, 520, 521, 531, 534, 539, 540, 545, 549, 550, 551, 552, 553, 554, 555, 557, 562, 563, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 624, 626, 627, 628, 629, 630, 632, 633, 636, 638, 639, 640, 641, 642, 643, 644, 654], "share": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 126, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 439, 493, 494, 495, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 621, 623, 627, 635, 642, 643], "shared_bin": 262, "shares_memori": 6, "shift": [10, 64, 67, 215, 217, 218, 222, 223, 291, 583, 585], "short": [597, 630, 638, 651], "shortcut": 497, "shorter": [219, 225], "shorthand": [12, 13, 16, 62, 63, 64, 65, 66, 67, 68, 110, 205, 242, 258, 259, 273, 291, 292, 293, 332, 334, 339, 349, 352, 489, 492, 501, 502, 503, 577, 583, 609, 629, 641], "should": [24, 34, 35, 39, 42, 52, 79, 107, 109, 111, 120, 156, 201, 202, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 245, 248, 256, 261, 272, 287, 304, 307, 318, 339, 351, 354, 355, 358, 360, 433, 469, 497, 539, 572, 580, 581, 591, 602, 612, 616, 618, 632, 634, 638, 651], "show": [9, 41, 179, 232, 265, 335, 345, 353, 356, 357, 358, 360, 363, 560], "show_config": 6, "show_runtim": 6, "shown": 4, "shuffl": 6, "side": [156, 257, 301, 469, 591], "sigma": [537, 544], "sign": [6, 10, 18, 60, 86, 182, 189, 274, 297, 314, 349, 489, 501, 504, 577, 595, 610, 630], "signal": [10, 216, 219, 224, 225, 227, 230, 597, 634], "signatur": [338, 339, 497, 638], "signbit": [6, 594], "signific": 201, "significantli": 60, "signum": 594, "similar": [3, 43, 44, 126, 157, 176, 255, 272, 296, 298, 305, 311, 321, 322, 324, 336, 338, 439, 470, 500, 518, 550, 623, 624, 627, 628], "simpl": [4, 335, 654], "simpli": [105, 171, 248, 261, 262, 290, 484], "sin": [0, 6, 29, 30, 49, 50, 90, 301, 345, 597, 598, 614, 620], "sinc": [6, 88, 159, 225, 299, 301, 472, 491, 633], "sine": [14, 15, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 596, 597, 598, 614, 615], "sing": 310, "singl": [9, 10, 36, 70, 71, 78, 88, 139, 160, 201, 202, 257, 272, 309, 318, 341, 347, 452, 473, 488, 504, 518, 519, 520, 521, 541, 549, 550, 551, 552, 553, 554, 555, 557, 563, 610, 616, 620, 638, 651], "singleton": [17, 22, 59, 209, 337, 343, 344, 358, 359, 360, 362, 364, 576, 606, 608, 636], "singular": [303, 304, 308, 310, 312, 316, 317], "sinh": [6, 15, 28, 30, 50, 91, 596, 615], "sinu": 597, "size": [0, 6, 26, 34, 35, 39, 42, 59, 61, 72, 79, 80, 81, 89, 92, 93, 96, 97, 104, 109, 139, 140, 157, 174, 176, 188, 191, 202, 211, 214, 216, 220, 230, 248, 255, 257, 263, 264, 296, 298, 306, 310, 311, 313, 316, 318, 322, 323, 324, 336, 338, 341, 343, 347, 354, 355, 356, 357, 359, 361, 363, 452, 453, 470, 488, 494, 500, 504, 516, 518, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 581, 585, 589, 603, 606, 607, 610, 616, 627, 633, 634, 638, 639, 640, 642, 651], "skip": 107, "slice": [24, 25, 79, 102, 123, 211, 272, 354, 355, 358, 359, 360, 362, 364, 436, 507, 508, 592, 613, 620, 627, 628, 651], "slogdet": [6, 297], "slower": [318, 616], "slowest": [136, 449, 571, 580], "small": [18, 210, 274, 304, 312, 328, 330, 331, 353, 627], "smaller": [108, 148, 214, 215, 217, 220, 221, 222, 224, 226, 227, 228, 229, 231, 233, 304, 349, 461, 500, 577, 634], "smallest": [233, 268, 310, 631], "smallest_norm": 233, "smat": 316, "so": [10, 14, 15, 17, 22, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 59, 185, 190, 205, 219, 224, 240, 261, 272, 284, 318, 324, 331, 337, 343, 344, 345, 359, 362, 364, 560, 576, 608, 616, 617, 636], "softwar": 4, "solut": [304, 315, 581], "solv": [6, 304, 319, 320, 654], "some": [26, 181, 190, 209, 211, 241, 271, 304, 497, 500, 634, 641, 651], "sometim": [260, 651], "somewhat": 307, "sophist": 307, "sort": [6, 24, 36, 42, 118, 148, 174, 263, 316, 344, 431, 461, 499, 591, 601, 603, 613, 619, 620, 631, 639, 644, 651, 654], "sort_complex": 6, "sorter": [156, 469, 591], "sought": 295, "sourc": [4, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 136, 137, 139, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 168, 169, 170, 171, 173, 174, 175, 200, 201, 202, 203, 204, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 261, 262, 263, 264, 267, 268, 270, 271, 272, 274, 275, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 487, 488, 491, 494, 495, 496, 497, 498, 500, 504, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 576, 578, 579, 580, 581, 582, 585, 586, 587, 591, 592, 593, 599, 600, 601, 603, 606, 607, 608, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "space": [6, 26, 216, 218, 230, 248, 255, 257, 324, 336, 620, 658], "spars": [270, 345], "speak": 310, "special": [2, 184, 206, 644, 654], "specif": [0, 4, 179, 181, 194, 249], "specifi": [17, 22, 23, 24, 26, 34, 35, 36, 38, 39, 43, 44, 45, 46, 48, 59, 60, 71, 73, 79, 80, 81, 85, 95, 96, 97, 98, 99, 102, 103, 106, 107, 118, 130, 139, 201, 202, 203, 204, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 237, 240, 247, 248, 249, 250, 252, 253, 255, 257, 267, 278, 298, 300, 302, 310, 318, 319, 320, 321, 322, 323, 324, 325, 336, 337, 343, 344, 346, 356, 357, 359, 361, 362, 363, 364, 431, 443, 452, 493, 494, 495, 499, 500, 504, 507, 508, 518, 521, 535, 545, 563, 571, 572, 576, 579, 581, 585, 586, 587, 588, 592, 599, 607, 608, 610, 612, 613, 616, 618, 619, 620, 621, 631, 633, 635, 636, 638, 642, 643], "spectrum": [10, 218, 219, 223, 224], "speed": 201, "speedup": 202, "spell": 491, "split": [6, 42, 80, 81, 174, 175, 263, 264, 589, 607, 633, 639, 640, 654], "spreadsheet": 241, "sqrt": [6, 10, 74, 138, 152, 451, 465, 576, 590, 605], "squar": [6, 74, 265, 267, 294, 295, 299, 300, 301, 303, 304, 307, 314, 319, 320, 338, 362, 364, 526, 542, 575, 576, 590, 592, 604, 608, 624, 628, 635, 636], "squeez": [6, 209, 651], "src": 87, "stabil": [36, 600], "stabl": [36, 600], "stack": [6, 78, 80, 81, 175, 264, 297, 298, 305, 306, 308, 312, 313, 314, 315, 317, 321, 339, 340, 491, 589, 603, 613, 633, 640], "stai": 77, "stand": 257, "standard": [18, 139, 161, 233, 242, 245, 343, 349, 359, 362, 364, 452, 474, 519, 521, 537, 544, 551, 560, 561, 562, 563, 564, 577, 608, 636, 651, 654], "standard_cauchi": 6, "standard_exponenti": 6, "standard_gamma": 6, "standard_norm": [6, 516, 519, 551], "standard_t": 6, "start": [2, 3, 26, 46, 48, 202, 216, 220, 230, 247, 255, 324, 336, 338, 581, 586, 623, 627], "start_tim": 0, "stat_length": 497, "state": 513, "statist": [497, 644, 654], "std": [6, 343, 359, 362, 364, 636, 651], "stdev": [521, 563], "step": [4, 26, 202, 255, 260, 324, 336], "sticki": [176, 185], "still": [59, 263, 310, 639], "stop": [26, 255, 324, 336], "store": [234, 255, 281, 282, 321, 324, 331, 336, 339, 496, 638], "str": [45, 47, 60, 80, 81, 195, 201, 202, 248, 251, 264, 325, 423, 497, 579, 589, 607, 625, 640], "str_": [181, 182, 188, 192], "straightforward": 270, "strictli": 310, "stride": [51, 52, 112, 120, 433], "string": [26, 39, 43, 44, 45, 46, 47, 48, 52, 60, 62, 63, 64, 65, 66, 67, 68, 85, 103, 104, 106, 120, 126, 176, 179, 182, 189, 194, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 273, 291, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 497, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 583, 621, 623, 625, 627, 635, 642, 643, 651], "string_repr": 202, "stringio": 325, "strongli": [4, 617], "struct": [176, 185], "structur": [176, 186, 325], "student": 564, "style": [52, 120, 433, 491, 497, 571, 572, 632], "sub": [42, 80, 81, 102, 107, 174, 184, 193, 194, 196, 198, 201, 263, 264, 320, 321, 589, 603, 607, 618, 621, 633, 639, 640], "subarrai": [102, 178, 181, 270, 631], "subclass": [44, 579], "subdiagon": [298, 321], "subdivid": 176, "subdtyp": 178, "subject": 4, "subok": [12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 39, 49, 50, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 82, 83, 85, 86, 90, 91, 100, 101, 110, 120, 204, 205, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 253, 254, 258, 259, 260, 265, 273, 277, 279, 280, 289, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 342, 348, 349, 352, 433, 489, 490, 492, 495, 501, 502, 503, 505, 510, 511, 575, 577, 583, 584, 590, 594, 595, 596, 598, 602, 604, 605, 609, 614, 615, 629, 630, 638, 643], "subscript": [201, 202], "subset": [3, 257, 606, 654], "subtract": [6, 497], "subtyp": 571, "succeed": 200, "success": [45, 524, 532, 541], "suffici": 60, "sugar": [105, 624, 628], "suggest": 107, "suit": 4, "suitabl": [37, 139, 171, 452, 484, 508, 581, 591, 613], "sum": [0, 3, 4, 6, 10, 16, 25, 59, 61, 95, 97, 98, 99, 103, 106, 107, 108, 111, 128, 170, 201, 220, 261, 265, 271, 295, 304, 305, 310, 318, 319, 321, 330, 331, 337, 339, 356, 357, 363, 441, 483, 524, 539, 541, 576, 616, 618, 620, 638, 651, 654], "sum_": [10, 310, 322, 638], "sum_along_diagon": 618, "sum_of_weight": 59, "summari": 644, "summat": [111, 201, 202, 271, 318, 320, 339, 496, 616, 638], "superdiagon": [298, 321], "suppli": [219, 224, 309, 497, 519, 551], "support": [3, 4, 9, 12, 13, 14, 15, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 44, 46, 47, 48, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 82, 83, 85, 86, 89, 90, 91, 93, 100, 101, 110, 120, 157, 190, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 265, 267, 272, 273, 277, 279, 280, 289, 290, 291, 292, 293, 296, 298, 305, 311, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 347, 348, 349, 350, 352, 354, 355, 358, 359, 360, 361, 362, 363, 364, 433, 470, 489, 490, 492, 494, 495, 498, 501, 502, 503, 504, 505, 506, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 577, 579, 583, 584, 590, 594, 595, 596, 600, 602, 604, 605, 608, 609, 610, 614, 615, 629, 630, 636, 638, 642, 643, 658], "sure": 579, "surnam": 176, "surpris": [220, 221, 222], "svd": [6, 295, 303, 308, 312, 317], "svdval": 6, "swap": [179, 194, 215, 218, 611], "swapax": [6, 351, 651], "swapped_cod": [179, 194], "swapped_dt": 194, "sy": [179, 194], "sycl": [0, 3, 26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "sycl_queu": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 112, 126, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 439, 493, 494, 495, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "sycldevic": [26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 514, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "syclqueu": [26, 39, 43, 44, 45, 46, 47, 48, 52, 85, 103, 104, 106, 120, 126, 203, 204, 212, 216, 230, 246, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 433, 439, 493, 494, 495, 512, 515, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 621, 623, 627, 635, 642, 643], "symmetr": [219, 225, 227, 228, 294, 299, 300, 301, 302, 308, 312, 316, 497], "symmetri": [10, 214, 219, 224, 225, 228], "syntact": [105, 624, 628], "syntax": 651, "sys_is_l": [179, 194], "system": [3, 4, 60, 315], "t": [10, 80, 81, 93, 171, 184, 219, 278, 294, 299, 301, 304, 484, 491, 564, 571, 620], "t1": 658, "tabl": [2, 9, 306, 323, 644], "tack": 198, "take": [6, 25, 78, 79, 211, 287, 338, 500, 508, 571, 580, 591, 592, 597, 613, 631, 634, 651, 658], "take_along_axi": [6, 34, 35, 36, 76, 508, 612], "taken": [59, 107, 108, 200, 202, 219, 225, 226, 227, 228, 229, 231, 260, 261, 339, 362, 364, 592, 608, 618, 621, 623, 627, 636, 637, 638], "tall": 232, "tan": [6, 29, 31, 32, 33, 49, 53, 54, 55, 90, 596, 615], "tangent": [14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 596, 598, 614, 615], "tanh": [6, 15, 28, 33, 55, 91, 598, 614], "target": [52, 73, 120, 169, 433, 482, 507], "target_devic": [169, 482], "tau": 313, "tbb": 4, "tempfil": 248, "temporari": [248, 658], "temporaryfil": 248, "ten": 532, "tensor": [47, 112, 201, 202, 246, 318, 319, 320, 354, 355, 358, 360, 361, 506, 616], "tensordot": [6, 111, 201, 271, 319, 320, 339, 496], "tensorinv": [6, 320], "tensorsolv": [6, 319], "term": [10, 16, 110, 202, 214, 215, 217, 220, 221, 222, 225, 228, 352, 609, 629], "test": [0, 2, 17, 18, 22, 205, 258, 259, 275, 277, 279, 280, 281, 282, 292, 293, 361, 491, 492, 524, 651, 654], "test_repetit": 0, "test_typ": 0, "teukolski": 10, "text": [247, 248, 250, 251, 325], "th": [97, 99, 103, 106, 108, 171, 200, 212, 257, 270, 344, 484, 493, 499, 592, 619, 622, 624, 626, 628], "than": [24, 25, 39, 64, 67, 79, 96, 97, 98, 99, 141, 148, 174, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 238, 239, 242, 249, 258, 259, 261, 262, 264, 291, 292, 293, 304, 308, 312, 313, 318, 321, 356, 357, 361, 363, 454, 461, 491, 497, 500, 504, 581, 583, 592, 594, 606, 607, 610, 616, 618, 630, 634, 658], "thei": [16, 18, 32, 41, 54, 62, 64, 66, 67, 68, 86, 110, 183, 205, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 274, 278, 289, 290, 291, 292, 293, 301, 304, 318, 330, 331, 332, 334, 335, 342, 348, 349, 352, 490, 492, 502, 503, 577, 583, 589, 591, 609, 616, 620, 623, 627, 629, 634, 635, 640, 651], "them": [78, 308, 312, 651], "theor": 299, "theoret": 202, "therefor": [62, 68, 214, 228, 249, 300, 302, 581], "theta": 620, "thi": [10, 12, 13, 19, 20, 23, 24, 25, 26, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 51, 52, 54, 77, 79, 80, 81, 85, 88, 92, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 112, 120, 126, 131, 133, 136, 139, 148, 154, 171, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 200, 201, 202, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 238, 239, 240, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 262, 264, 276, 278, 284, 287, 296, 298, 300, 302, 304, 305, 306, 309, 310, 311, 314, 317, 321, 322, 323, 324, 325, 328, 330, 331, 336, 337, 338, 339, 341, 344, 347, 349, 351, 353, 354, 355, 358, 360, 361, 363, 433, 439, 444, 446, 449, 452, 461, 467, 484, 491, 497, 500, 504, 507, 508, 555, 557, 571, 576, 577, 579, 580, 581, 586, 587, 589, 600, 607, 610, 612, 613, 617, 620, 624, 628, 631, 633, 634, 635, 638, 640, 641], "thing": 612, "think": [497, 580], "third": [78, 80, 81, 94, 174, 175, 215, 264, 318, 589, 603, 607, 616, 640], "those": [10, 24, 77, 88, 102, 307, 508], "though": 220, "thousand": 532, "three": [56, 57, 58, 209, 307, 318, 338, 512, 558, 616, 631], "threshold": 308, "through": [44, 192, 262, 287, 299, 301, 304, 338, 579, 651], "throw": 539, "thu": [10, 219, 225, 227, 617], "tile": [6, 578, 654], "time": [0, 10, 16, 18, 32, 40, 41, 54, 62, 64, 66, 67, 68, 86, 108, 110, 111, 205, 215, 217, 219, 221, 222, 224, 226, 227, 229, 231, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 271, 272, 274, 280, 288, 289, 290, 291, 292, 293, 304, 308, 312, 318, 330, 331, 332, 334, 335, 342, 348, 349, 352, 490, 492, 497, 502, 503, 524, 539, 577, 583, 587, 597, 609, 613, 616, 617, 629, 631, 637], "time_dpnp": 0, "time_numpi": 0, "timedelta": 189, "timeit": 201, "timestep": 216, "tini": 233, "titl": 182, "tm": 245, "to_begin": 200, "to_devic": 6, "to_end": 200, "tobyt": 6, "todo": 542, "tofil": [6, 248], "togeth": [18, 80, 81, 185, 220, 274, 287, 607, 641], "tol": [308, 540, 574], "toler": [18, 40, 274, 308, 574], "tolist": 6, "too": [4, 215, 217, 221, 222, 226, 227, 229, 231, 641], "toolkit": 3, "tostr": 6, "total": [6, 92, 96, 98, 145, 458, 581, 599, 608, 636], "toward": [38, 75, 234, 241, 242, 261, 262, 349, 490, 577, 584, 587, 588, 630], "trace": [6, 103, 106, 107, 201, 651], "traceback": [23, 61, 606], "trail": 625, "transfer": [169, 482], "transform": [202, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 644, 654], "transpos": [6, 37, 88, 113, 141, 201, 278, 294, 301, 340, 351, 366, 454, 499, 651, 654], "trapezoid": [6, 97, 99, 610], "trapz": 6, "treat": [18, 88, 102, 219, 225, 227, 248, 257, 274, 300, 302, 304, 309, 315, 325, 344, 356, 357, 361, 363, 504, 508, 591, 613, 617, 631, 634, 651], "tri": 6, "trial": 524, "triangl": [103, 265, 338, 576, 621, 622, 623, 624, 626, 627, 628], "triangular": [6, 294, 300, 302, 313, 338, 623, 624, 627, 628], "trigonometr": [14, 15, 21, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 90, 91, 596, 598, 614, 615, 654], "tril": [6, 103, 338, 621, 623, 624, 627], "tril_indic": [6, 338, 624, 627], "tril_indices_from": [6, 628], "trili": 624, "trili1": 624, "trim": [215, 217, 221, 222, 226, 227, 229, 231, 625], "trim_zero": 6, "triu": [6, 103, 338, 621, 623, 627, 628], "triu_indic": [6, 338, 623, 628], "triu_indices_from": [6, 624], "triui": 628, "triuim1": 628, "trivial": [299, 613], "true": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 100, 101, 109, 110, 114, 115, 120, 126, 142, 143, 144, 149, 161, 163, 173, 176, 179, 190, 194, 201, 202, 205, 207, 208, 209, 210, 211, 213, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 254, 255, 258, 259, 260, 261, 265, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 303, 306, 308, 310, 312, 313, 315, 316, 318, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 370, 427, 428, 433, 439, 455, 456, 457, 462, 474, 476, 486, 489, 490, 491, 492, 500, 501, 502, 503, 504, 505, 508, 510, 511, 527, 575, 576, 577, 579, 580, 583, 584, 590, 592, 594, 595, 596, 598, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 620, 629, 630, 631, 633, 635, 636, 638, 641], "true_divid": [6, 110], "trunc": [6, 38, 75, 234, 241, 584, 588], "truncat": [38, 75, 79, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 241, 560, 584, 588, 630], "trust": [354, 355], "truth": [62, 63, 65, 66, 68, 205, 258, 259, 273, 292, 293, 332, 333, 334, 335, 492, 651, 654], "try": [4, 45], "tukei": 10, "tup": [78, 175, 264, 589, 640], "tupl": [17, 22, 23, 24, 25, 34, 35, 39, 43, 44, 45, 46, 48, 59, 70, 71, 72, 85, 92, 95, 103, 104, 105, 106, 139, 157, 171, 176, 182, 196, 198, 202, 209, 218, 223, 237, 246, 249, 252, 253, 255, 257, 261, 262, 264, 270, 276, 284, 287, 288, 310, 313, 320, 323, 324, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 358, 359, 360, 361, 362, 363, 364, 452, 470, 484, 488, 491, 493, 497, 499, 504, 572, 576, 578, 580, 581, 585, 589, 593, 606, 607, 608, 610, 617, 619, 623, 624, 627, 628, 632, 633, 635, 636, 638, 640, 651], "turn": 78, "twister": 512, "two": [10, 18, 25, 40, 56, 57, 60, 62, 63, 65, 66, 68, 84, 88, 89, 94, 106, 107, 108, 111, 131, 141, 148, 164, 176, 182, 201, 202, 209, 214, 215, 217, 220, 221, 222, 225, 226, 227, 229, 231, 243, 244, 257, 271, 273, 274, 288, 290, 298, 300, 304, 306, 309, 311, 315, 317, 318, 321, 332, 334, 335, 339, 340, 341, 342, 344, 347, 348, 351, 358, 360, 444, 454, 461, 477, 496, 497, 519, 551, 571, 584, 587, 588, 592, 611, 616, 618, 623, 624, 627, 628, 637], "type": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 120, 126, 132, 136, 139, 146, 154, 158, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 432, 433, 439, 445, 449, 452, 459, 467, 471, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 654], "type_nam": 0, "typeerror": [59, 61, 87, 157, 246, 290, 470], "typenam": 6, "typestr": 197, "typic": [18, 219, 274, 591, 651], "u": [189, 294, 300, 302, 316, 338, 361, 363, 631], "u1": [176, 247, 248], "u16": 181, "u4": 73, "u8": 176, "ufunc": [2, 25, 644, 651], "uint64": 176, "uint8": [176, 247, 248], "uk": 10, "un": 191, "unalt": 497, "unari": 651, "unchang": 231, "undefin": [21, 148, 344, 461, 497], "under": [306, 323], "underli": [62, 66, 68, 571, 580], "undo": [10, 222], "undocu": 190, "unexpect": [361, 363], "unicod": [182, 189], "uniform": [6, 190, 257, 261, 262, 336, 517, 518, 520, 549, 552, 554, 555, 557], "uniformli": [336, 522, 566], "uniniti": [39, 203, 204, 252, 494, 642], "union1d": 6, "uniqu": [6, 59, 61, 95, 109, 180, 195, 337, 343, 351, 359, 362, 364, 497, 576, 578, 608, 636], "unique_al": 6, "unique_count": [6, 631], "unique_indic": 631, "unique_invers": [6, 631], "unique_valu": 6, "unit": [162, 216, 230, 287, 299, 307, 314, 475], "unitari": [10, 257, 313, 316], "uniti": 261, "univ": 10, "univers": [2, 310, 644, 651], "unless": [17, 22, 52, 96, 97, 98, 99, 120, 201, 261, 299, 308, 310, 336, 356, 357, 361, 363, 433, 504, 610, 631, 638], "unlik": [154, 157, 230, 467, 470], "unmodifi": 262, "unpackbit": 6, "unravel": 632, "unravel_index": [6, 34, 35, 572], "unraveled_coord": 632, "unsaf": [52, 73, 80, 81, 87, 120, 201, 264, 339, 433, 589, 607, 638, 640], "unscal": 10, "unsign": [176, 189, 504, 610], "unspecifi": 580, "unstack": [6, 264, 589, 607, 640], "unsupport": [12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 86, 90, 91, 100, 101, 110, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 246, 254, 260, 265, 273, 289, 290, 291, 327, 328, 329, 330, 331, 342, 348, 349, 350, 352, 489, 490, 501, 502, 503, 505, 510, 511, 575, 577, 583, 584, 590, 594, 595, 596, 598, 602, 609, 614, 615, 629, 630], "until": [202, 585, 586], "unwrap": [6, 100, 510], "up": [4, 10, 179, 201, 239, 613, 624, 631], "upcast": 39, "updat": 4, "uplo": [300, 302], "upon": [162, 475], "upper": [103, 212, 261, 262, 294, 300, 302, 313, 338, 621, 623, 624, 626, 627, 628], "url": 4, "us": [4, 10, 16, 18, 23, 24, 26, 32, 37, 39, 43, 44, 45, 46, 47, 48, 51, 52, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 77, 80, 81, 85, 88, 94, 96, 97, 98, 99, 102, 103, 104, 106, 107, 110, 120, 126, 136, 157, 176, 183, 184, 186, 190, 192, 201, 202, 203, 204, 205, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 241, 242, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 267, 270, 271, 273, 278, 287, 290, 291, 292, 293, 294, 295, 298, 300, 301, 302, 304, 308, 309, 310, 312, 318, 321, 324, 325, 331, 332, 334, 336, 338, 339, 341, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 372, 433, 439, 449, 470, 489, 491, 492, 493, 494, 495, 497, 500, 501, 502, 503, 504, 508, 512, 514, 515, 516, 522, 525, 527, 528, 538, 543, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 563, 566, 571, 574, 577, 578, 579, 580, 581, 583, 585, 591, 592, 594, 597, 601, 608, 609, 610, 612, 613, 616, 617, 618, 620, 621, 623, 624, 627, 628, 629, 631, 632, 635, 636, 638, 641, 642, 643, 651, 658], "usabl": 240, "usag": [3, 4, 216, 230], "use_getitem": 183, "use_setitem": 183, "user": [183, 186, 353, 497], "usm": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 126, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 439, 493, 494, 495, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 606, 621, 623, 627, 635, 642, 643], "usm_ndarrai": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 120, 133, 137, 174, 175, 200, 201, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 446, 450, 487, 489, 490, 491, 492, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 643], "usm_typ": [26, 39, 43, 44, 45, 46, 47, 48, 85, 103, 104, 106, 112, 126, 203, 204, 212, 216, 230, 247, 248, 249, 250, 251, 252, 253, 255, 267, 270, 324, 325, 336, 338, 346, 439, 493, 494, 495, 516, 517, 518, 519, 520, 521, 522, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 621, 623, 627, 635, 642, 643], "usual": [104, 157, 182, 266, 305, 339, 470], "util": 644, "v": [84, 103, 106, 156, 189, 299, 300, 322, 344, 469, 507, 591, 638], "v0": 6, "v10": 176, "v13": 6, "v2": 6, "v_sort": 344, "val": [150, 232, 422, 463, 500], "valid": [89, 209, 338, 611, 623, 624, 627, 628], "valu": [10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 103, 108, 109, 110, 116, 117, 120, 122, 126, 133, 135, 148, 150, 157, 190, 194, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 219, 220, 225, 227, 228, 232, 233, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 267, 269, 270, 272, 273, 274, 276, 277, 279, 280, 283, 284, 287, 289, 290, 291, 292, 293, 294, 299, 300, 301, 302, 303, 304, 307, 308, 310, 312, 314, 315, 316, 317, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 347, 348, 349, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 368, 369, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 433, 435, 439, 446, 448, 461, 463, 470, 489, 490, 491, 492, 494, 495, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 517, 518, 522, 532, 549, 550, 566, 573, 575, 576, 577, 578, 579, 580, 583, 584, 585, 588, 590, 591, 592, 594, 595, 596, 597, 600, 602, 604, 605, 608, 609, 610, 612, 613, 614, 615, 618, 620, 623, 627, 629, 630, 631, 634, 636, 638, 641, 642, 643, 651, 654], "value2": 190, "valueerror": [23, 39, 44, 45, 141, 246, 310, 354, 355, 454, 580, 603, 606], "van": 310, "vander": 6, "vandermond": 635, "var": [6, 343, 359, 362, 364, 608, 651], "vararg": 257, "vari": [10, 17, 21, 22, 107, 202, 215, 217, 219, 220, 221, 222, 224, 225, 228, 231, 249, 270, 278, 295, 298, 299, 300, 304, 306, 310, 353, 359, 362, 364, 571, 574, 597], "variabl": [61, 88, 93, 304, 315], "varianc": [173, 343, 359, 362, 364, 486, 608, 636, 654], "variou": [310, 597, 658], "vdot": [6, 111, 322, 339, 638], "vecdot": [6, 637], "vector": [94, 201, 249, 270, 271, 287, 295, 296, 305, 308, 309, 310, 311, 315, 316, 317, 322, 323, 339, 344, 345, 496, 497, 637, 638, 654], "vector_norm": [6, 310], "vendor": 4, "veri": [3, 10, 18, 272, 274, 311, 345, 353, 496], "verif": 0, "verifi": 294, "version": [4, 92, 94, 107, 135, 193, 236, 339, 344, 448, 491, 496, 572, 618, 632, 637, 638], "vertic": [78, 80, 81, 107, 175, 232, 237, 238, 264, 298, 587, 589, 603, 607, 639, 640], "vetterlin": 10, "vh": 316, "via": 225, "view": [6, 42, 56, 57, 58, 69, 103, 107, 113, 141, 154, 171, 174, 209, 215, 217, 221, 222, 226, 227, 229, 231, 237, 238, 239, 263, 345, 351, 366, 454, 467, 484, 499, 508, 571, 572, 580, 587, 603, 606, 611, 619, 632, 639], "violat": 87, "void": [176, 189], "void640": 191, "von": 567, "vonmis": 6, "vsplit": [6, 80, 81, 603], "vstack": [6, 78, 80, 81, 175, 264, 304, 589, 603, 607], "w": [10, 59, 61, 299, 300, 301, 302, 307, 579], "wa": [10, 95, 190, 309, 337, 358, 360, 362, 364, 521, 563, 576, 580, 608, 636], "wai": [3, 4, 10, 148, 202, 214, 220, 221, 222, 227, 248, 318, 461, 616], "wald": 6, "walk": 192, "want": [4, 278, 613], "warn": [181, 354, 355, 540, 581], "we": [85, 88, 104, 107, 202, 232, 304, 338, 508, 613, 620], "weibul": [6, 570], "weight": [59, 61, 93, 261, 262, 343, 359, 610], "well": [190, 201, 248, 261, 262, 504, 524, 541, 560], "were": [80, 81, 249, 519, 551, 607, 634], "what": [10, 52, 73, 80, 81, 87, 120, 176, 184, 201, 205, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 264, 275, 339, 433, 524, 541, 589, 607, 638, 640, 651], "when": [10, 23, 26, 36, 39, 40, 43, 44, 46, 48, 51, 52, 59, 60, 79, 85, 87, 109, 120, 185, 201, 214, 225, 227, 228, 243, 244, 255, 260, 272, 299, 305, 310, 313, 317, 318, 324, 331, 336, 338, 339, 344, 349, 356, 357, 358, 360, 361, 363, 433, 571, 577, 581, 584, 586, 588, 592, 600, 612, 616, 620, 631, 638, 641, 658], "whenev": [209, 499, 611, 619], "where": [0, 6, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 79, 82, 83, 85, 86, 87, 90, 91, 94, 95, 100, 101, 103, 104, 106, 108, 109, 110, 114, 115, 120, 126, 142, 143, 144, 149, 156, 161, 163, 173, 174, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 219, 225, 226, 227, 230, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 279, 280, 283, 284, 289, 290, 291, 292, 293, 294, 298, 304, 308, 313, 316, 317, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 352, 358, 359, 360, 361, 362, 363, 364, 427, 428, 433, 439, 455, 456, 457, 462, 469, 474, 476, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 510, 511, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 558, 563, 566, 571, 575, 576, 577, 581, 583, 584, 586, 590, 591, 592, 594, 595, 596, 598, 602, 603, 604, 605, 608, 609, 610, 614, 615, 618, 619, 621, 623, 627, 629, 630, 634, 635, 636, 638, 639, 642, 643], "wherev": 87, "whether": [17, 18, 22, 25, 40, 95, 98, 99, 109, 184, 185, 187, 246, 274, 275, 278, 294, 313, 324, 353, 361, 363, 572, 595, 631, 632, 651], "which": [3, 4, 10, 16, 17, 18, 22, 23, 24, 25, 26, 32, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 52, 54, 59, 61, 62, 64, 66, 67, 68, 69, 79, 80, 81, 85, 86, 87, 92, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 120, 126, 139, 182, 185, 201, 202, 203, 204, 205, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 267, 270, 272, 277, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 296, 298, 299, 306, 308, 310, 317, 320, 321, 322, 323, 325, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 433, 439, 452, 490, 491, 492, 493, 494, 495, 499, 502, 503, 504, 507, 512, 544, 549, 550, 551, 552, 553, 554, 555, 557, 563, 566, 572, 576, 577, 578, 581, 583, 585, 592, 599, 600, 603, 606, 607, 608, 609, 610, 612, 618, 619, 620, 621, 622, 623, 626, 627, 629, 630, 633, 634, 635, 636, 638, 641, 642, 643, 651, 658], "whichev": 271, "while": [10, 88, 229, 231, 261, 262, 343, 359, 362, 364, 491, 500, 504, 585, 608, 610, 621, 636], "whitespac": [248, 251], "whole": [215, 217, 221, 222, 226, 227, 229, 231, 623, 627], "whose": [12, 13, 14, 15, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 107, 198, 211, 212, 232, 295, 298, 300, 301, 302, 306, 317, 319, 321, 338, 340, 351, 585, 624, 628, 632], "why": 225, "wide": 232, "width": [60, 63, 65, 191, 261, 262, 273, 497], "wild": [524, 541], "window": [4, 216, 230], "wise": [12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 38, 40, 49, 50, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 74, 75, 78, 80, 81, 82, 83, 86, 88, 90, 91, 95, 110, 125, 175, 205, 207, 208, 210, 213, 234, 240, 241, 242, 243, 244, 245, 258, 259, 260, 263, 264, 265, 269, 273, 274, 277, 279, 280, 281, 282, 290, 291, 292, 293, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 342, 347, 348, 349, 350, 352, 358, 360, 361, 438, 489, 490, 492, 501, 502, 503, 505, 573, 575, 577, 583, 584, 588, 589, 590, 594, 595, 596, 597, 598, 603, 604, 605, 607, 609, 614, 615, 629, 630, 639, 640, 644, 651, 654, 658], "wish": 651, "within": [18, 26, 40, 52, 120, 201, 219, 220, 221, 222, 224, 225, 227, 261, 262, 274, 433, 507, 514, 515, 522, 566], "without": [107, 171, 203, 232, 484, 571, 580, 581, 651], "won": 184, "word": [220, 221, 222, 225, 227, 241, 301, 522, 566], "work": [4, 38, 51, 79, 139, 452, 613, 651], "world": [176, 524, 541], "would": [36, 80, 81, 148, 176, 249, 270, 309, 338, 339, 461, 499, 522, 572, 600, 603, 607, 613, 619, 634, 638], "wrap": [100, 150, 168, 232, 463, 481, 497, 507, 508, 510, 572, 591, 612, 613, 634], "wrapper": 112, "writabl": 579, "write": [103, 107, 136, 232, 248, 449, 580], "writeabl": 579, "written": [4, 92, 95, 232, 248, 278, 337, 576, 641], "x": [0, 3, 4, 12, 13, 14, 15, 17, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 57, 58, 61, 63, 65, 69, 71, 74, 75, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 101, 103, 106, 108, 109, 120, 126, 138, 139, 146, 152, 157, 158, 174, 176, 177, 178, 180, 181, 183, 191, 193, 198, 200, 203, 204, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 229, 230, 231, 234, 235, 236, 241, 247, 248, 249, 250, 252, 253, 255, 257, 263, 266, 267, 269, 270, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 290, 295, 296, 298, 301, 304, 306, 310, 313, 315, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 345, 346, 350, 351, 353, 433, 439, 451, 452, 459, 465, 470, 471, 489, 491, 493, 494, 495, 501, 504, 505, 506, 510, 511, 540, 546, 571, 573, 575, 576, 578, 579, 584, 585, 586, 588, 590, 592, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606, 611, 612, 614, 615, 620, 621, 630, 633, 635, 639, 641, 642, 643], "x0": [46, 48, 85, 106, 495, 635, 643], "x00": 248, "x01": [247, 248], "x02": [247, 248], "x03": [247, 248], "x04": [247, 248], "x05": 247, "x1": [16, 18, 21, 29, 31, 32, 40, 41, 49, 52, 53, 54, 62, 64, 66, 67, 68, 76, 86, 89, 110, 120, 205, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 287, 289, 290, 291, 292, 293, 296, 305, 311, 322, 330, 331, 332, 333, 334, 335, 339, 342, 345, 348, 349, 350, 352, 433, 489, 490, 492, 498, 501, 502, 503, 509, 559, 577, 583, 585, 609, 629, 638], "x1_i": [16, 32, 54, 62, 64, 66, 67, 68, 86, 110, 205, 240, 242, 245, 258, 259, 265, 291, 292, 293, 330, 331, 332, 334, 335, 349, 352, 492, 502, 503, 577, 583, 609, 629], "x2": [16, 17, 18, 21, 22, 29, 31, 32, 39, 40, 41, 49, 53, 54, 62, 64, 66, 67, 68, 86, 89, 110, 205, 240, 242, 243, 244, 245, 254, 258, 259, 260, 265, 287, 289, 290, 291, 292, 293, 296, 305, 311, 322, 330, 331, 332, 333, 334, 335, 339, 342, 345, 348, 349, 352, 489, 490, 492, 501, 502, 503, 577, 583, 585, 604, 609, 629, 638], "x2_i": [16, 32, 54, 62, 64, 66, 67, 68, 86, 110, 205, 240, 242, 245, 258, 259, 265, 291, 292, 293, 330, 331, 332, 334, 335, 349, 352, 492, 502, 503, 577, 583, 609, 629], "x3": [17, 22, 240], "x_i": [12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 33, 49, 50, 53, 55, 63, 65, 74, 75, 82, 83, 90, 91, 207, 208, 210, 241, 269, 273, 326, 327, 328, 329, 333, 489, 501, 505, 573, 575, 584, 588, 590, 594, 595, 596, 598, 604, 605, 614, 615, 630], "xarr": 88, "xi": [329, 345], "xn": [287, 345], "xor": [62, 63, 65, 66, 68, 273, 332, 333, 334, 335], "xv": 345, "xx": 345, "xy": 345, "y": [0, 4, 14, 15, 26, 27, 28, 29, 30, 31, 33, 39, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 69, 85, 88, 93, 94, 106, 126, 146, 154, 157, 176, 200, 203, 204, 209, 212, 216, 230, 247, 248, 249, 250, 252, 253, 255, 257, 267, 281, 282, 295, 296, 304, 324, 325, 336, 345, 346, 350, 353, 439, 459, 467, 470, 493, 494, 495, 579, 620, 621, 635, 641, 642, 643], "y1": 290, "y2": 290, "yarr": 88, "yet": [4, 6], "yield": [14, 15, 27, 28, 29, 30, 31, 33, 36, 49, 50, 53, 55, 361, 363, 491, 497, 522, 641, 651], "you": [4, 107, 219, 224, 225, 278, 338, 344, 580, 612, 613, 651, 658], "your": [4, 107, 658], "yv": 345, "yy": 345, "z": [14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 33, 39, 43, 44, 45, 46, 48, 49, 50, 53, 55, 85, 94, 106, 203, 204, 212, 216, 230, 247, 248, 249, 250, 252, 253, 255, 267, 324, 325, 336, 345, 346, 493, 494, 495, 532, 621, 635, 642, 643], "zero": [6, 10, 17, 21, 22, 36, 37, 38, 39, 64, 75, 92, 94, 95, 104, 108, 146, 147, 157, 158, 162, 203, 204, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 241, 248, 252, 253, 267, 269, 275, 276, 281, 282, 283, 284, 291, 299, 300, 302, 304, 307, 308, 312, 316, 318, 337, 338, 341, 343, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 459, 460, 470, 471, 475, 487, 491, 494, 495, 497, 504, 520, 524, 552, 554, 555, 557, 573, 574, 576, 581, 584, 588, 594, 600, 608, 610, 616, 621, 622, 625, 626, 630, 636, 641, 643], "zeros_lik": [6, 39, 101, 204, 253, 344, 495, 511, 642], "zipf": 6}, "titles": ["Interplay with the Data Parallel Control Library", "C++ backend API Reference", "Data Parallel Extension for NumPy*", "Overview", "Quick Start Guide", "Bit-wise operations", "Comparison Table NumPy/ DPNP/ CuPy", "Array creation routines", "Data type routines", "Available array data types", "Discrete Fourier Transform", "Functional programming", "dpnp.abs", "dpnp.absolute", "dpnp.acos", "dpnp.acosh", "dpnp.add", "dpnp.all", "dpnp.allclose", "dpnp.amax", "dpnp.amin", "dpnp.angle", "dpnp.any", "dpnp.append", "dpnp.apply_along_axis", "dpnp.apply_over_axes", "dpnp.arange", "dpnp.arccos", "dpnp.arccosh", "dpnp.arcsin", "dpnp.arcsinh", "dpnp.arctan", "dpnp.arctan2", "dpnp.arctanh", "dpnp.argmax", "dpnp.argmin", "dpnp.argsort", "dpnp.argwhere", "dpnp.around", "dpnp.array", "dpnp.array_equal", "dpnp.array_equiv", "dpnp.array_split", "dpnp.asanyarray", "dpnp.asarray", "dpnp.asarray_chkfinite", "dpnp.ascontiguousarray", "dpnp.asfarray", "dpnp.asfortranarray", "dpnp.asin", "dpnp.asinh", "dpnp.asnumpy", "dpnp.astype", "dpnp.atan", "dpnp.atan2", "dpnp.atanh", "dpnp.atleast_1d", "dpnp.atleast_2d", "dpnp.atleast_3d", "dpnp.average", "dpnp.binary_repr", "dpnp.bincount", "dpnp.bitwise_and", "dpnp.bitwise_invert", "dpnp.bitwise_left_shift", "dpnp.bitwise_not", "dpnp.bitwise_or", "dpnp.bitwise_right_shift", "dpnp.bitwise_xor", "dpnp.broadcast_arrays", "dpnp.broadcast_shapes", "dpnp.broadcast_to", "dpnp.byte_bounds", "dpnp.can_cast", "dpnp.cbrt", "dpnp.ceil", "dpnp.choose", "dpnp.clip", "dpnp.column_stack", "dpnp.compress", "dpnp.concat", "dpnp.concatenate", "dpnp.conj", "dpnp.conjugate", "dpnp.convolve", "dpnp.copy", "dpnp.copysign", "dpnp.copyto", "dpnp.corrcoef", "dpnp.correlate", "dpnp.cos", "dpnp.cosh", "dpnp.count_nonzero", "dpnp.cov", "dpnp.cross", "dpnp.cumlogsumexp", "dpnp.cumprod", "dpnp.cumsum", "dpnp.cumulative_prod", "dpnp.cumulative_sum", "dpnp.deg2rad", "dpnp.degrees", "dpnp.delete", "dpnp.diag", "dpnp.diag_indices", "dpnp.diag_indices_from", "dpnp.diagflat", "dpnp.diagonal", "dpnp.diff", "dpnp.digitize", "dpnp.divide", "dpnp.dot", "dpnp.dpnp_array.dpnp_array", "dpnp.dpnp_array.dpnp_array.T", "dpnp.dpnp_array.dpnp_array.all", "dpnp.dpnp_array.dpnp_array.any", "dpnp.dpnp_array.dpnp_array.argmax", "dpnp.dpnp_array.dpnp_array.argmin", "dpnp.dpnp_array.dpnp_array.argsort", "dpnp.dpnp_array.dpnp_array.asnumpy", "dpnp.dpnp_array.dpnp_array.astype", "dpnp.dpnp_array.dpnp_array.choose", "dpnp.dpnp_array.dpnp_array.clip", "dpnp.dpnp_array.dpnp_array.compress", "dpnp.dpnp_array.dpnp_array.conj", "dpnp.dpnp_array.dpnp_array.conjugate", "dpnp.dpnp_array.dpnp_array.copy", "dpnp.dpnp_array.dpnp_array.cumprod", "dpnp.dpnp_array.dpnp_array.cumsum", "dpnp.dpnp_array.dpnp_array.device", "dpnp.dpnp_array.dpnp_array.diagonal", "dpnp.dpnp_array.dpnp_array.dot", "dpnp.dpnp_array.dpnp_array.dtype", "dpnp.dpnp_array.dpnp_array.fill", "dpnp.dpnp_array.dpnp_array.flags", "dpnp.dpnp_array.dpnp_array.flat", "dpnp.dpnp_array.dpnp_array.flatten", "dpnp.dpnp_array.dpnp_array.get_array", "dpnp.dpnp_array.dpnp_array.imag", "dpnp.dpnp_array.dpnp_array.item", "dpnp.dpnp_array.dpnp_array.itemsize", "dpnp.dpnp_array.dpnp_array.mT", "dpnp.dpnp_array.dpnp_array.max", "dpnp.dpnp_array.dpnp_array.mean", "dpnp.dpnp_array.dpnp_array.min", "dpnp.dpnp_array.dpnp_array.nbytes", "dpnp.dpnp_array.dpnp_array.ndim", "dpnp.dpnp_array.dpnp_array.nonzero", "dpnp.dpnp_array.dpnp_array.partition", "dpnp.dpnp_array.dpnp_array.prod", "dpnp.dpnp_array.dpnp_array.put", "dpnp.dpnp_array.dpnp_array.ravel", "dpnp.dpnp_array.dpnp_array.real", "dpnp.dpnp_array.dpnp_array.repeat", "dpnp.dpnp_array.dpnp_array.reshape", "dpnp.dpnp_array.dpnp_array.round", "dpnp.dpnp_array.dpnp_array.searchsorted", "dpnp.dpnp_array.dpnp_array.shape", "dpnp.dpnp_array.dpnp_array.size", "dpnp.dpnp_array.dpnp_array.sort", "dpnp.dpnp_array.dpnp_array.squeeze", "dpnp.dpnp_array.dpnp_array.std", "dpnp.dpnp_array.dpnp_array.strides", "dpnp.dpnp_array.dpnp_array.sum", "dpnp.dpnp_array.dpnp_array.swapaxes", "dpnp.dpnp_array.dpnp_array.sycl_context", "dpnp.dpnp_array.dpnp_array.sycl_device", "dpnp.dpnp_array.dpnp_array.sycl_queue", "dpnp.dpnp_array.dpnp_array.take", "dpnp.dpnp_array.dpnp_array.to_device", "dpnp.dpnp_array.dpnp_array.trace", "dpnp.dpnp_array.dpnp_array.transpose", "dpnp.dpnp_array.dpnp_array.usm_type", "dpnp.dpnp_array.dpnp_array.var", "dpnp.dsplit", "dpnp.dstack", "dpnp.dtype", "dpnp.dtype.alignment", "dpnp.dtype.base", "dpnp.dtype.byteorder", "dpnp.dtype.char", "dpnp.dtype.descr", "dpnp.dtype.fields", "dpnp.dtype.flags", "dpnp.dtype.hasobject", "dpnp.dtype.isalignedstruct", "dpnp.dtype.isbuiltin", "dpnp.dtype.isnative", "dpnp.dtype.itemsize", "dpnp.dtype.kind", "dpnp.dtype.metadata", "dpnp.dtype.name", "dpnp.dtype.names", "dpnp.dtype.ndim", "dpnp.dtype.newbyteorder", "dpnp.dtype.num", "dpnp.dtype.shape", "dpnp.dtype.str", "dpnp.dtype.subdtype", "dpnp.dtype.type", "dpnp.ediff1d", "dpnp.einsum", "dpnp.einsum_path", "dpnp.empty", "dpnp.empty_like", "dpnp.equal", "dpnp.erf", "dpnp.exp", "dpnp.exp2", "dpnp.expand_dims", "dpnp.expm1", "dpnp.extract", "dpnp.eye", "dpnp.fabs", "dpnp.fft.fft", "dpnp.fft.fft2", "dpnp.fft.fftfreq", "dpnp.fft.fftn", "dpnp.fft.fftshift", "dpnp.fft.hfft", "dpnp.fft.ifft", "dpnp.fft.ifft2", "dpnp.fft.ifftn", "dpnp.fft.ifftshift", "dpnp.fft.ihfft", "dpnp.fft.irfft", "dpnp.fft.irfft2", "dpnp.fft.irfftn", "dpnp.fft.rfft", "dpnp.fft.rfft2", "dpnp.fft.rfftfreq", "dpnp.fft.rfftn", "dpnp.fill_diagonal", "dpnp.finfo", "dpnp.fix", "dpnp.flatiter", "dpnp.flatnonzero", "dpnp.flip", "dpnp.fliplr", "dpnp.flipud", "dpnp.float_power", "dpnp.floor", "dpnp.floor_divide", "dpnp.fmax", "dpnp.fmin", "dpnp.fmod", "dpnp.from_dlpack", "dpnp.frombuffer", "dpnp.fromfile", "dpnp.fromfunction", "dpnp.fromiter", "dpnp.fromstring", "dpnp.full", "dpnp.full_like", "dpnp.gcd", "dpnp.geomspace", "dpnp.get_include", "dpnp.gradient", "dpnp.greater", "dpnp.greater_equal", "dpnp.heaviside", "dpnp.histogram", "dpnp.histogram_bin_edges", "dpnp.hsplit", "dpnp.hstack", "dpnp.hypot", "dpnp.i0", "dpnp.identity", "dpnp.iinfo", "dpnp.imag", "dpnp.indices", "dpnp.inner", "dpnp.insert", "dpnp.invert", "dpnp.isclose", "dpnp.iscomplex", "dpnp.iscomplexobj", "dpnp.isfinite", "dpnp.isfortran", "dpnp.isinf", "dpnp.isnan", "dpnp.isneginf", "dpnp.isposinf", "dpnp.isreal", "dpnp.isrealobj", "dpnp.isscalar", "dpnp.issubdtype", "dpnp.ix_", "dpnp.kron", "dpnp.lcm", "dpnp.ldexp", "dpnp.left_shift", "dpnp.less", "dpnp.less_equal", "dpnp.linalg.cholesky", "dpnp.linalg.cond", "dpnp.linalg.cross", "dpnp.linalg.det", "dpnp.linalg.diagonal", "dpnp.linalg.eig", "dpnp.linalg.eigh", "dpnp.linalg.eigvals", "dpnp.linalg.eigvalsh", "dpnp.linalg.inv", "dpnp.linalg.lstsq", "dpnp.linalg.matmul", "dpnp.linalg.matrix_norm", "dpnp.linalg.matrix_power", "dpnp.linalg.matrix_rank", "dpnp.linalg.multi_dot", "dpnp.linalg.norm", "dpnp.linalg.outer", "dpnp.linalg.pinv", "dpnp.linalg.qr", "dpnp.linalg.slogdet", "dpnp.linalg.solve", "dpnp.linalg.svd", "dpnp.linalg.svdvals", "dpnp.linalg.tensordot", "dpnp.linalg.tensorinv", "dpnp.linalg.tensorsolve", "dpnp.linalg.trace", "dpnp.linalg.vecdot", "dpnp.linalg.vector_norm", "dpnp.linspace", "dpnp.loadtxt", "dpnp.log", "dpnp.log10", "dpnp.log1p", "dpnp.log2", "dpnp.logaddexp", "dpnp.logaddexp2", "dpnp.logical_and", "dpnp.logical_not", "dpnp.logical_or", "dpnp.logical_xor", "dpnp.logspace", "dpnp.logsumexp", "dpnp.mask_indices", "dpnp.matmul", "dpnp.matrix_transpose", "dpnp.max", "dpnp.maximum", "dpnp.mean", "dpnp.median", "dpnp.meshgrid", "dpnp.mgrid", "dpnp.min", "dpnp.minimum", "dpnp.mod", "dpnp.modf", "dpnp.moveaxis", "dpnp.multiply", "dpnp.nan_to_num", "dpnp.nanargmax", "dpnp.nanargmin", "dpnp.nancumprod", "dpnp.nancumsum", "dpnp.nanmax", "dpnp.nanmean", "dpnp.nanmin", "dpnp.nanprod", "dpnp.nanstd", "dpnp.nansum", "dpnp.nanvar", "dpnp.ndarray", "dpnp.ndarray.T", "dpnp.ndarray.__abs__", "dpnp.ndarray.__add__", "dpnp.ndarray.__and__", "dpnp.ndarray.__bool__", "dpnp.ndarray.__complex__", "dpnp.ndarray.__copy__", "dpnp.ndarray.__eq__", "dpnp.ndarray.__float__", "dpnp.ndarray.__floordiv__", "dpnp.ndarray.__ge__", "dpnp.ndarray.__getitem__", "dpnp.ndarray.__gt__", "dpnp.ndarray.__iadd__", "dpnp.ndarray.__iand__", "dpnp.ndarray.__ifloordiv__", "dpnp.ndarray.__ilshift__", "dpnp.ndarray.__imatmul__", "dpnp.ndarray.__imod__", "dpnp.ndarray.__imul__", "dpnp.ndarray.__int__", "dpnp.ndarray.__invert__", "dpnp.ndarray.__ior__", "dpnp.ndarray.__ipow__", "dpnp.ndarray.__irshift__", "dpnp.ndarray.__isub__", "dpnp.ndarray.__itruediv__", "dpnp.ndarray.__ixor__", "dpnp.ndarray.__le__", "dpnp.ndarray.__len__", "dpnp.ndarray.__lshift__", "dpnp.ndarray.__lt__", "dpnp.ndarray.__matmul__", "dpnp.ndarray.__mod__", "dpnp.ndarray.__mul__", "dpnp.ndarray.__ne__", "dpnp.ndarray.__neg__", "dpnp.ndarray.__new__", "dpnp.ndarray.__or__", "dpnp.ndarray.__pos__", "dpnp.ndarray.__pow__", "dpnp.ndarray.__radd__", "dpnp.ndarray.__rand__", "dpnp.ndarray.__repr__", "dpnp.ndarray.__rfloordiv__", "dpnp.ndarray.__rlshift__", "dpnp.ndarray.__rmatmul__", "dpnp.ndarray.__rmod__", "dpnp.ndarray.__rmul__", "dpnp.ndarray.__ror__", "dpnp.ndarray.__rpow__", "dpnp.ndarray.__rrshift__", "dpnp.ndarray.__rshift__", "dpnp.ndarray.__rsub__", "dpnp.ndarray.__rtruediv__", "dpnp.ndarray.__rxor__", "dpnp.ndarray.__setitem__", "dpnp.ndarray.__str__", "dpnp.ndarray.__sub__", "dpnp.ndarray.__truediv__", "dpnp.ndarray.__xor__", "dpnp.ndarray.all", "dpnp.ndarray.any", "dpnp.ndarray.argmax", "dpnp.ndarray.argmin", "dpnp.ndarray.argsort", "dpnp.ndarray.asnumpy", "dpnp.ndarray.astype", "dpnp.ndarray.choose", "dpnp.ndarray.clip", "dpnp.ndarray.compress", "dpnp.ndarray.conj", "dpnp.ndarray.conjugate", "dpnp.ndarray.copy", "dpnp.ndarray.cumprod", "dpnp.ndarray.cumsum", "dpnp.ndarray.device", "dpnp.ndarray.diagonal", "dpnp.ndarray.dot", "dpnp.ndarray.dtype", "dpnp.ndarray.fill", "dpnp.ndarray.flags", "dpnp.ndarray.flat", "dpnp.ndarray.flatten", "dpnp.ndarray.get_array", "dpnp.ndarray.imag", "dpnp.ndarray.item", "dpnp.ndarray.itemsize", "dpnp.ndarray.mT", "dpnp.ndarray.max", "dpnp.ndarray.mean", "dpnp.ndarray.min", "dpnp.ndarray.nbytes", "dpnp.ndarray.ndim", "dpnp.ndarray.nonzero", "dpnp.ndarray.partition", "dpnp.ndarray.prod", "dpnp.ndarray.put", "dpnp.ndarray.ravel", "dpnp.ndarray.real", "dpnp.ndarray.repeat", "dpnp.ndarray.reshape", "dpnp.ndarray.round", "dpnp.ndarray.searchsorted", "dpnp.ndarray.shape", "dpnp.ndarray.size", "dpnp.ndarray.sort", "dpnp.ndarray.squeeze", "dpnp.ndarray.std", "dpnp.ndarray.strides", "dpnp.ndarray.sum", "dpnp.ndarray.swapaxes", "dpnp.ndarray.sycl_context", "dpnp.ndarray.sycl_device", "dpnp.ndarray.sycl_queue", "dpnp.ndarray.take", "dpnp.ndarray.to_device", "dpnp.ndarray.trace", "dpnp.ndarray.transpose", "dpnp.ndarray.usm_type", "dpnp.ndarray.var", "dpnp.ndim", "dpnp.ndindex", "dpnp.negative", "dpnp.nextafter", "dpnp.nonzero", "dpnp.not_equal", "dpnp.ogrid", "dpnp.ones", "dpnp.ones_like", "dpnp.outer", "dpnp.pad", "dpnp.partition", "dpnp.permute_dims", "dpnp.place", "dpnp.positive", "dpnp.pow", "dpnp.power", "dpnp.prod", "dpnp.proj", "dpnp.ptp", "dpnp.put", "dpnp.put_along_axis", "dpnp.putmask", "dpnp.rad2deg", "dpnp.radians", "dpnp.random.RandomState", "dpnp.random.RandomState.get_state", "dpnp.random.RandomState.get_sycl_device", "dpnp.random.RandomState.get_sycl_queue", "dpnp.random.RandomState.normal", "dpnp.random.RandomState.rand", "dpnp.random.RandomState.randint", "dpnp.random.RandomState.randn", "dpnp.random.RandomState.random_sample", "dpnp.random.RandomState.standard_normal", "dpnp.random.RandomState.uniform", "dpnp.random.beta", "dpnp.random.binomial", "dpnp.random.bytes", "dpnp.random.chisquare", "dpnp.random.choice", "dpnp.random.dirichlet", "dpnp.random.exponential", "dpnp.random.f", "dpnp.random.gamma", "dpnp.random.geometric", "dpnp.random.gumbel", "dpnp.random.hypergeometric", "dpnp.random.laplace", "dpnp.random.logistic", "dpnp.random.lognormal", "dpnp.random.logseries", "dpnp.random.multinomial", "dpnp.random.multivariate_normal", "dpnp.random.negative_binomial", "dpnp.random.noncentral_chisquare", "dpnp.random.noncentral_f", "dpnp.random.normal", "dpnp.random.pareto", "dpnp.random.permutation", "dpnp.random.poisson", "dpnp.random.power", "dpnp.random.rand", "dpnp.random.randint", "dpnp.random.randn", "dpnp.random.random", "dpnp.random.random_integers", "dpnp.random.random_sample", "dpnp.random.ranf", "dpnp.random.rayleigh", "dpnp.random.sample", "dpnp.random.seed", "dpnp.random.shuffle", "dpnp.random.standard_cauchy", "dpnp.random.standard_exponential", "dpnp.random.standard_gamma", "dpnp.random.standard_normal", "dpnp.random.standard_t", "dpnp.random.triangular", "dpnp.random.uniform", "dpnp.random.vonmises", "dpnp.random.wald", "dpnp.random.weibull", "dpnp.random.zipf", "dpnp.ravel", "dpnp.ravel_multi_index", "dpnp.real", "dpnp.real_if_close", "dpnp.reciprocal", "dpnp.reduce_hypot", "dpnp.remainder", "dpnp.repeat", "dpnp.require", "dpnp.reshape", "dpnp.resize", "dpnp.result_type", "dpnp.right_shift", "dpnp.rint", "dpnp.roll", "dpnp.rollaxis", "dpnp.rot90", "dpnp.round", "dpnp.row_stack", "dpnp.rsqrt", "dpnp.searchsorted", "dpnp.select", "dpnp.shape", "dpnp.sign", "dpnp.signbit", "dpnp.sin", "dpnp.sinc", "dpnp.sinh", "dpnp.size", "dpnp.sort", "dpnp.sort_complex", "dpnp.spacing", "dpnp.split", "dpnp.sqrt", "dpnp.square", "dpnp.squeeze", "dpnp.stack", "dpnp.std", "dpnp.subtract", "dpnp.sum", "dpnp.swapaxes", "dpnp.take", "dpnp.take_along_axis", "dpnp.tan", "dpnp.tanh", "dpnp.tensordot", "dpnp.tile", "dpnp.trace", "dpnp.transpose", "dpnp.trapezoid", "dpnp.tri", "dpnp.tril", "dpnp.tril_indices", "dpnp.tril_indices_from", "dpnp.trim_zeros", "dpnp.triu", "dpnp.triu_indices", "dpnp.triu_indices_from", "dpnp.true_divide", "dpnp.trunc", "dpnp.unique", "dpnp.unravel_index", "dpnp.unstack", "dpnp.unwrap", "dpnp.vander", "dpnp.var", "dpnp.vdot", "dpnp.vecdot", "dpnp.vsplit", "dpnp.vstack", "dpnp.where", "dpnp.zeros", "dpnp.zeros_like", "API Reference", "Indexing routines", "Linear algebra", "Logic functions", "Array manipulation routines", "Mathematical functions", "Miscellaneous routines", "Multi-Dimensional Array (ndarray)", "Polynomials", "Random sampling (<code class=\"docutils literal notranslate\"><span class=\"pre\">dpnp.random</span></code>)", "Routines", "Sorting, searching, and counting", "Special Functions", "Statistics", "Universal Functions (ufunc)"], "titleterms": {"The": 7, "__abs__": 367, "__add__": 368, "__and__": 369, "__bool__": 370, "__complex__": 371, "__copy__": 372, "__eq__": 373, "__float__": 374, "__floordiv__": 375, "__ge__": 376, "__getitem__": 377, "__gt__": 378, "__iadd__": 379, "__iand__": 380, "__ifloordiv__": 381, "__ilshift__": 382, "__imatmul__": 383, "__imod__": 384, "__imul__": 385, "__int__": 386, "__invert__": 387, "__ior__": 388, "__ipow__": 389, "__irshift__": 390, "__isub__": 391, "__itruediv__": 392, "__ixor__": 393, "__le__": 394, "__len__": 395, "__lshift__": 396, "__lt__": 397, "__matmul__": 398, "__mod__": 399, "__mul__": 400, "__ne__": 401, "__neg__": 402, "__new__": 403, "__or__": 404, "__pos__": 405, "__pow__": 406, "__radd__": 407, "__rand__": 408, "__repr__": 409, "__rfloordiv__": 410, "__rlshift__": 411, "__rmatmul__": 412, "__rmod__": 413, "__rmul__": 414, "__ror__": 415, "__rpow__": 416, "__rrshift__": 417, "__rshift__": 418, "__rsub__": 419, "__rtruediv__": 420, "__rxor__": 421, "__setitem__": 422, "__str__": 423, "__sub__": 424, "__truediv__": 425, "__xor__": 426, "ab": 12, "absolut": 13, "aco": 14, "acosh": 15, "ad": 648, "add": 16, "algebra": [6, 646], "align": 177, "all": [17, 114, 427], "allclos": 18, "amax": 19, "amin": 20, "angl": 21, "ani": [22, 115, 428], "api": [1, 644], "append": 23, "apply_along_axi": 24, "apply_over_ax": 25, "arang": 26, "arcco": 27, "arccosh": 28, "arcsin": 29, "arcsinh": 30, "arctan": 31, "arctan2": 32, "arctanh": 33, "argmax": [34, 116, 429], "argmin": [35, 117, 430], "argsort": [36, 118, 431], "argwher": 37, "arithmet": [649, 651, 652], "around": 38, "arrai": [6, 7, 9, 39, 645, 647, 648, 651], "array_equ": 40, "array_equiv": 41, "array_split": 42, "asanyarrai": 43, "asarrai": 44, "asarray_chkfinit": 45, "ascontiguousarrai": 46, "asfarrai": 47, "asfortranarrai": 48, "asin": 49, "asinh": 50, "asnumpi": [51, 119, 432], "astyp": [52, 120, 433], "atan": 53, "atan2": 54, "atanh": 55, "atleast_1d": 56, "atleast_2d": 57, "atleast_3d": 58, "attribut": 651, "avail": [9, 658], "averag": [59, 657], "backend": 1, "background": 10, "base": 178, "basic": [648, 652], "beta": 523, "binary_repr": 60, "bincount": 61, "binomi": 524, "bit": [5, 658], "bitwise_and": 62, "bitwise_invert": 63, "bitwise_left_shift": 64, "bitwise_not": 65, "bitwise_or": 66, "bitwise_right_shift": 67, "bitwise_xor": 68, "broadcast_arrai": 69, "broadcast_shap": 70, "broadcast_to": 71, "build": [4, 7], "byte": 525, "byte_bound": 72, "byteord": 179, "c": 1, "calcul": 651, "can_cast": 73, "cbrt": 74, "ceil": 75, "chang": 648, "channel": 4, "char": 180, "chisquar": 526, "choic": 527, "choleski": 294, "choos": [76, 121, 434], "class": 7, "clip": [77, 122, 435], "co": 90, "column_stack": 78, "comparison": [6, 647, 651, 658], "complex": 649, "compress": [79, 123, 436], "concat": 80, "concaten": 81, "cond": 295, "conda": 4, "conj": [82, 124, 437], "conjug": [83, 125, 438], "construct": 651, "control": 0, "convers": 651, "convolv": 84, "copi": [85, 126, 439], "copysign": 86, "copyto": 87, "corrcoef": 88, "correl": [89, 657], "cosh": 91, "count": 655, "count_nonzero": 92, "cov": 93, "creat": 8, "creation": 7, "cross": [94, 296], "cumlogsumexp": 95, "cumprod": [96, 127, 440], "cumsum": [97, 128, 441], "cumulative_prod": 98, "cumulative_sum": 99, "cupi": 6, "custom": 4, "data": [0, 2, 7, 8, 9, 645, 651, 653], "decomposit": 646, "deg2rad": 100, "degre": 101, "delet": 102, "descr": 181, "det": 297, "detail": 10, "develop": 2, "devic": [4, 129, 442], "diag": 103, "diag_indic": 104, "diag_indices_from": 105, "diagflat": 106, "diagon": [107, 130, 298, 443], "diff": 108, "differ": 649, "digit": 109, "dimens": [10, 648], "dimension": [6, 651], "dirichlet": 528, "discret": [6, 10], "distribut": 653, "divid": 110, "dot": [111, 131, 444], "dpnp": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 653], "dpnp_arrai": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "driver": 4, "dsplit": 174, "dstack": 175, "dtype": [132, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 445], "ediff1d": 200, "eig": 299, "eigenvalu": 646, "eigh": 300, "eigval": 301, "eigvalsh": 302, "einsum": 201, "einsum_path": 202, "element": [5, 648], "empti": 203, "empty_lik": 204, "equal": 205, "equat": 646, "erf": 206, "error": 656, "exampl": [0, 4], "except": 646, "exist": 7, "exp": 207, "exp2": 208, "expand_dim": 209, "expm1": 210, "expon": 649, "exponenti": 529, "extens": 2, "extract": 211, "extrema": 649, "ey": 212, "f": 530, "fab": 213, "fft": [10, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "fft2": 215, "fftfreq": 216, "fftn": 217, "fftshift": 218, "field": 182, "fill": [133, 446], "fill_diagon": 232, "find": 649, "finfo": 233, "fix": 234, "flag": [134, 183, 447], "flat": [135, 448], "flatit": 235, "flatnonzero": 236, "flatten": [136, 449], "flip": 237, "fliplr": 238, "flipud": 239, "float": [649, 658], "float_pow": 240, "floor": 241, "floor_divid": 242, "fmax": 243, "fmin": 244, "fmod": 245, "format": 5, "fourier": [6, 10], "from": [4, 7], "from_dlpack": 246, "frombuff": 247, "fromfil": 248, "fromfunct": 249, "fromit": 250, "fromstr": 251, "full": 252, "full_lik": 253, "function": [11, 647, 649, 656, 658], "gamma": 531, "gcd": 254, "gener": [645, 653], "geometr": 532, "geomspac": 255, "get_arrai": [137, 450], "get_includ": 256, "get_stat": 513, "get_sycl_devic": 514, "get_sycl_queu": 515, "gradient": 257, "greater": 258, "greater_equ": 259, "guid": 4, "gumbel": 533, "handl": 649, "hasobject": 184, "heavisid": 260, "helper": 10, "hermitian": 10, "hfft": 219, "higher": 10, "histogram": [261, 657], "histogram_bin_edg": 262, "hsplit": 263, "hstack": 264, "hyperbol": 649, "hypergeometr": 534, "hypot": 265, "i0": 266, "ident": 267, "ifft": 220, "ifft2": 221, "ifftn": 222, "ifftshift": 223, "ihfft": 224, "iinfo": 268, "imag": [138, 269, 451], "implement": 10, "index": [645, 651], "indic": 270, "infin": 647, "inform": [2, 8, 10], "inner": 271, "insert": [272, 645], "instal": 4, "intel": 4, "interplai": 0, "interpret": 4, "inv": 303, "invert": 273, "irfft": 225, "irfft2": 226, "irfftn": 227, "isalignedstruct": 185, "isbuiltin": 186, "isclos": 274, "iscomplex": 275, "iscomplexobj": 276, "isfinit": 277, "isfortran": 278, "isinf": 279, "isn": 187, "isnan": 280, "isneginf": 281, "isposinf": 282, "isreal": 283, "isrealobj": 284, "isscalar": 285, "issubdtyp": 286, "item": [139, 452, 651], "items": [140, 188, 453], "iter": 645, "ix_": 287, "join": 648, "kind": [189, 648], "kron": 288, "laplac": 535, "layout": 651, "lcm": 289, "ldexp": 290, "left_shift": 291, "less": 292, "less_equ": 293, "level": 6, "librari": 0, "like": [645, 648], "linalg": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "linear": [6, 646], "linspac": 324, "loadtxt": 325, "log": 326, "log10": 327, "log1p": 328, "log2": 329, "logaddexp": 330, "logaddexp2": 331, "logarithm": 649, "logic": 647, "logical_and": 332, "logical_not": 333, "logical_or": 334, "logical_xor": 335, "logist": 536, "lognorm": 537, "logseri": 538, "logspac": 336, "logsumexp": 337, "lstsq": 304, "manipul": [648, 651], "mask_indic": 338, "math": 658, "mathemat": 649, "matmul": [305, 339], "matric": 7, "matrix": [7, 646, 651], "matrix_norm": 306, "matrix_pow": 307, "matrix_rank": 308, "matrix_transpos": 340, "max": [142, 341, 455], "maximum": 342, "mean": [143, 343, 456], "median": 344, "memori": 651, "meshgrid": 345, "metadata": 190, "method": 651, "mgrid": 346, "min": [144, 347, 457], "minimum": 348, "miscellan": [8, 649, 650], "mod": 349, "modf": 350, "modul": [6, 652], "moveaxi": 351, "mt": [141, 454], "multi": [6, 651], "multi_dot": 309, "multinomi": 539, "multipl": 651, "multipli": 352, "multivariate_norm": 540, "name": [191, 192], "nan": 647, "nan_to_num": 353, "nanargmax": 354, "nanargmin": 355, "nancumprod": 356, "nancumsum": 357, "nanmax": 358, "nanmean": 359, "nanmin": 360, "nanprod": 361, "nanstd": 362, "nansum": 363, "nanvar": 364, "nbyte": [145, 458], "ndarrai": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 651], "ndim": [146, 193, 459, 487], "ndindex": 488, "neg": 489, "negative_binomi": 541, "newbyteord": 194, "nextaft": 490, "noncentral_chisquar": 542, "noncentral_f": 543, "nonzero": [147, 460, 491], "norm": [310, 646], "normal": [10, 516, 544], "not_equ": 492, "num": 195, "number": [646, 648, 649], "numer": 7, "numpi": [2, 6], "ogrid": 493, "ones": 494, "ones_lik": 495, "oper": [5, 645, 646, 647, 648, 649, 651, 658], "order": 657, "other": [646, 649, 651], "outer": [311, 496], "output": 5, "over": 645, "overview": 3, "pack": 5, "packag": [4, 652], "pad": 497, "parallel": [0, 2], "pareto": 545, "partit": [148, 461, 498], "permut": [546, 653], "permute_dim": 499, "pinv": 312, "place": 500, "point": 649, "poisson": 547, "poly1d": 652, "polynomi": 652, "polyutil": 652, "posit": 501, "pow": 502, "power": [503, 548], "prod": [149, 462, 504], "product": [646, 649], "program": 11, "proj": 505, "ptp": 506, "put": [150, 463, 507], "put_along_axi": 508, "putmask": 509, "python": 4, "qr": 313, "quick": 4, "r": 4, "rad2deg": 510, "radian": 511, "rand": [517, 549], "randint": [518, 550], "randn": [519, 551], "random": [6, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 653], "random_integ": 553, "random_sampl": [520, 554], "randomst": [512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "ranf": 555, "rang": 7, "ration": 649, "ravel": [151, 464, 571], "ravel_multi_index": 572, "rayleigh": 556, "real": [10, 152, 465, 573], "real_if_clos": 574, "rearrang": 648, "reciproc": 575, "reduce_hypot": 576, "refer": [1, 644], "remaind": 577, "remov": 648, "repeat": [153, 466, 578], "requir": 579, "reshap": [154, 467, 580], "resiz": 581, "result_typ": 582, "rfft": 228, "rfft2": 229, "rfftfreq": 230, "rfftn": 231, "right_shift": 583, "rint": 584, "roll": 585, "rollaxi": 586, "rot90": 587, "round": [155, 468, 588, 649], "routin": [7, 8, 10, 645, 648, 649, 650, 654], "row_stack": 589, "rsqrt": 590, "sampl": [6, 557, 653], "scikit": 4, "search": 655, "searchsort": [156, 469, 591], "seed": 558, "select": [592, 651], "shape": [7, 157, 196, 470, 593, 648, 651], "shuffl": 559, "sign": 594, "signbit": 595, "simpl": 653, "sin": 596, "sinc": 597, "sinh": 598, "size": [158, 471, 599], "slogdet": 314, "solv": [315, 646], "sort": [159, 472, 600, 655], "sort_complex": 601, "space": 602, "special": [649, 651, 656], "split": [603, 648], "sqrt": 604, "squar": 605, "squeez": [160, 473, 606], "stack": 607, "standard": 10, "standard_cauchi": 560, "standard_exponenti": 561, "standard_gamma": 562, "standard_norm": [521, 563], "standard_t": 564, "start": 4, "statist": 657, "std": [161, 474, 608], "str": 197, "stride": [162, 475], "subdtyp": 198, "subtract": 609, "sum": [163, 476, 610, 649], "summari": 6, "svd": 316, "svdval": 317, "swapax": [164, 477, 611], "sycl": 4, "sycl_context": [165, 478], "sycl_devic": [166, 479], "sycl_queu": [167, 480], "t": [113, 366], "tabl": 6, "take": [168, 481, 612], "take_along_axi": 613, "tan": 614, "tanh": 615, "target": 4, "tensordot": [318, 616], "tensorinv": 319, "tensorsolv": 320, "test": [4, 8, 647], "tile": [617, 648], "to_devic": [169, 482], "trace": [170, 321, 483, 618], "transform": [6, 10], "transpos": [171, 484, 619, 648], "trapezoid": 620, "tri": 621, "triangular": 565, "trigonometr": [649, 658], "tril": 622, "tril_indic": 623, "tril_indices_from": 624, "trim_zero": 625, "triu": 626, "triu_indic": 627, "triu_indices_from": 628, "true_divid": 629, "trunc": 630, "truth": 647, "twiddl": 658, "type": [8, 9, 199, 647, 651], "ufunc": 658, "uniform": [522, 566], "uniqu": 631, "univers": 658, "unravel_index": 632, "unstack": 633, "unwrap": 634, "usm_typ": [172, 485], "util": 650, "valu": [7, 647], "vander": 635, "var": [173, 486, 636], "varianc": 657, "vdot": 637, "vecdot": [322, 638], "vector": 646, "vector_norm": 323, "vonmis": 567, "vsplit": 639, "vstack": 640, "wald": 568, "weibul": 569, "where": 641, "wise": 5, "zero": 642, "zeros_lik": 643, "zipf": 570}})